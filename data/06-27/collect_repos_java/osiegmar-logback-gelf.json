{
    "repository": "osiegmar/logback-gelf",
    "stars": 187,
    "language": "java",
    "size": 579,
    "clone_url": "https://github.com/osiegmar/logback-gelf.git",
    "timestamp": "2023-06-29T12:15:31.005942Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "customThreadNameKey()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "rewriteStaticField()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "rootExceptionWithoutCause()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "rootExceptionWithCause()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "[1] null",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "[2] ",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "simple()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "customLoggerNameKey()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "nestedExceptionShouldNotFail()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "[1] missing colon",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "[2] id:value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "[3] $key:value",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "[4] #key:value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "[5] new$key:value",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "customLevelNameKey()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "multipleMarker()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "addFieldMapper()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "complex()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "defaultValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "noRootException()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "exception()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "singleMarker()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "numericValueAsNumber()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "numericValueAsString()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "newline()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfEncoderTest",
                "name": "rootExceptionTurnedOff()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.AddressResolverTest",
                "name": "test()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfTcpTlsAppenderTest",
                "name": "simple()",
                "time": 0.207,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfTcpTlsAppenderTest",
                "name": "defaultValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfTcpAppenderTest",
                "name": "simple()",
                "time": 0.73,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfTcpAppenderTest",
                "name": "defaultValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfMessageTest",
                "name": "simple()",
                "time": 0.094,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfMessageTest",
                "name": "complete()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfMessageTest",
                "name": "filterEmptyFullMessage()",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.HostnameVerifierTest",
                "name": "invalidCN()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.HostnameVerifierTest",
                "name": "testEmpty()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.HostnameVerifierTest",
                "name": "testPartial()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.HostnameVerifierTest",
                "name": "testCase()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.HostnameVerifierTest",
                "name": "testNull()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.HostnameVerifierTest",
                "name": "testPuny()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.HostnameVerifierTest",
                "name": "testWildcard()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.HostnameVerifierTest",
                "name": "testSimple()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfUdpChunkerTest",
                "name": "singleChunk()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfUdpChunkerTest",
                "name": "removeNotPermitted()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfUdpChunkerTest",
                "name": "multipleChunks()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfUdpChunkerTest",
                "name": "[1] 12",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfUdpChunkerTest",
                "name": "[2] 65468",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.SimpleJsonEncoderTest",
                "name": "solidus()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.SimpleJsonEncoderTest",
                "name": "appendToJSONClosed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.SimpleJsonEncoderTest",
                "name": "number()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.SimpleJsonEncoderTest",
                "name": "string()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.SimpleJsonEncoderTest",
                "name": "unicode()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.SimpleJsonEncoderTest",
                "name": "unquoted()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.SimpleJsonEncoderTest",
                "name": "tab()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.SimpleJsonEncoderTest",
                "name": "quote()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.SimpleJsonEncoderTest",
                "name": "appendToUnquotedJSONClosed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.SimpleJsonEncoderTest",
                "name": "carriageReturn()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.SimpleJsonEncoderTest",
                "name": "formFeed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.SimpleJsonEncoderTest",
                "name": "multipleCloses()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.SimpleJsonEncoderTest",
                "name": "multipleFields()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.SimpleJsonEncoderTest",
                "name": "ignoreNullValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.SimpleJsonEncoderTest",
                "name": "reverseSolidus()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.SimpleJsonEncoderTest",
                "name": "backspace()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.SimpleJsonEncoderTest",
                "name": "newline()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.XmlConfigurationTest",
                "name": "tcpTlsConfiguration()",
                "time": 0.119,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.XmlConfigurationTest",
                "name": "udpConfiguration()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.XmlConfigurationTest",
                "name": "tcpConfiguration()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.CustomGelfEncoderTest",
                "name": "custom()",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.MessageIdSupplierTest",
                "name": "machinePart()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.MessageIdSupplierTest",
                "name": "test()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfUdpAppenderTest",
                "name": "simple()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.GelfUdpAppenderTest",
                "name": "compression()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.pool.SimpleObjectPoolTest",
                "name": "invalidate()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.pool.SimpleObjectPoolTest",
                "name": "infinitePollWaitTime()",
                "time": 0.203,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.pool.SimpleObjectPoolTest",
                "name": "availableObjectsExhausted()",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.pool.SimpleObjectPoolTest",
                "name": "infiniteLifeTime()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.pool.SimpleObjectPoolTest",
                "name": "maxLastBorrowed()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.pool.SimpleObjectPoolTest",
                "name": "simple()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.pool.SimpleObjectPoolTest",
                "name": "validatePoolSize()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.pool.SimpleObjectPoolTest",
                "name": "recycleByLifeTime()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.CustomX509TrustManagerTest",
                "name": "expired()",
                "time": 0.374,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.CustomX509TrustManagerTest",
                "name": "selfSigned()",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.CustomX509TrustManagerTest",
                "name": "validCert()",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.CustomX509TrustManagerTest",
                "name": "caSigned()",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.CustomX509TrustManagerTest",
                "name": "nameMismatch()",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.CustomX509TrustManagerTest",
                "name": "clientValidation()",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.CustomX509TrustManagerTest",
                "name": "acceptedIssuers()",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.siegmar.logbackgelf.InetUtilTest",
                "name": "localHostnameLookup()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[30f6bca8-048f-4923-88ce-d4a8168bbd45/build] \ud83d\ude80  Start image=crawlergpt:latest\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/osiegmar-logback-gelf] user=0 workdir=\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v2\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v2\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build] \u2b50 Run Main actions/checkout@v2\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \u2705  Success - Main actions/checkout@v2\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build] \u2b50 Run Main Set up Java 8\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/316a1302-f5fb-4fa5-8227-f8853fedabdd/act/actions-setup-java@v2/ dst=/var/run/act/actions/actions-setup-java@v2/\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v2/] user=0 workdir=\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v2/dist/setup/index.js] user= workdir=\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | Trying to resolve the latest version from remote\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | Resolved latest version as 8.0.372+7\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | Trying to download...\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | Downloading Java 8.0.372+7 (Temurin-Hotspot) from https://github.com/adoptium/temurin8-binaries/releases/download/jdk8u372-b07/OpenJDK8U-jdk_x64_linux_hotspot_8u372b07.tar.gz ...\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Downloading https://github.com/adoptium/temurin8-binaries/releases/download/jdk8u372-b07/OpenJDK8U-jdk_x64_linux_hotspot_8u372b07.tar.gz\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Destination /tmp/ab204452-7884-45e2-855a-b23be93f141d\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::download complete\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | Extracting Java archive...\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Checking tar --version\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/cd42d0a7-1841-4027-b78d-a6cb7176d18b -f /tmp/ab204452-7884-45e2-855a-b23be93f141d\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Caching tool Java_Temurin-Hotspot_jdk 8.0.372-7 x64\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::source dir: /tmp/cd42d0a7-1841-4027-b78d-a6cb7176d18b/jdk8u372-b07\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/8.0.372-7/x64\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::finished caching tool\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | Java 8.0.372+7 was downloaded\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | Setting Java 8.0.372+7 as the default\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | \n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | Java configuration:\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   |   Distribution: temurin\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   |   Version: 8.0.372+7\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   |   Path: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/8.0.372-7/x64\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | \n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \u2753 add-matcher /run/act/actions/actions-setup-java@v2/.github/java.json\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | Creating settings.xml with server-id: github\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | Writing to /home/runneradmin/.m2/settings.xml\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Search path '/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/osiegmar-logback-gelf'\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/osiegmar-logback-gelf/build.gradle\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/osiegmar-logback-gelf/gradle/wrapper/gradle-wrapper.properties\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/osiegmar-logback-gelf/settings.gradle\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Found 3 files to hash.\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::primary key is setup-java-Linux-gradle-1144245458f561e353c8eb0d09f374948c0e428c972905032d1d1fbc2afb02f9\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Resolved Keys:\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::[\"setup-java-Linux-gradle-1144245458f561e353c8eb0d09f374948c0e428c972905032d1d1fbc2afb02f9\",\"setup-java-Linux-gradle\"]\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Checking zstd --version\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:38355/_apis/artifactcache/cache?keys=setup-java-Linux-gradle-1144245458f561e353c8eb0d09f374948c0e428c972905032d1d1fbc2afb02f9%252Csetup-java-Linux-gradle&version=09ba73ab57fcd4582177c49695fd068c4719cc0cab32d2335af27897fd9c08a0\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | gradle cache is not found\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \u2705  Success - Main Set up Java 8\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/8.0.372-7/x64\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \u2699  ::set-output:: distribution=Temurin-Hotspot\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \u2699  ::set-output:: path=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/8.0.372-7/x64\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \u2699  ::set-output:: version=8.0.372+7\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/8.0.372-7/x64/bin\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build] \u2b50 Run Main Build with Gradle\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | Downloading https://services.gradle.org/distributions/gradle-7.2-bin.zip\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | ..........10%...........20%...........30%...........40%...........50%...........60%...........70%...........80%...........90%...........100%\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | \n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | Welcome to Gradle 7.2!\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | \n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | Here are the highlights of this release:\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   |  - Toolchain support for Scala\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   |  - More cache hits when Java source files have platform-specific line endings\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   |  - More resilient remote HTTP build cache behavior\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | \n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | For more details see https://docs.gradle.org/7.2/release-notes.html\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | \n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | To honour the JVM settings for this build a single-use Daemon process will be forked. See https://docs.gradle.org/7.2/userguide/gradle_daemon.html#sec:disabling_the_daemon.\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | Daemon will be stopped at the end of the build \n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :compileJava\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :processResources NO-SOURCE\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :classes\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :jar\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :javadoc\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :javadocJar\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :sourcesJar\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :assemble\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :checkstyleMain\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :compileTestJava\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :processTestResources\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :testClasses\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :checkstyleTest\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :test\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :jacocoTestCoverageVerification\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :jacocoTestReport\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :spotbugsMain\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :spotbugsTest\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :check\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | > Task :build\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | \n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | BUILD SUCCESSFUL in 59s\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | 14 actionable tasks: 14 executed\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \u2705  Success - Main Build with Gradle\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build] \u2b50 Run Main Upload coverage to Codecov\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/316a1302-f5fb-4fa5-8227-f8853fedabdd/act/codecov-codecov-action@v2/ dst=/var/run/act/actions/codecov-codecov-action@v2/\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/codecov-codecov-action@v2/] user=0 workdir=\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v2/dist/index.js] user= workdir=\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | ==> linux OS detected\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | https://uploader.codecov.io/latest/linux/codecov.SHA256SUM\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | ==> SHASUM file signed by key id 806bb28aed779869\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | ==> Uploader SHASUM verified (0c9b79119b0d8dbe7aaf460dc3bd7c3094ceda06e5ae32b0d11a8ff56e2cc5c5  codecov)\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | ==> Running version latest\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | ==> Running version v0.6.1\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | [command]/run/act/actions/codecov-codecov-action@v2/dist/codecov -n  -Q github-action-2.1.0 -f ./build/reports/jacoco/test/jacocoTestReport.xml\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | [2023-06-29T12:18:19.610Z] ['info'] \n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   |      _____          _\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   |     / ____|        | |\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   |    | |     ___   __| | ___  ___ _____   __\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   |    | |    / _ \\ / _` |/ _ \\/ __/ _ \\ \\ / /\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   |    | |___| (_) | (_| |  __/ (_| (_) \\ V /\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   |     \\_____\\___/ \\__,_|\\___|\\___\\___/ \\_/\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | \n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   |   Codecov report uploader 0.6.1\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | [2023-06-29T12:18:19.618Z] ['info'] => Project root located at: /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/osiegmar-logback-gelf\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | [2023-06-29T12:18:19.621Z] ['info'] -> No token specified or token is empty\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | [2023-06-29T12:18:19.631Z] ['info'] Searching for coverage files...\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | [2023-06-29T12:18:19.724Z] ['info'] => Found 1 possible coverage files:\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   |   ./build/reports/jacoco/test/jacocoTestReport.xml\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | [2023-06-29T12:18:19.724Z] ['info'] Processing ./build/reports/jacoco/test/jacocoTestReport.xml...\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | [2023-06-29T12:18:19.734Z] ['info'] Detected GitHub Actions as the CI provider.\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | [2023-06-29T12:18:20.179Z] ['info'] Pinging Codecov: https://codecov.io/upload/v4?package=github-action-2.1.0-uploader-0.6.1&token=*******&branch=master&build=1&build_url=https%3A%2F%2Fgithub.com%2Fosiegmar%2Flogback-gelf%2Factions%2Fruns%2F1&commit=c3cec062e7b846d8439a001adab140ccff28fe10&job=30f6bca8-048f-4923-88ce-d4a8168bbd45&pr=&service=github-actions&slug=osiegmar%2Flogback-gelf&name=&tag=&flags=&parent=\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | [2023-06-29T12:18:20.822Z] ['error'] There was an error running the uploader: Error uploading to https://codecov.io: Error: There was an error fetching the storage URL during POST: 404 - {'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \u2705  Success - Main Upload coverage to Codecov\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build] \u2b50 Run Post Set up Java 8\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v2/dist/cleanup/index.js] user= workdir=\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Checking zstd --version\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Reserving Cache\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:38355/_apis/artifactcache/caches\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Cache ID: 1\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.gradle/caches'\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.gradle/wrapper'\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/.gradle/caches\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/.gradle/wrapper\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Cache Paths:\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::[\"../../../home/runneradmin/.gradle/caches\",\"../../../home/runneradmin/.gradle/wrapper\"]\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Archive Path: /tmp/49f8e0bc-3e4a-42d6-b217-ac963865fbc1/cache.tzst\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | [command]/usr/bin/tar --posix --use-compress-program zstd -T0 -cf cache.tzst -P -C /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/osiegmar-logback-gelf --files-from manifest.txt\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::File Size: 265271166\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Saving Cache (ID: 1)\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Upload cache\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:38355/_apis/artifactcache/caches/1\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Upload concurrency: 4\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Upload chunk size: 33554432\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Awaiting all uploads\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 0 with content range: bytes 0-33554431/*\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 33554432 with content range: bytes 33554432-67108863/*\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 67108864 with content range: bytes 67108864-100663295/*\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 100663296 with content range: bytes 100663296-134217727/*\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 134217728 with content range: bytes 134217728-167772159/*\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 167772160 with content range: bytes 167772160-201326591/*\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 201326592 with content range: bytes 201326592-234881023/*\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Uploading chunk of size 30390142 bytes at offset 234881024 with content range: bytes 234881024-265271165/*\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Commiting cache\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   | Cache Size: ~253 MB (265271166 B)\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:38355/_apis/artifactcache/caches/1\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::commitCache - Attempt 1 of 2 failed with error: Cache service responded with 500\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udcac  ::debug::commitCache - Error is not retryable\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \ud83d\udea7  ::warning::Error: commitCache failed: Cache service responded with 500\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build]   \u2705  Success - Post Set up Java 8\n[30f6bca8-048f-4923-88ce-d4a8168bbd45/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "time=\"2023-06-29T14:18:24+02:00\" level=error msg=\"POST /_apis/artifactcache/caches/1: broken file: 265271166 != 0\" module=artifactcache\n",
        "workflow": "/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/osiegmar-logback-gelf/.github/workflows/build-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 174.57481336593628
    }
}