{
    "repository": "effad/ValidatorFX",
    "stars": 166,
    "language": "java",
    "size": 189,
    "clone_url": "https://github.com/effad/ValidatorFX.git",
    "timestamp": "2023-06-29T14:22:04.247735Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "net.synedra.validatorfx.ValdationResultTest",
                "name": "testSetup()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.ValdationResultTest",
                "name": "testAddAll()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.ValidationMessageTest",
                "name": "testHashAndEquals()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.ValidationMessageTest",
                "name": "testMessage()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.DefaultDecorationTest",
                "name": "testStyleClassDecoration()",
                "time": 0.211,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.DefaultDecorationTest",
                "name": "testFactory()",
                "time": 0.207,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.DefaultDecorationTest",
                "name": "testGraphicDecoration()",
                "time": 0.215,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.CheckTest",
                "name": "testDependsOn()",
                "time": 1.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.CheckTest",
                "name": "testCheckMethod()",
                "time": 0.231,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.CheckTest",
                "name": "testTextFieldMaxLength(FxRobot)",
                "time": 1.195,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.TooltipWrapperTest",
                "name": "testTooltip()",
                "time": 0.212,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.TooltipWrapperTest",
                "name": "testDisabling()",
                "time": 0.209,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.TooltipWrapperTest",
                "name": "testWrappedNode()",
                "time": 0.209,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.StyleClassDecorationTest",
                "name": "testDecoration()",
                "time": 0.208,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.StyleClassDecorationTest",
                "name": "testInvalidConstructorCall()",
                "time": 0.209,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.GraphicDecorationTest",
                "name": "testDecoration()",
                "time": 0.243,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.GraphicDecorationTest",
                "name": "testDecorationCenter()",
                "time": 0.217,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.GraphicDecorationTest",
                "name": "testDecorationOffset()",
                "time": 0.22,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.GraphicDecorationTest",
                "name": "testDelayedAddAfterRemove(FxRobot)",
                "time": 0.223,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.GraphicDecorationTest",
                "name": "testToggleVisiblity()",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.GraphicDecorationTest",
                "name": "testDecorationBottomRight()",
                "time": 0.216,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.GraphicDecorationTest",
                "name": "testNonSceneNode(FxRobot)",
                "time": 0.214,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.GraphicDecorationTest",
                "name": "testDecorationMemLeak()",
                "time": 0.467,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.GraphicDecorationTest",
                "name": "testDecorationStackReuse()",
                "time": 0.214,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.GraphicDecorationTest",
                "name": "testDecorationStackReuseBySceneChange()",
                "time": 0.217,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.GraphicDecorationTest",
                "name": "testDecorationBottomLeft()",
                "time": 0.214,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.GraphicDecorationTest",
                "name": "testDecorationTopRight()",
                "time": 0.211,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.GraphicDecorationTest",
                "name": "testToggleTargetInScene()",
                "time": 0.368,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.GraphicDecorationTest",
                "name": "testDecorationTopLeft()",
                "time": 0.216,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.ValidatorTest",
                "name": "testValidateOnSubmit(FxRobot)",
                "time": 0.539,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.ValidatorTest",
                "name": "testTextFieldWithTwoChecks(FxRobot)",
                "time": 0.986,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "net.synedra.validatorfx.ValidatorTest",
                "name": "testStringProperty(FxRobot)",
                "time": 0.987,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build] \ud83d\ude80  Start image=crawlergpt:latest\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/effad-ValidatorFX] user=0 workdir=\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build] \u2b50 Run Main actions/checkout@v1\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \u2705  Success - Main actions/checkout@v1\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build] \u2b50 Run Main Set up JDK 11\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/054445ae-1cba-4d8e-9c53-de135b8aa467/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udcac  ::debug::isExplicit: \n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udcac  ::debug::explicit? false\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udcac  ::debug::evaluating 0 versions\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udcac  ::debug::match not found\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu11.64.19-ca-jdk11.0.19-linux_x64.tar.gz\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udcac  ::debug::Downloading /tmp/77b6c600-bc2d-4376-a1f3-843649f05be5\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udcac  ::debug::download complete\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | [command]/usr/bin/tar --version\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | tar (GNU tar) 1.30\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | This is free software: you are free to change and redistribute it.\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | There is NO WARRANTY, to the extent permitted by law.\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | \n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | Written by John Gilmore and Jay Fenlason.\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_1560824922 -f /tmp/77b6c600-bc2d-4376-a1f3-843649f05be5\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_1560824922/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udcac  ::debug::Caching tool jdk 11.0.19 x64\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udcac  ::debug::source dir: /tmp/temp_1560824922/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/11.0.19/x64\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udcac  ::debug::finished caching tool\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | writing /home/runneradmin/.m2/settings.xml\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \u2705  Success - Main Set up JDK 11\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \u2699  ::set-env:: JAVA_HOME_11.0.19_x64=/opt/hostedtoolcache/jdk/11.0.19/x64\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/11.0.19/x64\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \u2699  ::set-env:: JAVA_HOME_11_0_19_X64=/opt/hostedtoolcache/jdk/11.0.19/x64\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/11.0.19/x64\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \u2699  ::set-output:: version=11.0.19\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/11.0.19/x64/bin\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build] \u2b50 Run Main Build with Gradle\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | Downloading https://services.gradle.org/distributions/gradle-7.5.1-bin.zip\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | ...........10%............20%...........30%............40%...........50%............60%...........70%............80%...........90%............100%\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | \n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | Welcome to Gradle 7.5.1!\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | \n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | Here are the highlights of this release:\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   |  - Support for Java 18\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   |  - Support for building with Groovy 4\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   |  - Much more responsive continuous builds\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   |  - Improved diagnostics for dependency resolution\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | \n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | For more details see https://docs.gradle.org/7.5.1/release-notes.html\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | \n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | \n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | > Configure project :\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | Project : => 'net.synedra.validatorfx' Java module\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | \n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | > Task :compileJava\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | > Task :processResources\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | > Task :classes\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | > Task :mergeClasses SKIPPED\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | > Task :compileTestJava\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | > Task :processTestResources\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | > Task :testClasses\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | \n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | > Task :test\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | Running tests on classpath\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | \n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | BUILD SUCCESSFUL in 46s\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   | 5 actionable tasks: 5 executed\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \u2705  Success - Main Build with Gradle\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build] \u2b50 Run Post Set up JDK 11\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build]   \u2705  Success - Post Set up JDK 11\n[6c5b1c4a-b212-435c-81c5-a7f09a54c015/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/effad-ValidatorFX/.github/workflows/gradle-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 220.48355984687805
    }
}