{
    "repository": "jason-lang/jason",
    "stars": 175,
    "language": "java",
    "size": 23640,
    "clone_url": "https://github.com/jason-lang/jason.git",
    "timestamp": "2023-06-29T12:21:56.728855Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_run": {
        "failed": false,
        "tests": [],
        "stdout": "[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build] \ud83d\ude80  Start image=crawlergpt:latest\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason] user=0 workdir=\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build] \u2b50 Run Main actions/checkout@v2\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \u2705  Success - Main actions/checkout@v2\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build] \u2b50 Run Main Set up JDK 17\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/2c1bd5c2-7c4d-4a99-a194-eb7e729e7e9e/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udcac  ::debug::isExplicit: \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udcac  ::debug::explicit? false\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udcac  ::debug::evaluating 0 versions\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udcac  ::debug::match not found\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu17.42.21-ca-crac-jdk17.0.7-linux_x64.tar.gz\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udcac  ::debug::Downloading /tmp/bab0c080-ef96-4f27-9eb6-4eba9a7a76e0\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udcac  ::debug::download complete\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [command]/usr/bin/tar --version\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | tar (GNU tar) 1.30\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | This is free software: you are free to change and redistribute it.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | There is NO WARRANTY, to the extent permitted by law.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Written by John Gilmore and Jay Fenlason.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_454853440 -f /tmp/bab0c080-ef96-4f27-9eb6-4eba9a7a76e0\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_454853440/zulu17.42.21-ca-crac-jdk17.0.7-linux_x64\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udcac  ::debug::Caching tool jdk 17.0.7 x64\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udcac  ::debug::source dir: /tmp/temp_454853440/zulu17.42.21-ca-crac-jdk17.0.7-linux_x64\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/17.0.7/x64\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udcac  ::debug::finished caching tool\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | writing /home/runneradmin/.m2/settings.xml\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \u2705  Success - Main Set up JDK 17\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \u2699  ::set-env:: JAVA_HOME_17.0.7_x64=/opt/hostedtoolcache/jdk/17.0.7/x64\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/17.0.7/x64\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \u2699  ::set-env:: JAVA_HOME_17_0_7_X64=/opt/hostedtoolcache/jdk/17.0.7/x64\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/17.0.7/x64\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \u2699  ::set-output:: version=17.0.7\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/17.0.7/x64/bin\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build] \u2b50 Run Main Grant execute permission for gradlew\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \u2705  Success - Main Grant execute permission for gradlew\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build] \u2b50 Run Main Test java\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Downloading https://services.gradle.org/distributions/gradle-8.0.2-bin.zip\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | ...........10%............20%............30%............40%............50%............60%...........70%............80%............90%............100%\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Welcome to Gradle 8.0.2!\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Here are the highlights of this release:\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |  - Improvements to the Kotlin DSL\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |  - Fine-grained parallelism from the first build with configuration cache\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |  - Configurable Gradle user home cache cleanup\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | For more details see https://docs.gradle.org/8.0.2/release-notes.html\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | > Task :jason-interpreter:compileJavaccWarning: Output directory \"/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/generated/javacc/tmp/jason/mas2j/parser\" does not exist. Creating the directory.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Warning: Output directory \"/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/generated/javacc/tmp/jason/asSyntax/parser\" does not exist. Creating the directory.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Warning: Choice conflict in (...)* construct at line 263, column 9.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          Expansion nested within construct and expansion following construct\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          have common prefixes, one of which is: \"{\"\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          Consider using a lookahead of 2 or more for nested expansion.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Warning: Choice conflict in [...] construct at line 367, column 3.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          Expansion nested within construct and expansion following construct\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          have common prefixes, one of which is: \"{\"\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          Consider using a lookahead of 2 or more for nested expansion.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Warning: Choice conflict in [...] construct at line 645, column 9.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          Expansion nested within construct and expansion following construct\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          have common prefixes, one of which is: \"+\"\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          Consider using a lookahead of 2 or more for nested expansion.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Warning: Choice conflict in [...] construct at line 649, column 13.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          Expansion nested within construct and expansion following construct\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          have common prefixes, one of which is: \"+\"\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Java Compiler Compiler Version 6.1_2 (Parser Generator)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | (type \"javacc\" with no arguments for help)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Reading from file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/src/main/javacc/jason/mas2j/parser/MAS2JavaParser.jj . . .\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Note: UNICODE_INPUT option is specified. Please make sure you create the parser/lexer using a Reader with the correct character encoding.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | File \"TokenMgrError.java\" does not exist.  Will create one.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | File \"ParseException.java\" does not exist.  Will create one.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | File \"Token.java\" does not exist.  Will create one.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | File \"SimpleCharStream.java\" does not exist.  Will create one.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Parser generated with 0 errors and 1 warnings.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Java Compiler Compiler Version 6.1_2 (Parser Generator)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | (type \"javacc\" with no arguments for help)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Reading from file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/src/main/javacc/jason/asSyntax/parser/AS2JavaParser.jj . . .\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Note: UNICODE_INPUT option is specified. Please make sure you create the parser/lexer using a Reader with the correct character encoding.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | File \"TokenMgrError.java\" does not exist.  Will create one.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | File \"ParseException.java\" does not exist.  Will create one.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | File \"Token.java\" does not exist.  Will create one.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | File \"SimpleCharStream.java\" does not exist.  Will create one.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Parser generated with 0 errors and 9 warnings.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          Consider using a lookahead of 2 or more for nested expansion.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Warning: Choice conflict in [...] construct at line 656, column 13.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          Expansion nested within construct and expansion following construct\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          have common prefixes, one of which is: \"+\"\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          Consider using a lookahead of 2 or more for nested expansion.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Warning: Choice conflict involving two expansions at\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          line 663, column 11 and line 666, column 11 respectively.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          A common prefix is: \"(\" \"not\"\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          Consider using a lookahead of 3 or more for earlier expansion.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Warning: Choice conflict involving two expansions at\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          line 726, column 7 and line 737, column 9 respectively.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          A common prefix is: \"+\" <ATOM>\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          Consider using a lookahead of 3 or more for earlier expansion.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Warning: Choice conflict in [...] construct at line 816, column 5.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          Expansion nested within construct and expansion following construct\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          have common prefixes, one of which is: <ATOM>\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   |          Consider using a lookahead of 2 or more for nested expansion.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | > Task :jason-interpreter:compileJava\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Note: Some input files use or override a deprecated API.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Note: Recompile with -Xlint:deprecation for details.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Note: Some input files use unchecked or unsafe operations.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Note: Recompile with -Xlint:unchecked for details.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | > Task :jason-interpreter:processResources\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | > Task :jason-interpreter:classes\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | > Task :jason-interpreter:compileTestJava\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Note: Some input files use unchecked or unsafe operations.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Note: Recompile with -Xlint:unchecked for details.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | > Task :jason-interpreter:processTestResources NO-SOURCE\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | > Task :jason-interpreter:testClasses\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | > Task :jason-interpreter:test\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | See https://docs.gradle.org/8.0.2/userguide/command_line_interface.html#sec:command_line_warnings\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | BUILD SUCCESSFUL in 54s\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | 5 actionable tasks: 5 executed\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \u2705  Success - Main Test java\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build] \u2b50 Run Main Test jason\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | > Task :jason-interpreter:compileJavacc UP-TO-DATE\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | > Task :jason-interpreter:compileJava UP-TO-DATE\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | > Task :jason-interpreter:processResources UP-TO-DATE\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | > Task :jason-interpreter:classes UP-TO-DATE\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | > Task :jason-interpreter:jar\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | > Task :jason-interpreter:testJason\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Runtime Services (RTS) is running at 127.0.1.1:33667\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Agent mind inspector is running at http://127.0.1.1:3272\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [self_tester] >>> starting self tests...\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [self_tester] >>> notice it generates expected failures\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [self_tester] >>> notice the results are not counted for general statistics\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [self_tester] assert_equals on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '1' (number) but had '2' (number)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [self_tester] assert_equals on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '2' (number) but had '2.0000000001' (number)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [self_tester] assert_equals on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '[1,2]' (list) but had '[1,2,3]' (list)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [self_tester] assert_equals on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '1+/-0' (number), but had '2' (number)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [self_tester] assert_true on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected 'this_is_NOT_a_belief'\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [self_tester] assert_false on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected 'not this_is_a_belief'\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [self_tester] force_failure on event 'self_test_asserts' forcedly \u001b[31mFAILED\u001b[0m! Msg: 'msg'\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [self_tester] assert_contains on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '3' in '[1,2]'\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [self_tester] assert_greater_than on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '-1.01 > 1'\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [self_tester] assert_greater_than_equals on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '-1 >= 1'\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [self_tester] assert_between on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '1 <= 0.99 <= 1'\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [self_tester] assert_between on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '1 <= 1.01 <= 1'\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [self_tester] assert_between on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '-1 <= 1 <= 0'\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [self_tester] >>> asserting if self tests went right\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [self_tester] >>> notice that no fails are expected from now on\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [self_tester] >>> end of self tests.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [current_intention] .current_intention( intention(I,S) ) was replaced by .intention(I,_,S,current)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [broadcast] \u001b[35mTODO\u001b[0m: sometimes !assert_equals(jomi,A1) is not being performed properly.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [plan_label] \u001b[35mTODO\u001b[0m: It is expected a way to get an unknown label of a known plan, no?\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [set_random_seed] \u001b[35mTODO\u001b[0m: Use of lists in .random seems to be producing undeterministic responses.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [add_plan] \u001b[35mTODO\u001b[0m: Assert if the source of the plan is rafa.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [list_rules] \u001b[35mTODO\u001b[0m: Can't assert whether .list_rules is working properly\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [structure] \u001b[35mTODO\u001b[0m: .structure(b) is supposed to be true!\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [list_plans] \u001b[35mTODO\u001b[0m: Can't assert whether .list_plans is working properly\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [test_rules] \u001b[35mTODO\u001b[0m: Unexpected behaviour when unifying a bb from a rule new_bb2(20) - 20\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [test_lists] \u001b[35mTODO\u001b[0m: Adding two rules statements are generating error. Uncomment line below and comment the statement member(Item, [Item|Tail]) on the top of this file.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [ArithFunctionTerm] Error in 'math.median([1,1,3,a])' (file:./src/test/jason/asl/functions/median.asl:27) -- math.median needs '[1,1,3,a]' made of numeric elements. -- error while evaluating function, unifier = {LL=[assert_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2194[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2195[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_equals_tolerant[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2197[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_not_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2199[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_true[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2201[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_false[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2203[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],force_pass[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2205[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],force_failure[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2207[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_contains[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2209[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2210[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_not_contains[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2212[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2213[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_greater_than[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2215[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_greater_than_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2217[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_between[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2219[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],check_performance[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_performance.asl\")],p__2222[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2223[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2224[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2225[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2229[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2230[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2231[source(self),test,url(\"file:./src/test/jason/asl/functions/median.asl\")],p__2232[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")],p__2235[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")],kqmlReceivedTellStructure[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList1[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList3[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnTell[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieve[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList1[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnAchieve[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskOne1d[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskOne1c[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskAll2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnTellHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedSignal[source(self),url(\"kqmlPlans.asl\")]], LP=[{ @assert_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346526,_346527) : (intention_test_goal(_346528,_346529,_346530,_346531,_346533) & (not (.list(_346526)) & not (.list(_346527)))) <- .if_then_else((_346526 \\== _346527),.type(_346526,_346534); .type(_346527,_346535); .log(severe,\"assert_equals on event '\",_346528,\"' starting at line \",_346531,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346526,\"' (\",_346534,\") but had '\",_346527,\"' (\",_346535,\")\"); .fail,+test(_346529,passed,_346533,_346531)[assert_equals(_346526,_346527)]; .log(info,\"assert_equals on event '\",_346528,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2194[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346537,_346538) : intention_test_goal(_346539,_346540,_346541,_346542,_346543) <- .type(_346537,_346544); .type(_346538,_346545); .foreach(.member(_346546,_346537),.if_then_else(not (.member(_346546,_346538)),.log(severe,\"assert_equals on event '\",_346539,\"' starting at line \",_346542,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346537,\"' (\",_346544,\") but had '\",_346538,\"' (\",_346545,\")\"); .fail)); .foreach(.member(_346547,_346538),.if_then_else(not (.member(_346547,_346537)),.log(severe,\"assert_equals on event '\",_346539,\"' starting at line \",_346542,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346537,\"' (\",_346544,\") but had '\",_346538,\"' (\",_346545,\")\"); .fail)); +test(_346540,passed,_346543,_346542)[assert_equals(_346537,_346538)]; .log(info,\"assert_equals on event '\",_346539,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2195[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346548,_346549) <- .type(_346548,_346550); .type(_346549,_346551); .log(severe,\"assert_equals expecting '\",_346548,\"' (\",_346550,\") and having '\",_346549,\"' (\",_346551,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_equals_tolerant[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346553,_346554,_346555) : intention_test_goal(_346556,_346557,_346558,_346559,_346560) <- .type(_346553,_346561); .type(_346554,_346562); .if_then_else(not (((_346554 >= (_346553-_346555)) & (_346554 <= (_346553+_346555)))),.log(severe,\"assert_equals on event '\",_346556,\"' starting at line \",_346559,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346553,\"+/-\",_346555,\"' (\",_346561,\"), but had '\",_346554,\"' (\",_346562,\")\"); .fail,+test(_346557,passed,_346560,_346559)[assert_equals(_346553,_346554,_346555)]; .log(info,\"assert_equals on event '\",_346556,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2197[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346563,_346564,_346565) <- .type(_346563,_346566); .type(_346564,_346567); .log(severe,\"assert_equals expecting '\",_346563,\"+/-\",_346565,\"' (\",_346566,\") and having '\",_346564,\"' (\",_346567,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_not_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_equals(_346568,_346569) : (intention_test_goal(_346570,_346571,_346572,_346573,_346574) & (not (.list(_346568)) & not (.list(_346569)))) <- .type(_346568,_346575); .type(_346569,_346576); .if_then_else((_346568 == _346569),.log(severe,\"assert_not_equals on event '\",_346570,\"' starting at line \",_346573,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346568,\"' (\",_346575,\") different than '\",_346569,\"' (\",_346576,\")\"); .fail,+test(_346571,passed,_346574,_346573)[assert_equals(_346568,_346569)]; .log(info,\"assert_not_equals on event '\",_346570,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2199[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_equals(_346577,_346578) <- .type(_346577,_346579); .type(_346578,_346580); .log(severe,\"assert_not_equals expecting '\",_346577,\"' (\",_346579,\") and having '\",_346578,\"' (\",_346580,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_true[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_true(_346581) : intention_test_goal(_346582,_346583,_346584,_346585,_346586) <- .if_then_else(not (_346581),.log(severe,\"assert_true on event '\",_346582,\"' starting at line \",_346585,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346581,\"'\"); .fail,.log(info,\"assert_true on event '\",_346582,\"' \u001b[32mPASSED\u001b[0m\"); +test(_346583,passed,_346586,_346585)[assert_true(_346581)]) },{ @p__2201[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_true(_346588) <- .log(severe,\"assert_true expecting '\",_346588,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_false[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_false(_346589) : intention_test_goal(_346590,_346591,_346592,_346593,_346594) <- .if_then_else(_346589,.log(severe,\"assert_false on event '\",_346590,\"' starting at line \",_346593,\" \u001b[31mFAILED\u001b[0m! Expected 'not \",_346589,\"'\"); .fail,+test(_346591,passed,_346594,_346593)[assert_false(_346589)]; .log(info,\"assert_false on event '\",_346590,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2203[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_false(_346595) <- .log(severe,\"assert_false expecting 'not \",_346595,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @force_pass[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!force_pass : intention_test_goal(_346596,_346597,_346598,_346599,_346600) <- +test(_346597,passed,_346600,_346599)[force_pass]; .log(info,\"force_pass on event '\",_346596,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2205[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!force_pass <- .log(severe,\"force_pass could not be performed properly! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @force_failure[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!force_failure(_346601) : intention_test_goal(_346602,_346603,_346604,_346605,_346606) <- .log(severe,\"force_failure on event '\",_346602,\"' forcedly \u001b[31mFAILED\u001b[0m! Msg: '\",_346601,\"'\"); .fail },{ @p__2207[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!force_failure(_346607) <- .log(severe,\"force_failure could not be performed properly! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_contains[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_346608,_346609) : (intention_test_goal(_346610,_346611,_346612,_346613,_346614) & (.findall(_346615,.type(_346608,_346615),_346616) & (not (.member(list,_346616)) & not (.member(set,_346616))))) <- .log(severe,\"assert_contains expecting '\",_346609,\"' in '\",_346608,\"' could not be performed since '\",_346608,\"' must be a list or a set. \u001b[31mFAILED\u001b[0m!\"); .fail },{ @p__2209[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_346617,_346618) : intention_test_goal(_346619,_346620,_346621,_346622,_346623) <- .if_then_else(not (.member(_346618,_346617)),.log(severe,\"assert_contains on event '\",_346619,\"' starting at line \",_346622,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346618,\"' in '\",_346617,\"'\"); .fail); +test(_346620,passed,_346623,_346622)[assert_contains(_346617,_346618)]; .log(info,\"assert_contains on event '\",_346619,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2210[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_346624,_346625) <- .log(severe,\"assert_contains expecting '\",_346625,\"' in '\",_346624,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_not_contains[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_346626,_346627) : (intention_test_goal(_346628,_346629,_346630,_346631,_346632) & (.findall(_346633,.type(_346626,_346633),_346634) & (not (.member(list,_346634)) & not (.member(set,_346634))))) <- .log(severe,\"assert_not_contains expecting '\",_346627,\"' NOT in '\",_346626,\"' could not be performed since '\",_346626,\"' must be a list or a set. \u001b[31mFAILED\u001b[0m!\"); .fail },{ @p__2212[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_346635,_346636) : intention_test_goal(_346637,_346638,_346639,_346640,_346641) <- .if_then_else(.member(_346636,_346635),.log(severe,\"assert_not_contains on event '\",_346637,\"' starting at line \",_346640,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346636,\"' NOT in '\",_346635,\"'\"); .fail); +test(_346638,passed,_346641,_346640)[assert_not_contains(_346635,_346636)]; .log(info,\"assert_not_contains on event '\",_346637,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2213[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_346642,_346643) <- .log(severe,\"assert_not_contains expecting '\",_346643,\"' NOT in '\",_346642,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_greater_than[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than(_346644,_346645) : (intention_test_goal(_346646,_346647,_346648,_346649,_346650) & (.number(_346644) & .number(_346645))) <- .if_then_else((_346644 <= _346645),.log(severe,\"assert_greater_than on event '\",_346646,\"' starting at line \",_346649,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346644,\" > \",_346645,\"'\"); .fail,+test(_346647,passed,_346650,_346649)[assert_greater_than(_346644,_346645)]; .log(info,\"assert_greater_than on event '\",_346646,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2215[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than(_346651,_346652) <- .log(severe,\"assert_greater_than expecting '\",_346651,\" > \",_346652,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_greater_than_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than_equals(_346653,_346654) : (intention_test_goal(_346655,_346656,_346657,_346658,_346659) & (.number(_346653) & .number(_346654))) <- .if_then_else((_346653 < _346654),.log(severe,\"assert_greater_than_equals on event '\",_346655,\"' starting at line \",_346658,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346653,\" >= \",_346654,\"'\"); .fail,+test(_346656,passed,_346659,_346658)[assert_greater_than_equals(_346653,_346654)]; .log(info,\"assert_greater_than_equals on event '\",_346655,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2217[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than_equals(_346660,_346661) <- .log(severe,\"assert_greater_than_equals expecting '\",_346660,\" >= \",_346661,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_between[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_between(_346663,_346664,_346665) : (intention_test_goal(_346666,_346667,_346668,_346669,_346670) & (.number(_346663) & (.number(_346664) & .number(_346665)))) <- .if_then_else(((_346663 < _346664) | (_346663 > _346665)),.log(severe,\"assert_between on event '\",_346666,\"' starting at line \",_346669,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346664,\" <= \",_346663,\" <= \",_346665,\"'\"); .fail,+test(_346667,passed,_346670,_346669)[assert_between(_346663,_346664,_346665)]; .log(info,\"assert_between on event '\",_346666,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2219[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_between(_346676,_346679,_346680) <- .log(severe,\"assert_between expecting '\",_346679,\" <= \",_346676,\" <= \",_346680,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @check_performance[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_performance.asl\")] +!check_performance(_346683,_346685,_346686) : (.intention(_346689,_346691,[im(_346693,{ +!_346695[_346700] },{ _346702; _346703 },_346704)|_346705],current) & (_346706[code_line(_346707),code_src(_346708)] = _346693)) <- -+mean(_346683,0); .foreach(.range(_346711,1,_346685),.nano_time(_346713); !_346683; .nano_time(_346715); ?mean(_346683,_346716); -+mean(_346683,(_346716+((_346715-_346713)/_346685)))); ?mean(_346683,_346686); .log(info,\"check_performance on event '\",_346695[_346700],\"' starting at line \",_346707,\": \",math.round((_346686/1000)),\" microseconds\") },{ @p__2222[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!execute_test_plans : (.relevant_plans({ +!_346717 },_346718,_346719) & .my_name(_346720)) <- !create_default_fail_plan; .send(test_manager,tell,launching_test_set(_346720)); .foreach(.member(_346721[test],_346719),.findall(_346722,(.member(_346723,_346718) & ((_346723 = { @_346724 +!_346722 : _346725 <- _346726 }) & (_346721[test] = _346724))),_346727); .member(_346728,_346727); .send(test_manager,achieve,count_plans(launched,_346728,_346720)); !execute_test_plan(_346728)); .send(test_manager,tell,launched_test_set(_346720)) },{ @p__2223[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_default_fail_plan : auto_create_fail_plan <- .add_plan({ -!_346734[code(_346735),code_line(_346736),code_src(_346737),error(_346738),error_msg(_346739)] <- .log(severe,\"Error '\",_346738,\"' in '\",_346737,\"' on event '\",_346735,\"' at line \",_346736,\" \u001b[31mFAILED\u001b[0m! Message: '\",_346739); .send(test_manager,tell,fatal_error) },self,end) },{ @p__2224[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_default_fail_plan },{ @p__2225[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!execute_test_plan(_346740) : .intention(_346741,_346742,_346743,current) <- .log(fine,\"\u001b[33mTESTING\u001b[0m \",_346741,\" (main plan: \",_346740,\")\"); !_346740 },{ @p__2229[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_mock_agent(_346744) : .my_name(_346745) <- .create_agent(_346744,\"mock_agent.asl\"); .send(_346744,tell,mock_owner(_346745)) },{ @p__2230[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!wait_idle(_346746) <- .wait(not (sleeping(_346746)),300,_346747); .wait(sleeping(_346746)) },{ @p__2231[source(self),test,url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median <- !assert_equals(2,math.median([1,3])); !assert_equals(1,math.median([1,1,3])); !test_median_non_numeric; .wait(100); !assert_true(state(test_median_non_numeric,failed)); !test_median_empty_set; .wait(100); !assert_true(state(test_median_empty_set,failed)) },{ @p__2232[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_non_numeric <- .log(warning,\"\u001b[35mTODO\u001b[0m: Although there is a -! plan, log is still printing many error messages\"); math.median([1,1,3,a]) },{ @p__2235[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_empty_set <- math.median([]) },{ @kqmlReceivedTellStructure[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346763,tell,_346764::_346765,_346766) : (.literal(_346765) & (.ground(_346765) & (not (.list(_346765)) & .add_nested_source(_346765,_346763,_346767)))) <- ++_346764::_346767 },{ @kqmlReceivedTellList[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346769,tell,_346770,_346771) : .list(_346770) <- !add_all_kqml_received(_346769,_346770) },{ @kqmlReceivedTellList1[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_346775,[]) },{ @kqmlReceivedTellList2[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_346779,[_346780::_346781|_346782]) : (.literal(_346781) & .ground(_346781)) <- .add_nested_source(_346781,_346779,_346783); ++_346780::_346783; !add_all_kqml_received(_346779,_346782) },{ @kqmlReceivedTellList3[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_346784,[_346785|_346786]) <- !add_all_kqml_received(_346784,_346786) },{ @kqmlReceivedUnTell[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346787,untell,_346788::_346789,_346790) : .add_nested_source(_346789,_346787,_346791) <- --_346788::_346791 },{ @kqmlReceivedAchieve[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346792,achieve,_346793::_346794,_346795) : (not (.list(_346794)) & .add_nested_source(_346794,_346792,_346796)) <- !!_346793::_346796 },{ @kqmlReceivedAchieveList[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346797,achieve,_346798,_346799) : .list(_346798) <- !add_all_kqml_achieve(_346797,_346798) },{ @kqmlReceivedAchieveList1[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_achieve(_346800,[]) },{ @kqmlReceivedAchieveList2[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_achieve(_346801,[_346802::_346803|_346804]) <- .add_nested_source(_346803,_346801,_346805); !!_346802::_346805; !add_all_kqml_achieve(_346801,_346804) },{ @kqmlReceivedUnAchieve[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346806,unachieve,_346807::_346808,_346809) <- .drop_desire(_346807::_346808) },{ @kqmlReceivedAskOne1d[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346810,askOne,_346811::_346812,_346813) : kqml::bel_no_source_self(_346811,_346812,_346814) <- .send(_346810,tell,_346811::_346814,_346813) },{ @kqmlReceivedAskOne1c[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346815,askOne,_346816::_346817,_346818) <- .add_nested_source(_346817,_346815,_346819); ?_346816::_346819; .remove_source_annot(_346819,_346820); .send(_346815,tell,_346816::_346820,_346818) },{ @kqmlReceivedAskAll2[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346821,askAll,_346822::_346823,_346824) <- .findall(_346822::_346825,kqml::bel_no_source_self(_346822,_346823,_346825),_346826); .send(_346821,tell,_346826,_346824) },{ @kqmlReceivedTellHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346827,tellHow,_346828,_346829) <- .remove_source_annot(_346828,_346830); .add_plan(_346830,_346827) },{ @kqmlReceivedUnTellHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346831,untellHow,_346832,_346833) <- .remove_plan(_346832,_346831) },{ @kqmlReceivedAskHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346834,askHow,_346835,_346836) <- .relevant_plans(_346835,_346837); .remove_source_annot(_346837,_346838); .send(_346834,tellHow,_346838,_346836) },{ @kqmlReceivedSignal[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346839,signal,_346840::_346841,_346842) : (not (.list(_346841)) & .add_nested_source(_346841,_346839,_346843)) <- .signal({ +_346840::_346843 },type_signal) }], ME=median, Label[test]=p__2231}\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [ArithFunctionTerm] Error in 'math.median([])' (file:./src/test/jason/asl/functions/median.asl:38) -- math.median could not define a median for the empty set '[]'. -- error while evaluating function, unifier = {LL=[assert_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2194[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2195[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_equals_tolerant[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2197[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_not_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2199[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_true[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2201[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_false[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2203[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],force_pass[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2205[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],force_failure[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2207[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_contains[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2209[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2210[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_not_contains[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2212[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2213[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_greater_than[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2215[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_greater_than_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2217[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_between[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2219[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],check_performance[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_performance.asl\")],p__2222[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2223[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2224[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2225[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2229[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2230[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2231[source(self),test,url(\"file:./src/test/jason/asl/functions/median.asl\")],p__2232[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")],p__2235[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")],kqmlReceivedTellStructure[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList1[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList3[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnTell[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieve[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList1[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnAchieve[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskOne1d[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskOne1c[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskAll2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnTellHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedSignal[source(self),url(\"kqmlPlans.asl\")]], LP=[{ @assert_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346526,_346527) : (intention_test_goal(_346528,_346529,_346530,_346531,_346533) & (not (.list(_346526)) & not (.list(_346527)))) <- .if_then_else((_346526 \\== _346527),.type(_346526,_346534); .type(_346527,_346535); .log(severe,\"assert_equals on event '\",_346528,\"' starting at line \",_346531,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346526,\"' (\",_346534,\") but had '\",_346527,\"' (\",_346535,\")\"); .fail,+test(_346529,passed,_346533,_346531)[assert_equals(_346526,_346527)]; .log(info,\"assert_equals on event '\",_346528,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2194[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346537,_346538) : intention_test_goal(_346539,_346540,_346541,_346542,_346543) <- .type(_346537,_346544); .type(_346538,_346545); .foreach(.member(_346546,_346537),.if_then_else(not (.member(_346546,_346538)),.log(severe,\"assert_equals on event '\",_346539,\"' starting at line \",_346542,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346537,\"' (\",_346544,\") but had '\",_346538,\"' (\",_346545,\")\"); .fail)); .foreach(.member(_346547,_346538),.if_then_else(not (.member(_346547,_346537)),.log(severe,\"assert_equals on event '\",_346539,\"' starting at line \",_346542,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346537,\"' (\",_346544,\") but had '\",_346538,\"' (\",_346545,\")\"); .fail)); +test(_346540,passed,_346543,_346542)[assert_equals(_346537,_346538)]; .log(info,\"assert_equals on event '\",_346539,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2195[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346548,_346549) <- .type(_346548,_346550); .type(_346549,_346551); .log(severe,\"assert_equals expecting '\",_346548,\"' (\",_346550,\") and having '\",_346549,\"' (\",_346551,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_equals_tolerant[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346553,_346554,_346555) : intention_test_goal(_346556,_346557,_346558,_346559,_346560) <- .type(_346553,_346561); .type(_346554,_346562); .if_then_else(not (((_346554 >= (_346553-_346555)) & (_346554 <= (_346553+_346555)))),.log(severe,\"assert_equals on event '\",_346556,\"' starting at line \",_346559,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346553,\"+/-\",_346555,\"' (\",_346561,\"), but had '\",_346554,\"' (\",_346562,\")\"); .fail,+test(_346557,passed,_346560,_346559)[assert_equals(_346553,_346554,_346555)]; .log(info,\"assert_equals on event '\",_346556,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2197[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346563,_346564,_346565) <- .type(_346563,_346566); .type(_346564,_346567); .log(severe,\"assert_equals expecting '\",_346563,\"+/-\",_346565,\"' (\",_346566,\") and having '\",_346564,\"' (\",_346567,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_not_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_equals(_346568,_346569) : (intention_test_goal(_346570,_346571,_346572,_346573,_346574) & (not (.list(_346568)) & not (.list(_346569)))) <- .type(_346568,_346575); .type(_346569,_346576); .if_then_else((_346568 == _346569),.log(severe,\"assert_not_equals on event '\",_346570,\"' starting at line \",_346573,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346568,\"' (\",_346575,\") different than '\",_346569,\"' (\",_346576,\")\"); .fail,+test(_346571,passed,_346574,_346573)[assert_equals(_346568,_346569)]; .log(info,\"assert_not_equals on event '\",_346570,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2199[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_equals(_346577,_346578) <- .type(_346577,_346579); .type(_346578,_346580); .log(severe,\"assert_not_equals expecting '\",_346577,\"' (\",_346579,\") and having '\",_346578,\"' (\",_346580,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_true[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_true(_346581) : intention_test_goal(_346582,_346583,_346584,_346585,_346586) <- .if_then_else(not (_346581),.log(severe,\"assert_true on event '\",_346582,\"' starting at line \",_346585,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346581,\"'\"); .fail,.log(info,\"assert_true on event '\",_346582,\"' \u001b[32mPASSED\u001b[0m\"); +test(_346583,passed,_346586,_346585)[assert_true(_346581)]) },{ @p__2201[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_true(_346588) <- .log(severe,\"assert_true expecting '\",_346588,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_false[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_false(_346589) : intention_test_goal(_346590,_346591,_346592,_346593,_346594) <- .if_then_else(_346589,.log(severe,\"assert_false on event '\",_346590,\"' starting at line \",_346593,\" \u001b[31mFAILED\u001b[0m! Expected 'not \",_346589,\"'\"); .fail,+test(_346591,passed,_346594,_346593)[assert_false(_346589)]; .log(info,\"assert_false on event '\",_346590,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2203[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_false(_346595) <- .log(severe,\"assert_false expecting 'not \",_346595,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @force_pass[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!force_pass : intention_test_goal(_346596,_346597,_346598,_346599,_346600) <- +test(_346597,passed,_346600,_346599)[force_pass]; .log(info,\"force_pass on event '\",_346596,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2205[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!force_pass <- .log(severe,\"force_pass could not be performed properly! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @force_failure[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!force_failure(_346601) : intention_test_goal(_346602,_346603,_346604,_346605,_346606) <- .log(severe,\"force_failure on event '\",_346602,\"' forcedly \u001b[31mFAILED\u001b[0m! Msg: '\",_346601,\"'\"); .fail },{ @p__2207[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!force_failure(_346607) <- .log(severe,\"force_failure could not be performed properly! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_contains[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_346608,_346609) : (intention_test_goal(_346610,_346611,_346612,_346613,_346614) & (.findall(_346615,.type(_346608,_346615),_346616) & (not (.member(list,_346616)) & not (.member(set,_346616))))) <- .log(severe,\"assert_contains expecting '\",_346609,\"' in '\",_346608,\"' could not be performed since '\",_346608,\"' must be a list or a set. \u001b[31mFAILED\u001b[0m!\"); .fail },{ @p__2209[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_346617,_346618) : intention_test_goal(_346619,_346620,_346621,_346622,_346623) <- .if_then_else(not (.member(_346618,_346617)),.log(severe,\"assert_contains on event '\",_346619,\"' starting at line \",_346622,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346618,\"' in '\",_346617,\"'\"); .fail); +test(_346620,passed,_346623,_346622)[assert_contains(_346617,_346618)]; .log(info,\"assert_contains on event '\",_346619,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2210[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_346624,_346625) <- .log(severe,\"assert_contains expecting '\",_346625,\"' in '\",_346624,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_not_contains[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_346626,_346627) : (intention_test_goal(_346628,_346629,_346630,_346631,_346632) & (.findall(_346633,.type(_346626,_346633),_346634) & (not (.member(list,_346634)) & not (.member(set,_346634))))) <- .log(severe,\"assert_not_contains expecting '\",_346627,\"' NOT in '\",_346626,\"' could not be performed since '\",_346626,\"' must be a list or a set. \u001b[31mFAILED\u001b[0m!\"); .fail },{ @p__2212[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_346635,_346636) : intention_test_goal(_346637,_346638,_346639,_346640,_346641) <- .if_then_else(.member(_346636,_346635),.log(severe,\"assert_not_contains on event '\",_346637,\"' starting at line \",_346640,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346636,\"' NOT in '\",_346635,\"'\"); .fail); +test(_346638,passed,_346641,_346640)[assert_not_contains(_346635,_346636)]; .log(info,\"assert_not_contains on event '\",_346637,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2213[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_346642,_346643) <- .log(severe,\"assert_not_contains expecting '\",_346643,\"' NOT in '\",_346642,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_greater_than[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than(_346644,_346645) : (intention_test_goal(_346646,_346647,_346648,_346649,_346650) & (.number(_346644) & .number(_346645))) <- .if_then_else((_346644 <= _346645),.log(severe,\"assert_greater_than on event '\",_346646,\"' starting at line \",_346649,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346644,\" > \",_346645,\"'\"); .fail,+test(_346647,passed,_346650,_346649)[assert_greater_than(_346644,_346645)]; .log(info,\"assert_greater_than on event '\",_346646,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2215[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than(_346651,_346652) <- .log(severe,\"assert_greater_than expecting '\",_346651,\" > \",_346652,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_greater_than_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than_equals(_346653,_346654) : (intention_test_goal(_346655,_346656,_346657,_346658,_346659) & (.number(_346653) & .number(_346654))) <- .if_then_else((_346653 < _346654),.log(severe,\"assert_greater_than_equals on event '\",_346655,\"' starting at line \",_346658,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346653,\" >= \",_346654,\"'\"); .fail,+test(_346656,passed,_346659,_346658)[assert_greater_than_equals(_346653,_346654)]; .log(info,\"assert_greater_than_equals on event '\",_346655,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2217[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than_equals(_346660,_346661) <- .log(severe,\"assert_greater_than_equals expecting '\",_346660,\" >= \",_346661,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_between[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_between(_346663,_346664,_346665) : (intention_test_goal(_346666,_346667,_346668,_346669,_346670) & (.number(_346663) & (.number(_346664) & .number(_346665)))) <- .if_then_else(((_346663 < _346664) | (_346663 > _346665)),.log(severe,\"assert_between on event '\",_346666,\"' starting at line \",_346669,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346664,\" <= \",_346663,\" <= \",_346665,\"'\"); .fail,+test(_346667,passed,_346670,_346669)[assert_between(_346663,_346664,_346665)]; .log(info,\"assert_between on event '\",_346666,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2219[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_between(_346676,_346679,_346680) <- .log(severe,\"assert_between expecting '\",_346679,\" <= \",_346676,\" <= \",_346680,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @check_performance[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_performance.asl\")] +!check_performance(_346683,_346685,_346686) : (.intention(_346689,_346691,[im(_346693,{ +!_346695[_346700] },{ _346702; _346703 },_346704)|_346705],current) & (_346706[code_line(_346707),code_src(_346708)] = _346693)) <- -+mean(_346683,0); .foreach(.range(_346711,1,_346685),.nano_time(_346713); !_346683; .nano_time(_346715); ?mean(_346683,_346716); -+mean(_346683,(_346716+((_346715-_346713)/_346685)))); ?mean(_346683,_346686); .log(info,\"check_performance on event '\",_346695[_346700],\"' starting at line \",_346707,\": \",math.round((_346686/1000)),\" microseconds\") },{ @p__2222[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!execute_test_plans : (.relevant_plans({ +!_346717 },_346718,_346719) & .my_name(_346720)) <- !create_default_fail_plan; .send(test_manager,tell,launching_test_set(_346720)); .foreach(.member(_346721[test],_346719),.findall(_346722,(.member(_346723,_346718) & ((_346723 = { @_346724 +!_346722 : _346725 <- _346726 }) & (_346721[test] = _346724))),_346727); .member(_346728,_346727); .send(test_manager,achieve,count_plans(launched,_346728,_346720)); !execute_test_plan(_346728)); .send(test_manager,tell,launched_test_set(_346720)) },{ @p__2223[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_default_fail_plan : auto_create_fail_plan <- .add_plan({ -!_346734[code(_346735),code_line(_346736),code_src(_346737),error(_346738),error_msg(_346739)] <- .log(severe,\"Error '\",_346738,\"' in '\",_346737,\"' on event '\",_346735,\"' at line \",_346736,\" \u001b[31mFAILED\u001b[0m! Message: '\",_346739); .send(test_manager,tell,fatal_error) },self,end) },{ @p__2224[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_default_fail_plan },{ @p__2225[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!execute_test_plan(_346740) : .intention(_346741,_346742,_346743,current) <- .log(fine,\"\u001b[33mTESTING\u001b[0m \",_346741,\" (main plan: \",_346740,\")\"); !_346740 },{ @p__2229[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_mock_agent(_346744) : .my_name(_346745) <- .create_agent(_346744,\"mock_agent.asl\"); .send(_346744,tell,mock_owner(_346745)) },{ @p__2230[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!wait_idle(_346746) <- .wait(not (sleeping(_346746)),300,_346747); .wait(sleeping(_346746)) },{ @p__2231[source(self),test,url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median <- !assert_equals(2,math.median([1,3])); !assert_equals(1,math.median([1,1,3])); !test_median_non_numeric; .wait(100); !assert_true(state(test_median_non_numeric,failed)); !test_median_empty_set; .wait(100); !assert_true(state(test_median_empty_set,failed)) },{ @p__2232[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_non_numeric <- .log(warning,\"\u001b[35mTODO\u001b[0m: Although there is a -! plan, log is still printing many error messages\"); math.median([1,1,3,a]) },{ @p__2235[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_empty_set <- math.median([]) },{ @kqmlReceivedTellStructure[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346763,tell,_346764::_346765,_346766) : (.literal(_346765) & (.ground(_346765) & (not (.list(_346765)) & .add_nested_source(_346765,_346763,_346767)))) <- ++_346764::_346767 },{ @kqmlReceivedTellList[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346769,tell,_346770,_346771) : .list(_346770) <- !add_all_kqml_received(_346769,_346770) },{ @kqmlReceivedTellList1[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_346775,[]) },{ @kqmlReceivedTellList2[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_346779,[_346780::_346781|_346782]) : (.literal(_346781) & .ground(_346781)) <- .add_nested_source(_346781,_346779,_346783); ++_346780::_346783; !add_all_kqml_received(_346779,_346782) },{ @kqmlReceivedTellList3[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_346784,[_346785|_346786]) <- !add_all_kqml_received(_346784,_346786) },{ @kqmlReceivedUnTell[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346787,untell,_346788::_346789,_346790) : .add_nested_source(_346789,_346787,_346791) <- --_346788::_346791 },{ @kqmlReceivedAchieve[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346792,achieve,_346793::_346794,_346795) : (not (.list(_346794)) & .add_nested_source(_346794,_346792,_346796)) <- !!_346793::_346796 },{ @kqmlReceivedAchieveList[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346797,achieve,_346798,_346799) : .list(_346798) <- !add_all_kqml_achieve(_346797,_346798) },{ @kqmlReceivedAchieveList1[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_achieve(_346800,[]) },{ @kqmlReceivedAchieveList2[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_achieve(_346801,[_346802::_346803|_346804]) <- .add_nested_source(_346803,_346801,_346805); !!_346802::_346805; !add_all_kqml_achieve(_346801,_346804) },{ @kqmlReceivedUnAchieve[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346806,unachieve,_346807::_346808,_346809) <- .drop_desire(_346807::_346808) },{ @kqmlReceivedAskOne1d[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346810,askOne,_346811::_346812,_346813) : kqml::bel_no_source_self(_346811,_346812,_346814) <- .send(_346810,tell,_346811::_346814,_346813) },{ @kqmlReceivedAskOne1c[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346815,askOne,_346816::_346817,_346818) <- .add_nested_source(_346817,_346815,_346819); ?_346816::_346819; .remove_source_annot(_346819,_346820); .send(_346815,tell,_346816::_346820,_346818) },{ @kqmlReceivedAskAll2[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346821,askAll,_346822::_346823,_346824) <- .findall(_346822::_346825,kqml::bel_no_source_self(_346822,_346823,_346825),_346826); .send(_346821,tell,_346826,_346824) },{ @kqmlReceivedTellHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346827,tellHow,_346828,_346829) <- .remove_source_annot(_346828,_346830); .add_plan(_346830,_346827) },{ @kqmlReceivedUnTellHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346831,untellHow,_346832,_346833) <- .remove_plan(_346832,_346831) },{ @kqmlReceivedAskHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346834,askHow,_346835,_346836) <- .relevant_plans(_346835,_346837); .remove_source_annot(_346837,_346838); .send(_346834,tellHow,_346838,_346836) },{ @kqmlReceivedSignal[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346839,signal,_346840::_346841,_346842) : (not (.list(_346841)) & .add_nested_source(_346841,_346839,_346843)) <- .signal({ +_346840::_346843 },type_signal) }], ME=median, Label[test]=p__2231}\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [ArithFunctionTerm] Error in 'math.median([1,1,3,a])' (file:./src/test/jason/asl/functions/median.asl:27) -- math.median needs '[1,1,3,a]' made of numeric elements. -- error while evaluating function, unifier = {LL=[assert_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2194[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2195[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_equals_tolerant[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2197[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_not_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2199[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_true[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2201[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_false[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2203[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],force_pass[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2205[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],force_failure[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2207[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_contains[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2209[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2210[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_not_contains[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2212[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2213[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_greater_than[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2215[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_greater_than_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2217[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_between[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2219[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],check_performance[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_performance.asl\")],p__2222[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2223[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2224[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2225[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2229[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2230[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2231[source(self),test,url(\"file:./src/test/jason/asl/functions/median.asl\")],p__2232[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")],p__2235[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")],kqmlReceivedTellStructure[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList1[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList3[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnTell[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieve[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList1[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnAchieve[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskOne1d[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskOne1c[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskAll2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnTellHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedSignal[source(self),url(\"kqmlPlans.asl\")]], ME=median, Label[test]=p__2231, P={ @p__2232[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_non_numeric <- .log(warning,\"\u001b[35mTODO\u001b[0m: Although there is a -! plan, log is still printing many error messages\"); math.median([1,1,3,a]) }, LP=[{ @assert_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346526,_346527) : (intention_test_goal(_346528,_346529,_346530,_346531,_346533) & (not (.list(_346526)) & not (.list(_346527)))) <- .if_then_else((_346526 \\== _346527),.type(_346526,_346534); .type(_346527,_346535); .log(severe,\"assert_equals on event '\",_346528,\"' starting at line \",_346531,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346526,\"' (\",_346534,\") but had '\",_346527,\"' (\",_346535,\")\"); .fail,+test(_346529,passed,_346533,_346531)[assert_equals(_346526,_346527)]; .log(info,\"assert_equals on event '\",_346528,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2194[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346537,_346538) : intention_test_goal(_346539,_346540,_346541,_346542,_346543) <- .type(_346537,_346544); .type(_346538,_346545); .foreach(.member(_346546,_346537),.if_then_else(not (.member(_346546,_346538)),.log(severe,\"assert_equals on event '\",_346539,\"' starting at line \",_346542,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346537,\"' (\",_346544,\") but had '\",_346538,\"' (\",_346545,\")\"); .fail)); .foreach(.member(_346547,_346538),.if_then_else(not (.member(_346547,_346537)),.log(severe,\"assert_equals on event '\",_346539,\"' starting at line \",_346542,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346537,\"' (\",_346544,\") but had '\",_346538,\"' (\",_346545,\")\"); .fail)); +test(_346540,passed,_346543,_346542)[assert_equals(_346537,_346538)]; .log(info,\"assert_equals on event '\",_346539,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2195[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346548,_346549) <- .type(_346548,_346550); .type(_346549,_346551); .log(severe,\"assert_equals expecting '\",_346548,\"' (\",_346550,\") and having '\",_346549,\"' (\",_346551,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_equals_tolerant[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346553,_346554,_346555) : intention_test_goal(_346556,_346557,_346558,_346559,_346560) <- .type(_346553,_346561); .type(_346554,_346562); .if_then_else(not (((_346554 >= (_346553-_346555)) & (_346554 <= (_346553+_346555)))),.log(severe,\"assert_equals on event '\",_346556,\"' starting at line \",_346559,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346553,\"+/-\",_346555,\"' (\",_346561,\"), but had '\",_346554,\"' (\",_346562,\")\"); .fail,+test(_346557,passed,_346560,_346559)[assert_equals(_346553,_346554,_346555)]; .log(info,\"assert_equals on event '\",_346556,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2197[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346563,_346564,_346565) <- .type(_346563,_346566); .type(_346564,_346567); .log(severe,\"assert_equals expecting '\",_346563,\"+/-\",_346565,\"' (\",_346566,\") and having '\",_346564,\"' (\",_346567,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_not_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_equals(_346568,_346569) : (intention_test_goal(_346570,_346571,_346572,_346573,_346574) & (not (.list(_346568)) & not (.list(_346569)))) <- .type(_346568,_346575); .type(_346569,_346576); .if_then_else((_346568 == _346569),.log(severe,\"assert_not_equals on event '\",_346570,\"' starting at line \",_346573,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346568,\"' (\",_346575,\") different than '\",_346569,\"' (\",_346576,\")\"); .fail,+test(_346571,passed,_346574,_346573)[assert_equals(_346568,_346569)]; .log(info,\"assert_not_equals on event '\",_346570,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2199[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_equals(_346577,_346578) <- .type(_346577,_346579); .type(_346578,_346580); .log(severe,\"assert_not_equals expecting '\",_346577,\"' (\",_346579,\") and having '\",_346578,\"' (\",_346580,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_true[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_true(_346581) : intention_test_goal(_346582,_346583,_346584,_346585,_346586) <- .if_then_else(not (_346581),.log(severe,\"assert_true on event '\",_346582,\"' starting at line \",_346585,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346581,\"'\"); .fail,.log(info,\"assert_true on event '\",_346582,\"' \u001b[32mPASSED\u001b[0m\"); +test(_346583,passed,_346586,_346585)[assert_true(_346581)]) },{ @p__2201[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_true(_346588) <- .log(severe,\"assert_true expecting '\",_346588,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_false[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_false(_346589) : intention_test_goal(_346590,_346591,_346592,_346593,_346594) <- .if_then_else(_346589,.log(severe,\"assert_false on event '\",_346590,\"' starting at line \",_346593,\" \u001b[31mFAILED\u001b[0m! Expected 'not \",_346589,\"'\"); .fail,+test(_346591,passed,_346594,_346593)[assert_false(_346589)]; .log(info,\"assert_false on event '\",_346590,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2203[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_false(_346595) <- .log(severe,\"assert_false expecting 'not \",_346595,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @force_pass[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!force_pass : intention_test_goal(_346596,_346597,_346598,_346599,_346600) <- +test(_346597,passed,_346600,_346599)[force_pass]; .log(info,\"force_pass on event '\",_346596,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2205[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!force_pass <- .log(severe,\"force_pass could not be performed properly! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @force_failure[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!force_failure(_346601) : intention_test_goal(_346602,_346603,_346604,_346605,_346606) <- .log(severe,\"force_failure on event '\",_346602,\"' forcedly \u001b[31mFAILED\u001b[0m! Msg: '\",_346601,\"'\"); .fail },{ @p__2207[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!force_failure(_346607) <- .log(severe,\"force_failure could not be performed properly! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_contains[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_346608,_346609) : (intention_test_goal(_346610,_346611,_346612,_346613,_346614) & (.findall(_346615,.type(_346608,_346615),_346616) & (not (.member(list,_346616)) & not (.member(set,_346616))))) <- .log(severe,\"assert_contains expecting '\",_346609,\"' in '\",_346608,\"' could not be performed since '\",_346608,\"' must be a list or a set. \u001b[31mFAILED\u001b[0m!\"); .fail },{ @p__2209[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_346617,_346618) : intention_test_goal(_346619,_346620,_346621,_346622,_346623) <- .if_then_else(not (.member(_346618,_346617)),.log(severe,\"assert_contains on event '\",_346619,\"' starting at line \",_346622,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346618,\"' in '\",_346617,\"'\"); .fail); +test(_346620,passed,_346623,_346622)[assert_contains(_346617,_346618)]; .log(info,\"assert_contains on event '\",_346619,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2210[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_346624,_346625) <- .log(severe,\"assert_contains expecting '\",_346625,\"' in '\",_346624,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_not_contains[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_346626,_346627) : (intention_test_goal(_346628,_346629,_346630,_346631,_346632) & (.findall(_346633,.type(_346626,_346633),_346634) & (not (.member(list,_346634)) & not (.member(set,_346634))))) <- .log(severe,\"assert_not_contains expecting '\",_346627,\"' NOT in '\",_346626,\"' could not be performed since '\",_346626,\"' must be a list or a set. \u001b[31mFAILED\u001b[0m!\"); .fail },{ @p__2212[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_346635,_346636) : intention_test_goal(_346637,_346638,_346639,_346640,_346641) <- .if_then_else(.member(_346636,_346635),.log(severe,\"assert_not_contains on event '\",_346637,\"' starting at line \",_346640,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346636,\"' NOT in '\",_346635,\"'\"); .fail); +test(_346638,passed,_346641,_346640)[assert_not_contains(_346635,_346636)]; .log(info,\"assert_not_contains on event '\",_346637,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2213[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_346642,_346643) <- .log(severe,\"assert_not_contains expecting '\",_346643,\"' NOT in '\",_346642,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_greater_than[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than(_346644,_346645) : (intention_test_goal(_346646,_346647,_346648,_346649,_346650) & (.number(_346644) & .number(_346645))) <- .if_then_else((_346644 <= _346645),.log(severe,\"assert_greater_than on event '\",_346646,\"' starting at line \",_346649,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346644,\" > \",_346645,\"'\"); .fail,+test(_346647,passed,_346650,_346649)[assert_greater_than(_346644,_346645)]; .log(info,\"assert_greater_than on event '\",_346646,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2215[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than(_346651,_346652) <- .log(severe,\"assert_greater_than expecting '\",_346651,\" > \",_346652,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_greater_than_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than_equals(_346653,_346654) : (intention_test_goal(_346655,_346656,_346657,_346658,_346659) & (.number(_346653) & .number(_346654))) <- .if_then_else((_346653 < _346654),.log(severe,\"assert_greater_than_equals on event '\",_346655,\"' starting at line \",_346658,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346653,\" >= \",_346654,\"'\"); .fail,+test(_346656,passed,_346659,_346658)[assert_greater_than_equals(_346653,_346654)]; .log(info,\"assert_greater_than_equals on event '\",_346655,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2217[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than_equals(_346660,_346661) <- .log(severe,\"assert_greater_than_equals expecting '\",_346660,\" >= \",_346661,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_between[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_between(_346663,_346664,_346665) : (intention_test_goal(_346666,_346667,_346668,_346669,_346670) & (.number(_346663) & (.number(_346664) & .number(_346665)))) <- .if_then_else(((_346663 < _346664) | (_346663 > _346665)),.log(severe,\"assert_between on event '\",_346666,\"' starting at line \",_346669,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346664,\" <= \",_346663,\" <= \",_346665,\"'\"); .fail,+test(_346667,passed,_346670,_346669)[assert_between(_346663,_346664,_346665)]; .log(info,\"assert_between on event '\",_346666,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2219[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_between(_346676,_346679,_346680) <- .log(severe,\"assert_between expecting '\",_346679,\" <= \",_346676,\" <= \",_346680,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @check_performance[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_performance.asl\")] +!check_performance(_346683,_346685,_346686) : (.intention(_346689,_346691,[im(_346693,{ +!_346695[_346700] },{ _346702; _346703 },_346704)|_346705],current) & (_346706[code_line(_346707),code_src(_346708)] = _346693)) <- -+mean(_346683,0); .foreach(.range(_346711,1,_346685),.nano_time(_346713); !_346683; .nano_time(_346715); ?mean(_346683,_346716); -+mean(_346683,(_346716+((_346715-_346713)/_346685)))); ?mean(_346683,_346686); .log(info,\"check_performance on event '\",_346695[_346700],\"' starting at line \",_346707,\": \",math.round((_346686/1000)),\" microseconds\") },{ @p__2222[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!execute_test_plans : (.relevant_plans({ +!_346717 },_346718,_346719) & .my_name(_346720)) <- !create_default_fail_plan; .send(test_manager,tell,launching_test_set(_346720)); .foreach(.member(_346721[test],_346719),.findall(_346722,(.member(_346723,_346718) & ((_346723 = { @_346724 +!_346722 : _346725 <- _346726 }) & (_346721[test] = _346724))),_346727); .member(_346728,_346727); .send(test_manager,achieve,count_plans(launched,_346728,_346720)); !execute_test_plan(_346728)); .send(test_manager,tell,launched_test_set(_346720)) },{ @p__2223[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_default_fail_plan : auto_create_fail_plan <- .add_plan({ -!_346734[code(_346735),code_line(_346736),code_src(_346737),error(_346738),error_msg(_346739)] <- .log(severe,\"Error '\",_346738,\"' in '\",_346737,\"' on event '\",_346735,\"' at line \",_346736,\" \u001b[31mFAILED\u001b[0m! Message: '\",_346739); .send(test_manager,tell,fatal_error) },self,end) },{ @p__2224[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_default_fail_plan },{ @p__2225[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!execute_test_plan(_346740) : .intention(_346741,_346742,_346743,current) <- .log(fine,\"\u001b[33mTESTING\u001b[0m \",_346741,\" (main plan: \",_346740,\")\"); !_346740 },{ @p__2229[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_mock_agent(_346744) : .my_name(_346745) <- .create_agent(_346744,\"mock_agent.asl\"); .send(_346744,tell,mock_owner(_346745)) },{ @p__2230[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!wait_idle(_346746) <- .wait(not (sleeping(_346746)),300,_346747); .wait(sleeping(_346746)) },{ @p__2231[source(self),test,url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median <- !assert_equals(2,math.median([1,3])); !assert_equals(1,math.median([1,1,3])); !test_median_non_numeric; .wait(100); !assert_true(state(test_median_non_numeric,failed)); !test_median_empty_set; .wait(100); !assert_true(state(test_median_empty_set,failed)) },{ @p__2232[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_non_numeric <- .log(warning,\"\u001b[35mTODO\u001b[0m: Although there is a -! plan, log is still printing many error messages\"); math.median([1,1,3,a]) },{ @p__2235[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_empty_set <- math.median([]) },{ @kqmlReceivedTellStructure[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346763,tell,_346764::_346765,_346766) : (.literal(_346765) & (.ground(_346765) & (not (.list(_346765)) & .add_nested_source(_346765,_346763,_346767)))) <- ++_346764::_346767 },{ @kqmlReceivedTellList[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346769,tell,_346770,_346771) : .list(_346770) <- !add_all_kqml_received(_346769,_346770) },{ @kqmlReceivedTellList1[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_346775,[]) },{ @kqmlReceivedTellList2[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_346779,[_346780::_346781|_346782]) : (.literal(_346781) & .ground(_346781)) <- .add_nested_source(_346781,_346779,_346783); ++_346780::_346783; !add_all_kqml_received(_346779,_346782) },{ @kqmlReceivedTellList3[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_346784,[_346785|_346786]) <- !add_all_kqml_received(_346784,_346786) },{ @kqmlReceivedUnTell[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346787,untell,_346788::_346789,_346790) : .add_nested_source(_346789,_346787,_346791) <- --_346788::_346791 },{ @kqmlReceivedAchieve[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346792,achieve,_346793::_346794,_346795) : (not (.list(_346794)) & .add_nested_source(_346794,_346792,_346796)) <- !!_346793::_346796 },{ @kqmlReceivedAchieveList[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346797,achieve,_346798,_346799) : .list(_346798) <- !add_all_kqml_achieve(_346797,_346798) },{ @kqmlReceivedAchieveList1[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_achieve(_346800,[]) },{ @kqmlReceivedAchieveList2[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_achieve(_346801,[_346802::_346803|_346804]) <- .add_nested_source(_346803,_346801,_346805); !!_346802::_346805; !add_all_kqml_achieve(_346801,_346804) },{ @kqmlReceivedUnAchieve[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346806,unachieve,_346807::_346808,_346809) <- .drop_desire(_346807::_346808) },{ @kqmlReceivedAskOne1d[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346810,askOne,_346811::_346812,_346813) : kqml::bel_no_source_self(_346811,_346812,_346814) <- .send(_346810,tell,_346811::_346814,_346813) },{ @kqmlReceivedAskOne1c[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346815,askOne,_346816::_346817,_346818) <- .add_nested_source(_346817,_346815,_346819); ?_346816::_346819; .remove_source_annot(_346819,_346820); .send(_346815,tell,_346816::_346820,_346818) },{ @kqmlReceivedAskAll2[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346821,askAll,_346822::_346823,_346824) <- .findall(_346822::_346825,kqml::bel_no_source_self(_346822,_346823,_346825),_346826); .send(_346821,tell,_346826,_346824) },{ @kqmlReceivedTellHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346827,tellHow,_346828,_346829) <- .remove_source_annot(_346828,_346830); .add_plan(_346830,_346827) },{ @kqmlReceivedUnTellHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346831,untellHow,_346832,_346833) <- .remove_plan(_346832,_346831) },{ @kqmlReceivedAskHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346834,askHow,_346835,_346836) <- .relevant_plans(_346835,_346837); .remove_source_annot(_346837,_346838); .send(_346834,tellHow,_346838,_346836) },{ @kqmlReceivedSignal[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346839,signal,_346840::_346841,_346842) : (not (.list(_346841)) & .add_nested_source(_346841,_346839,_346843)) <- .signal({ +_346840::_346843 },type_signal) }]}\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [ArithFunctionTerm] Error in 'math.median([])' (file:./src/test/jason/asl/functions/median.asl:38) -- math.median could not define a median for the empty set '[]'. -- error while evaluating function, unifier = {LL=[assert_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2194[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2195[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_equals_tolerant[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2197[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_not_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2199[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_true[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2201[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_false[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2203[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],force_pass[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2205[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],force_failure[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2207[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_contains[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2209[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2210[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_not_contains[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2212[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2213[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_greater_than[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2215[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_greater_than_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2217[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],assert_between[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],p__2219[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")],check_performance[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_performance.asl\")],p__2222[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2223[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2224[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2225[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2229[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2230[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2231[source(self),test,url(\"file:./src/test/jason/asl/functions/median.asl\")],p__2232[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")],p__2235[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")],kqmlReceivedTellStructure[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList1[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList3[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnTell[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieve[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList1[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnAchieve[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskOne1d[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskOne1c[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskAll2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnTellHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedSignal[source(self),url(\"kqmlPlans.asl\")]], ME=median, Label[test]=p__2231, P={ @p__2235[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_empty_set <- math.median([]) }, LP=[{ @assert_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346526,_346527) : (intention_test_goal(_346528,_346529,_346530,_346531,_346533) & (not (.list(_346526)) & not (.list(_346527)))) <- .if_then_else((_346526 \\== _346527),.type(_346526,_346534); .type(_346527,_346535); .log(severe,\"assert_equals on event '\",_346528,\"' starting at line \",_346531,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346526,\"' (\",_346534,\") but had '\",_346527,\"' (\",_346535,\")\"); .fail,+test(_346529,passed,_346533,_346531)[assert_equals(_346526,_346527)]; .log(info,\"assert_equals on event '\",_346528,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2194[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346537,_346538) : intention_test_goal(_346539,_346540,_346541,_346542,_346543) <- .type(_346537,_346544); .type(_346538,_346545); .foreach(.member(_346546,_346537),.if_then_else(not (.member(_346546,_346538)),.log(severe,\"assert_equals on event '\",_346539,\"' starting at line \",_346542,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346537,\"' (\",_346544,\") but had '\",_346538,\"' (\",_346545,\")\"); .fail)); .foreach(.member(_346547,_346538),.if_then_else(not (.member(_346547,_346537)),.log(severe,\"assert_equals on event '\",_346539,\"' starting at line \",_346542,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346537,\"' (\",_346544,\") but had '\",_346538,\"' (\",_346545,\")\"); .fail)); +test(_346540,passed,_346543,_346542)[assert_equals(_346537,_346538)]; .log(info,\"assert_equals on event '\",_346539,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2195[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346548,_346549) <- .type(_346548,_346550); .type(_346549,_346551); .log(severe,\"assert_equals expecting '\",_346548,\"' (\",_346550,\") and having '\",_346549,\"' (\",_346551,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_equals_tolerant[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346553,_346554,_346555) : intention_test_goal(_346556,_346557,_346558,_346559,_346560) <- .type(_346553,_346561); .type(_346554,_346562); .if_then_else(not (((_346554 >= (_346553-_346555)) & (_346554 <= (_346553+_346555)))),.log(severe,\"assert_equals on event '\",_346556,\"' starting at line \",_346559,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346553,\"+/-\",_346555,\"' (\",_346561,\"), but had '\",_346554,\"' (\",_346562,\")\"); .fail,+test(_346557,passed,_346560,_346559)[assert_equals(_346553,_346554,_346555)]; .log(info,\"assert_equals on event '\",_346556,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2197[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_346563,_346564,_346565) <- .type(_346563,_346566); .type(_346564,_346567); .log(severe,\"assert_equals expecting '\",_346563,\"+/-\",_346565,\"' (\",_346566,\") and having '\",_346564,\"' (\",_346567,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_not_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_equals(_346568,_346569) : (intention_test_goal(_346570,_346571,_346572,_346573,_346574) & (not (.list(_346568)) & not (.list(_346569)))) <- .type(_346568,_346575); .type(_346569,_346576); .if_then_else((_346568 == _346569),.log(severe,\"assert_not_equals on event '\",_346570,\"' starting at line \",_346573,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346568,\"' (\",_346575,\") different than '\",_346569,\"' (\",_346576,\")\"); .fail,+test(_346571,passed,_346574,_346573)[assert_equals(_346568,_346569)]; .log(info,\"assert_not_equals on event '\",_346570,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2199[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_equals(_346577,_346578) <- .type(_346577,_346579); .type(_346578,_346580); .log(severe,\"assert_not_equals expecting '\",_346577,\"' (\",_346579,\") and having '\",_346578,\"' (\",_346580,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_true[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_true(_346581) : intention_test_goal(_346582,_346583,_346584,_346585,_346586) <- .if_then_else(not (_346581),.log(severe,\"assert_true on event '\",_346582,\"' starting at line \",_346585,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346581,\"'\"); .fail,.log(info,\"assert_true on event '\",_346582,\"' \u001b[32mPASSED\u001b[0m\"); +test(_346583,passed,_346586,_346585)[assert_true(_346581)]) },{ @p__2201[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_true(_346588) <- .log(severe,\"assert_true expecting '\",_346588,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_false[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_false(_346589) : intention_test_goal(_346590,_346591,_346592,_346593,_346594) <- .if_then_else(_346589,.log(severe,\"assert_false on event '\",_346590,\"' starting at line \",_346593,\" \u001b[31mFAILED\u001b[0m! Expected 'not \",_346589,\"'\"); .fail,+test(_346591,passed,_346594,_346593)[assert_false(_346589)]; .log(info,\"assert_false on event '\",_346590,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2203[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_false(_346595) <- .log(severe,\"assert_false expecting 'not \",_346595,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @force_pass[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!force_pass : intention_test_goal(_346596,_346597,_346598,_346599,_346600) <- +test(_346597,passed,_346600,_346599)[force_pass]; .log(info,\"force_pass on event '\",_346596,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2205[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!force_pass <- .log(severe,\"force_pass could not be performed properly! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @force_failure[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!force_failure(_346601) : intention_test_goal(_346602,_346603,_346604,_346605,_346606) <- .log(severe,\"force_failure on event '\",_346602,\"' forcedly \u001b[31mFAILED\u001b[0m! Msg: '\",_346601,\"'\"); .fail },{ @p__2207[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!force_failure(_346607) <- .log(severe,\"force_failure could not be performed properly! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_contains[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_346608,_346609) : (intention_test_goal(_346610,_346611,_346612,_346613,_346614) & (.findall(_346615,.type(_346608,_346615),_346616) & (not (.member(list,_346616)) & not (.member(set,_346616))))) <- .log(severe,\"assert_contains expecting '\",_346609,\"' in '\",_346608,\"' could not be performed since '\",_346608,\"' must be a list or a set. \u001b[31mFAILED\u001b[0m!\"); .fail },{ @p__2209[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_346617,_346618) : intention_test_goal(_346619,_346620,_346621,_346622,_346623) <- .if_then_else(not (.member(_346618,_346617)),.log(severe,\"assert_contains on event '\",_346619,\"' starting at line \",_346622,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346618,\"' in '\",_346617,\"'\"); .fail); +test(_346620,passed,_346623,_346622)[assert_contains(_346617,_346618)]; .log(info,\"assert_contains on event '\",_346619,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2210[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_346624,_346625) <- .log(severe,\"assert_contains expecting '\",_346625,\"' in '\",_346624,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_not_contains[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_346626,_346627) : (intention_test_goal(_346628,_346629,_346630,_346631,_346632) & (.findall(_346633,.type(_346626,_346633),_346634) & (not (.member(list,_346634)) & not (.member(set,_346634))))) <- .log(severe,\"assert_not_contains expecting '\",_346627,\"' NOT in '\",_346626,\"' could not be performed since '\",_346626,\"' must be a list or a set. \u001b[31mFAILED\u001b[0m!\"); .fail },{ @p__2212[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_346635,_346636) : intention_test_goal(_346637,_346638,_346639,_346640,_346641) <- .if_then_else(.member(_346636,_346635),.log(severe,\"assert_not_contains on event '\",_346637,\"' starting at line \",_346640,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346636,\"' NOT in '\",_346635,\"'\"); .fail); +test(_346638,passed,_346641,_346640)[assert_not_contains(_346635,_346636)]; .log(info,\"assert_not_contains on event '\",_346637,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2213[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_346642,_346643) <- .log(severe,\"assert_not_contains expecting '\",_346643,\"' NOT in '\",_346642,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_greater_than[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than(_346644,_346645) : (intention_test_goal(_346646,_346647,_346648,_346649,_346650) & (.number(_346644) & .number(_346645))) <- .if_then_else((_346644 <= _346645),.log(severe,\"assert_greater_than on event '\",_346646,\"' starting at line \",_346649,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346644,\" > \",_346645,\"'\"); .fail,+test(_346647,passed,_346650,_346649)[assert_greater_than(_346644,_346645)]; .log(info,\"assert_greater_than on event '\",_346646,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2215[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than(_346651,_346652) <- .log(severe,\"assert_greater_than expecting '\",_346651,\" > \",_346652,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_greater_than_equals[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than_equals(_346653,_346654) : (intention_test_goal(_346655,_346656,_346657,_346658,_346659) & (.number(_346653) & .number(_346654))) <- .if_then_else((_346653 < _346654),.log(severe,\"assert_greater_than_equals on event '\",_346655,\"' starting at line \",_346658,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346653,\" >= \",_346654,\"'\"); .fail,+test(_346656,passed,_346659,_346658)[assert_greater_than_equals(_346653,_346654)]; .log(info,\"assert_greater_than_equals on event '\",_346655,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2217[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than_equals(_346660,_346661) <- .log(severe,\"assert_greater_than_equals expecting '\",_346660,\" >= \",_346661,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_between[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_between(_346663,_346664,_346665) : (intention_test_goal(_346666,_346667,_346668,_346669,_346670) & (.number(_346663) & (.number(_346664) & .number(_346665)))) <- .if_then_else(((_346663 < _346664) | (_346663 > _346665)),.log(severe,\"assert_between on event '\",_346666,\"' starting at line \",_346669,\" \u001b[31mFAILED\u001b[0m! Expected '\",_346664,\" <= \",_346663,\" <= \",_346665,\"'\"); .fail,+test(_346667,passed,_346670,_346669)[assert_between(_346663,_346664,_346665)]; .log(info,\"assert_between on event '\",_346666,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2219[source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_assert.asl\")] +!assert_between(_346676,_346679,_346680) <- .log(severe,\"assert_between expecting '\",_346679,\" <= \",_346676,\" <= \",_346680,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @check_performance[atomic,source(self),url(\"jar:file:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.2.jar!/test/jason/inc/test_performance.asl\")] +!check_performance(_346683,_346685,_346686) : (.intention(_346689,_346691,[im(_346693,{ +!_346695[_346700] },{ _346702; _346703 },_346704)|_346705],current) & (_346706[code_line(_346707),code_src(_346708)] = _346693)) <- -+mean(_346683,0); .foreach(.range(_346711,1,_346685),.nano_time(_346713); !_346683; .nano_time(_346715); ?mean(_346683,_346716); -+mean(_346683,(_346716+((_346715-_346713)/_346685)))); ?mean(_346683,_346686); .log(info,\"check_performance on event '\",_346695[_346700],\"' starting at line \",_346707,\": \",math.round((_346686/1000)),\" microseconds\") },{ @p__2222[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!execute_test_plans : (.relevant_plans({ +!_346717 },_346718,_346719) & .my_name(_346720)) <- !create_default_fail_plan; .send(test_manager,tell,launching_test_set(_346720)); .foreach(.member(_346721[test],_346719),.findall(_346722,(.member(_346723,_346718) & ((_346723 = { @_346724 +!_346722 : _346725 <- _346726 }) & (_346721[test] = _346724))),_346727); .member(_346728,_346727); .send(test_manager,achieve,count_plans(launched,_346728,_346720)); !execute_test_plan(_346728)); .send(test_manager,tell,launched_test_set(_346720)) },{ @p__2223[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_default_fail_plan : auto_create_fail_plan <- .add_plan({ -!_346734[code(_346735),code_line(_346736),code_src(_346737),error(_346738),error_msg(_346739)] <- .log(severe,\"Error '\",_346738,\"' in '\",_346737,\"' on event '\",_346735,\"' at line \",_346736,\" \u001b[31mFAILED\u001b[0m! Message: '\",_346739); .send(test_manager,tell,fatal_error) },self,end) },{ @p__2224[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_default_fail_plan },{ @p__2225[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!execute_test_plan(_346740) : .intention(_346741,_346742,_346743,current) <- .log(fine,\"\u001b[33mTESTING\u001b[0m \",_346741,\" (main plan: \",_346740,\")\"); !_346740 },{ @p__2229[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_mock_agent(_346744) : .my_name(_346745) <- .create_agent(_346744,\"mock_agent.asl\"); .send(_346744,tell,mock_owner(_346745)) },{ @p__2230[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!wait_idle(_346746) <- .wait(not (sleeping(_346746)),300,_346747); .wait(sleeping(_346746)) },{ @p__2231[source(self),test,url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median <- !assert_equals(2,math.median([1,3])); !assert_equals(1,math.median([1,1,3])); !test_median_non_numeric; .wait(100); !assert_true(state(test_median_non_numeric,failed)); !test_median_empty_set; .wait(100); !assert_true(state(test_median_empty_set,failed)) },{ @p__2232[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_non_numeric <- .log(warning,\"\u001b[35mTODO\u001b[0m: Although there is a -! plan, log is still printing many error messages\"); math.median([1,1,3,a]) },{ @p__2235[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_empty_set <- math.median([]) },{ @kqmlReceivedTellStructure[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346763,tell,_346764::_346765,_346766) : (.literal(_346765) & (.ground(_346765) & (not (.list(_346765)) & .add_nested_source(_346765,_346763,_346767)))) <- ++_346764::_346767 },{ @kqmlReceivedTellList[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346769,tell,_346770,_346771) : .list(_346770) <- !add_all_kqml_received(_346769,_346770) },{ @kqmlReceivedTellList1[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_346775,[]) },{ @kqmlReceivedTellList2[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_346779,[_346780::_346781|_346782]) : (.literal(_346781) & .ground(_346781)) <- .add_nested_source(_346781,_346779,_346783); ++_346780::_346783; !add_all_kqml_received(_346779,_346782) },{ @kqmlReceivedTellList3[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_346784,[_346785|_346786]) <- !add_all_kqml_received(_346784,_346786) },{ @kqmlReceivedUnTell[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346787,untell,_346788::_346789,_346790) : .add_nested_source(_346789,_346787,_346791) <- --_346788::_346791 },{ @kqmlReceivedAchieve[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346792,achieve,_346793::_346794,_346795) : (not (.list(_346794)) & .add_nested_source(_346794,_346792,_346796)) <- !!_346793::_346796 },{ @kqmlReceivedAchieveList[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346797,achieve,_346798,_346799) : .list(_346798) <- !add_all_kqml_achieve(_346797,_346798) },{ @kqmlReceivedAchieveList1[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_achieve(_346800,[]) },{ @kqmlReceivedAchieveList2[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_achieve(_346801,[_346802::_346803|_346804]) <- .add_nested_source(_346803,_346801,_346805); !!_346802::_346805; !add_all_kqml_achieve(_346801,_346804) },{ @kqmlReceivedUnAchieve[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346806,unachieve,_346807::_346808,_346809) <- .drop_desire(_346807::_346808) },{ @kqmlReceivedAskOne1d[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346810,askOne,_346811::_346812,_346813) : kqml::bel_no_source_self(_346811,_346812,_346814) <- .send(_346810,tell,_346811::_346814,_346813) },{ @kqmlReceivedAskOne1c[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346815,askOne,_346816::_346817,_346818) <- .add_nested_source(_346817,_346815,_346819); ?_346816::_346819; .remove_source_annot(_346819,_346820); .send(_346815,tell,_346816::_346820,_346818) },{ @kqmlReceivedAskAll2[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346821,askAll,_346822::_346823,_346824) <- .findall(_346822::_346825,kqml::bel_no_source_self(_346822,_346823,_346825),_346826); .send(_346821,tell,_346826,_346824) },{ @kqmlReceivedTellHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346827,tellHow,_346828,_346829) <- .remove_source_annot(_346828,_346830); .add_plan(_346830,_346827) },{ @kqmlReceivedUnTellHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346831,untellHow,_346832,_346833) <- .remove_plan(_346832,_346831) },{ @kqmlReceivedAskHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346834,askHow,_346835,_346836) <- .relevant_plans(_346835,_346837); .remove_source_annot(_346837,_346838); .send(_346834,tellHow,_346838,_346836) },{ @kqmlReceivedSignal[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_346839,signal,_346840::_346841,_346842) : (not (.list(_346841)) & .add_nested_source(_346841,_346839,_346843)) <- .signal({ +_346840::_346843 },type_signal) }]}\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [median] \u001b[35mTODO\u001b[0m: Although there is a -! plan, log is still printing many error messages\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [ArithFunctionTerm] Error in 'math.median([1,1,3,a])' (file:./src/test/jason/asl/functions/median.asl:27) -- math.median needs '[1,1,3,a]' made of numeric elements. -- error while evaluating function, unifier = {}\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [ArithFunctionTerm] Error in 'math.median([1,1,3,a])' (file:./src/test/jason/asl/functions/median.asl:27) -- math.median needs '[1,1,3,a]' made of numeric elements. -- error while evaluating function, unifier = {S=waiting}\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [ArithFunctionTerm] Error in 'math.median([1,1,3,a])' (file:./src/test/jason/asl/functions/median.asl:27) -- math.median needs '[1,1,3,a]' made of numeric elements. -- error while evaluating function, unifier = {}\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [ArithFunctionTerm] Error in 'math.median([1,1,3,a])' (file:./src/test/jason/asl/functions/median.asl:27) -- math.median needs '[1,1,3,a]' made of numeric elements. -- error while evaluating function, unifier = {}\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [median] state(pending)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [median] state(executing)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [ArithFunctionTerm] Error in 'math.median([1,1,3,a])' (file:./src/test/jason/asl/functions/median.asl:27) -- math.median needs '[1,1,3,a]' made of numeric elements. -- error while evaluating function, unifier = {}\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [ArithFunctionTerm] Error in 'math.median([1,1,3,a])' (file:./src/test/jason/asl/functions/median.asl:27) -- math.median needs '[1,1,3,a]' made of numeric elements. -- error while evaluating function, unifier = {S=achieved}\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [median] state(executing)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [ArithFunctionTerm] Error in 'math.median([1,1,3,a])' (file:./src/test/jason/asl/functions/median.asl:27) -- math.median needs '[1,1,3,a]' made of numeric elements. -- error while evaluating function, unifier = {S=finished}\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [median] state(waiting)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [median] state(failed)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [median] state(achieved)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [median] state(finished)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [ArithFunctionTerm] Error in 'math.median([])' (file:./src/test/jason/asl/functions/median.asl:38) -- math.median could not define a median for the empty set '[]'. -- error while evaluating function, unifier = {}\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [ArithFunctionTerm] Error in 'math.median([])' (file:./src/test/jason/asl/functions/median.asl:38) -- math.median could not define a median for the empty set '[]'. -- error while evaluating function, unifier = {}\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [ArithFunctionTerm] Error in 'math.median([])' (file:./src/test/jason/asl/functions/median.asl:38) -- math.median could not define a median for the empty set '[]'. -- error while evaluating function, unifier = {S=waiting}\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [median] state(executing)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [ArithFunctionTerm] Error in 'math.median([])' (file:./src/test/jason/asl/functions/median.asl:38) -- math.median could not define a median for the empty set '[]'. -- error while evaluating function, unifier = {}\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [median] state(pending)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [ArithFunctionTerm] Error in 'math.median([])' (file:./src/test/jason/asl/functions/median.asl:38) -- math.median could not define a median for the empty set '[]'. -- error while evaluating function, unifier = {}\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [ArithFunctionTerm] Error in 'math.median([])' (file:./src/test/jason/asl/functions/median.asl:38) -- math.median could not define a median for the empty set '[]'. -- error while evaluating function, unifier = {S=achieved}\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [median] state(executing)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [ArithFunctionTerm] Error in 'math.median([])' (file:./src/test/jason/asl/functions/median.asl:38) -- math.median could not define a median for the empty set '[]'. -- error while evaluating function, unifier = {S=finished}\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [median] state(waiting)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [median] state(failed)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [median] state(achieved)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | [median] state(finished)\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | See https://docs.gradle.org/8.0.2/userguide/command_line_interface.html#sec:command_line_warnings\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | \n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | BUILD SUCCESSFUL in 6s\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   | 5 actionable tasks: 2 executed, 3 up-to-date\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \u2705  Success - Main Test jason\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build] \u2b50 Run Post Set up JDK 17\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build]   \u2705  Success - Post Set up JDK 17\n[53ba8a2e-d3a1-4549-b2db-278b5f554b3a/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/jason-lang-jason/.github/workflows/gradle-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 180.4139974117279
    }
}