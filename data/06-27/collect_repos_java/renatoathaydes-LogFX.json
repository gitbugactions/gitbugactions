{
    "repository": "renatoathaydes/LogFX",
    "stars": 180,
    "language": "java",
    "size": 6936,
    "clone_url": "https://github.com/renatoathaydes/LogFX.git",
    "timestamp": "2023-06-29T11:55:23.734953Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "gradle",
        "unknown"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "com.athaydes.logfx.text.DateTimeFormatGuesserSpec",
                "name": "Should be able to guess the format of most logs [lines: [2021-9-3T20:54:54.207+02:00 [file-change-watcher-1] INFO com.athaydes.logfx.file.FileChangeWatcher - Watching file ], expectedDateTimes: [2021-09-03T18:54:54.207Z], #0]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.text.DateTimeFormatGuesserSpec",
                "name": "Should be able to guess the format of most logs [lines: [2021-9-3T20:54:51.97+02:00], expectedDateTimes: [2021-09-03T18:54:51.970Z], #1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.text.DateTimeFormatGuesserSpec",
                "name": "Should be able to guess the format of most logs [lines: [2017-09-11T18:13:57.483+02:00 TRACE {worker-1} com.acme.Log event], expectedDateTimes: [2017-09-11T16:13:57.483Z], #2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.text.DateTimeFormatGuesserSpec",
                "name": "Should be able to guess the format of most logs [lines: [2017-9-14T19:23:53.499+02:00 [pool-6-thread-1] DEBUG com], expectedDateTimes: [2017-09-14T17:23:53.499Z], #3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.text.DateTimeFormatGuesserSpec",
                "name": "Should be able to guess the format of most logs [lines: [2013-2-23T5:6:7 [pool-6-thread-1] DEBUG com], expectedDateTimes: [2013-02-23T05:06:07Z], #4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.text.DateTimeFormatGuesserSpec",
                "name": "Should be able to guess the format of most logs [lines: [INFO 2017-09-11T18:13:57.485+04:00 {worker-1} com.acme.Log event], expectedDateTimes: [2017-09-11T14:13:57.485Z], #5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.text.DateTimeFormatGuesserSpec",
                "name": "Should be able to guess the format of most logs [lines: [INFO Fri Sep 01 22:02:55 CEST 2017 - 22, Sun Nov 03 14:22:00 CEST 2019 msg], expectedDateTimes: [2017-09-01T20:02:55Z, 2019-11-03T13:22:00Z], #6]",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.text.DateTimeFormatGuesserSpec",
                "name": "Should be able to guess the format of most logs [lines: [[Fri, 09 Sep 2011 10:42:29 GMT] [core:error]], expectedDateTimes: [2011-09-09T10:42:29Z], #7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.text.DateTimeFormatGuesserSpec",
                "name": "Should be able to guess the format of most logs [lines: [[Fri, 09 Sep 2011 10:42:29 +0200] [core:error]], expectedDateTimes: [2011-09-09T08:42:29Z], #8]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.text.DateTimeFormatGuesserSpec",
                "name": "Should be able to guess the format of most logs [lines: [[Fri, 09 Sep 2011 10:42:29 -0530] [core:error]], expectedDateTimes: [2011-09-09T16:12:29Z], #9]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.text.DateTimeFormatGuesserSpec",
                "name": "Should be able to guess the format of most logs [lines: [[10/Oct/2000:13:55:36 -0700] INFO hello], expectedDateTimes: [2000-10-10T20:55:36Z], #10]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.text.DateTimeFormatGuesserSpec",
                "name": "Should be able to guess the format of most logs [lines: [2020-06-21 18:32:45-07 INFO hello], expectedDateTimes: [2020-06-22T01:32:45Z], #11]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.text.DateTimeFormatGuesserSpec",
                "name": "If log file has more than one date format, should guess the most common ones first",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.text.DateTimeFormatGuesserSpec",
                "name": "A single line with a valid date-time is enough for the guesser to guess a formatter correctly",
                "time": 0.114,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a single-line file spanning multiple buffers",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a multi-line file with some lines spanning multiple buffers",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a short file with a short buffer [windowSize: 1, expectedLines: [10], #0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a short file with a short buffer [windowSize: 2, expectedLines: [9, 10], #1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a short file with a short buffer [windowSize: 3, expectedLines: [8, 9, 10], #2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a short file with a short buffer [windowSize: 10, expectedLines: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], #3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a short file with a short buffer [windowSize: 100, expectedLines: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], #4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a short file with the default buffer [windowSize: 1, expectedLines: [10], #0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a short file with the default buffer [windowSize: 2, expectedLines: [9, 10], #1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a short file with the default buffer [windowSize: 3, expectedLines: [8, 9, 10], #2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a short file with the default buffer [windowSize: 10, expectedLines: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], #3]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a short file with the default buffer [windowSize: 100, expectedLines: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], #4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a long file [windowSize: 1, expectedLines: [100000], #0]",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a long file [windowSize: 2, expectedLines: [99999, 100000], #1]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a long file [windowSize: 3, expectedLines: [99998, 99999, 100000], #2]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a long file [windowSize: 10, expectedLines: [99991, 99992, 99993, 99994, 99995, 99996, 99997, 99998, 99999, 100000], #3]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a long file [windowSize: 100, expectedLines: [99901, 99902, 99903, 99904, 99905, 99906, 99907, 99908, 99909, 99910, 99911, 99912, 99913, 99914, 99915, 99916, 99917, 99918, 99919, 99920, 99921, 99922, 99923, 99924, 99925, 99926, 99927, 99928, 99929, 99930, 99931, 99932, 99933, 99934, 99935, 99936, 99937, 99938, 99939, 99940, 99941, 99942, 99943, 99944, 99945, 99946, 99947, 99948, 99949, 99950, 99951, 99952, 99953, 99954, 99955, 99956, 99957, 99958, 99959, 99960, 99961, 99962, 99963, 99964, 99965, 99966, 99967, 99968, 99969, 99970, 99971, 99972, 99973, 99974, 99975, 99976, 99977, 99978, 99979, 99980, 99981, 99982, 99983, 99984, 99985, 99986, 99987, 99988, 99989, 99990, 99991, 99992, 99993, 99994, 99995, 99996, 99997, 99998, 99999, 100000], #4]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the top of a long file [windowSize: 1, expectedLines: [1], #0]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the top of a long file [windowSize: 2, expectedLines: [1, 2], #1]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the top of a long file [windowSize: 3, expectedLines: [1, 2, 3], #2]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the top of a long file [windowSize: 10, expectedLines: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], #3]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the top of a long file [windowSize: 100, expectedLines: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], #4]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a long file, then move up using a large or small buffer [windowSize: 1, bufferSize: 2, expectedLines: [99999], expectedLines2: [99998], #0]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a long file, then move up using a large or small buffer [windowSize: 2, bufferSize: 3, expectedLines: [99997, 99998], expectedLines2: [99995, 99996], #1]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a long file, then move up using a large or small buffer [windowSize: 3, bufferSize: 4, expectedLines: [99995, 99996, 99997], expectedLines2: [99992, 99993, 99994], #2]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a long file, then move up using a large or small buffer [windowSize: 3, bufferSize: 5, expectedLines: [99995, 99996, 99997], expectedLines2: [99992, 99993, 99994], #3]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a long file, then move up using a large or small buffer [windowSize: 3, bufferSize: 6, expectedLines: [99995, 99996, 99997], expectedLines2: [99992, 99993, 99994], #4]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a long file, then move up using a large or small buffer [windowSize: 3, bufferSize: 7, expectedLines: [99995, 99996, 99997], expectedLines2: [99992, 99993, 99994], #5]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a long file, then move up using a large or small buffer [windowSize: 3, bufferSize: 8, expectedLines: [99995, 99996, 99997], expectedLines2: [99992, 99993, 99994], #6]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a long file, then move up using a large or small buffer [windowSize: 1, bufferSize: 4096, expectedLines: [99999], expectedLines2: [99998], #7]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a long file, then move up using a large or small buffer [windowSize: 2, bufferSize: 4096, expectedLines: [99997, 99998], expectedLines2: [99995, 99996], #8]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the tail of a long file, then move up using a large or small buffer [windowSize: 3, bufferSize: 4096, expectedLines: [99995, 99996, 99997], expectedLines2: [99992, 99993, 99994], #9]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the top of a long file, then move down using a large or small buffer [windowSize: 1, bufferSize: 2, expectedLines: [2], expectedLines2: [3], #0]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the top of a long file, then move down using a large or small buffer [windowSize: 2, bufferSize: 3, expectedLines: [3, 4], expectedLines2: [5, 6], #1]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the top of a long file, then move down using a large or small buffer [windowSize: 3, bufferSize: 4, expectedLines: [4, 5, 6], expectedLines2: [7, 8, 9], #2]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the top of a long file, then move down using a large or small buffer [windowSize: 3, bufferSize: 5, expectedLines: [4, 5, 6], expectedLines2: [7, 8, 9], #3]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the top of a long file, then move down using a large or small buffer [windowSize: 3, bufferSize: 6, expectedLines: [4, 5, 6], expectedLines2: [7, 8, 9], #4]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the top of a long file, then move down using a large or small buffer [windowSize: 3, bufferSize: 7, expectedLines: [4, 5, 6], expectedLines2: [7, 8, 9], #5]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the top of a long file, then move down using a large or small buffer [windowSize: 3, bufferSize: 8, expectedLines: [4, 5, 6], expectedLines2: [7, 8, 9], #6]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the top of a long file, then move down using a large or small buffer [windowSize: 1, bufferSize: 4096, expectedLines: [2], expectedLines2: [3], #7]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the top of a long file, then move down using a large or small buffer [windowSize: 2, bufferSize: 4096, expectedLines: [3, 4], expectedLines2: [5, 6], #8]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read the top of a long file, then move down using a large or small buffer [windowSize: 3, bufferSize: 4096, expectedLines: [4, 5, 6], expectedLines2: [7, 8, 9], #9]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Refresh at top should cause the previously read lines to be read again",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Refresh at tail should cause the previously read lines to be read again",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Moving down a small amount of lines returns the expected lines and moves the file window accordingly [linesToMove: 0, expectedLines: [], expectedFileWindow: [000, 111, 222], #0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Moving down a small amount of lines returns the expected lines and moves the file window accordingly [linesToMove: -1, expectedLines: [], expectedFileWindow: [000, 111, 222], #1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Moving down a small amount of lines returns the expected lines and moves the file window accordingly [linesToMove: -342, expectedLines: [], expectedFileWindow: [000, 111, 222], #2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Moving down a small amount of lines returns the expected lines and moves the file window accordingly [linesToMove: 1, expectedLines: [333], expectedFileWindow: [111, 222, 333], #3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Moving down a small amount of lines returns the expected lines and moves the file window accordingly [linesToMove: 2, expectedLines: [333, 444], expectedFileWindow: [222, 333, 444], #4]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Moving down a small amount of lines returns the expected lines and moves the file window accordingly [linesToMove: 3, expectedLines: [333, 444, 555], expectedFileWindow: [333, 444, 555], #5]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Moving up a small amount of lines returns the expected lines and moves the file window accordingly [linesToMove: 0, expectedLines: [], expectedFileWindow: [777, 888, 999], #0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Moving up a small amount of lines returns the expected lines and moves the file window accordingly [linesToMove: -1, expectedLines: [], expectedFileWindow: [777, 888, 999], #1]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Moving up a small amount of lines returns the expected lines and moves the file window accordingly [linesToMove: -342, expectedLines: [], expectedFileWindow: [777, 888, 999], #2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Moving up a small amount of lines returns the expected lines and moves the file window accordingly [linesToMove: 1, expectedLines: [666], expectedFileWindow: [666, 777, 888], #3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Moving up a small amount of lines returns the expected lines and moves the file window accordingly [linesToMove: 2, expectedLines: [555, 666], expectedFileWindow: [555, 666, 777], #4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Moving up a small amount of lines returns the expected lines and moves the file window accordingly [linesToMove: 3, expectedLines: [444, 555, 666], expectedFileWindow: [444, 555, 666], #5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Moving up after file boundaries does not cause errors",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Moving down after file boundaries does not cause errors",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Moving down more lines than the size of the file window is allowed and the file window moves as expected",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Moving up more lines than the size of the file window is allowed and the file window moves as expected",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "It is possible to refresh from the tail after a file change",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "It is possible to refresh from the top after a file change",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read and move down then up through Windows log file, handling line endings correctly [windowSize: 2, bufferSize: 8, #0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read and move down then up through Windows log file, handling line endings correctly [windowSize: 3, bufferSize: 8, #1]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read and move down then up through Windows log file, handling line endings correctly [windowSize: 4, bufferSize: 8, #2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read and move down then up through Windows log file, handling line endings correctly [windowSize: 2, bufferSize: 24, #3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read and move down then up through Windows log file, handling line endings correctly [windowSize: 3, bufferSize: 24, #4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read and move down then up through Windows log file, handling line endings correctly [windowSize: 4, bufferSize: 24, #5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read and move down then up through Windows log file, handling line endings correctly [windowSize: 2, bufferSize: 4096, #6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read and move down then up through Windows log file, handling line endings correctly [windowSize: 3, bufferSize: 4096, #7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read and move down then up through Windows log file, handling line endings correctly [windowSize: 4, bufferSize: 4096, #8]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read and move up then down through Windows log file, handling line endings correctly [windowSize: 2, bufferSize: 8, #0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read and move up then down through Windows log file, handling line endings correctly [windowSize: 3, bufferSize: 8, #1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read and move up then down through Windows log file, handling line endings correctly [windowSize: 4, bufferSize: 8, #2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read and move up then down through Windows log file, handling line endings correctly [windowSize: 2, bufferSize: 24, #3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read and move up then down through Windows log file, handling line endings correctly [windowSize: 3, bufferSize: 24, #4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read and move up then down through Windows log file, handling line endings correctly [windowSize: 4, bufferSize: 24, #5]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read and move up then down through Windows log file, handling line endings correctly [windowSize: 2, bufferSize: 4096, #6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read and move up then down through Windows log file, handling line endings correctly [windowSize: 3, bufferSize: 4096, #7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderSpec",
                "name": "Can read and move up then down through Windows log file, handling line endings correctly [windowSize: 4, bufferSize: 4096, #8]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.ui.SelectionHandlerSpec",
                "name": "It is possible to select all nodes between two known nodes [dragStartIndex: 0, dragEndIndex: 0, expectedSelectedIndexes: [0], #0]",
                "time": 0.15,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.ui.SelectionHandlerSpec",
                "name": "It is possible to select all nodes between two known nodes [dragStartIndex: 0, dragEndIndex: 1, expectedSelectedIndexes: [0, 1], #1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.ui.SelectionHandlerSpec",
                "name": "It is possible to select all nodes between two known nodes [dragStartIndex: 1, dragEndIndex: 0, expectedSelectedIndexes: [0, 1], #2]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.ui.SelectionHandlerSpec",
                "name": "It is possible to select all nodes between two known nodes [dragStartIndex: 1, dragEndIndex: 1, expectedSelectedIndexes: [1], #3]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.ui.SelectionHandlerSpec",
                "name": "It is possible to select all nodes between two known nodes [dragStartIndex: 2, dragEndIndex: 0, expectedSelectedIndexes: [0, 1, 2], #4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.ui.SelectionHandlerSpec",
                "name": "It is possible to select all nodes between two known nodes [dragStartIndex: 0, dragEndIndex: 2, expectedSelectedIndexes: [0, 1, 2], #5]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.ui.SelectionHandlerSpec",
                "name": "It is possible to select all nodes between two known nodes [dragStartIndex: 1, dragEndIndex: 2, expectedSelectedIndexes: [1, 2], #6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.ui.SelectionHandlerSpec",
                "name": "It is possible to select all nodes between two known nodes [dragStartIndex: 2, dragEndIndex: 1, expectedSelectedIndexes: [1, 2], #7]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.ui.SelectionHandlerSpec",
                "name": "It is possible to select all nodes between two known nodes [dragStartIndex: 3, dragEndIndex: 0, expectedSelectedIndexes: [0, 1, 2, 3], #8]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.ui.SelectionHandlerSpec",
                "name": "It is possible to select all nodes between two known nodes [dragStartIndex: 0, dragEndIndex: 3, expectedSelectedIndexes: [0, 1, 2, 3], #9]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.ui.SelectionHandlerSpec",
                "name": "It is possible to select all nodes between two known nodes [dragStartIndex: 3, dragEndIndex: 1, expectedSelectedIndexes: [1, 2, 3], #10]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.ui.SelectionHandlerSpec",
                "name": "It is possible to select all nodes between two known nodes [dragStartIndex: 1, dragEndIndex: 3, expectedSelectedIndexes: [1, 2, 3], #11]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.ui.SelectionHandlerSpec",
                "name": "It is possible to select all nodes between two known nodes [dragStartIndex: 0, dragEndIndex: 4, expectedSelectedIndexes: [0, 1, 2, 3, 4], #12]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.ui.SelectionHandlerSpec",
                "name": "It is possible to select all nodes between two known nodes [dragStartIndex: 4, dragEndIndex: 0, expectedSelectedIndexes: [0, 1, 2, 3, 4], #13]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.ui.SelectionHandlerSpec",
                "name": "It is possible to select all nodes between two known nodes [dragStartIndex: 3, dragEndIndex: 4, expectedSelectedIndexes: [3, 4], #14]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.ui.SelectionHandlerSpec",
                "name": "It is possible to select all nodes between two known nodes [dragStartIndex: 4, dragEndIndex: 3, expectedSelectedIndexes: [3, 4], #15]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.ui.SelectionHandlerSpec",
                "name": "It is possible to select all nodes between two known nodes [dragStartIndex: 4, dragEndIndex: 4, expectedSelectedIndexes: [4], #16]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find easy target down [target: abc, expected: SearchResult[lineNumber=0, resultCase=AT], #0]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find easy target down [target: def, expected: SearchResult[lineNumber=1, resultCase=AT], #1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find easy target down [target: ghi, expected: SearchResult[lineNumber=2, resultCase=AT], #2]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find easy target down [target: jkl, expected: SearchResult[lineNumber=3, resultCase=AT], #3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find easy target down [target: mno, expected: SearchResult[lineNumber=1, resultCase=AFTER], #4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find easy target up [target: aaa, expected: SearchResult[lineNumber=1, resultCase=AT], #0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find easy target up [target: aa, expected: SearchResult[lineNumber=0, resultCase=AT], #1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find easy target up [target: a, expected: SearchResult[lineNumber=0, resultCase=BEFORE], #2]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target down a few pages [target: ghi, pagesDown: 1, expected: SearchResult[lineNumber=0, resultCase=AT], #0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target down a few pages [target: jkl, pagesDown: 1, expected: SearchResult[lineNumber=1, resultCase=AT], #1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target down a few pages [target: mno, pagesDown: 2, expected: SearchResult[lineNumber=0, resultCase=AT], #2]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target down a few pages [target: pqr, pagesDown: 2, expected: SearchResult[lineNumber=1, resultCase=AT], #3]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target down a few pages [target: z, pagesDown: 3, expected: SearchResult[lineNumber=2, resultCase=AFTER], #4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target up a few pages [target: mno, pagesUp: 1, expected: SearchResult[lineNumber=2, resultCase=AT], #0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target up a few pages [target: jkl, pagesUp: 1, expected: SearchResult[lineNumber=1, resultCase=AT], #1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target up a few pages [target: ghi, pagesUp: 1, expected: SearchResult[lineNumber=0, resultCase=AT], #2]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target up a few pages [target: def, pagesUp: 2, expected: SearchResult[lineNumber=1, resultCase=AT], #3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target up a few pages [target: abc, pagesUp: 2, expected: SearchResult[lineNumber=0, resultCase=AT], #4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target up a few pages [target: a, pagesUp: 3, expected: SearchResult[lineNumber=0, resultCase=BEFORE], #5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target down after unknown line [target: abc, unknownLines: [abc], expected: SearchResult[lineNumber=0, resultCase=BEFORE], #0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target down after unknown line [target: def, unknownLines: [abc], expected: SearchResult[lineNumber=1, resultCase=AT], #1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target down after unknown line [target: def, unknownLines: [def], expected: SearchResult[lineNumber=2, resultCase=BEFORE], #2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target down after unknown line [target: def, unknownLines: [abc, def], expected: SearchResult[lineNumber=0, resultCase=BEFORE], #3]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target down after unknown line [target: ghi, unknownLines: [abc], expected: SearchResult[lineNumber=2, resultCase=AT], #4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target down after unknown line [target: ghi, unknownLines: [abc, def, ghi, jkl], expected: null, #5]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target down after unknown line [target: ghi, unknownLines: [ghi, jkl], expected: null, #6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target up after unknown line [target: abc, unknownLines: [ghi], expected: SearchResult[lineNumber=0, resultCase=AT], #0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target up after unknown line [target: abc, unknownLines: [ghi, jkl], expected: SearchResult[lineNumber=0, resultCase=AT], #1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target up after unknown line [target: abc, unknownLines: [abc, ghi], expected: SearchResult[lineNumber=0, resultCase=BEFORE], #2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target up after unknown line [target: abc, unknownLines: [def, ghi], expected: SearchResult[lineNumber=0, resultCase=AT], #3]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target up after unknown line [target: def, unknownLines: [abc, ghi], expected: SearchResult[lineNumber=1, resultCase=AT], #4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileSearcherSpec",
                "name": "Can find target up after unknown line [target: def, unknownLines: [def, ghi], expected: SearchResult[lineNumber=0, resultCase=AFTER], #5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderWithFilterSpec",
                "name": "FileReader should be able to filter lines from the top [mustContainText: 1, expectedLines: [line 1, line 10, line 11, line 12, line 13], #0]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderWithFilterSpec",
                "name": "FileReader should be able to filter lines from the top [mustContainText: line 2, expectedLines: [line 2, line 20, line 21, line 22, line 23], #1]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderWithFilterSpec",
                "name": "FileReader should be able to filter lines from the top [mustContainText: 10, expectedLines: [line 10, line 100], #2]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderWithFilterSpec",
                "name": "FileReader should be able to filter lines from the top [mustContainText: 30, expectedLines: [line 30], #3]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderWithFilterSpec",
                "name": "FileReader should be able to filter lines from the top (after moving down) [mustContainText: 1, expectedNext3Lines: [line 14, line 15, line 16], expectedNewFileWindow: [line 12, line 13, line 14, line 15, line 16], #0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderWithFilterSpec",
                "name": "FileReader should be able to filter lines from the top (after moving down) [mustContainText: line 2, expectedNext3Lines: [line 24, line 25, line 26], expectedNewFileWindow: [line 22, line 23, line 24, line 25, line 26], #1]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderWithFilterSpec",
                "name": "FileReader should be able to filter lines from the top (after moving down) [mustContainText: 10, expectedNext3Lines: [], expectedNewFileWindow: [line 10, line 100], #2]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderWithFilterSpec",
                "name": "FileReader should be able to filter lines from the top (after moving down) [mustContainText: 30, expectedNext3Lines: [], expectedNewFileWindow: [line 30], #3]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderWithFilterSpec",
                "name": "FileReader should be able to filter lines from the tail (after moving up) [mustContainText: 1, expectedUp7Lines: [line 17, line 18, line 19, line 21, line 31, line 41, line 51], expectedNewFileWindow: [line 17, line 18, line 19, line 21, line 31], #0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderWithFilterSpec",
                "name": "FileReader should be able to filter lines from the tail (after moving up) [mustContainText: line 2, expectedUp7Lines: [line 2, line 20, line 21, line 22, line 23, line 24], expectedNewFileWindow: [line 2, line 20, line 21, line 22, line 23], #1]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderWithFilterSpec",
                "name": "FileReader should be able to filter lines from the tail (after moving up) [mustContainText: 10, expectedUp7Lines: [], expectedNewFileWindow: [line 10, line 100], #2]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderWithFilterSpec",
                "name": "FileReader should be able to filter lines from the tail (after moving up) [mustContainText: 30, expectedUp7Lines: [], expectedNewFileWindow: [line 30], #3]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderWithFilterSpec",
                "name": "FileReader should be able to filter lines from the tail [mustContainText: 1, expectedLines: [line 61, line 71, line 81, line 91, line 100], #0]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderWithFilterSpec",
                "name": "FileReader should be able to filter lines from the tail [mustContainText: line 2, expectedLines: [line 25, line 26, line 27, line 28, line 29], #1]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderWithFilterSpec",
                "name": "FileReader should be able to filter lines from the tail [mustContainText: 10, expectedLines: [line 10, line 100], #2]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileContentReaderWithFilterSpec",
                "name": "FileReader should be able to filter lines from the tail [mustContainText: 30, expectedLines: [line 30], #3]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can get first item of collection [collection: [], expected: Optional.empty, #0]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can get first item of collection [collection: [a], expected: Optional[a], #1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can get first item of collection [collection: [b, c], expected: Optional[b], #2]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can get first item of collection [collection: 1..10, expected: Optional[1], #3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can get last item of collection [collection: [], expected: Optional.empty, #0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can get last item of collection [collection: [a], expected: Optional[a], #1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can get last item of collection [collection: [b, c], expected: Optional[c], #2]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can get last item of collection [collection: 1..10, expected: Optional[10], #3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can append item to collection [collection: [], item: a, expected: [a], #0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can append item to collection [collection: [a], item: b, expected: [b, a], #1]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can append item to collection [collection: [0, 1, 2, 3], item: 4, expected: [4, 0, 1, 2, 3], #2]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can find mid point between two items in a collection [collection: [], index: 0, expected: 0.5, #0]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can find mid point between two items in a collection [collection: [], index: 1, expected: 0.5, #1]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can find mid point between two items in a collection [collection: [0.5], index: 0, expected: 0.25, #2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can find mid point between two items in a collection [collection: [0.5], index: 1, expected: 0.75, #3]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can find mid point between two items in a collection [collection: [0.5], index: 2, expected: 0.75, #4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can find mid point between two items in a collection [collection: [0.1], index: 0, expected: 0.05, #5]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can find mid point between two items in a collection [collection: [0.1], index: 1, expected: 0.55, #6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can find mid point between two items in a collection [collection: [0.2, 0.7], index: 0, expected: 0.1, #7]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can find mid point between two items in a collection [collection: [0.2, 0.7], index: 1, expected: 0.45, #8]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can find mid point between two items in a collection [collection: [0.2, 0.7], index: 2, expected: 0.85, #9]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can find mid point between two items in a collection [collection: [0.2, 0.7], index: 3, expected: 0.85, #10]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can find mid point between two items in a collection [collection: [0.3, 0.5, 0.8], index: 0, expected: 0.15, #11]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can find mid point between two items in a collection [collection: [0.3, 0.5, 0.8], index: 1, expected: 0.4, #12]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can find mid point between two items in a collection [collection: [0.3, 0.5, 0.8], index: 2, expected: 0.65, #13]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can find mid point between two items in a collection [collection: [0.3, 0.5, 0.8], index: 3, expected: 0.9, #14]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.IterableUtilsSpec",
                "name": "Can find mid point between two items in a collection [collection: [0.3, 0.5, 0.8], index: 4, expected: 0.9, #15]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileChangeWatcherSpec",
                "name": "FileWatcher can watch existing file",
                "time": 1.569,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileChangeWatcherSpec",
                "name": "FileWatcher can see when existing file is deleted",
                "time": 1.564,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileChangeWatcherSpec",
                "name": "FileWatcher can start watching non-existing file and later see when it's created",
                "time": 1.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileChangeWatcherSpec",
                "name": "FileWatcher can start watching non-existing file under non-existing dir, and later see when it's created",
                "time": 3.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileChangeWatcherSpec",
                "name": "FileWatcher can start watching existing file, then restart after it gets deleted and re-created again",
                "time": 1.56,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.file.FileChangeWatcherSpec",
                "name": "FileWatcher can STOP watching file when it is closed",
                "time": 2.558,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.concurrency.TaskRunnerSpec",
                "name": "Should be able to run tasks at most at a given frequency",
                "time": 0.242,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Can parse highlight expressions from config (V1) [expression: aliceBlue aquamarine .*hej, expectedExpression: .*hej, expectedBkg: 0xf0f8ffff, expectedFill: 0x7fffd4ff, expectedFiltered: false, #0]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Can parse highlight expressions from config (V1) [expression: blue   yellow .*d.* x, expectedExpression: .*d.* x, expectedBkg: 0x0000ffff, expectedFill: 0xffff00ff, expectedFiltered: false, #1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Can parse highlight expressions from config (V1) [expression: red white   a b  c, expectedExpression: a b  c, expectedBkg: 0xff0000ff, expectedFill: 0xffffffff, expectedFiltered: false, #2]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Can parse highlight expressions from config (V2) [expression: aliceBlue aquamarine false .*hej, expectedExpression: .*hej, expectedBkg: 0xf0f8ffff, expectedFill: 0x7fffd4ff, expectedFiltered: false, #0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Can parse highlight expressions from config (V2) [expression: blue   yellow true .*d.* x, expectedExpression: .*d.* x, expectedBkg: 0x0000ffff, expectedFill: 0xffff00ff, expectedFiltered: true, #1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Can parse highlight expressions from config (V2) [expression: red white true  a b  c, expectedExpression: a b  c, expectedBkg: 0xff0000ff, expectedFill: 0xffffffff, expectedFiltered: true, #2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Can parse highlight expressions from config (V2) [expression: red white false  a b  c, expectedExpression: a b  c, expectedBkg: 0xff0000ff, expectedFill: 0xffffffff, expectedFiltered: false, #3]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Can parse highlight expressions from config (V2) [expression: red white false, expectedExpression: , expectedBkg: 0xff0000ff, expectedFill: 0xffffffff, expectedFiltered: false, #4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Can parse log lines from config [line:   hello, expectedFile: hello, expectedGroup: , #0]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Can parse log lines from config [line: hello  , expectedFile: hello, expectedGroup: , #1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Can parse log lines from config [line:  /var/log/serv.log, expectedFile: /var/log/serv.log, expectedGroup: , #2]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Can parse log lines from config [line:   []hello, expectedFile: hello, expectedGroup: , #3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Can parse log lines from config [line:   [my group]/var/log, expectedFile: /var/log, expectedGroup: my group, #4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Can parse log lines from config [line:   [gr]  /var/log, expectedFile: /var/log, expectedGroup: gr, #5]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Can parse log lines from config [line:   [gr]  /var/log[0], expectedFile: /var/log[0], expectedGroup: gr, #6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V1, expression: , expectedPartialError: empty highlight expression, #0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V1, expression:  , expectedPartialError: highlight expression contains invalid spaces at start/end, #1]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V1, expression:  red, expectedPartialError: highlight expression contains invalid spaces at start/end, #2]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V1, expression: red , expectedPartialError: highlight expression contains invalid spaces at start/end, #3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V1, expression: red, expectedPartialError: fill color and regular expression not specified, #4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V1, expression: wrong, expectedPartialError: fill color and regular expression not specified, #5]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V1, expression: wrong white .*.*, expectedPartialError: invalid background color, #6]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V1, expression: red white, expectedPartialError: regular expression not specified, #7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V1, expression: red wrong, expectedPartialError: regular expression not specified, #8]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V1, expression: red wrong .*.*, expectedPartialError: invalid fill color, #9]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V1, expression: red white ++, expectedPartialError: cannot parse regular expression, #10]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V2, expression: , expectedPartialError: empty highlight expression, #11]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V2, expression:  , expectedPartialError: highlight expression contains invalid spaces at start/end, #12]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V2, expression:  red, expectedPartialError: highlight expression contains invalid spaces at start/end, #13]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V2, expression: red , expectedPartialError: highlight expression contains invalid spaces at start/end, #14]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V2, expression: red, expectedPartialError: fill color and regular expression not specified, #15]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V2, expression: wrong, expectedPartialError: fill color and regular expression not specified, #16]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V2, expression: wrong white .*.*, expectedPartialError: invalid background color, #17]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V2, expression: red white, expectedPartialError: regular expression not specified, #18]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V2, expression: red wrong, expectedPartialError: regular expression not specified, #19]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V2, expression: red wrong .*.*, expectedPartialError: invalid fill color, #20]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Errors when parsing invalid highlight expressions [version: V2, expression: red white x expr, expectedPartialError: invalid value for filtered property, #21]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Can parse simple V2 configuration",
                "time": 0.152,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.config.ConfigParserSpec",
                "name": "Can parse simple V3 configuration with named highlight rules",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.iterable.ObservableListViewSpec",
                "name": "Can iterate over all items",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.data.LinesScrollerSpec",
                "name": "LineScroller must be able to scroll by adding lines on the top",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.data.LinesScrollerSpec",
                "name": "LineScroller must be able to scroll by adding lines on the bottom",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.data.LinesScrollerSpec",
                "name": "Adding more lines that a LineScroller can hold on the top results in the top part of the lines being accepted",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.athaydes.logfx.data.LinesScrollerSpec",
                "name": "Adding more lines that a LineScroller can hold on the bottom results in the bottom part of the lines being accepted",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ] \ud83d\ude80  Start image=crawlergpt:latest\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ] \ud83d\ude80  Start image=crawlergpt:latest\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux] \ud83d\ude80  Start image=crawlergpt:latest\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX] user=0 workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX] user=0 workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX] user=0 workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \u2601  git clone 'https://github.com/scacap/action-surefire-report' # ref=v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \u2601  git clone 'https://github.com/scacap/action-surefire-report' # ref=v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \u2601  git clone 'https://github.com/scacap/action-surefire-report' # ref=v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux] \u2b50 Run Main actions/checkout@v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \u2705  Success - Main actions/checkout@v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ] \u2b50 Run Main actions/checkout@v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \u2705  Success - Main actions/checkout@v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux] \u2b50 Run Main actions/setup-java@v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udc33  docker cp src=/tmp/act-cache/b67e3c0a-65b2-4abf-b94b-acbd01c68b83/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ] \u2b50 Run Main actions/checkout@v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \u2705  Success - Main actions/checkout@v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ] \u2b50 Run Main actions/setup-java@v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udc33  docker cp src=/tmp/act-cache/b67e3c0a-65b2-4abf-b94b-acbd01c68b83/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ] \u2b50 Run Main actions/setup-java@v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udc33  docker cp src=/tmp/act-cache/b67e3c0a-65b2-4abf-b94b-acbd01c68b83/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::isExplicit: \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::explicit? false\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::evaluating 0 versions\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::match not found\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::isExplicit: \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::explicit? false\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::evaluating 0 versions\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::match not found\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu17.42.19-ca-fx-jdk17.0.7-linux_x64.tar.gz\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::Downloading /tmp/5cbd7df7-710f-4c99-be15-835154d820d1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu17.42.19-ca-fx-jdk17.0.7-linux_x64.tar.gz\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::Downloading /tmp/1210b4c5-c7e1-4aaf-97bb-4fc8da012e39\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::isExplicit: \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::explicit? false\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::evaluating 0 versions\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::match not found\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu17.42.19-ca-fx-jdk17.0.7-linux_x64.tar.gz\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::Downloading /tmp/2e232b1e-b6f0-4831-b22e-f4affebc6ec6\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::download complete\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | [command]/usr/bin/tar --version\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | tar (GNU tar) 1.30\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | This is free software: you are free to change and redistribute it.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | There is NO WARRANTY, to the extent permitted by law.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | Written by John Gilmore and Jay Fenlason.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_1924088477 -f /tmp/1210b4c5-c7e1-4aaf-97bb-4fc8da012e39\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::download complete\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | [command]/usr/bin/tar --version\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | tar (GNU tar) 1.30\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | This is free software: you are free to change and redistribute it.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | There is NO WARRANTY, to the extent permitted by law.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | Written by John Gilmore and Jay Fenlason.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_1112905956 -f /tmp/2e232b1e-b6f0-4831-b22e-f4affebc6ec6\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::download complete\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | [command]/usr/bin/tar --version\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | tar (GNU tar) 1.30\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | This is free software: you are free to change and redistribute it.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | There is NO WARRANTY, to the extent permitted by law.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | Written by John Gilmore and Jay Fenlason.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_1210379701 -f /tmp/5cbd7df7-710f-4c99-be15-835154d820d1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_1210379701/zulu17.42.19-ca-fx-jdk17.0.7-linux_x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::Caching tool jdk+fx 17.0.7 x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::source dir: /tmp/temp_1210379701/zulu17.42.19-ca-fx-jdk17.0.7-linux_x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk+fx/17.0.7/x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_1112905956/zulu17.42.19-ca-fx-jdk17.0.7-linux_x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::Caching tool jdk+fx 17.0.7 x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::source dir: /tmp/temp_1112905956/zulu17.42.19-ca-fx-jdk17.0.7-linux_x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk+fx/17.0.7/x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_1924088477/zulu17.42.19-ca-fx-jdk17.0.7-linux_x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::Caching tool jdk+fx 17.0.7 x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::source dir: /tmp/temp_1924088477/zulu17.42.19-ca-fx-jdk17.0.7-linux_x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk+fx/17.0.7/x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::finished caching tool\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | writing /home/runneradmin/.m2/settings.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \u2705  Success - Main actions/setup-java@v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \u2699  ::set-env:: JAVA_HOME_17.0.7_x64=/opt/hostedtoolcache/jdk+fx/17.0.7/x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk+fx/17.0.7/x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \u2699  ::set-env:: JAVA_HOME_17_0_7_X64=/opt/hostedtoolcache/jdk+fx/17.0.7/x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk+fx/17.0.7/x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \u2699  ::set-output:: version=17.0.7\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk+fx/17.0.7/x64/bin\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ] \u2b50 Run Main Build with Gradle\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::finished caching tool\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | writing /home/runneradmin/.m2/settings.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \u2705  Success - Main actions/setup-java@v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \u2699  ::set-env:: JAVA_HOME_17.0.7_x64=/opt/hostedtoolcache/jdk+fx/17.0.7/x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk+fx/17.0.7/x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \u2699  ::set-env:: JAVA_HOME_17_0_7_X64=/opt/hostedtoolcache/jdk+fx/17.0.7/x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::finished caching tool\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | writing /home/runneradmin/.m2/settings.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \u2705  Success - Main actions/setup-java@v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk+fx/17.0.7/x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \u2699  ::set-output:: version=17.0.7\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \u2699  ::set-env:: JAVA_HOME_17_0_7_X64=/opt/hostedtoolcache/jdk+fx/17.0.7/x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \u2699  ::set-env:: JAVA_HOME_17.0.7_x64=/opt/hostedtoolcache/jdk+fx/17.0.7/x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk+fx/17.0.7/x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk+fx/17.0.7/x64/bin\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ] \u2b50 Run Main Build with Gradle\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk+fx/17.0.7/x64\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \u2699  ::set-output:: version=17.0.7\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk+fx/17.0.7/x64/bin\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux] \u2b50 Run Main Build with Gradle\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | Downloading https://services.gradle.org/distributions/gradle-7.4-bin.zip\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | Downloading https://services.gradle.org/distributions/gradle-7.4-bin.zip\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | Downloading https://services.gradle.org/distributions/gradle-7.4-bin.zip\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | ...........10%...........20%...........30%...........40%...........50%...........60%...........70%...........80%...........90%...........100%\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | ...........10%...........20%...........30%...........40%...........50%...........60%...........70%...........80%...........90%...........100%\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | Welcome to Gradle 7.4!\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | Here are the highlights of this release:\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   |  - Aggregated test and JaCoCo reports\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   |  - Marking additional test source directories as tests in IntelliJ\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   |  - Support for Adoptium JDKs in Java toolchains\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | For more details see https://docs.gradle.org/7.4/release-notes.html\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | Welcome to Gradle 7.4!\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | Here are the highlights of this release:\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   |  - Aggregated test and JaCoCo reports\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   |  - Marking additional test source directories as tests in IntelliJ\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   |  - Support for Adoptium JDKs in Java toolchains\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | For more details see https://docs.gradle.org/7.4/release-notes.html\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | ...........10%...........20%...........30%...........40%...........50%...........60%...........70%...........80%...........90%...........100%\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | Welcome to Gradle 7.4!\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | Here are the highlights of this release:\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   |  - Aggregated test and JaCoCo reports\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   |  - Marking additional test source directories as tests in IntelliJ\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   |  - Support for Adoptium JDKs in Java toolchains\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | For more details see https://docs.gradle.org/7.4/release-notes.html\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | > Configure project :\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | Project : => 'com.athaydes.logfx' Java module\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | > Configure project :\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | Project : => 'com.athaydes.logfx' Java module\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Configure project :\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | Project : => 'com.athaydes.logfx' Java module\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | > Task :generateJavaSources\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | > Task :generateJavaSources\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :generateJavaSources\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | > Task :compileJava\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | > Task :compileGroovy NO-SOURCE\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | > Task :processResources\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | > Task :classes\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | > Task :compileTestJava NO-SOURCE\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | > Task :compileJava\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | > Task :compileGroovy NO-SOURCE\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | > Task :processResources UP-TO-DATE\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | > Task :classes\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | > Task :compileTestJava NO-SOURCE\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :compileJava\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :compileGroovy NO-SOURCE\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :processResources UP-TO-DATE\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :classes\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :compileTestJava NO-SOURCE\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | > Task :compileTestGroovy\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | > Task :processTestResources\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | > Task :testClasses\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | > Task :compileTestGroovy\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | > Task :processTestResources UP-TO-DATE\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | > Task :testClasses\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :compileTestGroovy\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :processTestResources UP-TO-DATE\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :testClasses\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | > Task :test\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | Running tests on classpath\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | > Task :test\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | Running tests on classpath\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :test\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | Running tests on classpath\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | > Task :test FAILED\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | FAILURE: Build failed with an exception.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | * What went wrong:\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | Execution failed for task ':test'.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | > Multiple build operations failed.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   |       Could not write XML test results for com.athaydes.logfx.text.DateTimeFormatGuesserSpec to file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.text.DateTimeFormatGuesserSpec.xml.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   |       Could not write XML test results for com.athaydes.logfx.file.FileSearcherSpec to file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.file.FileSearcherSpec.xml.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   |    > Could not write XML test results for com.athaydes.logfx.text.DateTimeFormatGuesserSpec to file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.text.DateTimeFormatGuesserSpec.xml.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   |    > Could not write XML test results for com.athaydes.logfx.file.FileSearcherSpec to file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.file.FileSearcherSpec.xml.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | * Try:\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | > Run with --stacktrace option to get the stack trace.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | > Run with --info or --debug option to get more log output.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | > Run with --scan to get full insights.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | * Get more help at https://help.gradle.org\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | See https://docs.gradle.org/7.4/userguide/command_line_interface.html#sec:command_line_warnings\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | BUILD FAILED in 56s\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | 6 actionable tasks: 6 executed\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | > Task :test FAILED\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | FAILURE: Build failed with an exception.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | * What went wrong:\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | Execution failed for task ':test'.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | > Multiple build operations failed.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   |       Could not write XML test results for com.athaydes.logfx.text.DateTimeFormatGuesserSpec to file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.text.DateTimeFormatGuesserSpec.xml.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   |       Could not write XML test results for com.athaydes.logfx.file.FileSearcherSpec to file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.file.FileSearcherSpec.xml.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   |    > Could not write XML test results for com.athaydes.logfx.text.DateTimeFormatGuesserSpec to file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.text.DateTimeFormatGuesserSpec.xml.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   |    > Could not write XML test results for com.athaydes.logfx.file.FileSearcherSpec to file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.file.FileSearcherSpec.xml.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | * Try:\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | > Run with --stacktrace option to get the stack trace.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | > Run with --info or --debug option to get more log output.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | > Run with --scan to get full insights.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | * Get more help at https://help.gradle.org\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | See https://docs.gradle.org/7.4/userguide/command_line_interface.html#sec:command_line_warnings\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | BUILD FAILED in 57s\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | 6 actionable tasks: 4 executed, 2 up-to-date\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \u2705  Success - Main Build with Gradle\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :check\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :jar\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :deps\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :splash-maker:compileJava\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :splash-maker:processResources\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :splash-maker:classes\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :splash-maker:compileTestJava NO-SOURCE\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :splash-maker:processTestResources NO-SOURCE\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :splash-maker:testClasses UP-TO-DATE\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :splash-maker:test NO-SOURCE\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | > Task :splash-maker:check UP-TO-DATE\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \u2705  Success - Main Build with Gradle\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ] \u2b50 Run Main Publish Test Report\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | See https://docs.gradle.org/7.4/userguide/command_line_interface.html#sec:command_line_warnings\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | \n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | BUILD SUCCESSFUL in 57s\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | 10 actionable tasks: 8 executed, 2 up-to-date\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udc33  docker cp src=/tmp/act-cache/b67e3c0a-65b2-4abf-b94b-acbd01c68b83/act/scacap-action-surefire-report@v1/ dst=/var/run/act/actions/scacap-action-surefire-report@v1/\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/scacap-action-surefire-report@v1/] user=0 workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/scacap-action-surefire-report@v1/dist/index.js] user= workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux] \u2b50 Run Main Publish Test Report\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \u2705  Success - Main Build with Gradle\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | Going to parse results form **/build/test-results/test/TEST-*.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::followSymbolicLinks 'false'\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::followSymbolicLinks 'false'\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::Search path '/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX'\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udc33  docker cp src=/tmp/act-cache/b67e3c0a-65b2-4abf-b94b-acbd01c68b83/act/scacap-action-surefire-report@v1/ dst=/var/run/act/actions/scacap-action-surefire-report@v1/\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.concurrency.TaskRunnerSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.config.ConfigParserSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.data.LinesScrollerSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.file.FileChangeWatcherSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.file.FileContentReaderSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.file.FileContentReaderWithFilterSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.file.FileSearcherSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.iterable.IterableUtilsSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.iterable.ObservableListViewSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.text.DateTimeFormatGuesserSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.ui.SelectionHandlerSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/scacap-action-surefire-report@v1/] user=0 workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | Result: 237 tests run, 0 skipped, 0 failed.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   | Posting status 'completed' with conclusion 'success' to refs/heads/master (sha: 2f771ce91c257d7f36e807c034869031930ed6be)\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udcac  ::debug::{%0A  \"owner\": \"renatoathaydes\",%0A  \"repo\": \"LogFX\",%0A  \"name\": \"Test Report (MacOS)\",%0A  \"head_sha\": \"2f771ce91c257d7f36e807c034869031930ed6be\",%0A  \"status\": \"completed\",%0A  \"conclusion\": \"success\",%0A  \"output\": {%0A    \"title\": \"237 tests run, 0 skipped, 0 failed.\",%0A    \"summary\": \"\",%0A    \"annotations\": []%0A  }%0A}\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ] \u2b50 Run Main Publish Test Report\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udc33  docker cp src=/tmp/act-cache/b67e3c0a-65b2-4abf-b94b-acbd01c68b83/act/scacap-action-surefire-report@v1/ dst=/var/run/act/actions/scacap-action-surefire-report@v1/\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/scacap-action-surefire-report@v1/] user=0 workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \u2757  ::error::Resource not accessible by personal access token\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \u274c  Failure - Main Publish Test Report\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ] exitcode '1': failure\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ] \u2b50 Run Post actions/setup-java@v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/scacap-action-surefire-report@v1/dist/index.js] user= workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/scacap-action-surefire-report@v1/dist/index.js] user= workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ]   \u2705  Success - Post actions/setup-java@v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | Going to parse results form **/build/test-results/test/TEST-*.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::followSymbolicLinks 'false'\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::followSymbolicLinks 'false'\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::Search path '/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX'\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | Going to parse results form **/build/test-results/test/TEST-*.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::followSymbolicLinks 'false'\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::followSymbolicLinks 'false'\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::Search path '/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX'\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.concurrency.TaskRunnerSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.config.ConfigParserSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.concurrency.TaskRunnerSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.config.ConfigParserSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.data.LinesScrollerSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.file.FileChangeWatcherSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.data.LinesScrollerSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.file.FileChangeWatcherSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.file.FileContentReaderSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.file.FileContentReaderSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.file.FileContentReaderWithFilterSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.file.FileContentReaderWithFilterSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.file.FileSearcherSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.file.FileSearcherSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.iterable.IterableUtilsSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.iterable.IterableUtilsSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.iterable.ObservableListViewSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.text.DateTimeFormatGuesserSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.ui.SelectionHandlerSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.iterable.ObservableListViewSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.text.DateTimeFormatGuesserSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::Parsing file /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/build/test-results/test/TEST-com.athaydes.logfx.ui.SelectionHandlerSpec.xml\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | Result: 237 tests run, 0 skipped, 0 failed.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | Result: 237 tests run, 0 skipped, 0 failed.\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   | Posting status 'completed' with conclusion 'success' to refs/heads/master (sha: 2f771ce91c257d7f36e807c034869031930ed6be)\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udcac  ::debug::{%0A  \"owner\": \"renatoathaydes\",%0A  \"repo\": \"LogFX\",%0A  \"name\": \"Test Report (Linux)\",%0A  \"head_sha\": \"2f771ce91c257d7f36e807c034869031930ed6be\",%0A  \"status\": \"completed\",%0A  \"conclusion\": \"success\",%0A  \"output\": {%0A    \"title\": \"237 tests run, 0 skipped, 0 failed.\",%0A    \"summary\": \"\",%0A    \"annotations\": []%0A  }%0A}\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   | Posting status 'completed' with conclusion 'success' to refs/heads/master (sha: 2f771ce91c257d7f36e807c034869031930ed6be)\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udcac  ::debug::{%0A  \"owner\": \"renatoathaydes\",%0A  \"repo\": \"LogFX\",%0A  \"name\": \"Test Report (Windows)\",%0A  \"head_sha\": \"2f771ce91c257d7f36e807c034869031930ed6be\",%0A  \"status\": \"completed\",%0A  \"conclusion\": \"success\",%0A  \"output\": {%0A    \"title\": \"237 tests run, 0 skipped, 0 failed.\",%0A    \"summary\": \"\",%0A    \"annotations\": []%0A  }%0A}\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \u2757  ::error::Resource not accessible by personal access token\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \u274c  Failure - Main Publish Test Report\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-mac  ] \ud83c\udfc1  Job failed\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \u2757  ::error::Resource not accessible by personal access token\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \u274c  Failure - Main Publish Test Report\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux] exitcode '1': failure\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux] \u2b50 Run Post actions/setup-java@v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ] exitcode '1': failure\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ] \u2b50 Run Post actions/setup-java@v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux]   \u2705  Success - Post actions/setup-java@v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ]   \u2705  Success - Post actions/setup-java@v1\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-linux] \ud83c\udfc1  Job failed\n[89a626d9-ab0d-4aef-89e6-29afdff89779/build-win  ] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'build-linux' failed\n",
        "workflow": "/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/renatoathaydes-LogFX/.github/workflows/gradle-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 152.22578358650208
    }
}