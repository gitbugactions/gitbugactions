{
    "repository": "LMAX-Exchange/Simple-DSL",
    "stars": 67,
    "language": "java",
    "size": 497,
    "clone_url": "https://github.com/LMAX-Exchange/Simple-DSL.git",
    "timestamp": "2023-06-29T10:46:50.636914Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "com.lmax.simpledsl.internal.RepeatingParamValuesTest",
                "name": "shouldReturnIfAParamHasBeenDefinedCaseInsensitively()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.RepeatingParamValuesTest",
                "name": "shouldReturnIfAParamHasBeenDefined()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.NameValuePairTest",
                "name": "shouldSplitNameAndValueWithEquals()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.NameValuePairTest",
                "name": "shouldUseAnEmptyStringWhenNoValueIsProvided()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.NameValuePairTest",
                "name": "shouldSplitNameAndValueWithColon()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.NameValuePairTest",
                "name": "shouldSetTheNameToNullAndAssignsEverythingToTheValueInAnUnnamedPair()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.NameValuePairTest",
                "name": "shouldTrimWhitespace()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.NameValuePairTest",
                "name": "shouldPreserveValueIfMultipleSplitTokensArePresent()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.SimpleDslParamTest",
                "name": "shouldThrowExceptionOnAccessingASingleValueIfTheParamAllowsMultipleValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.SimpleDslParamTest",
                "name": "shouldReturnTheValueAdded()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.SimpleDslParamTest",
                "name": "shouldReturnAllTheValuesAddedWhenMultipleValuesAreAllowed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnListWithValueWhenValueIsSuppliedAndMappingFunctionIsUsed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnIfAParamHasBeenDefinedCaseInsensitively()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnEmptyListWhenValueIsNotSuppliedAndMappingFunctionIsUsed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnTrueIfAParamHasBeenDefinedAndHasAValue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldThrowNullPointerExceptionWhenValueAsBooleanCalledForParameterThatIsNotSupplied()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnMultipleValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnValue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnValueAsBigDecimal()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnEmptyListWhenValueIsNotSupplied()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnFalseIfAParamHasNotBeenDefined()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnValueAsInt()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnEmptyOptionalLongWhenNoValuesAreSupplied()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnNullValueWhenBigDecimalIsNotFound()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnOptionalWithValueWhenValueIsSuppliedAndMappingFunctionIsUsed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldThrowNullPointerExceptionWhenValueAsLongCalledForParameterThatIsNotSupplied()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnFalseIfAParamHasNotBeenDefinedButDoesNotHaveAValue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReportOptionalValueAsPresentWhenValueProvided()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReportRequiredValueAsPresentWhenEmptyValueProvided()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnValueAsAnEnum()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldThrowNullPointerExceptionWhenValueAsDoubleCalledForParameterThatIsNotSupplied()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnValueAsDouble()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnListWithValueWhenValueIsSupplied()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldThrowNullPointerExceptionWhenValueAsIntCalledForParameterThatIsNotSupplied()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReportOptionalValueAsPresentWhenEmptyValueProvided()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnValuesAsIntArray()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnValueAsParamForOptionalValueThatWasSpecified()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnOptionalWithValueWhenValueIsSupplied()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnMultipleValuesWhenUsingAMappingFunctionToGenericArray()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnValuesAsLongArray()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnValueAsLong()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldNotReportOptionalValueAsPresentWhenNoValueProvided()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnMultipleValuesWhenUsingAMappingFunctionToArrayOfSpecificType()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnEmptyOptionalListWhenNoValuesAreSupplied()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnListWithMultipleValuesWhenValuesAreSupplied()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnEmptyOptionalDoubleWhenNoValuesAreSupplied()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnValueAsNamedParamForOptionalValueThatWasSpecified()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnValuesAsDoubleArray()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnEmptyOptionalWhenValueIsNotSuppliedAndMappingFunctionIsUsed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnFalseIfAParamHasBeenDefinedButDoesNotHaveAValue()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnNullValueAsParamWhenSimpleDslParamNotSpecified()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnListWithMultipleValuesWhenValuesAreSuppliedAndMappingFunctionIsUsed()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnNullValueAsNamedParamWhenSimpleDslParamNotSpecified()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnValuesAsBigDecimalArray()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnOptionalListWhenMultipleParameterValueIsSupplied()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnEmptyOptionalWhenValueIsNotSupplied()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnValueAsBoolean()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnIfAParamHasBeenDefinedHasAValueCaseInsensitively()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnValueWhenUsingAMappingFunction()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnEmptyOptionalIntWhenNoValuesAreSupplied()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnTrueIfAParamHasBeenDefined()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsImplTest",
                "name": "shouldReturnMultipleValuesAsAnEnum()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldBeAbleToExtractMultipleRequiredArgsAndMultipleOptionalArgsWithOptionalArgsInRandomOrder()",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldExtractOptionalArgsFromPositionalArgumentsWhenNullArgumentsArePresent()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldThrowAnExceptionIfValuesDoesNotMatchAllowedValuesSpecifiedViaABoolean()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldBeAbleToSpecifyMultipleValuesForParamInGroupUsingTheDefaultSeparator()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "maybeShouldThrowExceptionIfRequiredParametersArePassedOutOfOrder()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldBeAbleToSpecifiedNamedRequiredArgsInAnyOrder()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldMatchAllowedValuesSpecifiedViaAnEnum()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldUseDefaultValuesForOptionalArgsInRepeatingGroups()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldMatchAllowedValuesCaseInsensitivelyAndReturnValuesUsingTheCaseProvidedInTheDSL()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldBeAbleToExtractMultipleRequiredArgsWhenAllParamsAreNamed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldParseAMixtureOfNamedAndUnnamedParametersWhenParametersAreRequired()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldExtractOptionalArgsWhenUnnamed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldBeAbleToExtractMultipleValuesForOneParameterUsingTheACustomSeparatorAndIgnoreRegex()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldBeAbleToExtractMultipleValuesForOneParameterUsingTheACustomSeparator()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldBeAbleToExtractMultipleRequiredArgsWhenWithClearBoundariesBetweenArguments()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldBeAbleToRetrieveGroupsOfParams()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldThrowAnExceptionIfInvalidParameterValueIsSpecifiedInRepeatingGroup()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldBeAbleToExtractMultipleRequiredArgsWhenSubsequentRequiredArgsAreNotNamed()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldBeAbleToSpecifyMultipleValuesForParamInGroupUsingACustomSeparator()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldThrowAnExceptionIfTwoValuesProvidedWhenMultipleValuesAreNotAllowed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldBeAbleToRetrieveArgumentsFollowingTheEndOfARepeatingGroup()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldThrowAnExceptionIfAnUnexpectedParameterValueIsPassedIn()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldThrowAnExceptionWhenMissingAValueForARequiredArg()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldExtractRequiredArgsWhenUnnamed()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldThrowAnExceptionIfUnnamedOptionalArgFollowsNamedOptionalArg()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldThrowAnExceptionIfValuesDoesNotMatchAllowedValuesSpecifiedViaAnEnum()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldThrowAnExceptionIfRequiredParameterMissingFromGroup()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldUseTheDefaultValueForAnOptionalArgsWhenNoValueIsProvided()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldIgnoreNullArgumentsAmongstOptionalArgs()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldUseNullForAnOptionalArgsWhenNoValueOrDefaultValueIsProvided()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldMatchParamsIgnoringCase()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldMatchAllowedValuesSpecifiedViaABoolean()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldThrowAnExceptionIfInvalidParameterValueIsSpecifiedInRepeatingGroupIdentity()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldExtractRequiredArgsWhenNamed()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldMatchAllowedValuesCaseInsensitivelyAndReturnValuesUsingTheCaseProvidedInTheDSLWithinRepeatingGroups()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldBeAbleToSpecifyMultipleValuesForParamInGroup()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldExtractOptionalArgsWhenNamed()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldBeAbleToRetrieveGroupsOfParamsWhenSomeOptionalValuesAreOmitted()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldExtractMixedParameterTypesWhenNamed()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldIgnoreNullArgumentsInRepeatingGroups()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldBeAbleToExtractMultipleValuesForOneParameterUsingTheDefaultSeparator()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldThrowAnExceptionIfUnnamedRequiredArgIsProvidedAfterNamedOptionalArgOutOfDefinitionOrder()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldExtractOptionalArgsFromPositionalArguments()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldThrowAnExceptionIfUnnamedRequiredArgFollowsNamedOptionalArg()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldBeAbleToDetectPresenceOfParamsWithMultipleValuesAllowed()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldThrowAnExceptionIfInvalidParameterValueIsSpecified()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.lmax.simpledsl.internal.DslParamsParserTest",
                "name": "shouldBeAbleToDetectAbsenceOfParamsWithMultipleValuesAllowed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest] \ud83d\ude80  Start image=crawlergpt:latest\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/LMAX-Exchange-Simple-DSL] user=0 workdir=\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v3\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest] \ud83e\uddea  Matrix: map[java:8 os:ubuntu-latest]\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest] \u2b50 Run Main actions/checkout@v3\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \u2705  Success - Main actions/checkout@v3\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest] \u2b50 Run Main Set up JDK 8\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udc33  docker cp src=/tmp/act-cache/39c96a93-4246-4c0b-8dad-4cfcd1d727b6/act/actions-setup-java@v3/ dst=/var/run/act/actions/actions-setup-java@v3/\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v3/] user=0 workdir=\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/setup/index.js] user= workdir=\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \u2753  ::group::Installed distributions\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | Trying to resolve the latest version from remote\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Gathering available versions from 'https://api.azul.com/zulu/download/community/v1.0/bundles/?os=linux&ext=tar.gz&bundle_type=jdk&javafx=false&arch=x86&hw_bitness=64&release_status=ga'\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | Resolved latest version as 8.0.372+7\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | Trying to download...\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | Downloading Java 8.0.372+7 (Zulu) from https://cdn.azul.com/zulu/bin/zulu8.70.0.23-ca-jdk8.0.372-linux_x64.tar.gz ...\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Downloading https://cdn.azul.com/zulu/bin/zulu8.70.0.23-ca-jdk8.0.372-linux_x64.tar.gz\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Destination /tmp/f9ff3b1c-ca35-4eac-a1c7-1e0907a07675\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::download complete\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | Extracting Java archive...\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Checking tar --version\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/13a9e643-9872-4289-9962-e70177ca957d -f /tmp/f9ff3b1c-ca35-4eac-a1c7-1e0907a07675\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Caching tool Java_Zulu_jdk 8.0.372-7 x64\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::source dir: /tmp/13a9e643-9872-4289-9962-e70177ca957d/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/Java_Zulu_jdk/8.0.372-7/x64\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::finished caching tool\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | Java 8.0.372+7 was downloaded\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | Setting Java 8.0.372+7 as the default\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | Creating toolchains.xml for JDK version 8 from zulu\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | Writing to /home/runneradmin/.m2/toolchains.xml\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | \n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | Java configuration:\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   |   Distribution: zulu\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   |   Version: 8.0.372+7\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   |   Path: /opt/hostedtoolcache/Java_Zulu_jdk/8.0.372-7/x64\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | \n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \u2753  ::endgroup::\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \u2753 add-matcher /run/act/actions/actions-setup-java@v3/.github/java.json\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | Creating settings.xml with server-id: github\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | Writing to /home/runneradmin/.m2/settings.xml\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Search path '/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/LMAX-Exchange-Simple-DSL'\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/LMAX-Exchange-Simple-DSL/build.gradle\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/LMAX-Exchange-Simple-DSL/gradle/maven.gradle\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/LMAX-Exchange-Simple-DSL/gradle/wrapper/gradle-wrapper.properties\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/LMAX-Exchange-Simple-DSL/settings.gradle\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Found 4 files to hash.\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::primary key is setup-java-Linux-gradle-06636517e072f60f75085d32485831eb94566007879898f6863e26979ae2a683\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Resolved Keys:\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::[\"setup-java-Linux-gradle-06636517e072f60f75085d32485831eb94566007879898f6863e26979ae2a683\"]\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Checking zstd --version\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:40851/_apis/artifactcache/cache?keys=setup-java-Linux-gradle-06636517e072f60f75085d32485831eb94566007879898f6863e26979ae2a683&version=09ba73ab57fcd4582177c49695fd068c4719cc0cab32d2335af27897fd9c08a0\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | gradle cache is not found\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \u2705  Success - Main Set up JDK 8\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/Java_Zulu_jdk/8.0.372-7/x64\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \u2699  ::set-env:: JAVA_HOME_8_X64=/opt/hostedtoolcache/Java_Zulu_jdk/8.0.372-7/x64\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \u2699  ::set-output:: distribution=Zulu\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \u2699  ::set-output:: path=/opt/hostedtoolcache/Java_Zulu_jdk/8.0.372-7/x64\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \u2699  ::set-output:: version=8.0.372+7\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \u2699  ::set-output:: cache-hit=false\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \u2699  ::add-path:: /opt/hostedtoolcache/Java_Zulu_jdk/8.0.372-7/x64/bin\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest] \u2b50 Run Main Build with Gradle\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | Downloading https://services.gradle.org/distributions/gradle-7.2-bin.zip\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | ..........10%...........20%...........30%...........40%...........50%...........60%...........70%...........80%...........90%...........100%\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | \n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | Welcome to Gradle 7.2!\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | \n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | Here are the highlights of this release:\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   |  - Toolchain support for Scala\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   |  - More cache hits when Java source files have platform-specific line endings\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   |  - More resilient remote HTTP build cache behavior\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | \n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | For more details see https://docs.gradle.org/7.2/release-notes.html\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | \n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | To honour the JVM settings for this build a single-use Daemon process will be forked. See https://docs.gradle.org/7.2/userguide/gradle_daemon.html#sec:disabling_the_daemon.\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | Daemon will be stopped at the end of the build \n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | > Task :clean UP-TO-DATE\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | > Task :compileJava\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | > Task :processResources NO-SOURCE\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | > Task :classes\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | > Task :jar\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | > Task :javadoc\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | > Task :javadocJar\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | > Task :sourcesJar\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | > Task :assemble\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | > Task :checkstyleMain\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | > Task :compileTestJava\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | > Task :processTestResources NO-SOURCE\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | > Task :testClasses\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | > Task :checkstyleTest\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | > Task :test\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | > Task :check\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | > Task :build\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | \n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | BUILD SUCCESSFUL in 26s\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | 10 actionable tasks: 9 executed, 1 up-to-date\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \u2705  Success - Main Build with Gradle\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest] \u2b50 Run Post Set up JDK 8\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/cleanup/index.js] user= workdir=\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Checking zstd --version\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.gradle/caches'\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.gradle/wrapper'\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/.gradle/caches\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/.gradle/wrapper\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Cache Paths:\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::[\"../../../home/runneradmin/.gradle/caches\",\"../../../home/runneradmin/.gradle/wrapper\"]\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Archive Path: /tmp/8886a55f-5fce-4d7c-8c6d-b1398c1d697a/cache.tzst\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | [command]/usr/bin/tar --posix --use-compress-program zstdmt -cf cache.tzst --exclude cache.tzst -P -C /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/LMAX-Exchange-Simple-DSL --files-from manifest.txt\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::File Size: 241588512\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Reserving Cache\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:40851/_apis/artifactcache/caches\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Saving Cache (ID: 1)\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Upload cache\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:40851/_apis/artifactcache/caches/1\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Upload concurrency: 4\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Upload chunk size: 33554432\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Awaiting all uploads\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 0 with content range: bytes 0-33554431/*\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 33554432 with content range: bytes 33554432-67108863/*\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 67108864 with content range: bytes 67108864-100663295/*\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 100663296 with content range: bytes 100663296-134217727/*\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 134217728 with content range: bytes 134217728-167772159/*\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 167772160 with content range: bytes 167772160-201326591/*\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 201326592 with content range: bytes 201326592-234881023/*\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Uploading chunk of size 6707488 bytes at offset 234881024 with content range: bytes 234881024-241588511/*\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Commiting cache\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | Cache Size: ~230 MB (241588512 B)\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:40851/_apis/artifactcache/caches/1\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | Cache saved successfully\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   | Cache saved with the key: setup-java-Linux-gradle-06636517e072f60f75085d32485831eb94566007879898f6863e26979ae2a683\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest]   \u2705  Success - Post Set up JDK 8\n[5c14721a-0871-4f7e-aacb-1b4364ed90ec/Test JDK 8, ubuntu-latest] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/LMAX-Exchange-Simple-DSL/.github/workflows/gradle-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 69.22057390213013
    }
}