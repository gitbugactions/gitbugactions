{
    "repository": "graphql-calculator/graphql-calculator",
    "stars": 92,
    "language": "java",
    "size": 11228,
    "clone_url": "https://github.com/graphql-calculator/graphql-calculator.git",
    "timestamp": "2023-06-29T14:55:39.893812Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "calculator.engine.directive.SkipAndIncludeExtendTest",
                "name": "simpleIncludeBy_case01",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.SkipAndIncludeExtendTest",
                "name": "queryMoreDetail_case01",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.SkipAndIncludeExtendTest",
                "name": "skipByTest_inlineFragmentTest01",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.SkipAndIncludeExtendTest",
                "name": "includeByTest_inlineFragmentTest01",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.SkipAndIncludeExtendTest",
                "name": "includeBy_case01",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.SkipAndIncludeExtendTest",
                "name": "skipByTest_FragmentWithSkip",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.SkipAndIncludeExtendTest",
                "name": "skipByTest_exceptionQueryTest01",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.SkipAndIncludeExtendTest",
                "name": "skipBy_case01",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.SkipAndIncludeExtendTest",
                "name": "skipByTest_fragmentSpreadTest01",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.SkipAndIncludeExtendTest",
                "name": "includeByTest_fragmentSpreadTest01",
                "time": 0.136,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.MultiDependencySourcesValidationTest",
                "name": "dependencyMultiSources",
                "time": 0.181,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.MultiDependencySourcesValidationTest",
                "name": "dependencySingleSources",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.FilterTest",
                "name": "simpleTest_case01",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.FilterTest",
                "name": "filter_case01",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.FilterTest",
                "name": "filterPrimitiveType_case01",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.FetchSourceTest",
                "name": "sourceInList_case01",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.FetchSourceTest",
                "name": "sourceOnAncestorPath_case01",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.FetchSourceTest",
                "name": "sourceOnAncestorPath_case02",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.CompletableFutureResultTest",
                "name": "CompletableFutureResultTest",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.ConfigTest",
                "name": "testNormalConfig",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.DistinctTest",
                "name": "simpleTest_case01",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.DistinctTest",
                "name": "distinctSimpleCase_notSetComparator",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.issues.Issue92",
                "name": "normalQuery",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.issues.Issue92",
                "name": "exceptionQuery",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.issues.Issue92",
                "name": "nullQuery",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "empty expression for @skipBy",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "invalid expression for @skipBy",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "empty expression for @includeBy",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "invalid expression for @includeBy",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "invalid location for @filter",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "empty expression for @filter",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "invalid expression for @filter",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "invalid location for @sort",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "non-exist key for @sort",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "invalid expression for @sortBy",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "invalid location for @sortBy",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "invalid expression for @argumentTransform",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "non-exist argument @argumentTransform",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "invalid location for @argumentTransform with 'LIST_MAP' operation ",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "invalid location for @argumentTransform with 'FILTER' operation ",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "duplicate source name for @fetchSource",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "invalid sourceConvert",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "invalid source name for @fetchSource",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "dependencySources which @skipBy dependency must exist",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": null,
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "dependencySources which @skipBy dependency has to be used",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": null,
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "dependencySources name used by @skipBy must be different to field argument name ",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": null,
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "dependencySources used by @map dependency must exist",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "dependencySources which @map dependency has to be used",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "validation for non-exist argument for @SortBy",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "validation for non-exist argument for @filter",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "only 'ele' can be used for @filter on leaf field ",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "only 'ele' can be used for @sortBy on leaf field ",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "dependencySources used by @argumentTransform dependency must exist",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "dependencySources used by @argumentTransform dependency has to be used",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "ancestor relationship exit in dependency path",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "circular dependency path",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "validateDistinct_notDefineOnList",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "validateDistinct_argumentNotExist",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "validateDistinct_defineOnLeafField",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "engine.validation.ValidationTest",
                "name": "validateDistinct_determineByEqual",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.parser.ExecutionEngineStateParserTest",
                "name": "getItemListBindingCouponIdAndFilterUnSaleItems",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.PartitionDirectiveTest",
                "name": "partitionMustDefineOnListTypeArgument",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.PartitionDirectiveTest",
                "name": "distinctSimpleCase_notSetComparator",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.PartitionDirectiveTest",
                "name": "partitionMustDefineOnListTypeField",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.PartitionDirectiveTest",
                "name": "sizeMustBePositiveNumber",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.PartitionDirectiveTest",
                "name": "moreThanOneArgumentsUsePartitionOnOneField",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.ArgumentTransformTest",
                "name": "repeatableArgumentTest",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.ArgumentTransformTest",
                "name": "getItemListBindingCouponIdAndFilterUnSaleItems",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.ArgumentTransformTest",
                "name": "nestedFetchSource_case01",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.ArgumentTransformTest",
                "name": "sourceConvert_case01",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.ArgumentTransformTest",
                "name": "defaultOperatorType",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.ArgumentTransformTest",
                "name": "objectArgumentTransform_case01",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.ArgumentTransformTest",
                "name": "mapListArgument",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.ArgumentTransformTest",
                "name": "calculateCouponPrice_Case01",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.ArgumentTransformTest",
                "name": "parseArgumentFromVariableSimpleCase_01",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.ArgumentTransformTest",
                "name": "transformArgumentValue",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.ArgumentTransformTest",
                "name": "filterItemListByBindingCouponIdAndFilterUnSaleItems",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.SupportDataFetcherResultTest",
                "name": "WithErrorDataFetcherResultTest",
                "time": 0.736,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.SupportDataFetcherResultTest",
                "name": "DataFetcherResultTest",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.SortTest",
                "name": "sortByWithSource_case01",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.SortTest",
                "name": "reversedSortCase_01",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.SortTest",
                "name": "reversedSortByCase_01",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.SortTest",
                "name": "sortByPrimitiveType_case01",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.SortTest",
                "name": "sortItemBySaleAmount",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.SortTest",
                "name": "sortItemBySaleAmountWithNullComparator",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.SortTest",
                "name": "sortResult_case01",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.SortTest",
                "name": "sortByCase_01",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.SortTest",
                "name": "sortCase_01",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.DefaultObjectMapperTest",
                "name": "toSimpleCollectionTest",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.CommonTest",
                "name": "mockTest",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "calculator.engine.directive.CommonTest",
                "name": "sourceIsNullCase_01",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish] \ud83d\ude80  Start image=crawlergpt:latest\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/graphql-calculator-graphql-calculator] user=0 workdir=\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish] \u2b50 Run Main actions/checkout@v2\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \u2705  Success - Main actions/checkout@v2\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish] \u2b50 Run Main Set up Java\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udc33  docker cp src=/tmp/act-cache/5ce7aa25-3e3a-43cd-b684-79a41a0a379e/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udcac  ::debug::isExplicit: \n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udcac  ::debug::explicit? false\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udcac  ::debug::evaluating 0 versions\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udcac  ::debug::match not found\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu8.70.0.23-ca-jdk8.0.372-linux_x64.tar.gz\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udcac  ::debug::Downloading /tmp/3d459ef7-a064-447c-a696-395a76d79193\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udcac  ::debug::download complete\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | [command]/usr/bin/tar --version\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | tar (GNU tar) 1.30\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | This is free software: you are free to change and redistribute it.\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | There is NO WARRANTY, to the extent permitted by law.\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | \n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | Written by John Gilmore and Jay Fenlason.\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_588357808 -f /tmp/3d459ef7-a064-447c-a696-395a76d79193\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_588357808/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udcac  ::debug::Caching tool jdk 8.0.372 x64\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udcac  ::debug::source dir: /tmp/temp_588357808/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/8.0.372/x64\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udcac  ::debug::finished caching tool\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | writing /home/runneradmin/.m2/settings.xml\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \u2705  Success - Main Set up Java\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \u2699  ::set-env:: JAVA_HOME_8.0.372_x64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/8.0.372/x64\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \u2699  ::set-env:: JAVA_HOME_8_0_372_X64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/8.0.372/x64\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \u2699  ::set-output:: version=8.0.372\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/8.0.372/x64/bin\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish] \u2b50 Run Main Build with Gradle\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | Downloading https://services.gradle.org/distributions/gradle-6.3-bin.zip\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | .........10%..........20%..........30%.........40%..........50%..........60%.........70%..........80%..........90%..........100%\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | \n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | Welcome to Gradle 6.3!\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | \n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | Here are the highlights of this release:\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |  - Java 14 support\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |  - Improved error messages for unexpected failures\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | \n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | For more details see https://docs.gradle.org/6.3/release-notes.html\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | \n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | \n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | > Task :compileJava\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | Note: Some input files use or override a deprecated API.\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | Note: Recompile with -Xlint:deprecation for details.\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | Note: Some input files use unchecked or unsafe operations.\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | Note: Recompile with -Xlint:unchecked for details.\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | \n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | > Task :compileGroovy NO-SOURCE\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | > Task :processResources NO-SOURCE\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | > Task :classes\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | > Task :jar\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | \n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | > Task :javadoc\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/graphql-calculator-graphql-calculator/src/main/java/calculator/common/CommonUtil.java:197: warning: no @param for object\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |     public static boolean isWrapperType(Object object) {\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |                           ^\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/graphql-calculator-graphql-calculator/src/main/java/calculator/common/CommonUtil.java:197: warning: no @return\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |     public static boolean isWrapperType(Object object) {\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |                           ^\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/graphql-calculator-graphql-calculator/src/main/java/calculator/common/CommonUtil.java:204: warning: no @param for object\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |     public static boolean isBasicType(Object object) {\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |                           ^\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/graphql-calculator-graphql-calculator/src/main/java/calculator/common/CommonUtil.java:204: warning: no @return\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |     public static boolean isBasicType(Object object) {\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |                           ^\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/graphql-calculator-graphql-calculator/src/main/java/calculator/common/CommonUtil.java:211: warning: no @param for <T>\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |     public static <T extends NamedNode<T>> T findNodeByName(List<T> namedNodes, String name) {\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |                                              ^\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/graphql-calculator-graphql-calculator/src/main/java/calculator/common/CommonUtil.java:211: warning: no @param for namedNodes\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |     public static <T extends NamedNode<T>> T findNodeByName(List<T> namedNodes, String name) {\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |                                              ^\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/graphql-calculator-graphql-calculator/src/main/java/calculator/common/CommonUtil.java:211: warning: no @param for name\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |     public static <T extends NamedNode<T>> T findNodeByName(List<T> namedNodes, String name) {\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |                                              ^\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/graphql-calculator-graphql-calculator/src/main/java/calculator/common/CommonUtil.java:211: warning: no @return\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |     public static <T extends NamedNode<T>> T findNodeByName(List<T> namedNodes, String name) {\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |                                              ^\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/graphql-calculator-graphql-calculator/src/main/java/calculator/engine/decorator/Decorator.java:31: warning: no @param for directive\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |     boolean supportDirective(Directive directive, DecorateEnvironment environment);\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |             ^\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/graphql-calculator-graphql-calculator/src/main/java/calculator/engine/decorator/Decorator.java:31: warning: no @param for environment\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |     boolean supportDirective(Directive directive, DecorateEnvironment environment);\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |             ^\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/graphql-calculator-graphql-calculator/src/main/java/calculator/engine/decorator/Decorator.java:31: warning: no @return\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |     boolean supportDirective(Directive directive, DecorateEnvironment environment);\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |             ^\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/graphql-calculator-graphql-calculator/src/main/java/calculator/engine/decorator/Decorator.java:36: warning: no @param for directive\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |     DataFetcher<?> decorate(Directive directive, DecorateEnvironment environment);\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |                    ^\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/graphql-calculator-graphql-calculator/src/main/java/calculator/engine/decorator/Decorator.java:36: warning: no @param for environment\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |     DataFetcher<?> decorate(Directive directive, DecorateEnvironment environment);\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |                    ^\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/graphql-calculator-graphql-calculator/src/main/java/calculator/engine/decorator/Decorator.java:36: warning: no @return\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |     DataFetcher<?> decorate(Directive directive, DecorateEnvironment environment);\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |                    ^\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/graphql-calculator-graphql-calculator/src/main/java/calculator/engine/metadata/DataFetcherDefinition.java:95: warning: no @return\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |     public Executor getExecutor() {\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   |                     ^\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | 15 warnings\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | \n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | > Task :javadocJar\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | > Task :sourcesJar\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | > Task :assemble\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | \n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | > Task :compileTestJava\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | Note: Some input files use unchecked or unsafe operations.\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | Note: Recompile with -Xlint:unchecked for details.\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | \n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | > Task :compileTestGroovy\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | > Task :processTestResources\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | > Task :testClasses\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | > Task :test\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | > Task :check\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | > Task :build\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | \n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | Use '--warning-mode all' to show the individual deprecation warnings.\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | See https://docs.gradle.org/6.3/userguide/command_line_interface.html#sec:command_line_warnings\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | \n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | BUILD SUCCESSFUL in 35s\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   | 9 actionable tasks: 9 executed\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \u2705  Success - Main Build with Gradle\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish] \u2b50 Run Post Set up Java\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish]   \u2705  Success - Post Set up Java\n[cfd8a3bf-e18e-4b61-a504-f706412765bb/publish] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/graphql-calculator-graphql-calculator/.github/workflows/gradle-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 227.13388895988464
    }
}