{
    "repository": "zaproxy/zest",
    "stars": 89,
    "language": "java",
    "size": 73354,
    "clone_url": "https://github.com/zaproxy/zest.git",
    "timestamp": "2023-06-29T10:42:51.925715Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionStatusCodeUnitTest",
                "name": "shouldHaveZeroStatusCodeByDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionStatusCodeUnitTest",
                "name": "shouldEvaluateToFalseIfNotSameStatusCode()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionStatusCodeUnitTest",
                "name": "shouldSetInverse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionStatusCodeUnitTest",
                "name": "shouldSetStatusCode()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionStatusCodeUnitTest",
                "name": "shouldEvaluateToTrueIfSameStatusCode()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionStatusCodeUnitTest",
                "name": "shouldDeepCopy()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionStatusCodeUnitTest",
                "name": "shouldEvaluateToTrueIfInverseAndNotSameStatusCode()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionStatusCodeUnitTest",
                "name": "shouldEvaluateToFalseIfInverseAndSameStatusCode()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionStatusCodeUnitTest",
                "name": "shouldEvaluateToFalseIfNoResponse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionStatusCodeUnitTest",
                "name": "shouldNotBeInversedByDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionStatusCodeUnitTest",
                "name": "shouldSerialiseAndDeserialise()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopStateUnitTest",
                "name": "testIsLastState()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopStateUnitTest",
                "name": "testGetCurrentIndex()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopStateUnitTest",
                "name": "testGetCurrentToken()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopStateUnitTest",
                "name": "testToLastState()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopStateUnitTest",
                "name": "testIncrease()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopStateUnitTest",
                "name": "testZestLoopState()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestBasicRunnerUnitTest",
                "name": "shouldNoLongerSendRequestThroughProxyIfUnset()",
                "time": 2.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestBasicRunnerUnitTest",
                "name": "shouldSendRequestWithoutGeneratedAcceptEncodingHeader()",
                "time": 0.206,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestBasicRunnerUnitTest",
                "name": "shouldFollowRedirectsThroughConfiguredProxy()",
                "time": 0.094,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestBasicRunnerUnitTest",
                "name": "shouldSendRequestWithoutGeneratedConnectionHeader()",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestBasicRunnerUnitTest",
                "name": "shouldFollowRedirectsByDefault()",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestBasicRunnerUnitTest",
                "name": "shouldSendRequestWithoutGeneratedUserAgentHeader()",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestBasicRunnerUnitTest",
                "name": "shouldSendPutRequestWithBody()",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestBasicRunnerUnitTest",
                "name": "shouldSendAndReceiveHttpMessage()",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestBasicRunnerUnitTest",
                "name": "shouldNotFollowRedirectsIfDisabled()",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestBasicRunnerUnitTest",
                "name": "shouldSendRequestWithoutGeneratedContentTypeHeader()",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestBasicRunnerUnitTest",
                "name": "shouldSendRequestThroughConfiguredProxy()",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestBasicRunnerUnitTest",
                "name": "shouldNotFollowRedirectsIfDisabledThroughConfiguredProxy()",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestBasicRunnerUnitTest",
                "name": "shouldFailToRunNonPassiveStatementsInPassiveScripts()",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexExprUnitTest",
                "name": "testRemoveFirstIf()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexExprUnitTest",
                "name": "testAddingElses()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexExprUnitTest",
                "name": "testMoveFirstIf()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexExprUnitTest",
                "name": "testDeepConditionals1()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexExprUnitTest",
                "name": "testDeepConditionals2()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexExprUnitTest",
                "name": "testRemoveMiddleElse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexExprUnitTest",
                "name": "testMoveFirstElse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexExprUnitTest",
                "name": "testMoveLastElse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexExprUnitTest",
                "name": "testRemoveMiddleIf()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexExprUnitTest",
                "name": "testRemoveLastIf()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexExprUnitTest",
                "name": "testRemoveLastElse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexExprUnitTest",
                "name": "testMoveSecondElse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexExprUnitTest",
                "name": "testAddingIfs()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexExprUnitTest",
                "name": "testMoveSecondIf()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexExprUnitTest",
                "name": "testMoveLastIf()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexExprUnitTest",
                "name": "testRemoveFirstElse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldAddVarWithNameAsValue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldAddVarWithValue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldHaveTokenStartByDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldReplaceVariablesInVariablesInString()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldReturnNullStringIfReplacingVariablesInNullString()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldSetTokenStart()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldSetVariables()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldNotAddVarIfAlreadyAdded()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldSetVariableWithNullValue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldGetNullValueIfVariableWasNotAdded()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldSetVariableWithNullName()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldReplaceVariablesInEncodedVariablesInString()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldAddVarWithNameAsValueIfValueIsNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldReplaceLoopingVariablesInVariablesInString()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldReplaceEncodedVariablesInString()",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldSetVariable()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldReplaceLoopingVariablesInEncodedVariablesInString()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldSetTokenEnd()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldAddVariables()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldGetValueOfVariableAdded()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldReplaceVariablesInString()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldHaveNoVariablesByDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldHaveTokenEndByDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariablesUnitTest",
                "name": "shouldNotAddVarWithValueIfAlreadyAdded()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignFromElementTest",
                "name": "testSerialization()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignFromElementTest",
                "name": "filterBeforeLastDivAndSelectContent()",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignFromElementTest",
                "name": "filterByElementAndAttributeThenSelectTheFirstContent()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignFromElementTest",
                "name": "selectClassAttributeOfLastElement()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignFromElementTest",
                "name": "noElementFoundReturnsNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignFromElementTest",
                "name": "filterByValueIsStartingWithChoiceAndSelectContentOfSecondItem()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignFromElementTest",
                "name": "selectActionAttributeOfSecondForm()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignFromElementTest",
                "name": "filterByElementAndThenSelectTheLastClassAttribute()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignFromElementTest",
                "name": "invalidRegExShouldThrowAZestAssignFailException()",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopFileUnitTest",
                "name": "testOpenFile()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionURLUnitTest",
                "name": "testGetIncludeRegexes()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionURLUnitTest",
                "name": "testIsTrueDifferentURL()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionURLUnitTest",
                "name": "testZestExpressionURLListOfStringListOfString()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionURLUnitTest",
                "name": "testDeepCopyNoPointer()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionURLUnitTest",
                "name": "testIsTrueExcludePattern()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionURLUnitTest",
                "name": "testGetExcludeRegexes()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionURLUnitTest",
                "name": "testDeepCopy()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionURLUnitTest",
                "name": "testIsTrue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionURLUnitTest",
                "name": "testIsTrueFalse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionAndUnitTest",
                "name": "testIsNot()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionAndUnitTest",
                "name": "testDeepCopy()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionAndUnitTest",
                "name": "testSetNot()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestActionInvokeUnitTest",
                "name": "testAssignZestScript()",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestActionInvokeUnitTest",
                "name": "testSerialization()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestActionInvokeUnitTest",
                "name": "testParamZestScript()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestActionInvokeUnitTest",
                "name": "testSimpleZestScript()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestActionInvokeUnitTest",
                "name": "testParamJsScript()",
                "time": 0.696,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestActionInvokeUnitTest",
                "name": "shouldReplaceVariablesPassedAsParameters()",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestActionInvokeUnitTest",
                "name": "testSimpleJsScript()",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestActionInvokeUnitTest",
                "name": "shouldUseArgsPassedInConstructor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopTokenSetUnitTest",
                "name": "testGetToken()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopTokenSetUnitTest",
                "name": "testSize()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopTokenSetUnitTest",
                "name": "testRemoveToken()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopTokenSetUnitTest",
                "name": "testZestLoopTokenSetString()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopTokenSetUnitTest",
                "name": "testReplace()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopTokenSetUnitTest",
                "name": "testDeepCopy()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopTokenSetUnitTest",
                "name": "testIndexOf()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testRemoveChildConditionReturnValue()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testRemoveChildNotPresent()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testClearChildren()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testAddChildConditionZestExpressionElementInt()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testRemoveChildCondition()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testOrDeepCopySingleAndSameChildrenClasses()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testRemoveLastChild()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testRemoveFirstChild()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testRemoveMiddleChild()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testDeepCopyNullChildren()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testDeepCopyNoPointer()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testDeepCopySingleAndSameChildrenSize()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testZestExpressionOrLazyEvaluation()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testComplexCondition()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testZestExpressionAndLazyEvaluation()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testDeepCopySingleAndSameChildrenClasses()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testIsLeaf()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testDeepCopyOr()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testRemoveAllChildren()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testSetChildrenCondition()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testOrDeepCopyNullChildren()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testDeepCopyComplexCondition()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestStructuredExpressionUnitTest",
                "name": "testOrDeepCopySingleAndSameChildrenSize()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionProtocolUnitTest",
                "name": "shouldEvaluateToFalseIfNoProtocolSet()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionProtocolUnitTest",
                "name": "shouldEvaluateToTrueIfSameProtocolWithDifferenceCase()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionProtocolUnitTest",
                "name": "shouldEvaluateToTrueIfInverseAndNotSameProtocol()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionProtocolUnitTest",
                "name": "shouldEvaluateToFalseIfNoRequest()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionProtocolUnitTest",
                "name": "shouldNotHaveProtocolByDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionProtocolUnitTest",
                "name": "shouldSetInverse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionProtocolUnitTest",
                "name": "shouldDeepCopy()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionProtocolUnitTest",
                "name": "shouldEvaluateToFalseIfRequestButNoUrl()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionProtocolUnitTest",
                "name": "shouldEvaluateToFalseIfInverseAndSameProtocol()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionProtocolUnitTest",
                "name": "shouldSetProtocol()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionProtocolUnitTest",
                "name": "shouldNotBeInversedByDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionProtocolUnitTest",
                "name": "shouldSerialiseAndDeserialise()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionProtocolUnitTest",
                "name": "shouldEvaluateToFalseIfNotSameProtocol()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionProtocolUnitTest",
                "name": "shouldEvaluateToTrueIfSameProtocol()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopClientElementUnitTest",
                "name": "testSerialization()",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopClientElementUnitTest",
                "name": "testClientXpathLoopReturningName()",
                "time": 0.389,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopClientElementUnitTest",
                "name": "testClientXpathLoopReturningText()",
                "time": 0.169,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopClientElementUnitTest",
                "name": "testClientXpathLoopReturningType()",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestScriptUnitTest",
                "name": "testVariableNames()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestScriptUnitTest",
                "name": "testDepthIndexing()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestScriptUnitTest",
                "name": "testDeepMiscOrder()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestScriptUnitTest",
                "name": "testDeepComplex()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestScriptUnitTest",
                "name": "testSimpleIndexing()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementScrollUnitTest",
                "name": "shouldScroll()",
                "time": 0.07,
                "results": [
                    {
                        "result": "Failure",
                        "message": "org.zaproxy.zest.core.v1.ZestClientFailException: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. \nHost info: host: 'croaker', ip: '127.0.1.1'",
                        "type": "org.zaproxy.zest.core.v1.ZestClientFailException"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementScrollUnitTest",
                "name": "shouldBeEnabledByDefault()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementScrollUnitTest",
                "name": "shouldDeepCopy()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementScrollUnitTest",
                "name": "shouldSetX()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementScrollUnitTest",
                "name": "shouldSetY()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementScrollUnitTest",
                "name": "shouldSerialiseAndDeserialise()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementScrollUnitTest",
                "name": "shouldNotBePassive()",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementScrollUnitTest",
                "name": "shouldNotHaveWindowHandleByDefault()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientWindowOpenUrlUnitTest",
                "name": "shouldFailToOpenUrlIfWindowHandleNotFound()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignFieldValueUnitTest",
                "name": "shouldFailTheAssignIfResponseIsNotProvided()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionLengthUnitTest",
                "name": "testZestExpressionLength()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionLengthUnitTest",
                "name": "testEvaluateInverse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionLengthUnitTest",
                "name": "testDeepCopySameParams()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionLengthUnitTest",
                "name": "testZestExpressionLengthWithParamsFalse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionLengthUnitTest",
                "name": "testIsTrueNullBody()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionLengthUnitTest",
                "name": "testZestExpressionLengthWithParamsTrue()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionLengthUnitTest",
                "name": "testSetApprox()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionLengthUnitTest",
                "name": "testGetApprox()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionLengthUnitTest",
                "name": "testSetLength()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionLengthUnitTest",
                "name": "testGetLength()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionLengthUnitTest",
                "name": "testDeepCopy()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopStringUnitTest",
                "name": "testEndLoop()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopStringUnitTest",
                "name": "testZestLoopStringStringArrayIntListOfZestStatement()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopStringUnitTest",
                "name": "testSerialization()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopStringUnitTest",
                "name": "testAddStatement()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopStringUnitTest",
                "name": "testLoop()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopStringUnitTest",
                "name": "testGetLast()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopStringUnitTest",
                "name": "testZestLoopString()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopStringUnitTest",
                "name": "testDisable()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopStringUnitTest",
                "name": "testDeepCopy()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopStringUnitTest",
                "name": "testGetValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariableUnitTest",
                "name": "testLoop()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestVariableUnitTest",
                "name": "testAssign()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexUnitTest",
                "name": "testRemoveFirstIf()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexUnitTest",
                "name": "testAddingElses()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexUnitTest",
                "name": "testMoveFirstIf()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexUnitTest",
                "name": "testDeepConditionals1()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexUnitTest",
                "name": "testDeepConditionals2()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexUnitTest",
                "name": "testRemoveMiddleElse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexUnitTest",
                "name": "testMoveFirstElse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexUnitTest",
                "name": "testMoveLastElse()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexUnitTest",
                "name": "testRemoveMiddleIf()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexUnitTest",
                "name": "testRemoveLastIf()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexUnitTest",
                "name": "testRemoveLastElse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexUnitTest",
                "name": "testMovingIfStatements()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexUnitTest",
                "name": "testMoveSecondElse()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexUnitTest",
                "name": "testAddingIfs()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexUnitTest",
                "name": "testMovingElseStatements()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexUnitTest",
                "name": "testMoveSecondIf()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexUnitTest",
                "name": "testMoveLastIf()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexUnitTest",
                "name": "testRemoveFirstElse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldNotHaveFilePathByDefault()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldConstructWithFilePathAndVariableName()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldFailToInvokeIfWindowHandleNotAvailable()",
                "time": 2.12,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldBePassive()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldFailWhenInvokingWithNullRuntime()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldBeEnabledByDefault()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldFailToSaveScreenshotToFileDirectory()",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldSaveScreenshotToVariable()",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldDeepCopy()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldSetWindowHandle()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldFailToSaveScreenshotToFileAlreadyExists()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldSetEnabled()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldSaveScreenshotToFile()",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldFailToInvokeIfClientDoesNotTakeScreenshots()",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldFailToInvokeIfClientTakeScreenshotsButFileAndVariableAreNull()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldSaveScreenshotToFileAndVariable()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldNotHaveVariableNameByDefault()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldSetVariableName()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldFailToInvokeIfClientTakeScreenshotsButFileAndVariableAreEmpty()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldSetFilePath()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldSerialiseAndDeserialise()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientScreenshotUnitTest",
                "name": "shouldNotHaveWindowHandleByDefault()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopUnitTest",
                "name": "shouldReturnEmptyListIfNoStatementsWhenCopyingStatements()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopUnitTest",
                "name": "shouldReturnADifferentListAndStatementsWhenCopyingStatements()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestRequestUnitTest",
                "name": "shouldSerialise()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestRequestUnitTest",
                "name": "testTokenReplacement()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestRequestUnitTest",
                "name": "testDeepCopy()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestRequestUnitTest",
                "name": "shouldDeserialise()",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopIntegerUnitTest",
                "name": "testEndLoop()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopIntegerUnitTest",
                "name": "testLoop()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopIntegerUnitTest",
                "name": "testZestLoopDifferentStep()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopIntegerUnitTest",
                "name": "testZestLoopNext()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopIntegerUnitTest",
                "name": "testDeepCopy()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopIntegerUnitTest",
                "name": "testHasMoreElements()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopIntegerUnitTest",
                "name": "testZestLoopBreak()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionRegexUnitTest",
                "name": "testDeepCopySameLocation()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionRegexUnitTest",
                "name": "testDeepCopySameNoPointersRegex()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionRegexUnitTest",
                "name": "testSetInverse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionRegexUnitTest",
                "name": "testIsTrueNullBody()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionRegexUnitTest",
                "name": "testIsTrueNullHeader()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionRegexUnitTest",
                "name": "testIsTrueBody()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionRegexUnitTest",
                "name": "shouldAllowToSetNullRegex()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionRegexUnitTest",
                "name": "testDeepCopySameRegex()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionRegexUnitTest",
                "name": "shouldEvaluateAlwaysToFalseWithNullRegex()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionRegexUnitTest",
                "name": "testIsTrueHeader()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionRegexUnitTest",
                "name": "testIsLeaf()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionRegexUnitTest",
                "name": "testDeepCopySameNoPointersLocation()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionRegexUnitTest",
                "name": "shouldEvaluateAlwaysToTrueWithEmptyRegex()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionRegexUnitTest",
                "name": "testIsInverse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopSerializationUnitTest",
                "name": "testSerializationLoopString()",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopSerializationUnitTest",
                "name": "testSerializationLoopFile()",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestLoopSerializationUnitTest",
                "name": "testSerializationLoopInteger()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.VerifyExamples",
                "name": "shouldParseExamples()",
                "time": 0.246,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionResponseTimeUnitTest",
                "name": "testIsTrueGreaterThan()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionResponseTimeUnitTest",
                "name": "testDeepCopyNoPointers()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionResponseTimeUnitTest",
                "name": "testEvaluateGreaterThanIsInverse()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionResponseTimeUnitTest",
                "name": "testSetTimeInMs()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionResponseTimeUnitTest",
                "name": "testDeepCopyNoPointer()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionResponseTimeUnitTest",
                "name": "testEvaluate()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionResponseTimeUnitTest",
                "name": "testDeepCopy()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionResponseTimeUnitTest",
                "name": "testIsTrueDeepCopyDifferentGreaterThan()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldAddAssign()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldSetNullVariableName()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldSetKnownOperation()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldSetUnknownOperation()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldFailTheAssignWithEmptyOperation()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldConstructWithVariableNameOperandsAndOperation()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldBeEnabledByDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldDivideAssign()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldConstructWithVariableName()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldDeepCopy()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldFailTheAssignWithoutOperandA()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldFailTheAssignWithoutOperandB()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldConvertResultIntoInteger()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldHaveNoOperandsNorOperationByDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldBePassiveZestStatement()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldSetEnabledState()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldFailTheAssignWithNonNumericOperandA()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldFailTheAssignWithNonNumericOperandB()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldReplaceVariableInOperandA()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldReplaceVariableInOperandB()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldMinusAssign()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldFailTheAssignWithEmptyOperandA()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldFailTheAssignWithEmptyOperandB()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldSubtractAssign()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldSetVariableName()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldHaveNoVariableNameByDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldSetOperandA()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldSetOperandB()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignCalcUnitTest",
                "name": "shouldFailTheAssignWithoutOperation()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientLaunchUnitTest",
                "name": "testHtmlUnitLaunch()",
                "time": 1.635,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientLaunchUnitTest",
                "name": "testInvalidName()",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientLaunchUnitTest",
                "name": "testSerialization()",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientLaunchUnitTest",
                "name": "testHtmlUnitByClassLaunch()",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientLaunchUnitTest",
                "name": "shouldDeepCopy()",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientLaunchUnitTest",
                "name": "shouldUseArgsPassedInConstructorWithCapabilities()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientLaunchUnitTest",
                "name": "shouldUseArgsPassedInConstructor()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementScrollToUnitTest",
                "name": "shouldScrollToElement()",
                "time": 0.069,
                "results": [
                    {
                        "result": "Failure",
                        "message": "org.zaproxy.zest.core.v1.ZestClientFailException: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. \nHost info: host: 'croaker', ip: '127.0.1.1'",
                        "type": "org.zaproxy.zest.core.v1.ZestClientFailException"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementScrollToUnitTest",
                "name": "shouldBeEnabledByDefault()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementScrollToUnitTest",
                "name": "shouldDeepCopy()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementScrollToUnitTest",
                "name": "shouldSerialiseAndDeserialise()",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementScrollToUnitTest",
                "name": "shouldNotBePassive()",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementScrollToUnitTest",
                "name": "shouldNotHaveWindowHandleByDefault()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionIsIntegerUnitTest",
                "name": "testZestExpressionIsIntegerBadVar()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionIsIntegerUnitTest",
                "name": "testZestExpressionIsIntegerCopy()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionIsIntegerUnitTest",
                "name": "testZestExpressionIsIntegerTrue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestExpressionIsIntegerUnitTest",
                "name": "testZestExpressionIsIntegerFalse()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssertBodyRegexUnitTest",
                "name": "testSimpleCaseIgnore()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssertBodyRegexUnitTest",
                "name": "testSimpleCaseExact()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssertBodyRegexUnitTest",
                "name": "testSimpleIncInvRegex()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssertBodyRegexUnitTest",
                "name": "testSimpleIncRegex()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssertBodyRegexUnitTest",
                "name": "testSimpleExcInvRegex()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssertBodyRegexUnitTest",
                "name": "testSimpleExcRegex()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestActionSleepUnitTest",
                "name": "testSerialization()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestActionSleepUnitTest",
                "name": "testSimpleJsScript()",
                "time": 1.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignStringDelimitersUnitTest",
                "name": "testSimpleCase()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignStringDelimitersUnitTest",
                "name": "testExceptions()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignStringDelimitersUnitTest",
                "name": "testSerialization()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignStringDelimitersUnitTest",
                "name": "testRegexes()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementMouseOverUnitTest",
                "name": "shouldBeEnabledByDefault()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementMouseOverUnitTest",
                "name": "shouldDeepCopy()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementMouseOverUnitTest",
                "name": "shouldMouseOverElement()",
                "time": 0.842,
                "results": [
                    {
                        "result": "Failure",
                        "message": "org.zaproxy.zest.core.v1.ZestClientFailException: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. \nHost info: host: 'croaker', ip: '127.0.1.1'",
                        "type": "org.zaproxy.zest.core.v1.ZestClientFailException"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementMouseOverUnitTest",
                "name": "shouldSerialiseAndDeserialise()",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementMouseOverUnitTest",
                "name": "shouldNotBePassive()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientElementMouseOverUnitTest",
                "name": "shouldNotHaveWindowHandleByDefault()",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestConditionalRegexComplexUnitTest",
                "name": "testEvaluateAlone()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignRegexDelimitersUnitTest",
                "name": "testSimpleCase()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignRegexDelimitersUnitTest",
                "name": "testExceptions()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignRegexDelimitersUnitTest",
                "name": "testRegexes()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignRegexDelimitersUnitTest",
                "name": "testAssignRegexDelimitersZestScript()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignStringUnitTest",
                "name": "testSimpleCase()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignStringUnitTest",
                "name": "testSerialization()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignStringUnitTest",
                "name": "testVariables()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignStringUnitTest",
                "name": "testRecurse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignReplaceUnitTest",
                "name": "testSimpleCase()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignReplaceUnitTest",
                "name": "shouldReplaceStringWithExactCaseWhenUsingRegexReplacementWithExactCase()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignReplaceUnitTest",
                "name": "shouldReplaceStringWithDifferentCaseWhenUsingRegexReplacementWithoutExactCase()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignReplaceUnitTest",
                "name": "testSerialization()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignReplaceUnitTest",
                "name": "shouldReplaceStringWithExactCaseWhenUsingPlainStringReplacementWithExactCase()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestAssignReplaceUnitTest",
                "name": "shouldReplaceStringWithDifferentCaseWhenUsingPlainStringReplacementWithoutExactCase()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientWindowResizeUnitTest",
                "name": "shouldBeEnabledByDefault()",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientWindowResizeUnitTest",
                "name": "shouldFailToResizeIfWindowHandleNotFound()",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientWindowResizeUnitTest",
                "name": "shouldDeepCopy()",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientWindowResizeUnitTest",
                "name": "shouldSetX()",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientWindowResizeUnitTest",
                "name": "shouldSetY()",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientWindowResizeUnitTest",
                "name": "shouldResizeWindow()",
                "time": 0.089,
                "results": [
                    {
                        "result": "Failure",
                        "message": "org.zaproxy.zest.core.v1.ZestClientFailException: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. \nHost info: host: 'croaker', ip: '127.0.1.1'",
                        "type": "org.zaproxy.zest.core.v1.ZestClientFailException"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientWindowResizeUnitTest",
                "name": "shouldSerialiseAndDeserialise()",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientWindowResizeUnitTest",
                "name": "shouldNotBePassive()",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.zaproxy.zest.test.v1.ZestClientWindowResizeUnitTest",
                "name": "shouldNotHaveWindowHandleByDefault()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[bbfc5906-9d80-4ad1-802c-b086f7b81184/build] \ud83d\ude80  Start image=crawlergpt:latest\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/zaproxy-zest] user=0 workdir=\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v3\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2601  git clone 'https://github.com/gradle/wrapper-validation-action' # ref=v1\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2601  git clone 'https://github.com/gradle/gradle-build-action' # ref=v2\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build] \ud83e\uddea  Matrix: map[java:11]\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build] \u2b50 Run Main actions/checkout@v3\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2705  Success - Main actions/checkout@v3\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build] \u2b50 Run Main actions/setup-java@v3\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/565bd112-83dd-4d3e-af04-284d6cc48b69/act/actions-setup-java@v3/ dst=/var/run/act/actions/actions-setup-java@v3/\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v3/] user=0 workdir=\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/setup/index.js] user= workdir=\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2753  ::group::Installed distributions\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Trying to resolve the latest version from remote\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Resolved latest version as 11.0.19+7\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Trying to download...\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Downloading Java 11.0.19+7 (Temurin-Hotspot) from https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.19%2B7/OpenJDK11U-jdk_x64_linux_hotspot_11.0.19_7.tar.gz ...\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udcac  ::debug::Downloading https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.19%252B7/OpenJDK11U-jdk_x64_linux_hotspot_11.0.19_7.tar.gz\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udcac  ::debug::Destination /tmp/d80c50f6-e875-46ad-9077-e4efc91f3212\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udcac  ::debug::download complete\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Extracting Java archive...\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udcac  ::debug::Checking tar --version\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/6374258b-aa4d-4327-801e-d8b35524d86a -f /tmp/d80c50f6-e875-46ad-9077-e4efc91f3212\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udcac  ::debug::Caching tool Java_Temurin-Hotspot_jdk 11.0.19-7 x64\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udcac  ::debug::source dir: /tmp/6374258b-aa4d-4327-801e-d8b35524d86a/jdk-11.0.19+7\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udcac  ::debug::finished caching tool\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Java 11.0.19+7 was downloaded\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Setting Java 11.0.19+7 as the default\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Creating toolchains.xml for JDK version 11 from temurin\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Writing to /home/runneradmin/.m2/toolchains.xml\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Java configuration:\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |   Distribution: temurin\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |   Version: 11.0.19+7\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |   Path: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2753  ::endgroup::\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2753 add-matcher /run/act/actions/actions-setup-java@v3/.github/java.json\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Creating settings.xml with server-id: github\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Writing to /home/runneradmin/.m2/settings.xml\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2705  Success - Main actions/setup-java@v3\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2699  ::set-env:: JAVA_HOME_11_X64=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2699  ::set-output:: distribution=Temurin-Hotspot\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2699  ::set-output:: path=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2699  ::set-output:: version=11.0.19+7\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64/bin\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build] \u2b50 Run Main gradle/wrapper-validation-action@v1\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/565bd112-83dd-4d3e-af04-284d6cc48b69/act/gradle-wrapper-validation-action@v1/ dst=/var/run/act/actions/gradle-wrapper-validation-action@v1/\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/gradle-wrapper-validation-action@v1/] user=0 workdir=\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/gradle-wrapper-validation-action@v1/dist/index.js] user= workdir=\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \u2713 Found known Gradle Wrapper JAR files:\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |   c5a643cf80162e665cc228f7b16f343fef868e47d3a4836f62e18b7e17ac018a gradle/wrapper/gradle-wrapper.jar\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2705  Success - Main gradle/wrapper-validation-action@v1\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build] \u2b50 Run Main gradle/gradle-build-action@v2\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/565bd112-83dd-4d3e-af04-284d6cc48b69/act/gradle-gradle-build-action@v2/ dst=/var/run/act/actions/gradle-gradle-build-action@v2/\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/gradle-gradle-build-action@v2/] user=0 workdir=\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/gradle-gradle-build-action@v2/dist/main/index.js] user= workdir=\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udcac  ::debug::Determined user.home from java -version output: '/home/runneradmin'\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2753  ::group::Restore Gradle state from cache\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udcac  ::debug::Requesting Gradle User Home with%0A    key:v8-gradle|Linux|bbfc5906-9d80-4ad1-802c-b086f7b81184-build[156dcb938dda9bf4248ce2762099488f]-ec017097b0b2527bbcd3d8265d64ddb8f8137512%0A    restoreKeys:[v8-gradle|Linux|bbfc5906-9d80-4ad1-802c-b086f7b81184-build[156dcb938dda9bf4248ce2762099488f],v8-gradle|Linux|bbfc5906-9d80-4ad1-802c-b086f7b81184-build,v8-gradle|Linux]\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udcac  ::debug::Using cache paths: /home/runneradmin/.gradle/caches,/home/runneradmin/.gradle/notifications,/home/runneradmin/.gradle/.gradle-build-action\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udcac  ::debug::Resolved Keys:\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udcac  ::debug::[\"v8-gradle|Linux|bbfc5906-9d80-4ad1-802c-b086f7b81184-build[156dcb938dda9bf4248ce2762099488f]-ec017097b0b2527bbcd3d8265d64ddb8f8137512\",\"v8-gradle|Linux|bbfc5906-9d80-4ad1-802c-b086f7b81184-build[156dcb938dda9bf4248ce2762099488f]\",\"v8-gradle|Linux|bbfc5906-9d80-4ad1-802c-b086f7b81184-build\",\"v8-gradle|Linux\"]\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udcac  ::debug::1.5.0\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:43251/_apis/artifactcache/cache?keys=v8-gradle%257CLinux%257Cbbfc5906-9d80-4ad1-802c-b086f7b81184-build%255B156dcb938dda9bf4248ce2762099488f%255D-ec017097b0b2527bbcd3d8265d64ddb8f8137512%252Cv8-gradle%257CLinux%257Cbbfc5906-9d80-4ad1-802c-b086f7b81184-build%255B156dcb938dda9bf4248ce2762099488f%255D%252Cv8-gradle%257CLinux%257Cbbfc5906-9d80-4ad1-802c-b086f7b81184-build%252Cv8-gradle%257CLinux&version=7e0f66437efb161be47bb1072c6fc17ab6d53d5793ce4732de3c3ce29c5348a5\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Gradle User Home cache not found. Will initialize empty.\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2753  ::endgroup::\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2705  Success - Main gradle/gradle-build-action@v2\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2699  ::set-env:: GRADLE_BUILD_ACTION_SETUP_COMPLETED=true\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2699  ::set-env:: GRADLE_BUILD_ACTION_CACHE_RESTORED=true\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build] \u2b50 Run Main ./gradlew assemble\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Downloading https://services.gradle.org/distributions/gradle-7.6-all.zip\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | ...............10%................20%................30%................40%...............50%................60%................70%................80%...............90%................100%\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Welcome to Gradle 7.6!\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Here are the highlights of this release:\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |  - Added support for Java 19.\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |  - Introduced `--rerun` flag for individual task rerun.\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |  - Improved dependency block for test suites to be strongly typed.\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |  - Added a pluggable system for Java toolchains provisioning.\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | For more details see https://docs.gradle.org/7.6/release-notes.html\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :compileJava\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :processResources\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :classes\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :jar\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :startScripts\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :distTar\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :distZip\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :assemble\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | BUILD SUCCESSFUL in 1m 13s\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | 6 actionable tasks: 6 executed\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2705  Success - Main ./gradlew assemble\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build] \u2b50 Run Main ./gradlew check\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :spotlessInternalRegisterDependencies\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :spotlessJava\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :spotlessJavaCheck\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :spotlessCheck\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :compileJava UP-TO-DATE\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :processResources UP-TO-DATE\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :classes UP-TO-DATE\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :compileTestJava\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :processTestResources\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :testClasses\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :test\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | ZestClientElementMouseOverUnitTest > shouldMouseOverElement() FAILED\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |     org.zaproxy.zest.core.v1.ZestClientFailException at ZestClientElementMouseOverUnitTest.java:82\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |         Caused by: org.openqa.selenium.SessionNotCreatedException at ZestClientElementMouseOverUnitTest.java:82\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |             Caused by: org.openqa.selenium.WebDriverException at ZestClientElementMouseOverUnitTest.java:82\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | ZestClientElementScrollToUnitTest > shouldScrollToElement() FAILED\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |     org.zaproxy.zest.core.v1.ZestClientFailException at ZestClientElementScrollToUnitTest.java:85\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |         Caused by: org.openqa.selenium.SessionNotCreatedException at ZestClientElementScrollToUnitTest.java:85\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |             Caused by: org.openqa.selenium.WebDriverException at ZestClientElementScrollToUnitTest.java:85\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | ZestClientElementScrollUnitTest > shouldScroll() FAILED\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |     org.zaproxy.zest.core.v1.ZestClientFailException at ZestClientElementScrollUnitTest.java:124\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |         Caused by: org.openqa.selenium.SessionNotCreatedException at ZestClientElementScrollUnitTest.java:124\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |             Caused by: org.openqa.selenium.WebDriverException at ZestClientElementScrollUnitTest.java:124\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | ZestClientWindowResizeUnitTest > shouldResizeWindow() FAILED\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |     org.zaproxy.zest.core.v1.ZestClientFailException at ZestClientWindowResizeUnitTest.java:128\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |         Caused by: org.openqa.selenium.SessionNotCreatedException at ZestClientWindowResizeUnitTest.java:128\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   |             Caused by: org.openqa.selenium.WebDriverException at ZestClientWindowResizeUnitTest.java:128\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | 353 tests completed, 4 failed\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Task :test FAILED\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | FAILURE: Build failed with an exception.\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | * What went wrong:\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Execution failed for task ':test'.\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > There were failing tests. See the report at: file:///tmp/3d783ea4-1661-11ee-8a50-bb14de238602/zaproxy-zest/build/reports/tests/test/index.html\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | * Try:\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Run with --stacktrace option to get the stack trace.\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Run with --info or --debug option to get more log output.\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | > Run with --scan to get full insights.\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | * Get more help at https://help.gradle.org\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | \n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | BUILD FAILED in 28s\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | 8 actionable tasks: 6 executed, 2 up-to-date\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u274c  Failure - Main ./gradlew check\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build] exitcode '1': failure\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build] \u2b50 Run Post gradle/gradle-build-action@v2\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/gradle-gradle-build-action@v2/dist/post/index.js] user= workdir=\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | In final post-action step, saving state and writing summary\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Cache is read-only: will not save state for use in subsequent builds.\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   | Writing job summary\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2705  Success - Post gradle/gradle-build-action@v2\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build] \u2b50 Run Post actions/setup-java@v3\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/cleanup/index.js] user= workdir=\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build]   \u2705  Success - Post actions/setup-java@v3\n[bbfc5906-9d80-4ad1-802c-b086f7b81184/build] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'build' failed\n",
        "workflow": "/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/zaproxy-zest/.github/workflows/ci-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 225.41018843650818
    }
}