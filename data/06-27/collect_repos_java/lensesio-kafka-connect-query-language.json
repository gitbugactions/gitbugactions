{
    "repository": "lensesio/kafka-connect-query-language",
    "stars": 94,
    "language": "java",
    "size": 752,
    "clone_url": "https://github.com/lensesio/kafka-connect-query-language.git",
    "timestamp": "2023-06-29T12:23:06.045726Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "gradle",
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseAnInsertWithFieldAliasAndAutocreateWithPKs",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseWithWithOutInitialize",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseAnInsertWithFieldAliasMixedWithAllFieldsTheAsterixAtTheEnd",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handlerPartitionByWhenAllFieldsAreIncluded",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseAnInsertWithFieldAliasAndSettingTheBatchSize",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseAnInsertWithFieldAlias",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleStoredAs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseTags",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleSession",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleEncode",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleLockTime",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "throwAnExceptionIfTagsListIsEmpty",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseSimpleSelectCommandWithPK",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleDashForTopicAndTable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "throwExceptionWithCount",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "throwExceptionWithFlushInterval",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handlerPartitionByFromHeader",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handlerBucketingWithAllColumnsSelected",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseAnInsertWithFieldAliasAndAutocreateWithPKsAndAutoevolve",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleKeyDelimeter",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleUpdate",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "throwExceptionWhenTagsWithNestedFieldsEndsWithDot",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseAnInsertWithFieldAliasMixedWithNoAliasing",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "throwExceptionOnInvalidWithPartitioning",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleTargetAndSourceContainingDash",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseAnInsertWithSelectAllFieldsAndNoIgnore",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleTimestampAsOneOfTheFields",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "throwAnExceptionIfStoredAsParametersIsEmpty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleWithTarget",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleWithPartitioning",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleTTLSelectOnly",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleWithSubscription",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseTagsWithNestedFields",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleWithTableLocation",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleWithSchemaEvolution",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleKeyDelimeterSelect",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleKeysAll",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleWithSize",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "throwExceptionIfTheBucketsIsZero",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleForwardSlashInSource",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseWithProject",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "throwExceptionIfTheBucketsNumberIsNotProvided",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleCompoundWITHFields",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleAck",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleTTL",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseAnUpsertWithSelectAllFieldsAndNoIgnore",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseAnInsertWithFieldAliasMixedWithAllFieldsTheAsterixAtTheBegining",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleWithOverwrite",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handlerBucketingWithSpecificColumnsSpecified",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleAtCharacterInFields",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handlerDistributeWhenSpecificFieldsAreIncluded",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handlerPartitionByWhenSpecificFieldsAreIncludedAndAliasingIsPresent",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseAnUpsertWithSelectAllFieldsWithIgnoredColumnsWithCapitalization",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleFieldSelectionWithPKWithTimestampSetAsFieldNotInSelection",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleWithPartitioner",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleWithCompression",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseAnInsertWithSelectAllFieldsAndNoIgnoreAndPKs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleTimestampSetAsCurrentSysWhenSelectedFieldsIncluded",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handlerPartitionByWhenSpecificFieldsAreIncluded",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseAnInsertWithDottedTarget",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleTypeAsOneOfTheFields",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleTimestampSetAsCurrentSysWhenAllFieldsIncluded",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseSimpleSelectCommand",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseAnUpsertWithSelectAllFieldsWithIgnoredColumns",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "throwExceptionOnInvalidWithSchemaEvolution",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "throwExceptionIfTheBucketNamesAreMissing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseAnInsertWithFieldAliasAndAutocreateNoPKs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handlerDistributeByWhenSpecificFieldsAreIncludedAndAliasingIsPresent",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleTimestampWhenAllFieldIncluded",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleHeaders",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleSemicolonInTarget",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleLimit",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseAnInsertWithFieldAliasMixedWithAllFieldsTheAsterixInTheMiddle",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseAnotherSimpleSelectCommandWithPK",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleWithFlushInterval",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleWithPipeline",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleTargetAndSourceContainingDot",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleWithKeyEscaped",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseWithInitialize",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "throwExceptionIfStoredAsTypeIsMissing",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handlerDistributeWhenAllFieldsAreIncluded",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "throwExceptionWithSize",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleWithCount",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleWithDelay",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleWithRegex",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleWithKey",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleKeys",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "parseAnInsertWithSelectAllFieldsWithIgnoredColumns",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleStoredAsClause",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "throwAnExceptionIfStoredAsParameterAppersTwice",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlTest",
                "name": "handleTimestampUnit",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlPropertiesTest",
                "name": "handleEmptyPropertyValue",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlPropertiesTest",
                "name": "handlePropertyKeyWithDot",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlPropertiesTest",
                "name": "captureThePropertiesSet",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlPropertiesTest",
                "name": "capturePropertyValueWithWithSpace",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlPropertiesTest",
                "name": "emptyPropertiesIfNotDefined",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlPropertiesTest",
                "name": "emptyPropertiesIfEmpty",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "testSELECTwithNestedFieldsInPK",
                "time": 0.126,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "parseASelectWithAMixOfAliasingAndUsingQuotation",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "parseStartAndSetAField",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "throwAnExceptionIfTheFormatIsNotCorrect",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "testSELECTwithPK",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "testUnwrapping",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "parseASelectAllFromTopicWithMultiplePartitionsAndOffset",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "parseLimit",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "parseASelectWithAliasingFields",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "throwAnExceptionIfTheSampleRateIsNotANumber",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "parseASelectAllFromTopicWithAConsumerGroup",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "throwAnExceptionIfTheFromOffsetIsNotAValidNumber",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "parseASelectAllFromTopicWithJustPartitionNoOffset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "throwAnExceptionIfTheSampleCountIsZero",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "testSELECTwithNestedFieldsInPK2",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "parseASelectWithAMixOfAliasing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "testSTOREAS",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "throwAnExceptionIfLimitNumberIsMissing",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "parseInsertSelectWithPkNonParticipatingInFieldSelection",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "parseASelectWithAMixOfAliasingAndRetainStructure",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "parseASelectWithSampleRateAndSampleCount",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "throwAnExceptionIfTheSampleCountIsNotANumber",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "parseASelectAllFromTopicWithAConsumerGroup123",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "parseASelectAllFromTopic",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "throwAnExceptionIfTheSampleRateIsZero",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlSelectOnlyTest",
                "name": "throwAnExceptionIfLimitNumberIsZero",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "throwAnExceptionIfKeySelectWithStartIsAliased",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "parseMetadataFieldsWithAlias",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "parseFieldsWithTheSameNameButDifferentPath",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "parseIngoreFields",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "parseKeyFields",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "parseWithConverter",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "throwAnExceptionIfFollowingUnderscoreIsNotAMetadataOrKey",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "handleWithStructureQuery",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "throwAnExceptionIfNotSpecifyingAnythingWhenUsingKey",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "parseWithIncrementalMode",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "parseNestedFieldWithAlias",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "parseNestedFieldWithStart",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "throwAnExceptionIfTheFieldSelectionHasStartField",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "throwAnExceptionIfOnlyUnderscoreIsProvided",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "parseWithIndexSuffix",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "parseMultipleFieldsOneWithAliasTheOtherWithoutNestedFieldWithAlias",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "throwAnExceptionIfTheFieldSelectionStartsWithStar",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "throwAnExceptionIfNotSpecifyingAnythingWhenUsingKeyAndDot",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "parseMetadataFields",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "parseWithJmsSelector",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "parseKeyFieldsWithAlias",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "parseNestedField",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.datamountaineer.kcql.KcqlNestedFieldTest",
                "name": "parseWithDocType",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[c1fb8544-ee50-4355-8184-c06d5091252e/build] \ud83d\ude80  Start image=crawlergpt:latest\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/lensesio-kafka-connect-query-language] user=0 workdir=\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[c1fb8544-ee50-4355-8184-c06d5091252e/build] \u2b50 Run Main actions/checkout@v2\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \u2705  Success - Main actions/checkout@v2\n[c1fb8544-ee50-4355-8184-c06d5091252e/build] \u2b50 Run Main Set up JDK 1.8\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/2d7d542b-1878-490b-9bab-0bf7c76a1f23/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udcac  ::debug::isExplicit: \n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udcac  ::debug::explicit? false\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udcac  ::debug::evaluating 0 versions\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udcac  ::debug::match not found\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu8.70.0.23-ca-jdk8.0.372-linux_x64.tar.gz\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udcac  ::debug::Downloading /tmp/eda72dc8-e658-46d8-998c-8b673b63b7ad\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udcac  ::debug::download complete\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | [command]/usr/bin/tar --version\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | tar (GNU tar) 1.30\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | This is free software: you are free to change and redistribute it.\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | There is NO WARRANTY, to the extent permitted by law.\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | \n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | Written by John Gilmore and Jay Fenlason.\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_1618572965 -f /tmp/eda72dc8-e658-46d8-998c-8b673b63b7ad\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_1618572965/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udcac  ::debug::Caching tool jdk 8.0.372 x64\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udcac  ::debug::source dir: /tmp/temp_1618572965/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/8.0.372/x64\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udcac  ::debug::finished caching tool\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | writing /home/runneradmin/.m2/settings.xml\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \u2705  Success - Main Set up JDK 1.8\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \u2699  ::set-env:: JAVA_HOME_8.0.372_x64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/8.0.372/x64\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \u2699  ::set-env:: JAVA_HOME_8_0_372_X64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/8.0.372/x64\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \u2699  ::set-output:: version=8.0.372\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/8.0.372/x64/bin\n[c1fb8544-ee50-4355-8184-c06d5091252e/build] \u2b50 Run Main Download gradle\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | Downloading https://services.gradle.org/distributions/gradle-5.2-bin.zip\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | ...................................................................................\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | \n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | Welcome to Gradle 5.2!\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | \n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | Here are the highlights of this release:\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   |  - Define sets of dependencies that work together with Java Platform plugin\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   |  - New C++ plugins with dependency management built-in\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   |  - New C++ project types for gradle init\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   |  - Service injection into plugins and project extensions\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | \n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | For more details see https://docs.gradle.org/5.2/release-notes.html\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | \n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | \n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | ------------------------------------------------------------\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | Gradle 5.2\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | ------------------------------------------------------------\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | \n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | Build time:   2019-02-04 11:16:48 UTC\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | Revision:     840644a429c8b8b9ae399867eb1660e3109bc7a3\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | \n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | Kotlin DSL:   1.1.3\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | Kotlin:       1.3.20\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | Groovy:       2.5.4\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | Ant:          Apache Ant(TM) version 1.9.13 compiled on July 10 2018\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | JVM:          1.8.0_372 (Azul Systems, Inc. 25.372-b07)\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | OS:           Linux 5.4.0-146-generic amd64\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | \n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \u2705  Success - Main Download gradle\n[c1fb8544-ee50-4355-8184-c06d5091252e/build] \u2b50 Run Main Run tests\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | \n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :generateGrammarSource\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | warning(125): ConnectorParser.g4:364:6: implicit definition of token ID in parser\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | \n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :compileJava\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | Note: /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/lensesio-kafka-connect-query-language/src/main/java/com/datamountaineer/kcql/Kcql.java uses or overrides a deprecated API.\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | Note: Recompile with -Xlint:deprecation for details.\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | \n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :processResources NO-SOURCE\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :classes\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :generateTestGrammarSource NO-SOURCE\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :compileTestJava\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :processTestResources NO-SOURCE\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :testClasses\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :test\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | \n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | BUILD SUCCESSFUL in 29s\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | 4 actionable tasks: 4 executed\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \u2705  Success - Main Run tests\n[c1fb8544-ee50-4355-8184-c06d5091252e/build] \u2b50 Run Main Run compile\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :generateGrammarSource UP-TO-DATE\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :compileJava UP-TO-DATE\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :compile UP-TO-DATE\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | \n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | BUILD SUCCESSFUL in 1s\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | 2 actionable tasks: 2 up-to-date\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \u2705  Success - Main Run compile\n[c1fb8544-ee50-4355-8184-c06d5091252e/build] \u2b50 Run Main Run build\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :generateGrammarSource UP-TO-DATE\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :compileJava UP-TO-DATE\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :processResources NO-SOURCE\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :classes UP-TO-DATE\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :jar\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :javadoc\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :javadocJar\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :sourcesJar\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :signArchives SKIPPED\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :assemble\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :generateTestGrammarSource NO-SOURCE\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :compileTestJava UP-TO-DATE\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :processTestResources NO-SOURCE\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :testClasses UP-TO-DATE\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :test UP-TO-DATE\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :check UP-TO-DATE\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | > Task :build\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | \n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | BUILD SUCCESSFUL in 12s\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   | 8 actionable tasks: 4 executed, 4 up-to-date\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \u2705  Success - Main Run build\n[c1fb8544-ee50-4355-8184-c06d5091252e/build] \u2b50 Run Post Set up JDK 1.8\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[c1fb8544-ee50-4355-8184-c06d5091252e/build]   \u2705  Success - Post Set up JDK 1.8\n[c1fb8544-ee50-4355-8184-c06d5091252e/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/lensesio-kafka-connect-query-language/.github/workflows/build-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 181.7415895462036
    }
}