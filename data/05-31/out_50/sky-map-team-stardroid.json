{
    "repository": "sky-map-team/stardroid",
    "clone_url": "https://github.com/sky-map-team/stardroid.git",
    "timestamp": "2023-05-28T18:48:08.004083Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Android CI/build_and_unit_test] \ud83d\ude80  Start image=crawlergpt:latest\n[Android CI/connected_test     ] \ud83d\ude80  Start image=crawlergpt:latest\n[Android CI/build_and_unit_test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Android CI/connected_test     ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Android CI/build_and_unit_test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Android CI/connected_test     ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Android CI/connected_test     ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Android CI/build_and_unit_test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Android CI/build_and_unit_test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/sky-map-team-stardroid] user=0 workdir=\n[Android CI/connected_test     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/sky-map-team-stardroid] user=0 workdir=\n[Android CI/build_and_unit_test]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[Android CI/connected_test     ]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v2\n[Android CI/build_and_unit_test] Non-terminating error while running 'git clone': some refs were not updated\n[Android CI/build_and_unit_test]   \u2601  git clone 'https://github.com/asadmansr/android-test-report-action' # ref=v1.2.0\n[Android CI/connected_test     ] Non-terminating error while running 'git clone': some refs were not updated\n[Android CI/connected_test     ]   \u2601  git clone 'https://github.com/reactivecircus/android-emulator-runner' # ref=v2\n[Android CI/build_and_unit_test] \u2b50 Run Main actions/checkout@v2\n[Android CI/build_and_unit_test]   \u2705  Success - Main actions/checkout@v2\n[Android CI/connected_test     ] \ud83e\uddea  Matrix: map[api-level:29 target:playstore]\n[Android CI/connected_test     ] \u2b50 Run Main checkout\n[Android CI/build_and_unit_test] \u2b50 Run Main set up JDK\n[Android CI/connected_test     ]   \u2705  Success - Main checkout\n[Android CI/build_and_unit_test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[Android CI/connected_test     ] \u2b50 Run Main Setup Java\n[Android CI/build_and_unit_test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[Android CI/connected_test     ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v2/ dst=/var/run/act/actions/actions-setup-java@v2/\n[Android CI/build_and_unit_test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[Android CI/build_and_unit_test]   \ud83d\udcac  ::debug::isExplicit: \n[Android CI/build_and_unit_test]   \ud83d\udcac  ::debug::explicit? false\n[Android CI/build_and_unit_test]   \ud83d\udcac  ::debug::evaluating 0 versions\n[Android CI/build_and_unit_test]   \ud83d\udcac  ::debug::match not found\n[Android CI/build_and_unit_test]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[Android CI/build_and_unit_test]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[Android CI/build_and_unit_test]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu11.64.19-ca-jdk11.0.19-linux_x64.tar.gz\n[Android CI/build_and_unit_test]   \ud83d\udcac  ::debug::Downloading /tmp/d72d82d5-5e40-404d-ae9f-e4c14cf106c3\n[Android CI/connected_test     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v2/] user=0 workdir=\n[Android CI/connected_test     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v2/dist/setup/index.js] user= workdir=\n[Android CI/connected_test     ]   \ud83d\udcac  ::debug::isExplicit: 11.0.11-9\n[Android CI/connected_test     ]   \ud83d\udcac  ::debug::explicit? true\n[Android CI/connected_test     ]   \ud83d\udcac  ::debug::isExplicit: 8.0.292-1\n[Android CI/connected_test     ]   \ud83d\udcac  ::debug::explicit? true\n[Android CI/connected_test     ]   | Resolved Java 11.0.11+9 from tool-cache\n[Android CI/connected_test     ]   | Setting Java 11.0.11+9 as the default\n[Android CI/connected_test     ]   | \n[Android CI/connected_test     ]   | Java configuration:\n[Android CI/connected_test     ]   |   Distribution: adopt\n[Android CI/connected_test     ]   |   Version: 11.0.11+9\n[Android CI/connected_test     ]   |   Path: /opt/hostedtoolcache/Java_Adopt_jdk/11.0.11-9/x64\n[Android CI/connected_test     ]   | \n[Android CI/connected_test     ]   \u2753 add-matcher /run/act/actions/actions-setup-java@v2/.github/java.json\n[Android CI/connected_test     ]   | Creating settings.xml with server-id: github\n[Android CI/connected_test     ]   | Writing to /home/runneradmin/.m2/settings.xml\n[Android CI/connected_test     ]   \u2705  Success - Main Setup Java\n[Android CI/connected_test     ]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/Java_Adopt_jdk/11.0.11-9/x64\n[Android CI/connected_test     ]   \u2699  ::set-output:: distribution=Adopt-Hotspot\n[Android CI/connected_test     ]   \u2699  ::set-output:: path=/opt/hostedtoolcache/Java_Adopt_jdk/11.0.11-9/x64\n[Android CI/connected_test     ]   \u2699  ::set-output:: version=11.0.11+9\n[Android CI/connected_test     ]   \u2699  ::add-path:: /opt/hostedtoolcache/Java_Adopt_jdk/11.0.11-9/x64/bin\n[Android CI/connected_test     ] \u2b50 Run Main run tests\n[Android CI/connected_test     ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/reactivecircus-android-emulator-runner@v2/ dst=/var/run/act/actions/reactivecircus-android-emulator-runner@v2/\n[Android CI/connected_test     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/reactivecircus-android-emulator-runner@v2/] user=0 workdir=\n[Android CI/connected_test     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/reactivecircus-android-emulator-runner@v2/lib/main.js] user= workdir=\n[Android CI/connected_test     ]   \u2753  ::group::Configure emulator\n[Android CI/connected_test     ]   | You're running a Linux VM where hardware acceleration is not available. Please consider using a macOS VM instead to take advantage of native hardware acceleration support provided by HAXM.\n[Android CI/connected_test     ]   | API level: 29\n[Android CI/connected_test     ]   | target: google_apis_playstore\n[Android CI/connected_test     ]   | CPU architecture: x86_64\n[Android CI/connected_test     ]   | Hardware profile: Nexus 6\n[Android CI/connected_test     ]   | Cores: 2\n[Android CI/connected_test     ]   | RAM size: \n[Android CI/connected_test     ]   | Heap size: \n[Android CI/connected_test     ]   | SD card path or size: \n[Android CI/connected_test     ]   | Disk size: \n[Android CI/connected_test     ]   | AVD name: test\n[Android CI/connected_test     ]   | force avd creation: true\n[Android CI/connected_test     ]   | Emulator boot timeout: 600\n[Android CI/connected_test     ]   | emulator options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim\n[Android CI/connected_test     ]   | disable animations: true\n[Android CI/connected_test     ]   | disable spellchecker: false\n[Android CI/connected_test     ]   | disable Linux hardware acceleration: true\n[Android CI/connected_test     ]   | enable hardware keyboard: false\n[Android CI/connected_test     ]   | Channel: 0 (stable)\n[Android CI/connected_test     ]   | Script:\n[Android CI/connected_test     ]   | ./gradlew connectedGmsDebugAndroidTest -x lint --stacktrace\n[Android CI/connected_test     ]   | Pre emulator launch script:\n[Android CI/connected_test     ]   \u2753  ::endgroup::\n[Android CI/connected_test     ]   \u2753  ::group::Install Android SDK\n[Android CI/connected_test     ]   | [command]/usr/bin/sh -c \\sudo chown $USER:$USER undefined -R\n[Android CI/connected_test     ]   | chown: cannot access 'undefined': No such file or directory\n[Android CI/connected_test     ]   \u2753  ::endgroup::\n[Android CI/connected_test     ]   \u2753  ::group::Terminate Emulator\n[Android CI/connected_test     ]   | Unable to locate executable file: adb. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Android CI/connected_test     ]   \u2753  ::endgroup::\n[Android CI/connected_test     ]   \u2757  ::error::The process '/usr/bin/sh' failed with exit code 1\n[Android CI/connected_test     ]   \u274c  Failure - Main run tests\n[Android CI/connected_test     ] exitcode '1': failure\n[Android CI/connected_test     ] \u2b50 Run Post Setup Java\n[Android CI/connected_test     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v2/dist/cleanup/index.js] user= workdir=\n[Android CI/build_and_unit_test]   \ud83d\udcac  ::debug::download complete\n[Android CI/build_and_unit_test]   | [command]/usr/bin/tar --version\n[Android CI/build_and_unit_test]   | tar (GNU tar) 1.30\n[Android CI/build_and_unit_test]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[Android CI/build_and_unit_test]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[Android CI/build_and_unit_test]   | This is free software: you are free to change and redistribute it.\n[Android CI/build_and_unit_test]   | There is NO WARRANTY, to the extent permitted by law.\n[Android CI/build_and_unit_test]   | \n[Android CI/build_and_unit_test]   | Written by John Gilmore and Jay Fenlason.\n[Android CI/build_and_unit_test]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_596488810 -f /tmp/d72d82d5-5e40-404d-ae9f-e4c14cf106c3\n[Android CI/connected_test     ]   \u2705  Success - Post Setup Java\n[Android CI/build_and_unit_test]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_596488810/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[Android CI/build_and_unit_test]   \ud83d\udcac  ::debug::Caching tool jdk 11.0.19 x64\n[Android CI/build_and_unit_test]   \ud83d\udcac  ::debug::source dir: /tmp/temp_596488810/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[Android CI/build_and_unit_test]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/11.0.19/x64\n[Android CI/build_and_unit_test]   \ud83d\udcac  ::debug::finished caching tool\n[Android CI/build_and_unit_test]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[Android CI/build_and_unit_test]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[Android CI/build_and_unit_test]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[Android CI/build_and_unit_test]   | writing /home/runneradmin/.m2/settings.xml\n[Android CI/build_and_unit_test]   \u2705  Success - Main set up JDK\n[Android CI/build_and_unit_test]   \u2699  ::set-env:: JAVA_HOME_11.0.19_x64=/opt/hostedtoolcache/jdk/11.0.19/x64\n[Android CI/build_and_unit_test]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/11.0.19/x64\n[Android CI/build_and_unit_test]   \u2699  ::set-env:: JAVA_HOME_11_0_19_X64=/opt/hostedtoolcache/jdk/11.0.19/x64\n[Android CI/build_and_unit_test]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/11.0.19/x64\n[Android CI/build_and_unit_test]   \u2699  ::set-output:: version=11.0.19\n[Android CI/build_and_unit_test]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/11.0.19/x64/bin\n[Android CI/build_and_unit_test] \u2b50 Run Main Grant execute permission for gradlew\n[Android CI/build_and_unit_test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Android CI/build_and_unit_test]   \u2705  Success - Main Grant execute permission for gradlew\n[Android CI/connected_test     ] \ud83c\udfc1  Job failed\n[Android CI/build_and_unit_test] \u2b50 Run Main Build with Gradle\n[Android CI/build_and_unit_test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Android CI/build_and_unit_test]   | Downloading https://services.gradle.org/distributions/gradle-7.0.2-all.zip\n[Android CI/build_and_unit_test]   | ..............10%...............20%...............30%..............40%...............50%...............60%...............70%..............80%...............90%...............100%\n[Android CI/build_and_unit_test]   | \n[Android CI/build_and_unit_test]   | Welcome to Gradle 7.0.2!\n[Android CI/build_and_unit_test]   | \n[Android CI/build_and_unit_test]   | Here are the highlights of this release:\n[Android CI/build_and_unit_test]   |  - File system watching enabled by default\n[Android CI/build_and_unit_test]   |  - Support for running with and building Java 16 projects\n[Android CI/build_and_unit_test]   |  - Native support for Apple Silicon processors\n[Android CI/build_and_unit_test]   |  - Dependency catalog feature preview\n[Android CI/build_and_unit_test]   | \n[Android CI/build_and_unit_test]   | For more details see https://docs.gradle.org/7.0.2/release-notes.html\n[Android CI/build_and_unit_test]   | \n[Android CI/build_and_unit_test]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[Android CI/build_and_unit_test]   | \n[Android CI/build_and_unit_test]   | > Configure project :app\n[Android CI/build_and_unit_test]   | Warning: The 'kotlin-android-extensions' Gradle plugin is deprecated. Please use this migration guide (https://goo.gle/kotlin-android-extensions-deprecation) to start working with View Binding (https://developer.android.com/topic/libraries/view-binding) and the 'kotlin-parcelize' plugin.\n[Android CI/build_and_unit_test]   | \n[Android CI/build_and_unit_test]   | FAILURE: Build failed with an exception.\n[Android CI/build_and_unit_test]   | \n[Android CI/build_and_unit_test]   | * What went wrong:\n[Android CI/build_and_unit_test]   | Could not determine the dependencies of task ':app:lintVitalFdroidRelease'.\n[Android CI/build_and_unit_test]   | > Could not resolve all dependencies for configuration ':app:fdroidReleaseRuntimeClasspath'.\n[Android CI/build_and_unit_test]   |    > Could not create task ':app:minifyFdroidReleaseWithR8'.\n[Android CI/build_and_unit_test]   |       > SDK location not found. Define location with an ANDROID_SDK_ROOT environment variable or by setting the sdk.dir path in your project's local properties file at '/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/sky-map-team-stardroid/local.properties'.\n[Android CI/build_and_unit_test]   | \n[Android CI/build_and_unit_test]   | * Try:\n[Android CI/build_and_unit_test]   | Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.\n[Android CI/build_and_unit_test]   | \n[Android CI/build_and_unit_test]   | * Get more help at https://help.gradle.org\n[Android CI/build_and_unit_test]   | \n[Android CI/build_and_unit_test]   | BUILD FAILED in 42s\n[Android CI/build_and_unit_test]   \u274c  Failure - Main Build with Gradle\n[Android CI/build_and_unit_test] exitcode '1': failure\n[Android CI/build_and_unit_test] \u2b50 Run Main Android Test Report\n[Android CI/build_and_unit_test]   \ud83d\udc33  docker build -t act-asadmansr-android-test-report-action-v1-2-0-dockeraction:latest /home/andre-silva/.cache/act/asadmansr-android-test-report-action@v1.2.0/\n[Android CI/build_and_unit_test]   \ud83d\udc33  docker pull image=act-asadmansr-android-test-report-action-v1-2-0-dockeraction:latest platform= username= forcePull=false\n[Android CI/build_and_unit_test]   \ud83d\udc33  docker create image=act-asadmansr-android-test-report-action-v1-2-0-dockeraction:latest platform= entrypoint=[] cmd=[]\n[Android CI/build_and_unit_test]   \ud83d\udc33  docker run image=act-asadmansr-android-test-report-action-v1-2-0-dockeraction:latest platform= entrypoint=[] cmd=[]\n[Android CI/build_and_unit_test]   | \n[Android CI/build_and_unit_test]   | ------------------------------------------------\n[Android CI/build_and_unit_test]   | ---        Android Test Report Action        ---\n[Android CI/build_and_unit_test]   | ------------------------------------------------\n[Android CI/build_and_unit_test]   | \n[Android CI/build_and_unit_test]   | \n[Android CI/build_and_unit_test]   | Android Test Report Action executed successfully.\n[Android CI/build_and_unit_test]   | \n[Android CI/build_and_unit_test]   \u2705  Success - Main Android Test Report\n[Android CI/build_and_unit_test] \u2b50 Run Post set up JDK\n[Android CI/build_and_unit_test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[Android CI/build_and_unit_test]   \u2705  Success - Post set up JDK\n[Android CI/build_and_unit_test] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'build_and_unit_test' failed\n"
}