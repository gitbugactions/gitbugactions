{
    "repository": "telefonicaid/fiware-cygnus",
    "clone_url": "https://github.com/telefonicaid/fiware-cygnus.git",
    "timestamp": "2023-05-28T18:07:49.498070Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[CI/Unit Tests] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Unit Tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Unit Tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Unit Tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Unit Tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/telefonicaid-fiware-cygnus] user=0 workdir=\n[CI/Unit Tests]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[CI/Unit Tests] Non-terminating error while running 'git clone': some refs were not updated\n[CI/Unit Tests] \ud83e\uddea  Matrix: map[java-version:11]\n[CI/Unit Tests] \u2b50 Run Main Git checkout\n[CI/Unit Tests]   \u2705  Success - Main Git checkout\n[CI/Unit Tests] \u2b50 Run Main Use Java 11\n[CI/Unit Tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[CI/Unit Tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[CI/Unit Tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[CI/Unit Tests]   \ud83d\udcac  ::debug::isExplicit: \n[CI/Unit Tests]   \ud83d\udcac  ::debug::explicit? false\n[CI/Unit Tests]   \ud83d\udcac  ::debug::evaluating 0 versions\n[CI/Unit Tests]   \ud83d\udcac  ::debug::match not found\n[CI/Unit Tests]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[CI/Unit Tests]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[CI/Unit Tests]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu11.64.19-ca-jdk11.0.19-linux_x64.tar.gz\n[CI/Unit Tests]   \ud83d\udcac  ::debug::Downloading /tmp/7957d9e3-29c2-4c91-bb5d-9faa2e9252bf\n[CI/Unit Tests]   \ud83d\udcac  ::debug::download complete\n[CI/Unit Tests]   | [command]/usr/bin/tar --version\n[CI/Unit Tests]   | tar (GNU tar) 1.30\n[CI/Unit Tests]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[CI/Unit Tests]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[CI/Unit Tests]   | This is free software: you are free to change and redistribute it.\n[CI/Unit Tests]   | There is NO WARRANTY, to the extent permitted by law.\n[CI/Unit Tests]   | \n[CI/Unit Tests]   | Written by John Gilmore and Jay Fenlason.\n[CI/Unit Tests]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_753674828 -f /tmp/7957d9e3-29c2-4c91-bb5d-9faa2e9252bf\n[CI/Unit Tests]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_753674828/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[CI/Unit Tests]   \ud83d\udcac  ::debug::Caching tool jdk 11.0.19 x64\n[CI/Unit Tests]   \ud83d\udcac  ::debug::source dir: /tmp/temp_753674828/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[CI/Unit Tests]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/11.0.19/x64\n[CI/Unit Tests]   \ud83d\udcac  ::debug::finished caching tool\n[CI/Unit Tests]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[CI/Unit Tests]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[CI/Unit Tests]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[CI/Unit Tests]   | writing /home/runneradmin/.m2/settings.xml\n[CI/Unit Tests]   \u2705  Success - Main Use Java 11\n[CI/Unit Tests]   \u2699  ::set-env:: JAVA_HOME_11.0.19_x64=/opt/hostedtoolcache/jdk/11.0.19/x64\n[CI/Unit Tests]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/11.0.19/x64\n[CI/Unit Tests]   \u2699  ::set-env:: JAVA_HOME_11_0_19_X64=/opt/hostedtoolcache/jdk/11.0.19/x64\n[CI/Unit Tests]   \u2699  ::set-output:: version=11.0.19\n[CI/Unit Tests]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/11.0.19/x64\n[CI/Unit Tests]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/11.0.19/x64/bin\n[CI/Unit Tests] \u2b50 Run Main cygnus-common Unit Tests (Java 11)\n[CI/Unit Tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/Unit Tests]   \u2705  Success - Main cygnus-common Unit Tests (Java 11)\n[CI/Unit Tests] \u2b50 Run Main cygnus-ngsi Unit Tests (Java 11)\n[CI/Unit Tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/Unit Tests]   | \n[CI/Unit Tests]   | -------------------------------------------------------\n[CI/Unit Tests]   |  T E S T S\n[CI/Unit Tests]   | -------------------------------------------------------\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.interceptors.NGSINameMappingsInterceptorTest\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.doMapConfig] ---------------------------- A mapped ContextElement can be obtained from the Name Mappings\n[CI/Unit Tests]   | WARNING: An illegal reflective access operation has occurred\n[CI/Unit Tests]   | WARNING: Illegal reflective access by com.google.gson.internal.bind.ReflectiveTypeAdapterFactory (file:/home/runneradmin/.m2/repository/com/telefonica/iot/cygnus-common/3.1.0-SNAPSHOT/cygnus-common-3.1.0-SNAPSHOT.jar) to field java.util.regex.Pattern.pattern\n[CI/Unit Tests]   | WARNING: Please consider reporting this to the maintainers of com.google.gson.internal.bind.ReflectiveTypeAdapterFactory\n[CI/Unit Tests]   | WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\n[CI/Unit Tests]   | WARNING: All illegal access operations will be denied in a future release\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.doMapConfig] ---------------------  OK  - The mapped NotifyContextRequest is equals to the expected one\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.doMapConfig2] --------------------------- A mapped ContextElement can be obtained from the Name Mappings\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.doMapConfig2] --------------------  OK  - The mapped NotifyContextRequest is equals to the expected one\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.doMapConfig3] --------------------------- A mapped ContextElement can be obtained from the Name Mappings\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.doMapConfig3] --------------------  OK  - The mapped NotifyContextRequest is equals to the expected one\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.doMapConfig4] --------------------------- Original fields can be omitted\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.doMapConfig4] --------------------  OK  - The mapped NotifyContextRequest is equals to the expected one\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.doMapRegex] ----------------------------- A mapped ContextElement can be obtained from the Name Mappings\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.doMapRegex] ----------------------  OK  - The mapped NotifyContextRequest is equals to the expected one\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.intercept] ------------------------------ When a NGSI event is put in the channel, it contains the original ContextElement and the mapped one as bytes in the body\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.intercept] -----------------------  OK  - The generated NGSI event contains the original ContextElement as bytes\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.intercept] ------------------------------ When a NGSI event is put in the channel, it contains fiware-service, fiware-servicepath, fiware-correlator, transaction-id, mapped-fiware-service and mapped-fiware-servicepath headers\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.intercept] -----------------------  OK  - The generated NGSI event contains 'fiware-service'\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.intercept] -----------------------  OK  - The generated NGSI event contains 'fiware-servicepath'\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.intercept] -----------------------  OK  - The generated NGSI event contains 'fiware-correlator'\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.intercept] -----------------------  OK  - The generated NGSI event contains 'transaction-id'\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.intercept] -----------------------  OK  - The generated NGSI event contains 'mapped-fiware-service'\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.intercept] -----------------------  OK  - The generated NGSI event contains 'mapped-fiware-servicepath'\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.doMap] ---------------------------------- A mapped ContextElement can be obtained from the Name Mappings\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.doMap] ---------------------------  OK  - The mapped NotifyContextRequest is equals to the expected one\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.Builder.configure] ---------------------- Configured 'name_mappings_conf_file' cannot be empty\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.Builder.configure] ---------------  OK  - Empty 'name_mappings_conf_file' has been detected\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.intercept] ------------------------------ When a NGSI event is put in the channel, it contains the original ContextElement and the mapped one as objects\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.intercept] -----------------------  OK  - The generated NGSI event contains the original ContextElement as object\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.intercept] -----------------------  OK  - The generated NGSI event contains the mapped ContextElement as object\n[CI/Unit Tests]   | [NGSINameMappingsInterceptor.loadNameMappingsError] ----------------- Load name mappings with error\n[CI/Unit Tests]   | Exception in thread \"Thread-0\" java.lang.NullPointerException\n[CI/Unit Tests]   | \tat java.base/java.io.File.<init>(File.java:278)\n[CI/Unit Tests]   | \tat com.telefonica.iot.cygnus.interceptors.NGSINameMappingsInterceptor$PeriodicalNameMappingsReader.run(NGSINameMappingsInterceptor.java:210)\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.Builder.configure] ---------------------- Configured 'name_mappings_conf_file' cannot be null\n[CI/Unit Tests]   | [NGSINameMappingInterceptor.Builder.configure] ---------------  OK  - Null 'name_mappings_conf_file' has been detected\n[CI/Unit Tests]   | Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.981 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.interceptors.NGSIEventTest\n[CI/Unit Tests]   | [NGSIEvent.getServicePathForData] ----------------------------------- The original service path is returned\n[CI/Unit Tests]   | [NGSIEvent.getServicePathForData] ----------------------------  OK  - The original service path has been returned\n[CI/Unit Tests]   | [NGSIEvent.getServiceForData] --------------------------------------- The original service is returned\n[CI/Unit Tests]   | [NGSIEvent.getServiceForData] --------------------------------  OK  - The original service has been returned\n[CI/Unit Tests]   | [NGSIEvent.getRecvTimeTs] ------------------------------------------- The timestamp is returned\n[CI/Unit Tests]   | [NGSIEvent.getRecvTimeTs] ------------------------------------  OK  - The timestamp has been returned\n[CI/Unit Tests]   | [NGSIEvent.getBody] ------------------------------------------------- Bytes regarding the original context element are returned\n[CI/Unit Tests]   | [NGSIEvent.getBody] ------------------------------------------  OK  - Bytes regarding the original context element have been returned\n[CI/Unit Tests]   | [NGSIEvent.getEntityForNaming] -------------------------------------- When mappings and new encoding are enabled, the concatenation of the mapped entity ID and type (no encoding) is returned\n[CI/Unit Tests]   | [NGSIEvent.getEntityForNaming] -------------------------------  OK  - The concatenation of the mapped entity ID and type (encoding) has been returned\n[CI/Unit Tests]   | [NGSIEvent.getAttributeForNaming] ----------------------------------- When mappings is enabled, the mapped attribute name is returned\n[CI/Unit Tests]   | [NGSIEvent.getAttributeForNaming] ----------------------------  OK  - The mapped attribute name has been returned\n[CI/Unit Tests]   | [NGSIEvent.getAttributeForNaming] ----------------------------------- When mappings is not enabled, the original attribute name is returned\n[CI/Unit Tests]   | [NGSIEvent.getAttributeForNaming] ----------------------------  OK  - The original attribute name has been returned\n[CI/Unit Tests]   | [NGSIEvent.getServicePathForNaming] --------------------------------- When mappings are not enabled, the original service path is returned\n[CI/Unit Tests]   | [NGSIEvent.getServicePathForNaming] --------------------------  OK  - The original service path has been returned\n[CI/Unit Tests]   | [NGSIEvent.getServiceForNaming] ------------------------------------- When name mappings are enabled, the mapped service is returned\n[CI/Unit Tests]   | [NGSIEvent.getServiceForNaming] ------------------------------  OK  - The original service has been returned\n[CI/Unit Tests]   | [NGSIEvent.getServiceForNaming] ------------------------------------- When name mappings are not enabled, the original service is returned\n[CI/Unit Tests]   | [NGSIEvent.getServiceForNaming] ------------------------------  OK  - The original service has been returned\n[CI/Unit Tests]   | [NGSIEvent.getEntityForNaming] -------------------------------------- When mappings is enabled and the mapped type is empty, independently of the new encoding, the mapped entity ID is returned\n[CI/Unit Tests]   | [NGSIEvent.getEntityForNaming] -------------------------------  OK  - The entity ID has been returned\n[CI/Unit Tests]   | [NGSIEvent.getServicePathForNaming] --------------------------------- When mappings are enabled, the mapped service path is returned\n[CI/Unit Tests]   | [NGSIEvent.getServicePathForNaming] --------------------------  OK  - The mapped service path has been returned\n[CI/Unit Tests]   | [NGSIEvent.setBody] ------------------------------------------------- Bytes are correctly set\n[CI/Unit Tests]   | [NGSIEvent.setBody] ------------------------------------------  OK  - Bytes regarding the original context element have been returned\n[CI/Unit Tests]   | [NGSIEvent.getEntityForNaming] -------------------------------------- When mappings is enabled and new encoding is not enabled, the concatenation of the mapped entity ID and type (no encoding) is returned\n[CI/Unit Tests]   | [NGSIEvent.getEntityForNaming] -------------------------------  OK  - The concatenation of the mapped entity ID and type (no encoding) has been returned\n[CI/Unit Tests]   | [NGSIEvent.getEntityForNaming] -------------------------------------- When mappings are not enabled and new encoding is enabled, the original entity (encoded) is returned\n[CI/Unit Tests]   | [NGSIEvent.getEntityForNaming] -------------------------------  OK  - The original entity (not encoded) has been returned\n[CI/Unit Tests]   | [NGSIEvent.getEntityForNaming] -------------------------------------- When mappings and new encoding are not enabled, the original entity (not encoded) is returned\n[CI/Unit Tests]   | [NGSIEvent.getEntityForNaming] -------------------------------  OK  - The original entity (not encoded) has been returned\n[CI/Unit Tests]   | Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSISinkTest\n[CI/Unit Tests]   | [NGSISink.doRollback] ----------------------------------------------- When rollbacking for the first time, the accumulator is added to the rollbacked accumulations having the maximum TTL\n[CI/Unit Tests]   | [NGSISink.doRollback] ----------------------------------------  OK  - Rollbacked accumulation TTL has the maximum value\n[CI/Unit Tests]   | [NGSISink.doRollback] ----------------------------------------  OK  - The accumulation has been added to the rollback queue\n[CI/Unit Tests]   | [NGSISink.configure] ------------------------------------------------ When configured, non mandatory parameters get the appropiate value\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - The configuration value for 'persistence_policy.max_records' is '5'\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - The configuration value for 'persistence_policy.expiration_time' is '60'\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - The configuration value for 'persistence_policy.checking_time' is '7200'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------------- When data model is by service path and name mappings are enabled, a notification issuccessfully accumulated\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Notification successfully accumulated\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated events is 1\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated destination is 'new_vehicles_/new_4wheels'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's service is 'new_vehicles'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's service path is '/new_4wheels'\n[CI/Unit Tests]   | [NGSISink.getRollbackedAccumulationForRetry] ------------------------ When there is a candidate for retrying, it is returned\n[CI/Unit Tests]   | [NGSISink.getRollbackedAccumulationForRetry] -----------------  OK  - There is a candidate for retrying\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------------- When data model is by entity, a notification is successfully accumulated\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Notification successfully accumulated\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated events is 1\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated destination is 'vehicles_/4wheels_Room1_Room'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's service is 'vehicles'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's service path is '/4wheels'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's entity path is 'Room1_Room'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------------- When data model is by attribute, a notification is successfully accumulated\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Notification successfully accumulated\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated events is 1\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated destination is 'vehicles_/4wheels_Room1_Room_temperature'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's service is 'vehicles'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's service path is '/4wheels'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's entity path is 'Room1_Room'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's entity path is 'temperature'\n[CI/Unit Tests]   | [NGSISink.getRollbackedAccumulationForRetry] ------------------------ When there are no candidates for retrying, null is returned\n[CI/Unit Tests]   | [NGSISink.getRollbackedAccumulationForRetry] -----------------  OK  - There is no candidate for retrying having an empty list\n[CI/Unit Tests]   | [NGSISink.getRollbackedAccumulationForRetry] -----------------  OK  - There is no candidate for retrying having an empty list\n[CI/Unit Tests]   | [NGSISink.start] ---------------------------------------------------- The sink starts properly\n[CI/Unit Tests]   | SLF4J: Class path contains multiple SLF4J bindings.\n[CI/Unit Tests]   | SLF4J: Found binding in [jar:file:/home/runneradmin/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.17.2/log4j-slf4j-impl-2.17.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]\n[CI/Unit Tests]   | SLF4J: Found binding in [jar:file:/home/runneradmin/.m2/repository/com/telefonica/iot/cygnus-common/3.1.0-SNAPSHOT/cygnus-common-3.1.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]\n[CI/Unit Tests]   | SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.\n[CI/Unit Tests]   | SLF4J: Actual binding is of type [org.apache.logging.slf4j.Log4jLoggerFactory]\n[CI/Unit Tests]   | [NGSISink.start] ---------------------------------------------  OK  - The sink started properly, the lifecycle state is 'START'\n[CI/Unit Tests]   | [NGSISink.configure] ------------------------------------------------ The configuration becomes invalid upon out-of-the-limits configured values for parameters having a discrete set of accepted values, or numerical values having upper or lower limits\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - A wrong configuration 'batch_size='0' has been detected\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - A wrong configuration 'batch_timeout='0' has been detected\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - A wrong configuration 'batch_ttl='-2' has been detected\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - A wrong configuration 'data_model='dm-by-other' has been detected\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - A wrong configuration 'enable_lowercase='verdadero' has been detected\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - A wrong configuration 'enable_name_mappings='verdadero' has been detected\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - A wrong configuration 'batch_retry_intervals='1000,2000,-3000' has been detected\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - A wrong configuration 'persistence_policy.checking_time='-1000' has been detected\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------------- When data model is by service, a notification is successfully accumulated\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Correlator ID successfully accumulated\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated events is 1\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated destination is 'vehicles'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's service is 'vehicles'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's service path is '/4wheels'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------------- When data model is by attribute and name mappings are enabled, a notification issuccessfully accumulated\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Notification successfully accumulated\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated events is 1\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated destination is 'new_vehicles_/new_4wheels_new_Room1_new_Room_new_temperature'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's service is 'new_vehicles'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's service path is '/new_4wheels'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's entity path is 'new_Room1_new_Room'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's entity path is 'new_temperature'\n[CI/Unit Tests]   | [NGSISink.doRollbackAgain] ------------------------------------------ When rollbacking after the first time, the accumulator is added to the rollbacked accumulations having a decreased TTL\n[CI/Unit Tests]   | [NGSISink.doRollback] ----------------------------------------  OK  - Rollbacked accumulation TTL has the maximum value\n[CI/Unit Tests]   | [NGSISink.doRollback] ----------------------------------------  OK  - The accumulation has been added to the rollback queue\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------------- When data model is by entity and name mappings are enabled, a notification issuccessfully accumulated\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Notification successfully accumulated\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated events is 1\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated destination is 'new_vehicles_/new_4wheels_new_Room1_new_Room'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's service is 'new_vehicles'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's service path is '/new_4wheels'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's entity path is 'new_Room1_new_Room'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------------- When data model is by service and name mappings are enabled, a notification issuccessfully accumulated\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Correlator ID successfully accumulated\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated events is 1\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated destination is 'new_vehicles'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's service is 'new_vehicles'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's service path is '/new_4wheels'\n[CI/Unit Tests]   | [NGSISink.configure] ------------------------------------------------ When not configured, the default values are used for non mandatory parameters\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - The default configuration value for 'batch_retry_intervals' is '5000'\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - The default configuration value for 'batch_size' is '1'\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - The default configuration value for 'batch_timeout' is '30'\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - The default configuration value for 'batch_ttl' is '10'\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - The default configuration value for 'data_model' is 'dm-by-entity'\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - The default configuration value for 'enable_lowercase' is 'false'\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - The default configuration value for 'enable_encoding' is 'false'\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - The default configuration value for 'enable_name_mapping' is 'false'\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - The default configuration value for 'persistence_poilicy.max_records' is '-1'\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - The default configuration value for 'persistence_poilicy.expiration_time' is '-1'\n[CI/Unit Tests]   | [NGSISink.configure] -----------------------------------------  OK  - The default configuration value for 'persistence_poilicy.checking_time' is '3600000'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------------- When data model is by service path, a notification is successfully accumulated\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Notification successfully accumulated\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated events is 1\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated destination is 'vehicles_/4wheels'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's service is 'vehicles'\n[CI/Unit Tests]   | [NGSISink.Accumulator.accumulate] ----------------------------  OK  - Accumulated event's service path is '/4wheels'\n[CI/Unit Tests]   | Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.074 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSIElasticsearchSinkTest\n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=servicepath, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=servicepath, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=servicepath, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=servicepath, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=SERVICEPATH, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=servicepath, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=servicepath, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=servicepath, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=servicepath, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=servicepath, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=servicepath, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=servicepath, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=servicepath, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=SERVICEPATH, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=servicepath, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=servicepath, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=servicepath, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=servicepath, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=PREFIX, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=servicepath, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=servicepath, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=servicepath, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=servicepath, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=SERVICEPATH, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=servicepath, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=servicepath, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=servicepath, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=servicepath, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=-prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=servicepath, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=servicepath, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=servicepath, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=servicepath, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=SERVICEPATH, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=servicepath, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=servicepath, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=servicepath, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=servicepath, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=SERVICE, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=SERVICEPATH, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=ENTITYID, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=ENTITYTYPE \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testIndexNameWithReplacedChar] - prefix=_prefix, service=service/\\*?\"<>| ,#:, servicepath=servicepath/\\*?\"<>| ,#:, entityid=entityid/\\*?\"<>| ,#:, entitytype=entitytype/\\*?\"<>| ,#: \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneAttributeColumn] - castValue=true, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoNullAttributesColumn] - castValue=true, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithThreeAttributesWithMetadataColumn] - castValue=true, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoAttributesIgnoreEmptyRow] - castValue=true, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoNullAttributesRow] - castValue=true, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneNullAttributeRow] - castValue=true, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneAttributeIgnoreWhiteSpacesColumn] - castValue=true, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneAttributeColumn] - castValue=true, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneAttributeRow] - castValue=true, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoAttributesWithEmptyColumn] - castValue=true, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneNullAttributeIgnoreWhiteSpacesRow] - castValue=true, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoNullAttributesIgnoreWhiteSpacesColumn] - castValue=true, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithThreeAttributesWithMetadataRow] - castValue=true, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithoutData] - castValue=true, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoNullAttributesIgnoreWhiteSpacesRow] - castValue=true, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoAttributesWithEmptyRow] - castValue=true, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoAttributesIgnoreEmptyColumn] - castValue=true, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneAttributeColumn] - castValue=true, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoNullAttributesColumn] - castValue=true, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithThreeAttributesWithMetadataColumn] - castValue=true, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoAttributesIgnoreEmptyRow] - castValue=true, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoNullAttributesRow] - castValue=true, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneNullAttributeRow] - castValue=true, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneAttributeIgnoreWhiteSpacesColumn] - castValue=true, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneAttributeColumn] - castValue=true, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneAttributeRow] - castValue=true, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoAttributesWithEmptyColumn] - castValue=true, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneNullAttributeIgnoreWhiteSpacesRow] - castValue=true, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoNullAttributesIgnoreWhiteSpacesColumn] - castValue=true, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithThreeAttributesWithMetadataRow] - castValue=true, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithoutData] - castValue=true, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoNullAttributesIgnoreWhiteSpacesRow] - castValue=true, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoAttributesWithEmptyRow] - castValue=true, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoAttributesIgnoreEmptyColumn] - castValue=true, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneAttributeColumn] - castValue=false, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoNullAttributesColumn] - castValue=false, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithThreeAttributesWithMetadataColumn] - castValue=false, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoAttributesIgnoreEmptyRow] - castValue=false, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoNullAttributesRow] - castValue=false, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneNullAttributeRow] - castValue=false, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneAttributeIgnoreWhiteSpacesColumn] - castValue=false, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneAttributeColumn] - castValue=false, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneAttributeRow] - castValue=false, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoAttributesWithEmptyColumn] - castValue=false, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneNullAttributeIgnoreWhiteSpacesRow] - castValue=false, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoNullAttributesIgnoreWhiteSpacesColumn] - castValue=false, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithThreeAttributesWithMetadataRow] - castValue=false, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithoutData] - castValue=false, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoNullAttributesIgnoreWhiteSpacesRow] - castValue=false, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoAttributesWithEmptyRow] - castValue=false, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoAttributesIgnoreEmptyColumn] - castValue=false, timezone=UTC \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneAttributeColumn] - castValue=false, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoNullAttributesColumn] - castValue=false, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithThreeAttributesWithMetadataColumn] - castValue=false, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoAttributesIgnoreEmptyRow] - castValue=false, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoNullAttributesRow] - castValue=false, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneNullAttributeRow] - castValue=false, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneAttributeIgnoreWhiteSpacesColumn] - castValue=false, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneAttributeColumn] - castValue=false, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneAttributeRow] - castValue=false, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoAttributesWithEmptyColumn] - castValue=false, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithOneNullAttributeIgnoreWhiteSpacesRow] - castValue=false, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoNullAttributesIgnoreWhiteSpacesColumn] - castValue=false, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithThreeAttributesWithMetadataRow] - castValue=false, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithoutData] - castValue=false, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoNullAttributesIgnoreWhiteSpacesRow] - castValue=false, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoAttributesWithEmptyRow] - castValue=false, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testPersistBatchWithTwoAttributesIgnoreEmptyColumn] - castValue=false, timezone=Asia/Tokyo \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testStartAndStopInternal] - cacheFlashIntervalSec = 1 \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testStartAndStopInternal] - cacheFlashIntervalSec = 0 \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testConfigure] - fixture=elasticsearchHost=(value=null, expected=localhost), elasticsearchPort=(value=null, expected=9200), ssl=(value=null, expected=false), indexPrefix=(value=null, expected=cygnus), mappingType=(value=null, expected=cygnus_type), backendMaxConns=(value=null, expected=500), backendMaxConnsPerRoute=(value=null, expected=100), ignoreWhiteSpaces=(value=null, expected=true), rowAttrPersistence=(value=null, expected=true), timezone=(value=null, expected=UTC), castValue=(value=null, expected=false), cacheFlashIntervalSec=(value=null, expected=0), charset=(value=null, expected=UTF-8), invalidConfiguration=false \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testConfigure] - fixture=elasticsearchHost=(value=test.example.com, expected=test.example.com), elasticsearchPort=(value=1234, expected=1234), ssl=(value=true, expected=true), indexPrefix=(value=testIndex, expected=testIndex), mappingType=(value=testType, expected=testType), backendMaxConns=(value=2147483647, expected=2147483647), backendMaxConnsPerRoute=(value=-2147483648, expected=-2147483648), ignoreWhiteSpaces=(value=false, expected=false), rowAttrPersistence=(value=column, expected=false), timezone=(value=Asia/Tokyo, expected=Asia/Tokyo), castValue=(value=true, expected=true), cacheFlashIntervalSec=(value=30, expected=30), charset=(value=US-ASCII, expected=US-ASCII), invalidConfiguration=false \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testConfigure] - fixture=elasticsearchHost=(value=null, expected=localhost), elasticsearchPort=(value=null, expected=9200), ssl=(value=false, expected=false), indexPrefix=(value=null, expected=cygnus), mappingType=(value=null, expected=cygnus_type), backendMaxConns=(value=500, expected=500), backendMaxConnsPerRoute=(value=100, expected=100), ignoreWhiteSpaces=(value=true, expected=true), rowAttrPersistence=(value=row, expected=true), timezone=(value=null, expected=UTC), castValue=(value=false, expected=false), cacheFlashIntervalSec=(value=0, expected=0), charset=(value=null, expected=UTF-8), invalidConfiguration=false \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testConfigure] - fixture=elasticsearchHost=(value=null, expected=localhost), elasticsearchPort=(value=-1, expected=-1), ssl=(value=null, expected=false), indexPrefix=(value=null, expected=cygnus), mappingType=(value=null, expected=cygnus_type), backendMaxConns=(value=null, expected=500), backendMaxConnsPerRoute=(value=null, expected=100), ignoreWhiteSpaces=(value=null, expected=true), rowAttrPersistence=(value=null, expected=true), timezone=(value=null, expected=UTC), castValue=(value=null, expected=false), cacheFlashIntervalSec=(value=null, expected=0), charset=(value=null, expected=UTF-8), invalidConfiguration=true \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testConfigure] - fixture=elasticsearchHost=(value=null, expected=localhost), elasticsearchPort=(value=65536, expected=65536), ssl=(value=null, expected=false), indexPrefix=(value=null, expected=cygnus), mappingType=(value=null, expected=cygnus_type), backendMaxConns=(value=null, expected=500), backendMaxConnsPerRoute=(value=null, expected=100), ignoreWhiteSpaces=(value=null, expected=true), rowAttrPersistence=(value=null, expected=true), timezone=(value=null, expected=UTC), castValue=(value=null, expected=false), cacheFlashIntervalSec=(value=null, expected=0), charset=(value=null, expected=UTF-8), invalidConfiguration=true \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testConfigure] - fixture=elasticsearchHost=(value=null, expected=localhost), elasticsearchPort=(value=1.5, expected=1.5), ssl=(value=null, expected=false), indexPrefix=(value=null, expected=cygnus), mappingType=(value=null, expected=cygnus_type), backendMaxConns=(value=null, expected=500), backendMaxConnsPerRoute=(value=null, expected=100), ignoreWhiteSpaces=(value=null, expected=true), rowAttrPersistence=(value=null, expected=true), timezone=(value=null, expected=UTC), castValue=(value=null, expected=false), cacheFlashIntervalSec=(value=null, expected=0), charset=(value=null, expected=UTF-8), invalidConfiguration=true \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testConfigure] - fixture=elasticsearchHost=(value=null, expected=localhost), elasticsearchPort=(value=null, expected=9200), ssl=(value=invalid, expected=false), indexPrefix=(value=null, expected=cygnus), mappingType=(value=null, expected=cygnus_type), backendMaxConns=(value=null, expected=500), backendMaxConnsPerRoute=(value=null, expected=100), ignoreWhiteSpaces=(value=null, expected=true), rowAttrPersistence=(value=null, expected=true), timezone=(value=null, expected=UTC), castValue=(value=null, expected=false), cacheFlashIntervalSec=(value=null, expected=0), charset=(value=null, expected=UTF-8), invalidConfiguration=true \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testConfigure] - fixture=elasticsearchHost=(value=null, expected=localhost), elasticsearchPort=(value=null, expected=9200), ssl=(value=null, expected=false), indexPrefix=(value=null, expected=cygnus), mappingType=(value=null, expected=cygnus_type), backendMaxConns=(value=1.5, expected=0), backendMaxConnsPerRoute=(value=null, expected=0), ignoreWhiteSpaces=(value=null, expected=false), rowAttrPersistence=(value=null, expected=false), timezone=(value=null, expected=null), castValue=(value=null, expected=false), cacheFlashIntervalSec=(value=null, expected=0), charset=(value=null, expected=null), invalidConfiguration=false \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testConfigure] - fixture=elasticsearchHost=(value=null, expected=localhost), elasticsearchPort=(value=null, expected=9200), ssl=(value=null, expected=false), indexPrefix=(value=null, expected=cygnus), mappingType=(value=null, expected=cygnus_type), backendMaxConns=(value=2147483647, expected=2147483647), backendMaxConnsPerRoute=(value=2147483648, expected=0), ignoreWhiteSpaces=(value=null, expected=false), rowAttrPersistence=(value=null, expected=false), timezone=(value=null, expected=null), castValue=(value=null, expected=false), cacheFlashIntervalSec=(value=null, expected=0), charset=(value=null, expected=null), invalidConfiguration=false \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testConfigure] - fixture=elasticsearchHost=(value=null, expected=localhost), elasticsearchPort=(value=null, expected=9200), ssl=(value=null, expected=false), indexPrefix=(value=null, expected=cygnus), mappingType=(value=null, expected=cygnus_type), backendMaxConns=(value=null, expected=500), backendMaxConnsPerRoute=(value=null, expected=100), ignoreWhiteSpaces=(value=invalid, expected=false), rowAttrPersistence=(value=null, expected=true), timezone=(value=null, expected=UTC), castValue=(value=null, expected=false), cacheFlashIntervalSec=(value=null, expected=0), charset=(value=null, expected=UTF-8), invalidConfiguration=true \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testConfigure] - fixture=elasticsearchHost=(value=null, expected=localhost), elasticsearchPort=(value=null, expected=9200), ssl=(value=null, expected=false), indexPrefix=(value=null, expected=cygnus), mappingType=(value=null, expected=cygnus_type), backendMaxConns=(value=null, expected=500), backendMaxConnsPerRoute=(value=null, expected=100), ignoreWhiteSpaces=(value=null, expected=true), rowAttrPersistence=(value=true, expected=false), timezone=(value=null, expected=UTC), castValue=(value=null, expected=false), cacheFlashIntervalSec=(value=null, expected=0), charset=(value=null, expected=UTF-8), invalidConfiguration=true \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testConfigure] - fixture=elasticsearchHost=(value=null, expected=localhost), elasticsearchPort=(value=null, expected=9200), ssl=(value=null, expected=false), indexPrefix=(value=null, expected=cygnus), mappingType=(value=null, expected=cygnus_type), backendMaxConns=(value=null, expected=500), backendMaxConnsPerRoute=(value=null, expected=100), ignoreWhiteSpaces=(value=null, expected=true), rowAttrPersistence=(value=null, expected=true), timezone=(value=null, expected=UTC), castValue=(value=invalid, expected=false), cacheFlashIntervalSec=(value=null, expected=0), charset=(value=null, expected=UTF-8), invalidConfiguration=true \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testConfigure] - fixture=elasticsearchHost=(value=null, expected=localhost), elasticsearchPort=(value=null, expected=9200), ssl=(value=null, expected=false), indexPrefix=(value=null, expected=cygnus), mappingType=(value=null, expected=cygnus_type), backendMaxConns=(value=null, expected=500), backendMaxConnsPerRoute=(value=-2147483648, expected=-2147483648), ignoreWhiteSpaces=(value=null, expected=true), rowAttrPersistence=(value=null, expected=true), timezone=(value=null, expected=UTC), castValue=(value=null, expected=false), cacheFlashIntervalSec=(value=-2147483649, expected=0), charset=(value=null, expected=null), invalidConfiguration=false \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testConfigure] - fixture=elasticsearchHost=(value=null, expected=localhost), elasticsearchPort=(value=null, expected=9200), ssl=(value=null, expected=false), indexPrefix=(value=null, expected=cygnus), mappingType=(value=null, expected=cygnus_type), backendMaxConns=(value=null, expected=500), backendMaxConnsPerRoute=(value=null, expected=100), ignoreWhiteSpaces=(value=null, expected=true), rowAttrPersistence=(value=null, expected=true), timezone=(value=null, expected=UTC), castValue=(value=null, expected=false), cacheFlashIntervalSec=(value=, expected=0), charset=(value=null, expected=null), invalidConfiguration=false \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testConfigure] - fixture=elasticsearchHost=(value=null, expected=localhost), elasticsearchPort=(value=null, expected=9200), ssl=(value=null, expected=false), indexPrefix=(value=null, expected=cygnus), mappingType=(value=null, expected=cygnus_type), backendMaxConns=(value=null, expected=500), backendMaxConnsPerRoute=(value=null, expected=100), ignoreWhiteSpaces=(value=null, expected=true), rowAttrPersistence=(value=null, expected=true), timezone=(value=null, expected=UTC), castValue=(value=null, expected=false), cacheFlashIntervalSec=(value=null, expected=0), charset=(value=, expected=), invalidConfiguration=false \n[CI/Unit Tests]   | [NGSIElasticsearchSinkTest.testConfigure] - fixture=elasticsearchHost=(value=null, expected=localhost), elasticsearchPort=(value=null, expected=9200), ssl=(value=null, expected=false), indexPrefix=(value=null, expected=cygnus), mappingType=(value=null, expected=cygnus_type), backendMaxConns=(value=null, expected=500), backendMaxConnsPerRoute=(value=null, expected=100), ignoreWhiteSpaces=(value=null, expected=true), rowAttrPersistence=(value=null, expected=true), timezone=(value=null, expected=UTC), castValue=(value=null, expected=false), cacheFlashIntervalSec=(value=null, expected=0), charset=(value=invalid, expected=invalid), invalidConfiguration=false \n[CI/Unit Tests]   | Tests run: 410, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.098 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSIMongoBaseSinkTest\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildCollectionName] ----------------------------- When data model is by entity, a collection name length greater than 113 characters is detected\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildCollectionName] ----------------------  OK  - A collection name length greater than 113 characters has been detected\n[CI/Unit Tests]   | [NGSIMongoBaseSink.configure] --------------------------------------- Configured 'collection_prefix' is encoded when having forbidden characters\n[CI/Unit Tests]   | [NGSIMongoBaseSink.configure] --------------------------------  OK  - 'collection_prefix=this\\is/a$prefix.with-forbidden,chars:-.' correctly encoded as 'this\\isx002fax0024prefix.with-forbidden,chars:-.'\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildCollectionName] ----------------------------- When / service-path is notified/defaulted and data_model=dm-by-attribute, the MongoDB collections name is the concatenation of <prefix>, <service-path>, <entityId>, <entityType> and <attrName>\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildCollectionName] ----------------------  OK  - 'sth_x002fxffffsomeIdxffffsomeTypexffffsomeName' was created as collection name\n[CI/Unit Tests]   | [NGSIMongoBaseSink.configure] --------------------------------------- Configured 'collection_prefix' cannot be 'system.'\n[CI/Unit Tests]   | [NGSIMongoBaseSink.configure] --------------------------------  OK  - 'system.' value detected for 'collection_prefix'\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildCollectionName] ----------------------------- When data model is by service path, a collection name length greater than 113 characters is detected\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildCollectionName] ----------------------  OK  - A collection name length greater than 113 characters has been detected\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildCollectionName] ----------------------------- When / service-path is notified/defaulted and data_model=dm-by-entity, the MongoDBcollections name is the concatenation of the <prefix>, <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildCollectionName] ----------------------  OK  - 'sth_x002fxffffsomeIdxffffsomeType' was created as collection name\n[CI/Unit Tests]   | [NGSIMongoBaseSink.configure] --------------------------------------- Configured 'collection_prefix' is encoded when having forbidden characters\n[CI/Unit Tests]   | [NGSIMongoBaseSink.configure] --------------------------------  OK  - 'collection_prefix=this\\is/a$prefix.with-forbidden,chars:-.' correctly encoded as 'this\\is/a_prefix.with-forbidden,chars:-.'\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildCollectionName] ----------------------------- When / service-path is notified/defaulted and data_model=dm-by-service-path, the MongoDB collection name is the concatenation of <prefix> and <service-path>\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildCollectionName] ----------------------  OK  - 'sth_x002f' was created as collection name\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildDbName] ------------------------------------- A database name length greater than 113 characters is detected\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildDbName] ------------------------------  OK  - A database name length greater than 113 characters has been detected\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildCollectionName] ----------------------------- When / service-path is notified/defaulted and data_model=dm-by-attribute, the MongoDB collections name is the concatenation of <prefix>, <service-path>, <entityId>, <entityType> and <attrName>\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildCollectionName] ----------------------  OK  - 'sth_/_someId_someType_someName' was created as collection name\n[CI/Unit Tests]   | [NGSIMongoBaseSink.configure] --------------------------------------- Configured 'db_prefix' is encoded when having forbidden characters\n[CI/Unit Tests]   | [NGSIMongoBaseSink.configure] --------------------------------  OK  - 'db_prefix=this\\is/a$prefix.with forbidden\"chars:-,' correctly encoded as 'thisx005cisx002fax0024prefixx002ewith forbiddenx0022chars:-,'\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildCollectionName] ----------------------------- When / service-path is notified/defaulted and data_model=dm-by-entity, the MongoDBcollections name is the concatenation of the <prefix>, <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildCollectionName] ----------------------  OK  - 'sth_/_someId_someType' was created as collection name\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildCollectionName] ----------------------------- When / service-path is notified/defaulted and data_model=dm-by-service-path, the MongoDB collection name is the concatenation of <prefix> and <service-path>\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildCollectionName] ----------------------  OK  - 'sth_/' was created as collection name\n[CI/Unit Tests]   | [NGSIMongoBaseSink.configure] --------------------------------------- Configured 'db_prefix' is encoded when having forbidden characters\n[CI/Unit Tests]   | [NGSIMongoBaseSink.configure] --------------------------------  OK  - 'db_prefix=this\\is/a$prefix.with forbidden\"chars:-,' correctly encoded as 'this_is_a_prefix_with_forbidden_chars:-,'\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildCollectionName] ----------------------------- When data model is by atribute, a collection name length greater than 113 characters is detected\n[CI/Unit Tests]   | [NGSIMongoBaseSink.buildCollectionName] ----------------------  OK  - A collection name length greater than 113 characters has been detected\n[CI/Unit Tests]   | Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSIDynamoDBSinkTest\n[CI/Unit Tests]   | [NGSIDynamoDBSink.configure] ---------------------------------------- When not configured, not mandatory parameters get default values\n[CI/Unit Tests]   | [NGSIDynamoDBSink.configure] ---------------------------------  OK  - 'attr_persistence=row' configured by default\n[CI/Unit Tests]   | [NGSIDynamoDBSink.configure] ---------------------------------  OK  - 'batch_size=1' configured by default\n[CI/Unit Tests]   | [NGSIDynamoDBSink.configure] ---------------------------------  OK  - 'batch_timeout=30' configured by default\n[CI/Unit Tests]   | [NGSIDynamoDBSink.configure] ---------------------------------  OK  - 'batch_ttl=30' configured by default\n[CI/Unit Tests]   | [NGSIDynamoDBSink.configure] ---------------------------------  OK  - 'data_model=dm-by-entity' configured by default\n[CI/Unit Tests]   | [NGSIDynamoDBSink.configure] ---------------------------------  OK  - 'enable_encoding=true' configured by default\n[CI/Unit Tests]   | [NGSIDynamoDBSink.configure] ---------------------------------  OK  - 'enable_lowercase=false' configured by default\n[CI/Unit Tests]   | [NGSIDynamoDBSink.configure] ---------------------------------  OK  - 'region=eu-west-1' configured by default\n[CI/Unit Tests]   | Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSIOracleSQLSinkTest\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------------- When a root service-path is notified/defaulted and data_model is 'dm-by-service-path' the OracleSQL table name is the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------  OK  - 'x002f' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------------- When a non root service-path is notified/defaulted and data_model is 'dm-by-service-path' the OracleSQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------  OK  - 'x002fsomepathxffffidxfffftype' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.configure] --------------------------------------- attr_persistence can only be 'row' or 'column'\n[CI/Unit Tests]   | [NGSIOracleSQLSink.configure] --------------------------------  OK  - 'attr_persistence=fila' was detected\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------------- When a non root service-path is notified/defaulted and data_model is 'dm-by-service-path' the OracleSQL table name is the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------  OK  - 'somePath' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------------- When a non root service-path is notified/defaulted and data_model is 'dm-by-entity-type' the OracleSQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------  OK  - 'somePath_someType' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------------- When a root service-path is notified/defaulted and data_model is 'dm-by-service-path' the OracleSQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------  OK  - 'x002fxffffsomeidxffffsometype' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------------- When a root service-path is notified/defaulted and data_model is 'dm-by-service-path' the OracleSQL table name cannot be built\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------  OK  - The root service path was detected as not valid\n[CI/Unit Tests]   | [NGSIOracleSQLSink.configure] --------------------------------------- oracleOptions is null when oracle_options is not configured\n[CI/Unit Tests]   | [NGSIOracleSQLSink.configure] --------------------------------  OK  - oracleOptions is null when it is not configured\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------------- When a non root service-path is notified/defaulted and data_model is 'dm-by-service-path' the OracleSQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------  OK  - 'somePath_someId_someType' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.testBuildDBNameNewEncodingDatabaseDataModel] -------- The DB name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIOracleSQLSink.testBuildDBNameNewEncodingDatabaseDataModel] -  OK  - 'somex0053ervice' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.testBuildDBNameNewEncodingEntityTypeDatabaseDataModel] -------- The DB name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIOracleSQLSink.testBuildDBNameNewEncodingEntityTypeDatabaseDataModel] -  OK  - 'somex0053ervice' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------------- When a root service-path is notified/defaulted and data_model is 'dm-by-service-path' the OracleSQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------  OK  - 'someId_someType' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.testNativeTypesColumnBatch] ---------------  OK  - NativeTypesOK\n[CI/Unit Tests]   | [NGSIOracleSQLSink.testBuildDBNameNewEncoding] ---------------------- The DB name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIOracleSQLSink.testBuildDBNameNewEncoding] ---------------  OK  - 'xe' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.configure] --------------------------------------- enable_lowercase can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSIOracleSQLSink.configure] --------------------------------  OK  - 'enable_lowercase=falso' was detected\n[CI/Unit Tests]   | [NGSIOracleSQLSink.testBuildSchemaNameNewEncoding] ------------------ The schema name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIOracleSQLSink.testBuildSchemaNameNewEncoding] -----------  OK  - 'somex0053ervice' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.configure] --------------------------------------- enable_encoding can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSIOracleSQLSink.configure] --------------------------------  OK  - 'enable_encoding=falso' was detected\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildSchemaName] --------------------------------- A schema name length greater than 30 characters is detected\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildSchemaName] --------------------------  OK  - A schema name length greater than 30 characters has been detected\n[CI/Unit Tests]   | [NGSIOracleSQLSink.configure] --------------------------------------- oracleOptions has value when oracle_options is configured\n[CI/Unit Tests]   | [NGSIOracleSQLSink.configure] --------------------------------  OK  - oracleOptions has value when it is configured\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------------- When data model is by atribute, a table name length greater than 30 characters is detected\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------  OK  - A table name length greater than 30 characters has been detected\n[CI/Unit Tests]   | [NGSIOracleSQLSink.testBuildDBNameOldEncoding] ---------------------- The db name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIOracleSQLSink.testBuildDBNameOldEncoding] ---------------  OK  - 'xe' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.testBuildDBNameOldEncodingEntityTypeDatabaseDataModel] -------- The db name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIOracleSQLSink.testBuildDBNameOldEncodingEntityTypeDatabaseDataModel] -  OK  - 'someService' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.testBuildDBNameOldEncodingDatabaseDataModel] -------- The db name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIOracleSQLSink.testBuildDBNameOldEncodingDatabaseDataModel] -  OK  - 'someService' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.testBuildSchemaNameOldEncoding] ------------------ The schema name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIOracleSQLSink.testBuildSchemaNameOldEncoding] -----------  OK  - 'someService' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------------- When data model is by service path, a table name length greater than 30 characters is detected\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------  OK  - A table name length greater than 30 characters has been detected\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------------- When data model is by entity, a table name length greater than 30 characters is detected\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------  OK  - A table name length greater than 30 characters has been detected\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------------- When a non root service-path is notified/defaulted and data_model is 'dm-by-service-path' the OracleSQL table name is the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------  OK  - 'x002fsomex0050ath' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------------- When a root service-path is notified/defaulted and data_model is 'dm-by-entity-type' and no encoding the OracleSQL table name is the concatenation of <service-path>, <entityType>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------  OK  - 'someType' is equals to someType\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------------- When a non root service-path is notified/defaulted and data_model is 'dm-by-entity-type' the OracleSQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------  OK  - 'x002fsomepathxffffsometype' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------------- When a root service-path is notified/defaulted and data_model is 'dm-by-entity-type' the OracleSQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------  OK  - 'someType' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------------- When data model is by entity, a table name length greater than 30 characters is detected\n[CI/Unit Tests]   | [NGSIOracleSQLSink.buildTableName] ---------------------------  OK  - A table name length greater than 30 characters has been detected\n[CI/Unit Tests]   | Tests run: 31, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSIMongoSinkTest\n[CI/Unit Tests]   | [NGSIMongoSinkTest.testNativeTypeColumnBatch: [Document{{someNumber=2, someNumber_md=[], somneBoolean=true, somneBoolean_md=[], someDate=2016-09-21T01:23:00.00Z, someDate_md=[], someGeoJson={\"type\": \"Point\",\"coordinates\": [-0.036177,39.986159]}, someGeoJson_md=[], someJson={\"String\": \"string\"}, someJson_md=[], someString=foo, someString_md=[], someString2=, someString2_md=[], recvTime=Wed Apr 20 07:19:55 GMT 2016}}, Document{{someName1=-3.7167, 40.3833, someName1_md=[{\"name\": \"TimeInstant\", \"type\": \"recvTime\", \"value\": \"2019-09-09T09:09:09.999Z\"}], someName2=someValue2, someName2_md=[], recvTime=Wed Apr 20 07:19:55 GMT 2016}}]\n[CI/Unit Tests]   | [NGSIMongoSinkTest.testNativeTypeRowBatch: [Document{{attrName=someNumber, attrType=number, attrValue=2, recvTime=Wed Apr 20 07:19:55 GMT 2016}}, Document{{attrName=somneBoolean, attrType=Boolean, attrValue=true, recvTime=Wed Apr 20 07:19:55 GMT 2016}}, Document{{attrName=someDate, attrType=DateTime, attrValue=2016-09-21T01:23:00.00Z, recvTime=Wed Apr 20 07:19:55 GMT 2016}}, Document{{attrName=someGeoJson, attrType=geo:json, attrValue={\"type\": \"Point\",\"coordinates\": [-0.036177,39.986159]}, recvTime=Wed Apr 20 07:19:55 GMT 2016}}, Document{{attrName=someJson, attrType=json, attrValue={\"String\": \"string\"}, recvTime=Wed Apr 20 07:19:55 GMT 2016}}, Document{{attrName=someString, attrType=string, attrValue=foo, recvTime=Wed Apr 20 07:19:55 GMT 2016}}, Document{{attrName=someString2, attrType=string, attrValue=, recvTime=Wed Apr 20 07:19:55 GMT 2016}}, Document{{attrName=someName1, attrType=someType1, attrValue=-3.7167, 40.3833, recvTime=Mon Sep 09 09:09:09 GMT 2019}}, Document{{attrName=someName2, attrType=someType2, attrValue=someValue2, recvTime=Wed Apr 20 07:19:55 GMT 2016}}]\n[CI/Unit Tests]   | Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.055 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSIBatchTest\n[CI/Unit Tests]   | [NGSIBatch.addEvent] ------------------------------------------------ An event is added to an already existent subbatch\n[CI/Unit Tests]   | [NGSIBatch.addEvent] -----------------------------------------  OK  - The batch has subbatches\n[CI/Unit Tests]   | [NGSIBatch.addEvent] -----------------------------------------  OK  - The second event within the only subbatch is the secondly added one\n[CI/Unit Tests]   | [NGSIBatch.addEvent] ------------------------------------------------ An event is added to a not existent subbatch\n[CI/Unit Tests]   | [NGSIBatch.addEvent] -----------------------------------------  OK  - The batch has subbatches\n[CI/Unit Tests]   | [NGSIBatch.addEvent] -----------------------------------------  OK  - The event within the only subbatch is the added one\n[CI/Unit Tests]   | Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSIPostgreSQLSinkTest\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When a root service-path is notified/defaulted and data_model is 'dm-by-service-path' the PostgreSQL table name is the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - 'x002f' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When a non root service-path is notified/defaulted and data_model is 'dm-by-service-path' the PostgreSQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - 'x002fsomex0050athxffffsomex0049dxffffsomex0054ype' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When a non root service-path is notified/defaulted and data_model is 'dm-by-fixed-entity-type' the PostgreSQL table name is the encoding of <entityType>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - 'someType' is equals to the encoding of <entityType>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.configure] -------------------------------------- attr_persistence can only be 'row' or 'column'\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.configure] -------------------------------  OK  - 'attr_persistence=fila' was detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.configure] -------------------------------------- cache can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.configure] -------------------------------  OK  - 'enable_cache=falso' was detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When a non root service-path is notified/defaulted and data_model is 'dm-by-service-path' the PostgreSQL table name is the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - 'somePath' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When a non root service-path is notified/defaulted and data_model is 'dm-by-entity-type' the PostgreSQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - 'somePath_someType' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When a root service-path is notified/defaulted and data_model is 'dm-by-service-path' the PostgreSQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - 'x002fxffffsomex0049dxffffsomex0054ype' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When a root service-path is notified/defaulted and data_model is 'dm-by-service-path' the PostgreSQL table name cannot be built\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - The root service path was detected as not valid\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.configure] -------------------------------------- postgresqlOptions is null when postgresql_options is not configured\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.configure] -------------------------------  OK  - postgresqlOptions is null when it is not configured\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When a non root service-path is notified/defaulted and data_model is 'dm-by-service-path' the PostgreSQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - 'somePath_someId_someType' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.testBuildDBNameNewEncodingDatabaseDataModel] -------- The DB name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.testBuildDBNameNewEncodingDatabaseDataModel] -  OK  - 'somex0053ervice' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.testBuildDBNameNewEncodingEntityTypeDatabaseDataModel] -------- The DB name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.testBuildDBNameNewEncodingEntityTypeDatabaseDataModel] -  OK  - 'somex0053ervice' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When a root service-path is notified/defaulted and data_model is 'dm-by-service-path' the PostgreSQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - 'someId_someType' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIMySQKSink.testNativeTypesColumnBatch] -------------------  OK  - NativeTypesOK\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.testBuildDBNameNewEncoding] --------------------- The DB name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.testBuildDBNameNewEncoding] --------------  OK  - 'postgres' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.configure] -------------------------------------- enable_lowercase can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.configure] -------------------------------  OK  - 'enable_lowercase=falso' was detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.testBuildSchemaNameNewEncoding] ----------------- The schema name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.testBuildSchemaNameNewEncoding] ----------  OK  - 'somex0053ervice' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.configure] -------------------------------------- enable_encoding can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.configure] -------------------------------  OK  - 'enable_encoding=falso' was detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildSchemaName] -------------------------------- A schema name length greater than 63 characters is detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildSchemaName] -------------------------  OK  - A schema name length greater than 63 characters has been detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When a root service-path is notified/defaulted and data_model is 'dm-by-entity-type' the PostgreSQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - 'x002fxffffsomeType' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.configure] -------------------------------------- postgresqlOptions has value when postgresql_options is configured\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.configure] -------------------------------  OK  - postgresqlOptions has value when it is configured\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When data model is by atribute, a table name length greater than 63 characters is detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - A table name length greater than 63 characters has been detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.testBuildDBNameOldEncoding] --------------------- The db name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.testBuildDBNameOldEncoding] --------------  OK  - 'postgres' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.testBuildDBNameOldEncodingEntityTypeDatabaseDataModel] -------- The db name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.testBuildDBNameOldEncodingEntityTypeDatabaseDataModel] -  OK  - 'someService' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.testBuildDBNameOldEncodingDatabaseDataModel] -------- The db name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.testBuildDBNameOldEncodingDatabaseDataModel] -  OK  - 'someService' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.testBuildSchemaNameOldEncoding] ----------------- The schema name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.testBuildSchemaNameOldEncoding] ----------  OK  - 'someService' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When data model is by service path, a table name length greater than 63 characters is detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - A table name length greater than 63 characters has been detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When data model is by entity, a table name length greater than 63 characters is detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - A table name length greater than 63 characters has been detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When a non root service-path is notified/defaulted and data_model is 'dm-by-fixed-entity-type' the PostgreSQL table name is the encoding of <entityType>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - 'somex0054ype' is equals to the encoding of <entityType>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When a non root service-path is notified/defaulted and data_model is 'dm-by-service-path' the PostgreSQL table name is the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - 'x002fsomex0050ath' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When a non root service-path is notified/defaulted and data_model is 'dm-by-entity-type' the PostgreSQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - 'x002fsomePathxffffsomeType' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When a root service-path is notified/defaulted and data_model is 'dm-by-entity-type' the PostgreSQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - 'someType' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When data model is by entity, a table name length greater than 63 characters is detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - A table name length greater than 63 characters has been detected\n[CI/Unit Tests]   | Tests run: 34, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSIOrionBaseSinkTest\n[CI/Unit Tests]   | Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSICKANSinkTest\n[CI/Unit Tests]   | [NGSICKANSink.buildResName] ----------------------------------------- When encoding, the CKAN resource name is the encoding of the concatenation of the notified <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSICKANSink.buildResName] ----------------------------------  OK  - 'somex0049dxffffsomex0054ype' is equals to the encoding of <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSICKANSink.buildOrgName] ----------------------------------------- When confOrganization, the org name is equals to subservice/fiwareServicePath\n[CI/Unit Tests]   | [NGSICKANSink.buildOrgName] ----------------------------------  OK  - 'someSubService' is equals to the subservice\n[CI/Unit Tests]   | [NGSICKANSink.buildPkgName] ----------------------------------------- When no encoding and when using a notified/defaulted root service path, the pkg name is equals to the encoding of the concatenation of the notified/defaulted service and the notified/defaulted service path\n[CI/Unit Tests]   | [NGSICKANSink.buildPkgName] ----------------------------------  OK  - 'someservice' is equals to the encoding of <service>xffff<servicePath>\n[CI/Unit Tests]   | [NGSICKANSink.buildResName] ----------------------------------------- A resource name length greater than 100 characters is detected\n[CI/Unit Tests]   | [NGSICKANSink.buildResName] ----------------------------------  OK  - A resource name length greater than 100 characters has been detected\n[CI/Unit Tests]   | [NGSICKANSink.buildOrgName] ----------------------------------------- An organization name length greater than 100 characters is detected\n[CI/Unit Tests]   | [NGSICKANSink.buildOrgName] ----------------------------------  OK  - An organization name length greater than 100 characters has been detected\n[CI/Unit Tests]   | [NGSICKANSink.buildResName] ----------------------------------------- When no encoding, the CKAN resource name is the encoding of the concatenation of the notified <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSICKANSink.buildResName] ----------------------------------  OK  - 'someid_sometype' is equals to the encoding of <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSICKANSink.buildOrgName] ----------------------------------------- When no encoding, the org name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSICKANSink.buildOrgName] ----------------------------------  OK  - 'someservice' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------------- attr_persistence can only be 'row' or 'column'\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'attr_persistence=fila' was detected\n[CI/Unit Tests]   | [NGSICKANSink.buildPkgName] ----------------------------------------- When confOrganization, the resourceName is equals to entityId\n[CI/Unit Tests]   | [NGSICKANSink.buildResName] ----------------------------------  OK  - 'entityId' is equals to the entityId\n[CI/Unit Tests]   | [NGSICKANSink.buildPkgName] ----------------------------------------- When encoding and when using a notified/defaulted non root service path, the pkg name is equals to the encoding of the concatenation of the notified/defaulted service and the notified/defaulted service path\n[CI/Unit Tests]   | [NGSICKANSink.buildPkgName] ----------------------------------  OK  - 'somex0053ervicexffffx002fsomex0053ervicex0050ath' is equals to the encoding of <service>xffff<servicePath>\n[CI/Unit Tests]   | [NGSICKANSink.buildPkgName] ----------------------------------------- When encoding and when using a notified/defaulted root service path, the pkg name is equals to the encoding of the concatenation of the notified/defaulted service and the notified/defaulted service path\n[CI/Unit Tests]   | [NGSICKANSink.buildPkgName] ----------------------------------  OK  - 'somex0053ervicexffffx002f' is equals to the encoding of <service>xffff<servicePath>\n[CI/Unit Tests]   | {\"entityId\":\"someId\",\"entityType\":\"someType\",\"fiwareServicePath\":\"somePath\",\"recvTime\":\"2016-04-20T07:19:55.801Z\",\"someNumber\":2,\"somneBoolean\":true,\"someDate\":\"2016-09-21T01:23:00.00Z\",\"someGeoJson\":\"{\\\"type\\\": \\\"Point\\\",\\\"coordinates\\\": [-0.036177,39.986159]}\",\"someJson\":\"{\\\"String\\\": \\\"string\\\"}\",\"someString\":\"foo\",\"someString2\":\"\"},{\"entityId\":\"someId\",\"entityType\":\"someType\",\"fiwareServicePath\":\"somePath\",\"recvTime\":\"2016-04-20T07:19:55.801Z\",\"someName1\":\"-3.7167, 40.3833\",\"someName1_md\":[{\"name\":\"location\",\"type\":\"string\",\"value\":\"WGS84\"}],\"someName2\":\"someValue2\"}\n[CI/Unit Tests]   | [NGSICKANSink.buildOrgName] ----------------------------------------- When encoding, the org name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSICKANSink.buildOrgName] ----------------------------------  OK  - 'somex0053ervice' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------------- enable_lowercase can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'enable_lowercase=falso' was detected\n[CI/Unit Tests]   | [NGSICKANSink.buildPkgName] ----------------------------------------- A resource name length greater than 100 characters is detected\n[CI/Unit Tests]   | [NGSICKANSink.buildPkgName] ----------------------------------  OK  - A package name length greater than 100 characters has been detected\n[CI/Unit Tests]   | [NGSICKANSink.buildPkgName] ----------------------------------------- When confOrganization, the pkgName is equals to entityId\n[CI/Unit Tests]   | [NGSICKANSink.buildPkgName] ----------------------------------  OK  - 'entityId' is equals to the entityId\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------------- enable_encoding can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'enable_encoding=falso' was detected\n[CI/Unit Tests]   | {\"recvTimeTs\":\"1461136795801\",\"recvTime\":\"2016-04-20T07:19:55.801Z\",\"fiwareServicePath\":\"somePath\",\"entityId\":\"someId\",\"entityType\":\"someType\",\"attrName\":\"someNumber\",\"attrType\":\"number\",\"attrValue\":2},{\"recvTimeTs\":\"1461136795801\",\"recvTime\":\"2016-04-20T07:19:55.801Z\",\"fiwareServicePath\":\"somePath\",\"entityId\":\"someId\",\"entityType\":\"someType\",\"attrName\":\"somneBoolean\",\"attrType\":\"Boolean\",\"attrValue\":true},{\"recvTimeTs\":\"1461136795801\",\"recvTime\":\"2016-04-20T07:19:55.801Z\",\"fiwareServicePath\":\"somePath\",\"entityId\":\"someId\",\"entityType\":\"someType\",\"attrName\":\"someDate\",\"attrType\":\"DateTime\",\"attrValue\":\"2016-09-21T01:23:00.00Z\"},{\"recvTimeTs\":\"1461136795801\",\"recvTime\":\"2016-04-20T07:19:55.801Z\",\"fiwareServicePath\":\"somePath\",\"entityId\":\"someId\",\"entityType\":\"someType\",\"attrName\":\"someGeoJson\",\"attrType\":\"geo:json\",\"attrValue\":\"{\\\"type\\\": \\\"Point\\\",\\\"coordinates\\\": [-0.036177,39.986159]}\"},{\"recvTimeTs\":\"1461136795801\",\"recvTime\":\"2016-04-20T07:19:55.801Z\",\"fiwareServicePath\":\"somePath\",\"entityId\":\"someId\",\"entityType\":\"someType\",\"attrName\":\"someJson\",\"attrType\":\"json\",\"attrValue\":\"{\\\"String\\\": \\\"string\\\"}\"},{\"recvTimeTs\":\"1461136795801\",\"recvTime\":\"2016-04-20T07:19:55.801Z\",\"fiwareServicePath\":\"somePath\",\"entityId\":\"someId\",\"entityType\":\"someType\",\"attrName\":\"someString\",\"attrType\":\"string\",\"attrValue\":\"foo\"},{\"recvTimeTs\":\"1461136795801\",\"recvTime\":\"2016-04-20T07:19:55.801Z\",\"fiwareServicePath\":\"somePath\",\"entityId\":\"someId\",\"entityType\":\"someType\",\"attrName\":\"someString2\",\"attrType\":\"string\",\"attrValue\":\"\"},{\"recvTimeTs\":\"1461136795801\",\"recvTime\":\"2016-04-20T07:19:55.801Z\",\"fiwareServicePath\":\"somePath\",\"entityId\":\"someId\",\"entityType\":\"someType\",\"attrName\":\"someName1\",\"attrType\":\"someType1\",\"attrValue\":\"-3.7167, 40.3833\",\"attrMd\":[{\"name\":\"location\",\"type\":\"string\",\"value\":\"WGS84\"}]},{\"recvTimeTs\":\"1461136795801\",\"recvTime\":\"2016-04-20T07:19:55.801Z\",\"fiwareServicePath\":\"somePath\",\"entityId\":\"someId\",\"entityType\":\"someType\",\"attrName\":\"someName2\",\"attrType\":\"someType2\",\"attrValue\":\"someValue2\"}\n[CI/Unit Tests]   | [NGSICKANSink.buildPkgName] ----------------------------------------- When no encoding and when using a notified/defaulted non root service path, the pkg name is equals to the encoding of the concatenation of the notified/defaulted service and the notified/defaulted service path\n[CI/Unit Tests]   | [NGSICKANSink.buildPkgName] ----------------------------------  OK  - 'someservice_someservicepath' is equals to the encoding of <service>xffff<servicePath>\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------------- Parameters gets the configured value\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'backend.max_conns=25' was configured\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'backend.max_conns_per_route=3' was configured\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'ckan_viewer=recline_view' was configured\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------------- When not configured, not mandatory parameters get default values\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'attr_persistence=row' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'api_key=nokey' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'backend.max_conns=500' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'backend.max_conns_per_route=100' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'batch_size=1' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'batch_timeout=30' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'batch_ttl=30' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'data_model=dm-by-entity' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'enable_encoding=false' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'enable_lowercase=true' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'ckan_host=localhost' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'ckan_port=80' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'ssl=false' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'ckan_viewer=recline_grid_view' configured by default\n[CI/Unit Tests]   | Tests run: 21, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSIMySQLSinkTest\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------------- When no encoding and when a non root service-path is notified/defaulted and data_model is 'dm-by-entity' the MySQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------  OK  - 'somePath_someId_someType' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------------- When encoding and when a root service-path is notified/defaulted and data_model is 'dm-by-service-path' the MySQL table name is the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------  OK  - 'x002f' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------------- When encoding and when a root service-path is notified/defaulted and data_model is 'dm-by-entity' the MySQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------  OK  - 'x002fxffffsomeIdxffffsomeType' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIMySQLSink.configure] ------------------------------------------- attr_persistence can only be 'row' or 'column'\n[CI/Unit Tests]   | [NGSIMySQLSink.configure] ------------------------------------  OK  - 'attr_persistence=fila' was detected\n[CI/Unit Tests]   | [NGSIMySQLSink.buildDBName] ----------------------------------------- When encoding, the DB name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIMySQLSink.buildDBName] ----------------------------------  OK  - 'someService' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------------- When no encoding and when a root service-path is notified/defaulted and data_model is 'dm-by-entity' the MySQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------  OK  - 'someId_someType' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------------- When no encoding and when a non root service-path is notified/defaulted and data_model is 'dm-by-fixed-entity-type' the MySQL table name is the encoding of <entityType>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------  OK  - 'someType' is equals to the encoding of <entityType>\n[CI/Unit Tests]   | [NGSIMySQLSink.configure] ------------------------------------------- mysqlOptions is null when mysql_options is not configured\n[CI/Unit Tests]   | [NGSIMySQLSink.configure] ------------------------------------  OK  - mysqlOptions is null when it is not configured\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------------- When encoding and when a non root service-path is notified/defaulted and data_model is 'dm-by-service-path' the MySQL table name is the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------  OK  - 'x002fsomePath' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------------- When encoding and when a root service-path is notified/defaulted and data_model is 'dm-by-entity-type' the MySQL table name is the encoding of the concatenation of <service-path>, and <entityType>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------  OK  - 'x002fxffffsomeType' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildDBName] ----------------------------------------- When no encoding, the DB name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIMySQLSink.buildDBName] ----------------------------------  OK  - 'someService' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIMySQKSink.testNativeTypesColumnBatch] -------------------  OK  - NativeTypesOK\n[CI/Unit Tests]   | [NGSIMySQLSink.buildDbName] ----------------------------------------- A database name length greater than 64 characters is detected\n[CI/Unit Tests]   | [NGSIMySQLSink.buildDbName] ----------------------------------  OK  - A database name length greater than 64 characters has been detected\n[CI/Unit Tests]   | [NGSIMySQLSink.configure] ------------------------------------------- enable_lowercase can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSIMySQLSink.configure] ------------------------------------  OK  - 'enable_lowercase=falso' was detected\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------------- When no encoding and when a non root service-path is notified/defaulted and data_model is 'dm-by-entity-type' the MySQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------  OK  - 'somePath_someType' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------------- When no encoding and when a root service-path is notified/defaulted and data_model is 'dm-by-service-path' the MySQL table name is the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------  OK  - The table name was not built when data_model='dm-by-service-path' and using the root service path\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------------- When encoding and when a root service-path is notified/defaulted and data_model is 'dm-by-entity-type' the MySQL table name is the concatenation of <service-path>, and <entityType>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------  OK  - 'someType' is equals to someType\n[CI/Unit Tests]   | [NGSIMySQLSink.configure] ------------------------------------------- enable_encoding can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSIMySQLSink.configure] ------------------------------------  OK  - 'enable_encoding=falso' was detected\n[CI/Unit Tests]   | [NGSIMySQKSink.testNativeTypesRowBatch] ----------------------  OK  - NativeTypesOK\n[CI/Unit Tests]   | [NGSIMySQLSink.configure] ------------------------------------------- mysqlOptions has value when mysql_options is configured\n[CI/Unit Tests]   | [NGSIMySQLSink.configure] ------------------------------------  OK  - mysqlOptions has value when it is configured\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------------- When encoding and when a non root service-path is notified/defaulted and data_model is 'dm-by-entity-type' the MySQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------  OK  - 'x002fsomePathxffffsomeType' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------------- When data model is by atribute, a table name length greater than 64 characters is detected\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------  OK  - A table name length greater than 64 characters has been detected\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------------- When no encoding and when a non root service-path is notified/defaulted and data_model is 'dm-by-service-path' the MySQL table name is the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------  OK  - 'somePath' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------------- When data model is by service path, a table name length greater than 64 characters is detected\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------  OK  - A table name length greater than 64 characters has been detected\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------------- When data model is by entity, a table name length greater than 64 characters is detected\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------  OK  - A table name length greater than 64 characters has been detected\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------------- When encoding and when a non root service-path is notified/defaulted and data_model is 'dm-by-entity' the MySQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIMySQLSink.buildTableName] -------------------------------  OK  - 'x002fsomePathxffffsomeIdxffffsomeType' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | Tests run: 26, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSIPostgisSinkTest\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When a root service-path is notified/defaulted and data_model is 'dm-by-service-path' the Postgis table name is the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] -----------------------------  OK  - 'x002f' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When a non root service-path is notified/defaulted and data_model is 'dm-by-service-path' the Postgis table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] -----------------------------  OK  - 'x002fsomex0050athxffffsomex0049dxffffsomex0054ype' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When a non root service-path is notified/defaulted and data_model is 'dm-by-fixed-entity-type' the PostgreSQL table name is the encoding of <entityType>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] -----------------------------  OK  - 'someType' is equals to the encoding of <entityType>\n[CI/Unit Tests]   | [NGSIPostgisSink.initialize] ---------------------------------------- When initializing through an initial geolocated event, a table name is created\n[CI/Unit Tests]   | [PostgisBAggregator.initialize] ------------------------------  OK  - A table name has been created\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------------- attr_persistence can only be 'row' or 'column'\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------  OK  - 'attr_persistence=fila' was detected\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------------- cache can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------  OK  - 'enable_cache=falso' was detected\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When a non root service-path is notified/defaulted and data_model is 'dm-by-service-path' the Postgis table name is the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] -----------------------------  OK  - 'somePath' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When a non root service-path is notified/defaulted and data_model is 'dm-by-entity-type' the PostgreSQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] -----------------------------  OK  - 'somePath_someType' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When a root service-path is notified/defaulted and data_model is 'dm-by-service-path' the Postgis table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] -----------------------------  OK  - 'x002fxffffsomex0049dxffffsomex0054ype' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When a root service-path is notified/defaulted and data_model is 'dm-by-service-path' the Postgis table name cannot be built\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] -----------------------------  OK  - The root service path was detected as not valid\n[CI/Unit Tests]   | [NGSIPostgisSink.testNativeTypeColumnBatchLastDataEntityIdKey] -  OK  - NativeTypesOK\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------------- postgisOptions is null when postgis_options is not configured\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------  OK  - postgisOptions is null when it is not configured\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When a non root service-path is notified/defaulted and data_model is 'dm-by-service-path' the Postgis table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] -----------------------------  OK  - 'somePath_someId_someType' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameNewEncodingDatabaseDataModel] -------- The DB name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameNewEncodingDatabaseDataModel] -  OK  - 'somex0053ervice' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgisSink.testNativeTypeColumnBatchLastDataKeyOtherThanEntityId] -  OK  - NativeTypesOK\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameNewEncodingEntityTypeDatabaseDataModel] -------- The DB name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameNewEncodingEntityTypeDatabaseDataModel] -  OK  - 'somex0053ervice' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When a root service-path is notified/defaulted and data_model is 'dm-by-service-path' the Postgis table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] -----------------------------  OK  - 'someId_someType' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIPostgisSink.testNativeTypesColumnBatch] -----------------  OK  - NativeTypesOK\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameNewEncoding] ------------------------ The DB name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameNewEncoding] -----------------  OK  - 'postgres' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------------- enable_lowercase can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------  OK  - 'enable_lowercase=falso' was detected\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildSchemaNameNewEncoding] -------------------- The schema name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildSchemaNameNewEncoding] -------------  OK  - 'somex0053ervice' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------------- enable_encoding can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------  OK  - 'enable_encoding=falso' was detected\n[CI/Unit Tests]   | [NGSIPostgisSink.buildSchemaName] ----------------------------------- A schema name length greater than 63 characters is detected\n[CI/Unit Tests]   | [NGSIPostgisSink.buildSchemaName] ----------------------------  OK  - A schema name length greater than 63 characters has been detected\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When a root service-path is notified/defaulted and data_model is 'dm-by-entity-type' the Postgis table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] -----------------------------  OK  - 'x002fxffffsomex0054ype' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------------- postgisOptions has value when postgis_options is configured\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------  OK  - postgisOptions has value when it is configured\n[CI/Unit Tests]   | [NGSIPostgisSink.testNativeTypeColumnBatchLastDataNoKey] -----  OK  - NativeTypesOK\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When data model is by atribute, a table name length greater than 63 characters is detected\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] -----------------------------  OK  - A table name length greater than 63 characters has been detected\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameOldEncoding] ------------------------ The db name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameOldEncoding] -----------------  OK  - 'postgres' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameOldEncodingEntityTypeDatabaseDataModel] -------- The db name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameOldEncodingEntityTypeDatabaseDataModel] -  OK  - 'someService' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameOldEncodingDatabaseDataModel] -------- The db name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameOldEncodingDatabaseDataModel] -  OK  - 'someService' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildSchemaName] ----------------------------------- The schema name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgisSink.buildSchemaName] ----------------------------  OK  - 'someService' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When data model is by service path, a table name length greater than 63 characters is detected\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] -----------------------------  OK  - A table name length greater than 63 characters has been detected\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When data model is by entity, a table name length greater than 63 characters is detected\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] -----------------------------  OK  - A table name length greater than 63 characters has been detected\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When a non root service-path is notified/defaulted and data_model is 'dm-by-fixed-entity-type' the PostgreSQL table name is the encoding of <entityType>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] -----------------------------  OK  - 'somex0054ype' is equals to the encoding of <entityType>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When a non root service-path is notified/defaulted and data_model is 'dm-by-service-path' the Postgis table name is the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] -----------------------------  OK  - 'x002fsomex0050ath' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When a non root service-path is notified/defaulted and data_model is 'dm-by-entity-type' the PostgreSQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] -----------------------------  OK  - 'x002fsomex0050athxffffsomex0054ype' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When a root service-path is notified/defaulted and data_model is 'dm-by-entity-type' the Postgis table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] -----------------------------  OK  - 'someType' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When data model is by entity, a table name length greater than 63 characters is detected\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] -----------------------------  OK  - A table name length greater than 63 characters has been detected\n[CI/Unit Tests]   | Tests run: 38, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSIKafkaSinkTest\n[CI/Unit Tests]   | [NGSIKafkaSink.buildTopicName] -------------------------------------- When the root service-path is notified/defaulted and data_model=dm-by-attribute, the Kafka topic name is the concatenation of <service>, <service-path>, <entityId>, <entityType> and <attrName>\n[CI/Unit Tests]   | [NGSIKafkaSink.buildTopicName] -------------------------------  OK  - Created topic is equals to servicexffffx002fxffffentityIdxffffentityTypexffffattributeName\n[CI/Unit Tests]   | [NGSIKafkaSink.buildTopicName] -------------------------------------- When the root service-path is notified/defaulted and data_model=dm-by-entity, the Kafka topic name is the concatenation of <service>, <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIKafkaSink.buildTopicName] -------------------------------  OK  - Created topic is equals to servicexffffx002fxffffentityIdxffffentityType\n[CI/Unit Tests]   | [NGSIKafkaSink.buildTopicName] -------------------------------------- When a non root service-path is notified/defaulted and data_model=dm-by-service, the Kafka topic name is <service>\n[CI/Unit Tests]   | [NGSIKafkaSink.buildTopicName] -------------------------------  OK  - Created topic is equal to service\n[CI/Unit Tests]   | [NGSIKafkaSink.buildTopicName] -------------------------------------- When the root service-path is notified/defaulted and data_model=dm-by-service-path, the Kafka topic name is the concatenation of <service> and <service-path>\n[CI/Unit Tests]   | [NGSIKafkaSink.buildTopicName] -------------------------------  OK  - Created topic is equals to servicexffffx002f\n[CI/Unit Tests]   | [NGSIKafkaSink.buildTopicName] -------------------------------------- When a non root service-path is notified/defaulted and data_model=dm-by-entity, the Kafka topic name is the concatenation of <service>, <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIKafkaSink.buildTopicName] -------------------------------  OK  - Created topic is equals to servicexffffx002fservicePathxffffentityIdxffffentityType\n[CI/Unit Tests]   | [NGSIKafkaSink.buildTopicName] -------------------------------------- When a non root service-path is notified/defaulted and data_model=dm-by-service-path, the Kafka topic name is the concatenation of <service> and <service-path>\n[CI/Unit Tests]   | [NGSIKafkaSink.buildTopicName] -------------------------------  OK  - Created topic is equals to servicexffffx002fservicePath\n[CI/Unit Tests]   | [NGSIKafkaSink.buildTopicName] -------------------------------------- When a non root service-path is notified/defaulted and data_model=dm-by-attribute, the Kafka topic name is the concatenation of <service>, <service-path>, <entityId>, <entityType> and <attrName>\n[CI/Unit Tests]   | [NGSIKafkaSink.buildTopicName] -------------------------------  OK  - Created topic is equals to servicexffffx002fservicePathxffffentityIdxffffentityTypexffffattributeName\n[CI/Unit Tests]   | [NGSIKafkaSink.buildTopicName] -------------------------------------- When the root service-path is notified/defaulted and data_model=dm-by-service, the Kafka topic name is <service>\n[CI/Unit Tests]   | [NGSIKafkaSink.buildTopicName] -------------------------------  OK  - Created topic is equals to service\n[CI/Unit Tests]   | Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSIArcGisSinkTest\n[CI/Unit Tests]   |  -- Skipped\n[CI/Unit Tests]   | https://arcgis.com/XXXXXXXXXXXX/arcgis/rest/services/FeatureTable01/FeatureServer/0\n[CI/Unit Tests]   | Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSIHDFSSinkTest\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFilePath] ------------------------------------ When no encoding and when a root service-path is notified/defaulted the HDFS file path is the encoding of <service>/<entity>/<entity>.txt\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFilePath] -----------------------------  OK  - 'someService/someId_someType/someId_someType.txt' is equals to <service>/<entity>/<entity>.txt\n[CI/Unit Tests]   | [NGSIHDFSSink.testNativeTypeRowBatchJson] --------------------  OK \n[CI/Unit Tests]   | [NGSIHDFSSink.buildFolderPath] -------------------------------------- A folder path length greater than 255 characters is detected\n[CI/Unit Tests]   | [NGSIHDFSSink.buildFolderPath] -------------------------------  OK  - A folder path length greater than 255 characters has been detected\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.configure] ---------------------------------------- backend.max_conns_per_route gets the configured value\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.configure] ---------------------------------  OK  - 'backend.max_conns_per_route=3' was configured\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFilePath] ------------------------------------ When encoding and when a non root service-path is notified/defaulted the HDFS file path is the encoding of <service>/<service-path>/<entity>/<entity>.txt\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFilePath] -----------------------------  OK  - 'someService/somePath/someIdxffffsomeType/someIdxffffsomeType.txt' is equals to the encoding of <service>/<service-path>/<entity>/<entity>.txt\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.configure] ---------------------------------------- file_format can only be 'json-row', 'json-column', 'csv-row' or 'csv-column'\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.configure] ---------------------------------  OK  - 'file_format=fila' was detected\n[CI/Unit Tests]   | [NGSIHDFSSink.testNativeTypeColumnBatchJsonNotMetadata] ------  OK \n[CI/Unit Tests]   | [NGSIHDFSSink.buildFilePath] ---------------------------------------- A file path length greater than 255 characters is detected\n[CI/Unit Tests]   | [NGSIHDFSSink.buildFilePath] ---------------------------------  OK  - A file path length greater than 255 characters has been detected\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFilePath] ------------------------------------ When no encoding and when a non root service-path is notified/defaulted the HDFS file path is the encoding of <service>/<service-path>/<entity>/<entity>.txt\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFilePath] -----------------------------  OK  - 'someService/somePath/someId_someType/someId_someType.txt' is equals to <service>/<service-path>/<entity>/<entity>.txt\n[CI/Unit Tests]   | [NGSIHDFSSink.testNativeTypeRowBatchCsvNotMetadata] ----------  OK \n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFilePath] ------------------------------------ When encoding and when a non root service-path is notified/defaulted the HDFS file path is the encoding of <service>/<service-path>/<entity>/<entity>.txt\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFilePath] -----------------------------  OK  - 'someService/somePath/someIdxffffsomeType/someIdxffffsomeType_28052023.txt' is equals to the encoding of <service>/<service-path>/<entity>/<entity>.txt\n[CI/Unit Tests]   | [NGSIHDFSSink.testNativeTypeColumnBatchJson] -----------------  OK \n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFolderPath] ---------------------------------- When no encoding and when a non root service-path is notified/defaulted the HDFS folder path is the encoding of <service>/<service-path>/<entity>\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFolderPath] ---------------------------  OK  - 'someService/somePath/someId_someType' is equals to <service>/<service-path>/<entity>\n[CI/Unit Tests]   | [NGSIHDFSSink.testNativeTypeColumnBatchCsvNotMetadata] -------  OK \n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFilePath] ------------------------------------ When encoding and when a root service-path is notified/defaulted the HDFS file path is the encoding of <service>/<entity>/<entity>.txt\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFilePath] -----------------------------  OK  - 'someService/someIdxffffsomeType/someIdxffffsomeType_2023.txt' is equals to the encoding of <service>/<entity>/<entity>.txt\n[CI/Unit Tests]   | [NGSIHDFSSink.testNativeTypeRowBatchCsv] ---------------------  OK \n[CI/Unit Tests]   | [NGSIHDFSSinkTest.configure] ---------------------------------------- enable_lowercase can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.configure] ---------------------------------  OK  - 'enable_lowercase=falso' was detected\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFilePath] ------------------------------------ When no encoding and when a non root service-path is notified/defaulted the HDFS file path is the encoding of <service>/<service-path>/<entity>/<entity>.txt\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFilePath] -----------------------------  OK  - 'someService/somePath/someId_someType/someId_someType_1828052023.txt' is equals to <service>/<service-path>/<entity>/<entity>.txt\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFolderPath] ---------------------------------- When encoding and when a root service-path is notified/defaulted the HDFS folder path is the encoding of <service>/<entity>\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFolderPath] ---------------------------  OK  - 'someService/someIdxffffsomeType' is equals to the encoding of <service>/<entity>\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFilePath] ------------------------------------ When encoding and when a root service-path is notified/defaulted the HDFS file path is the encoding of <service>/<entity>/<entity>.txt\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFilePath] -----------------------------  OK  - 'someService/someIdxffffsomeType/someIdxffffsomeType.txt' is equals to the encoding of <service>/<entity>/<entity>.txt\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.configure] ---------------------------------------- enable_encoding can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.configure] ---------------------------------  OK  - 'enable_encoding=falso' was detected\n[CI/Unit Tests]   | [NGSIHDFSSink.testNativeTypeColumnBatchCsv] ------------------  OK \n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFolderPath] ---------------------------------- When no encoding and when a root service-path is notified/defaulted the HDFS folder path is the encoding of <service>/<entity>\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFolderPath] ---------------------------  OK  - 'someService/someId_someType' is equals to the encoding of <service>/<entity>\n[CI/Unit Tests]   | [NGSIHDFSSink.testNativeTypeRowBatchJsonNotMetadata] ---------  OK \n[CI/Unit Tests]   | [NGSIHDFSSinkTest.configure] ---------------------------------------- backend.max_conns gets the configured value\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.configure] ---------------------------------  OK  - 'backend.max_conns=25' was configured\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFolderPath] ---------------------------------- When encoding and when a non root service-path is notified/defaulted the HDFS folder path is the encoding of <service>/<service-path>/<entity>\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFolderPath] ---------------------------  OK  - 'someService/somePath/someIdxffffsomeType' is equals to the encoding of <service>/<service-path>/<entity>\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.configure] ---------------------------------------- backend.impl can only be 'rest' or 'binary'\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.configure] ---------------------------------  OK  - 'backend_impl=api' was detected\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFilePath] ------------------------------------ When no encoding and when a root service-path is notified/defaulted the HDFS file path is the encoding of <service>/<entity>/<entity>.txt\n[CI/Unit Tests]   | [NGSIHDFSSinkTest.buildFilePath] -----------------------------  OK  - 'someService/someId_someType/someId_someType_052023.txt' is equals to <service>/<entity>/<entity>.txt\n[CI/Unit Tests]   | [NGSIHDFSSink.configure] -------------------------------------------- When not configured, not mandatory parameters get default values\n[CI/Unit Tests]   | [NGSIHDFSSink.configure] -------------------------------------  OK  - 'backend.impl=rest' configured by default\n[CI/Unit Tests]   | [NGSIHDFSSink.configure] -------------------------------------  OK  - 'backend.max_conns=500' configured by default\n[CI/Unit Tests]   | [NGSIHDFSSink.configure] -------------------------------------  OK  - 'backend.max_conns_per_route=100' configured by default\n[CI/Unit Tests]   | [NGSIHDFSSink.configure] -------------------------------------  OK  - 'batch_size=1' configured by default\n[CI/Unit Tests]   | [NGSIHDFSSink.configure] -------------------------------------  OK  - 'batch_timeout=30' configured by default\n[CI/Unit Tests]   | [NGSIHDFSSink.configure] -------------------------------------  OK  - 'batch_ttl=30' configured by default\n[CI/Unit Tests]   | [NGSIHDFSSink.configure] -------------------------------------  OK  - 'csv_separator=,' configured by default\n[CI/Unit Tests]   | [NGSIHDFSSink.configure] -------------------------------------  OK  - 'data_model=dm-by-entity' configured by default\n[CI/Unit Tests]   | [NGSIHDFSSink.configure] -------------------------------------  OK  - 'enable_encoding=false' configured by default\n[CI/Unit Tests]   | [NGSIHDFSSink.configure] -------------------------------------  OK  - 'enable_lowercase=false' configured by default\n[CI/Unit Tests]   | [NGSIHDFSSink.configure] -------------------------------------  OK  - 'file_format=json-row' configured by default\n[CI/Unit Tests]   | [NGSIHDFSSink.configure] -------------------------------------  OK  - 'hdfs_host=localhost' configured by default\n[CI/Unit Tests]   | [NGSIHDFSSink.configure] -------------------------------------  OK  - 'hdfs_port=14000' configured by default\n[CI/Unit Tests]   | [NGSIHDFSSink.configure] -------------------------------------  OK  - 'enable_hive=false' configured by default\n[CI/Unit Tests]   | [NGSIHDFSSink.configure] -------------------------------------  OK  - 'enable_krb5=false' configured by default\n[CI/Unit Tests]   | [NGSIHDFSSink.configure] -------------------------------------  OK  - 'service_as_namespace=false' configured by default\n[CI/Unit Tests]   | Tests run: 29, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSICartoDBSinkTest\n[CI/Unit Tests]   | [NGSICartoDBSink.buildTableName] ------------------------------------ When a non root service-path is notified/defaulted and data_model is 'dm-by-service-path' the CartoDB table name is the encoding of <service-path>\n[CI/Unit Tests]   | [NGSICartoDBSink.buildTableName] -----------------------------  OK  - 'x002fsomex0050ath' is equals to the encoding of <service-path>\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------------- Configured 'swap_coordinates' cannot be different than 'true' or 'false'\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - 'swap_coordinates=falso' was detected\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------------- backend.max_conns_per_route gets the configured value\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - 'backend.max_conns_per_route=3' was configured\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------------- Configured 'enable_raw_snapshot' cannot be different than 'true' or 'false'\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - 'enable_raw_snapshot=falso' was detected\n[CI/Unit Tests]   | [CartoDBAggregator.initialize] -------------------------------------- When initializing through an initial geolocated event, a table name is created\n[CI/Unit Tests]   | [CartoDBAggregator.initialize] -------------------------------  OK  - A table name has been created\n[CI/Unit Tests]   | [NGSICartoDBSink.start] --------------------------------------------- Username field must appear within an entry in the keys file\n[CI/Unit Tests]   | [NGSICartoDBSink.start] --------------------------------------  OK  - Null username has been detected\n[CI/Unit Tests]   | [NGSICartoDBSink.start] --------------------------------------------- Username within an entry in the keys file cannot be empty\n[CI/Unit Tests]   | [NGSICartoDBSink.start] --------------------------------------  OK  - Empty username has been detected\n[CI/Unit Tests]   | [NGSICartoDBSink.start] --------------------------------------------- Endpoint within an entry in the keys file cannot be empty\n[CI/Unit Tests]   | [NGSICartoDBSink.start] --------------------------------------  OK  - Empty endpoint has been detected\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------------- Only enable_distance configuration works\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - Only 'enable_distance' was configured and worked\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------------- When enable_distance and enable_distance_historic are configured, the second one value is used\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - Both 'enable_distance' and 'enable_distance_historic' where configured, but 'enable_distance_historic' value is used\n[CI/Unit Tests]   | [CartoDBAggregator.aggregate] --------------------------------------- When aggregating a single geolocated event, the aggregation values string starts with '(' and finishes with ')'\n[CI/Unit Tests]   | [CartoDBAggregator.aggregate] --------------------------------  OK  - '('2016-04-20T07:19:55.801Z','somePath','someId','someType',ST_SetSRID(ST_MakePoint(-3.7167::double precision , 40.3833::double precision ), 4326),'someValue2','[]')' starts with '('\n[CI/Unit Tests]   | [CartoDBAggregator.aggregate] --------------------------------  OK  - '('2016-04-20T07:19:55.801Z','somePath','someId','someType',ST_SetSRID(ST_MakePoint(-3.7167::double precision , 40.3833::double precision ), 4326),'someValue2','[]')' ends with ')'\n[CI/Unit Tests]   | [CartoDBAggregator.initialize] -------------------------------------- When initializing through an initial geolocated event, the aggregation fields string is lower case, starts with '(' and finishes with ')'\n[CI/Unit Tests]   | [CartoDBAggregator.initialize] -------------------------------  OK  - '(recvtime,fiwareservicepath,entityid,entitytype,the_geom,somename2,somename2_md)' is lower case\n[CI/Unit Tests]   | [CartoDBAggregator.initialize] -------------------------------  OK  - '(recvtime,fiwareservicepath,entityid,entitytype,the_geom,somename2,somename2_md)' starts with '('\n[CI/Unit Tests]   | [CartoDBAggregator.initialize] -------------------------------  OK  - '(recvtime,fiwareservicepath,entityid,entitytype,the_geom,somename2,somename2_md)' ends with ')'\n[CI/Unit Tests]   | [NGSICartoDBSink.start] --------------------------------------------- When started, a CartoDB backend is created from a valid keys file\n[CI/Unit Tests]   | [NGSICartoDBSink.start] --------------------------------------  OK  - A CartoDB backend has been created\n[CI/Unit Tests]   | [NGSICartoDBSink.start] --------------------------------------------- Key within an entry in the keys file cannot be empty\n[CI/Unit Tests]   | [NGSICartoDBSink.start] --------------------------------------  OK  - Empty key has been detected\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------------- Only enable_raw configuration works\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - Only 'enable_raw' was configured and worked\n[CI/Unit Tests]   | [NGSICartoDBSink.start] --------------------------------------------- Key field must appear within an entry in the keys file\n[CI/Unit Tests]   | [NGSICartoDBSink.start] --------------------------------------  OK  - Null key has been detected\n[CI/Unit Tests]   | [NGSICartoDBSink.buildTableName] ------------------------------------ When a root service-path is notified/defaulted and data_model is 'dm-by-service-path' the CartoDB table name is x002f\n[CI/Unit Tests]   | [NGSICartoDBSink.buildTableName] -----------------------------  OK  - 'x002f' is equals to x002f\n[CI/Unit Tests]   | [CartoDBAggregator.aggregate] --------------------------------------- When aggregating a single geolocated event, if swap_coordinates=true then the_geom field contains a point with exchanged latitude and longitude.\n[CI/Unit Tests]   | [CartoDBAggregator.aggregate] --------------------------------  OK  - '('2016-04-20T07:19:55.801Z','somePath','someId','someType',ST_SetSRID(ST_MakePoint(40.3833::double precision , -3.7167::double precision ), 4326),'someValue2','[]')' contains the coordinates '-3.7167, 40.3833' swapped\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------------- Independently of the configured value, enable_lowercase is always 'true' by default\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - 'enable_lowercase=false' was configured, nevertheless it is always true by default\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------------- When enable_raw and enable_raw_historic are configured, the second one value is used\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - Both 'enable_raw' and 'enable_raw_historic' where configured, but 'enable_raw_historic' value is used\n[CI/Unit Tests]   | [CartoDBAggregator.aggregate] --------------------------------------- When aggregating a single geolocated event, the aggregation values string contains a value and a metadata value for each attribute in the event except for the geolocation attribute, which is added as a specific value (a point)\n[CI/Unit Tests]   | [CartoDBAggregator.initialize] -------------------------------  OK  - '-3.7167, 40.3833' and '{\"name\":\"location\",\"type\":\"string\",\"value\":\"WGS84\"}' are not in the rows '('2016-04-20T07:19:55.801Z','somePath','someId','someType',ST_SetSRID(ST_MakePoint(-3.7167::double precision , 40.3833::double precision ), 4326),'someValue2','[]')'\n[CI/Unit Tests]   | [CartoDBAggregator.initialize] -------------------------------  OK  - 'someValue2' and '[]' are in the rows '('2016-04-20T07:19:55.801Z','somePath','someId','someType',ST_SetSRID(ST_MakePoint(-3.7167::double precision , 40.3833::double precision ), 4326),'someValue2','[]')'\n[CI/Unit Tests]   | [CartoDBAggregator.initialize] -------------------------------  OK  - 'ST_SetSRID(ST_MakePoint(-3.7167:double precision , 40.3833::double precision ), 4326)' is in the rows '('2016-04-20T07:19:55.801Z','somePath','someId','someType',ST_SetSRID(ST_MakePoint(-3.7167::double precision , 40.3833::double precision ), 4326),'someValue2','[]')'\n[CI/Unit Tests]   | [NGSICartoDBSink.start] --------------------------------------------- Endpoint field must appear within an entry in the keys file\n[CI/Unit Tests]   | [NGSICartoDBSink.start] --------------------------------------  OK  - Null endpoint has been detected\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------------- Configured 'keys_conf_file' cannot be empty\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - Empty 'keys_conf_file' was detected\n[CI/Unit Tests]   | [CartoDBAggregator.initialize] -------------------------------------- When initializing through an initial geolocated event, the aggregation fields string contains a field and a metadata field for each attribute in the event except for the geolocation attribute, which is added as a specific field ('the_geom')\n[CI/Unit Tests]   | [CartoDBAggregator.initialize] -------------------------------  OK  - 'somename1' and 'somename1_md' are not in the fields '(recvtime,fiwareservicepath,entityid,entitytype,the_geom,somename2,somename2_md)'\n[CI/Unit Tests]   | [CartoDBAggregator.initialize] -------------------------------  OK  - 'somename2' and 'somename2_md' are in the fields '(recvtime,fiwareservicepath,entityid,entitytype,the_geom,somename2,somename2_md)'\n[CI/Unit Tests]   | [CartoDBAggregator.initialize] -------------------------------  OK  - 'the_geom' is in the fields '(recvtime,fiwareservicepath,entityid,entitytype,the_geom,somename2,somename2_md)'\n[CI/Unit Tests]   | [NGSICartoDBSink.buildSchemaName] ----------------------------------- The schema name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSICartoDBSink.buildSchemaName] ----------------------------  OK  - 'somex0053ervice' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSICartoDBSink.buildTableName] ------------------------------------ When a non service-path is notified/defaulted and data_model is 'dm-by-entity' the CartoDB table name is the encoding of the concatenation of <service-path>, <entityId> and<entityType>\n[CI/Unit Tests]   | [NGSICartoDBSink.buildTableName] -----------------------------  OK  - 'x002fxffffsomex0049dxffffsomex0054ype' is equals to the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSICartoDBSink.buildTableName] ------------------------------------ When data model is by atribute, a table name length greater than 63 characters is detected\n[CI/Unit Tests]   | [NGSICartoDBSink.buildTableName] -----------------------------  OK  - A table name length greater than 63 characters has been detected\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------------- Configured 'enable_raw' cannot be different than 'true' or 'false'\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - 'enable_raw=falso' was detected\n[CI/Unit Tests]   | [NGSICartoDBSink.buildTableName] ------------------------------------ When a non root service-path is notified/defaulted and data_model is 'dm-by-entity' the CartoDB table name is the lower case of x002f<servicePath>xffff<entityId>xffff<entityType>\n[CI/Unit Tests]   | [NGSICartoDBSink.buildTableName] -----------------------------  OK  - 'x002fsomex0050athxffffsomex0049dxffffsomex0054ype' is equals to the lower case of x002f<servicePath>xffff<entityId>xffff<entityType>\n[CI/Unit Tests]   | [NGSICartoDBSink.buildTableName] ------------------------------------ When data model is by service path, a table name length greater than 63 characters is detected\n[CI/Unit Tests]   | [NGSICartoDBSink.buildTableName] -----------------------------  OK  - A table name length greater than 63 characters has been detected\n[CI/Unit Tests]   | [NGSICartoDBSink.buildTableName] ------------------------------------ When data model is by entity, a table name length greater than 63 characters is detected\n[CI/Unit Tests]   | [NGSICartoDBSink.buildTableName] -----------------------------  OK  - A table name length greater than 63 characters has been detected\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------------- Configured 'enable_distance' cannot be different than 'true' or 'false'\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - 'enable_distance=falso' was detected\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------------- backend.max_conns gets the configured value\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - 'backend.max_conns=25' was configured\n[CI/Unit Tests]   | [NGSICartoDBSink.start] --------------------------------------------- Endpoint within an entry in the keys file must be a URI using the http or https schema\n[CI/Unit Tests]   | [NGSICartoDBSink.start] --------------------------------------  OK  - Invalid 'htt' schema in the endpoint has been detected\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------------- Configured `data_model` cannot be different than `dm-by-service-path` or `dm-by-entity`\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - 'data_model=dm-by-service' was detected\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - 'data_model=dm-by-attribute' was detected\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------------- When not configured, not mandatory parameters get default values\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - 'backend.max_conns=500' configured by default\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - 'backend.max_conns_per_route=100' configured by default\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - 'batch_size=1' configured by default\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - 'batch_timeout=30' configured by default\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - 'batch_ttl=30' configured by default\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - 'data_model=dm-by-entity' configured by default\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - 'enable_lowercase=true' configured by default\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - 'enable_raw=true' configured by default\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - 'enable_raw_snapshot=false' configured by default\n[CI/Unit Tests]   | [NGSICartoDBSink.configure] ----------------------------------  OK  - 'enable_distance=false' configured by default\n[CI/Unit Tests]   | Tests run: 36, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.269 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSISTHSinkTest\n[CI/Unit Tests]   | [NGSISTHSink.configure] --------------------------------------------- Non mandatory parameters get the default value when not configured\n[CI/Unit Tests]   | [NGSISTHSink.configure] --------------------------------------  OK  - 'resolutions' gets the default value when not configured\n[CI/Unit Tests]   | [NGSISTHSink.configure] --------------------------------------------- Non valid resolutions are detected\n[CI/Unit Tests]   | [NGSISTHSink.configure] --------------------------------------  OK  - Invalid resolution 'week' has been detected\n[CI/Unit Tests]   | [NGSISTHSink.configure] --------------------------------------------- Empty 'resolutions' means no persistence for any resolution\n[CI/Unit Tests]   | [NGSISTHSink.configure] --------------------------------------  OK  - Empty 'resolutions' detected\n[CI/Unit Tests]   | Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.containers.NameMappingsTest\n[CI/Unit Tests]   | [NameMappings.parse] ------------------------------------------------ Service mappings can be retrieved\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved service mappings match the expected ones\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped service for 's1' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved service path mappings match the expected ones\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped service path for '/sp1' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved entity mappings match the expected ones\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped entity ID for 'Room1' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped entity type for 'Room' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved attribute mappings match the expected ones\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped attribute name for 'temperature' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped attribute name for 'humidity' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped entity ID for 'Room2' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped entity type for 'Room' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved attribute mappings match the expected ones\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped attribute name for 'temperature' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped attribute name for 'humidity' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped service path for '/sp2' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved entity mappings match the expected ones\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped entity ID for 'Room1' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped entity type for 'Room' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved attribute mappings match the expected ones\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped attribute name for 'temperature' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped attribute name for 'humidity' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped entity ID for 'Room2' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped entity type for 'Room' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved attribute mappings match the expected ones\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped attribute name for 'temperature' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped attribute name for 'humidity' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped service for 's2' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved service path mappings match the expected ones\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped service path for '/sp1' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved entity mappings match the expected ones\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped entity ID for 'Room1' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped entity type for 'Room' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved attribute mappings match the expected ones\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped attribute name for 'temperature' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped attribute name for 'humidity' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped entity ID for 'Room2' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped entity type for 'Room' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved attribute mappings match the expected ones\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped attribute name for 'temperature' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped attribute name for 'humidity' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped service path for '/sp2' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved entity mappings match the expected ones\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped entity ID for 'Room1' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped entity type for 'Room' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved attribute mappings match the expected ones\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped attribute name for 'temperature' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped attribute name for 'humidity' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped entity ID for 'Room2' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped entity type for 'Room' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved attribute mappings match the expected ones\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped attribute name for 'temperature' matches the expected one\n[CI/Unit Tests]   | [NameMappings.parse] -----------------------------------------  OK  - The retrieved mapped attribute name for 'humidity' matches the expected one\n[CI/Unit Tests]   | [NameMappings.compilePatterns] -------------------------------------- Patterns are successfully compiled\n[CI/Unit Tests]   | [NameMappings.compilePatterns] -------------------------------  OK  - The retrieved pattern for the original service matches the expected one\n[CI/Unit Tests]   | [NameMappings.compilePatterns] -------------------------------  OK  - The retrieved pattern for the original service path matches the expected one\n[CI/Unit Tests]   | [NameMappings.compilePatterns] -------------------------------  OK  - The retrieved pattern for the original entity ID matches the expected one\n[CI/Unit Tests]   | [NameMappings.compilePatterns] -------------------------------  OK  - The retrieved pattern for the original entity type matches the expected one\n[CI/Unit Tests]   | [NameMappings.compilePatterns] -------------------------------  OK  - The retrieved pattern for the original attribute name matches the expected one\n[CI/Unit Tests]   | [NameMappings.compilePatterns] -------------------------------  OK  - The retrieved pattern for the original attribute type matches the expected one\n[CI/Unit Tests]   | Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.containers.NotifyContextRequestTest\n[CI/Unit Tests]   | [NotifyContextRequest.ContextElement.getType] ----------------------- The entity type can be retrieved\n[CI/Unit Tests]   | [NotifyContextRequest.ContextElement.getType] ----------------  OK  - The retrieved entity type matches the expected one\n[CI/Unit Tests]   | [NotifyContextRequest.ContextElement.getId] ------------------------- The entity ID can be retrieved\n[CI/Unit Tests]   | [NotifyContextRequest.ContextElement.getId] ------------------  OK  - The retrieved entity ID matches the expected one\n[CI/Unit Tests]   | [NotifyContextRequest.StatusCode.getReasonPhrase] ------------------- The code can be retrieved\n[CI/Unit Tests]   | [NotifyContextRequest.StatusCode.getReasonPhrase] ------------  OK  - The retrieved reason phrase matches the expected one\n[CI/Unit Tests]   | [NotifyContextRequest.toString] ------------------------------------- String representation of this object is OK\n[CI/Unit Tests]   | [NotifyContextRequest.toString] ------------------------------  OK  - The string representation of this object is OK\n[CI/Unit Tests]   | [NotifyContextRequest.ContextElement.getIsPattern] ------------------ The entity type can be retrieved\n[CI/Unit Tests]   | [NotifyContextRequest.ContextElement.getIsPattern] -----------  OK  - The retrieved entity type matches the expected one\n[CI/Unit Tests]   | [NotifyContextRequest.StatusCode.getCode] --------------------------- The code can be retrieved\n[CI/Unit Tests]   | [NotifyContextRequest.StatusCode.getCode] --------------------  OK  - The retrieved code matches the expected one\n[CI/Unit Tests]   | [NotifyContextRequest.StatusCode.toString] -------------------------- String representation of this object is OK\n[CI/Unit Tests]   | [NotifyContextRequest.StatusCode.toString] -------------------  OK  - The string representation of this object is OK\n[CI/Unit Tests]   | [NotifyContextRequest.ContextElement.toString] ---------------------- String representation of this object is OK\n[CI/Unit Tests]   | [NotifyContextRequest.ContextElement.toString] ---------------  OK  - The string representation of this object is OK\n[CI/Unit Tests]   | [NotifyContextRequest.getSubscriptionId] ---------------------------- Subscription ID can be retrieved\n[CI/Unit Tests]   | [NotifyContextRequest.getSubscriptionId] ---------------------  OK  - The retrieved subscription ID matches the expected one\n[CI/Unit Tests]   | [NotifyContextRequest.getOriginator] -------------------------------- Originator can be retrieved\n[CI/Unit Tests]   | [NotifyContextRequest.getOriginator] -------------------------  OK  - The retrieved originator matches the expected one\n[CI/Unit Tests]   | Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.handlers.NGSIRestHandlerTest\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------------- When a notification contains multiple ContextElementResponses, a NGSIEvent is generated for each one of them; the notified service path is split as well this tests considers NGSIv2 format\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The generated events are 2 for NGSIv2 format\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The generated events have a service path equals to a split of the notified service for NGSIv2 format path\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------------- When a notification contains multiple ContextElementResponses, a NGSIEvent is generated for each one of them; the notified service path is split as well\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The generated events are 2\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The generated events have a service path equals to a split of the notified service path\n[CI/Unit Tests]   | [NGSIRestHandler.generateUniqueId] ---------------------------------- When a correlation ID is genereated, both generated correlation ID and generated transaction ID have the same value\n[CI/Unit Tests]   | [NGSIRestHandler.generateUniqueId] ---------------------------  OK  - The generated transaction ID '1234567890-123-1234567890' is equals to the generated correlator ID '1234567890-123-1234567890'\n[CI/Unit Tests]   | [NGSIRestHandler.configure] ----------------------------------------- The configured default service path must start with '/'\n[CI/Unit Tests]   | [NGSIRestHandler.configure] ----------------------------------  OK  - The configured default service path '/something' starts with '/'\n[CI/Unit Tests]   | [NGSIRestHandler.configure] ----------------------------------------- The configured default service path can only contain alphanumerics and underscores\n[CI/Unit Tests]   | [NGSIRestHandler.configure] ----------------------------------  OK  - The configured default service path '/something.?' was detected as invalid\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------------- When a notification is sent as a Http message, a single Flume event is generated\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - A single event has been generated\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------------- When a notification is sent, the headers are valid\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The value for 'Content-Type' header is 'application/json; charset=utf-83'\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The value for 'fiware-servicePath' header starts with '/'\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The length of 'fiware-service' header value is  less or equal than '50'\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The length of 'fiware-servicePath' header value is less or equal than '50'\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The value for 'attrsFormat' header value is valid\n[CI/Unit Tests]   | [NGSIRestHandler.wrongServiceHeaderLength] -------------------------- A FIWARE service header whose length is greater than 50 characters is detected\n[CI/Unit Tests]   | [NGSIRestHandler.wrongServiceHeaderLength] -------------------  OK  - A wrong FIWARE service header 'thisIsAFiwareServiceHeaderWhoseLengthIsGreaterThanTheAccepted50CharactersLimit' has been detected\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------------- When a the configuration is wrong, no evetns are obtained\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - No events are processed since the configuration is wrong\n[CI/Unit Tests]   | [NGSIRestHandler.generateUniqueId] ---------------------------------- An internal transaction ID is generated\n[CI/Unit Tests]   | [NGSIRestHandler.generateUniqueId] ---------------------------  OK  - An internal transaction ID '71a4e84a-327b-4bda-a693-fb6228ea9496' has been generated\n[CI/Unit Tests]   | [NGSIRestHandler.configure] ----------------------------------------- The configured notification target must start with '/'\n[CI/Unit Tests]   | [NGSIRestHandler.configure] ----------------------------------  OK  - The configured notification target '/notify' starts with '/'\n[CI/Unit Tests]   | [NGSIRestHandler.wrongServicePathHeaderLength] ---------------------- A FIWARE service path header whose length is greater than 50 characters is detected\n[CI/Unit Tests]   | [NGSIRestHandler.wrongServicePathHeaderLength] ---------------  OK  - A wrong FIWARE service path header 'thisIsAFiwareServicePathHeaderWhoseLengthIsGreaterThanTheAccepted50CharactersLimit' has been detected\n[CI/Unit Tests]   | [NGSIRestHandler.configure] ----------------------------------------- When not configured, the default values are used for non mandatory parameters\n[CI/Unit Tests]   | [NGSIRestHandler.configure] ----------------------------------  OK  - The default configuration value for 'notification_target' is '/notify'\n[CI/Unit Tests]   | [NGSIRestHandler.configure] ----------------------------------  OK  - The default configuration value for 'default_service' is 'default'\n[CI/Unit Tests]   | [NGSIRestHandler.configure] ----------------------------------  OK  - The default configuration value for 'default_service_path' is '/'\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------------- When a Flume event is generated, it contains fiware-service, fiware-servicepath, fiware-correlator and transaction-id headers\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The generated Flume event contains 'fiware-service'\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The generated Flume event contains 'fiware-servicepath'\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The generated Flume event contains 'fiware-correlator'\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The generated Flume event contains 'transaction-id'\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The generated Flume event contains 'ngsiv2-attrsformat'\n[CI/Unit Tests]   | [NGSIRestHandler.configure] ----------------------------------------- The configured default service can only contain alphanumerics and underscores\n[CI/Unit Tests]   | [NGSIRestHandler.configure] ----------------------------------  OK  - The configured default service 'default-service!!' was detected as invalid\n[CI/Unit Tests]   | [NGSIRestHandler.generateUniqueId] ---------------------------------- When a correlation ID is not notified, it is generated\n[CI/Unit Tests]   | [NGSIRestHandler.generateUniqueId] ---------------------------  OK  - The transaction ID has been generated\n[CI/Unit Tests]   | [NGSIRestHandler.wrongServicePathHeaderInitialCharacter] ------------ A FIWARE service path header not starting by slash is detected\n[CI/Unit Tests]   | [NGSIRestHandler.wrongServicePathHeaderInitialCharacter] -----  OK  - A wrong FIWARE service path header 'servicePath' has been detected\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------------- When a notification is sent, the headers are valid\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The value for 'Content-Type' header is 'application/json; charset=utf-8'\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The value for 'fiware-servicePath' header starts with '/'\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The length of 'fiware-service' header value is  less or equal than '50'\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The length of 'fiware-servicePath' header value is less or equal than '50'\n[CI/Unit Tests]   | [NGSIRestHandler.wrongContentType] ---------------------------------- A content-type different than 'application/json; charset=utf-8' is detected\n[CI/Unit Tests]   | [NGSIRestHandler.wrongContentType] ---------------------------  OK  - A wrong content-type 'application/json' has been detected\n[CI/Unit Tests]   | [NGSIRestHandler.generateUniqueId] ---------------------------------- When a correlator ID is notified, it is reused\n[CI/Unit Tests]   | [NGSIRestHandler.generateUniqueId] ---------------------------  OK  - The notified transaction ID '1234567890-123-1234567890' has been reused\n[CI/Unit Tests]   | Tests run: 20, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.049 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.utils.NGSICharsetsTest\n[CI/Unit Tests]   | [NGSICharsets.encodeHDFS] ------------------------------------------- Numbers are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeHDFS] ------------------------------------  OK  - '0123456789' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeHDFS] ------------------------------------------- Rare characters are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeHDFS] ------------------------------------  OK  - '\u00c1\u00c9\u00cd\u00d3\u00da\u00e1\u00e9\u00ed\u00f3\u00fa\u00d1\u00f1\u00c7\u00e7!\"#$%&'()*+,.-_:;<>?@[\\]^`{|}~' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------------- Underscore is not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------  OK  - '_' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBDatabase] -------------------------------- Forbidden characters are encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBDatabase] -------------------------  OK  - '/\\.\"$' has been encoded as 'x002fx005cx002ex0022x0024'\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------------- Numbers are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------  OK  - '0123456789' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------------- Non lower case alphanumerics and underscore are encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------  OK  - '\u00c1\u00c9\u00cd\u00d3\u00da\u00e1\u00e9\u00ed\u00f3\u00fa\u00d1\u00f1\u00c7\u00e7' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------  OK  - '!\"#$%&'()*+,/' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------  OK  - ':;<>?@' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------  OK  - '[\\]^`' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------  OK  - '{|}~' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] ------------------------------------------ A single 'x' is not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] -----------------------------------  OK  - 'x' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBDatabase] -------------------------------- Upper case not accented characters are encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBDatabase] -------------------------  OK  - 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' has been encoded as 'x0041x0042x0043x0044x0045x0046x0047x0048x0049x004ax004bx004cx004dx004ex004fx0050x0051x0052x0053x0054x0055x0056x0057x0058x0059x005a'\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------------- \"xffff\" is encoded (escaped) as \"xxffff\"\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------  OK  - 'xffff' has been encoded as 'xxffff'\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBDatabase] -------------------------------- Lower case not accented characters are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBDatabase] -------------------------  OK  - 'abcdefghijklmnopqrstuvwyz' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] ------------------------------------------ Underscore is not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] -----------------------------------  OK  - '_' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------------- \"xffff\" is encoded (escaped) as \"xxffff\"\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------  OK  - 'xffff' has been encoded as 'xxffff'\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------------- Lower case not accented characters are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------  OK  - 'abcdefghijklmnopqrstuvwyz' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBCollection] ------------------------------ Numbers are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBCollection] -----------------------  OK  - '0123456789' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBCollection] ------------------------------ Rare characters are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBCollection] -----------------------  OK  - '\u00c1\u00c9\u00cd\u00d3\u00da\u00e1\u00e9\u00ed\u00f3\u00fa\u00d1\u00f1\u00c7\u00e7!#%&'()*+.,-_:;<>?@[\\]^`{|}~' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] ------------------------------------------ Lower case not accented characters are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] -----------------------------------  OK  - 'abcdefghijklmnopqrstuvwyz' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBDatabase] -------------------------------- A single 'x' is not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBDatabase] -------------------------  OK  - 'x' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------------- '=' (internal concatenator) is encoded as \"xffff\" (public concatenator)\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------  OK  - '=' has been encoded as 'xffff'\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBDatabase] -------------------------------- \"xffff\" is encoded (escaped) as \"xxffff\"\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBDatabase] -------------------------  OK  - 'xffff' has been encoded as 'xxffff'\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------------- Underscore is not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------  OK  - '_' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] ------------------------------------------ Numbers are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] -----------------------------------  OK  - '0123456789' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------------- \"xffff\" is encoded (escaped) as \"xxffff\"\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------  OK  - 'xffff' has been encoded as 'xxffff'\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] ------------------------------------------ \"xffff\" is encoded (escaped) as \"xxffff\"\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] -----------------------------------  OK  - 'xffff' has been encoded as 'xxffff'\n[CI/Unit Tests]   | [NGSICharsets.encodeHDFS] ------------------------------------------- Lower case not accented characters are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeHDFS] ------------------------------------  OK  - 'abcdefghijklmnopqrstuvwyz' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBCollection] ------------------------------ '=' (internal concatenator) is encoded as \"xffff\" (public concatenator)\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBCollection] -----------------------  OK  - '=' has been encoded as 'xffff'\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------------- Lower case not accented characters are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------  OK  - 'abcdefghijklmnopqrstuvwyz' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------------- A single 'x' is not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------  OK  - 'x' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBCollection] ------------------------------ Lower case not accented characters are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBCollection] -----------------------  OK  - 'abcdefghijklmnopqrstuvwyz' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBDatabase] -------------------------------- '=' (internal concatenator) is encoded as \"xffff\" (public concatenator)\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBDatabase] -------------------------  OK  - '=' has been encoded as 'xffff'\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------------- Upper case not accented characters are encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------  OK  - 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' has been encoded as 'x0041x0042x0043x0044x0045x0046x0047x0048x0049x004ax004bx004cx004dx004ex004fx0050x0051x0052x0053x0054x0055x0056x0057x0058x0059x005a'\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] ------------------------------------------ A single 'x' is not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] -----------------------------------  OK  - 'x' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] ------------------------------------------ Upper case not accented characters are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] -----------------------------------  OK  - 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------------- Numbers are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------  OK  - '0123456789' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------------- Non lower case alphanumerics and undersocre are encoded\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------  OK  - '\u00c1\u00c9\u00cd\u00d3\u00da\u00e1\u00e9\u00ed\u00f3\u00fa\u00d1\u00f1\u00c7\u00e7' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------  OK  - '!\"#$%&'()*+,-./' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------  OK  - ':;<>?@' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------  OK  - '[\\]^`' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------  OK  - '{|}~' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------------- Numbers are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------  OK  - '0123456789' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------------- Non lower case alphanumerics and undersocre are encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------  OK  - '\u00c1\u00c9\u00cd\u00d3\u00da\u00e1\u00e9\u00ed\u00f3\u00fa\u00d1\u00f1\u00c7\u00e7' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------  OK  - '!\"#$%&'()*+,./' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------  OK  - ':;<>?@' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------  OK  - '[\\]^`' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------  OK  - '{|}~' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeHDFS] ------------------------------------------- \"xffff\" is encoded (escaped) as \"xxffff\"\n[CI/Unit Tests]   | [NGSICharsets.encodeHDFS] ------------------------------------  OK  - 'xffff' has been encoded as 'xxffff'\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] ------------------------------------------ Dot is not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] -----------------------------------  OK  - '.' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------------- A single 'x' is not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------  OK  - 'x' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeHDFS] ------------------------------------------- A single 'x' is not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeHDFS] ------------------------------------  OK  - 'x' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeHDFS] ------------------------------------------- Upper case not accented characters are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeHDFS] ------------------------------------  OK  - 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' has been encoded as 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] ------------------------------------------ Numbers are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] -----------------------------------  OK  - '0123456789' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] ------------------------------------------ Non lower case alphanumerics and undersocre are encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] -----------------------------------  OK  - '\u00c1\u00c9\u00cd\u00d3\u00da\u00e1\u00e9\u00ed\u00f3\u00fa\u00d1\u00f1\u00c7\u00e7' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] -----------------------------------  OK  - '!\"#$%&'()*+,-./' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] -----------------------------------  OK  - ':;<>?@' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] -----------------------------------  OK  - '[\\]^`' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] -----------------------------------  OK  - '{|}~' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------------- Upper case not accented characters are encoded\n[CI/Unit Tests]   | [NGSICharsets.encodePostgreSQL] ------------------------------  OK  - 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' has been encoded as 'x0041x0042x0043x0044x0045x0046x0047x0048x0049x004ax004bx004cx004dx004ex004fx0050x0051x0052x0053x0054x0055x0056x0057x0058x0059x005a'\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBCollection] ------------------------------ Upper case not accented characters are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBCollection] -----------------------  OK  - 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeHDFS] ------------------------------------------- '=' (internal concatenator) is encoded as \"xffff\" (public concatenator)\n[CI/Unit Tests]   | [NGSICharsets.encodeHDFS] ------------------------------------  OK  - '=' has been encoded as 'xffff'\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBCollection] ------------------------------ A single 'x' is not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBCollection] -----------------------  OK  - 'x' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBCollection] ------------------------------ Forbidden characters are encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBCollection] -----------------------  OK  - '/$' has been encoded as 'x002fx0024'\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] ------------------------------------------ Lower case not accented characters are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] -----------------------------------  OK  - 'abcdefghijklmnopqrstuvwyz' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------------- A single 'x' is not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------  OK  - 'x' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] ------------------------------------------ Non lower case alphanumerics and underscore are encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] -----------------------------------  OK  - '\u00c1\u00c9\u00cd\u00d3\u00da\u00e1\u00e9\u00ed\u00f3\u00fa\u00d1\u00f1\u00c7\u00e7' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] -----------------------------------  OK  - '!\"#$%&'()*+,/' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] -----------------------------------  OK  - ':;<>?@' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] -----------------------------------  OK  - '[\\]^`' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] -----------------------------------  OK  - '{|}~' has been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------------- '=' (internal concatenator) is encoded as \"xffff\" (public concatenator)\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------  OK  - '=' has been encoded as 'xffff'\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------------- Hyphen is not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------  OK  - '-' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------------- Lower case not accented characters are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------  OK  - 'abcdefghijklmnopqrstuvwyz' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] ------------------------------------------ Upper case not accented characters are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] -----------------------------------  OK  - 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBCollection] ------------------------------ \"xffff\" is encoded (escaped) as \"xxffff\"\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBCollection] -----------------------  OK  - 'xffff' has been encoded as 'xxffff'\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] ------------------------------------------ '=' (internal concatenator) is encoded as \"xffff\" (public concatenator)\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] -----------------------------------  OK  - '=' has been encoded as 'xffff'\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------------- Underscore is not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeCKAN] ------------------------------------  OK  - '_' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] ------------------------------------------ Hyphen is not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] -----------------------------------  OK  - '-' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] ------------------------------------------ \"xffff\" is encoded (escaped) as \"xxffff\"\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] -----------------------------------  OK  - 'xffff' has been encoded as 'xxffff'\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] ------------------------------------------ Underscore is not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeKafka] -----------------------------------  OK  - '_' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------------- '=' (internal concatenator) is encoded as \"xffff\" (public concatenator)\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------  OK  - '=' has been encoded as 'xffff'\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBDatabase] -------------------------------- Numbers are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBDatabase] -------------------------  OK  - '0123456789' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBDatabase] -------------------------------- Rare characters are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMongoDBDatabase] -------------------------  OK  - '\u00c1\u00c9\u00cd\u00d3\u00da\u00e1\u00e9\u00ed\u00f3\u00fa\u00d1\u00f1\u00c7\u00e7!#%&'()*+,-_:;<>?@[]^`{|}~' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------------- Upper case not accented characters are not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------  OK  - 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------------- Hyphen is not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------  OK  - '-' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------------- Dot is not encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeDynamoDB] --------------------------------  OK  - '.' has not been encoded\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] ------------------------------------------ '=' (internal concatenator) is encoded as \"xffff\" (public concatenator)\n[CI/Unit Tests]   | [NGSICharsets.encodeMySQL] -----------------------------------  OK  - '=' has been encoded as 'xffff'\n[CI/Unit Tests]   | Tests run: 68, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.utils.NGSIUtilsTest\n[CI/Unit Tests]   | [Utils.getLocation] ------------------------------------------------- When getting a geometry, the original attribute is returned when the attribute type is not geo:point and there is no WGS84 location metadata\n[CI/Unit Tests]   | [Utils.getLocation] ------------------------------------------  OK  - Geometry '-3.7167, 40.3833' obtained for a not geolocated attribute\n[CI/Unit Tests]   | [Utils.getLocation] ------------------------------------------------- When getting a geometry, a CartoDB point is obtained when passing an attribute of type 'geo:point'\n[CI/Unit Tests]   | [Utils.getLocation] ------------------------------------------  OK  - Geometry 'ST_SetSRID(ST_MakePoint(-3.7167::double precision , 40.3833::double precision ), 4326)' obtained for an attribute of type 'geo:point' and value '-3.7167, 40.3833'\n[CI/Unit Tests]   | [Utils.getLocation] ------------------------------------------------- When getting a geometry, a CartoDB point is obtained when passing an attribute with 'location' metadata\n[CI/Unit Tests]   | [Utils.getLocation] ------------------------------------------  OK  - Geometry 'ST_SetSRID(ST_MakePoint(-3.7167::double precision , 40.3833::double precision ), 4326)' obtained for an attribute with metadata '[{\"name\":\"location\",\"type\":\"string\",\"value\":\"WGS84\"}]' and value '-3.7167, 40.3833'\n[CI/Unit Tests]   | [Utils.getLocation] ------------------------------------------------- When getting a geometry, a CartoDB geometry is obtained when passing an attribute of type 'geo:json'\n[CI/Unit Tests]   | [Utils.getLocation] ------------------------------------------  OK  - Geometry 'ST_GeomFromGeoJSON('{\"coordinates\": [-3.7167, 40.3833], \"type\": \"Point\"}')' obtained for an attribute of type 'geo:json' and value '{\"coordinates\": [-3.7167, 40.3833], \"type\": \"Point\"}'\n[CI/Unit Tests]   | Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec\n[CI/Unit Tests]   | \n[CI/Unit Tests]   | Results :\n[CI/Unit Tests]   | \n[CI/Unit Tests]   | Tests run: 807, Failures: 0, Errors: 0, Skipped: 0\n[CI/Unit Tests]   | \n[CI/Unit Tests]   \u2705  Success - Main cygnus-ngsi Unit Tests (Java 11)\n[CI/Unit Tests] \u2b50 Run Main cygnus-ngsi-ld Unit Tests (Java 11)\n[CI/Unit Tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[CI/Unit Tests]   | \n[CI/Unit Tests]   | -------------------------------------------------------\n[CI/Unit Tests]   |  T E S T S\n[CI/Unit Tests]   | -------------------------------------------------------\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.interceptors.NGSILDEventTest\n[CI/Unit Tests]   | [NGSIEvent.getServicePathForData] ----------------------------------- The original service path is returned\n[CI/Unit Tests]   | [NGSIEvent.getServicePathForData] ----------------------------  OK  - The original service path has been returned\n[CI/Unit Tests]   | [NGSIEvent.getServiceForData] --------------------------------------- The original service is returned\n[CI/Unit Tests]   | [NGSIEvent.getServiceForData] --------------------------------  OK  - The original service has been returned\n[CI/Unit Tests]   | [NGSIEvent.getRecvTimeTs] ------------------------------------------- The timestamp is returned\n[CI/Unit Tests]   | [NGSIEvent.getRecvTimeTs] ------------------------------------  OK  - The timestamp has been returned\n[CI/Unit Tests]   | [NGSIEvent.getBody] ------------------------------------------------- Bytes regarding the original context element are returned\n[CI/Unit Tests]   | [NGSIEvent.getBody] ------------------------------------------  OK  - Bytes regarding the original context element have been returned\n[CI/Unit Tests]   | [NGSIEvent.getEntityForNaming] -------------------------------------- When grouping is enabled, independently of the new encoding, the grouped entity is returned\n[CI/Unit Tests]   | [NGSIEvent.getEntityForNaming] -------------------------------  OK  - The grouped entity has been returned\n[CI/Unit Tests]   | [NGSIEvent.getAttributeForNaming] ----------------------------------- When mappings is not enabled, the original attribute name is returned\n[CI/Unit Tests]   | [NGSIEvent.getAttributeForNaming] ----------------------------  OK  - The original attribute name has been returned\n[CI/Unit Tests]   | [NGSIEvent.getServiceForNaming] ------------------------------------- When name mappings are not enabled, the original service is returned\n[CI/Unit Tests]   | [NGSIEvent.getServiceForNaming] ------------------------------  OK  - The original service has been returned\n[CI/Unit Tests]   | [NGSIEvent.getServicePathForNaming] --------------------------------- When grouping and mappings are not enabled, the original service path is returned\n[CI/Unit Tests]   | [NGSIEvent.getServicePathForNaming] --------------------------  OK  - The original service path has been returned\n[CI/Unit Tests]   | [NGSIEvent.getEntityForNaming] -------------------------------------- When grouping, mappings and new encoding are not enabled, the original entity (not encoded) is returned\n[CI/Unit Tests]   | [NGSIEvent.getEntityForNaming] -------------------------------  OK  - The original entity (not encoded) has been returned\n[CI/Unit Tests]   | [NGSIEvent.getServicePathForNaming] --------------------------------- When grouping is enabled, the grouped service path is returned\n[CI/Unit Tests]   | [NGSIEvent.getServicePathForNaming] --------------------------  OK  - The grouped service path has been returned\n[CI/Unit Tests]   | [NGSIEvent.setBody] ------------------------------------------------- Bytes are correctly set\n[CI/Unit Tests]   | [NGSIEvent.setBody] ------------------------------------------  OK  - Bytes regarding the original context element have been returned\n[CI/Unit Tests]   | [NGSIEvent.getEntityForNaming] -------------------------------------- When grouping and mappings are not enabled and new encoding is enabled, the original entity (encoded) is returned\n[CI/Unit Tests]   | [NGSIEvent.getEntityForNaming] -------------------------------  OK  - The original entity (not encoded) has been returned\n[CI/Unit Tests]   | Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.832 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSIPostgreSQLSinkTest\n[CI/Unit Tests]   | [NGSILDPostgreSQLSink.configure] ------------------------------------ data_model can only be 'dm-by-entity' or 'dm-by-entity-type'\n[CI/Unit Tests]   | nulltest\n[CI/Unit Tests]   | [NGSILDPostgreSQLSink.configure] -----------------------------  OK  - 'data_model=entity' was detected\n[CI/Unit Tests]   | [NGSILDPostgreSQLSink.buildTableName] ------------------------------- When a non root service-path is notified/defaulted and data_model is 'dm-by-service-path' the MySQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | Vehicle\n[CI/Unit Tests]   | [NGSILDPostgreSQLSink.buildTableName] ------------------------  OK  - 'Vehicle' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSILDPostgreSQLSink.configure] ------------------------------------ attr_persistence can only be 'column'\n[CI/Unit Tests]   | true\n[CI/Unit Tests]   | [NGSILDPostgreSQLSink.configure] -----------------------------  OK  - 'attr_persistence=column' was detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.configure] -------------------------------------- cache can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.configure] -------------------------------  OK  - 'enable_cache=falso' was detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.configure] -------------------------------------- enable_grouping can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSILDPostgreSQLSink.configure] -----------------------------  OK  - 'enable_grouping=falso' was detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildDBName] ------------------------------------ The schema name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSILDPostgreSQLSink.buildDBName] ---------------------------  OK  - 'somex0053ervice' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.configure] -------------------------------------- enable_lowercase can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.configure] -------------------------------  OK  - 'enable_lowercase=false' was detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When a non root service-path is notified/defaulted and data_model is 'dm-by-service-path' the MySQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSILDPostgreSQLSink.buildTableName] ------------------------  OK  - 'urnx003angsix002dldx003ax0056ehiclex003ax0056123' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.configure] -------------------------------------- enable_encoding can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSILDPostgreSQLSink.configure] -----------------------------  OK  - 'enable_encoding=false' was detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildSchemaName] -------------------------------- A schema name length greater than 63 characters is detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildSchemaName] -------------------------  OK  - A schema name length greater than 63 characters has been detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When data model is by entity type, a table name length greater than 63 characters is detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - A table name length greater than 63 characters has been detected\n[CI/Unit Tests]   | [NGSILDPostgreSQLSink.buildDBName] ---------------------------------- The schema name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSILDPostgreSQLSink.buildDBName] ---------------------------  OK  - 'someService' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSILDPostgreSQLSink.buildTableName] ------------------------------- When a non root service-path is notified/defaulted and data_model is 'dm-by-service-path' the MySQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | urn_ngsi_ld_Vehicle_V123\n[CI/Unit Tests]   | [NGSILDPostgreSQLSink.buildTableName] ------------------------  OK  - 'urn_ngsi_ld_Vehicle_V123' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When data model is by entity, a table name length greater than 63 characters is detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------  OK  - A table name length greater than 63 characters has been detected\n[CI/Unit Tests]   | [NGSIPostgreSQLSink.buildTableName] --------------------------------- When a non root service-path is notified/defaulted and data_model is 'dm-by-service-path' the MySQL table name is the encoding of the concatenation of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSILDPostgreSQLSink.buildTableName] ------------------------  OK  - 'x0056ehicle' is equals to the encoding of <service-path>, <entityId> and <entityType>\n[CI/Unit Tests]   | Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.057 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSICKANSinkTest\n[CI/Unit Tests]   | [NGSICKANSink.buildResName] ----------------------------------------- When encoding, the CKAN resource name is the encoding of the concatenation of the notified <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSICKANSink.buildResName] ----------------------------------  OK  - 'somex0049dxffffsomex0054ype' is equals to the encoding of <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSICKANSink.buildOrgName] ----------------------------------------- When confOrganization, the org name is equals to subservice/fiwareServicePath\n[CI/Unit Tests]   | [NGSICKANSink.buildOrgName] ----------------------------------  OK  - 'someSubService' is equals to the subservice\n[CI/Unit Tests]   | [NGSICKANSink.buildResName] ----------------------------------------- A resource name length greater than 100 characters is detected\n[CI/Unit Tests]   | [NGSICKANSink.buildResName] ----------------------------------  OK  - A resource name length greater than 100 characters has been detected\n[CI/Unit Tests]   | [NGSICKANSink.buildOrgName] ----------------------------------------- An organization name length greater than 100 characters is detected\n[CI/Unit Tests]   | [NGSICKANSink.buildOrgName] ----------------------------------  OK  - An organization name length greater than 100 characters has been detected\n[CI/Unit Tests]   | [NGSICKANSink.buildResName] ----------------------------------------- When no encoding, the CKAN resource name is the encoding of the concatenation of the notified <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSICKANSink.buildResName] ----------------------------------  OK  - 'someid_sometype' is equals to the encoding of <entityId> and <entityType>\n[CI/Unit Tests]   | [NGSICKANSink.buildOrgName] ----------------------------------------- When no encoding, the org name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSICKANSink.buildOrgName] ----------------------------------  OK  - 'someservice' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------------- attr_persistence can only be 'row' or 'column'\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'attr_persistence=fila' was detected\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------------- enable_grouping can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'enable_grouping=falso' was detected\n[CI/Unit Tests]   | [NGSICKANSink.buildPkgName] ----------------------------------------- When confOrganization, the resourceName is equals to entityId\n[CI/Unit Tests]   | [NGSICKANSink.buildResName] ----------------------------------  OK  - 'entityId' is equals to the entityId\n[CI/Unit Tests]   | [NGSICKANSink.buildOrgName] ----------------------------------------- When encoding, the org name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSICKANSink.buildOrgName] ----------------------------------  OK  - 'somex0053ervice' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------------- enable_lowercase can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'enable_lowercase=falso' was detected\n[CI/Unit Tests]   | [NGSICKANSink.buildPkgName] ----------------------------------------- A resource name length greater than 100 characters is detected\n[CI/Unit Tests]   | [NGSICKANSink.buildPkgName] ----------------------------------  OK  - A package name length greater than 100 characters has been detected\n[CI/Unit Tests]   | [NGSICKANSink.buildPkgName] ----------------------------------------- When confOrganization, the pkgName is equals to entityId\n[CI/Unit Tests]   | [NGSICKANSink.buildPkgName] ----------------------------------  OK  - 'entityId' is equals to the entityId\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------------- enable_encoding can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'enable_encoding=falso' was detected\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------------- Parameters gets the configured value\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'backend.max_conns=25' was configured\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'backend.max_conns_per_route=3' was configured\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'ckan_viewer=recline_view' was configured\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------------- When not configured, not mandatory parameters get default values\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'attr_persistence=row' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'api_key=nokey' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'backend.max_conns=500' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'backend.max_conns_per_route=100' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'batch_size=1' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'batch_timeout=30' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'batch_ttl=30' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'data_model=dm-by-entity' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'enable_encoding=false' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'enable_grouping=false' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'enable_lowercase=true' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'ckan_host=localhost' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'ckan_port=80' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'ssl=false' configured by default\n[CI/Unit Tests]   | [NGSICKANSink.configure] -------------------------------------  OK  - 'ckan_viewer=recline_grid_view' configured by default\n[CI/Unit Tests]   | Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.021 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.sinks.NGSIPostgisSinkTest\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------------- attr_persistence can only be 'column'\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------  OK  - 'attr_persistence=column' was detected\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------------- cache can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------  OK  - 'enable_cache=falso' was detected\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------------- postgisOptions is null when postgis_options is not configured\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------  OK  - postgisOptions is null when it is not configured\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameNewEncodingDatabaseDataModel] -------- The DB name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameNewEncodingDatabaseDataModel] -  OK  - 'somex0053ervice' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameNewEncoding] ------------------------ The DB name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameNewEncoding] -----------------  OK  - 'postgres' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------------- enable_lowercase can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------  OK  - 'enable_lowercase=falso' was detected\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildSchemaNameNewEncoding] -------------------- The schema name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildSchemaNameNewEncoding] -------------  OK  - 'somex0053ervice' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------------- enable_encoding can only be 'true' or 'false'\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------  OK  - 'enable_encoding=falso' was detected\n[CI/Unit Tests]   | [NGSIPostgisSink.buildSchemaName] ----------------------------------- A schema name length greater than 63 characters is detected\n[CI/Unit Tests]   | [NGSIPostgisSink.buildSchemaName] ----------------------------  OK  - A schema name length greater than 63 characters has been detected\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------------- postgisOptions has value when postgis_options is configured\n[CI/Unit Tests]   | [NGSIPostgisSink.configure] ----------------------------------  OK  - postgisOptions has value when it is configured\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameOldEncoding] ------------------------ The db name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameOldEncoding] -----------------  OK  - 'postgres' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameOldEncodingDatabaseDataModel] -------- The db name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgisSink.testBuildDBNameOldEncodingDatabaseDataModel] -  OK  - 'someService' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildSchemaName] ----------------------------------- The schema name is equals to the encoding of the notified/defaulted service\n[CI/Unit Tests]   | [NGSIPostgisSink.buildSchemaName] ----------------------------  OK  - 'someService' is equals to the encoding of <service>\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When data model is by entity, a table name length greater than 63 characters is detected\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ----------------------------- FAIL - A table name length greater than 63 characters has not been detected\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ------------------------------------ When data model is by entity, a table name length greater than 63 characters is detected\n[CI/Unit Tests]   | [NGSIPostgisSink.buildTableName] ----------------------------- FAIL - A table name length greater than 63 characters has not been detected\n[CI/Unit Tests]   | Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.containers.NotifyContextRequestLDTest\n[CI/Unit Tests]   | [NotifyContextRequest.ContextElement.getType] ----------------------- The entity type can be retrieved\n[CI/Unit Tests]   | [NotifyContextRequest.ContextElement.getType] ----------------  OK  - The retrieved entity type matches the expected one\n[CI/Unit Tests]   | [NotifyContextRequest.ContextElement.getId] ------------------------- The entity ID can be retrieved\n[CI/Unit Tests]   | [NotifyContextRequest.ContextElement.getId] ------------------  OK  - The retrieved entity ID matches the expected one\n[CI/Unit Tests]   | [NotifyContextRequest.toString] ------------------------------------- String representation of this object is OK\n[CI/Unit Tests]   | [NotifyContextRequest.toString] ------------------------------  OK  - The string representation of this object is OK\n[CI/Unit Tests]   | [NotifyContextRequest.ContextElement.toString] ---------------------- String representation of this object is OK\n[CI/Unit Tests]   | {\"id\":\"urn:ngsi-ld:Vehicle:V123\",\"type\":\"Vehicle\",{closeTo={\"type\":\"Relationship\",\"object\":\"urn:ngsi-ld:Building:B1234\"}, location={\"type\":\"GeoProperty\",\"value\":{\"type\":\"Point\",\"coordinates\":[-8,44]}}, speed={\"type\":\"Property\",\"value\":23,\"accuracy\":{\"type\":\"Property\",\"value\":0.7},\"providedBy\":{\"type\":\"Relationship\",\"object\":\"urn:ngsi-ld:Person:Bob\"}}}}\n[CI/Unit Tests]   | [NotifyContextRequest.getSubscriptionId] ---------------------------- Subscription ID can be retrieved\n[CI/Unit Tests]   | {\"subscriptionId\":\"51c0ac9ed714fb3b37d7d5a8\",\"data\":null}\n[CI/Unit Tests]   | [NotifyContextRequest.getSubscriptionId] ---------------------  OK  - The retrieved subscription ID matches the expected one\n[CI/Unit Tests]   | Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 sec\n[CI/Unit Tests]   | Running com.telefonica.iot.cygnus.handlers.NGSIRestHandlerTest\n[CI/Unit Tests]   | WARNING: An illegal reflective access operation has occurred\n[CI/Unit Tests]   | WARNING: Illegal reflective access by org.mockito.cglib.core.ReflectUtils$2 (file:/home/runneradmin/.m2/repository/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\n[CI/Unit Tests]   | WARNING: Please consider reporting this to the maintainers of org.mockito.cglib.core.ReflectUtils$2\n[CI/Unit Tests]   | WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\n[CI/Unit Tests]   | WARNING: All illegal access operations will be denied in a future release\n[CI/Unit Tests]   | [NGSIRestHandler.generateUniqueId] ---------------------------------- When a correlation ID is genereated, both generated correlation ID and generated transaction ID have the same value\n[CI/Unit Tests]   | [NGSIRestHandler.generateUniqueId] ---------------------------  OK  - The generated transaction ID '1234567890-123-1234567890' is equals to the generated correlator ID '1234567890-123-1234567890'\n[CI/Unit Tests]   | [NGSIRestHandler.getEventsLD] --------------------------------------- When a notification LD is sent as a Http message, a single Flume event is generated\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - A single LD event has been generated\n[CI/Unit Tests]   | [NGSIRestHandler.wrongServiceHeaderLength] -------------------------- A FIWARE service header whose length is greater than 50 characters is detected\n[CI/Unit Tests]   | [NGSIRestHandler.wrongServiceHeaderLength] -------------------  OK  - A wrong FIWARE service header 'thisIsAFiwareServiceHeaderWhoseLengthIsGreaterThanTheAccepted50CharactersLimit' has been detected\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------------- When a the configuration is wrong, no evetns are obtained\n[CI/Unit Tests]   | 18:12:12.821 [main] ERROR com.telefonica.iot.cygnus.handlers.NGSIRestHandler - [NGSIRestHandler] Bad configuration (notification_target=notify) -- Must start with '/'\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - No events are processed since the configuration is wrong\n[CI/Unit Tests]   | [NGSIRestHandler.generateUniqueId] ---------------------------------- An internal transaction ID is generated\n[CI/Unit Tests]   | [NGSIRestHandler.generateUniqueId] ---------------------------  OK  - An internal transaction ID 'd5492e35-3fa4-4484-8eea-c2c6d995654b' has been generated\n[CI/Unit Tests]   | [NGSIRestHandler.configure] ----------------------------------------- The configured notification target must start with '/'\n[CI/Unit Tests]   | [NGSIRestHandler.configure] ----------------------------------  OK  - The configured notification target '/notify' starts with '/'\n[CI/Unit Tests]   | [NGSIRestHandler.configure] ----------------------------------------- When not configured, the default values are used for non mandatory parameters\n[CI/Unit Tests]   | [NGSIRestHandler.configure] ----------------------------------  OK  - The default configuration value for 'notification_target' is '/notify'\n[CI/Unit Tests]   | [NGSIRestHandler.configure] ----------------------------------  OK  - The default configuration value for 'default_service' is 'default'\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------------- When a Flume event is generated, it contains fiware-service,fiware-correlator and transaction-id headers\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The generated Flume event contains 'fiware-service'\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The generated Flume event contains 'fiware-correlator'\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The generated Flume event contains 'transaction-id'\n[CI/Unit Tests]   | [NGSIRestHandler.configure] ----------------------------------------- The configured default service can only contain alphanumerics and underscores\n[CI/Unit Tests]   | 18:12:12.850 [main] ERROR com.telefonica.iot.cygnus.handlers.NGSIRestHandler - [NGSIRestHandler] Bad configuration ('default_service' parameter can only contain alphanumerics or underscores)\n[CI/Unit Tests]   | [NGSIRestHandler.configure] ----------------------------------  OK  - The configured default service 'default-service!!' was detected as invalid\n[CI/Unit Tests]   | [NGSIRestHandler.generateUniqueId] ---------------------------------- When a correlation ID is not notified, it is generated\n[CI/Unit Tests]   | [NGSIRestHandler.generateUniqueId] ---------------------------  OK  - The transaction ID has been generated\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------------- When a notification is sent, the headers are valid\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The value for 'Content-Type' header is 'application/json; charset=utf-8'\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The value for 'fiware-servicePath' header starts with '/'\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The length of 'fiware-service' header value is  less or equal than '50'\n[CI/Unit Tests]   | [NGSIRestHandler.getEvents] ----------------------------------  OK  - The length of 'fiware-servicePath' header value is less or equal than '50'\n[CI/Unit Tests]   | [NGSIRestHandler.wrongContentType] ---------------------------------- A content-type different than 'application/json; charset=utf-8' is detected\n[CI/Unit Tests]   | [NGSIRestHandler.wrongContentType] ---------------------------  OK  - A wrong content-type 'application/url-encode' has been detected\n[CI/Unit Tests]   | [NGSIRestHandler.generateUniqueId] ---------------------------------- When a correlator ID is notified, it is reused\n[CI/Unit Tests]   | [NGSIRestHandler.generateUniqueId] ---------------------------  OK  - The notified transaction ID '1234567890-123-1234567890' has been reused\n[CI/Unit Tests]   | Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.25 sec\n[CI/Unit Tests]   | \n[CI/Unit Tests]   | Results :\n[CI/Unit Tests]   | \n[CI/Unit Tests]   | Tests run: 76, Failures: 0, Errors: 0, Skipped: 0\n[CI/Unit Tests]   | \n[CI/Unit Tests]   \u2705  Success - Main cygnus-ngsi-ld Unit Tests (Java 11)\n[CI/Unit Tests] \u2b50 Run Post Use Java 11\n[CI/Unit Tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[CI/Unit Tests]   \u2705  Success - Post Use Java 11\n[CI/Unit Tests] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}