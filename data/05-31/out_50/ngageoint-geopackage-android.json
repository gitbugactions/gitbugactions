{
    "repository": "ngageoint/geopackage-android",
    "clone_url": "https://github.com/ngageoint/geopackage-android.git",
    "timestamp": "2023-05-28T18:55:28.756862Z",
    "clone_success": true,
    "number of actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Test/test] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/ngageoint-geopackage-android] user=0 workdir=\n[Test/test]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v3\n[Test/test] Non-terminating error while running 'git clone': some refs were not updated\n[Test/test]   \u2601  git clone 'https://github.com/reactivecircus/android-emulator-runner' # ref=v2\n[Test/test] \u2b50 Run Main Checkout Repository\n[Test/test]   \u2705  Success - Main Checkout Repository\n[Test/test] \u2b50 Run Main set up JDK 11\n[Test/test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v3/ dst=/var/run/act/actions/actions-setup-java@v3/\n[Test/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v3/] user=0 workdir=\n[Test/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/setup/index.js] user= workdir=\n[Test/test]   \u2753  ::group::Installed distributions\n[Test/test]   | Trying to resolve the latest version from remote\n[Test/test]   | Resolved latest version as 11.0.19+7\n[Test/test]   | Trying to download...\n[Test/test]   | Downloading Java 11.0.19+7 (Temurin-Hotspot) from https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.19%2B7/OpenJDK11U-jdk_x64_linux_hotspot_11.0.19_7.tar.gz ...\n[Test/test]   \ud83d\udcac  ::debug::Downloading https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.19%252B7/OpenJDK11U-jdk_x64_linux_hotspot_11.0.19_7.tar.gz\n[Test/test]   \ud83d\udcac  ::debug::Destination /tmp/06b89888-09ff-4f02-af7a-8e45e477cd6e\n[Test/test]   \ud83d\udcac  ::debug::download complete\n[Test/test]   | Extracting Java archive...\n[Test/test]   \ud83d\udcac  ::debug::Checking tar --version\n[Test/test]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Test/test]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/a3c4cd7d-a726-4ba8-8267-2f8652f97dc3 -f /tmp/06b89888-09ff-4f02-af7a-8e45e477cd6e\n[Test/test]   \ud83d\udcac  ::debug::Caching tool Java_Temurin-Hotspot_jdk 11.0.19-7 x64\n[Test/test]   \ud83d\udcac  ::debug::source dir: /tmp/a3c4cd7d-a726-4ba8-8267-2f8652f97dc3/jdk-11.0.19+7\n[Test/test]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test/test]   \ud83d\udcac  ::debug::finished caching tool\n[Test/test]   | Java 11.0.19+7 was downloaded\n[Test/test]   | Setting Java 11.0.19+7 as the default\n[Test/test]   | Creating toolchains.xml for JDK version 11 from temurin\n[Test/test]   | Writing to /home/runneradmin/.m2/toolchains.xml\n[Test/test]   | \n[Test/test]   | Java configuration:\n[Test/test]   |   Distribution: temurin\n[Test/test]   |   Version: 11.0.19+7\n[Test/test]   |   Path: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test/test]   | \n[Test/test]   \u2753  ::endgroup::\n[Test/test]   \u2753 add-matcher /run/act/actions/actions-setup-java@v3/.github/java.json\n[Test/test]   | Creating settings.xml with server-id: github\n[Test/test]   | Writing to /home/runneradmin/.m2/settings.xml\n[Test/test]   \u2705  Success - Main set up JDK 11\n[Test/test]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test/test]   \u2699  ::set-env:: JAVA_HOME_11_X64=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test/test]   \u2699  ::set-output:: version=11.0.19+7\n[Test/test]   \u2699  ::set-output:: distribution=Temurin-Hotspot\n[Test/test]   \u2699  ::set-output:: path=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64/bin\n[Test/test] \u2b50 Run Main Run Tests\n[Test/test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/reactivecircus-android-emulator-runner@v2/ dst=/var/run/act/actions/reactivecircus-android-emulator-runner@v2/\n[Test/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/reactivecircus-android-emulator-runner@v2/] user=0 workdir=\n[Test/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/reactivecircus-android-emulator-runner@v2/lib/main.js] user= workdir=\n[Test/test]   \u2753  ::group::Configure emulator\n[Test/test]   | You're running a Linux VM where hardware acceleration is not available. Please consider using a macOS VM instead to take advantage of native hardware acceleration support provided by HAXM.\n[Test/test]   | API level: 29\n[Test/test]   | target: default\n[Test/test]   | CPU architecture: x86\n[Test/test]   | Hardware profile: \n[Test/test]   | Cores: 2\n[Test/test]   | RAM size: \n[Test/test]   | Heap size: \n[Test/test]   | SD card path or size: \n[Test/test]   | Disk size: \n[Test/test]   | AVD name: test\n[Test/test]   | force avd creation: true\n[Test/test]   | Emulator boot timeout: 600\n[Test/test]   | emulator options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim\n[Test/test]   | disable animations: true\n[Test/test]   | disable spellchecker: false\n[Test/test]   | disable Linux hardware acceleration: true\n[Test/test]   | enable hardware keyboard: false\n[Test/test]   | Channel: 0 (stable)\n[Test/test]   | Script:\n[Test/test]   | ./gradlew connectedAndroidTest\n[Test/test]   | Pre emulator launch script:\n[Test/test]   \u2753  ::endgroup::\n[Test/test]   \u2753  ::group::Install Android SDK\n[Test/test]   | [command]/usr/bin/sh -c \\sudo chown $USER:$USER undefined -R\n[Test/test]   | chown: cannot access 'undefined': No such file or directory\n[Test/test]   \u2753  ::endgroup::\n[Test/test]   \u2753  ::group::Terminate Emulator\n[Test/test]   | Unable to locate executable file: adb. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Test/test]   \u2753  ::endgroup::\n[Test/test]   \u2757  ::error::The process '/usr/bin/sh' failed with exit code 1\n[Test/test]   \u274c  Failure - Main Run Tests\n[Test/test] exitcode '1': failure\n[Test/test] \u2b50 Run Post set up JDK 11\n[Test/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/cleanup/index.js] user= workdir=\n[Test/test]   \u2705  Success - Post set up JDK 11\n[Test/test] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'test' failed\n"
}