{
    "repository": "frosch95/SmartCSV.fx",
    "clone_url": "https://github.com/frosch95/SmartCSV.fx.git",
    "timestamp": "2023-05-28T19:03:58.972141Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Build and Test with Gradle/build] \ud83d\ude80  Start image=crawlergpt:latest\n[Build and Test with Gradle/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build and Test with Gradle/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and Test with Gradle/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and Test with Gradle/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/frosch95-SmartCSV.fx] user=0 workdir=\n[Build and Test with Gradle/build]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[Build and Test with Gradle/build] Non-terminating error while running 'git clone': some refs were not updated\n[Build and Test with Gradle/build] \u2b50 Run Main actions/checkout@v2\n[Build and Test with Gradle/build]   \u2705  Success - Main actions/checkout@v2\n[Build and Test with Gradle/build] \u2b50 Run Main Set up JDK 17\n[Build and Test with Gradle/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[Build and Test with Gradle/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[Build and Test with Gradle/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[Build and Test with Gradle/build]   \ud83d\udcac  ::debug::isExplicit: \n[Build and Test with Gradle/build]   \ud83d\udcac  ::debug::explicit? false\n[Build and Test with Gradle/build]   \ud83d\udcac  ::debug::evaluating 0 versions\n[Build and Test with Gradle/build]   \ud83d\udcac  ::debug::match not found\n[Build and Test with Gradle/build]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[Build and Test with Gradle/build]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[Build and Test with Gradle/build]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu17.42.21-ca-crac-jdk17.0.7-linux_x64.tar.gz\n[Build and Test with Gradle/build]   \ud83d\udcac  ::debug::Downloading /tmp/edb21064-3266-4f18-9bab-19dfc7d1341f\n[Build and Test with Gradle/build]   \ud83d\udcac  ::debug::download complete\n[Build and Test with Gradle/build]   | [command]/usr/bin/tar --version\n[Build and Test with Gradle/build]   | tar (GNU tar) 1.30\n[Build and Test with Gradle/build]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[Build and Test with Gradle/build]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[Build and Test with Gradle/build]   | This is free software: you are free to change and redistribute it.\n[Build and Test with Gradle/build]   | There is NO WARRANTY, to the extent permitted by law.\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | Written by John Gilmore and Jay Fenlason.\n[Build and Test with Gradle/build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_381124885 -f /tmp/edb21064-3266-4f18-9bab-19dfc7d1341f\n[Build and Test with Gradle/build]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_381124885/zulu17.42.21-ca-crac-jdk17.0.7-linux_x64\n[Build and Test with Gradle/build]   \ud83d\udcac  ::debug::Caching tool jdk 17.0.7 x64\n[Build and Test with Gradle/build]   \ud83d\udcac  ::debug::source dir: /tmp/temp_381124885/zulu17.42.21-ca-crac-jdk17.0.7-linux_x64\n[Build and Test with Gradle/build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/17.0.7/x64\n[Build and Test with Gradle/build]   \ud83d\udcac  ::debug::finished caching tool\n[Build and Test with Gradle/build]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[Build and Test with Gradle/build]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[Build and Test with Gradle/build]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[Build and Test with Gradle/build]   | writing /home/runneradmin/.m2/settings.xml\n[Build and Test with Gradle/build]   \u2705  Success - Main Set up JDK 17\n[Build and Test with Gradle/build]   \u2699  ::set-env:: JAVA_HOME_17.0.7_x64=/opt/hostedtoolcache/jdk/17.0.7/x64\n[Build and Test with Gradle/build]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/17.0.7/x64\n[Build and Test with Gradle/build]   \u2699  ::set-env:: JAVA_HOME_17_0_7_X64=/opt/hostedtoolcache/jdk/17.0.7/x64\n[Build and Test with Gradle/build]   \u2699  ::set-output:: version=17.0.7\n[Build and Test with Gradle/build]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/17.0.7/x64\n[Build and Test with Gradle/build]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/17.0.7/x64/bin\n[Build and Test with Gradle/build] \u2b50 Run Main Grant execute permission for gradlew\n[Build and Test with Gradle/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Build and Test with Gradle/build]   \u2705  Success - Main Grant execute permission for gradlew\n[Build and Test with Gradle/build] \u2b50 Run Main Build with Gradle\n[Build and Test with Gradle/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Build and Test with Gradle/build]   | Downloading https://services.gradle.org/distributions/gradle-7.2-bin.zip\n[Build and Test with Gradle/build]   | .............................................................................................................\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | Welcome to Gradle 7.2!\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | Here are the highlights of this release:\n[Build and Test with Gradle/build]   |  - Toolchain support for Scala\n[Build and Test with Gradle/build]   |  - More cache hits when Java source files have platform-specific line endings\n[Build and Test with Gradle/build]   |  - More resilient remote HTTP build cache behavior\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | For more details see https://docs.gradle.org/7.2/release-notes.html\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | > Configure project :\n[Build and Test with Gradle/build]   | Project : => no module-info.java found\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | > Task :compileJava\n[Build and Test with Gradle/build]   | Note: Some input files use unchecked or unsafe operations.\n[Build and Test with Gradle/build]   | Note: Recompile with -Xlint:unchecked for details.\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | > Task :compileGroovy NO-SOURCE\n[Build and Test with Gradle/build]   | > Task :processResources\n[Build and Test with Gradle/build]   | > Task :classes\n[Build and Test with Gradle/build]   | > Task :jar\n[Build and Test with Gradle/build]   | > Task :startScripts\n[Build and Test with Gradle/build]   | > Task :distTar\n[Build and Test with Gradle/build]   | > Task :distZip\n[Build and Test with Gradle/build]   | > Task :assemble\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | > Task :compileTestJava\n[Build and Test with Gradle/build]   | Note: Some input files use unchecked or unsafe operations.\n[Build and Test with Gradle/build]   | Note: Recompile with -Xlint:unchecked for details.\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | > Task :compileTestGroovy NO-SOURCE\n[Build and Test with Gradle/build]   | > Task :processTestResources NO-SOURCE\n[Build and Test with Gradle/build]   | > Task :testClasses\n[Build and Test with Gradle/build]   | > Task :test\n[Build and Test with Gradle/build]   | > Task :check\n[Build and Test with Gradle/build]   | > Task :build\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | See https://docs.gradle.org/7.2/userguide/command_line_interface.html#sec:command_line_warnings\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | BUILD SUCCESSFUL in 56s\n[Build and Test with Gradle/build]   | 8 actionable tasks: 8 executed\n[Build and Test with Gradle/build]   \u2705  Success - Main Build with Gradle\n[Build and Test with Gradle/build] \u2b50 Run Main Test with Gradle\n[Build and Test with Gradle/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | > Configure project :\n[Build and Test with Gradle/build]   | Project : => no module-info.java found\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | > Task :compileJava UP-TO-DATE\n[Build and Test with Gradle/build]   | > Task :compileGroovy NO-SOURCE\n[Build and Test with Gradle/build]   | > Task :processResources UP-TO-DATE\n[Build and Test with Gradle/build]   | > Task :classes UP-TO-DATE\n[Build and Test with Gradle/build]   | > Task :compileTestJava UP-TO-DATE\n[Build and Test with Gradle/build]   | > Task :compileTestGroovy NO-SOURCE\n[Build and Test with Gradle/build]   | > Task :processTestResources NO-SOURCE\n[Build and Test with Gradle/build]   | > Task :testClasses UP-TO-DATE\n[Build and Test with Gradle/build]   | > Task :test UP-TO-DATE\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | See https://docs.gradle.org/7.2/userguide/command_line_interface.html#sec:command_line_warnings\n[Build and Test with Gradle/build]   | \n[Build and Test with Gradle/build]   | BUILD SUCCESSFUL in 1s\n[Build and Test with Gradle/build]   | 4 actionable tasks: 4 up-to-date\n[Build and Test with Gradle/build]   \u2705  Success - Main Test with Gradle\n[Build and Test with Gradle/build] \u2b50 Run Post Set up JDK 17\n[Build and Test with Gradle/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[Build and Test with Gradle/build]   \u2705  Success - Post Set up JDK 17\n[Build and Test with Gradle/build] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}