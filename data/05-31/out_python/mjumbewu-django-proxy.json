{
    "repository": "mjumbewu/django-proxy",
    "clone_url": "https://github.com/mjumbewu/django-proxy.git",
    "timestamp": "2023-05-29T14:45:43.897124Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Tests/build] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/mjumbewu-django-proxy] user=0 workdir=\n[Tests/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[Tests/build] \ud83e\uddea  Matrix: map[django:3.2 python:3.9]\n[Tests/build] \u2b50 Run Main actions/checkout@v3\n[Tests/build]   \u2705  Success - Main actions/checkout@v3\n[Tests/build] \u2b50 Run Main Setup Python\n[Tests/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[Tests/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[Tests/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[Tests/build]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[Tests/build]   \u2753  ::group::Installed versions\n[Tests/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.9 is 3.9\n[Tests/build]   \ud83d\udcac  ::debug::isExplicit: \n[Tests/build]   \ud83d\udcac  ::debug::explicit? false\n[Tests/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Tests/build]   \ud83d\udcac  ::debug::explicit? true\n[Tests/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Tests/build]   \ud83d\udcac  ::debug::explicit? true\n[Tests/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Tests/build]   \ud83d\udcac  ::debug::explicit? true\n[Tests/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Tests/build]   \ud83d\udcac  ::debug::explicit? true\n[Tests/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Tests/build]   \ud83d\udcac  ::debug::explicit? true\n[Tests/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Tests/build]   \ud83d\udcac  ::debug::explicit? true\n[Tests/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Tests/build]   \ud83d\udcac  ::debug::matched: 3.9.6\n[Tests/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[Tests/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[Tests/build]   | Successfully set up CPython (3.9.6)\n[Tests/build]   \u2753  ::endgroup::\n[Tests/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[Tests/build]   \u2705  Success - Main Setup Python\n[Tests/build]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[Tests/build]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[Tests/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[Tests/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[Tests/build]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib/pkgconfig\n[Tests/build]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[Tests/build]   \u2699  ::set-output:: python-version=3.9.6\n[Tests/build]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.9.6/x64/bin/python\n[Tests/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[Tests/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[Tests/build] \u2b50 Run Main Install tox\n[Tests/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Tests/build]   | Collecting tox\n[Tests/build]   |   Downloading tox-4.5.2-py3-none-any.whl (148 kB)\n[Tests/build]   | Collecting platformdirs>=3.5.1\n[Tests/build]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[Tests/build]   | Collecting pluggy>=1\n[Tests/build]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[Tests/build]   | Collecting packaging>=23.1\n[Tests/build]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[Tests/build]   | Collecting filelock>=3.12\n[Tests/build]   |   Downloading filelock-3.12.0-py3-none-any.whl (10 kB)\n[Tests/build]   | Collecting virtualenv>=20.23\n[Tests/build]   |   Downloading virtualenv-20.23.0-py3-none-any.whl (3.3 MB)\n[Tests/build]   | Collecting tomli>=2.0.1\n[Tests/build]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[Tests/build]   | Collecting chardet>=5.1\n[Tests/build]   |   Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n[Tests/build]   | Collecting cachetools>=5.3\n[Tests/build]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[Tests/build]   | Collecting colorama>=0.4.6\n[Tests/build]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[Tests/build]   | Collecting pyproject-api>=1.5.1\n[Tests/build]   |   Downloading pyproject_api-1.5.1-py3-none-any.whl (12 kB)\n[Tests/build]   | Collecting distlib<1,>=0.3.6\n[Tests/build]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[Tests/build]   | Installing collected packages: tomli, platformdirs, packaging, filelock, distlib, virtualenv, pyproject-api, pluggy, colorama, chardet, cachetools, tox\n[Tests/build]   | Successfully installed cachetools-5.3.1 chardet-5.1.0 colorama-0.4.6 distlib-0.3.6 filelock-3.12.0 packaging-23.1 platformdirs-3.5.1 pluggy-1.0.0 pyproject-api-1.5.1 tomli-2.0.1 tox-4.5.2 virtualenv-20.23.0\n[Tests/build]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Tests/build]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.9.6/x64/bin/python -m pip install --upgrade pip' command.\n[Tests/build]   \u2705  Success - Main Install tox\n[Tests/build] \u2b50 Run Main Run tox\n[Tests/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Tests/build]   | django3.2: install_deps> python -I -m pip install 'Django<4.0,>=3.2' -r requirements.txt\n[Tests/build]   | .pkg: install_requires> python -I -m pip install 'setuptools>=40.8.0' wheel\n[Tests/build]   | .pkg: _optional_hooks> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[Tests/build]   | .pkg: get_requires_for_build_wheel> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[Tests/build]   | .pkg: install_requires_for_build_wheel> python -I -m pip install wheel\n[Tests/build]   | .pkg: freeze> python -m pip freeze --all\n[Tests/build]   | .pkg: pip==23.1.2,setuptools==67.7.2,wheel==0.40.0\n[Tests/build]   | .pkg: build_wheel> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[Tests/build]   | django3.2: install_package_deps> python -I -m pip install requests\n[Tests/build]   | django3.2: install_package> python -I -m pip install --force-reinstall --no-deps /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/mjumbewu-django-proxy/.tox/.tmp/package/1/django_proxy-1.2.2-py3-none-any.whl\n[Tests/build]   | django3.2: freeze> python -m pip freeze --all\n[Tests/build]   | django3.2: asgiref==3.7.2,certifi==2023.5.7,charset-normalizer==3.1.0,Django==3.2.19,django-proxy @ file:///tmp/de65f406-fe28-11ed-a890-af2cc187fc11/mjumbewu-django-proxy/.tox/.tmp/package/1/django_proxy-1.2.2-py3-none-any.whl#sha256=da16c6f6009ef238c127a17ad4c4130d14197ff405ddede05c925a8680e986d6,idna==3.4,pip==23.1.2,pytz==2023.3,requests==2.31.0,setuptools==67.7.2,sqlparse==0.4.4,typing_extensions==4.6.2,urllib3==2.0.2,wheel==0.40.0\n[Tests/build]   | django3.2: commands[0]> python manage.py test\n[Tests/build]   | Creating test database for alias 'default'...\n[Tests/build]   | System check identified no issues (0 silenced).\n[Tests/build]   | ....\n[Tests/build]   | ----------------------------------------------------------------------\n[Tests/build]   | Ran 4 tests in 0.003s\n[Tests/build]   | \n[Tests/build]   | OK\n[Tests/build]   | Destroying test database for alias 'default'...\n[Tests/build]   | .pkg: _exit> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[Tests/build]   |   django3.2: OK (19.56=setup[18.69]+cmd[0.87] seconds)\n[Tests/build]   |   congratulations :) (19.80 seconds)\n[Tests/build]   \u2705  Success - Main Run tox\n[Tests/build] \u2b50 Run Post Setup Python\n[Tests/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[Tests/build]   \u2705  Success - Post Setup Python\n[Tests/build] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}