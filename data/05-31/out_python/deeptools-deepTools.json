{
    "repository": "deeptools/deepTools",
    "clone_url": "https://github.com/deeptools/deepTools.git",
    "timestamp": "2023-05-29T14:55:21.207429Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Test/Test on OSX  ] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/Test on Linux] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/Test on OSX  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/Test on Linux]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/Test on Linux]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/Test on OSX  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/Test on Linux]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/Test on OSX  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/Test on Linux]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/deeptools-deepTools] user=0 workdir=\n[Test/Test on OSX  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/deeptools-deepTools] user=0 workdir=\n[Test/Test on Linux]   \u2601  git clone 'https://github.com/dpryan79/github-actions' # ref=master\n[Test/Test on Linux]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=master\n[Test/Test on Linux] \u2b50 Run Main actions/checkout@v1\n[Test/Test on Linux]   \u2705  Success - Main actions/checkout@v1\n[Test/Test on Linux] \u2b50 Run Main dpryan79/github-actions/@master\n[Test/Test on Linux]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dpryan79-github-actions-@master/ dst=/var/run/act/actions/dpryan79-github-actions-@master/\n[Test/Test on Linux]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dpryan79-github-actions-@master/] user=0 workdir=\n[Test/Test on Linux]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/dpryan79-github-actions-@master/lib/main.js] user= workdir=\n[Test/Test on OSX  ]   \u2601  git clone 'https://github.com/dpryan79/github-actions' # ref=master\n[Test/Test on Linux]   | (node:32) UnhandledPromiseRejectionWarning: Error: EACCES: permission denied, mkdir '/home/runner/.conda'\n[Test/Test on Linux]   | (Use `node --trace-warnings ...` to show where the warning was created)\n[Test/Test on Linux]   | (node:32) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 1)\n[Test/Test on Linux]   | (node:32) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\n[Test/Test on Linux]   \u2705  Success - Main dpryan79/github-actions/@master\n[Test/Test on Linux] \u2b50 Run Main PEP8\n[Test/Test on OSX  ] \u2b50 Run Main actions/checkout@v1\n[Test/Test on OSX  ]   \u2705  Success - Main actions/checkout@v1\n[Test/Test on Linux]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test/Test on OSX  ] \u2b50 Run Main dpryan79/github-actions/@master\n[Test/Test on OSX  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dpryan79-github-actions-@master/ dst=/var/run/act/actions/dpryan79-github-actions-@master/\n[Test/Test on OSX  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dpryan79-github-actions-@master/] user=0 workdir=\n[Test/Test on Linux]   | /var/run/act/workflow/2: line 2: activate: No such file or directory\n[Test/Test on Linux]   \u274c  Failure - Main PEP8\n[Test/Test on OSX  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/dpryan79-github-actions-@master/lib/main.js] user= workdir=\n[Test/Test on Linux] exitcode '1': failure\n[Test/Test on OSX  ]   | (node:32) UnhandledPromiseRejectionWarning: Error: EACCES: permission denied, mkdir '/home/runner/.conda'\n[Test/Test on OSX  ]   | (Use `node --trace-warnings ...` to show where the warning was created)\n[Test/Test on OSX  ]   | (node:32) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 1)\n[Test/Test on OSX  ]   | (node:32) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\n[Test/Test on OSX  ]   \u2705  Success - Main dpryan79/github-actions/@master\n[Test/Test on OSX  ] \u2b50 Run Main Test deepTools\n[Test/Test on OSX  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test/Test on Linux] \ud83c\udfc1  Job failed\n[Test/Test on OSX  ]   | /var/run/act/workflow/2: line 3: activate: No such file or directory\n[Test/Test on OSX  ]   \u274c  Failure - Main Test deepTools\n[Test/Test on OSX  ] exitcode '1': failure\n[Test/Test on OSX  ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Test on Linux' failed\n"
}