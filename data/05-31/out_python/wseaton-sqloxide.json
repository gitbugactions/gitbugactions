{
    "repository": "wseaton/sqloxide",
    "clone_url": "https://github.com/wseaton/sqloxide.git",
    "timestamp": "2023-05-29T16:06:09.426002Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/lint] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/lint]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/lint]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/lint]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/lint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/wseaton-sqloxide] user=0 workdir=\n[CI/lint]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/lint]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/lint]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/lint]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1.0.1\n[CI/lint] \u2b50 Run Main Checkout\n[CI/lint]   \u2705  Success - Main Checkout\n[CI/lint] \u2b50 Run Main Install rust toolchain\n[CI/lint]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/lint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/lint]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/lint]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[CI/lint]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/lint]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/lint]   \ud83d\udcac  ::debug::Destination /tmp/a140486b-cf17-4df5-aa25-f9701e48f19b\n[CI/lint]   \ud83d\udcac  ::debug::download complete\n[CI/lint]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/a140486b-cf17-4df5-aa25-f9701e48f19b\n[CI/lint]   | [command]/tmp/a140486b-cf17-4df5-aa25-f9701e48f19b --default-toolchain none -y\n[CI/lint]   | info: downloading installer\n[CI/lint]   | info: profile set to 'default'\n[CI/lint]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/lint]   | info: skipping toolchain installation\n[CI/lint]   | \n[CI/lint]   | \n[CI/lint]   | Rust is installed now. Great!\n[CI/lint]   | \n[CI/lint]   | To get started you may need to restart your current shell.\n[CI/lint]   | This would reload your PATH environment variable to include\n[CI/lint]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/lint]   | \n[CI/lint]   | To configure your current shell, run:\n[CI/lint]   | source \"$HOME/.cargo/env\"\n[CI/lint]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/lint]   | Default host: x86_64-unknown-linux-gnu\n[CI/lint]   | rustup home:  /home/runneradmin/.rustup\n[CI/lint]   | \n[CI/lint]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/lint]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/lint]   | info: downloading component 'cargo'\n[CI/lint]   | info: downloading component 'clippy'\n[CI/lint]   | info: downloading component 'rust-docs'\n[CI/lint]   | info: downloading component 'rust-std'\n[CI/lint]   | info: downloading component 'rustc'\n[CI/lint]   | info: downloading component 'rustfmt'\n[CI/lint]   | info: installing component 'cargo'\n[CI/lint]   | info: installing component 'clippy'\n[CI/lint]   | info: installing component 'rust-docs'\n[CI/lint]   | 53 deferred IO operations\n[CI/lint]   | info: installing component 'rust-std'\n[CI/lint]   | info: installing component 'rustc'\n[CI/lint]   | info: installing component 'rustfmt'\n[CI/lint]   | stable-x86_64-unknown-linux-gnu (overridden by '/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/wseaton-sqloxide/rust-toolchain')\n[CI/lint]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/lint]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/lint]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/lint]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/lint]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[CI/lint]   | Installed rustup 1.26.0 support components\n[CI/lint]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable --component rustfmt --component clippy\n[CI/lint]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/lint]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/lint]   | info: component 'clippy' for target 'x86_64-unknown-linux-gnu' is up to date\n[CI/lint]   | info: component 'rustfmt' for target 'x86_64-unknown-linux-gnu' is up to date\n[CI/lint]   | \n[CI/lint]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/lint]   | \n[CI/lint]   | info: checking for self-update\n[CI/lint]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[CI/lint]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/lint]   | info: override toolchain for '/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/wseaton-sqloxide' set to 'stable-x86_64-unknown-linux-gnu'\n[CI/lint]   | \n[CI/lint]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/lint]   | \n[CI/lint]   \u2753  ::group::Gathering installed versions\n[CI/lint]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/lint]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/lint]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[CI/lint]   \u2699  ::set-output:: rustc_hash=84c898d65\n[CI/lint]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/lint]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[CI/lint]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[CI/lint]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/lint]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/lint]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/lint]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[CI/lint]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/lint]   \u2753  ::endgroup::\n[CI/lint]   \u2705  Success - Main Install rust toolchain\n[CI/lint]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/lint] \u2b50 Run Main Lint with rustfmt\n[CI/lint]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[CI/lint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[CI/lint]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[CI/lint]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[CI/lint]   | [command]/home/runneradmin/.cargo/bin/cargo fmt\n[CI/lint]   \u2705  Success - Main Lint with rustfmt\n[CI/lint] \u2b50 Run Main Lint with clippy\n[CI/lint]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[CI/lint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[CI/lint]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[CI/lint]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[CI/lint]   | [command]/home/runneradmin/.cargo/bin/cargo clippy --all-targets --all-features\n[CI/lint]   |     Updating crates.io index\n[CI/lint]   | From https://github.com/rust-lang/crates.io-index\n[CI/lint]   |  * [new ref]                          -> origin/HEAD\n[CI/lint]   |  Downloading crates ...\n[CI/lint]   |   Downloaded lock_api v0.4.9\n[CI/lint]   |   Downloaded serde_derive v1.0.163\n[CI/lint]   |   Downloaded pyo3-build-config v0.17.3\n[CI/lint]   |   Downloaded memoffset v0.6.5\n[CI/lint]   |   Downloaded pyo3-macros v0.17.3\n[CI/lint]   |   Downloaded pyo3-macros-backend v0.17.3\n[CI/lint]   |   Downloaded autocfg v1.1.0\n[CI/lint]   |   Downloaded pyo3-ffi v0.17.3\n[CI/lint]   |   Downloaded log v0.4.18\n[CI/lint]   |   Downloaded syn v1.0.109\n[CI/lint]   |   Downloaded unindent v0.1.11\n[CI/lint]   |   Downloaded sqlparser v0.33.0\n[CI/lint]   |   Downloaded scopeguard v1.1.0\n[CI/lint]   |   Downloaded quote v1.0.28\n[CI/lint]   |   Downloaded smallvec v1.10.0\n[CI/lint]   |   Downloaded unicode-ident v1.0.9\n[CI/lint]   |   Downloaded target-lexicon v0.12.7\n[CI/lint]   |   Downloaded serde v1.0.163\n[CI/lint]   |   Downloaded serde_json v1.0.96\n[CI/lint]   |   Downloaded syn v2.0.18\n[CI/lint]   |   Downloaded pythonize v0.17.0\n[CI/lint]   |   Downloaded libc v0.2.144\n[CI/lint]   |   Downloaded itoa v1.0.6\n[CI/lint]   |   Downloaded ryu v1.0.13\n[CI/lint]   |   Downloaded parking_lot_core v0.9.7\n[CI/lint]   |   Downloaded cfg-if v1.0.0\n[CI/lint]   |   Downloaded proc-macro2 v1.0.59\n[CI/lint]   |   Downloaded parking_lot v0.12.1\n[CI/lint]   |   Downloaded once_cell v1.17.2\n[CI/lint]   |   Downloaded indoc v1.0.9\n[CI/lint]   |   Downloaded pyo3 v0.17.3\n[CI/lint]   |    Compiling proc-macro2 v1.0.59\n[CI/lint]   |    Compiling quote v1.0.28\n[CI/lint]   |    Compiling unicode-ident v1.0.9\n[CI/lint]   |    Compiling target-lexicon v0.12.7\n[CI/lint]   |    Compiling autocfg v1.1.0\n[CI/lint]   |    Compiling once_cell v1.17.2\n[CI/lint]   |    Compiling libc v0.2.144\n[CI/lint]   |    Compiling syn v1.0.109\n[CI/lint]   |    Compiling serde v1.0.163\n[CI/lint]   |    Compiling parking_lot_core v0.9.7\n[CI/lint]   |     Checking smallvec v1.10.0\n[CI/lint]   |     Checking cfg-if v1.0.0\n[CI/lint]   |     Checking scopeguard v1.1.0\n[CI/lint]   |    Compiling serde_json v1.0.96\n[CI/lint]   |    Compiling log v0.4.18\n[CI/lint]   |     Checking ryu v1.0.13\n[CI/lint]   |     Checking itoa v1.0.6\n[CI/lint]   |     Checking unindent v0.1.11\n[CI/lint]   |    Compiling indoc v1.0.9\n[CI/lint]   |    Compiling lock_api v0.4.9\n[CI/lint]   |    Compiling memoffset v0.6.5\n[CI/lint]   |    Compiling pyo3-build-config v0.17.3\n[CI/lint]   |    Compiling syn v2.0.18\n[CI/lint]   |     Checking parking_lot v0.12.1\n[CI/lint]   |    Compiling pyo3-ffi v0.17.3\n[CI/lint]   |    Compiling pyo3 v0.17.3\n[CI/lint]   |    Compiling serde_derive v1.0.163\n[CI/lint]   |    Compiling pyo3-macros-backend v0.17.3\n[CI/lint]   |    Compiling pyo3-macros v0.17.3\n[CI/lint]   |     Checking sqlparser v0.33.0\n[CI/lint]   |     Checking pythonize v0.17.0\n[CI/lint]   |     Checking sqloxide v0.1.33 (/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/wseaton-sqloxide)\n[CI/lint]   |     Finished dev [unoptimized + debuginfo] target(s) in 1m 06s\n[CI/lint]   \u2705  Success - Main Lint with clippy\n[CI/lint] \u2b50 Run Main Test with cargo\n[CI/lint]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1.0.1/ dst=/var/run/act/actions/actions-rs-cargo@v1.0.1/\n[CI/lint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1.0.1/] user=0 workdir=\n[CI/lint]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1.0.1/dist/index.js] user= workdir=\n[CI/lint]   | [command]/home/runneradmin/.cargo/bin/cargo +stable test\n[CI/lint]   |    Compiling cfg-if v1.0.0\n[CI/lint]   |    Compiling scopeguard v1.1.0\n[CI/lint]   |    Compiling smallvec v1.10.0\n[CI/lint]   |    Compiling ryu v1.0.13\n[CI/lint]   |    Compiling unindent v0.1.11\n[CI/lint]   |    Compiling itoa v1.0.6\n[CI/lint]   |    Compiling libc v0.2.144\n[CI/lint]   |    Compiling log v0.4.18\n[CI/lint]   |    Compiling memoffset v0.6.5\n[CI/lint]   |    Compiling serde v1.0.163\n[CI/lint]   |    Compiling lock_api v0.4.9\n[CI/lint]   |    Compiling parking_lot_core v0.9.7\n[CI/lint]   |    Compiling pyo3-ffi v0.17.3\n[CI/lint]   |    Compiling parking_lot v0.12.1\n[CI/lint]   |    Compiling pyo3 v0.17.3\n[CI/lint]   |    Compiling serde_json v1.0.96\n[CI/lint]   |    Compiling sqlparser v0.33.0\n[CI/lint]   |    Compiling pythonize v0.17.0\n[CI/lint]   |    Compiling sqloxide v0.1.33 (/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/wseaton-sqloxide)\n[CI/lint]   |     Finished test [unoptimized + debuginfo] target(s) in 16.23s\n[CI/lint]   |      Running unittests src/lib.rs (target/debug/deps/sqloxide-0fea94454e35e6f2)\n[CI/lint]   | \n[CI/lint]   | running 0 tests\n[CI/lint]   | \n[CI/lint]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/lint]   | \n[CI/lint]   \u2705  Success - Main Test with cargo\n[CI/lint] \ud83c\udfc1  Job succeeded\n[CI/manylinux-build] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/source-build   ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/native-build   ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/source-build   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/native-build   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/manylinux-build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/source-build   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/manylinux-build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/native-build   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/source-build   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/native-build   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/manylinux-build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n",
    "actions_stderr": "Error: context canceled\n"
}