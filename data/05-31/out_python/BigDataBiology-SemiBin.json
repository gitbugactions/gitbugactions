{
    "repository": "BigDataBiology/SemiBin",
    "clone_url": "https://github.com/BigDataBiology/SemiBin.git",
    "timestamp": "2023-05-29T15:58:15.240649Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[semibin_test/build] \ud83d\ude80  Start image=crawlergpt:latest\n[semibin_test/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[semibin_test/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[semibin_test/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[semibin_test/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/BigDataBiology-SemiBin] user=0 workdir=\n[semibin_test/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[semibin_test/build]   \u2601  git clone 'https://github.com/conda-incubator/setup-miniconda' # ref=v2\n[semibin_test/build] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.7]\n[semibin_test/build] \u2b50 Run Main actions/checkout@v2\n[semibin_test/build]   \u2705  Success - Main actions/checkout@v2\n[semibin_test/build] \u2b50 Run Main Set up Python 3.7\n[semibin_test/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[semibin_test/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[semibin_test/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[semibin_test/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[semibin_test/build]   \ud83d\udcac  ::debug::isExplicit: \n[semibin_test/build]   \ud83d\udcac  ::debug::explicit? false\n[semibin_test/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[semibin_test/build]   \ud83d\udcac  ::debug::explicit? true\n[semibin_test/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[semibin_test/build]   \ud83d\udcac  ::debug::explicit? true\n[semibin_test/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[semibin_test/build]   \ud83d\udcac  ::debug::explicit? true\n[semibin_test/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[semibin_test/build]   \ud83d\udcac  ::debug::explicit? true\n[semibin_test/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[semibin_test/build]   \ud83d\udcac  ::debug::explicit? true\n[semibin_test/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[semibin_test/build]   \ud83d\udcac  ::debug::explicit? true\n[semibin_test/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[semibin_test/build]   \ud83d\udcac  ::debug::matched: 3.7.11\n[semibin_test/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[semibin_test/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[semibin_test/build]   | Successfully setup CPython (3.7.11)\n[semibin_test/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[semibin_test/build]   \u2705  Success - Main Set up Python 3.7\n[semibin_test/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[semibin_test/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[semibin_test/build]   \u2699  ::set-output:: python-version=3.7.11\n[semibin_test/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[semibin_test/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[semibin_test/build] \u2b50 Run Main conda-incubator/setup-miniconda@v2\n[semibin_test/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/conda-incubator-setup-miniconda@v2/ dst=/var/run/act/actions/conda-incubator-setup-miniconda@v2/\n[semibin_test/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/conda-incubator-setup-miniconda@v2/] user=0 workdir=\n[semibin_test/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/conda-incubator-setup-miniconda@v2/dist/setup/index.js] user= workdir=\n[semibin_test/build]   \u2753  ::group::Gathering Inputs...\n[semibin_test/build]   \u2753  ::endgroup::\n[semibin_test/build]   \u2753  ::group::Creating bootstrap condarc file in /home/runneradmin/.condarc...\n[semibin_test/build]   \u2753  ::endgroup::\n[semibin_test/build]   \u2753  ::group::Ensuring installer...\n[semibin_test/build]   | Can we use bundled Miniconda?\n[semibin_test/build]   | ... will use bundled Miniconda.\n[semibin_test/build]   \u2753  ::endgroup::\n[semibin_test/build]   \u2757  ::error::No installed conda 'base' environment found at !If you are using this action in a self-hosted runner that already provides its own Miniconda installation, please specify its location with a `CONDA` environment variable. If you want us to download and install Miniconda or Miniforge for you, add `miniconda-version: \"latest\"` or `miniforge-version: \"latest\"`, respectively, to the parameters for this action.\n[semibin_test/build]   \u274c  Failure - Main conda-incubator/setup-miniconda@v2\n[semibin_test/build]   \u2699  ::set-env:: INPUT_RUN_POST=true\n[semibin_test/build] exitcode '1': failure\n[semibin_test/build] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'build' failed\n"
}