{
    "repository": "dj-stripe/dj-stripe",
    "clone_url": "https://github.com/dj-stripe/dj-stripe.git",
    "timestamp": "2023-05-29T14:57:21.299656Z",
    "clone_success": true,
    "number of actions": 4,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI tests/tests] \ud83d\ude80  Start image=crawlergpt:latest\n[CI tests/tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI tests/tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI tests/tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI tests/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/dj-stripe-dj-stripe] user=0 workdir=\n[CI tests/tests] \ud83e\uddea  Matrix: map[python-version:3.8]\n[CI tests/tests] \u2b50 Run Main actions/checkout@v3\n[CI tests/tests]   \u2705  Success - Main actions/checkout@v3\n[CI tests/tests] \u2b50 Run Main ./.github/install_poetry_action\n[CI tests/tests]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[CI tests/tests] \u2b50 Run Main Set up Python 3.8\n[CI tests/tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[CI tests/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[CI tests/tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[CI tests/tests]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[CI tests/tests]   \u2753  ::group::Installed versions\n[CI tests/tests]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[CI tests/tests]   \ud83d\udcac  ::debug::isExplicit: \n[CI tests/tests]   \ud83d\udcac  ::debug::explicit? false\n[CI tests/tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[CI tests/tests]   \ud83d\udcac  ::debug::explicit? true\n[CI tests/tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[CI tests/tests]   \ud83d\udcac  ::debug::explicit? true\n[CI tests/tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[CI tests/tests]   \ud83d\udcac  ::debug::explicit? true\n[CI tests/tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[CI tests/tests]   \ud83d\udcac  ::debug::explicit? true\n[CI tests/tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[CI tests/tests]   \ud83d\udcac  ::debug::explicit? true\n[CI tests/tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[CI tests/tests]   \ud83d\udcac  ::debug::explicit? true\n[CI tests/tests]   \ud83d\udcac  ::debug::evaluating 6 versions\n[CI tests/tests]   \ud83d\udcac  ::debug::matched: 3.8.11\n[CI tests/tests]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[CI tests/tests]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[CI tests/tests]   | Successfully set up CPython (3.8.11)\n[CI tests/tests]   \u2753  ::endgroup::\n[CI tests/tests]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[CI tests/tests]   \u2705  Success - Main Set up Python 3.8\n[CI tests/tests]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[CI tests/tests]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[CI tests/tests]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[CI tests/tests]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib/pkgconfig\n[CI tests/tests]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[CI tests/tests]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[CI tests/tests]   \u2699  ::set-output:: python-version=3.8.11\n[CI tests/tests]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.8.11/x64/bin/python\n[CI tests/tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[CI tests/tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[CI tests/tests] \u2b50 Run Main Install poetry (1.2.2) binary on runner\n[CI tests/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-1.sh] user= workdir=\n[CI tests/tests]   | Retrieving Poetry metadata\n[CI tests/tests]   | \n[CI tests/tests]   | # Welcome to Poetry!\n[CI tests/tests]   | \n[CI tests/tests]   | This will download and install the latest version of Poetry,\n[CI tests/tests]   | a dependency and package manager for Python.\n[CI tests/tests]   | \n[CI tests/tests]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[CI tests/tests]   | \n[CI tests/tests]   | /home/runneradmin/.local/bin\n[CI tests/tests]   | \n[CI tests/tests]   | You can uninstall at any time by executing this script with the --uninstall option,\n[CI tests/tests]   | and these changes will be reverted.\n[CI tests/tests]   | \n[CI tests/tests]   | Installing Poetry (1.2.2)\n[CI tests/tests]   | Installing Poetry (1.2.2): Creating environment\n[CI tests/tests]   | Installing Poetry (1.2.2): Installing Poetry\n[CI tests/tests]   | Installing Poetry (1.2.2): Creating script\n[CI tests/tests]   | Installing Poetry (1.2.2): Done\n[CI tests/tests]   | \n[CI tests/tests]   | Poetry (1.2.2) is installed now. Great!\n[CI tests/tests]   | \n[CI tests/tests]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[CI tests/tests]   | environment variable.\n[CI tests/tests]   | \n[CI tests/tests]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[CI tests/tests]   | \n[CI tests/tests]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[CI tests/tests]   | \n[CI tests/tests]   | You can test that everything is set up by executing:\n[CI tests/tests]   | \n[CI tests/tests]   | `poetry --version`\n[CI tests/tests]   | \n[CI tests/tests]   \u2705  Success - Main Install poetry (1.2.2) binary on runner\n[CI tests/tests]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[CI tests/tests] Unable to checkout 88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8: invalid checksum\n[CI tests/tests] invalid checksum\n[CI tests/tests]   \u274c  Failure - Main ./.github/install_poetry_action\n[CI tests/tests] invalid checksum\n[CI tests/tests] \u2b50 Run Post ./.github/install_poetry_action\n[CI tests/tests] \u2b50 Run Post Set up Python 3.8\n[CI tests/tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[CI tests/tests]   \u2705  Success - Post Set up Python 3.8\n[CI tests/tests]   \u2705  Success - Post ./.github/install_poetry_action\n[CI tests/tests] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'tests' failed\n"
}