{
    "repository": "astropy/reproject",
    "clone_url": "https://github.com/astropy/reproject.git",
    "timestamp": "2023-05-29T14:52:06.251937Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[tests/Test Python package/Load tox environments] \ud83d\ude80  Start image=crawlergpt:latest\n[tests/Test Python package/Load tox environments]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[tests/Test Python package/Load tox environments]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/Test Python package/Load tox environments]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/Test Python package/Load tox environments]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/astropy-reproject] user=0 workdir=\n[tests/Test Python package/Load tox environments]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[tests/Test Python package/Load tox environments] \u2b50 Run Main actions/setup-python@v4\n[tests/Test Python package/Load tox environments]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[tests/Test Python package/Load tox environments]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[tests/Test Python package/Load tox environments]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[tests/Test Python package/Load tox environments]   \u2753  ::group::Installed versions\n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::Semantic version spec of 3.9 is 3.9\n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::isExplicit: \n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::explicit? false\n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::explicit? true\n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::explicit? true\n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::explicit? true\n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::explicit? true\n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::explicit? true\n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::explicit? true\n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::evaluating 6 versions\n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::matched: 3.9.6\n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[tests/Test Python package/Load tox environments]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[tests/Test Python package/Load tox environments]   | Successfully set up CPython (3.9.6)\n[tests/Test Python package/Load tox environments]   \u2753  ::endgroup::\n[tests/Test Python package/Load tox environments]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[tests/Test Python package/Load tox environments]   \u2705  Success - Main actions/setup-python@v4\n[tests/Test Python package/Load tox environments]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[tests/Test Python package/Load tox environments]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[tests/Test Python package/Load tox environments]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[tests/Test Python package/Load tox environments]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib/pkgconfig\n[tests/Test Python package/Load tox environments]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[tests/Test Python package/Load tox environments]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[tests/Test Python package/Load tox environments]   \u2699  ::set-output:: python-version=3.9.6\n[tests/Test Python package/Load tox environments]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.9.6/x64/bin/python\n[tests/Test Python package/Load tox environments]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[tests/Test Python package/Load tox environments]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[tests/Test Python package/Load tox environments] \u2b50 Run Main python -m pip install PyYAML click\n[tests/Test Python package/Load tox environments]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[tests/Test Python package/Load tox environments]   | Collecting PyYAML\n[tests/Test Python package/Load tox environments]   |   Downloading PyYAML-6.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (661 kB)\n[tests/Test Python package/Load tox environments]   | Collecting click\n[tests/Test Python package/Load tox environments]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[tests/Test Python package/Load tox environments]   | Installing collected packages: PyYAML, click\n[tests/Test Python package/Load tox environments]   | Successfully installed PyYAML-6.0 click-8.1.3\n[tests/Test Python package/Load tox environments]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[tests/Test Python package/Load tox environments]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.9.6/x64/bin/python -m pip install --upgrade pip' command.\n[tests/Test Python package/Load tox environments]   \u2705  Success - Main python -m pip install PyYAML click\n[tests/Test Python package/Load tox environments] \u2b50 Run Main echo $TOX_MATRIX_SCRIPT | base64 --decode > tox_matrix.py\n[tests/Test Python package/Load tox environments]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[tests/Test Python package/Load tox environments]   \u2705  Success - Main echo $TOX_MATRIX_SCRIPT | base64 --decode > tox_matrix.py\n[tests/Test Python package/Load tox environments] \u2b50 Run Main cat tox_matrix.py\n[tests/Test Python package/Load tox environments]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[tests/Test Python package/Load tox environments]   | import json\n[tests/Test Python package/Load tox environments]   | import os\n[tests/Test Python package/Load tox environments]   | import re\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   | import click\n[tests/Test Python package/Load tox environments]   | import yaml\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   | @click.command()\n[tests/Test Python package/Load tox environments]   | @click.option(\"--envs\", default=\"\")\n[tests/Test Python package/Load tox environments]   | @click.option(\"--libraries\", default=\"\")\n[tests/Test Python package/Load tox environments]   | @click.option(\"--posargs\", default=\"\")\n[tests/Test Python package/Load tox environments]   | @click.option(\"--toxdeps\", default=\"\")\n[tests/Test Python package/Load tox environments]   | @click.option(\"--toxargs\", default=\"\")\n[tests/Test Python package/Load tox environments]   | @click.option(\"--pytest\", default=\"true\")\n[tests/Test Python package/Load tox environments]   | @click.option(\"--pytest-results-summary\", default=\"false\")\n[tests/Test Python package/Load tox environments]   | @click.option(\"--coverage\", default=\"\")\n[tests/Test Python package/Load tox environments]   | @click.option(\"--conda\", default=\"auto\")\n[tests/Test Python package/Load tox environments]   | @click.option(\"--setenv\", default=\"\")\n[tests/Test Python package/Load tox environments]   | @click.option(\"--display\", default=\"false\")\n[tests/Test Python package/Load tox environments]   | @click.option(\"--cache-path\", default=\"\")\n[tests/Test Python package/Load tox environments]   | @click.option(\"--cache-key\", default=\"\")\n[tests/Test Python package/Load tox environments]   | @click.option(\"--cache-restore-keys\", default=\"\")\n[tests/Test Python package/Load tox environments]   | @click.option(\"--runs-on\", default=\"\")\n[tests/Test Python package/Load tox environments]   | @click.option(\"--default-python\", default=\"\")\n[tests/Test Python package/Load tox environments]   | @click.option(\"--timeout-minutes\", default=\"360\")\n[tests/Test Python package/Load tox environments]   | def load_tox_targets(envs, libraries, posargs, toxdeps, toxargs, pytest, pytest_results_summary,\n[tests/Test Python package/Load tox environments]   |                      coverage, conda, setenv, display, cache_path, cache_key,\n[tests/Test Python package/Load tox environments]   |                      cache_restore_keys, runs_on, default_python, timeout_minutes):\n[tests/Test Python package/Load tox environments]   |     \"\"\"Script to load tox targets for GitHub Actions workflow.\"\"\"\n[tests/Test Python package/Load tox environments]   |     # Load envs config\n[tests/Test Python package/Load tox environments]   |     envs = yaml.load(envs, Loader=yaml.BaseLoader)\n[tests/Test Python package/Load tox environments]   |     print(json.dumps(envs, indent=2))\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   |     # Load global libraries config\n[tests/Test Python package/Load tox environments]   |     global_libraries = {\n[tests/Test Python package/Load tox environments]   |         \"brew\": [],\n[tests/Test Python package/Load tox environments]   |         \"brew-cask\": [],\n[tests/Test Python package/Load tox environments]   |         \"apt\": [],\n[tests/Test Python package/Load tox environments]   |         \"choco\": [],\n[tests/Test Python package/Load tox environments]   |     }\n[tests/Test Python package/Load tox environments]   |     libraries = yaml.load(libraries, Loader=yaml.BaseLoader)\n[tests/Test Python package/Load tox environments]   |     if libraries is not None:\n[tests/Test Python package/Load tox environments]   |         global_libraries.update(libraries)\n[tests/Test Python package/Load tox environments]   |     print(json.dumps(global_libraries, indent=2))\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   |     # Default images to use for runners\n[tests/Test Python package/Load tox environments]   |     default_runs_on = {\n[tests/Test Python package/Load tox environments]   |         \"linux\": \"ubuntu-latest\",\n[tests/Test Python package/Load tox environments]   |         \"macos\": \"macos-latest\",\n[tests/Test Python package/Load tox environments]   |         \"windows\": \"windows-latest\",\n[tests/Test Python package/Load tox environments]   |     }\n[tests/Test Python package/Load tox environments]   |     custom_runs_on = yaml.load(runs_on, Loader=yaml.BaseLoader)\n[tests/Test Python package/Load tox environments]   |     if isinstance(custom_runs_on, dict):\n[tests/Test Python package/Load tox environments]   |         default_runs_on.update(custom_runs_on)\n[tests/Test Python package/Load tox environments]   |     print(json.dumps(default_runs_on, indent=2))\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   |     # Default string parameters which can be overwritten by each env\n[tests/Test Python package/Load tox environments]   |     string_parameters = {\n[tests/Test Python package/Load tox environments]   |         \"posargs\": posargs,\n[tests/Test Python package/Load tox environments]   |         \"toxdeps\": toxdeps,\n[tests/Test Python package/Load tox environments]   |         \"toxargs\": toxargs,\n[tests/Test Python package/Load tox environments]   |         \"pytest\": pytest,\n[tests/Test Python package/Load tox environments]   |         \"pytest-results-summary\": pytest_results_summary,\n[tests/Test Python package/Load tox environments]   |         \"coverage\": coverage,\n[tests/Test Python package/Load tox environments]   |         \"conda\": conda,\n[tests/Test Python package/Load tox environments]   |         \"setenv\": setenv,\n[tests/Test Python package/Load tox environments]   |         \"display\": display,\n[tests/Test Python package/Load tox environments]   |         \"cache-path\": cache_path,\n[tests/Test Python package/Load tox environments]   |         \"cache-key\": cache_key,\n[tests/Test Python package/Load tox environments]   |         \"cache-restore-keys\": cache_restore_keys,\n[tests/Test Python package/Load tox environments]   |         \"timeout-minutes\": timeout_minutes,\n[tests/Test Python package/Load tox environments]   |     }\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   |     # Create matrix\n[tests/Test Python package/Load tox environments]   |     matrix = {\"include\": []}\n[tests/Test Python package/Load tox environments]   |     for env in envs:\n[tests/Test Python package/Load tox environments]   |         matrix[\"include\"].append(get_matrix_item(\n[tests/Test Python package/Load tox environments]   |             env,\n[tests/Test Python package/Load tox environments]   |             global_libraries=global_libraries,\n[tests/Test Python package/Load tox environments]   |             global_string_parameters=string_parameters,\n[tests/Test Python package/Load tox environments]   |             runs_on=default_runs_on,\n[tests/Test Python package/Load tox environments]   |             default_python=default_python,\n[tests/Test Python package/Load tox environments]   |         ))\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   |     # Output matrix\n[tests/Test Python package/Load tox environments]   |     print(json.dumps(matrix, indent=2))\n[tests/Test Python package/Load tox environments]   |     with open(os.environ[\"GITHUB_OUTPUT\"], \"a\") as f:\n[tests/Test Python package/Load tox environments]   |         f.write(f\"matrix={json.dumps(matrix)}\\n\")\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   | def get_matrix_item(env, global_libraries, global_string_parameters,\n[tests/Test Python package/Load tox environments]   |                     runs_on, default_python):\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   |     # define spec for each matrix include (+ global_string_parameters)\n[tests/Test Python package/Load tox environments]   |     item = {\n[tests/Test Python package/Load tox environments]   |         \"os\": None,\n[tests/Test Python package/Load tox environments]   |         \"toxenv\": None,\n[tests/Test Python package/Load tox environments]   |         \"python_version\": None,\n[tests/Test Python package/Load tox environments]   |         \"name\": None,\n[tests/Test Python package/Load tox environments]   |         \"pytest_flag\": None,\n[tests/Test Python package/Load tox environments]   |         \"libraries_brew\": None,\n[tests/Test Python package/Load tox environments]   |         \"libraries_brew_cask\": None,\n[tests/Test Python package/Load tox environments]   |         \"libraries_apt\": None,\n[tests/Test Python package/Load tox environments]   |         \"libraries_choco\": None,\n[tests/Test Python package/Load tox environments]   |         \"cache-path\": None,\n[tests/Test Python package/Load tox environments]   |         \"cache-key\": None,\n[tests/Test Python package/Load tox environments]   |         \"cache-restore-keys\": None,\n[tests/Test Python package/Load tox environments]   |         \"timeout-minutes\": None,\n[tests/Test Python package/Load tox environments]   |     }\n[tests/Test Python package/Load tox environments]   |     for string_param, default in global_string_parameters.items():\n[tests/Test Python package/Load tox environments]   |         env_value = env.get(string_param)\n[tests/Test Python package/Load tox environments]   |         item[string_param] = default if env_value is None else env_value\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   |     # set os and toxenv\n[tests/Test Python package/Load tox environments]   |     for k, v in runs_on.items():\n[tests/Test Python package/Load tox environments]   |         if k in env:\n[tests/Test Python package/Load tox environments]   |             platform = k\n[tests/Test Python package/Load tox environments]   |             item[\"os\"] = env.get(\"runs-on\", v)\n[tests/Test Python package/Load tox environments]   |             item[\"toxenv\"] = env[k]\n[tests/Test Python package/Load tox environments]   |     assert item[\"os\"] is not None and item[\"toxenv\"] is not None\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   |     # set python_version\n[tests/Test Python package/Load tox environments]   |     python_version = env.get(\"python-version\")\n[tests/Test Python package/Load tox environments]   |     m = re.search(\"^py(2|3)([0-9]+)\", item[\"toxenv\"])\n[tests/Test Python package/Load tox environments]   |     if python_version is not None:\n[tests/Test Python package/Load tox environments]   |         item[\"python_version\"] = python_version\n[tests/Test Python package/Load tox environments]   |     elif m is not None:\n[tests/Test Python package/Load tox environments]   |         major, minor = m.groups()\n[tests/Test Python package/Load tox environments]   |         item[\"python_version\"] = f\"{major}.{minor}\"\n[tests/Test Python package/Load tox environments]   |     else:\n[tests/Test Python package/Load tox environments]   |         item[\"python_version\"] = env.get(\"default_python\") or default_python\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   |     # set name\n[tests/Test Python package/Load tox environments]   |     item[\"name\"] = env.get(\"name\") or f'{item[\"toxenv\"]} ({item[\"os\"]})'\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   |     # set pytest_flag\n[tests/Test Python package/Load tox environments]   |     item[\"pytest_flag\"] = \"\"\n[tests/Test Python package/Load tox environments]   |     sep = r\"\\\\\" if platform == \"windows\" else \"/\"\n[tests/Test Python package/Load tox environments]   |     if item[\"pytest\"] == \"true\" and \"codecov\" in item.get(\"coverage\", \"\"):\n[tests/Test Python package/Load tox environments]   |         item[\"pytest_flag\"] += (\n[tests/Test Python package/Load tox environments]   |             rf\"--cov-report=xml:${{GITHUB_WORKSPACE}}{sep}coverage.xml \")\n[tests/Test Python package/Load tox environments]   |     if item[\"pytest\"] == \"true\" and item[\"pytest-results-summary\"] == \"true\":\n[tests/Test Python package/Load tox environments]   |         item[\"pytest_flag\"] += rf\"--junitxml ${{GITHUB_WORKSPACE}}{sep}results.xml \"\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   |     # set libraries\n[tests/Test Python package/Load tox environments]   |     env_libraries = env.get(\"libraries\")\n[tests/Test Python package/Load tox environments]   |     if isinstance(env_libraries, str) and len(env_libraries.strip()) == 0:\n[tests/Test Python package/Load tox environments]   |         env_libraries = {}  # no libraries requested for environment\n[tests/Test Python package/Load tox environments]   |     libraries = global_libraries if env_libraries is None else env_libraries\n[tests/Test Python package/Load tox environments]   |     for manager in [\"brew\", \"brew_cask\", \"apt\", \"choco\"]:\n[tests/Test Python package/Load tox environments]   |         item[f\"libraries_{manager}\"] = \" \".join(libraries.get(manager, []))\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   |     # set \"auto\" conda value\n[tests/Test Python package/Load tox environments]   |     if item[\"conda\"] == \"auto\":\n[tests/Test Python package/Load tox environments]   |         item[\"conda\"] = \"true\" if \"conda\" in item[\"toxenv\"] else \"false\"\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   |     # inject toxdeps for conda\n[tests/Test Python package/Load tox environments]   |     if item[\"conda\"] == \"true\" and \"tox-conda\" not in item[\"toxdeps\"].lower():\n[tests/Test Python package/Load tox environments]   |         item[\"toxdeps\"] = (\"tox-conda \" + item[\"toxdeps\"]).strip()\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   |     # make timeout-minutes a number\n[tests/Test Python package/Load tox environments]   |     item[\"timeout-minutes\"] = int(item[\"timeout-minutes\"])\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   |     # verify values\n[tests/Test Python package/Load tox environments]   |     assert item[\"pytest\"] in {\"true\", \"false\"}\n[tests/Test Python package/Load tox environments]   |     assert item[\"conda\"] in {\"true\", \"false\"}\n[tests/Test Python package/Load tox environments]   |     assert item[\"display\"] in {\"true\", \"false\"}\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   |     return item\n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   | \n[tests/Test Python package/Load tox environments]   | if __name__ == \"__main__\":\n[tests/Test Python package/Load tox environments]   |     load_tox_targets()\n[tests/Test Python package/Load tox environments]   \u2705  Success - Main cat tox_matrix.py\n[tests/Test Python package/Load tox environments] \u2b50 Run Main python tox_matrix.py --envs \"- macos: py38-test-oldestdeps\n- macos: py39-test\n- macos: py310-test\n- linux: py38-test-oldestdeps\n- linux: py38-test\n- linux: py39-test\n- linux: py310-test\n- linux: py311-test-devdeps\n- windows: py38-test-oldestdeps\n- windows: py39-test\n- windows: py310-test\n\" --libraries \"apt:\n  - libopenblas-dev\n\" \\\n--posargs \"\" --toxdeps \"\" \\\n--toxargs \"\" --pytest \"true\" \\\n--pytest-results-summary \"false\" \\\n--coverage \"codecov\" --conda \"auto\" \\\n--setenv \"\" \\\n--display \"false\" --cache-path \"\" \\\n--cache-key \"\" --cache-restore-keys \"\" \\\n--runs-on \"\" --default-python \"3.x\" \\\n--timeout-minutes \"360\"\n[tests/Test Python package/Load tox environments]   \ud83d\udc33  docker exec cmd=[sh -e /var/run/act/workflow/set-outputs.sh] user= workdir=\n[tests/Test Python package/Load tox environments]   | [\n[tests/Test Python package/Load tox environments]   |   {\n[tests/Test Python package/Load tox environments]   |     \"macos\": \"py38-test-oldestdeps\"\n[tests/Test Python package/Load tox environments]   |   },\n[tests/Test Python package/Load tox environments]   |   {\n[tests/Test Python package/Load tox environments]   |     \"macos\": \"py39-test\"\n[tests/Test Python package/Load tox environments]   |   },\n[tests/Test Python package/Load tox environments]   |   {\n[tests/Test Python package/Load tox environments]   |     \"macos\": \"py310-test\"\n[tests/Test Python package/Load tox environments]   |   },\n[tests/Test Python package/Load tox environments]   |   {\n[tests/Test Python package/Load tox environments]   |     \"linux\": \"py38-test-oldestdeps\"\n[tests/Test Python package/Load tox environments]   |   },\n[tests/Test Python package/Load tox environments]   |   {\n[tests/Test Python package/Load tox environments]   |     \"linux\": \"py38-test\"\n[tests/Test Python package/Load tox environments]   |   },\n[tests/Test Python package/Load tox environments]   |   {\n[tests/Test Python package/Load tox environments]   |     \"linux\": \"py39-test\"\n[tests/Test Python package/Load tox environments]   |   },\n[tests/Test Python package/Load tox environments]   |   {\n[tests/Test Python package/Load tox environments]   |     \"linux\": \"py310-test\"\n[tests/Test Python package/Load tox environments]   |   },\n[tests/Test Python package/Load tox environments]   |   {\n[tests/Test Python package/Load tox environments]   |     \"linux\": \"py311-test-devdeps\"\n[tests/Test Python package/Load tox environments]   |   },\n[tests/Test Python package/Load tox environments]   |   {\n[tests/Test Python package/Load tox environments]   |     \"windows\": \"py38-test-oldestdeps\"\n[tests/Test Python package/Load tox environments]   |   },\n[tests/Test Python package/Load tox environments]   |   {\n[tests/Test Python package/Load tox environments]   |     \"windows\": \"py39-test\"\n[tests/Test Python package/Load tox environments]   |   },\n[tests/Test Python package/Load tox environments]   |   {\n[tests/Test Python package/Load tox environments]   |     \"windows\": \"py310-test\"\n[tests/Test Python package/Load tox environments]   |   }\n[tests/Test Python package/Load tox environments]   | ]\n[tests/Test Python package/Load tox environments]   | {\n[tests/Test Python package/Load tox environments]   |   \"brew\": [],\n[tests/Test Python package/Load tox environments]   |   \"brew-cask\": [],\n[tests/Test Python package/Load tox environments]   |   \"apt\": [\n[tests/Test Python package/Load tox environments]   |     \"libopenblas-dev\"\n[tests/Test Python package/Load tox environments]   |   ],\n[tests/Test Python package/Load tox environments]   |   \"choco\": []\n[tests/Test Python package/Load tox environments]   | }\n[tests/Test Python package/Load tox environments]   | {\n[tests/Test Python package/Load tox environments]   |   \"linux\": \"ubuntu-latest\",\n[tests/Test Python package/Load tox environments]   |   \"macos\": \"macos-latest\",\n[tests/Test Python package/Load tox environments]   |   \"windows\": \"windows-latest\"\n[tests/Test Python package/Load tox environments]   | }\n[tests/Test Python package/Load tox environments]   | {\n[tests/Test Python package/Load tox environments]   |   \"include\": [\n[tests/Test Python package/Load tox environments]   |     {\n[tests/Test Python package/Load tox environments]   |       \"os\": \"macos-latest\",\n[tests/Test Python package/Load tox environments]   |       \"toxenv\": \"py38-test-oldestdeps\",\n[tests/Test Python package/Load tox environments]   |       \"python_version\": \"3.8\",\n[tests/Test Python package/Load tox environments]   |       \"name\": \"py38-test-oldestdeps (macos-latest)\",\n[tests/Test Python package/Load tox environments]   |       \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}/coverage.xml \",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew_cask\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_apt\": \"libopenblas-dev\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_choco\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-path\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-key\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-restore-keys\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"timeout-minutes\": 360,\n[tests/Test Python package/Load tox environments]   |       \"posargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxdeps\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"pytest\": \"true\",\n[tests/Test Python package/Load tox environments]   |       \"pytest-results-summary\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"coverage\": \"codecov\",\n[tests/Test Python package/Load tox environments]   |       \"conda\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"setenv\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"display\": \"false\"\n[tests/Test Python package/Load tox environments]   |     },\n[tests/Test Python package/Load tox environments]   |     {\n[tests/Test Python package/Load tox environments]   |       \"os\": \"macos-latest\",\n[tests/Test Python package/Load tox environments]   |       \"toxenv\": \"py39-test\",\n[tests/Test Python package/Load tox environments]   |       \"python_version\": \"3.9\",\n[tests/Test Python package/Load tox environments]   |       \"name\": \"py39-test (macos-latest)\",\n[tests/Test Python package/Load tox environments]   |       \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}/coverage.xml \",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew_cask\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_apt\": \"libopenblas-dev\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_choco\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-path\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-key\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-restore-keys\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"timeout-minutes\": 360,\n[tests/Test Python package/Load tox environments]   |       \"posargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxdeps\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"pytest\": \"true\",\n[tests/Test Python package/Load tox environments]   |       \"pytest-results-summary\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"coverage\": \"codecov\",\n[tests/Test Python package/Load tox environments]   |       \"conda\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"setenv\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"display\": \"false\"\n[tests/Test Python package/Load tox environments]   |     },\n[tests/Test Python package/Load tox environments]   |     {\n[tests/Test Python package/Load tox environments]   |       \"os\": \"macos-latest\",\n[tests/Test Python package/Load tox environments]   |       \"toxenv\": \"py310-test\",\n[tests/Test Python package/Load tox environments]   |       \"python_version\": \"3.10\",\n[tests/Test Python package/Load tox environments]   |       \"name\": \"py310-test (macos-latest)\",\n[tests/Test Python package/Load tox environments]   |       \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}/coverage.xml \",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew_cask\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_apt\": \"libopenblas-dev\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_choco\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-path\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-key\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-restore-keys\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"timeout-minutes\": 360,\n[tests/Test Python package/Load tox environments]   |       \"posargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxdeps\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"pytest\": \"true\",\n[tests/Test Python package/Load tox environments]   |       \"pytest-results-summary\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"coverage\": \"codecov\",\n[tests/Test Python package/Load tox environments]   |       \"conda\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"setenv\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"display\": \"false\"\n[tests/Test Python package/Load tox environments]   |     },\n[tests/Test Python package/Load tox environments]   |     {\n[tests/Test Python package/Load tox environments]   |       \"os\": \"ubuntu-latest\",\n[tests/Test Python package/Load tox environments]   |       \"toxenv\": \"py38-test-oldestdeps\",\n[tests/Test Python package/Load tox environments]   |       \"python_version\": \"3.8\",\n[tests/Test Python package/Load tox environments]   |       \"name\": \"py38-test-oldestdeps (ubuntu-latest)\",\n[tests/Test Python package/Load tox environments]   |       \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}/coverage.xml \",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew_cask\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_apt\": \"libopenblas-dev\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_choco\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-path\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-key\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-restore-keys\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"timeout-minutes\": 360,\n[tests/Test Python package/Load tox environments]   |       \"posargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxdeps\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"pytest\": \"true\",\n[tests/Test Python package/Load tox environments]   |       \"pytest-results-summary\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"coverage\": \"codecov\",\n[tests/Test Python package/Load tox environments]   |       \"conda\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"setenv\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"display\": \"false\"\n[tests/Test Python package/Load tox environments]   |     },\n[tests/Test Python package/Load tox environments]   |     {\n[tests/Test Python package/Load tox environments]   |       \"os\": \"ubuntu-latest\",\n[tests/Test Python package/Load tox environments]   |       \"toxenv\": \"py38-test\",\n[tests/Test Python package/Load tox environments]   |       \"python_version\": \"3.8\",\n[tests/Test Python package/Load tox environments]   |       \"name\": \"py38-test (ubuntu-latest)\",\n[tests/Test Python package/Load tox environments]   |       \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}/coverage.xml \",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew_cask\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_apt\": \"libopenblas-dev\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_choco\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-path\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-key\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-restore-keys\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"timeout-minutes\": 360,\n[tests/Test Python package/Load tox environments]   |       \"posargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxdeps\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"pytest\": \"true\",\n[tests/Test Python package/Load tox environments]   |       \"pytest-results-summary\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"coverage\": \"codecov\",\n[tests/Test Python package/Load tox environments]   |       \"conda\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"setenv\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"display\": \"false\"\n[tests/Test Python package/Load tox environments]   |     },\n[tests/Test Python package/Load tox environments]   |     {\n[tests/Test Python package/Load tox environments]   |       \"os\": \"ubuntu-latest\",\n[tests/Test Python package/Load tox environments]   |       \"toxenv\": \"py39-test\",\n[tests/Test Python package/Load tox environments]   |       \"python_version\": \"3.9\",\n[tests/Test Python package/Load tox environments]   |       \"name\": \"py39-test (ubuntu-latest)\",\n[tests/Test Python package/Load tox environments]   |       \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}/coverage.xml \",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew_cask\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_apt\": \"libopenblas-dev\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_choco\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-path\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-key\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-restore-keys\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"timeout-minutes\": 360,\n[tests/Test Python package/Load tox environments]   |       \"posargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxdeps\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"pytest\": \"true\",\n[tests/Test Python package/Load tox environments]   |       \"pytest-results-summary\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"coverage\": \"codecov\",\n[tests/Test Python package/Load tox environments]   |       \"conda\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"setenv\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"display\": \"false\"\n[tests/Test Python package/Load tox environments]   |     },\n[tests/Test Python package/Load tox environments]   |     {\n[tests/Test Python package/Load tox environments]   |       \"os\": \"ubuntu-latest\",\n[tests/Test Python package/Load tox environments]   |       \"toxenv\": \"py310-test\",\n[tests/Test Python package/Load tox environments]   |       \"python_version\": \"3.10\",\n[tests/Test Python package/Load tox environments]   |       \"name\": \"py310-test (ubuntu-latest)\",\n[tests/Test Python package/Load tox environments]   |       \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}/coverage.xml \",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew_cask\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_apt\": \"libopenblas-dev\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_choco\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-path\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-key\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-restore-keys\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"timeout-minutes\": 360,\n[tests/Test Python package/Load tox environments]   |       \"posargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxdeps\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"pytest\": \"true\",\n[tests/Test Python package/Load tox environments]   |       \"pytest-results-summary\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"coverage\": \"codecov\",\n[tests/Test Python package/Load tox environments]   |       \"conda\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"setenv\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"display\": \"false\"\n[tests/Test Python package/Load tox environments]   |     },\n[tests/Test Python package/Load tox environments]   |     {\n[tests/Test Python package/Load tox environments]   |       \"os\": \"ubuntu-latest\",\n[tests/Test Python package/Load tox environments]   |       \"toxenv\": \"py311-test-devdeps\",\n[tests/Test Python package/Load tox environments]   |       \"python_version\": \"3.11\",\n[tests/Test Python package/Load tox environments]   |       \"name\": \"py311-test-devdeps (ubuntu-latest)\",\n[tests/Test Python package/Load tox environments]   |       \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}/coverage.xml \",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew_cask\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_apt\": \"libopenblas-dev\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_choco\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-path\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-key\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-restore-keys\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"timeout-minutes\": 360,\n[tests/Test Python package/Load tox environments]   |       \"posargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxdeps\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"pytest\": \"true\",\n[tests/Test Python package/Load tox environments]   |       \"pytest-results-summary\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"coverage\": \"codecov\",\n[tests/Test Python package/Load tox environments]   |       \"conda\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"setenv\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"display\": \"false\"\n[tests/Test Python package/Load tox environments]   |     },\n[tests/Test Python package/Load tox environments]   |     {\n[tests/Test Python package/Load tox environments]   |       \"os\": \"windows-latest\",\n[tests/Test Python package/Load tox environments]   |       \"toxenv\": \"py38-test-oldestdeps\",\n[tests/Test Python package/Load tox environments]   |       \"python_version\": \"3.8\",\n[tests/Test Python package/Load tox environments]   |       \"name\": \"py38-test-oldestdeps (windows-latest)\",\n[tests/Test Python package/Load tox environments]   |       \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}\\\\\\\\coverage.xml \",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew_cask\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_apt\": \"libopenblas-dev\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_choco\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-path\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-key\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-restore-keys\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"timeout-minutes\": 360,\n[tests/Test Python package/Load tox environments]   |       \"posargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxdeps\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"pytest\": \"true\",\n[tests/Test Python package/Load tox environments]   |       \"pytest-results-summary\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"coverage\": \"codecov\",\n[tests/Test Python package/Load tox environments]   |       \"conda\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"setenv\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"display\": \"false\"\n[tests/Test Python package/Load tox environments]   |     },\n[tests/Test Python package/Load tox environments]   |     {\n[tests/Test Python package/Load tox environments]   |       \"os\": \"windows-latest\",\n[tests/Test Python package/Load tox environments]   |       \"toxenv\": \"py39-test\",\n[tests/Test Python package/Load tox environments]   |       \"python_version\": \"3.9\",\n[tests/Test Python package/Load tox environments]   |       \"name\": \"py39-test (windows-latest)\",\n[tests/Test Python package/Load tox environments]   |       \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}\\\\\\\\coverage.xml \",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew_cask\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_apt\": \"libopenblas-dev\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_choco\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-path\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-key\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-restore-keys\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"timeout-minutes\": 360,\n[tests/Test Python package/Load tox environments]   |       \"posargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxdeps\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"pytest\": \"true\",\n[tests/Test Python package/Load tox environments]   |       \"pytest-results-summary\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"coverage\": \"codecov\",\n[tests/Test Python package/Load tox environments]   |       \"conda\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"setenv\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"display\": \"false\"\n[tests/Test Python package/Load tox environments]   |     },\n[tests/Test Python package/Load tox environments]   |     {\n[tests/Test Python package/Load tox environments]   |       \"os\": \"windows-latest\",\n[tests/Test Python package/Load tox environments]   |       \"toxenv\": \"py310-test\",\n[tests/Test Python package/Load tox environments]   |       \"python_version\": \"3.10\",\n[tests/Test Python package/Load tox environments]   |       \"name\": \"py310-test (windows-latest)\",\n[tests/Test Python package/Load tox environments]   |       \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}\\\\\\\\coverage.xml \",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_brew_cask\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_apt\": \"libopenblas-dev\",\n[tests/Test Python package/Load tox environments]   |       \"libraries_choco\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-path\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-key\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"cache-restore-keys\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"timeout-minutes\": 360,\n[tests/Test Python package/Load tox environments]   |       \"posargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxdeps\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"toxargs\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"pytest\": \"true\",\n[tests/Test Python package/Load tox environments]   |       \"pytest-results-summary\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"coverage\": \"codecov\",\n[tests/Test Python package/Load tox environments]   |       \"conda\": \"false\",\n[tests/Test Python package/Load tox environments]   |       \"setenv\": \"\",\n[tests/Test Python package/Load tox environments]   |       \"display\": \"false\"\n[tests/Test Python package/Load tox environments]   |     }\n[tests/Test Python package/Load tox environments]   |   ]\n[tests/Test Python package/Load tox environments]   | }\n[tests/Test Python package/Load tox environments]   \u2705  Success - Main python tox_matrix.py --envs \"- macos: py38-test-oldestdeps\n- macos: py39-test\n- macos: py310-test\n- linux: py38-test-oldestdeps\n- linux: py38-test\n- linux: py39-test\n- linux: py310-test\n- linux: py311-test-devdeps\n- windows: py38-test-oldestdeps\n- windows: py39-test\n- windows: py310-test\n\" --libraries \"apt:\n  - libopenblas-dev\n\" \\\n--posargs \"\" --toxdeps \"\" \\\n--toxargs \"\" --pytest \"true\" \\\n--pytest-results-summary \"false\" \\\n--coverage \"codecov\" --conda \"auto\" \\\n--setenv \"\" \\\n--display \"false\" --cache-path \"\" \\\n--cache-key \"\" --cache-restore-keys \"\" \\\n--runs-on \"\" --default-python \"3.x\" \\\n--timeout-minutes \"360\"\n[tests/Test Python package/Load tox environments]   \u2699  ::set-output:: matrix={\"include\": [{\"os\": \"macos-latest\", \"toxenv\": \"py38-test-oldestdeps\", \"python_version\": \"3.8\", \"name\": \"py38-test-oldestdeps (macos-latest)\", \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}/coverage.xml \", \"libraries_brew\": \"\", \"libraries_brew_cask\": \"\", \"libraries_apt\": \"libopenblas-dev\", \"libraries_choco\": \"\", \"cache-path\": \"\", \"cache-key\": \"\", \"cache-restore-keys\": \"\", \"timeout-minutes\": 360, \"posargs\": \"\", \"toxdeps\": \"\", \"toxargs\": \"\", \"pytest\": \"true\", \"pytest-results-summary\": \"false\", \"coverage\": \"codecov\", \"conda\": \"false\", \"setenv\": \"\", \"display\": \"false\"}, {\"os\": \"macos-latest\", \"toxenv\": \"py39-test\", \"python_version\": \"3.9\", \"name\": \"py39-test (macos-latest)\", \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}/coverage.xml \", \"libraries_brew\": \"\", \"libraries_brew_cask\": \"\", \"libraries_apt\": \"libopenblas-dev\", \"libraries_choco\": \"\", \"cache-path\": \"\", \"cache-key\": \"\", \"cache-restore-keys\": \"\", \"timeout-minutes\": 360, \"posargs\": \"\", \"toxdeps\": \"\", \"toxargs\": \"\", \"pytest\": \"true\", \"pytest-results-summary\": \"false\", \"coverage\": \"codecov\", \"conda\": \"false\", \"setenv\": \"\", \"display\": \"false\"}, {\"os\": \"macos-latest\", \"toxenv\": \"py310-test\", \"python_version\": \"3.10\", \"name\": \"py310-test (macos-latest)\", \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}/coverage.xml \", \"libraries_brew\": \"\", \"libraries_brew_cask\": \"\", \"libraries_apt\": \"libopenblas-dev\", \"libraries_choco\": \"\", \"cache-path\": \"\", \"cache-key\": \"\", \"cache-restore-keys\": \"\", \"timeout-minutes\": 360, \"posargs\": \"\", \"toxdeps\": \"\", \"toxargs\": \"\", \"pytest\": \"true\", \"pytest-results-summary\": \"false\", \"coverage\": \"codecov\", \"conda\": \"false\", \"setenv\": \"\", \"display\": \"false\"}, {\"os\": \"ubuntu-latest\", \"toxenv\": \"py38-test-oldestdeps\", \"python_version\": \"3.8\", \"name\": \"py38-test-oldestdeps (ubuntu-latest)\", \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}/coverage.xml \", \"libraries_brew\": \"\", \"libraries_brew_cask\": \"\", \"libraries_apt\": \"libopenblas-dev\", \"libraries_choco\": \"\", \"cache-path\": \"\", \"cache-key\": \"\", \"cache-restore-keys\": \"\", \"timeout-minutes\": 360, \"posargs\": \"\", \"toxdeps\": \"\", \"toxargs\": \"\", \"pytest\": \"true\", \"pytest-results-summary\": \"false\", \"coverage\": \"codecov\", \"conda\": \"false\", \"setenv\": \"\", \"display\": \"false\"}, {\"os\": \"ubuntu-latest\", \"toxenv\": \"py38-test\", \"python_version\": \"3.8\", \"name\": \"py38-test (ubuntu-latest)\", \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}/coverage.xml \", \"libraries_brew\": \"\", \"libraries_brew_cask\": \"\", \"libraries_apt\": \"libopenblas-dev\", \"libraries_choco\": \"\", \"cache-path\": \"\", \"cache-key\": \"\", \"cache-restore-keys\": \"\", \"timeout-minutes\": 360, \"posargs\": \"\", \"toxdeps\": \"\", \"toxargs\": \"\", \"pytest\": \"true\", \"pytest-results-summary\": \"false\", \"coverage\": \"codecov\", \"conda\": \"false\", \"setenv\": \"\", \"display\": \"false\"}, {\"os\": \"ubuntu-latest\", \"toxenv\": \"py39-test\", \"python_version\": \"3.9\", \"name\": \"py39-test (ubuntu-latest)\", \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}/coverage.xml \", \"libraries_brew\": \"\", \"libraries_brew_cask\": \"\", \"libraries_apt\": \"libopenblas-dev\", \"libraries_choco\": \"\", \"cache-path\": \"\", \"cache-key\": \"\", \"cache-restore-keys\": \"\", \"timeout-minutes\": 360, \"posargs\": \"\", \"toxdeps\": \"\", \"toxargs\": \"\", \"pytest\": \"true\", \"pytest-results-summary\": \"false\", \"coverage\": \"codecov\", \"conda\": \"false\", \"setenv\": \"\", \"display\": \"false\"}, {\"os\": \"ubuntu-latest\", \"toxenv\": \"py310-test\", \"python_version\": \"3.10\", \"name\": \"py310-test (ubuntu-latest)\", \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}/coverage.xml \", \"libraries_brew\": \"\", \"libraries_brew_cask\": \"\", \"libraries_apt\": \"libopenblas-dev\", \"libraries_choco\": \"\", \"cache-path\": \"\", \"cache-key\": \"\", \"cache-restore-keys\": \"\", \"timeout-minutes\": 360, \"posargs\": \"\", \"toxdeps\": \"\", \"toxargs\": \"\", \"pytest\": \"true\", \"pytest-results-summary\": \"false\", \"coverage\": \"codecov\", \"conda\": \"false\", \"setenv\": \"\", \"display\": \"false\"}, {\"os\": \"ubuntu-latest\", \"toxenv\": \"py311-test-devdeps\", \"python_version\": \"3.11\", \"name\": \"py311-test-devdeps (ubuntu-latest)\", \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}/coverage.xml \", \"libraries_brew\": \"\", \"libraries_brew_cask\": \"\", \"libraries_apt\": \"libopenblas-dev\", \"libraries_choco\": \"\", \"cache-path\": \"\", \"cache-key\": \"\", \"cache-restore-keys\": \"\", \"timeout-minutes\": 360, \"posargs\": \"\", \"toxdeps\": \"\", \"toxargs\": \"\", \"pytest\": \"true\", \"pytest-results-summary\": \"false\", \"coverage\": \"codecov\", \"conda\": \"false\", \"setenv\": \"\", \"display\": \"false\"}, {\"os\": \"windows-latest\", \"toxenv\": \"py38-test-oldestdeps\", \"python_version\": \"3.8\", \"name\": \"py38-test-oldestdeps (windows-latest)\", \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}\\\\\\\\coverage.xml \", \"libraries_brew\": \"\", \"libraries_brew_cask\": \"\", \"libraries_apt\": \"libopenblas-dev\", \"libraries_choco\": \"\", \"cache-path\": \"\", \"cache-key\": \"\", \"cache-restore-keys\": \"\", \"timeout-minutes\": 360, \"posargs\": \"\", \"toxdeps\": \"\", \"toxargs\": \"\", \"pytest\": \"true\", \"pytest-results-summary\": \"false\", \"coverage\": \"codecov\", \"conda\": \"false\", \"setenv\": \"\", \"display\": \"false\"}, {\"os\": \"windows-latest\", \"toxenv\": \"py39-test\", \"python_version\": \"3.9\", \"name\": \"py39-test (windows-latest)\", \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}\\\\\\\\coverage.xml \", \"libraries_brew\": \"\", \"libraries_brew_cask\": \"\", \"libraries_apt\": \"libopenblas-dev\", \"libraries_choco\": \"\", \"cache-path\": \"\", \"cache-key\": \"\", \"cache-restore-keys\": \"\", \"timeout-minutes\": 360, \"posargs\": \"\", \"toxdeps\": \"\", \"toxargs\": \"\", \"pytest\": \"true\", \"pytest-results-summary\": \"false\", \"coverage\": \"codecov\", \"conda\": \"false\", \"setenv\": \"\", \"display\": \"false\"}, {\"os\": \"windows-latest\", \"toxenv\": \"py310-test\", \"python_version\": \"3.10\", \"name\": \"py310-test (windows-latest)\", \"pytest_flag\": \"--cov-report=xml:${GITHUB_WORKSPACE}\\\\\\\\coverage.xml \", \"libraries_brew\": \"\", \"libraries_brew_cask\": \"\", \"libraries_apt\": \"libopenblas-dev\", \"libraries_choco\": \"\", \"cache-path\": \"\", \"cache-key\": \"\", \"cache-restore-keys\": \"\", \"timeout-minutes\": 360, \"posargs\": \"\", \"toxdeps\": \"\", \"toxargs\": \"\", \"pytest\": \"true\", \"pytest-results-summary\": \"false\", \"coverage\": \"codecov\", \"conda\": \"false\", \"setenv\": \"\", \"display\": \"false\"}]}\n[tests/Test Python package/Load tox environments] \u2b50 Run Post actions/setup-python@v4\n[tests/Test Python package/Load tox environments]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[tests/Test Python package/Load tox environments]   \u2705  Success - Post actions/setup-python@v4\n[tests/Test Python package/Load tox environments] \ud83c\udfc1  Job succeeded\n[tests/Test Python package/py38-test-oldestdeps (macos-latest)-1  ] \ud83d\udea7  Skipping unsupported platform -- Try running with `-P macos-latest=...`\n[tests/Test Python package/py310-test (macos-latest)-3            ] \ud83d\udea7  Skipping unsupported platform -- Try running with `-P macos-latest=...`\n[tests/Test Python package/py38-test-oldestdeps (ubuntu-latest)-4 ] \ud83d\ude80  Start image=crawlergpt:latest\n[tests/Test Python package/py38-test (ubuntu-latest)-5            ] \ud83d\ude80  Start image=crawlergpt:latest\n[tests/Test Python package/py39-test (ubuntu-latest)-6            ] \ud83d\ude80  Start image=crawlergpt:latest\n[tests/Test Python package/py39-test (macos-latest)-2             ] \ud83d\udea7  Skipping unsupported platform -- Try running with `-P macos-latest=...`\n[tests/Test Python package/py310-test (ubuntu-latest)-7           ] \ud83d\ude80  Start image=crawlergpt:latest\n[tests/Test Python package/py39-test (ubuntu-latest)-6            ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[tests/Test Python package/py38-test (ubuntu-latest)-5            ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[tests/Test Python package/py38-test-oldestdeps (ubuntu-latest)-4 ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[tests/Test Python package/py310-test (ubuntu-latest)-7           ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[tests/Test Python package/py39-test (ubuntu-latest)-6            ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/Test Python package/py38-test (ubuntu-latest)-5            ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/Test Python package/py310-test (ubuntu-latest)-7           ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/Test Python package/py38-test-oldestdeps (ubuntu-latest)-4 ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/Test Python package/py310-test (ubuntu-latest)-7           ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/Test Python package/py38-test-oldestdeps (ubuntu-latest)-4 ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/Test Python package/py38-test (ubuntu-latest)-5            ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/Test Python package/py39-test (ubuntu-latest)-6            ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/Test Python package/py310-test (ubuntu-latest)-7           ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/astropy-reproject] user=0 workdir=\n[tests/Test Python package/py310-test (ubuntu-latest)-7           ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[tests/Test Python package/py310-test (ubuntu-latest)-7           ] Unable to checkout 88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8: invalid checksum\n[tests/Test Python package/py38-test-oldestdeps (ubuntu-latest)-4 ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/astropy-reproject] user=0 workdir=\n[tests/Test Python package/py38-test (ubuntu-latest)-5            ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/astropy-reproject] user=0 workdir=\n[tests/Test Python package/py310-test (ubuntu-latest)-7           ] \ud83c\udfc1  Job succeeded\n[tests/Test Python package/py311-test-devdeps (ubuntu-latest)-8   ] \ud83d\ude80  Start image=crawlergpt:latest\n[tests/Test Python package/py311-test-devdeps (ubuntu-latest)-8   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[tests/Test Python package/py311-test-devdeps (ubuntu-latest)-8   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/Test Python package/py38-test-oldestdeps (ubuntu-latest)-4 ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[tests/Test Python package/py38-test (ubuntu-latest)-5            ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[tests/Test Python package/py38-test-oldestdeps (ubuntu-latest)-4 ] Unable to checkout 88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8: invalid checksum\n[tests/Test Python package/py38-test (ubuntu-latest)-5            ] Unable to checkout 88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8: invalid checksum\n[tests/Test Python package/py39-test (ubuntu-latest)-6            ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/astropy-reproject] user=0 workdir=\n[tests/Test Python package/py38-test (ubuntu-latest)-5            ] \ud83c\udfc1  Job succeeded\n[tests/Test Python package/py38-test-oldestdeps (ubuntu-latest)-4 ] \ud83c\udfc1  Job succeeded\n[tests/Test Python package/py311-test-devdeps (ubuntu-latest)-8   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/Test Python package/py38-test-oldestdeps (windows-latest)-9] \ud83d\udea7  Skipping unsupported platform -- Try running with `-P windows-latest=...`\n[tests/Test Python package/py39-test (windows-latest)-10          ] \ud83d\udea7  Skipping unsupported platform -- Try running with `-P windows-latest=...`\n[tests/Test Python package/py310-test (windows-latest)-11         ] \ud83d\udea7  Skipping unsupported platform -- Try running with `-P windows-latest=...`\n[tests/Test Python package/py39-test (ubuntu-latest)-6            ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[tests/Test Python package/py39-test (ubuntu-latest)-6            ] Unable to checkout 88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8: invalid checksum\n[tests/Test Python package/py39-test (ubuntu-latest)-6            ] \ud83c\udfc1  Job succeeded\n[tests/Test Python package/py311-test-devdeps (ubuntu-latest)-8   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/astropy-reproject] user=0 workdir=\n[tests/Test Python package/py311-test-devdeps (ubuntu-latest)-8   ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[tests/Test Python package/py311-test-devdeps (ubuntu-latest)-8   ] Unable to checkout 88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8: invalid checksum\n[tests/Test Python package/py311-test-devdeps (ubuntu-latest)-8   ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "time=\"2023-05-29T16:56:33+02:00\" level=error msg=\"Failed to parse 'fail-fast' option: strconv.ParseBool: parsing \\\"${{ inputs.fail-fast }}\\\": invalid syntax\"\nError: invalid checksum\n"
}