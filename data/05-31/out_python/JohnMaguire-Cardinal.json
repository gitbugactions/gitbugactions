{
    "repository": "JohnMaguire/Cardinal",
    "clone_url": "https://github.com/JohnMaguire/Cardinal.git",
    "timestamp": "2023-05-29T14:44:14.405119Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Cardinal/build] \ud83d\ude80  Start image=crawlergpt:latest\n[Cardinal/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Cardinal/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Cardinal/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Cardinal/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/JohnMaguire-Cardinal] user=0 workdir=\n[Cardinal/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[Cardinal/build]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v1\n[Cardinal/build] \ud83e\uddea  Matrix: map[python-version:3.9]\n[Cardinal/build] \u2b50 Run Main actions/checkout@v2\n[Cardinal/build]   \u2705  Success - Main actions/checkout@v2\n[Cardinal/build] \u2b50 Run Main Set up Python 3.9\n[Cardinal/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[Cardinal/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[Cardinal/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[Cardinal/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.9 is 3.9\n[Cardinal/build]   \ud83d\udcac  ::debug::isExplicit: \n[Cardinal/build]   \ud83d\udcac  ::debug::explicit? false\n[Cardinal/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Cardinal/build]   \ud83d\udcac  ::debug::explicit? true\n[Cardinal/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Cardinal/build]   \ud83d\udcac  ::debug::explicit? true\n[Cardinal/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Cardinal/build]   \ud83d\udcac  ::debug::explicit? true\n[Cardinal/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Cardinal/build]   \ud83d\udcac  ::debug::explicit? true\n[Cardinal/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Cardinal/build]   \ud83d\udcac  ::debug::explicit? true\n[Cardinal/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Cardinal/build]   \ud83d\udcac  ::debug::explicit? true\n[Cardinal/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Cardinal/build]   \ud83d\udcac  ::debug::matched: 3.9.6\n[Cardinal/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[Cardinal/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[Cardinal/build]   | Successfully setup CPython (3.9.6)\n[Cardinal/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[Cardinal/build]   \u2705  Success - Main Set up Python 3.9\n[Cardinal/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[Cardinal/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[Cardinal/build]   \u2699  ::set-output:: python-version=3.9.6\n[Cardinal/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[Cardinal/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[Cardinal/build] \u2b50 Run Main Install dependencies\n[Cardinal/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Cardinal/build]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (21.2.4)\n[Cardinal/build]   | Collecting pip\n[Cardinal/build]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[Cardinal/build]   | Installing collected packages: pip\n[Cardinal/build]   |   Attempting uninstall: pip\n[Cardinal/build]   |     Found existing installation: pip 21.2.4\n[Cardinal/build]   |     Uninstalling pip-21.2.4:\n[Cardinal/build]   |       Successfully uninstalled pip-21.2.4\n[Cardinal/build]   | Successfully installed pip-23.1.2\n[Cardinal/build]   | Collecting Twisted==22.4.0 (from -r requirements.txt (line 2))\n[Cardinal/build]   |   Downloading Twisted-22.4.0-py3-none-any.whl (3.1 MB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.1/3.1 MB 31.8 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting pyOpenSSL==23.0.0 (from -r requirements.txt (line 5))\n[Cardinal/build]   |   Downloading pyOpenSSL-23.0.0-py3-none-any.whl (57 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 57.3/57.3 kB 3.4 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting service_identity==21.1.0 (from -r requirements.txt (line 6))\n[Cardinal/build]   |   Downloading service_identity-21.1.0-py2.py3-none-any.whl (12 kB)\n[Cardinal/build]   | Collecting beautifulsoup4==4.11.1 (from -r requirements.txt (line 9))\n[Cardinal/build]   |   Downloading beautifulsoup4-4.11.1-py3-none-any.whl (128 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 128.2/128.2 kB 17.3 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting requests==2.28.1 (from -r requirements.txt (line 10))\n[Cardinal/build]   |   Downloading requests-2.28.1-py3-none-any.whl (62 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.8/62.8 kB 6.5 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting zope.interface>=4.4.2 (from Twisted==22.4.0->-r requirements.txt (line 2))\n[Cardinal/build]   |   Downloading zope.interface-6.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (246 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 246.1/246.1 kB 10.6 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting constantly>=15.1 (from Twisted==22.4.0->-r requirements.txt (line 2))\n[Cardinal/build]   |   Downloading constantly-15.1.0-py2.py3-none-any.whl (7.9 kB)\n[Cardinal/build]   | Collecting incremental>=21.3.0 (from Twisted==22.4.0->-r requirements.txt (line 2))\n[Cardinal/build]   |   Downloading incremental-22.10.0-py2.py3-none-any.whl (16 kB)\n[Cardinal/build]   | Collecting Automat>=0.8.0 (from Twisted==22.4.0->-r requirements.txt (line 2))\n[Cardinal/build]   |   Downloading Automat-22.10.0-py2.py3-none-any.whl (26 kB)\n[Cardinal/build]   | Collecting hyperlink>=17.1.1 (from Twisted==22.4.0->-r requirements.txt (line 2))\n[Cardinal/build]   |   Downloading hyperlink-21.0.0-py2.py3-none-any.whl (74 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 74.6/74.6 kB 3.8 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting attrs>=19.2.0 (from Twisted==22.4.0->-r requirements.txt (line 2))\n[Cardinal/build]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.2/61.2 kB 10.4 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting typing-extensions>=3.6.5 (from Twisted==22.4.0->-r requirements.txt (line 2))\n[Cardinal/build]   |   Downloading typing_extensions-4.6.2-py3-none-any.whl (31 kB)\n[Cardinal/build]   | Collecting cryptography<40,>=38.0.0 (from pyOpenSSL==23.0.0->-r requirements.txt (line 5))\n[Cardinal/build]   |   Downloading cryptography-39.0.2-cp36-abi3-manylinux_2_28_x86_64.whl (4.2 MB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4.2/4.2 MB 47.1 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting pyasn1-modules (from service_identity==21.1.0->-r requirements.txt (line 6))\n[Cardinal/build]   |   Downloading pyasn1_modules-0.3.0-py2.py3-none-any.whl (181 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 181.3/181.3 kB 14.2 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting pyasn1 (from service_identity==21.1.0->-r requirements.txt (line 6))\n[Cardinal/build]   |   Downloading pyasn1-0.5.0-py2.py3-none-any.whl (83 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 83.9/83.9 kB 8.3 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting six (from service_identity==21.1.0->-r requirements.txt (line 6))\n[Cardinal/build]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[Cardinal/build]   | Collecting soupsieve>1.2 (from beautifulsoup4==4.11.1->-r requirements.txt (line 9))\n[Cardinal/build]   |   Downloading soupsieve-2.4.1-py3-none-any.whl (36 kB)\n[Cardinal/build]   | Collecting charset-normalizer<3,>=2 (from requests==2.28.1->-r requirements.txt (line 10))\n[Cardinal/build]   |   Downloading charset_normalizer-2.1.1-py3-none-any.whl (39 kB)\n[Cardinal/build]   | Collecting idna<4,>=2.5 (from requests==2.28.1->-r requirements.txt (line 10))\n[Cardinal/build]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 2.7 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting urllib3<1.27,>=1.21.1 (from requests==2.28.1->-r requirements.txt (line 10))\n[Cardinal/build]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 143.1/143.1 kB 7.4 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting certifi>=2017.4.17 (from requests==2.28.1->-r requirements.txt (line 10))\n[Cardinal/build]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 8.5 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting cffi>=1.12 (from cryptography<40,>=38.0.0->pyOpenSSL==23.0.0->-r requirements.txt (line 5))\n[Cardinal/build]   |   Downloading cffi-1.15.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (441 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 441.2/441.2 kB 9.4 MB/s eta 0:00:00\n[Cardinal/build]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from zope.interface>=4.4.2->Twisted==22.4.0->-r requirements.txt (line 2)) (56.0.0)\n[Cardinal/build]   | Collecting pycparser (from cffi>=1.12->cryptography<40,>=38.0.0->pyOpenSSL==23.0.0->-r requirements.txt (line 5))\n[Cardinal/build]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 118.7/118.7 kB 18.2 MB/s eta 0:00:00\n[Cardinal/build]   | Installing collected packages: incremental, constantly, zope.interface, urllib3, typing-extensions, soupsieve, six, pycparser, pyasn1, idna, charset-normalizer, certifi, attrs, requests, pyasn1-modules, hyperlink, cffi, beautifulsoup4, Automat, Twisted, cryptography, service_identity, pyOpenSSL\n[Cardinal/build]   | Successfully installed Automat-22.10.0 Twisted-22.4.0 attrs-23.1.0 beautifulsoup4-4.11.1 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-2.1.1 constantly-15.1.0 cryptography-39.0.2 hyperlink-21.0.0 idna-3.4 incremental-22.10.0 pyOpenSSL-23.0.0 pyasn1-0.5.0 pyasn1-modules-0.3.0 pycparser-2.21 requests-2.28.1 service_identity-21.1.0 six-1.16.0 soupsieve-2.4.1 typing-extensions-4.6.2 urllib3-1.26.16 zope.interface-6.0\n[Cardinal/build]   | \n[Cardinal/build]   | [notice] A new release of pip is available: 21.1.3 -> 23.1.2\n[Cardinal/build]   | [notice] To update, run: pip install --upgrade pip\n[Cardinal/build]   | Collecting pytest==7.2.0 (from -r test_requirements.txt (line 2))\n[Cardinal/build]   |   Downloading pytest-7.2.0-py3-none-any.whl (316 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 316.8/316.8 kB 2.1 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting pytest-cov==4.0.0 (from -r test_requirements.txt (line 3))\n[Cardinal/build]   |   Downloading pytest_cov-4.0.0-py3-none-any.whl (21 kB)\n[Cardinal/build]   | Collecting pytest-env==0.8.1 (from -r test_requirements.txt (line 4))\n[Cardinal/build]   |   Downloading pytest_env-0.8.1-py3-none-any.whl (5.2 kB)\n[Cardinal/build]   | Collecting pytest-twisted==1.14.0 (from -r test_requirements.txt (line 5))\n[Cardinal/build]   |   Downloading pytest_twisted-1.14.0-py2.py3-none-any.whl (10 kB)\n[Cardinal/build]   | Requirement already satisfied: attrs>=19.2.0 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from pytest==7.2.0->-r test_requirements.txt (line 2)) (23.1.0)\n[Cardinal/build]   | Collecting iniconfig (from pytest==7.2.0->-r test_requirements.txt (line 2))\n[Cardinal/build]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[Cardinal/build]   | Collecting packaging (from pytest==7.2.0->-r test_requirements.txt (line 2))\n[Cardinal/build]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 726.3 kB/s eta 0:00:00\n[Cardinal/build]   | Collecting pluggy<2.0,>=0.12 (from pytest==7.2.0->-r test_requirements.txt (line 2))\n[Cardinal/build]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[Cardinal/build]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest==7.2.0->-r test_requirements.txt (line 2))\n[Cardinal/build]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[Cardinal/build]   | Collecting tomli>=1.0.0 (from pytest==7.2.0->-r test_requirements.txt (line 2))\n[Cardinal/build]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[Cardinal/build]   | Collecting coverage[toml]>=5.2.1 (from pytest-cov==4.0.0->-r test_requirements.txt (line 3))\n[Cardinal/build]   |   Downloading coverage-7.2.6-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (228 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 228.2/228.2 kB 22.0 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting greenlet (from pytest-twisted==1.14.0->-r test_requirements.txt (line 5))\n[Cardinal/build]   |   Downloading greenlet-2.0.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (610 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 610.9/610.9 kB 17.5 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting decorator (from pytest-twisted==1.14.0->-r test_requirements.txt (line 5))\n[Cardinal/build]   |   Downloading decorator-5.1.1-py3-none-any.whl (9.1 kB)\n[Cardinal/build]   | Installing collected packages: tomli, pluggy, packaging, iniconfig, greenlet, exceptiongroup, decorator, coverage, pytest, pytest-twisted, pytest-env, pytest-cov\n[Cardinal/build]   | Successfully installed coverage-7.2.6 decorator-5.1.1 exceptiongroup-1.1.1 greenlet-2.0.2 iniconfig-2.0.0 packaging-23.1 pluggy-1.0.0 pytest-7.2.0 pytest-cov-4.0.0 pytest-env-0.8.1 pytest-twisted-1.14.0 tomli-2.0.1\n[Cardinal/build]   | \n[Cardinal/build]   | [notice] A new release of pip is available: 21.1.3 -> 23.1.2\n[Cardinal/build]   | [notice] To update, run: pip install --upgrade pip\n[Cardinal/build]   | Collecting pytz==2022.7 (from -r plugins/timezone/requirements.txt (line 1))\n[Cardinal/build]   |   Downloading pytz-2022.7-py2.py3-none-any.whl (499 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 499.4/499.4 kB 52.0 MB/s eta 0:00:00\n[Cardinal/build]   | Installing collected packages: pytz\n[Cardinal/build]   | Successfully installed pytz-2022.7\n[Cardinal/build]   | \n[Cardinal/build]   | [notice] A new release of pip is available: 21.1.3 -> 23.1.2\n[Cardinal/build]   | [notice] To update, run: pip install --upgrade pip\n[Cardinal/build]   | Collecting python-twitter==3.5 (from -r plugins/twitter/requirements.txt (line 1))\n[Cardinal/build]   |   Downloading python_twitter-3.5-py2.py3-none-any.whl (67 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 67.4/67.4 kB 27.4 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting future (from python-twitter==3.5->-r plugins/twitter/requirements.txt (line 1))\n[Cardinal/build]   |   Downloading future-0.18.3.tar.gz (840 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 840.9/840.9 kB 114.9 MB/s eta 0:00:00\n[Cardinal/build]   |   Installing build dependencies: started\n[Cardinal/build]   |   Installing build dependencies: finished with status 'done'\n[Cardinal/build]   |   Getting requirements to build wheel: started\n[Cardinal/build]   |   Getting requirements to build wheel: finished with status 'done'\n[Cardinal/build]   |   Preparing metadata (pyproject.toml): started\n[Cardinal/build]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[Cardinal/build]   | Requirement already satisfied: requests in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from python-twitter==3.5->-r plugins/twitter/requirements.txt (line 1)) (2.28.1)\n[Cardinal/build]   | Collecting requests-oauthlib (from python-twitter==3.5->-r plugins/twitter/requirements.txt (line 1))\n[Cardinal/build]   |   Downloading requests_oauthlib-1.3.1-py2.py3-none-any.whl (23 kB)\n[Cardinal/build]   | Requirement already satisfied: charset-normalizer<3,>=2 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from requests->python-twitter==3.5->-r plugins/twitter/requirements.txt (line 1)) (2.1.1)\n[Cardinal/build]   | Requirement already satisfied: idna<4,>=2.5 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from requests->python-twitter==3.5->-r plugins/twitter/requirements.txt (line 1)) (3.4)\n[Cardinal/build]   | Requirement already satisfied: urllib3<1.27,>=1.21.1 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from requests->python-twitter==3.5->-r plugins/twitter/requirements.txt (line 1)) (1.26.16)\n[Cardinal/build]   | Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from requests->python-twitter==3.5->-r plugins/twitter/requirements.txt (line 1)) (2023.5.7)\n[Cardinal/build]   | Collecting oauthlib>=3.0.0 (from requests-oauthlib->python-twitter==3.5->-r plugins/twitter/requirements.txt (line 1))\n[Cardinal/build]   |   Downloading oauthlib-3.2.2-py3-none-any.whl (151 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 151.7/151.7 kB 117.2 MB/s eta 0:00:00\n[Cardinal/build]   | Building wheels for collected packages: future\n[Cardinal/build]   |   Building wheel for future (pyproject.toml): started\n[Cardinal/build]   |   Building wheel for future (pyproject.toml): finished with status 'done'\n[Cardinal/build]   |   Created wheel for future: filename=future-0.18.3-py3-none-any.whl size=492022 sha256=d0e3f29cad67a30809bfcc88fd987dce804e0ef6042b25e4648ee9d7ec8f952a\n[Cardinal/build]   |   Stored in directory: /tmp/pip-ephem-wheel-cache-4q01pva6/wheels/bf/5d/6a/2e53874f7ec4e2bede522385439531fafec8fafe005b5c3d1b\n[Cardinal/build]   | Successfully built future\n[Cardinal/build]   | Installing collected packages: oauthlib, future, requests-oauthlib, python-twitter\n[Cardinal/build]   | Successfully installed future-0.18.3 oauthlib-3.2.2 python-twitter-3.5 requests-oauthlib-1.3.1\n[Cardinal/build]   | \n[Cardinal/build]   | [notice] A new release of pip is available: 21.1.3 -> 23.1.2\n[Cardinal/build]   | [notice] To update, run: pip install --upgrade pip\n[Cardinal/build]   | Collecting google==3.0.0 (from -r plugins/google/requirements.txt (line 1))\n[Cardinal/build]   |   Downloading google-3.0.0-py2.py3-none-any.whl (45 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 45.3/45.3 kB 47.7 MB/s eta 0:00:00\n[Cardinal/build]   | Requirement already satisfied: beautifulsoup4 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from google==3.0.0->-r plugins/google/requirements.txt (line 1)) (4.11.1)\n[Cardinal/build]   | Requirement already satisfied: soupsieve>1.2 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from beautifulsoup4->google==3.0.0->-r plugins/google/requirements.txt (line 1)) (2.4.1)\n[Cardinal/build]   | Installing collected packages: google\n[Cardinal/build]   | Successfully installed google-3.0.0\n[Cardinal/build]   | \n[Cardinal/build]   | [notice] A new release of pip is available: 21.1.3 -> 23.1.2\n[Cardinal/build]   | [notice] To update, run: pip install --upgrade pip\n[Cardinal/build]   | Collecting holidays==0.18 (from -r plugins/ticker/requirements.txt (line 1))\n[Cardinal/build]   |   Downloading holidays-0.18-py3-none-any.whl (195 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 196.0/196.0 kB 40.0 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting python-dateutil==2.8.2 (from -r plugins/ticker/requirements.txt (line 2))\n[Cardinal/build]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 86.7 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting PyMeeus (from holidays==0.18->-r plugins/ticker/requirements.txt (line 1))\n[Cardinal/build]   |   Downloading PyMeeus-0.5.12.tar.gz (5.8 MB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 5.8/5.8 MB 66.8 MB/s eta 0:00:00\n[Cardinal/build]   |   Installing build dependencies: started\n[Cardinal/build]   |   Installing build dependencies: finished with status 'done'\n[Cardinal/build]   |   Getting requirements to build wheel: started\n[Cardinal/build]   |   Getting requirements to build wheel: finished with status 'done'\n[Cardinal/build]   |   Preparing metadata (pyproject.toml): started\n[Cardinal/build]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[Cardinal/build]   | Collecting convertdate>=2.3.0 (from holidays==0.18->-r plugins/ticker/requirements.txt (line 1))\n[Cardinal/build]   |   Downloading convertdate-2.4.0-py3-none-any.whl (47 kB)\n[Cardinal/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 47.9/47.9 kB 117.6 MB/s eta 0:00:00\n[Cardinal/build]   | Collecting hijri-converter (from holidays==0.18->-r plugins/ticker/requirements.txt (line 1))\n[Cardinal/build]   |   Downloading hijri_converter-2.3.1-py3-none-any.whl (13 kB)\n[Cardinal/build]   | Collecting korean-lunar-calendar (from holidays==0.18->-r plugins/ticker/requirements.txt (line 1))\n[Cardinal/build]   |   Downloading korean_lunar_calendar-0.3.1-py3-none-any.whl (9.0 kB)\n[Cardinal/build]   | Requirement already satisfied: six>=1.5 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from python-dateutil==2.8.2->-r plugins/ticker/requirements.txt (line 2)) (1.16.0)\n[Cardinal/build]   | Building wheels for collected packages: PyMeeus\n[Cardinal/build]   |   Building wheel for PyMeeus (pyproject.toml): started\n[Cardinal/build]   |   Building wheel for PyMeeus (pyproject.toml): finished with status 'done'\n[Cardinal/build]   |   Created wheel for PyMeeus: filename=PyMeeus-0.5.12-py3-none-any.whl size=731999 sha256=8f9ad67f6514f29a570fd82a792ab95b2049eee53ffa970c462af249850b8d0f\n[Cardinal/build]   |   Stored in directory: /tmp/pip-ephem-wheel-cache-86bmjcpa/wheels/04/1f/e5/8dd0c661cd8d252817655dc14a84f7ae045d6616594145aa81\n[Cardinal/build]   | Successfully built PyMeeus\n[Cardinal/build]   | Installing collected packages: PyMeeus, korean-lunar-calendar, python-dateutil, hijri-converter, convertdate, holidays\n[Cardinal/build]   | Successfully installed PyMeeus-0.5.12 convertdate-2.4.0 hijri-converter-2.3.1 holidays-0.18 korean-lunar-calendar-0.3.1 python-dateutil-2.8.2\n[Cardinal/build]   | \n[Cardinal/build]   | [notice] A new release of pip is available: 21.1.3 -> 23.1.2\n[Cardinal/build]   | [notice] To update, run: pip install --upgrade pip\n[Cardinal/build]   | Collecting pymediawiki==0.7.2 (from -r plugins/wikipedia/requirements.txt (line 1))\n[Cardinal/build]   |   Downloading pymediawiki-0.7.2-py3-none-any.whl (23 kB)\n[Cardinal/build]   | Requirement already satisfied: beautifulsoup4 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from pymediawiki==0.7.2->-r plugins/wikipedia/requirements.txt (line 1)) (4.11.1)\n[Cardinal/build]   | Requirement already satisfied: requests<3.0.0,>=2.0.0 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from pymediawiki==0.7.2->-r plugins/wikipedia/requirements.txt (line 1)) (2.28.1)\n[Cardinal/build]   | Requirement already satisfied: charset-normalizer<3,>=2 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from requests<3.0.0,>=2.0.0->pymediawiki==0.7.2->-r plugins/wikipedia/requirements.txt (line 1)) (2.1.1)\n[Cardinal/build]   | Requirement already satisfied: idna<4,>=2.5 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from requests<3.0.0,>=2.0.0->pymediawiki==0.7.2->-r plugins/wikipedia/requirements.txt (line 1)) (3.4)\n[Cardinal/build]   | Requirement already satisfied: urllib3<1.27,>=1.21.1 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from requests<3.0.0,>=2.0.0->pymediawiki==0.7.2->-r plugins/wikipedia/requirements.txt (line 1)) (1.26.16)\n[Cardinal/build]   | Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from requests<3.0.0,>=2.0.0->pymediawiki==0.7.2->-r plugins/wikipedia/requirements.txt (line 1)) (2023.5.7)\n[Cardinal/build]   | Requirement already satisfied: soupsieve>1.2 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from beautifulsoup4->pymediawiki==0.7.2->-r plugins/wikipedia/requirements.txt (line 1)) (2.4.1)\n[Cardinal/build]   | Installing collected packages: pymediawiki\n[Cardinal/build]   | Successfully installed pymediawiki-0.7.2\n[Cardinal/build]   | \n[Cardinal/build]   | [notice] A new release of pip is available: 21.1.3 -> 23.1.2\n[Cardinal/build]   | [notice] To update, run: pip install --upgrade pip\n[Cardinal/build]   \u2705  Success - Main Install dependencies\n[Cardinal/build] \u2b50 Run Main Test with pytest\n[Cardinal/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Cardinal/build]   | ============================= test session starts ==============================\n[Cardinal/build]   | platform linux -- Python 3.9.6, pytest-7.2.0, pluggy-1.0.0\n[Cardinal/build]   | rootdir: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/JohnMaguire-Cardinal, configfile: setup.cfg\n[Cardinal/build]   | plugins: twisted-1.14.0, cov-4.0.0, env-0.8.1\n[Cardinal/build]   | collected 321 items\n[Cardinal/build]   | \n[Cardinal/build]   | cardinal/test_bot.py ................................................... [ 15%]\n[Cardinal/build]   | ......                                                                   [ 17%]\n[Cardinal/build]   | cardinal/test_config.py .............                                    [ 21%]\n[Cardinal/build]   | cardinal/test_decorators.py ............................................ [ 35%]\n[Cardinal/build]   | ..                                                                       [ 36%]\n[Cardinal/build]   | cardinal/test_plugins.py ............................................... [ 50%]\n[Cardinal/build]   | ..............................................                           [ 65%]\n[Cardinal/build]   | cardinal/test_util.py ...............................                    [ 74%]\n[Cardinal/build]   | plugins/admin/test_plugin.py ...                                         [ 75%]\n[Cardinal/build]   | plugins/help/test_plugin.py .                                            [ 76%]\n[Cardinal/build]   | plugins/sed/test_plugin.py .........................                     [ 83%]\n[Cardinal/build]   | plugins/ticker/test_plugin.py ..............F..FF....FFF..FFFFF......    [ 95%]\n[Cardinal/build]   | plugins/urls/test_plugin.py .............                                [100%]\n[Cardinal/build]   | \n[Cardinal/build]   | =================================== FAILURES ===================================\n[Cardinal/build]   | __________________ TestTickerPlugin.test_do_predictions[True] __________________\n[Cardinal/build]   | \n[Cardinal/build]   | self = <plugins.ticker.test_plugin.TestTickerPlugin object at 0x7f93a1ad2a90>\n[Cardinal/build]   | mock_reactor = <twisted.internet.task.Clock object at 0x7f93a126e850>\n[Cardinal/build]   | market_is_open = True\n[Cardinal/build]   | \n[Cardinal/build]   |     @pytest.mark.parametrize(\"market_is_open\", [True, False])\n[Cardinal/build]   |     @patch.object(util, 'reactor', new_callable=Clock)\n[Cardinal/build]   |     @pytest_twisted.inlineCallbacks\n[Cardinal/build]   |     def test_do_predictions(self, mock_reactor, market_is_open):\n[Cardinal/build]   |         symbol = 'SPY'\n[Cardinal/build]   |         base = 100.0\n[Cardinal/build]   |     \n[Cardinal/build]   |         user1 = 'user1'\n[Cardinal/build]   |         user2 = 'user2'\n[Cardinal/build]   |         prediction1 = 105.0\n[Cardinal/build]   |         prediction2 = 96.0\n[Cardinal/build]   |     \n[Cardinal/build]   |         actual = 95.0\n[Cardinal/build]   |     \n[Cardinal/build]   |         yield self.plugin.save_prediction(\n[Cardinal/build]   |             symbol,\n[Cardinal/build]   |             user1,\n[Cardinal/build]   |             base,\n[Cardinal/build]   |             prediction1,\n[Cardinal/build]   |         )\n[Cardinal/build]   |         yield self.plugin.save_prediction(\n[Cardinal/build]   |             symbol,\n[Cardinal/build]   |             user2,\n[Cardinal/build]   |             base,\n[Cardinal/build]   |             prediction2,\n[Cardinal/build]   |         )\n[Cardinal/build]   |     \n[Cardinal/build]   |         assert len(self.db['predictions']) == 1\n[Cardinal/build]   |         assert len(self.db['predictions'][symbol]) == 2\n[Cardinal/build]   |     \n[Cardinal/build]   |         response = make_iex_response(symbol, price=actual)\n[Cardinal/build]   |     \n[Cardinal/build]   |         with mock_api(response, fake_now=get_fake_now(market_is_open)):\n[Cardinal/build]   |             d = self.plugin.do_predictions()\n[Cardinal/build]   |             mock_reactor.advance(15)\n[Cardinal/build]   |     \n[Cardinal/build]   |             yield d\n[Cardinal/build]   |     \n[Cardinal/build]   |         assert len(self.mock_cardinal.sendMsg.mock_calls) == 3\n[Cardinal/build]   | >       self.mock_cardinal.sendMsg.assert_called_with(\n[Cardinal/build]   |             self.channel,\n[Cardinal/build]   |             '{} had the closest guess for \\x02{}\\x02 out of {} predictions '\n[Cardinal/build]   |             'with a prediction of {:.2f} (\\x0304{:.2f}%\\x03) '\n[Cardinal/build]   |             'compared to the actual {} of {:.2f} (\\x0304{:.2f}%\\x03).'.format(\n[Cardinal/build]   |                 user2,\n[Cardinal/build]   |                 symbol,\n[Cardinal/build]   |                 2,\n[Cardinal/build]   |                 prediction2,\n[Cardinal/build]   |                 -4,\n[Cardinal/build]   |                 'open' if market_is_open else 'close',\n[Cardinal/build]   |                 actual,\n[Cardinal/build]   |                 -5))\n[Cardinal/build]   | \n[Cardinal/build]   | plugins/ticker/test_plugin.py:326: \n[Cardinal/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Cardinal/build]   | \n[Cardinal/build]   | self = <Mock name='mock.sendMsg' id='140272040178544'>\n[Cardinal/build]   | args = ('#test', 'user2 had the closest guess for \\x02SPY\\x02 out of 2 predictions with a prediction of 96.00 (\\x0304-4.00%\\x03) compared to the actual open of 95.00 (\\x0304-5.00%\\x03).')\n[Cardinal/build]   | kwargs = {}\n[Cardinal/build]   | expected = call('#test', 'user2 had the closest guess for \\x02SPY\\x02 out of 2 predictions with a prediction of 96.00 (\\x0304-4.00%\\x03) compared to the actual open of 95.00 (\\x0304-5.00%\\x03).')\n[Cardinal/build]   | actual = call('#test', 'user2 had the closest guess for \\x02SPY\\x02 out of 2 predictions with a prediction of 96.00 (\\x0304-4.00%\\x03) compared to the actual close of 95.00 (\\x0304-5.00%\\x03).')\n[Cardinal/build]   | _error_message = <function NonCallableMock.assert_called_with.<locals>._error_message at 0x7f93a453baf0>\n[Cardinal/build]   | cause = None\n[Cardinal/build]   | \n[Cardinal/build]   |     def assert_called_with(self, /, *args, **kwargs):\n[Cardinal/build]   |         \"\"\"assert that the last call was made with the specified arguments.\n[Cardinal/build]   |     \n[Cardinal/build]   |         Raises an AssertionError if the args and keyword args passed in are\n[Cardinal/build]   |         different to the last call to the mock.\"\"\"\n[Cardinal/build]   |         if self.call_args is None:\n[Cardinal/build]   |             expected = self._format_mock_call_signature(args, kwargs)\n[Cardinal/build]   |             actual = 'not called.'\n[Cardinal/build]   |             error_message = ('expected call not found.\\nExpected: %s\\nActual: %s'\n[Cardinal/build]   |                     % (expected, actual))\n[Cardinal/build]   |             raise AssertionError(error_message)\n[Cardinal/build]   |     \n[Cardinal/build]   |         def _error_message():\n[Cardinal/build]   |             msg = self._format_mock_failure_message(args, kwargs)\n[Cardinal/build]   |             return msg\n[Cardinal/build]   |         expected = self._call_matcher(_Call((args, kwargs), two=True))\n[Cardinal/build]   |         actual = self._call_matcher(self.call_args)\n[Cardinal/build]   |         if actual != expected:\n[Cardinal/build]   |             cause = expected if isinstance(expected, Exception) else None\n[Cardinal/build]   | >           raise AssertionError(_error_message()) from cause\n[Cardinal/build]   | E           AssertionError: expected call not found.\n[Cardinal/build]   | E           Expected: sendMsg('#test', 'user2 had the closest guess for \\x02SPY\\x02 out of 2 predictions with a prediction of 96.00 (\\x0304-4.00%\\x03) compared to the actual open of 95.00 (\\x0304-5.00%\\x03).')\n[Cardinal/build]   | E           Actual: sendMsg('#test', 'user2 had the closest guess for \\x02SPY\\x02 out of 2 predictions with a prediction of 96.00 (\\x0304-4.00%\\x03) compared to the actual close of 95.00 (\\x0304-5.00%\\x03).')\n[Cardinal/build]   | \n[Cardinal/build]   | /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/unittest/mock.py:907: AssertionError\n[Cardinal/build]   | _ TestTickerPlugin.test_predict[SPY-.predict SPY +5%-Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) -True] _\n[Cardinal/build]   | \n[Cardinal/build]   | self = <plugins.ticker.test_plugin.TestTickerPlugin object at 0x7f93a1ad2160>\n[Cardinal/build]   | symbol = 'SPY', input_msg = '.predict SPY +5%'\n[Cardinal/build]   | output_msg = 'Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) '\n[Cardinal/build]   | market_is_open = True\n[Cardinal/build]   | \n[Cardinal/build]   |     @pytest.mark.parametrize(\"symbol,input_msg,output_msg,market_is_open\", [\n[Cardinal/build]   |         (\"SPY\",\n[Cardinal/build]   |          \".predict SPY +5%\",\n[Cardinal/build]   |          \"Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) \",\n[Cardinal/build]   |          True,\n[Cardinal/build]   |          ),\n[Cardinal/build]   |         (\"SPY\",\n[Cardinal/build]   |          \".predict SPY -5%\",\n[Cardinal/build]   |          \"Prediction by nick for \\x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) \",\n[Cardinal/build]   |          True,\n[Cardinal/build]   |          ),\n[Cardinal/build]   |         (\"SPY\",\n[Cardinal/build]   |          \".predict SPY -5%\",\n[Cardinal/build]   |          \"Prediction by nick for \\x02SPY\\x02 at market open: 95.00 (\\x0304-5.00%\\x03) \",\n[Cardinal/build]   |          False,\n[Cardinal/build]   |          ),\n[Cardinal/build]   |         # testing a few more formats of stock symbols\n[Cardinal/build]   |         (\"^RUT\",\n[Cardinal/build]   |          \".predict ^RUT -5%\",\n[Cardinal/build]   |          \"Prediction by nick for \\x02^RUT\\x02 at market open: 95.00 (\\x0304-5.00%\\x03) \",\n[Cardinal/build]   |          False,\n[Cardinal/build]   |          ),\n[Cardinal/build]   |         (\"REE.MC\",\n[Cardinal/build]   |          \".predict REE.MC -5%\",\n[Cardinal/build]   |          \"Prediction by nick for \\x02REE.MC\\x02 at market open: 95.00 (\\x0304-5.00%\\x03) \",\n[Cardinal/build]   |          False,\n[Cardinal/build]   |          ),\n[Cardinal/build]   |         (\"LON:HDLV\",\n[Cardinal/build]   |          \".predict LON:HDLV -5%\",\n[Cardinal/build]   |          \"Prediction by nick for \\x02LON:HDLV\\x02 at market open: 95.00 (\\x0304-5.00%\\x03) \",\n[Cardinal/build]   |          False,\n[Cardinal/build]   |          ),\n[Cardinal/build]   |     ])\n[Cardinal/build]   |     @pytest_twisted.inlineCallbacks\n[Cardinal/build]   |     def test_predict(self,\n[Cardinal/build]   |                      symbol,\n[Cardinal/build]   |                      input_msg,\n[Cardinal/build]   |                      output_msg,\n[Cardinal/build]   |                      market_is_open):\n[Cardinal/build]   |         channel = \"#finance\"\n[Cardinal/build]   |     \n[Cardinal/build]   |         fake_now = get_fake_now(market_is_open=market_is_open)\n[Cardinal/build]   |     \n[Cardinal/build]   |         kwargs = {'previous_close': 100} if market_is_open else {'price': 100}\n[Cardinal/build]   |         response = make_iex_response(symbol, **kwargs)\n[Cardinal/build]   |     \n[Cardinal/build]   |         with mock_api(response, fake_now=fake_now):\n[Cardinal/build]   |             yield self.plugin.predict(self.mock_cardinal,\n[Cardinal/build]   |                                       user_info(\"nick\", \"user\", \"vhost\"),\n[Cardinal/build]   |                                       channel,\n[Cardinal/build]   |                                       input_msg)\n[Cardinal/build]   |     \n[Cardinal/build]   |         assert symbol in self.db['predictions']\n[Cardinal/build]   |         assert len(self.db['predictions'][symbol]) == 1\n[Cardinal/build]   |     \n[Cardinal/build]   | >       self.mock_cardinal.sendMsg.assert_called_once_with(\n[Cardinal/build]   |             channel,\n[Cardinal/build]   |             output_msg)\n[Cardinal/build]   | \n[Cardinal/build]   | plugins/ticker/test_plugin.py:419: \n[Cardinal/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Cardinal/build]   | /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/unittest/mock.py:919: in assert_called_once_with\n[Cardinal/build]   |     return self.assert_called_with(*args, **kwargs)\n[Cardinal/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Cardinal/build]   | \n[Cardinal/build]   | self = <Mock name='mock.sendMsg' id='140272040628720'>\n[Cardinal/build]   | args = ('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | kwargs = {}\n[Cardinal/build]   | expected = call('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | actual = call('#finance', 'Prediction by nick for \\x02SPY\\x02 at market open: 102.24 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | _error_message = <function NonCallableMock.assert_called_with.<locals>._error_message at 0x7f93a1270430>\n[Cardinal/build]   | cause = None\n[Cardinal/build]   | \n[Cardinal/build]   |     def assert_called_with(self, /, *args, **kwargs):\n[Cardinal/build]   |         \"\"\"assert that the last call was made with the specified arguments.\n[Cardinal/build]   |     \n[Cardinal/build]   |         Raises an AssertionError if the args and keyword args passed in are\n[Cardinal/build]   |         different to the last call to the mock.\"\"\"\n[Cardinal/build]   |         if self.call_args is None:\n[Cardinal/build]   |             expected = self._format_mock_call_signature(args, kwargs)\n[Cardinal/build]   |             actual = 'not called.'\n[Cardinal/build]   |             error_message = ('expected call not found.\\nExpected: %s\\nActual: %s'\n[Cardinal/build]   |                     % (expected, actual))\n[Cardinal/build]   |             raise AssertionError(error_message)\n[Cardinal/build]   |     \n[Cardinal/build]   |         def _error_message():\n[Cardinal/build]   |             msg = self._format_mock_failure_message(args, kwargs)\n[Cardinal/build]   |             return msg\n[Cardinal/build]   |         expected = self._call_matcher(_Call((args, kwargs), two=True))\n[Cardinal/build]   |         actual = self._call_matcher(self.call_args)\n[Cardinal/build]   |         if actual != expected:\n[Cardinal/build]   |             cause = expected if isinstance(expected, Exception) else None\n[Cardinal/build]   | >           raise AssertionError(_error_message()) from cause\n[Cardinal/build]   | E           AssertionError: expected call not found.\n[Cardinal/build]   | E           Expected: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | E           Actual: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market open: 102.24 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | \n[Cardinal/build]   | /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/unittest/mock.py:907: AssertionError\n[Cardinal/build]   | _ TestTickerPlugin.test_predict[SPY-.predict SPY -5%-Prediction by nick for \\x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) -True] _\n[Cardinal/build]   | \n[Cardinal/build]   | self = <plugins.ticker.test_plugin.TestTickerPlugin object at 0x7f93a1ac8eb0>\n[Cardinal/build]   | symbol = 'SPY', input_msg = '.predict SPY -5%'\n[Cardinal/build]   | output_msg = 'Prediction by nick for \\x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) '\n[Cardinal/build]   | market_is_open = True\n[Cardinal/build]   | \n[Cardinal/build]   |     @pytest.mark.parametrize(\"symbol,input_msg,output_msg,market_is_open\", [\n[Cardinal/build]   |         (\"SPY\",\n[Cardinal/build]   |          \".predict SPY +5%\",\n[Cardinal/build]   |          \"Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) \",\n[Cardinal/build]   |          True,\n[Cardinal/build]   |          ),\n[Cardinal/build]   |         (\"SPY\",\n[Cardinal/build]   |          \".predict SPY -5%\",\n[Cardinal/build]   |          \"Prediction by nick for \\x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) \",\n[Cardinal/build]   |          True,\n[Cardinal/build]   |          ),\n[Cardinal/build]   |         (\"SPY\",\n[Cardinal/build]   |          \".predict SPY -5%\",\n[Cardinal/build]   |          \"Prediction by nick for \\x02SPY\\x02 at market open: 95.00 (\\x0304-5.00%\\x03) \",\n[Cardinal/build]   |          False,\n[Cardinal/build]   |          ),\n[Cardinal/build]   |         # testing a few more formats of stock symbols\n[Cardinal/build]   |         (\"^RUT\",\n[Cardinal/build]   |          \".predict ^RUT -5%\",\n[Cardinal/build]   |          \"Prediction by nick for \\x02^RUT\\x02 at market open: 95.00 (\\x0304-5.00%\\x03) \",\n[Cardinal/build]   |          False,\n[Cardinal/build]   |          ),\n[Cardinal/build]   |         (\"REE.MC\",\n[Cardinal/build]   |          \".predict REE.MC -5%\",\n[Cardinal/build]   |          \"Prediction by nick for \\x02REE.MC\\x02 at market open: 95.00 (\\x0304-5.00%\\x03) \",\n[Cardinal/build]   |          False,\n[Cardinal/build]   |          ),\n[Cardinal/build]   |         (\"LON:HDLV\",\n[Cardinal/build]   |          \".predict LON:HDLV -5%\",\n[Cardinal/build]   |          \"Prediction by nick for \\x02LON:HDLV\\x02 at market open: 95.00 (\\x0304-5.00%\\x03) \",\n[Cardinal/build]   |          False,\n[Cardinal/build]   |          ),\n[Cardinal/build]   |     ])\n[Cardinal/build]   |     @pytest_twisted.inlineCallbacks\n[Cardinal/build]   |     def test_predict(self,\n[Cardinal/build]   |                      symbol,\n[Cardinal/build]   |                      input_msg,\n[Cardinal/build]   |                      output_msg,\n[Cardinal/build]   |                      market_is_open):\n[Cardinal/build]   |         channel = \"#finance\"\n[Cardinal/build]   |     \n[Cardinal/build]   |         fake_now = get_fake_now(market_is_open=market_is_open)\n[Cardinal/build]   |     \n[Cardinal/build]   |         kwargs = {'previous_close': 100} if market_is_open else {'price': 100}\n[Cardinal/build]   |         response = make_iex_response(symbol, **kwargs)\n[Cardinal/build]   |     \n[Cardinal/build]   |         with mock_api(response, fake_now=fake_now):\n[Cardinal/build]   |             yield self.plugin.predict(self.mock_cardinal,\n[Cardinal/build]   |                                       user_info(\"nick\", \"user\", \"vhost\"),\n[Cardinal/build]   |                                       channel,\n[Cardinal/build]   |                                       input_msg)\n[Cardinal/build]   |     \n[Cardinal/build]   |         assert symbol in self.db['predictions']\n[Cardinal/build]   |         assert len(self.db['predictions'][symbol]) == 1\n[Cardinal/build]   |     \n[Cardinal/build]   | >       self.mock_cardinal.sendMsg.assert_called_once_with(\n[Cardinal/build]   |             channel,\n[Cardinal/build]   |             output_msg)\n[Cardinal/build]   | \n[Cardinal/build]   | plugins/ticker/test_plugin.py:419: \n[Cardinal/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Cardinal/build]   | /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/unittest/mock.py:919: in assert_called_once_with\n[Cardinal/build]   |     return self.assert_called_with(*args, **kwargs)\n[Cardinal/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Cardinal/build]   | \n[Cardinal/build]   | self = <Mock name='mock.sendMsg' id='140272040631168'>\n[Cardinal/build]   | args = ('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) ')\n[Cardinal/build]   | kwargs = {}\n[Cardinal/build]   | expected = call('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) ')\n[Cardinal/build]   | actual = call('#finance', 'Prediction by nick for \\x02SPY\\x02 at market open: 94.06 (\\x0304-5.00%\\x03) ')\n[Cardinal/build]   | _error_message = <function NonCallableMock.assert_called_with.<locals>._error_message at 0x7f93a1149430>\n[Cardinal/build]   | cause = None\n[Cardinal/build]   | \n[Cardinal/build]   |     def assert_called_with(self, /, *args, **kwargs):\n[Cardinal/build]   |         \"\"\"assert that the last call was made with the specified arguments.\n[Cardinal/build]   |     \n[Cardinal/build]   |         Raises an AssertionError if the args and keyword args passed in are\n[Cardinal/build]   |         different to the last call to the mock.\"\"\"\n[Cardinal/build]   |         if self.call_args is None:\n[Cardinal/build]   |             expected = self._format_mock_call_signature(args, kwargs)\n[Cardinal/build]   |             actual = 'not called.'\n[Cardinal/build]   |             error_message = ('expected call not found.\\nExpected: %s\\nActual: %s'\n[Cardinal/build]   |                     % (expected, actual))\n[Cardinal/build]   |             raise AssertionError(error_message)\n[Cardinal/build]   |     \n[Cardinal/build]   |         def _error_message():\n[Cardinal/build]   |             msg = self._format_mock_failure_message(args, kwargs)\n[Cardinal/build]   |             return msg\n[Cardinal/build]   |         expected = self._call_matcher(_Call((args, kwargs), two=True))\n[Cardinal/build]   |         actual = self._call_matcher(self.call_args)\n[Cardinal/build]   |         if actual != expected:\n[Cardinal/build]   |             cause = expected if isinstance(expected, Exception) else None\n[Cardinal/build]   | >           raise AssertionError(_error_message()) from cause\n[Cardinal/build]   | E           AssertionError: expected call not found.\n[Cardinal/build]   | E           Expected: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) ')\n[Cardinal/build]   | E           Actual: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market open: 94.06 (\\x0304-5.00%\\x03) ')\n[Cardinal/build]   | \n[Cardinal/build]   | /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/unittest/mock.py:907: AssertionError\n[Cardinal/build]   | ____________ TestTickerPlugin.test_predict_replace[message_pairs0] _____________\n[Cardinal/build]   | \n[Cardinal/build]   | self = <plugins.ticker.test_plugin.TestTickerPlugin object at 0x7f93a1ade2b0>\n[Cardinal/build]   | message_pairs = (('.predict SPY +5%', 'Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) '), ('.predict SPY...x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) (replaces old prediction of 105.00 (\\x03095.00%\\x03) set at {})'))\n[Cardinal/build]   | \n[Cardinal/build]   |     @pytest.mark.parametrize(\"message_pairs\", [\n[Cardinal/build]   |         ((\".predict SPY +5%\",\n[Cardinal/build]   |           \"Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) \",\n[Cardinal/build]   |           ),\n[Cardinal/build]   |          (\".predict SPY -5%\",\n[Cardinal/build]   |           \"Prediction by nick for \\x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) \"\n[Cardinal/build]   |           \"(replaces old prediction of 105.00 (\\x03095.00%\\x03) set at {})\"\n[Cardinal/build]   |           ),\n[Cardinal/build]   |          )\n[Cardinal/build]   |     ])\n[Cardinal/build]   |     @pytest_twisted.inlineCallbacks\n[Cardinal/build]   |     def test_predict_replace(self, message_pairs):\n[Cardinal/build]   |         channel = \"#finance\"\n[Cardinal/build]   |         symbol = 'SPY'\n[Cardinal/build]   |     \n[Cardinal/build]   |         response = make_iex_response(symbol, previous_close=100)\n[Cardinal/build]   |     \n[Cardinal/build]   |         fake_now = get_fake_now()\n[Cardinal/build]   |         for input_msg, output_msg in message_pairs:\n[Cardinal/build]   |             with mock_api(response, fake_now):\n[Cardinal/build]   |                 yield self.plugin.predict(self.mock_cardinal,\n[Cardinal/build]   |                                           user_info(\"nick\", \"user\", \"vhost\"),\n[Cardinal/build]   |                                           channel,\n[Cardinal/build]   |                                           input_msg)\n[Cardinal/build]   |     \n[Cardinal/build]   |                 assert symbol in self.db['predictions']\n[Cardinal/build]   |                 assert len(self.db['predictions'][symbol]) == 1\n[Cardinal/build]   |     \n[Cardinal/build]   | >               self.mock_cardinal.sendMsg.assert_called_with(\n[Cardinal/build]   |                     channel,\n[Cardinal/build]   |                     output_msg.format(fake_now.strftime('%Y-%m-%d %H:%M:%S %Z'))\n[Cardinal/build]   |                     if '{}' in output_msg else\n[Cardinal/build]   |                     output_msg)\n[Cardinal/build]   | \n[Cardinal/build]   | plugins/ticker/test_plugin.py:451: \n[Cardinal/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Cardinal/build]   | \n[Cardinal/build]   | self = <Mock name='mock.sendMsg' id='140272040399152'>\n[Cardinal/build]   | args = ('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | kwargs = {}\n[Cardinal/build]   | expected = call('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | actual = call('#finance', 'Prediction by nick for \\x02SPY\\x02 at market open: 108.81 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | _error_message = <function NonCallableMock.assert_called_with.<locals>._error_message at 0x7f93a12521f0>\n[Cardinal/build]   | cause = None\n[Cardinal/build]   | \n[Cardinal/build]   |     def assert_called_with(self, /, *args, **kwargs):\n[Cardinal/build]   |         \"\"\"assert that the last call was made with the specified arguments.\n[Cardinal/build]   |     \n[Cardinal/build]   |         Raises an AssertionError if the args and keyword args passed in are\n[Cardinal/build]   |         different to the last call to the mock.\"\"\"\n[Cardinal/build]   |         if self.call_args is None:\n[Cardinal/build]   |             expected = self._format_mock_call_signature(args, kwargs)\n[Cardinal/build]   |             actual = 'not called.'\n[Cardinal/build]   |             error_message = ('expected call not found.\\nExpected: %s\\nActual: %s'\n[Cardinal/build]   |                     % (expected, actual))\n[Cardinal/build]   |             raise AssertionError(error_message)\n[Cardinal/build]   |     \n[Cardinal/build]   |         def _error_message():\n[Cardinal/build]   |             msg = self._format_mock_failure_message(args, kwargs)\n[Cardinal/build]   |             return msg\n[Cardinal/build]   |         expected = self._call_matcher(_Call((args, kwargs), two=True))\n[Cardinal/build]   |         actual = self._call_matcher(self.call_args)\n[Cardinal/build]   |         if actual != expected:\n[Cardinal/build]   |             cause = expected if isinstance(expected, Exception) else None\n[Cardinal/build]   | >           raise AssertionError(_error_message()) from cause\n[Cardinal/build]   | E           AssertionError: expected call not found.\n[Cardinal/build]   | E           Expected: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | E           Actual: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market open: 108.81 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | \n[Cardinal/build]   | /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/unittest/mock.py:907: AssertionError\n[Cardinal/build]   | _ TestTickerPlugin.test_predict_relayed_relay_bot[<nick> .predict SPY +5%-Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) ] _\n[Cardinal/build]   | \n[Cardinal/build]   | self = <plugins.ticker.test_plugin.TestTickerPlugin object at 0x7f93a1ade670>\n[Cardinal/build]   | input_msg = '<nick> .predict SPY +5%'\n[Cardinal/build]   | output_msg = 'Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) '\n[Cardinal/build]   | \n[Cardinal/build]   |     @pytest.mark.parametrize(\"input_msg,output_msg\", [\n[Cardinal/build]   |         (\"<nick> .predict SPY +5%\",\n[Cardinal/build]   |          \"Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) \",\n[Cardinal/build]   |          ),\n[Cardinal/build]   |         (\"<nick> .predict SPY -5%\",\n[Cardinal/build]   |          \"Prediction by nick for \\x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) \",\n[Cardinal/build]   |          ),\n[Cardinal/build]   |     ])\n[Cardinal/build]   |     @pytest_twisted.inlineCallbacks\n[Cardinal/build]   |     def test_predict_relayed_relay_bot(self, input_msg, output_msg):\n[Cardinal/build]   |         symbol = 'SPY'\n[Cardinal/build]   |         channel = \"#finance\"\n[Cardinal/build]   |     \n[Cardinal/build]   |         response = make_iex_response(symbol, previous_close=100)\n[Cardinal/build]   |         with mock_api(response):\n[Cardinal/build]   |             yield self.plugin.predict_relayed(\n[Cardinal/build]   |                 self.mock_cardinal,\n[Cardinal/build]   |                 user_info(\"relay.bot\", \"relay\", \"relay\"),\n[Cardinal/build]   |                 channel,\n[Cardinal/build]   |                 input_msg)\n[Cardinal/build]   |     \n[Cardinal/build]   |         assert symbol in self.db['predictions']\n[Cardinal/build]   |         assert len(self.db['predictions'][symbol]) == 1\n[Cardinal/build]   |     \n[Cardinal/build]   | >       self.mock_cardinal.sendMsg.assert_called_once_with(\n[Cardinal/build]   |             channel,\n[Cardinal/build]   |             output_msg)\n[Cardinal/build]   | \n[Cardinal/build]   | plugins/ticker/test_plugin.py:481: \n[Cardinal/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Cardinal/build]   | /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/unittest/mock.py:919: in assert_called_once_with\n[Cardinal/build]   |     return self.assert_called_with(*args, **kwargs)\n[Cardinal/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Cardinal/build]   | \n[Cardinal/build]   | self = <Mock name='mock.sendMsg' id='140272040931728'>\n[Cardinal/build]   | args = ('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | kwargs = {}\n[Cardinal/build]   | expected = call('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | actual = call('#finance', 'Prediction by nick for \\x02SPY\\x02 at market open: 105.75 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | _error_message = <function NonCallableMock.assert_called_with.<locals>._error_message at 0x7f93a1270820>\n[Cardinal/build]   | cause = None\n[Cardinal/build]   | \n[Cardinal/build]   |     def assert_called_with(self, /, *args, **kwargs):\n[Cardinal/build]   |         \"\"\"assert that the last call was made with the specified arguments.\n[Cardinal/build]   |     \n[Cardinal/build]   |         Raises an AssertionError if the args and keyword args passed in are\n[Cardinal/build]   |         different to the last call to the mock.\"\"\"\n[Cardinal/build]   |         if self.call_args is None:\n[Cardinal/build]   |             expected = self._format_mock_call_signature(args, kwargs)\n[Cardinal/build]   |             actual = 'not called.'\n[Cardinal/build]   |             error_message = ('expected call not found.\\nExpected: %s\\nActual: %s'\n[Cardinal/build]   |                     % (expected, actual))\n[Cardinal/build]   |             raise AssertionError(error_message)\n[Cardinal/build]   |     \n[Cardinal/build]   |         def _error_message():\n[Cardinal/build]   |             msg = self._format_mock_failure_message(args, kwargs)\n[Cardinal/build]   |             return msg\n[Cardinal/build]   |         expected = self._call_matcher(_Call((args, kwargs), two=True))\n[Cardinal/build]   |         actual = self._call_matcher(self.call_args)\n[Cardinal/build]   |         if actual != expected:\n[Cardinal/build]   |             cause = expected if isinstance(expected, Exception) else None\n[Cardinal/build]   | >           raise AssertionError(_error_message()) from cause\n[Cardinal/build]   | E           AssertionError: expected call not found.\n[Cardinal/build]   | E           Expected: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | E           Actual: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market open: 105.75 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | \n[Cardinal/build]   | /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/unittest/mock.py:907: AssertionError\n[Cardinal/build]   | _ TestTickerPlugin.test_predict_relayed_relay_bot[<nick> .predict SPY -5%-Prediction by nick for \\x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) ] _\n[Cardinal/build]   | \n[Cardinal/build]   | self = <plugins.ticker.test_plugin.TestTickerPlugin object at 0x7f93a1ade700>\n[Cardinal/build]   | input_msg = '<nick> .predict SPY -5%'\n[Cardinal/build]   | output_msg = 'Prediction by nick for \\x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) '\n[Cardinal/build]   | \n[Cardinal/build]   |     @pytest.mark.parametrize(\"input_msg,output_msg\", [\n[Cardinal/build]   |         (\"<nick> .predict SPY +5%\",\n[Cardinal/build]   |          \"Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) \",\n[Cardinal/build]   |          ),\n[Cardinal/build]   |         (\"<nick> .predict SPY -5%\",\n[Cardinal/build]   |          \"Prediction by nick for \\x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) \",\n[Cardinal/build]   |          ),\n[Cardinal/build]   |     ])\n[Cardinal/build]   |     @pytest_twisted.inlineCallbacks\n[Cardinal/build]   |     def test_predict_relayed_relay_bot(self, input_msg, output_msg):\n[Cardinal/build]   |         symbol = 'SPY'\n[Cardinal/build]   |         channel = \"#finance\"\n[Cardinal/build]   |     \n[Cardinal/build]   |         response = make_iex_response(symbol, previous_close=100)\n[Cardinal/build]   |         with mock_api(response):\n[Cardinal/build]   |             yield self.plugin.predict_relayed(\n[Cardinal/build]   |                 self.mock_cardinal,\n[Cardinal/build]   |                 user_info(\"relay.bot\", \"relay\", \"relay\"),\n[Cardinal/build]   |                 channel,\n[Cardinal/build]   |                 input_msg)\n[Cardinal/build]   |     \n[Cardinal/build]   |         assert symbol in self.db['predictions']\n[Cardinal/build]   |         assert len(self.db['predictions'][symbol]) == 1\n[Cardinal/build]   |     \n[Cardinal/build]   | >       self.mock_cardinal.sendMsg.assert_called_once_with(\n[Cardinal/build]   |             channel,\n[Cardinal/build]   |             output_msg)\n[Cardinal/build]   | \n[Cardinal/build]   | plugins/ticker/test_plugin.py:481: \n[Cardinal/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Cardinal/build]   | /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/unittest/mock.py:919: in assert_called_once_with\n[Cardinal/build]   |     return self.assert_called_with(*args, **kwargs)\n[Cardinal/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Cardinal/build]   | \n[Cardinal/build]   | self = <Mock name='mock.sendMsg' id='140272040909840'>\n[Cardinal/build]   | args = ('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) ')\n[Cardinal/build]   | kwargs = {}\n[Cardinal/build]   | expected = call('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) ')\n[Cardinal/build]   | actual = call('#finance', 'Prediction by nick for \\x02SPY\\x02 at market open: 93.25 (\\x0304-5.00%\\x03) ')\n[Cardinal/build]   | _error_message = <function NonCallableMock.assert_called_with.<locals>._error_message at 0x7f93a1252310>\n[Cardinal/build]   | cause = None\n[Cardinal/build]   | \n[Cardinal/build]   |     def assert_called_with(self, /, *args, **kwargs):\n[Cardinal/build]   |         \"\"\"assert that the last call was made with the specified arguments.\n[Cardinal/build]   |     \n[Cardinal/build]   |         Raises an AssertionError if the args and keyword args passed in are\n[Cardinal/build]   |         different to the last call to the mock.\"\"\"\n[Cardinal/build]   |         if self.call_args is None:\n[Cardinal/build]   |             expected = self._format_mock_call_signature(args, kwargs)\n[Cardinal/build]   |             actual = 'not called.'\n[Cardinal/build]   |             error_message = ('expected call not found.\\nExpected: %s\\nActual: %s'\n[Cardinal/build]   |                     % (expected, actual))\n[Cardinal/build]   |             raise AssertionError(error_message)\n[Cardinal/build]   |     \n[Cardinal/build]   |         def _error_message():\n[Cardinal/build]   |             msg = self._format_mock_failure_message(args, kwargs)\n[Cardinal/build]   |             return msg\n[Cardinal/build]   |         expected = self._call_matcher(_Call((args, kwargs), two=True))\n[Cardinal/build]   |         actual = self._call_matcher(self.call_args)\n[Cardinal/build]   |         if actual != expected:\n[Cardinal/build]   |             cause = expected if isinstance(expected, Exception) else None\n[Cardinal/build]   | >           raise AssertionError(_error_message()) from cause\n[Cardinal/build]   | E           AssertionError: expected call not found.\n[Cardinal/build]   | E           Expected: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) ')\n[Cardinal/build]   | E           Actual: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market open: 93.25 (\\x0304-5.00%\\x03) ')\n[Cardinal/build]   | \n[Cardinal/build]   | /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/unittest/mock.py:907: AssertionError\n[Cardinal/build]   | _ TestTickerPlugin.test_parse_prediction_open[whoami-.predict SPY 5%-100-expected0] _\n[Cardinal/build]   | \n[Cardinal/build]   | self = <plugins.ticker.test_plugin.TestTickerPlugin object at 0x7f93a1aded90>\n[Cardinal/build]   | user = 'whoami', message = '.predict SPY 5%', value = 100\n[Cardinal/build]   | expected = ('whoami', 'SPY', 105, 100)\n[Cardinal/build]   | \n[Cardinal/build]   |     @pytest.mark.parametrize(\"user,message,value,expected\", [\n[Cardinal/build]   |         (\n[Cardinal/build]   |             \"whoami\",\n[Cardinal/build]   |             \".predict SPY 5%\",\n[Cardinal/build]   |             100,\n[Cardinal/build]   |             (\"whoami\", \"SPY\", 105, 100),\n[Cardinal/build]   |         ),\n[Cardinal/build]   |         (\n[Cardinal/build]   |             \"whoami\",\n[Cardinal/build]   |             \".predict SPY +5%\",\n[Cardinal/build]   |             100,\n[Cardinal/build]   |             (\"whoami\", \"SPY\", 105, 100),\n[Cardinal/build]   |         ),\n[Cardinal/build]   |         (\n[Cardinal/build]   |             \"whoami\",\n[Cardinal/build]   |             \".predict SPY -5%\",\n[Cardinal/build]   |             100,\n[Cardinal/build]   |             (\"whoami\", \"SPY\", 95, 100),\n[Cardinal/build]   |         ),\n[Cardinal/build]   |     ])\n[Cardinal/build]   |     @pytest_twisted.inlineCallbacks\n[Cardinal/build]   |     def test_parse_prediction_open(\n[Cardinal/build]   |             self,\n[Cardinal/build]   |             user,\n[Cardinal/build]   |             message,\n[Cardinal/build]   |             value,\n[Cardinal/build]   |             expected,\n[Cardinal/build]   |     ):\n[Cardinal/build]   |         symbol = 'SPY'\n[Cardinal/build]   |     \n[Cardinal/build]   |         response = make_iex_response(symbol, previous_close=value)\n[Cardinal/build]   |         with mock_api(response):\n[Cardinal/build]   |             result = yield self.plugin.parse_prediction(user, message)\n[Cardinal/build]   |     \n[Cardinal/build]   | >       assert result == expected\n[Cardinal/build]   | E       AssertionError: assert ('whoami', 'S...5164529412024) == ('whoami', 'SPY', 105, 100)\n[Cardinal/build]   | E         At index 2 diff: 100.74922755882625 != 105\n[Cardinal/build]   | E         Full diff:\n[Cardinal/build]   | E         - ('whoami', 'SPY', 105, 100)\n[Cardinal/build]   | E         + ('whoami', 'SPY', 100.74922755882625, 95.95164529412024)\n[Cardinal/build]   | \n[Cardinal/build]   | plugins/ticker/test_plugin.py:536: AssertionError\n[Cardinal/build]   | _ TestTickerPlugin.test_parse_prediction_open[whoami-.predict SPY +5%-100-expected1] _\n[Cardinal/build]   | \n[Cardinal/build]   | self = <plugins.ticker.test_plugin.TestTickerPlugin object at 0x7f93a1adee20>\n[Cardinal/build]   | user = 'whoami', message = '.predict SPY +5%', value = 100\n[Cardinal/build]   | expected = ('whoami', 'SPY', 105, 100)\n[Cardinal/build]   | \n[Cardinal/build]   |     @pytest.mark.parametrize(\"user,message,value,expected\", [\n[Cardinal/build]   |         (\n[Cardinal/build]   |             \"whoami\",\n[Cardinal/build]   |             \".predict SPY 5%\",\n[Cardinal/build]   |             100,\n[Cardinal/build]   |             (\"whoami\", \"SPY\", 105, 100),\n[Cardinal/build]   |         ),\n[Cardinal/build]   |         (\n[Cardinal/build]   |             \"whoami\",\n[Cardinal/build]   |             \".predict SPY +5%\",\n[Cardinal/build]   |             100,\n[Cardinal/build]   |             (\"whoami\", \"SPY\", 105, 100),\n[Cardinal/build]   |         ),\n[Cardinal/build]   |         (\n[Cardinal/build]   |             \"whoami\",\n[Cardinal/build]   |             \".predict SPY -5%\",\n[Cardinal/build]   |             100,\n[Cardinal/build]   |             (\"whoami\", \"SPY\", 95, 100),\n[Cardinal/build]   |         ),\n[Cardinal/build]   |     ])\n[Cardinal/build]   |     @pytest_twisted.inlineCallbacks\n[Cardinal/build]   |     def test_parse_prediction_open(\n[Cardinal/build]   |             self,\n[Cardinal/build]   |             user,\n[Cardinal/build]   |             message,\n[Cardinal/build]   |             value,\n[Cardinal/build]   |             expected,\n[Cardinal/build]   |     ):\n[Cardinal/build]   |         symbol = 'SPY'\n[Cardinal/build]   |     \n[Cardinal/build]   |         response = make_iex_response(symbol, previous_close=value)\n[Cardinal/build]   |         with mock_api(response):\n[Cardinal/build]   |             result = yield self.plugin.parse_prediction(user, message)\n[Cardinal/build]   |     \n[Cardinal/build]   | >       assert result == expected\n[Cardinal/build]   | E       AssertionError: assert ('whoami', 'S...0744431523406) == ('whoami', 'SPY', 105, 100)\n[Cardinal/build]   | E         At index 2 diff: 102.48781653099576 != 105\n[Cardinal/build]   | E         Full diff:\n[Cardinal/build]   | E         - ('whoami', 'SPY', 105, 100)\n[Cardinal/build]   | E         + ('whoami', 'SPY', 102.48781653099576, 97.60744431523406)\n[Cardinal/build]   | \n[Cardinal/build]   | plugins/ticker/test_plugin.py:536: AssertionError\n[Cardinal/build]   | _ TestTickerPlugin.test_parse_prediction_open[whoami-.predict SPY -5%-100-expected2] _\n[Cardinal/build]   | \n[Cardinal/build]   | self = <plugins.ticker.test_plugin.TestTickerPlugin object at 0x7f93a1adeeb0>\n[Cardinal/build]   | user = 'whoami', message = '.predict SPY -5%', value = 100\n[Cardinal/build]   | expected = ('whoami', 'SPY', 95, 100)\n[Cardinal/build]   | \n[Cardinal/build]   |     @pytest.mark.parametrize(\"user,message,value,expected\", [\n[Cardinal/build]   |         (\n[Cardinal/build]   |             \"whoami\",\n[Cardinal/build]   |             \".predict SPY 5%\",\n[Cardinal/build]   |             100,\n[Cardinal/build]   |             (\"whoami\", \"SPY\", 105, 100),\n[Cardinal/build]   |         ),\n[Cardinal/build]   |         (\n[Cardinal/build]   |             \"whoami\",\n[Cardinal/build]   |             \".predict SPY +5%\",\n[Cardinal/build]   |             100,\n[Cardinal/build]   |             (\"whoami\", \"SPY\", 105, 100),\n[Cardinal/build]   |         ),\n[Cardinal/build]   |         (\n[Cardinal/build]   |             \"whoami\",\n[Cardinal/build]   |             \".predict SPY -5%\",\n[Cardinal/build]   |             100,\n[Cardinal/build]   |             (\"whoami\", \"SPY\", 95, 100),\n[Cardinal/build]   |         ),\n[Cardinal/build]   |     ])\n[Cardinal/build]   |     @pytest_twisted.inlineCallbacks\n[Cardinal/build]   |     def test_parse_prediction_open(\n[Cardinal/build]   |             self,\n[Cardinal/build]   |             user,\n[Cardinal/build]   |             message,\n[Cardinal/build]   |             value,\n[Cardinal/build]   |             expected,\n[Cardinal/build]   |     ):\n[Cardinal/build]   |         symbol = 'SPY'\n[Cardinal/build]   |     \n[Cardinal/build]   |         response = make_iex_response(symbol, previous_close=value)\n[Cardinal/build]   |         with mock_api(response):\n[Cardinal/build]   |             result = yield self.plugin.parse_prediction(user, message)\n[Cardinal/build]   |     \n[Cardinal/build]   | >       assert result == expected\n[Cardinal/build]   | E       AssertionError: assert ('whoami', 'S...9968952268352) == ('whoami', 'SPY', 95, 100)\n[Cardinal/build]   | E         At index 2 diff: 96.51970504654935 != 95\n[Cardinal/build]   | E         Full diff:\n[Cardinal/build]   | E         - ('whoami', 'SPY', 95, 100)\n[Cardinal/build]   | E         + ('whoami', 'SPY', 96.51970504654935, 101.59968952268352)\n[Cardinal/build]   | \n[Cardinal/build]   | plugins/ticker/test_plugin.py:536: AssertionError\n[Cardinal/build]   | _ TestTickerPlugin.test_parse_prediction_open_dollar_amount[whoami-.predict SPY 500-100-expected0] _\n[Cardinal/build]   | \n[Cardinal/build]   | self = <plugins.ticker.test_plugin.TestTickerPlugin object at 0x7f93a1a6d250>\n[Cardinal/build]   | user = 'whoami', message = '.predict SPY 500', value = 100\n[Cardinal/build]   | expected = ('whoami', 'SPY', 500, 100)\n[Cardinal/build]   | \n[Cardinal/build]   |     @pytest.mark.parametrize(\"user,message,value,expected\", [\n[Cardinal/build]   |         (\n[Cardinal/build]   |             \"whoami\",\n[Cardinal/build]   |             \".predict SPY 500\",\n[Cardinal/build]   |             100,\n[Cardinal/build]   |             (\"whoami\", \"SPY\", 500, 100),\n[Cardinal/build]   |         ),\n[Cardinal/build]   |         (\n[Cardinal/build]   |             \"whoami\",\n[Cardinal/build]   |             \".predict SPY $100\",\n[Cardinal/build]   |             100,\n[Cardinal/build]   |             (\"whoami\", \"SPY\", 100, 100),\n[Cardinal/build]   |         ),\n[Cardinal/build]   |     ])\n[Cardinal/build]   |     @pytest_twisted.inlineCallbacks\n[Cardinal/build]   |     def test_parse_prediction_open_dollar_amount(\n[Cardinal/build]   |             self,\n[Cardinal/build]   |             user,\n[Cardinal/build]   |             message,\n[Cardinal/build]   |             value,\n[Cardinal/build]   |             expected,\n[Cardinal/build]   |     ):\n[Cardinal/build]   |         symbol = 'SPY'\n[Cardinal/build]   |     \n[Cardinal/build]   |         response = make_iex_response(symbol, previous_close=value)\n[Cardinal/build]   |         with mock_api(response):\n[Cardinal/build]   |             result = yield self.plugin.parse_prediction(user, message)\n[Cardinal/build]   |     \n[Cardinal/build]   | >       assert result == expected\n[Cardinal/build]   | E       AssertionError: assert ('whoami', 'S...1642021867214) == ('whoami', 'SPY', 500, 100)\n[Cardinal/build]   | E         At index 3 diff: 102.51642021867214 != 100\n[Cardinal/build]   | E         Full diff:\n[Cardinal/build]   | E         - ('whoami', 'SPY', 500, 100)\n[Cardinal/build]   | E         + ('whoami', 'SPY', 500.0, 102.51642021867214)\n[Cardinal/build]   | E         ?                      ++    +++++++ ++++++++\n[Cardinal/build]   | \n[Cardinal/build]   | plugins/ticker/test_plugin.py:566: AssertionError\n[Cardinal/build]   | _ TestTickerPlugin.test_parse_prediction_open_dollar_amount[whoami-.predict SPY $100-100-expected1] _\n[Cardinal/build]   | \n[Cardinal/build]   | self = <plugins.ticker.test_plugin.TestTickerPlugin object at 0x7f93a1a6d2e0>\n[Cardinal/build]   | user = 'whoami', message = '.predict SPY $100', value = 100\n[Cardinal/build]   | expected = ('whoami', 'SPY', 100, 100)\n[Cardinal/build]   | \n[Cardinal/build]   |     @pytest.mark.parametrize(\"user,message,value,expected\", [\n[Cardinal/build]   |         (\n[Cardinal/build]   |             \"whoami\",\n[Cardinal/build]   |             \".predict SPY 500\",\n[Cardinal/build]   |             100,\n[Cardinal/build]   |             (\"whoami\", \"SPY\", 500, 100),\n[Cardinal/build]   |         ),\n[Cardinal/build]   |         (\n[Cardinal/build]   |             \"whoami\",\n[Cardinal/build]   |             \".predict SPY $100\",\n[Cardinal/build]   |             100,\n[Cardinal/build]   |             (\"whoami\", \"SPY\", 100, 100),\n[Cardinal/build]   |         ),\n[Cardinal/build]   |     ])\n[Cardinal/build]   |     @pytest_twisted.inlineCallbacks\n[Cardinal/build]   |     def test_parse_prediction_open_dollar_amount(\n[Cardinal/build]   |             self,\n[Cardinal/build]   |             user,\n[Cardinal/build]   |             message,\n[Cardinal/build]   |             value,\n[Cardinal/build]   |             expected,\n[Cardinal/build]   |     ):\n[Cardinal/build]   |         symbol = 'SPY'\n[Cardinal/build]   |     \n[Cardinal/build]   |         response = make_iex_response(symbol, previous_close=value)\n[Cardinal/build]   |         with mock_api(response):\n[Cardinal/build]   |             result = yield self.plugin.parse_prediction(user, message)\n[Cardinal/build]   |     \n[Cardinal/build]   | >       assert result == expected\n[Cardinal/build]   | E       AssertionError: assert ('whoami', 'S...7568402392916) == ('whoami', 'SPY', 100, 100)\n[Cardinal/build]   | E         At index 3 diff: 99.07568402392916 != 100\n[Cardinal/build]   | E         Full diff:\n[Cardinal/build]   | E         - ('whoami', 'SPY', 100, 100)\n[Cardinal/build]   | E         + ('whoami', 'SPY', 100.0, 99.07568402392916)\n[Cardinal/build]   | \n[Cardinal/build]   | plugins/ticker/test_plugin.py:566: AssertionError\n[Cardinal/build]   | =============================== warnings summary ===============================\n[Cardinal/build]   | ../../../opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/coverage/inorout.py:460\n[Cardinal/build]   |   /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/coverage/inorout.py:460: CoverageWarning: --include is ignored because --source is set (include-ignored)\n[Cardinal/build]   |     self.warn(\"--include is ignored because --source is set\", slug=\"include-ignored\")\n[Cardinal/build]   | \n[Cardinal/build]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[Cardinal/build]   | \n[Cardinal/build]   | ----------- coverage: platform linux, python 3.9.6-final-0 -----------\n[Cardinal/build]   | Name                        Stmts   Miss  Cover   Missing\n[Cardinal/build]   | ---------------------------------------------------------\n[Cardinal/build]   | cardinal.py                    64     64     0%   3-159\n[Cardinal/build]   | cardinal/__init__.py            0      0   100%\n[Cardinal/build]   | cardinal/bot.py               401     43    89%   160-165, 181-186, 193-194, 201-202, 338, 547, 805, 811, 817, 827-875, 890\n[Cardinal/build]   | cardinal/config.py             38      0   100%\n[Cardinal/build]   | cardinal/decorators.py         38      0   100%\n[Cardinal/build]   | cardinal/exceptions.py          9      0   100%\n[Cardinal/build]   | cardinal/plugins.py           356      0   100%\n[Cardinal/build]   | cardinal/unittest_util.py      21      0   100%\n[Cardinal/build]   | cardinal/util.py               86      4    95%   117, 121, 125, 129\n[Cardinal/build]   | ---------------------------------------------------------\n[Cardinal/build]   | TOTAL                        1013    111    89%\n[Cardinal/build]   | \n[Cardinal/build]   | =========================== short test summary info ============================\n[Cardinal/build]   | FAILED plugins/ticker/test_plugin.py::TestTickerPlugin::test_do_predictions[True] - AssertionError: expected call not found.\n[Cardinal/build]   | Expected: sendMsg('#test', 'user2 had the closest guess for \\x02SPY\\x02 out of 2 predictions with a prediction of 96.00 (\\x0304-4.00%\\x03) compared to the actual open of 95.00 (\\x0304-5.00%\\x03).')\n[Cardinal/build]   | Actual: sendMsg('#test', 'user2 had the closest guess for \\x02SPY\\x02 out of 2 predictions with a prediction of 96.00 (\\x0304-4.00%\\x03) compared to the actual close of 95.00 (\\x0304-5.00%\\x03).')\n[Cardinal/build]   | FAILED plugins/ticker/test_plugin.py::TestTickerPlugin::test_predict[SPY-.predict SPY +5%-Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) -True] - AssertionError: expected call not found.\n[Cardinal/build]   | Expected: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | Actual: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market open: 102.24 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | FAILED plugins/ticker/test_plugin.py::TestTickerPlugin::test_predict[SPY-.predict SPY -5%-Prediction by nick for \\x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) -True] - AssertionError: expected call not found.\n[Cardinal/build]   | Expected: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) ')\n[Cardinal/build]   | Actual: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market open: 94.06 (\\x0304-5.00%\\x03) ')\n[Cardinal/build]   | FAILED plugins/ticker/test_plugin.py::TestTickerPlugin::test_predict_replace[message_pairs0] - AssertionError: expected call not found.\n[Cardinal/build]   | Expected: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | Actual: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market open: 108.81 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | FAILED plugins/ticker/test_plugin.py::TestTickerPlugin::test_predict_relayed_relay_bot[<nick> .predict SPY +5%-Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) ] - AssertionError: expected call not found.\n[Cardinal/build]   | Expected: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 105.00 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | Actual: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market open: 105.75 (\\x03095.00%\\x03) ')\n[Cardinal/build]   | FAILED plugins/ticker/test_plugin.py::TestTickerPlugin::test_predict_relayed_relay_bot[<nick> .predict SPY -5%-Prediction by nick for \\x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) ] - AssertionError: expected call not found.\n[Cardinal/build]   | Expected: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market close: 95.00 (\\x0304-5.00%\\x03) ')\n[Cardinal/build]   | Actual: sendMsg('#finance', 'Prediction by nick for \\x02SPY\\x02 at market open: 93.25 (\\x0304-5.00%\\x03) ')\n[Cardinal/build]   | FAILED plugins/ticker/test_plugin.py::TestTickerPlugin::test_parse_prediction_open[whoami-.predict SPY 5%-100-expected0] - AssertionError: assert ('whoami', 'S...5164529412024) == ('whoami', 'SPY', 105, 100)\n[Cardinal/build]   |   At index 2 diff: 100.74922755882625 != 105\n[Cardinal/build]   |   Full diff:\n[Cardinal/build]   |   - ('whoami', 'SPY', 105, 100)\n[Cardinal/build]   |   + ('whoami', 'SPY', 100.74922755882625, 95.95164529412024)\n[Cardinal/build]   | FAILED plugins/ticker/test_plugin.py::TestTickerPlugin::test_parse_prediction_open[whoami-.predict SPY +5%-100-expected1] - AssertionError: assert ('whoami', 'S...0744431523406) == ('whoami', 'SPY', 105, 100)\n[Cardinal/build]   |   At index 2 diff: 102.48781653099576 != 105\n[Cardinal/build]   |   Full diff:\n[Cardinal/build]   |   - ('whoami', 'SPY', 105, 100)\n[Cardinal/build]   |   + ('whoami', 'SPY', 102.48781653099576, 97.60744431523406)\n[Cardinal/build]   | FAILED plugins/ticker/test_plugin.py::TestTickerPlugin::test_parse_prediction_open[whoami-.predict SPY -5%-100-expected2] - AssertionError: assert ('whoami', 'S...9968952268352) == ('whoami', 'SPY', 95, 100)\n[Cardinal/build]   |   At index 2 diff: 96.51970504654935 != 95\n[Cardinal/build]   |   Full diff:\n[Cardinal/build]   |   - ('whoami', 'SPY', 95, 100)\n[Cardinal/build]   |   + ('whoami', 'SPY', 96.51970504654935, 101.59968952268352)\n[Cardinal/build]   | FAILED plugins/ticker/test_plugin.py::TestTickerPlugin::test_parse_prediction_open_dollar_amount[whoami-.predict SPY 500-100-expected0] - AssertionError: assert ('whoami', 'S...1642021867214) == ('whoami', 'SPY', 500, 100)\n[Cardinal/build]   |   At index 3 diff: 102.51642021867214 != 100\n[Cardinal/build]   |   Full diff:\n[Cardinal/build]   |   - ('whoami', 'SPY', 500, 100)\n[Cardinal/build]   |   + ('whoami', 'SPY', 500.0, 102.51642021867214)\n[Cardinal/build]   |   ?                      ++    +++++++ ++++++++\n[Cardinal/build]   | FAILED plugins/ticker/test_plugin.py::TestTickerPlugin::test_parse_prediction_open_dollar_amount[whoami-.predict SPY $100-100-expected1] - AssertionError: assert ('whoami', 'S...7568402392916) == ('whoami', 'SPY', 100, 100)\n[Cardinal/build]   |   At index 3 diff: 99.07568402392916 != 100\n[Cardinal/build]   |   Full diff:\n[Cardinal/build]   |   - ('whoami', 'SPY', 100, 100)\n[Cardinal/build]   |   + ('whoami', 'SPY', 100.0, 99.07568402392916)\n[Cardinal/build]   | ================== 11 failed, 310 passed, 1 warning in 8.83s ===================\n[Cardinal/build]   \u274c  Failure - Main Test with pytest\n[Cardinal/build] exitcode '1': failure\n[Cardinal/build] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'build' failed\n"
}