{
    "repository": "pylast/pylast",
    "clone_url": "https://github.com/pylast/pylast.git",
    "timestamp": "2023-05-29T14:41:12.750569Z",
    "clone_success": true,
    "number of actions": 6,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Test/test] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast] user=0 workdir=\n[Test/test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[Test/test]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[Test/test] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:pypy3.9]\n[Test/test] \u2b50 Run Main actions/checkout@v3\n[Test/test]   \u2705  Success - Main actions/checkout@v3\n[Test/test] \u2b50 Run Main Set up Python pypy3.9\n[Test/test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[Test/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[Test/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[Test/test]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[Test/test]   \u2753  ::group::Installed versions\n[Test/test]   \ud83d\udcac  ::debug::isExplicit: \n[Test/test]   \ud83d\udcac  ::debug::explicit? false\n[Test/test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Test/test]   \ud83d\udcac  ::debug::explicit? true\n[Test/test]   \ud83d\udcac  ::debug::isExplicit: 3.6.12\n[Test/test]   \ud83d\udcac  ::debug::explicit? true\n[Test/test]   \ud83d\udcac  ::debug::isExplicit: 3.7.10\n[Test/test]   \ud83d\udcac  ::debug::explicit? true\n[Test/test]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Test/test]   \ud83d\udcac  ::debug::match not found\n[Test/test]   | PyPy version 3.9 (x) was not found in the local cache\n[Test/test]   | Downloading PyPy from \"https://downloads.python.org/pypy/pypy3.9-v7.3.11-linux64.tar.bz2\" ...\n[Test/test]   \ud83d\udcac  ::debug::Downloading https://downloads.python.org/pypy/pypy3.9-v7.3.11-linux64.tar.bz2\n[Test/test]   \ud83d\udcac  ::debug::Destination /tmp/f6e814d2-39ca-4f98-8746-483f1bd72091\n[Test/test]   \ud83d\udcac  ::debug::download complete\n[Test/test]   | Extracting downloaded archive...\n[Test/test]   \ud83d\udcac  ::debug::Checking tar --version\n[Test/test]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Test/test]   | [command]/usr/bin/tar x --warning=no-unknown-keyword -C /tmp/81b3482a-7e96-4bbc-a6cd-367a6fbb1593 -f /tmp/f6e814d2-39ca-4f98-8746-483f1bd72091\n[Test/test]   \ud83d\udcac  ::debug::Caching tool PyPy 3.9.16 x64\n[Test/test]   \ud83d\udcac  ::debug::source dir: /tmp/81b3482a-7e96-4bbc-a6cd-367a6fbb1593/pypy3.9-v7.3.11-linux64\n[Test/test]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/PyPy/3.9.16/x64\n[Test/test]   \ud83d\udcac  ::debug::finished caching tool\n[Test/test]   | Creating symlinks...\n[Test/test]   | Installing and updating pip\n[Test/test]   | [command]/opt/hostedtoolcache/PyPy/3.9.16/x64/bin/python -m ensurepip\n[Test/test]   | Looking in links: /tmp/tmphllq28ll\n[Test/test]   | Processing /tmp/tmphllq28ll/setuptools-58.1.0-py3-none-any.whl\n[Test/test]   | Processing /tmp/tmphllq28ll/pip-22.0.4-py3-none-any.whl\n[Test/test]   | Installing collected packages: setuptools, pip\n[Test/test]   | Successfully installed pip-22.0.4 setuptools-58.1.0\n[Test/test]   | [command]/opt/hostedtoolcache/PyPy/3.9.16/x64/bin/python -m pip install --ignore-installed pip\n[Test/test]   | Collecting pip\n[Test/test]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[Test/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 16.1 MB/s eta 0:00:00\n[Test/test]   | Installing collected packages: pip\n[Test/test]   | Successfully installed pip-23.1.2\n[Test/test]   | WARNING: You are using pip version 22.0.4; however, version 23.1.2 is available.\n[Test/test]   | You should consider upgrading via the '/opt/hostedtoolcache/PyPy/3.9.16/x64/bin/python -m pip install --upgrade pip' command.\n[Test/test]   | Successfully set up PyPy 7.3.11 with Python (3.9.16)\n[Test/test]   \u2753  ::endgroup::\n[Test/test]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[Test/test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[Test/test]   \u2705  Success - Main Set up Python pypy3.9\n[Test/test]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/PyPy/3.9.16/x64/bin/lib/pkgconfig\n[Test/test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/PyPy/3.9.16/x64\n[Test/test]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/PyPy/3.9.16/x64\n[Test/test]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/PyPy/3.9.16/x64\n[Test/test]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/PyPy/3.9.16/x64\n[Test/test]   \u2699  ::set-output:: python-version=pypy7.3.11\n[Test/test]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/PyPy/3.9.16/x64/bin/python\n[Test/test]   \u2699  ::add-path:: /opt/hostedtoolcache/PyPy/3.9.16/x64/bin\n[Test/test]   \u2699  ::add-path:: /opt/hostedtoolcache/PyPy/3.9.16/x64/bin\n[Test/test] \u2b50 Run Main Install dependencies\n[Test/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test/test]   | Requirement already satisfied: pip in /opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages (22.0.4)\n[Test/test]   | Collecting pip\n[Test/test]   |   Using cached pip-23.1.2-py3-none-any.whl (2.1 MB)\n[Test/test]   | Installing collected packages: pip\n[Test/test]   |   Attempting uninstall: pip\n[Test/test]   |     Found existing installation: pip 22.0.4\n[Test/test]   |     Uninstalling pip-22.0.4:\n[Test/test]   |       Successfully uninstalled pip-22.0.4\n[Test/test]   | Successfully installed pip-23.1.2\n[Test/test]   | Collecting wheel\n[Test/test]   |   Downloading wheel-0.40.0-py3-none-any.whl (64 kB)\n[Test/test]   | \u001b[?25l                                              0.0/64.5 kB ? eta -:--:--\r\u001b[2K     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501   61.4/64.5 kB 39.3 MB/s eta 0:00:01\r\u001b[2K     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 64.5/64.5 kB 1.8 MB/s eta 0:00:00\n[Test/test]   | \u001b[?25hInstalling collected packages: wheel\n[Test/test]   | Successfully installed wheel-0.40.0\n[Test/test]   | Collecting tox\n[Test/test]   |   Downloading tox-4.5.2-py3-none-any.whl (148 kB)\n[Test/test]   | \u001b[?25l                                              0.0/149.0 kB ? eta -:--:--\r\u001b[2K     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 149.0/149.0 kB 13.1 MB/s eta 0:00:00\n[Test/test]   | \u001b[?25hCollecting cachetools>=5.3 (from tox)\n[Test/test]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[Test/test]   | Collecting chardet>=5.1 (from tox)\n[Test/test]   |   Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n[Test/test]   | \u001b[?25l                                              0.0/199.1 kB ? eta -:--:--\r\u001b[2K     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 199.1/199.1 kB 9.7 MB/s eta 0:00:00\n[Test/test]   | \u001b[?25hCollecting colorama>=0.4.6 (from tox)\n[Test/test]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[Test/test]   | Collecting filelock>=3.12 (from tox)\n[Test/test]   |   Downloading filelock-3.12.0-py3-none-any.whl (10 kB)\n[Test/test]   | Collecting packaging>=23.1 (from tox)\n[Test/test]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[Test/test]   | \u001b[?25l                                              0.0/48.9 kB ? eta -:--:--\r\u001b[2K     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 2.9 MB/s eta 0:00:00\n[Test/test]   | \u001b[?25hCollecting platformdirs>=3.5.1 (from tox)\n[Test/test]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[Test/test]   | Collecting pluggy>=1 (from tox)\n[Test/test]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[Test/test]   | Collecting pyproject-api>=1.5.1 (from tox)\n[Test/test]   |   Downloading pyproject_api-1.5.1-py3-none-any.whl (12 kB)\n[Test/test]   | Collecting tomli>=2.0.1 (from tox)\n[Test/test]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[Test/test]   | Collecting virtualenv>=20.23 (from tox)\n[Test/test]   |   Downloading virtualenv-20.23.0-py3-none-any.whl (3.3 MB)\n[Test/test]   | \u001b[?25l                                              0.0/3.3 MB ? eta -:--:--\r\u001b[2K     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2578                    1.7/3.3 MB 49.3 MB/s eta 0:00:01\r\u001b[2K     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2578 3.2/3.3 MB 38.8 MB/s eta 0:00:01\r\u001b[2K     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.3/3.3 MB 20.1 MB/s eta 0:00:00\n[Test/test]   | \u001b[?25hCollecting distlib<1,>=0.3.6 (from virtualenv>=20.23->tox)\n[Test/test]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[Test/test]   | \u001b[?25l                                              0.0/468.5 kB ? eta -:--:--\r\u001b[2K     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 468.5/468.5 kB 21.0 MB/s eta 0:00:00\n[Test/test]   | \u001b[?25hInstalling collected packages: distlib, tomli, pluggy, platformdirs, packaging, filelock, colorama, chardet, cachetools, virtualenv, pyproject-api, tox\n[Test/test]   | Successfully installed cachetools-5.3.1 chardet-5.1.0 colorama-0.4.6 distlib-0.3.6 filelock-3.12.0 packaging-23.1 platformdirs-3.5.1 pluggy-1.0.0 pyproject-api-1.5.1 tomli-2.0.1 tox-4.5.2 virtualenv-20.23.0\n[Test/test]   \u2705  Success - Main Install dependencies\n[Test/test] \u2b50 Run Main Tox tests\n[Test/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Test/test]   | \u001b[1m\u001b[35m.pkg:\u001b[0m\u001b[36m install_requires\u001b[22m\u001b[2m>\u001b[0m python -I -m pip install hatch-vcs hatchling\u001b[0m\n[Test/test]   | \u001b[1m\u001b[35m.pkg:\u001b[0m\u001b[36m _optional_hooks\u001b[22m\u001b[2m>\u001b[0m python /opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/pyproject_api/_backend.py True hatchling.build\u001b[0m\n[Test/test]   | \u001b[1m\u001b[35m.pkg:\u001b[0m\u001b[36m get_requires_for_build_sdist\u001b[22m\u001b[2m>\u001b[0m python /opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/pyproject_api/_backend.py True hatchling.build\u001b[0m\n[Test/test]   | \u001b[1m\u001b[35m.pkg:\u001b[0m\u001b[36m freeze\u001b[22m\u001b[2m>\u001b[0m python -m pip freeze --all\u001b[0m\n[Test/test]   | \u001b[1m\u001b[35m.pkg:\u001b[0m\u001b[36m cffi==1.15.1,editables==0.3,greenlet==0.4.13,hatch-vcs==0.3.0,hatchling==1.17.0,hpy==0.0.4.dev179+g9b5d200,packaging==23.1,pathspec==0.11.1,pip==23.1.2,pluggy==1.0.0,readline==6.2.4.1,setuptools==67.7.2,setuptools-scm==7.1.0,tomli==2.0.1,trove-classifiers==2023.5.24,typing_extensions==4.6.2,wheel==0.40.0\u001b[0m\n[Test/test]   | \u001b[1m\u001b[35m.pkg:\u001b[0m\u001b[36m build_sdist\u001b[22m\u001b[2m>\u001b[0m python /opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/pyproject_api/_backend.py True hatchling.build\u001b[0m\n[Test/test]   | \u001b[1m\u001b[35mpy:\u001b[0m\u001b[36m install_package_deps\u001b[22m\u001b[2m>\u001b[0m python -I -m pip install flaky httpx 'importlib-metadata; python_version < \"3.8\"' pytest pytest-cov pytest-random-order pyyaml\u001b[0m\n[Test/test]   | \u001b[1m\u001b[35mpy:\u001b[0m\u001b[36m install_package\u001b[22m\u001b[2m>\u001b[0m python -I -m pip install --force-reinstall --no-deps /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/.tmp/package/1/pylast-5.1.1.dev28.tar.gz\u001b[0m\n[Test/test]   | \u001b[1m\u001b[35mpy:\u001b[0m\u001b[36m freeze\u001b[22m\u001b[2m>\u001b[0m python -m pip freeze --all\u001b[0m\n[Test/test]   | \u001b[1m\u001b[35mpy:\u001b[0m\u001b[36m anyio==3.7.0,certifi==2023.5.7,cffi==1.15.1,coverage==7.2.6,exceptiongroup==1.1.1,flaky==3.7.0,greenlet==0.4.13,h11==0.14.0,hpy==0.0.4.dev179+g9b5d200,httpcore==0.17.2,httpx==0.24.1,idna==3.4,iniconfig==2.0.0,packaging==23.1,pip==23.1.2,pluggy==1.0.0,pylast @ file:///tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/.tmp/package/1/pylast-5.1.1.dev28.tar.gz#sha256=ef218069483f143d04dc460780ff4da10933791063614a7c4eeea08c5bcf12e1,pytest==7.3.1,pytest-cov==4.1.0,pytest-random-order==1.1.0,PyYAML==6.0,readline==6.2.4.1,setuptools==67.7.2,sniffio==1.3.0,tomli==2.0.1,wheel==0.40.0\u001b[0m\n[Test/test]   | \u001b[1m\u001b[35mpy:\u001b[0m\u001b[36m commands[0]\u001b[22m\u001b[2m>\u001b[0m pytest -v -s -W all --cov pylast --cov tests --cov-report term-missing --cov-report xml --random-order\u001b[0m\n[Test/test]   | \u001b[1m============================= test session starts ==============================\u001b[0m\n[Test/test]   | platform linux -- Python 3.9.16[pypy-7.3.11-final], pytest-7.3.1, pluggy-1.0.0 -- /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/bin/python\n[Test/test]   | cachedir: .tox/py/.pytest_cache\n[Test/test]   | Using --random-order-bucket=module\n[Test/test]   | Using --random-order-seed=815400\n[Test/test]   | \n[Test/test]   | rootdir: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast\n[Test/test]   | configfile: pytest.ini\n[Test/test]   | plugins: flaky-3.7.0, cov-4.1.0, anyio-3.7.0, random-order-1.1.0\n[Test/test]   | \u001b[1mcollecting ... \u001b[0mcollected 141 items\n[Test/test]   | \n[Test/test]   | tests/test_album.py::TestPyLastAlbum::test_album_is_hashable \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_album.py::TestPyLastAlbum::test_album_in_recent_tracks \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_album.py::TestPyLastAlbum::test_no_mbid \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_album.py::TestPyLastAlbum::test_album_tags_are_topitems \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_album.py::TestPyLastAlbum::test_album_eq_none_is_false \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_album.py::TestPyLastAlbum::test_album_wiki_published_date \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_album.py::TestPyLastAlbum::test_album_wiki_summary \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_album.py::TestPyLastAlbum::test_album_wiki_content \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_album.py::TestPyLastAlbum::test_album_ne_none_is_true \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_album.py::TestPyLastAlbum::test_mbid \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_album.py::TestPyLastAlbum::test_get_cover_image \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_track.py::TestPyLastTrack::test_user_play_count_in_track_info \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_track.py::TestPyLastTrack::test_track_get_duration \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_track.py::TestPyLastTrack::test_user_loved_in_track_info \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_track.py::TestPyLastTrack::test_track_listener_count \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_track.py::TestPyLastTrack::test_track_with_no_mbid \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_track.py::TestPyLastTrack::test_track_get_similar \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_track.py::TestPyLastTrack::test_track_get_similar_limits \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_track.py::TestPyLastTrack::test_track_wiki_summary \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_track.py::TestPyLastTrack::test_love \u001b[33mSKIPPED\u001b[0m (Only test o...)\n[Test/test]   | tests/test_track.py::TestPyLastTrack::test_album_tracks \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_track.py::TestPyLastTrack::test_track_eq_none_is_false \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_track.py::TestPyLastTrack::test_track_is_hashable \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_track.py::TestPyLastTrack::test_unlove \u001b[33mSKIPPED\u001b[0m (Only test...)\n[Test/test]   | tests/test_track.py::TestPyLastTrack::test_track_get_album \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_track.py::TestPyLastTrack::test_track_title_prop_caps \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_track.py::TestPyLastTrack::test_tracks_notequal \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_track.py::TestPyLastTrack::test_track_ne_none_is_true \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_track.py::TestPyLastTrack::test_track_get_correction \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_track.py::TestPyLastTrack::test_track_wiki_content \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/unicode_test.py::test_get_cache_key[fdasfdsafsaf not unicode] \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/unicode_test.py::test_get_cache_key[\\xe9\\xe9\\xe9\\xe9\\xe9\\xe9\\xe9] \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/unicode_test.py::test__remove_invalid_xml_chars[<album mbid=\"\">test album name</album>-<album mbid=\"\">test album name</album>] \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/unicode_test.py::test_cast_and_hash[obj0] \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/unicode_test.py::test_get_cache_key[\\xe9lafdasfdsafdsa] \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/unicode_test.py::test_get_cache_key[artist2] \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/unicode_test.py::test__parse_response[<album mbid=\"\">test album \\x05name</album>-<?xml version=\"1.0\" ?><album mbid=\"\">test album name</album>] \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/unicode_test.py::test__parse_response[<album mbid=\"\">test album name</album>-<?xml version=\"1.0\" ?><album mbid=\"\">test album name</album>] \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/unicode_test.py::test__remove_invalid_xml_chars[<album mbid=\"\">test album \\x05name</album>-<album mbid=\"\">test album name</album>] \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_user_tagged_artists \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_cacheable_user \u001b[33mXFAIL\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_equality \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_get_url \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_get_user_unixtime_registration \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_user_tagged_tracks \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_user_get_top_tags_with_limit \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_user_subscriber \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_get_user_registration \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_user_charts \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_user_not_equal_to_none \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_repr \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_user_top_artists \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_user_is_hashable \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_get_image \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_user_get_country \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_get_recent_tracks_limit_none \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_get_recent_tracks_from_to \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_pickle \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_user_tagged_albums \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_cacheable_user_get_track_scrobbles \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_user_equals_none \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_get_countryless_user \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_user_get_library \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_user_top_tracks \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_get_weekly_artist_charts \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_user_get_image \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_now_playing_user_with_no_scrobbles \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_user_get_track_scrobbles \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_get_playcount \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_get_name \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_str \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_user_top_albums \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_get_weekly_track_charts \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_love_limits \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_user.py::TestPyLastUser::test_get_recent_tracks_is_streamable \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_librefm.py::TestPyLastWithLibreFm::test_repr \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_librefm.py::TestPyLastWithLibreFm::test_libre_fm \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_tag.py::TestPyLastTag::test_tag_top_albums \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_tag.py::TestPyLastTag::test_tag_is_hashable \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_tag.py::TestPyLastTag::test_tags \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_tag.py::TestPyLastTag::test_tag_top_artists \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_library.py::TestPyLastLibrary::test_str \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_library.py::TestPyLastLibrary::test_cacheable_library \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_library.py::TestPyLastLibrary::test_repr \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_library.py::TestPyLastLibrary::test_get_user \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_library.py::TestPyLastLibrary::test_library_is_hashable \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_album_search_images \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_tag_top_tracks \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_country_top_tracks \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_network_get_top_tags_with_no_limit \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_network_get_top_tracks_with_limit \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_artist_search \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_scrobble \u001b[33mSKIPPED\u001b[0m (Onl...)\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_album_search \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_country_top_artists \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_proxy \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_track_search \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_enable_rate_limiting \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_init_with_token \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_caching \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_network_get_top_tags_with_limit \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_country_network_top_tracks \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_disable_rate_limiting \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_geo_get_top_artists \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_artist_mbid \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_search_get_total_result_count \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_track_search_images \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_update_now_playing \u001b[33mSKIPPED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_network_get_top_artists_with_limit \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_album_data \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_lastfm_network_name \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_artist_search_images \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_geo_get_top_tracks \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_track_data \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_album_mbid \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_network.py::TestPyLastNetwork::test_track_mbid \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_country.py::TestPyLastCountry::test_countries \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_country.py::TestPyLastCountry::test_country_is_hashable \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_bio_content \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_bio_published_date \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_remove_tags \u001b[33mSKIPPED\u001b[0m (On...)\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_artist_top_albums \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_bio_summary \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_repr \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_artists \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_artist_top_albums_limit_default \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_artist_top_tracks \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_artist_eq_none_is_false \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_artist_get_correction \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_remove_tag_of_type_tag \u001b[33mSKIPPED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_get_userplaycount \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_remove_tag_of_type_text \u001b[33mSKIPPED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_artist_top_albums_limit[50] \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_artist_top_albums_limit[1] \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_set_tags \u001b[33mSKIPPED\u001b[0m (Only ...)\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_artist_ne_none_is_true \u001b[32mPASSED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_artist_top_albums_limit[100] \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_artist_listener_count \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_bio_content_none \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_artist_is_hashable \u001b[31mFAILED\u001b[0m\n[Test/test]   | tests/test_artist.py::TestPyLastArtist::test_tag_artist \u001b[33mSKIPPED\u001b[0m (Onl...)\n[Test/test]   | \n[Test/test]   | =================================== FAILURES ===================================\n[Test/test]   | \u001b[31m\u001b[1m_________________ TestPyLastAlbum.test_album_in_recent_tracks __________________\u001b[0m\n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   | >                   doc = sender._request(method_name, cacheable, params)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2765: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = pylast.User('', pylast.LastFMNetwork('', '', '', '', ''))\n[Test/test]   | method_name = 'user.getRecentTracks', cacheable = True\n[Test/test]   | params = {'limit': 3, 'page': '1', 'user': ''}\n[Test/test]   | \n[Test/test]   |     def _request(self, method_name, cacheable: bool = False, params=None):\n[Test/test]   |         if not params:\n[Test/test]   |             params = self._get_params()\n[Test/test]   |     \n[Test/test]   | >       return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbca8d08>, cacheable = True\n[Test/test]   | \n[Test/test]   |     def execute(self, cacheable: bool = False) -> xml.dom.minidom.Document:\n[Test/test]   |         \"\"\"Returns the XML DOM response of the POST Request from the server\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.is_caching_enabled() and cacheable:\n[Test/test]   |             response = self._get_cached_response()\n[Test/test]   |         else:\n[Test/test]   | >           response = self._download_response()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbca8d08>\n[Test/test]   | \n[Test/test]   |     def _download_response(self):\n[Test/test]   |         \"\"\"Returns a response body string from the server.\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.limit_rate:\n[Test/test]   |             self.network._delay_call()\n[Test/test]   |     \n[Test/test]   |         username = self.params.pop(\"username\", None)\n[Test/test]   |         username = \"\" if username is None else f\"?username={username}\"\n[Test/test]   |     \n[Test/test]   |         (host_name, host_subdir) = self.network.ws_server\n[Test/test]   |     \n[Test/test]   |         if self.network.is_proxy_enabled():\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |                 proxies=self.network.proxy,\n[Test/test]   |             )\n[Test/test]   |         else:\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |             )\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   |             response = client.post(f\"{host_subdir}{username}\", data=self.params)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise NetworkError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         if response.status_code in (500, 502, 503, 504):\n[Test/test]   |             raise WSError(\n[Test/test]   |                 self.network,\n[Test/test]   |                 response.status_code,\n[Test/test]   |                 f\"Connection to the API failed with HTTP code {response.status_code}\",\n[Test/test]   |             )\n[Test/test]   |         response_text = _unicode(response.read())\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   | >           self._check_response_for_errors(response_text)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbca8d08>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \n[Test/test]   | \u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_album.TestPyLastAlbum object at 0x00007fbccbc34448>\n[Test/test]   | \n[Test/test]   |     def test_album_in_recent_tracks(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         lastfm_user = self.network.get_user(self.username)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   |         # limit=2 to ignore now-playing:\n[Test/test]   | >       track = list(lastfm_user.get_recent_tracks(limit=2))[0]\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_album.py\u001b[0m:35: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2355: in get_recent_tracks\n[Test/test]   |     return _get_recent_tracks() if stream else list(_get_recent_tracks())\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2339: in _get_recent_tracks\n[Test/test]   |     for track_node in _collect_nodes(\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2799: in _collect_nodes\n[Test/test]   |     return _stream_collect_nodes() if stream else list(_stream_collect_nodes())\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   |                     doc = sender._request(method_name, cacheable, params)\n[Test/test]   |                     break  # success\n[Test/test]   |                 except Exception as e:\n[Test/test]   |                     if tries >= 3:\n[Test/test]   | >                       raise PyLastError() from e\n[Test/test]   | \u001b[1m\u001b[31mE                       pylast.PyLastError\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2769: PyLastError\n[Test/test]   | \u001b[31m\u001b[1m_________________________ TestPyLastAlbum.test_no_mbid _________________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_album.TestPyLastAlbum object at 0x00007fbccbc42a30>\n[Test/test]   | \n[Test/test]   |     def test_no_mbid(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         album = self.network.get_album(\"Test Artist\", \"Test Album\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       mbid = album.get_mbid()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_album.py\u001b[0m:115: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1598: in get_mbid\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getInfo\", cacheable=True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc4162c0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_________________ TestPyLastAlbum.test_album_tags_are_topitems _________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_album.TestPyLastAlbum object at 0x00007fbccbc34100>\n[Test/test]   | \n[Test/test]   |     def test_album_tags_are_topitems(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         album = self.network.get_album(\"Test Artist\", \"Test Album\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       tags = album.get_top_tags(limit=1)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_album.py\u001b[0m:16: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1375: in get_top_tags\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getTopTags\", True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccad32988>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m________________ TestPyLastAlbum.test_album_wiki_published_date ________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_album.TestPyLastAlbum object at 0x00007fbccbc34db0>\n[Test/test]   | \n[Test/test]   |     def test_album_wiki_published_date(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         album = pylast.Album(\"Test Artist\", \"Test Album\", self.network)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       wiki = album.get_wiki_published_date()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_album.py\u001b[0m:56: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1168: in get_wiki_published_date\n[Test/test]   |     return self.get_wiki(\"published\")\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1192: in get_wiki\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getInfo\", True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccaa4dad0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m___________________ TestPyLastAlbum.test_album_wiki_summary ____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_album.TestPyLastAlbum object at 0x00007fbccbc35280>\n[Test/test]   | \n[Test/test]   |     def test_album_wiki_summary(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         album = pylast.Album(\"Test Artist\", \"Test Album\", self.network)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       wiki = album.get_wiki_summary()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_album.py\u001b[0m:67: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1175: in get_wiki_summary\n[Test/test]   |     return self.get_wiki(\"summary\")\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1192: in get_wiki\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getInfo\", True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbe9eb48>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m___________________ TestPyLastAlbum.test_album_wiki_content ____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_album.TestPyLastAlbum object at 0x00007fbccbc34800>\n[Test/test]   | \n[Test/test]   |     def test_album_wiki_content(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         album = pylast.Album(\"Test Artist\", \"Test Album\", self.network)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       wiki = album.get_wiki_content()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_album.py\u001b[0m:45: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1182: in get_wiki_content\n[Test/test]   |     return self.get_wiki(\"content\")\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1192: in get_wiki\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getInfo\", True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc415a60>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m__________________________ TestPyLastAlbum.test_mbid ___________________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_album.TestPyLastAlbum object at 0x00007fbccbc42800>\n[Test/test]   | \n[Test/test]   |     def test_mbid(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         album = self.network.get_album(\"Radiohead\", \"OK Computer\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       mbid = album.get_mbid()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_album.py\u001b[0m:105: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1598: in get_mbid\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getInfo\", cacheable=True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbcce072870>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_____________________ TestPyLastAlbum.test_get_cover_image _____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_album.TestPyLastAlbum object at 0x00007fbccbc423a0>\n[Test/test]   | \n[Test/test]   |     def test_get_cover_image(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         album = self.network.get_album(\"Test Artist\", \"Test Album\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       image = album.get_cover_image()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_album.py\u001b[0m:94: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1547: in get_cover_image\n[Test/test]   |     self._request(self.ws_prefix + \".getInfo\", cacheable=True), \"image\"\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc758ec8>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m______________ TestPyLastTrack.test_user_play_count_in_track_info ______________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_track.TestPyLastTrack object at 0x00007fbccb786b80>\n[Test/test]   | \n[Test/test]   |     def test_user_play_count_in_track_info(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         artist = \"Test Artist\"\n[Test/test]   |         title = \"test title\"\n[Test/test]   |         track = pylast.Track(\n[Test/test]   |             artist=artist, title=title, network=self.network, username=self.username\n[Test/test]   |         )\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   |         count = track.get_userplaycount()\n[Test/test]   |     \n[Test/test]   |         # Assert\n[Test/test]   | >       assert count >= 0\n[Test/test]   | \u001b[1m\u001b[31mE       TypeError: '>=' not supported between instances of 'NoneType' and 'int'\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_track.py\u001b[0m:61: TypeError\n[Test/test]   | \u001b[31m\u001b[1m___________________ TestPyLastTrack.test_track_get_duration ____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_track.TestPyLastTrack object at 0x00007fbccb787a28>\n[Test/test]   | \n[Test/test]   |     def test_track_get_duration(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         track = pylast.Track(\"Daft Punk\", \"Something About Us\", self.network)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       duration = track.get_duration()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_track.py\u001b[0m:115: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2080: in get_duration\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getInfo\", True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccba1fde0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m________________ TestPyLastTrack.test_user_loved_in_track_info _________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_track.TestPyLastTrack object at 0x00007fbccb786a30>\n[Test/test]   | \n[Test/test]   |     def test_user_loved_in_track_info(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         artist = \"Test Artist\"\n[Test/test]   |         title = \"test title\"\n[Test/test]   |         track = pylast.Track(\n[Test/test]   |             artist=artist, title=title, network=self.network, username=self.username\n[Test/test]   |         )\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   |         loved = track.get_userloved()\n[Test/test]   |     \n[Test/test]   |         # Assert\n[Test/test]   | >       assert loved is not None\n[Test/test]   | \u001b[1m\u001b[31mE       assert None is not None\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_track.py\u001b[0m:75: AssertionError\n[Test/test]   | \u001b[31m\u001b[1m__________________ TestPyLastTrack.test_track_listener_count ___________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_track.TestPyLastTrack object at 0x00007fbccbd6f0f8>\n[Test/test]   | \n[Test/test]   |     def test_track_listener_count(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         track = pylast.Track(\"test artist\", \"test title\", self.network)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       count = track.get_listener_count()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_track.py\u001b[0m:179: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1591: in get_listener_count\n[Test/test]   |     self._request(self.ws_prefix + \".getInfo\", cacheable=True), \"listeners\"\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccaaf9440>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m___________________ TestPyLastTrack.test_track_with_no_mbid ____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_track.TestPyLastTrack object at 0x00007fbcccb528e0>\n[Test/test]   | \n[Test/test]   |     def test_track_with_no_mbid(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         track = pylast.Track(\"Static-X\", \"Set It Off\", self.network)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       mbid = track.get_mbid()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_track.py\u001b[0m:229: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1598: in get_mbid\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getInfo\", cacheable=True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbcccaf68e0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m____________________ TestPyLastTrack.test_track_get_similar ____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_track.TestPyLastTrack object at 0x00007fbccbd6e4f0>\n[Test/test]   | \n[Test/test]   |     def test_track_get_similar(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         track = pylast.Track(\"Cher\", \"Believe\", self.network)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       similar = track.get_similar()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_track.py\u001b[0m:135: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2132: in get_similar\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getSimilar\", True, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbc864b8>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m________________ TestPyLastTrack.test_track_get_similar_limits _________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_track.TestPyLastTrack object at 0x00007fbccbd6e8e0>\n[Test/test]   | \n[Test/test]   |     def test_track_get_similar_limits(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         track = pylast.Track(\"Cher\", \"Believe\", self.network)\n[Test/test]   |     \n[Test/test]   |         # Act/Assert\n[Test/test]   | >       assert len(track.get_similar(limit=20)) == 20\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_track.py\u001b[0m:150: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2132: in get_similar\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getSimilar\", True, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccb5a3a60>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m___________________ TestPyLastTrack.test_track_wiki_summary ____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_track.TestPyLastTrack object at 0x00007fbccb7873d0>\n[Test/test]   | \n[Test/test]   |     def test_track_wiki_summary(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         track = pylast.Track(\"Test Artist\", \"test title\", self.network)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       wiki = track.get_wiki_summary()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_track.py\u001b[0m:104: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1175: in get_wiki_summary\n[Test/test]   |     return self.get_wiki(\"summary\")\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1192: in get_wiki\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getInfo\", True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbac5be8>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m______________________ TestPyLastTrack.test_album_tracks _______________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_track.TestPyLastTrack object at 0x00007fbccbd6f638>\n[Test/test]   | \n[Test/test]   |     def test_album_tracks(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         album = pylast.Album(\"Test Artist\", \"Test\", self.network)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       tracks = album.get_tracks()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_track.py\u001b[0m:189: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1628: in get_tracks\n[Test/test]   |     self._request(self.ws_prefix + \".getInfo\", cacheable=True), self.network\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccb50f398>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m____________________ TestPyLastTrack.test_track_is_hashable ____________________\u001b[0m\n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   | >                   doc = sender._request(method_name, cacheable, params)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2765: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = pylast.Artist('Test Artist', pylast.LastFMNetwork('', '', '', '', ''))\n[Test/test]   | method_name = 'artist.getTopTracks', cacheable = True\n[Test/test]   | params = {'artist': 'Test Artist', 'page': '1'}\n[Test/test]   | \n[Test/test]   |     def _request(self, method_name, cacheable: bool = False, params=None):\n[Test/test]   |         if not params:\n[Test/test]   |             params = self._get_params()\n[Test/test]   |     \n[Test/test]   | >       return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccb056bb8>, cacheable = True\n[Test/test]   | \n[Test/test]   |     def execute(self, cacheable: bool = False) -> xml.dom.minidom.Document:\n[Test/test]   |         \"\"\"Returns the XML DOM response of the POST Request from the server\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.is_caching_enabled() and cacheable:\n[Test/test]   |             response = self._get_cached_response()\n[Test/test]   |         else:\n[Test/test]   | >           response = self._download_response()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccb056bb8>\n[Test/test]   | \n[Test/test]   |     def _download_response(self):\n[Test/test]   |         \"\"\"Returns a response body string from the server.\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.limit_rate:\n[Test/test]   |             self.network._delay_call()\n[Test/test]   |     \n[Test/test]   |         username = self.params.pop(\"username\", None)\n[Test/test]   |         username = \"\" if username is None else f\"?username={username}\"\n[Test/test]   |     \n[Test/test]   |         (host_name, host_subdir) = self.network.ws_server\n[Test/test]   |     \n[Test/test]   |         if self.network.is_proxy_enabled():\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |                 proxies=self.network.proxy,\n[Test/test]   |             )\n[Test/test]   |         else:\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |             )\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   |             response = client.post(f\"{host_subdir}{username}\", data=self.params)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise NetworkError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         if response.status_code in (500, 502, 503, 504):\n[Test/test]   |             raise WSError(\n[Test/test]   |                 self.network,\n[Test/test]   |                 response.status_code,\n[Test/test]   |                 f\"Connection to the API failed with HTTP code {response.status_code}\",\n[Test/test]   |             )\n[Test/test]   |         response_text = _unicode(response.read())\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   | >           self._check_response_for_errors(response_text)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccb056bb8>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \n[Test/test]   | \u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_track.TestPyLastTrack object at 0x00007fbccb786f00>\n[Test/test]   | \n[Test/test]   |     def test_track_is_hashable(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         artist = self.network.get_artist(\"Test Artist\")\n[Test/test]   | >       track = artist.get_top_tracks(stream=False)[0].item\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_track.py\u001b[0m:82: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1824: in get_top_tracks\n[Test/test]   |     return self._get_things(\"getTopTracks\", Track, params, cacheable, stream=stream)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1161: in _get_things\n[Test/test]   |     return _stream_get_things() if stream else list(_stream_get_things())\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1146: in _stream_get_things\n[Test/test]   |     nodes = _collect_nodes(\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2799: in _collect_nodes\n[Test/test]   |     return _stream_collect_nodes() if stream else list(_stream_collect_nodes())\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   |                     doc = sender._request(method_name, cacheable, params)\n[Test/test]   |                     break  # success\n[Test/test]   |                 except Exception as e:\n[Test/test]   |                     if tries >= 3:\n[Test/test]   | >                       raise PyLastError() from e\n[Test/test]   | \u001b[1m\u001b[31mE                       pylast.PyLastError\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2769: PyLastError\n[Test/test]   | \u001b[31m\u001b[1m_____________________ TestPyLastTrack.test_track_get_album _____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_track.TestPyLastTrack object at 0x00007fbcced26218>\n[Test/test]   | \n[Test/test]   |     def test_track_get_album(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         track = pylast.Track(\"Nirvana\", \"Lithium\", self.network)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       album = track.get_album()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_track.py\u001b[0m:125: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2102: in get_album\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getInfo\", True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbf4c758>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m__________________ TestPyLastTrack.test_track_title_prop_caps __________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_track.TestPyLastTrack object at 0x00007fbccbd6ec28>\n[Test/test]   | \n[Test/test]   |     def test_track_title_prop_caps(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         track = pylast.Track(\"test artist\", \"test title\", self.network)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       title = track.get_title(properly_capitalized=True)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_track.py\u001b[0m:169: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1555: in get_title\n[Test/test]   |     self._request(self.ws_prefix + \".getInfo\", True), \"name\"\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccb5e2fe0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m__________________ TestPyLastTrack.test_track_get_correction ___________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_track.TestPyLastTrack object at 0x00007fbccbd6ff30>\n[Test/test]   | \n[Test/test]   |     def test_track_get_correction(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         track = pylast.Track(\"Guns N' Roses\", \"mrbrownstone\", self.network)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       corrected_track_name = track.get_correction()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_track.py\u001b[0m:219: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2075: in get_correction\n[Test/test]   |     return _extract(self._request(self.ws_prefix + \".getCorrection\"), \"name\")\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbcccb781a8>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m___________________ TestPyLastTrack.test_track_wiki_content ____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_track.TestPyLastTrack object at 0x00007fbccb7875c8>\n[Test/test]   | \n[Test/test]   |     def test_track_wiki_content(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         track = pylast.Track(\"Test Artist\", \"test title\", self.network)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       wiki = track.get_wiki_content()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_track.py\u001b[0m:93: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1182: in get_wiki_content\n[Test/test]   |     return self.get_wiki(\"content\")\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1192: in get_wiki\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getInfo\", True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccaa4d2b8>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m___________________ TestPyLastUser.test_user_tagged_artists ____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc1adbb0>\n[Test/test]   | \n[Test/test]   |     def test_user_tagged_artists(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         lastfm_user = self.network.get_user(self.username)\n[Test/test]   |         tags = [\"artisttagola\"]\n[Test/test]   |         artist = self.network.get_artist(\"Test Artist\")\n[Test/test]   | >       artist.add_tags(tags)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:293: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1285: in add_tags\n[Test/test]   |     self.add_tag(tag)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1298: in add_tag\n[Test/test]   |     self._request(self.ws_prefix + \".addTags\", False, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccac09168>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m______________ TestPyLastUser.test_get_user_unixtime_registration ______________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc104b80>\n[Test/test]   | \n[Test/test]   |     def test_get_user_unixtime_registration(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         user = self.network.get_user(\"RJ\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       unixtime_registered = user.get_unixtime_registered()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:82: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2393: in get_unixtime_registered\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getInfo\", True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc7bc640>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m____________________ TestPyLastUser.test_user_tagged_tracks ____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc1d6608>\n[Test/test]   | \n[Test/test]   |     def test_user_tagged_tracks(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         lastfm_user = self.network.get_user(self.username)\n[Test/test]   |         tags = [\"tracktagola\"]\n[Test/test]   |         track = self.network.get_track(\"Test Artist\", \"test title\")\n[Test/test]   | >       track.add_tags(tags)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:319: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1285: in add_tags\n[Test/test]   |     self.add_tag(tag)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1298: in add_tag\n[Test/test]   |     self._request(self.ws_prefix + \".addTags\", False, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbcccbc8fe0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_______________ TestPyLastUser.test_user_get_top_tags_with_limit _______________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc0bf9b8>\n[Test/test]   | \n[Test/test]   |     def test_user_get_top_tags_with_limit(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         user = self.network.get_user(\"RJ\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       tags = user.get_top_tags(limit=1)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:209: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2482: in get_top_tags\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getTopTags\", cacheable, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccb5cbbb0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_____________________ TestPyLastUser.test_user_subscriber ______________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc1d64f0>\n[Test/test]   | \n[Test/test]   |     def test_user_subscriber(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         subscriber = self.network.get_user(\"RJ\")\n[Test/test]   |         non_subscriber = self.network.get_user(\"Test User\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       subscriber_is_subscriber = subscriber.is_subscriber()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:333: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2372: in is_subscriber\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getInfo\", True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccb51afe0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m__________________ TestPyLastUser.test_get_user_registration ___________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc104cd0>\n[Test/test]   | \n[Test/test]   |     def test_get_user_registration(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         user = self.network.get_user(\"RJ\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       registered = user.get_registered()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:66: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2386: in get_registered\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getInfo\", True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbed4918>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_______________________ TestPyLastUser.test_user_charts ________________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc1ac8a8>\n[Test/test]   | \n[Test/test]   |     def test_user_charts(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         lastfm_user = self.network.get_user(\"RJ\")\n[Test/test]   | >       dates = lastfm_user.get_weekly_chart_dates()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:258: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1211: in get_weekly_chart_dates\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getWeeklyChartList\", True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccae58598>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_____________________ TestPyLastUser.test_user_top_artists _____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc1ad868>\n[Test/test]   | \n[Test/test]   |     def test_user_top_artists(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         lastfm_user = self.network.get_user(self.username)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       artists = lastfm_user.get_top_artists(limit=1)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:269: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2466: in get_top_artists\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getTopArtists\", True, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbcccb97210>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m________________________ TestPyLastUser.test_get_image _________________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc380720>\n[Test/test]   | \n[Test/test]   |     def test_get_image(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         user = self.network.get_user(\"RJ\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       image = user.get_image()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:428: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2551: in get_image\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getInfo\", True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc1acbf0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_____________________ TestPyLastUser.test_user_get_country _____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc10b7f8>\n[Test/test]   | \n[Test/test]   |     def test_user_get_country(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         lastfm_user = self.network.get_user(\"RJ\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       country = lastfm_user.get_country()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:104: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2360: in get_country\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getInfo\", True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc3dfb08>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_______________ TestPyLastUser.test_get_recent_tracks_limit_none _______________\u001b[0m\n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   | >                   doc = sender._request(method_name, cacheable, params)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2765: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = pylast.User('bbc6music', pylast.LastFMNetwork('', '', '', '', ''))\n[Test/test]   | method_name = 'user.getRecentTracks', cacheable = True\n[Test/test]   | params = {'from': 1581778800, 'page': '1', 'to': 1581781200, 'user': 'bbc6music'}\n[Test/test]   | \n[Test/test]   |     def _request(self, method_name, cacheable: bool = False, params=None):\n[Test/test]   |         if not params:\n[Test/test]   |             params = self._get_params()\n[Test/test]   |     \n[Test/test]   | >       return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc77fde0>, cacheable = True\n[Test/test]   | \n[Test/test]   |     def execute(self, cacheable: bool = False) -> xml.dom.minidom.Document:\n[Test/test]   |         \"\"\"Returns the XML DOM response of the POST Request from the server\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.is_caching_enabled() and cacheable:\n[Test/test]   |             response = self._get_cached_response()\n[Test/test]   |         else:\n[Test/test]   | >           response = self._download_response()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc77fde0>\n[Test/test]   | \n[Test/test]   |     def _download_response(self):\n[Test/test]   |         \"\"\"Returns a response body string from the server.\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.limit_rate:\n[Test/test]   |             self.network._delay_call()\n[Test/test]   |     \n[Test/test]   |         username = self.params.pop(\"username\", None)\n[Test/test]   |         username = \"\" if username is None else f\"?username={username}\"\n[Test/test]   |     \n[Test/test]   |         (host_name, host_subdir) = self.network.ws_server\n[Test/test]   |     \n[Test/test]   |         if self.network.is_proxy_enabled():\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |                 proxies=self.network.proxy,\n[Test/test]   |             )\n[Test/test]   |         else:\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |             )\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   |             response = client.post(f\"{host_subdir}{username}\", data=self.params)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise NetworkError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         if response.status_code in (500, 502, 503, 504):\n[Test/test]   |             raise WSError(\n[Test/test]   |                 self.network,\n[Test/test]   |                 response.status_code,\n[Test/test]   |                 f\"Connection to the API failed with HTTP code {response.status_code}\",\n[Test/test]   |             )\n[Test/test]   |         response_text = _unicode(response.read())\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   | >           self._check_response_for_errors(response_text)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc77fde0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \n[Test/test]   | \u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc388a30>\n[Test/test]   | \n[Test/test]   |     def test_get_recent_tracks_limit_none(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         lastfm_user = self.network.get_user(\"bbc6music\")\n[Test/test]   |         start = dt.datetime(2020, 2, 15, 15, 00)\n[Test/test]   |         end = dt.datetime(2020, 2, 15, 15, 40)\n[Test/test]   |     \n[Test/test]   |         utc_start = calendar.timegm(start.utctimetuple())\n[Test/test]   |         utc_end = calendar.timegm(end.utctimetuple())\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       tracks = lastfm_user.get_recent_tracks(\n[Test/test]   |             time_from=utc_start, time_to=utc_end, limit=None\n[Test/test]   |         )\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:387: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2355: in get_recent_tracks\n[Test/test]   |     return _get_recent_tracks() if stream else list(_get_recent_tracks())\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2339: in _get_recent_tracks\n[Test/test]   |     for track_node in _collect_nodes(\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2799: in _collect_nodes\n[Test/test]   |     return _stream_collect_nodes() if stream else list(_stream_collect_nodes())\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   |                     doc = sender._request(method_name, cacheable, params)\n[Test/test]   |                     break  # success\n[Test/test]   |                 except Exception as e:\n[Test/test]   |                     if tries >= 3:\n[Test/test]   | >                       raise PyLastError() from e\n[Test/test]   | \u001b[1m\u001b[31mE                       pylast.PyLastError\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2769: PyLastError\n[Test/test]   | \u001b[31m\u001b[1m________________ TestPyLastUser.test_get_recent_tracks_from_to _________________\u001b[0m\n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   | >                   doc = sender._request(method_name, cacheable, params)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2765: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = pylast.User('RJ', pylast.LastFMNetwork('', '', '', '', ''))\n[Test/test]   | method_name = 'user.getRecentTracks', cacheable = True\n[Test/test]   | params = {'from': 1311261000, 'limit': 11, 'page': '1', 'to': 1311261300, ...}\n[Test/test]   | \n[Test/test]   |     def _request(self, method_name, cacheable: bool = False, params=None):\n[Test/test]   |         if not params:\n[Test/test]   |             params = self._get_params()\n[Test/test]   |     \n[Test/test]   | >       return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccceaa758>, cacheable = True\n[Test/test]   | \n[Test/test]   |     def execute(self, cacheable: bool = False) -> xml.dom.minidom.Document:\n[Test/test]   |         \"\"\"Returns the XML DOM response of the POST Request from the server\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.is_caching_enabled() and cacheable:\n[Test/test]   |             response = self._get_cached_response()\n[Test/test]   |         else:\n[Test/test]   | >           response = self._download_response()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccceaa758>\n[Test/test]   | \n[Test/test]   |     def _download_response(self):\n[Test/test]   |         \"\"\"Returns a response body string from the server.\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.limit_rate:\n[Test/test]   |             self.network._delay_call()\n[Test/test]   |     \n[Test/test]   |         username = self.params.pop(\"username\", None)\n[Test/test]   |         username = \"\" if username is None else f\"?username={username}\"\n[Test/test]   |     \n[Test/test]   |         (host_name, host_subdir) = self.network.ws_server\n[Test/test]   |     \n[Test/test]   |         if self.network.is_proxy_enabled():\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |                 proxies=self.network.proxy,\n[Test/test]   |             )\n[Test/test]   |         else:\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |             )\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   |             response = client.post(f\"{host_subdir}{username}\", data=self.params)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise NetworkError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         if response.status_code in (500, 502, 503, 504):\n[Test/test]   |             raise WSError(\n[Test/test]   |                 self.network,\n[Test/test]   |                 response.status_code,\n[Test/test]   |                 f\"Connection to the API failed with HTTP code {response.status_code}\",\n[Test/test]   |             )\n[Test/test]   |         response_text = _unicode(response.read())\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   | >           self._check_response_for_errors(response_text)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccceaa758>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \n[Test/test]   | \u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc3885d0>\n[Test/test]   | \n[Test/test]   |     def test_get_recent_tracks_from_to(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         lastfm_user = self.network.get_user(\"RJ\")\n[Test/test]   |         start = dt.datetime(2011, 7, 21, 15, 10)\n[Test/test]   |         end = dt.datetime(2011, 7, 21, 15, 15)\n[Test/test]   |     \n[Test/test]   |         utc_start = calendar.timegm(start.utctimetuple())\n[Test/test]   |         utc_end = calendar.timegm(end.utctimetuple())\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       tracks = lastfm_user.get_recent_tracks(time_from=utc_start, time_to=utc_end)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:370: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2355: in get_recent_tracks\n[Test/test]   |     return _get_recent_tracks() if stream else list(_get_recent_tracks())\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2339: in _get_recent_tracks\n[Test/test]   |     for track_node in _collect_nodes(\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2799: in _collect_nodes\n[Test/test]   |     return _stream_collect_nodes() if stream else list(_stream_collect_nodes())\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   |                     doc = sender._request(method_name, cacheable, params)\n[Test/test]   |                     break  # success\n[Test/test]   |                 except Exception as e:\n[Test/test]   |                     if tries >= 3:\n[Test/test]   | >                       raise PyLastError() from e\n[Test/test]   | \u001b[1m\u001b[31mE                       pylast.PyLastError\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2769: PyLastError\n[Test/test]   | \u001b[31m\u001b[1m____________________ TestPyLastUser.test_user_tagged_albums ____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc1d6100>\n[Test/test]   | \n[Test/test]   |     def test_user_tagged_albums(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         lastfm_user = self.network.get_user(self.username)\n[Test/test]   |         tags = [\"albumtagola\"]\n[Test/test]   |         album = self.network.get_album(\"Test Artist\", \"Test Album\")\n[Test/test]   | >       album.add_tags(tags)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:306: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1285: in add_tags\n[Test/test]   |     self.add_tag(tag)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1298: in add_tag\n[Test/test]   |     self._request(self.ws_prefix + \".addTags\", False, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc4fe678>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m____________ TestPyLastUser.test_cacheable_user_get_track_scrobbles ____________\u001b[0m\n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   | >                   doc = sender._request(method_name, cacheable, params)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2765: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = pylast.User('bbc6music', pylast.LastFMNetwork('', '', '', '', ''))\n[Test/test]   | method_name = 'user.getTrackScrobbles', cacheable = False\n[Test/test]   | params = {'artist': 'France Gall', 'page': '1', 'track': 'Laisse Tomber Les Filles', 'user': 'bbc6music'}\n[Test/test]   | \n[Test/test]   |     def _request(self, method_name, cacheable: bool = False, params=None):\n[Test/test]   |         if not params:\n[Test/test]   |             params = self._get_params()\n[Test/test]   |     \n[Test/test]   | >       return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc7e96e0>, cacheable = False\n[Test/test]   | \n[Test/test]   |     def execute(self, cacheable: bool = False) -> xml.dom.minidom.Document:\n[Test/test]   |         \"\"\"Returns the XML DOM response of the POST Request from the server\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.is_caching_enabled() and cacheable:\n[Test/test]   |             response = self._get_cached_response()\n[Test/test]   |         else:\n[Test/test]   | >           response = self._download_response()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc7e96e0>\n[Test/test]   | \n[Test/test]   |     def _download_response(self):\n[Test/test]   |         \"\"\"Returns a response body string from the server.\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.limit_rate:\n[Test/test]   |             self.network._delay_call()\n[Test/test]   |     \n[Test/test]   |         username = self.params.pop(\"username\", None)\n[Test/test]   |         username = \"\" if username is None else f\"?username={username}\"\n[Test/test]   |     \n[Test/test]   |         (host_name, host_subdir) = self.network.ws_server\n[Test/test]   |     \n[Test/test]   |         if self.network.is_proxy_enabled():\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |                 proxies=self.network.proxy,\n[Test/test]   |             )\n[Test/test]   |         else:\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |             )\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   |             response = client.post(f\"{host_subdir}{username}\", data=self.params)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise NetworkError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         if response.status_code in (500, 502, 503, 504):\n[Test/test]   |             raise WSError(\n[Test/test]   |                 self.network,\n[Test/test]   |                 response.status_code,\n[Test/test]   |                 f\"Connection to the API failed with HTTP code {response.status_code}\",\n[Test/test]   |             )\n[Test/test]   |         response_text = _unicode(response.read())\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   | >           self._check_response_for_errors(response_text)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc7e96e0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \n[Test/test]   | \u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc36a6b0>\n[Test/test]   | \n[Test/test]   |     def test_cacheable_user_get_track_scrobbles(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         artist = \"France Gall\"\n[Test/test]   |         title = \"Laisse Tomber Les Filles\"\n[Test/test]   |         user = self.network.get_user(\"bbc6music\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       result1 = user.get_track_scrobbles(artist, title, cacheable=False)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:489: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2539: in get_track_scrobbles\n[Test/test]   |     return _get_track_scrobbles() if stream else list(_get_track_scrobbles())\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2529: in _get_track_scrobbles\n[Test/test]   |     for track_node in _collect_nodes(\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2799: in _collect_nodes\n[Test/test]   |     return _stream_collect_nodes() if stream else list(_stream_collect_nodes())\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   |                     doc = sender._request(method_name, cacheable, params)\n[Test/test]   |                     break  # success\n[Test/test]   |                 except Exception as e:\n[Test/test]   |                     if tries >= 3:\n[Test/test]   | >                       raise PyLastError() from e\n[Test/test]   | \u001b[1m\u001b[31mE                       pylast.PyLastError\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2769: PyLastError\n[Test/test]   | \u001b[31m\u001b[1m___________________ TestPyLastUser.test_get_countryless_user ___________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc105018>\n[Test/test]   | \n[Test/test]   |     def test_get_countryless_user(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         # Currently test_user has no country set:\n[Test/test]   |         lastfm_user = self.network.get_user(\"test_user\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       country = lastfm_user.get_country()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:94: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2360: in get_country\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getInfo\", True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc84cbb8>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_____________________ TestPyLastUser.test_user_top_tracks ______________________\u001b[0m\n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   | >                   doc = sender._request(method_name, cacheable, params)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2765: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = pylast.User('RJ', pylast.LastFMNetwork('', '', '', '', ''))\n[Test/test]   | method_name = 'user.getTopTracks', cacheable = True\n[Test/test]   | params = {'limit': 2, 'page': '1', 'period': 'overall', 'user': 'RJ'}\n[Test/test]   | \n[Test/test]   |     def _request(self, method_name, cacheable: bool = False, params=None):\n[Test/test]   |         if not params:\n[Test/test]   |             params = self._get_params()\n[Test/test]   |     \n[Test/test]   | >       return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbc8ed40>, cacheable = True\n[Test/test]   | \n[Test/test]   |     def execute(self, cacheable: bool = False) -> xml.dom.minidom.Document:\n[Test/test]   |         \"\"\"Returns the XML DOM response of the POST Request from the server\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.is_caching_enabled() and cacheable:\n[Test/test]   |             response = self._get_cached_response()\n[Test/test]   |         else:\n[Test/test]   | >           response = self._download_response()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbc8ed40>\n[Test/test]   | \n[Test/test]   |     def _download_response(self):\n[Test/test]   |         \"\"\"Returns a response body string from the server.\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.limit_rate:\n[Test/test]   |             self.network._delay_call()\n[Test/test]   |     \n[Test/test]   |         username = self.params.pop(\"username\", None)\n[Test/test]   |         username = \"\" if username is None else f\"?username={username}\"\n[Test/test]   |     \n[Test/test]   |         (host_name, host_subdir) = self.network.ws_server\n[Test/test]   |     \n[Test/test]   |         if self.network.is_proxy_enabled():\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |                 proxies=self.network.proxy,\n[Test/test]   |             )\n[Test/test]   |         else:\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |             )\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   |             response = client.post(f\"{host_subdir}{username}\", data=self.params)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise NetworkError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         if response.status_code in (500, 502, 503, 504):\n[Test/test]   |             raise WSError(\n[Test/test]   |                 self.network,\n[Test/test]   |                 response.status_code,\n[Test/test]   |                 f\"Connection to the API failed with HTTP code {response.status_code}\",\n[Test/test]   |             )\n[Test/test]   |         response_text = _unicode(response.read())\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   | >           self._check_response_for_errors(response_text)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbc8ed40>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \n[Test/test]   | \u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc0bfe18>\n[Test/test]   | \n[Test/test]   |     def test_user_top_tracks(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         lastfm_user = self.network.get_user(\"RJ\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       things = lastfm_user.get_top_tracks(limit=2)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:219: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2515: in get_top_tracks\n[Test/test]   |     return self._get_things(\"getTopTracks\", Track, params, cacheable, stream=stream)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1161: in _get_things\n[Test/test]   |     return _stream_get_things() if stream else list(_stream_get_things())\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1146: in _stream_get_things\n[Test/test]   |     nodes = _collect_nodes(\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2799: in _collect_nodes\n[Test/test]   |     return _stream_collect_nodes() if stream else list(_stream_collect_nodes())\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   |                     doc = sender._request(method_name, cacheable, params)\n[Test/test]   |                     break  # success\n[Test/test]   |                 except Exception as e:\n[Test/test]   |                     if tries >= 3:\n[Test/test]   | >                       raise PyLastError() from e\n[Test/test]   | \u001b[1m\u001b[31mE                       pylast.PyLastError\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2769: PyLastError\n[Test/test]   | \u001b[31m\u001b[1m_________________ TestPyLastUser.test_get_weekly_artist_charts _________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc380fe0>\n[Test/test]   | \n[Test/test]   |     def test_get_weekly_artist_charts(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         user = self.network.get_user(\"bbc6music\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       charts = user.get_weekly_artist_charts()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:449: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1233: in get_weekly_artist_charts\n[Test/test]   |     return self.get_weekly_charts(\"artist\", from_date, to_date)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1257: in get_weekly_charts\n[Test/test]   |     doc = self._request(self.ws_prefix + method, True, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbfc6bb8>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m______________________ TestPyLastUser.test_user_get_image ______________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc1f4250>\n[Test/test]   | \n[Test/test]   |     def test_user_get_image(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         user = self.network.get_user(\"RJ\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       url = user.get_image()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:345: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2551: in get_image\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getInfo\", True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccacbff68>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m____________ TestPyLastUser.test_now_playing_user_with_no_scrobbles ____________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc0be8a8>\n[Test/test]   | \n[Test/test]   |     def test_now_playing_user_with_no_scrobbles(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         # Currently test-account has no scrobbles:\n[Test/test]   |         user = self.network.get_user(\"test-account\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       current_track = user.get_now_playing()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:135: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2282: in get_now_playing\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getRecentTracks\", False, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbc352f0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_________________ TestPyLastUser.test_user_get_track_scrobbles _________________\u001b[0m\n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   | >                   doc = sender._request(method_name, cacheable, params)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2765: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = pylast.User('bbc6music', pylast.LastFMNetwork('', '', '', '', ''))\n[Test/test]   | method_name = 'user.getTrackScrobbles', cacheable = False\n[Test/test]   | params = {'artist': 'France Gall', 'page': '1', 'track': 'Laisse Tomber Les Filles', 'user': 'bbc6music'}\n[Test/test]   | \n[Test/test]   |     def _request(self, method_name, cacheable: bool = False, params=None):\n[Test/test]   |         if not params:\n[Test/test]   |             params = self._get_params()\n[Test/test]   |     \n[Test/test]   | >       return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbdf3e18>, cacheable = False\n[Test/test]   | \n[Test/test]   |     def execute(self, cacheable: bool = False) -> xml.dom.minidom.Document:\n[Test/test]   |         \"\"\"Returns the XML DOM response of the POST Request from the server\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.is_caching_enabled() and cacheable:\n[Test/test]   |             response = self._get_cached_response()\n[Test/test]   |         else:\n[Test/test]   | >           response = self._download_response()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbdf3e18>\n[Test/test]   | \n[Test/test]   |     def _download_response(self):\n[Test/test]   |         \"\"\"Returns a response body string from the server.\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.limit_rate:\n[Test/test]   |             self.network._delay_call()\n[Test/test]   |     \n[Test/test]   |         username = self.params.pop(\"username\", None)\n[Test/test]   |         username = \"\" if username is None else f\"?username={username}\"\n[Test/test]   |     \n[Test/test]   |         (host_name, host_subdir) = self.network.ws_server\n[Test/test]   |     \n[Test/test]   |         if self.network.is_proxy_enabled():\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |                 proxies=self.network.proxy,\n[Test/test]   |             )\n[Test/test]   |         else:\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |             )\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   |             response = client.post(f\"{host_subdir}{username}\", data=self.params)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise NetworkError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         if response.status_code in (500, 502, 503, 504):\n[Test/test]   |             raise WSError(\n[Test/test]   |                 self.network,\n[Test/test]   |                 response.status_code,\n[Test/test]   |                 f\"Connection to the API failed with HTTP code {response.status_code}\",\n[Test/test]   |             )\n[Test/test]   |         response_text = _unicode(response.read())\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   | >           self._check_response_for_errors(response_text)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbdf3e18>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \n[Test/test]   | \u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc3818a0>\n[Test/test]   | \n[Test/test]   |     def test_user_get_track_scrobbles(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         artist = \"France Gall\"\n[Test/test]   |         title = \"Laisse Tomber Les Filles\"\n[Test/test]   |         user = self.network.get_user(\"bbc6music\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       scrobbles = user.get_track_scrobbles(artist, title)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:475: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2539: in get_track_scrobbles\n[Test/test]   |     return _get_track_scrobbles() if stream else list(_get_track_scrobbles())\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2529: in _get_track_scrobbles\n[Test/test]   |     for track_node in _collect_nodes(\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2799: in _collect_nodes\n[Test/test]   |     return _stream_collect_nodes() if stream else list(_stream_collect_nodes())\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   |                     doc = sender._request(method_name, cacheable, params)\n[Test/test]   |                     break  # success\n[Test/test]   |                 except Exception as e:\n[Test/test]   |                     if tries >= 3:\n[Test/test]   | >                       raise PyLastError() from e\n[Test/test]   | \u001b[1m\u001b[31mE                       pylast.PyLastError\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2769: PyLastError\n[Test/test]   | \u001b[31m\u001b[1m______________________ TestPyLastUser.test_get_playcount _______________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc3801e0>\n[Test/test]   | \n[Test/test]   |     def test_get_playcount(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         user = self.network.get_user(\"RJ\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       playcount = user.get_playcount()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:418: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2379: in get_playcount\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getInfo\", True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc0f8368>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_________________________ TestPyLastUser.test_get_name _________________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc104758>\n[Test/test]   | \n[Test/test]   |     def test_get_name(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         user = self.network.get_user(\"RJ\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       name = user.get_name(properly_capitalized=True)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:56: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2217: in get_name\n[Test/test]   |     self._request(self.ws_prefix + \".getInfo\", True), \"name\"\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbc913d0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_____________________ TestPyLastUser.test_user_top_albums ______________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc1ad718>\n[Test/test]   | \n[Test/test]   |     def test_user_top_albums(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         user = self.network.get_user(\"RJ\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       albums = user.get_top_albums(limit=1)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:279: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2446: in get_top_albums\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getTopAlbums\", cacheable, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc1622c0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_________________ TestPyLastUser.test_get_weekly_track_charts __________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc380e90>\n[Test/test]   | \n[Test/test]   |     def test_get_weekly_track_charts(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         user = self.network.get_user(\"bbc6music\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       charts = user.get_weekly_track_charts()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:461: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1241: in get_weekly_track_charts\n[Test/test]   |     return self.get_weekly_charts(\"track\", from_date, to_date)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1257: in get_weekly_charts\n[Test/test]   |     doc = self._request(self.ws_prefix + method, True, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc50f9f0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_______________________ TestPyLastUser.test_love_limits ________________________\u001b[0m\n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   | >                   doc = sender._request(method_name, cacheable, params)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2765: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = pylast.User('test-user', pylast.LastFMNetwork('', '', '', '', ''))\n[Test/test]   | method_name = 'user.getLovedTracks', cacheable = True\n[Test/test]   | params = {'limit': 20, 'page': '1', 'user': 'test-user'}\n[Test/test]   | \n[Test/test]   |     def _request(self, method_name, cacheable: bool = False, params=None):\n[Test/test]   |         if not params:\n[Test/test]   |             params = self._get_params()\n[Test/test]   |     \n[Test/test]   | >       return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccdecebb8>, cacheable = True\n[Test/test]   | \n[Test/test]   |     def execute(self, cacheable: bool = False) -> xml.dom.minidom.Document:\n[Test/test]   |         \"\"\"Returns the XML DOM response of the POST Request from the server\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.is_caching_enabled() and cacheable:\n[Test/test]   |             response = self._get_cached_response()\n[Test/test]   |         else:\n[Test/test]   | >           response = self._download_response()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccdecebb8>\n[Test/test]   | \n[Test/test]   |     def _download_response(self):\n[Test/test]   |         \"\"\"Returns a response body string from the server.\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.limit_rate:\n[Test/test]   |             self.network._delay_call()\n[Test/test]   |     \n[Test/test]   |         username = self.params.pop(\"username\", None)\n[Test/test]   |         username = \"\" if username is None else f\"?username={username}\"\n[Test/test]   |     \n[Test/test]   |         (host_name, host_subdir) = self.network.ws_server\n[Test/test]   |     \n[Test/test]   |         if self.network.is_proxy_enabled():\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |                 proxies=self.network.proxy,\n[Test/test]   |             )\n[Test/test]   |         else:\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |             )\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   |             response = client.post(f\"{host_subdir}{username}\", data=self.params)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise NetworkError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         if response.status_code in (500, 502, 503, 504):\n[Test/test]   |             raise WSError(\n[Test/test]   |                 self.network,\n[Test/test]   |                 response.status_code,\n[Test/test]   |                 f\"Connection to the API failed with HTTP code {response.status_code}\",\n[Test/test]   |             )\n[Test/test]   |         response_text = _unicode(response.read())\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   | >           self._check_response_for_errors(response_text)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccdecebb8>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \n[Test/test]   | \u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_user.TestPyLastUser object at 0x00007fbccc0bed40>\n[Test/test]   | \n[Test/test]   |     def test_love_limits(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         # Currently test-account has at least 23 loved tracks:\n[Test/test]   |         user = self.network.get_user(\"test-user\")\n[Test/test]   |     \n[Test/test]   |         # Act/Assert\n[Test/test]   | >       assert len(user.get_loved_tracks(limit=20)) == 20\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_user.py\u001b[0m:146: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2272: in get_loved_tracks\n[Test/test]   |     return _get_loved_tracks() if stream else list(_get_loved_tracks())\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2254: in _get_loved_tracks\n[Test/test]   |     for track in _collect_nodes(\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2799: in _collect_nodes\n[Test/test]   |     return _stream_collect_nodes() if stream else list(_stream_collect_nodes())\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   |                     doc = sender._request(method_name, cacheable, params)\n[Test/test]   |                     break  # success\n[Test/test]   |                 except Exception as e:\n[Test/test]   |                     if tries >= 3:\n[Test/test]   | >                       raise PyLastError() from e\n[Test/test]   | \u001b[1m\u001b[31mE                       pylast.PyLastError\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2769: PyLastError\n[Test/test]   | \u001b[31m\u001b[1m______________________ TestPyLastTag.test_tag_top_albums _______________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_tag.TestPyLastTag object at 0x00007fbccb7a5b08>\n[Test/test]   | \n[Test/test]   |     def test_tag_top_albums(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         tag = self.network.get_tag(\"blues\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       albums = tag.get_top_albums(limit=1)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_tag.py\u001b[0m:33: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2019: in get_top_albums\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getTopAlbums\", cacheable, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccb372608>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m______________________ TestPyLastTag.test_tag_is_hashable ______________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_tag.TestPyLastTag object at 0x00007fbccb7a5788>\n[Test/test]   | \n[Test/test]   |     def test_tag_is_hashable(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   | >       tag = self.network.get_top_tags(limit=1)[0]\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_tag.py\u001b[0m:13: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:335: in get_top_tags\n[Test/test]   |     doc = _Request(self, \"tag.getTopTags\").execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbac26b0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m___________________________ TestPyLastTag.test_tags ____________________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_tag.TestPyLastTag object at 0x00007fbccb7a5d70>\n[Test/test]   | \n[Test/test]   |     def test_tags(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         tag1 = self.network.get_tag(\"blues\")\n[Test/test]   |         tag2 = self.network.get_tag(\"rock\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   |         tag_repr = repr(tag1)\n[Test/test]   |         tag_str = str(tag1)\n[Test/test]   | >       name = tag1.get_name(properly_capitalized=True)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_tag.py\u001b[0m:46: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2008: in get_name\n[Test/test]   |     self._request(self.ws_prefix + \".getInfo\", True), \"name\"\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbb511a0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m______________________ TestPyLastTag.test_tag_top_artists ______________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_tag.TestPyLastTag object at 0x00007fbccb7a5670>\n[Test/test]   | \n[Test/test]   |     def test_tag_top_artists(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         tag = self.network.get_tag(\"blues\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       artists = tag.get_top_artists(limit=1)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_tag.py\u001b[0m:23: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2038: in get_top_artists\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getTopArtists\", cacheable, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc1d7638>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m___________________ TestPyLastLibrary.test_cacheable_library ___________________\u001b[0m\n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   | >                   doc = sender._request(method_name, cacheable, params)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2765: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = pylast.Library(pylast.User('', pylast.LastFMNetwork('', '', '', '', '')), pylast.LastFMNetwork('', '', '', '', ''))\n[Test/test]   | method_name = 'library.getArtists', cacheable = False\n[Test/test]   | params = {'page': '1', 'user': ''}\n[Test/test]   | \n[Test/test]   |     def _request(self, method_name, cacheable: bool = False, params=None):\n[Test/test]   |         if not params:\n[Test/test]   |             params = self._get_params()\n[Test/test]   |     \n[Test/test]   | >       return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc624100>, cacheable = False\n[Test/test]   | \n[Test/test]   |     def execute(self, cacheable: bool = False) -> xml.dom.minidom.Document:\n[Test/test]   |         \"\"\"Returns the XML DOM response of the POST Request from the server\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.is_caching_enabled() and cacheable:\n[Test/test]   |             response = self._get_cached_response()\n[Test/test]   |         else:\n[Test/test]   | >           response = self._download_response()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc624100>\n[Test/test]   | \n[Test/test]   |     def _download_response(self):\n[Test/test]   |         \"\"\"Returns a response body string from the server.\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.limit_rate:\n[Test/test]   |             self.network._delay_call()\n[Test/test]   |     \n[Test/test]   |         username = self.params.pop(\"username\", None)\n[Test/test]   |         username = \"\" if username is None else f\"?username={username}\"\n[Test/test]   |     \n[Test/test]   |         (host_name, host_subdir) = self.network.ws_server\n[Test/test]   |     \n[Test/test]   |         if self.network.is_proxy_enabled():\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |                 proxies=self.network.proxy,\n[Test/test]   |             )\n[Test/test]   |         else:\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |             )\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   |             response = client.post(f\"{host_subdir}{username}\", data=self.params)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise NetworkError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         if response.status_code in (500, 502, 503, 504):\n[Test/test]   |             raise WSError(\n[Test/test]   |                 self.network,\n[Test/test]   |                 response.status_code,\n[Test/test]   |                 f\"Connection to the API failed with HTTP code {response.status_code}\",\n[Test/test]   |             )\n[Test/test]   |         response_text = _unicode(response.read())\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   | >           self._check_response_for_errors(response_text)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc624100>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \n[Test/test]   | \u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_library.TestPyLastLibrary object at 0x00007fbccbc39248>\n[Test/test]   | \n[Test/test]   |     def test_cacheable_library(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         library = pylast.Library(self.username, self.network)\n[Test/test]   |     \n[Test/test]   |         # Act/Assert\n[Test/test]   | >       self.helper_validate_cacheable(library, \"get_artists\")\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_library.py\u001b[0m:43: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31mtests/test_pylast.py\u001b[0m:101: in helper_validate_cacheable\n[Test/test]   |     result1 = func(limit=1, cacheable=False)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1972: in get_artists\n[Test/test]   |     return _get_artists() if stream else list(_get_artists())\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1962: in _get_artists\n[Test/test]   |     for node in _collect_nodes(\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2799: in _collect_nodes\n[Test/test]   |     return _stream_collect_nodes() if stream else list(_stream_collect_nodes())\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   |                     doc = sender._request(method_name, cacheable, params)\n[Test/test]   |                     break  # success\n[Test/test]   |                 except Exception as e:\n[Test/test]   |                     if tries >= 3:\n[Test/test]   | >                       raise PyLastError() from e\n[Test/test]   | \u001b[1m\u001b[31mE                       pylast.PyLastError\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2769: PyLastError\n[Test/test]   | \u001b[31m\u001b[1m__________________ TestPyLastNetwork.test_album_search_images __________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccbaa6410>\n[Test/test]   | \n[Test/test]   |     def test_album_search_images(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         album = \"Nevermind\"\n[Test/test]   |         search = self.network.search_for_album(album)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       results = search.get_next_page()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:327: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2645: in get_next_page\n[Test/test]   |     master_node = self._retrieve_next_page()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2631: in _retrieve_next_page\n[Test/test]   |     return self._retrieve_page(self._last_page_index)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2625: in _retrieve_page\n[Test/test]   |     doc = self._request(self._ws_prefix + \".search\", True, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbcca9e2250>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m____________________ TestPyLastNetwork.test_tag_top_tracks _____________________\u001b[0m\n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   | >                   doc = sender._request(method_name, cacheable, params)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2765: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = pylast.Tag('blues', pylast.LastFMNetwork('', '', '', '', ''))\n[Test/test]   | method_name = 'tag.getTopTracks', cacheable = True\n[Test/test]   | params = {'limit': 2, 'page': '1', 'tag': 'blues'}\n[Test/test]   | \n[Test/test]   |     def _request(self, method_name, cacheable: bool = False, params=None):\n[Test/test]   |         if not params:\n[Test/test]   |             params = self._get_params()\n[Test/test]   |     \n[Test/test]   | >       return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccb7b1830>, cacheable = True\n[Test/test]   | \n[Test/test]   |     def execute(self, cacheable: bool = False) -> xml.dom.minidom.Document:\n[Test/test]   |         \"\"\"Returns the XML DOM response of the POST Request from the server\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.is_caching_enabled() and cacheable:\n[Test/test]   |             response = self._get_cached_response()\n[Test/test]   |         else:\n[Test/test]   | >           response = self._download_response()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccb7b1830>\n[Test/test]   | \n[Test/test]   |     def _download_response(self):\n[Test/test]   |         \"\"\"Returns a response body string from the server.\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.limit_rate:\n[Test/test]   |             self.network._delay_call()\n[Test/test]   |     \n[Test/test]   |         username = self.params.pop(\"username\", None)\n[Test/test]   |         username = \"\" if username is None else f\"?username={username}\"\n[Test/test]   |     \n[Test/test]   |         (host_name, host_subdir) = self.network.ws_server\n[Test/test]   |     \n[Test/test]   |         if self.network.is_proxy_enabled():\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |                 proxies=self.network.proxy,\n[Test/test]   |             )\n[Test/test]   |         else:\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |             )\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   |             response = client.post(f\"{host_subdir}{username}\", data=self.params)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise NetworkError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         if response.status_code in (500, 502, 503, 504):\n[Test/test]   |             raise WSError(\n[Test/test]   |                 self.network,\n[Test/test]   |                 response.status_code,\n[Test/test]   |                 f\"Connection to the API failed with HTTP code {response.status_code}\",\n[Test/test]   |             )\n[Test/test]   |         response_text = _unicode(response.read())\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   | >           self._check_response_for_errors(response_text)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccb7b1830>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \n[Test/test]   | \u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccbf2cbf0>\n[Test/test]   | \n[Test/test]   |     def test_tag_top_tracks(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         tag = self.network.get_tag(\"blues\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       things = tag.get_top_tracks(limit=2)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:174: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2029: in get_top_tracks\n[Test/test]   |     return self._get_things(\"getTopTracks\", Track, params, cacheable, stream=stream)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1161: in _get_things\n[Test/test]   |     return _stream_get_things() if stream else list(_stream_get_things())\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1146: in _stream_get_things\n[Test/test]   |     nodes = _collect_nodes(\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2799: in _collect_nodes\n[Test/test]   |     return _stream_collect_nodes() if stream else list(_stream_collect_nodes())\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   |                     doc = sender._request(method_name, cacheable, params)\n[Test/test]   |                     break  # success\n[Test/test]   |                 except Exception as e:\n[Test/test]   |                     if tries >= 3:\n[Test/test]   | >                       raise PyLastError() from e\n[Test/test]   | \u001b[1m\u001b[31mE                       pylast.PyLastError\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2769: PyLastError\n[Test/test]   | \u001b[31m\u001b[1m__________________ TestPyLastNetwork.test_country_top_tracks ___________________\u001b[0m\n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   | >                   doc = sender._request(method_name, cacheable, params)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2765: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = pylast.Country('Croatia', pylast.LastFMNetwork('', '', '', '', ''))\n[Test/test]   | method_name = 'geo.getTopTracks', cacheable = True\n[Test/test]   | params = {'country': 'Croatia', 'limit': 2, 'page': '1'}\n[Test/test]   | \n[Test/test]   |     def _request(self, method_name, cacheable: bool = False, params=None):\n[Test/test]   |         if not params:\n[Test/test]   |             params = self._get_params()\n[Test/test]   |     \n[Test/test]   | >       return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbc6f600>, cacheable = True\n[Test/test]   | \n[Test/test]   |     def execute(self, cacheable: bool = False) -> xml.dom.minidom.Document:\n[Test/test]   |         \"\"\"Returns the XML DOM response of the POST Request from the server\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.is_caching_enabled() and cacheable:\n[Test/test]   |             response = self._get_cached_response()\n[Test/test]   |         else:\n[Test/test]   | >           response = self._download_response()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbc6f600>\n[Test/test]   | \n[Test/test]   |     def _download_response(self):\n[Test/test]   |         \"\"\"Returns a response body string from the server.\"\"\"\n[Test/test]   |     \n[Test/test]   |         if self.network.limit_rate:\n[Test/test]   |             self.network._delay_call()\n[Test/test]   |     \n[Test/test]   |         username = self.params.pop(\"username\", None)\n[Test/test]   |         username = \"\" if username is None else f\"?username={username}\"\n[Test/test]   |     \n[Test/test]   |         (host_name, host_subdir) = self.network.ws_server\n[Test/test]   |     \n[Test/test]   |         if self.network.is_proxy_enabled():\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |                 proxies=self.network.proxy,\n[Test/test]   |             )\n[Test/test]   |         else:\n[Test/test]   |             client = httpx.Client(\n[Test/test]   |                 verify=SSL_CONTEXT,\n[Test/test]   |                 base_url=f\"https://{host_name}\",\n[Test/test]   |                 headers=HEADERS,\n[Test/test]   |             )\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   |             response = client.post(f\"{host_subdir}{username}\", data=self.params)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise NetworkError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         if response.status_code in (500, 502, 503, 504):\n[Test/test]   |             raise WSError(\n[Test/test]   |                 self.network,\n[Test/test]   |                 response.status_code,\n[Test/test]   |                 f\"Connection to the API failed with HTTP code {response.status_code}\",\n[Test/test]   |             )\n[Test/test]   |         response_text = _unicode(response.read())\n[Test/test]   |     \n[Test/test]   |         try:\n[Test/test]   | >           self._check_response_for_errors(response_text)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbc6f600>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \n[Test/test]   | \u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x0000000003238f70>\n[Test/test]   | \n[Test/test]   |     def test_country_top_tracks(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         country = self.network.get_country(\"Croatia\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       things = country.get_top_tracks(limit=2)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:156: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1898: in get_top_tracks\n[Test/test]   |     return self._get_things(\"getTopTracks\", Track, params, cacheable, stream=stream)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1161: in _get_things\n[Test/test]   |     return _stream_get_things() if stream else list(_stream_get_things())\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1146: in _stream_get_things\n[Test/test]   |     nodes = _collect_nodes(\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2799: in _collect_nodes\n[Test/test]   |     return _stream_collect_nodes() if stream else list(_stream_collect_nodes())\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   |     def _stream_collect_nodes():\n[Test/test]   |         node_count = 0\n[Test/test]   |         page = 1\n[Test/test]   |         end_of_pages = False\n[Test/test]   |     \n[Test/test]   |         while not end_of_pages and (not limit or (limit and node_count < limit)):\n[Test/test]   |             params[\"page\"] = str(page)\n[Test/test]   |     \n[Test/test]   |             tries = 1\n[Test/test]   |             while True:\n[Test/test]   |                 try:\n[Test/test]   |                     doc = sender._request(method_name, cacheable, params)\n[Test/test]   |                     break  # success\n[Test/test]   |                 except Exception as e:\n[Test/test]   |                     if tries >= 3:\n[Test/test]   | >                       raise PyLastError() from e\n[Test/test]   | \u001b[1m\u001b[31mE                       pylast.PyLastError\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2769: PyLastError\n[Test/test]   | \u001b[31m\u001b[1m__________ TestPyLastNetwork.test_network_get_top_tags_with_no_limit ___________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x0000000003238988>\n[Test/test]   | \n[Test/test]   |     def test_network_get_top_tags_with_no_limit(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         # Act\n[Test/test]   | >       tags = self.network.get_top_tags()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:138: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:335: in get_top_tags\n[Test/test]   |     doc = _Request(self, \"tag.getTopTags\").execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc36a758>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m___________ TestPyLastNetwork.test_network_get_top_tracks_with_limit ___________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x0000000003238598>\n[Test/test]   | \n[Test/test]   |     def test_network_get_top_tracks_with_limit(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         # Act\n[Test/test]   | >       tracks = self.network.get_top_tracks(limit=1)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:146: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:318: in get_top_tracks\n[Test/test]   |     doc = _Request(self, \"chart.getTopTracks\", params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbfc6758>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_____________________ TestPyLastNetwork.test_artist_search _____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccbaa6de8>\n[Test/test]   | \n[Test/test]   |     def test_artist_search(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         artist = \"Nirvana\"\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   |         search = self.network.search_for_artist(artist)\n[Test/test]   | >       results = search.get_next_page()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:347: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2672: in get_next_page\n[Test/test]   |     master_node = self._retrieve_next_page()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2631: in _retrieve_next_page\n[Test/test]   |     return self._retrieve_page(self._last_page_index)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2625: in _retrieve_page\n[Test/test]   |     doc = self._request(self._ws_prefix + \".search\", True, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccac09fa0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_____________________ TestPyLastNetwork.test_album_search ______________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccbae0d78>\n[Test/test]   | \n[Test/test]   |     def test_album_search(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         album = \"Nevermind\"\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   |         search = self.network.search_for_album(album)\n[Test/test]   | >       results = search.get_next_page()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:315: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2645: in get_next_page\n[Test/test]   |     master_node = self._retrieve_next_page()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2631: in _retrieve_next_page\n[Test/test]   |     return self._retrieve_page(self._last_page_index)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2625: in _retrieve_page\n[Test/test]   |     doc = self._request(self._ws_prefix + \".search\", True, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbb03be8>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m__________________ TestPyLastNetwork.test_country_top_artists __________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccbad9130>\n[Test/test]   | \n[Test/test]   |     def test_country_top_artists(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         country = self.network.get_country(\"Ukraine\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       artists = country.get_top_artists(limit=1)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:225: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1888: in get_top_artists\n[Test/test]   |     doc = self._request(\"geo.getTopArtists\", cacheable, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbc52608>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_____________________ TestPyLastNetwork.test_track_search ______________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccbaa7788>\n[Test/test]   | \n[Test/test]   |     def test_track_search(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         artist = \"Nirvana\"\n[Test/test]   |         track = \"Smells Like Teen Spirit\"\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   |         search = self.network.search_for_track(artist, track)\n[Test/test]   | >       results = search.get_next_page()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:380: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2703: in get_next_page\n[Test/test]   |     master_node = self._retrieve_next_page()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2631: in _retrieve_next_page\n[Test/test]   |     return self._retrieve_page(self._last_page_index)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2625: in _retrieve_page\n[Test/test]   |     doc = self._request(self._ws_prefix + \".search\", True, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc710870>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_________________ TestPyLastNetwork.test_enable_rate_limiting __________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccb5fa528>\n[Test/test]   | \n[Test/test]   |     def test_enable_rate_limiting(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         assert not self.network.is_rate_limited()\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   |         self.network.enable_rate_limit()\n[Test/test]   |         then = time.time()\n[Test/test]   |         # Make some network call, limit not applied first time\n[Test/test]   | >       self.network.get_top_artists()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:66: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:307: in get_top_artists\n[Test/test]   |     doc = _Request(self, \"chart.getTopArtists\", params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbc71d38>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m____________________ TestPyLastNetwork.test_init_with_token ____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccbaaf7c0>\n[Test/test]   | \n[Test/test]   |     def test_init_with_token(self) -> None:\n[Test/test]   |         # Arrange/Act\n[Test/test]   |         msg = None\n[Test/test]   |         try:\n[Test/test]   |             pylast.LastFMNetwork(\n[Test/test]   |                 api_key=self.__class__.secrets[\"api_key\"],\n[Test/test]   |                 api_secret=self.__class__.secrets[\"api_secret\"],\n[Test/test]   |                 token=\"invalid\",\n[Test/test]   |             )\n[Test/test]   |         except pylast.WSError as exc:\n[Test/test]   |             msg = str(exc)\n[Test/test]   |     \n[Test/test]   |         # Assert\n[Test/test]   | >       assert msg == \"Unauthorized Token - This token has not been issued\"\n[Test/test]   | \u001b[1m\u001b[31mE       AssertionError: assert 'Invalid para...red parameter' == 'Unauthorized...t been issued'\u001b[0m\n[Test/test]   | \u001b[1m\u001b[31mE         - Unauthorized Token - This token has not been issued\u001b[0m\n[Test/test]   | \u001b[1m\u001b[31mE         + Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:295: AssertionError\n[Test/test]   | \u001b[31m\u001b[1m________________________ TestPyLastNetwork.test_caching ________________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccbad9c90>\n[Test/test]   | \n[Test/test]   |     def test_caching(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         user = self.network.get_user(\"RJ\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   |         self.network.enable_caching()\n[Test/test]   | >       tags1 = user.get_top_tags(limit=1, cacheable=True)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:236: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2482: in get_top_tags\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getTopTags\", cacheable, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:941: in execute\n[Test/test]   |     response = self._get_cached_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:883: in _get_cached_response\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccaa41ad0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m____________ TestPyLastNetwork.test_network_get_top_tags_with_limit ____________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccb5cb6e0>\n[Test/test]   | \n[Test/test]   |     def test_network_get_top_tags_with_limit(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         # Act\n[Test/test]   | >       tags = self.network.get_top_tags(limit=1)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:130: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:335: in get_top_tags\n[Test/test]   |     doc = _Request(self, \"tag.getTopTags\").execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:941: in execute\n[Test/test]   |     response = self._get_cached_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:883: in _get_cached_response\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc5d24f0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m______________ TestPyLastNetwork.test_country_network_top_tracks _______________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x0000000003239398>\n[Test/test]   | \n[Test/test]   |     def test_country_network_top_tracks(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         # Act\n[Test/test]   | >       things = self.network.get_geo_top_tracks(\"Croatia\", limit=2)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:164: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:383: in get_geo_top_tracks\n[Test/test]   |     doc = _Request(self, \"geo.getTopTracks\", params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:941: in execute\n[Test/test]   |     response = self._get_cached_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:883: in _get_cached_response\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccb50f520>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_________________ TestPyLastNetwork.test_disable_rate_limiting _________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccb5fa2f8>\n[Test/test]   | \n[Test/test]   |     def test_disable_rate_limiting(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         self.network.enable_rate_limit()\n[Test/test]   |         assert self.network.is_rate_limited()\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   |         self.network.disable_rate_limit()\n[Test/test]   |         # Make some network call, limit not applied first time\n[Test/test]   |         self.network.get_user(self.username)\n[Test/test]   |         # Make a second network call, limiting should be applied\n[Test/test]   | >       self.network.get_top_artists()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:85: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:307: in get_top_artists\n[Test/test]   |     doc = _Request(self, \"chart.getTopArtists\", params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:941: in execute\n[Test/test]   |     response = self._get_cached_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:883: in _get_cached_response\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccd0519b8>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m__________________ TestPyLastNetwork.test_geo_get_top_artists __________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccb5faf38>\n[Test/test]   | \n[Test/test]   |     def test_geo_get_top_artists(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         # Act\n[Test/test]   | >       artists = self.network.get_geo_top_artists(country=\"United Kingdom\", limit=1)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:100: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:360: in get_geo_top_artists\n[Test/test]   |     doc = _Request(self, \"geo.getTopArtists\", params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:941: in execute\n[Test/test]   |     response = self._get_cached_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:883: in _get_cached_response\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccaa413d0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m______________________ TestPyLastNetwork.test_artist_mbid ______________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccbaaaaa0>\n[Test/test]   | \n[Test/test]   |     def test_artist_mbid(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         mbid = \"7e84f845-ac16-41fe-9ff8-df12eb32af55\"\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       artist = self.network.get_artist_by_mbid(mbid)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:263: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:478: in get_artist_by_mbid\n[Test/test]   |     doc = _Request(self, \"artist.getInfo\", params).execute(True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:941: in execute\n[Test/test]   |     response = self._get_cached_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:883: in _get_cached_response\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc239600>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_____________ TestPyLastNetwork.test_search_get_total_result_count _____________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccbae4020>\n[Test/test]   | \n[Test/test]   |     def test_search_get_total_result_count(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         artist = \"Nirvana\"\n[Test/test]   |         track = \"Smells Like Teen Spirit\"\n[Test/test]   |         search = self.network.search_for_track(artist, track)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       total = search.get_total_result_count()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:414: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2616: in get_total_result_count\n[Test/test]   |     doc = self._request(self._ws_prefix + \".search\", True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:941: in execute\n[Test/test]   |     response = self._get_cached_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:883: in _get_cached_response\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc413e50>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m__________________ TestPyLastNetwork.test_track_search_images __________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccbaa7da8>\n[Test/test]   | \n[Test/test]   |     def test_track_search_images(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         artist = \"Nirvana\"\n[Test/test]   |         track = \"Smells Like Teen Spirit\"\n[Test/test]   |         search = self.network.search_for_track(artist, track)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       results = search.get_next_page()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:393: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2703: in get_next_page\n[Test/test]   |     master_node = self._retrieve_next_page()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2631: in _retrieve_next_page\n[Test/test]   |     return self._retrieve_page(self._last_page_index)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2625: in _retrieve_page\n[Test/test]   |     doc = self._request(self._ws_prefix + \".search\", True, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:941: in execute\n[Test/test]   |     response = self._get_cached_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:883: in _get_cached_response\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc2eb6e0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m__________ TestPyLastNetwork.test_network_get_top_artists_with_limit ___________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccb5fb248>\n[Test/test]   | \n[Test/test]   |     def test_network_get_top_artists_with_limit(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         # Act\n[Test/test]   | >       artists = self.network.get_top_artists(limit=1)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:122: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:307: in get_top_artists\n[Test/test]   |     doc = _Request(self, \"chart.getTopArtists\", params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:941: in execute\n[Test/test]   |     response = self._get_cached_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:883: in _get_cached_response\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccb6b43d8>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m______________________ TestPyLastNetwork.test_album_data _______________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccb9facd0>\n[Test/test]   | \n[Test/test]   |     def test_album_data(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         thing = self.network.get_album(\"Test Artist\", \"Test Album\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   |         stringed = str(thing)\n[Test/test]   |         rep = thing.__repr__()\n[Test/test]   |         title = thing.get_title()\n[Test/test]   |         name = thing.get_name()\n[Test/test]   | >       playcount = thing.get_playcount()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:188: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1570: in get_playcount\n[Test/test]   |     self._request(self.ws_prefix + \".getInfo\", cacheable=True), \"playcount\"\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:941: in execute\n[Test/test]   |     response = self._get_cached_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:883: in _get_cached_response\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc0b3248>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_________________ TestPyLastNetwork.test_artist_search_images __________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccbaa7910>\n[Test/test]   | \n[Test/test]   |     def test_artist_search_images(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         artist = \"Nirvana\"\n[Test/test]   |         search = self.network.search_for_artist(artist)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       results = search.get_next_page()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:359: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2672: in get_next_page\n[Test/test]   |     master_node = self._retrieve_next_page()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2631: in _retrieve_next_page\n[Test/test]   |     return self._retrieve_page(self._last_page_index)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:2625: in _retrieve_page\n[Test/test]   |     doc = self._request(self._ws_prefix + \".search\", True, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:941: in execute\n[Test/test]   |     response = self._get_cached_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:883: in _get_cached_response\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccdbebef8>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m__________________ TestPyLastNetwork.test_geo_get_top_tracks ___________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccb5fb398>\n[Test/test]   | \n[Test/test]   |     def test_geo_get_top_tracks(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         # Act\n[Test/test]   | >       tracks = self.network.get_geo_top_tracks(\n[Test/test]   |             country=\"United Kingdom\", location=\"Manchester\", limit=1\n[Test/test]   |         )\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:110: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:383: in get_geo_top_tracks\n[Test/test]   |     doc = _Request(self, \"geo.getTopTracks\", params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:941: in execute\n[Test/test]   |     response = self._get_cached_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:883: in _get_cached_response\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc3e0d08>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m______________________ TestPyLastNetwork.test_track_data _______________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccbad8c98>\n[Test/test]   | \n[Test/test]   |     def test_track_data(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         thing = self.network.get_track(\"Test Artist\", \"test title\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   |         stringed = str(thing)\n[Test/test]   |         rep = thing.__repr__()\n[Test/test]   |         title = thing.get_title()\n[Test/test]   |         name = thing.get_name()\n[Test/test]   | >       playcount = thing.get_playcount()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:208: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1570: in get_playcount\n[Test/test]   |     self._request(self.ws_prefix + \".getInfo\", cacheable=True), \"playcount\"\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:941: in execute\n[Test/test]   |     response = self._get_cached_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:883: in _get_cached_response\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccca99868>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m______________________ TestPyLastNetwork.test_album_mbid _______________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccbaaa560>\n[Test/test]   | \n[Test/test]   |     def test_album_mbid(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         mbid = \"03c91c40-49a6-44a7-90e7-a700edf97a62\"\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       album = self.network.get_album_by_mbid(mbid)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:250: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:487: in get_album_by_mbid\n[Test/test]   |     doc = _Request(self, \"album.getInfo\", params).execute(True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:941: in execute\n[Test/test]   |     response = self._get_cached_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:883: in _get_cached_response\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccaabea30>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m______________________ TestPyLastNetwork.test_track_mbid _______________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_network.TestPyLastNetwork object at 0x00007fbccbaaf408>\n[Test/test]   | \n[Test/test]   |     def test_track_mbid(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         mbid = \"ebc037b1-cc9c-44f2-a21f-83c219f0e1e0\"\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       track = self.network.get_track_by_mbid(mbid)\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_network.py\u001b[0m:274: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:469: in get_track_by_mbid\n[Test/test]   |     doc = _Request(self, \"track.getInfo\", params).execute(True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:941: in execute\n[Test/test]   |     response = self._get_cached_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:883: in _get_cached_response\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccb56f7f8>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m______________________ TestPyLastArtist.test_bio_content _______________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_artist.TestPyLastArtist object at 0x00007fbccbc55750>\n[Test/test]   | \n[Test/test]   |     def test_bio_content(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         artist = pylast.Artist(\"Test Artist\", self.network)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       bio = artist.get_bio_content(language=\"en\")\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_artist.py\u001b[0m:48: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1788: in get_bio_content\n[Test/test]   |     return self.get_bio(\"content\", language)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1770: in get_bio\n[Test/test]   |     bio = self._extract_cdata_from_request(\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1125: in _extract_cdata_from_request\n[Test/test]   |     doc = self._request(method_name, True, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccd051948>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m___________________ TestPyLastArtist.test_bio_published_date ___________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_artist.TestPyLastArtist object at 0x00007fbccbc55280>\n[Test/test]   | \n[Test/test]   |     def test_bio_published_date(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         artist = pylast.Artist(\"Test Artist\", self.network)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       bio = artist.get_bio_published_date()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_artist.py\u001b[0m:37: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1780: in get_bio_published_date\n[Test/test]   |     return self.get_bio(\"published\")\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1770: in get_bio\n[Test/test]   |     bio = self._extract_cdata_from_request(\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1125: in _extract_cdata_from_request\n[Test/test]   |     doc = self._request(method_name, True, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccceaa410>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m___________________ TestPyLastArtist.test_artist_top_albums ____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_artist.TestPyLastArtist object at 0x00007fbccbc7f4e8>\n[Test/test]   | \n[Test/test]   |     def test_artist_top_albums(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         # Pick an artist with plenty of plays\n[Test/test]   | >       artist = self.network.get_top_artists(limit=1)[0].item\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_artist.py\u001b[0m:90: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:307: in get_top_artists\n[Test/test]   |     doc = _Request(self, \"chart.getTopArtists\", params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccba1ee20>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m______________________ TestPyLastArtist.test_bio_summary _______________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_artist.TestPyLastArtist object at 0x00007fbccbc7e720>\n[Test/test]   | \n[Test/test]   |     def test_bio_summary(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         artist = pylast.Artist(\"Test Artist\", self.network)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       bio = artist.get_bio_summary(language=\"en\")\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_artist.py\u001b[0m:70: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1784: in get_bio_summary\n[Test/test]   |     return self.get_bio(\"summary\", language)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1770: in get_bio\n[Test/test]   |     bio = self._extract_cdata_from_request(\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1125: in _extract_cdata_from_request\n[Test/test]   |     doc = self._request(method_name, True, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccb0586e8>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m________________________ TestPyLastArtist.test_artists _________________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_artist.TestPyLastArtist object at 0x00007fbccc3ca7c8>\n[Test/test]   | \n[Test/test]   |     def test_artists(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         artist1 = self.network.get_artist(\"Radiohead\")\n[Test/test]   |         artist2 = self.network.get_artist(\"Portishead\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   |         url = artist1.get_url()\n[Test/test]   | >       mbid = artist1.get_mbid()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_artist.py\u001b[0m:229: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1742: in get_mbid\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getInfo\", True)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbcca9d70c0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m____________ TestPyLastArtist.test_artist_top_albums_limit_default _____________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_artist.TestPyLastArtist object at 0x00007fbccc3c2f70>\n[Test/test]   | \n[Test/test]   |     def test_artist_top_albums_limit_default(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         # Pick an artist with plenty of plays\n[Test/test]   | >       artist = self.network.get_top_artists(limit=1)[0].item\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_artist.py\u001b[0m:113: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:307: in get_top_artists\n[Test/test]   |     doc = _Request(self, \"chart.getTopArtists\", params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbcccdd9c58>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m___________________ TestPyLastArtist.test_artist_top_tracks ____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_artist.TestPyLastArtist object at 0x00007fbccbc7f018>\n[Test/test]   | \n[Test/test]   |     def test_artist_top_tracks(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         # Pick an artist with plenty of plays\n[Test/test]   | >       artist = self.network.get_top_artists(limit=1)[0].item\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_artist.py\u001b[0m:79: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:307: in get_top_artists\n[Test/test]   |     doc = _Request(self, \"chart.getTopArtists\", params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc3de6e8>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_________________ TestPyLastArtist.test_artist_get_correction __________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_artist.TestPyLastArtist object at 0x00007fbccc3df4e8>\n[Test/test]   | \n[Test/test]   |     def test_artist_get_correction(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         artist = pylast.Artist(\"guns and roses\", self.network)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       corrected_artist_name = artist.get_correction()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_artist.py\u001b[0m:263: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1718: in get_correction\n[Test/test]   |     return _extract(self._request(self.ws_prefix + \".getCorrection\"), \"name\")\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbcca9c4218>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m___________________ TestPyLastArtist.test_get_userplaycount ____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_artist.TestPyLastArtist object at 0x00007fbccc3df2b8>\n[Test/test]   | \n[Test/test]   |     def test_get_userplaycount(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         artist = pylast.Artist(\"John Lennon\", self.network, username=self.username)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   |         playcount = artist.get_userplaycount()\n[Test/test]   |     \n[Test/test]   |         # Assert\n[Test/test]   | >       assert playcount >= 0\n[Test/test]   | \u001b[1m\u001b[31mE       TypeError: '>=' not supported between instances of 'NoneType' and 'int'\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_artist.py\u001b[0m:276: TypeError\n[Test/test]   | \u001b[31m\u001b[1m______________ TestPyLastArtist.test_artist_top_albums_limit[50] _______________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_artist.TestPyLastArtist object at 0x00007fbccc3c2758>\n[Test/test]   | test_limit = 50\n[Test/test]   | \n[Test/test]   |     @pytest.mark.parametrize(\"test_limit\", [1, 50, 100])\n[Test/test]   |     def test_artist_top_albums_limit(self, test_limit: int) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         # Pick an artist with plenty of plays\n[Test/test]   | >       artist = self.network.get_top_artists(limit=1)[0].item\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_artist.py\u001b[0m:102: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:307: in get_top_artists\n[Test/test]   |     doc = _Request(self, \"chart.getTopArtists\", params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccc182fe0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_______________ TestPyLastArtist.test_artist_top_albums_limit[1] _______________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_artist.TestPyLastArtist object at 0x00007fbccc3c29c0>\n[Test/test]   | test_limit = 1\n[Test/test]   | \n[Test/test]   |     @pytest.mark.parametrize(\"test_limit\", [1, 50, 100])\n[Test/test]   |     def test_artist_top_albums_limit(self, test_limit: int) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         # Pick an artist with plenty of plays\n[Test/test]   | >       artist = self.network.get_top_artists(limit=1)[0].item\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_artist.py\u001b[0m:102: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:307: in get_top_artists\n[Test/test]   |     doc = _Request(self, \"chart.getTopArtists\", params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbb64e20>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m______________ TestPyLastArtist.test_artist_top_albums_limit[100] ______________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_artist.TestPyLastArtist object at 0x00007fbccc3c24b8>\n[Test/test]   | test_limit = 100\n[Test/test]   | \n[Test/test]   |     @pytest.mark.parametrize(\"test_limit\", [1, 50, 100])\n[Test/test]   |     def test_artist_top_albums_limit(self, test_limit: int) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         # Pick an artist with plenty of plays\n[Test/test]   | >       artist = self.network.get_top_artists(limit=1)[0].item\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_artist.py\u001b[0m:102: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:307: in get_top_artists\n[Test/test]   |     doc = _Request(self, \"chart.getTopArtists\", params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbf66b80>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m_________________ TestPyLastArtist.test_artist_listener_count __________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_artist.TestPyLastArtist object at 0x00007fbccc3c34e8>\n[Test/test]   | \n[Test/test]   |     def test_artist_listener_count(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         artist = self.network.get_artist(\"Test Artist\")\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       count = artist.get_listener_count()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_artist.py\u001b[0m:126: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1753: in get_listener_count\n[Test/test]   |     _extract(self._request(self.ws_prefix + \".getInfo\", True), \"listeners\")\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbfd8480>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m____________________ TestPyLastArtist.test_bio_content_none ____________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_artist.TestPyLastArtist object at 0x00007fbccbc7e9f8>\n[Test/test]   | \n[Test/test]   |     def test_bio_content_none(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         # An artist with no biography, with \"<content/>\" in the API XML\n[Test/test]   |         artist = pylast.Artist(\"Mr Sizef + Unquote\", self.network)\n[Test/test]   |     \n[Test/test]   |         # Act\n[Test/test]   | >       bio = artist.get_bio_content()\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_artist.py\u001b[0m:60: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1788: in get_bio_content\n[Test/test]   |     return self.get_bio(\"content\", language)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1770: in get_bio\n[Test/test]   |     bio = self._extract_cdata_from_request(\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1125: in _extract_cdata_from_request\n[Test/test]   |     doc = self._request(method_name, True, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccbd59248>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \u001b[31m\u001b[1m___________________ TestPyLastArtist.test_artist_is_hashable ___________________\u001b[0m\n[Test/test]   | \n[Test/test]   | self = <tests.test_artist.TestPyLastArtist object at 0x00007fbccbc553d0>\n[Test/test]   | \n[Test/test]   |     def test_artist_is_hashable(self) -> None:\n[Test/test]   |         # Arrange\n[Test/test]   |         test_artist = self.network.get_artist(\"Radiohead\")\n[Test/test]   | >       artist = test_artist.get_similar(limit=2)[0].item\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31mtests/test_artist.py\u001b[0m:26: \n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1797: in get_similar\n[Test/test]   |     doc = self._request(self.ws_prefix + \".getSimilar\", True, params)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:1108: in _request\n[Test/test]   |     return _Request(self.network, method_name, params).execute(cacheable)\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:943: in execute\n[Test/test]   |     response = self._download_response()\n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:932: in _download_response\n[Test/test]   |     self._check_response_for_errors(response_text)\n[Test/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Test/test]   | \n[Test/test]   | self = <pylast._Request object at 0x00007fbccdeceaa0>\n[Test/test]   | response = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<lfm status=\"failed\">\\n  <error code=\"6\">Invalid parameters - Your request is missing a required parameter</error>\\n</lfm>\\n'\n[Test/test]   | \n[Test/test]   |     def _check_response_for_errors(self, response):\n[Test/test]   |         \"\"\"Checks the response for errors and raises one if any exists.\"\"\"\n[Test/test]   |         try:\n[Test/test]   |             doc = _parse_response(response)\n[Test/test]   |         except Exception as e:\n[Test/test]   |             raise MalformedResponseError(self.network, e) from e\n[Test/test]   |     \n[Test/test]   |         element = doc.getElementsByTagName(\"lfm\")[0]\n[Test/test]   |         logger.debug(doc.toprettyxml())\n[Test/test]   |     \n[Test/test]   |         if element.getAttribute(\"status\") != \"ok\":\n[Test/test]   |             element = doc.getElementsByTagName(\"error\")[0]\n[Test/test]   |             status = element.getAttribute(\"code\")\n[Test/test]   |             details = element.firstChild.data.strip()\n[Test/test]   | >           raise WSError(self.network, status, details)\n[Test/test]   | \u001b[1m\u001b[31mE           pylast.WSError: Invalid parameters - Your request is missing a required parameter\u001b[0m\n[Test/test]   | \n[Test/test]   | \u001b[1m\u001b[31m.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py\u001b[0m:961: WSError\n[Test/test]   | \n[Test/test]   | ---------- coverage: platform linux, python 3.9.16-final-0 -----------\n[Test/test]   | Name                                                   Stmts   Miss  Cover   Missing\n[Test/test]   | ------------------------------------------------------------------------------------\n[Test/test]   | .tox/py/lib/pypy3.9/site-packages/pylast/__init__.py    1236    419    66%   42-44, 215-216, 296, 309, 320-328, 337-345, 362, 385-395, 434, 438, 471, 480, 489, 519-534, 570, 594-633, 788, 795, 798, 801-802, 835-836, 884-886, 905, 920-921, 924, 935, 945, 951-952, 999-1008, 1016-1026, 1034, 1044-1046, 1052-1053, 1061-1070, 1113, 1127-1132, 1154-1159, 1194-1199, 1213-1217, 1225, 1254-1255, 1259-1270, 1293, 1303-1309, 1315-1323, 1330-1331, 1336, 1343-1370, 1377-1389, 1439, 1446-1447, 1450, 1460-1461, 1464, 1493, 1549, 1580-1584, 1600-1606, 1609-1613, 1649-1652, 1693, 1709, 1723, 1733-1737, 1744, 1750, 1755, 1774-1776, 1799-1808, 1812-1816, 1822, 1890, 1965-1970, 1995, 1998, 2021, 2040, 2059-2061, 2082, 2090-2095, 2100, 2104-2110, 2115, 2120, 2134-2142, 2162-2165, 2203-2208, 2231, 2262-2270, 2284-2298, 2347-2353, 2362-2367, 2374, 2381, 2388, 2395, 2400-2406, 2411-2417, 2422-2428, 2448, 2468, 2484-2492, 2537, 2553, 2618, 2627, 2647-2658, 2674-2684, 2705-2716, 2739-2742, 2766, 2774-2797, 2805-2811, 2817-2825, 2830-2837, 2842-2851, 2855-2858, 2862-2867, 2871-2876, 2891-2897, 2901-2905\n[Test/test]   | tests/__init__.py                                          0      0   100%\n[Test/test]   | tests/test_album.py                                       52     13    75%   19-20, 38, 48-49, 59-60, 70-71, 97-98, 108, 118\n[Test/test]   | tests/test_artist.py                                     143     77    46%   27-30, 40-41, 51-52, 63, 73-74, 82-85, 93-96, 105-108, 116-119, 129-130, 135-145, 150-160, 165-175, 180-195, 200-220, 231-240, 266\n[Test/test]   | tests/test_country.py                                     19      0   100%\n[Test/test]   | tests/test_library.py                                     23      0   100%\n[Test/test]   | tests/test_librefm.py                                     21      0   100%\n[Test/test]   | tests/test_network.py                                    222    103    54%   18-31, 36-56, 68-73, 88, 103-105, 115-117, 125, 133, 141, 149, 159, 167, 177, 189-197, 209-218, 228, 237-243, 251-256, 266-267, 275-280, 318-319, 328-339, 350-351, 360-371, 383-384, 394-405, 417\n[Test/test]   | tests/test_pylast.py                                      72     30    58%   86-93, 102-106, 110-113, 117-120, 124-126, 130-137\n[Test/test]   | tests/test_tag.py                                         29     11    62%   16, 26, 36, 47-56\n[Test/test]   | tests/test_track.py                                      116     47    59%   17-28, 33-47, 76-77, 83-86, 96-97, 107-108, 118, 128, 138-143, 151-153, 172, 182, 190-196, 222, 232\n[Test/test]   | tests/test_user.py                                       232     68    71%   59, 69-71, 86, 97, 107, 138, 147-149, 212, 222, 226-229, 233-246, 250-253, 259-262, 272, 282-286, 296-299, 309-312, 322-325, 334-338, 348, 373-375, 392-394, 421, 431-432, 450-454, 462-466, 478-480, 490-494\n[Test/test]   | tests/unicode_test.py                                     20      0   100%\n[Test/test]   | ------------------------------------------------------------------------------------\n[Test/test]   | TOTAL                                                   2185    768    65%\n[Test/test]   | Coverage XML written to file coverage.xml\n[Test/test]   | \n[Test/test]   | ===Flaky Test Report===\n[Test/test]   | \n[Test/test]   | test_album_is_hashable passed 1 out of the required 1 times. Success!\n[Test/test]   | test_album_in_recent_tracks failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.PyLastError'>\n[Test/test]   | \t\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_album.py:35>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2355>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2339>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2799>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2769>]\n[Test/test]   | test_no_mbid failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_album.py:115>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1598>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_album_tags_are_topitems failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_album.py:16>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1375>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_album_eq_none_is_false passed 1 out of the required 1 times. Success!\n[Test/test]   | test_album_wiki_published_date failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_album.py:56>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1168>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1192>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_album_wiki_summary failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_album.py:67>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1175>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1192>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_album_wiki_content failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_album.py:45>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1182>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1192>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_album_ne_none_is_true passed 1 out of the required 1 times. Success!\n[Test/test]   | test_mbid failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_album.py:105>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1598>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_get_cover_image failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_album.py:94>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1547>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_user_play_count_in_track_info failed and was not selected for rerun.\n[Test/test]   | \t<class 'TypeError'>\n[Test/test]   | \t'>=' not supported between instances of 'NoneType' and 'int'\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_track.py:61>]\n[Test/test]   | test_track_get_duration failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_track.py:115>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2080>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_user_loved_in_track_info failed and was not selected for rerun.\n[Test/test]   | \t<class 'AssertionError'>\n[Test/test]   | \tassert None is not None\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_track.py:75>]\n[Test/test]   | test_track_listener_count failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_track.py:179>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1591>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_track_with_no_mbid failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_track.py:229>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1598>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_track_get_similar failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_track.py:135>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2132>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_track_get_similar_limits failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_track.py:150>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2132>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_track_wiki_summary failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_track.py:104>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1175>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1192>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_album_tracks failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_track.py:189>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1628>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_track_eq_none_is_false passed 1 out of the required 1 times. Success!\n[Test/test]   | test_track_is_hashable failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.PyLastError'>\n[Test/test]   | \t\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_track.py:82>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1824>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1161>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1146>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2799>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2769>]\n[Test/test]   | test_track_get_album failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_track.py:125>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2102>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_track_title_prop_caps failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_track.py:169>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1555>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_tracks_notequal passed 1 out of the required 1 times. Success!\n[Test/test]   | test_track_ne_none_is_true passed 1 out of the required 1 times. Success!\n[Test/test]   | test_track_get_correction failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_track.py:219>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2075>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_track_wiki_content failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_track.py:93>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1182>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1192>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_user_tagged_artists failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:293>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1285>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1298>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_cacheable_user failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.PyLastError'>\n[Test/test]   | \t\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:195>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_pylast.py:101>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2233>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2228>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2799>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2769>]\n[Test/test]   | test_equality passed 1 out of the required 1 times. Success!\n[Test/test]   | test_get_url passed 1 out of the required 1 times. Success!\n[Test/test]   | test_get_user_unixtime_registration failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:82>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2393>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_user_tagged_tracks failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:319>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1285>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1298>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_user_get_top_tags_with_limit failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:209>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2482>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_user_subscriber failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:333>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2372>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_get_user_registration failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:66>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2386>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_user_charts failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:258>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1211>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_user_not_equal_to_none passed 1 out of the required 1 times. Success!\n[Test/test]   | test_repr passed 1 out of the required 1 times. Success!\n[Test/test]   | test_user_top_artists failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:269>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2466>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_user_is_hashable passed 1 out of the required 1 times. Success!\n[Test/test]   | test_get_image failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:428>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2551>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_user_get_country failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:104>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2360>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_get_recent_tracks_limit_none failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.PyLastError'>\n[Test/test]   | \t\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:387>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2355>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2339>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2799>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2769>]\n[Test/test]   | test_get_recent_tracks_from_to failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.PyLastError'>\n[Test/test]   | \t\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:370>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2355>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2339>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2799>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2769>]\n[Test/test]   | test_pickle passed 1 out of the required 1 times. Success!\n[Test/test]   | test_user_tagged_albums failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:306>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1285>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1298>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_cacheable_user_get_track_scrobbles failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.PyLastError'>\n[Test/test]   | \t\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:489>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2539>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2529>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2799>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2769>]\n[Test/test]   | test_user_equals_none passed 1 out of the required 1 times. Success!\n[Test/test]   | test_get_countryless_user failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:94>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2360>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_user_get_library passed 1 out of the required 1 times. Success!\n[Test/test]   | test_user_top_tracks failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.PyLastError'>\n[Test/test]   | \t\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:219>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2515>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1161>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1146>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2799>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2769>]\n[Test/test]   | test_get_weekly_artist_charts failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:449>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1233>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1257>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_user_get_image failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:345>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2551>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_now_playing_user_with_no_scrobbles failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:135>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2282>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_user_get_track_scrobbles failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.PyLastError'>\n[Test/test]   | \t\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:475>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2539>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2529>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2799>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2769>]\n[Test/test]   | test_get_playcount failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:418>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2379>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_get_name failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:56>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2217>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_str passed 1 out of the required 1 times. Success!\n[Test/test]   | test_user_top_albums failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:279>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2446>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_get_weekly_track_charts failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:461>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1241>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1257>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_love_limits failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.PyLastError'>\n[Test/test]   | \t\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_user.py:146>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2272>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2254>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2799>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2769>]\n[Test/test]   | test_get_recent_tracks_is_streamable passed 1 out of the required 1 times. Success!\n[Test/test]   | test_repr passed 1 out of the required 1 times. Success!\n[Test/test]   | test_libre_fm passed 1 out of the required 1 times. Success!\n[Test/test]   | test_tag_top_albums failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_tag.py:33>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2019>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_tag_is_hashable failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_tag.py:13>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:335>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_tags failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_tag.py:46>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2008>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_tag_top_artists failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_tag.py:23>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2038>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_str passed 1 out of the required 1 times. Success!\n[Test/test]   | test_cacheable_library failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.PyLastError'>\n[Test/test]   | \t\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_library.py:43>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_pylast.py:101>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1972>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1962>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2799>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2769>]\n[Test/test]   | test_repr passed 1 out of the required 1 times. Success!\n[Test/test]   | test_get_user passed 1 out of the required 1 times. Success!\n[Test/test]   | test_library_is_hashable passed 1 out of the required 1 times. Success!\n[Test/test]   | test_album_search_images failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:327>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2645>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2631>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2625>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_tag_top_tracks failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.PyLastError'>\n[Test/test]   | \t\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:174>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2029>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1161>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1146>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2799>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2769>]\n[Test/test]   | test_country_top_tracks failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.PyLastError'>\n[Test/test]   | \t\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:156>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1898>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1161>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1146>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2799>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2769>]\n[Test/test]   | test_network_get_top_tags_with_no_limit failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:138>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:335>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_network_get_top_tracks_with_limit failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:146>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:318>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_artist_search failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:347>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2672>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2631>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2625>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_album_search failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:315>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2645>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2631>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2625>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_country_top_artists failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:225>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1888>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_proxy passed 1 out of the required 1 times. Success!\n[Test/test]   | test_track_search failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:380>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2703>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2631>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2625>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_enable_rate_limiting failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:66>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:307>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_init_with_token failed and was not selected for rerun.\n[Test/test]   | \t<class 'AssertionError'>\n[Test/test]   | \tassert 'Invalid para...red parameter' == 'Unauthorized...t been issued'\n[Test/test]   |   - Unauthorized Token - This token has not been issued\n[Test/test]   |   + Invalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:295>]\n[Test/test]   | test_caching failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:236>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2482>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:941>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:883>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_network_get_top_tags_with_limit failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:130>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:335>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:941>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:883>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_country_network_top_tracks failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:164>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:383>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:941>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:883>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_disable_rate_limiting failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:85>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:307>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:941>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:883>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_geo_get_top_artists failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:100>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:360>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:941>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:883>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_artist_mbid failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:263>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:478>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:941>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:883>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_search_get_total_result_count failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:414>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2616>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:941>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:883>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_track_search_images failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:393>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2703>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2631>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2625>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:941>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:883>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_network_get_top_artists_with_limit failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:122>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:307>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:941>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:883>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_album_data failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:188>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1570>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:941>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:883>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_lastfm_network_name passed 1 out of the required 1 times. Success!\n[Test/test]   | test_artist_search_images failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:359>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2672>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2631>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:2625>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:941>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:883>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_geo_get_top_tracks failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:110>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:383>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:941>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:883>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_track_data failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:208>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1570>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:941>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:883>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_album_mbid failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:250>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:487>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:941>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:883>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_track_mbid failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_network.py:274>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:469>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:941>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:883>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_countries passed 1 out of the required 1 times. Success!\n[Test/test]   | test_country_is_hashable passed 1 out of the required 1 times. Success!\n[Test/test]   | test_bio_content failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_artist.py:48>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1788>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1770>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1125>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_bio_published_date failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_artist.py:37>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1780>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1770>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1125>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_artist_top_albums failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_artist.py:90>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:307>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_bio_summary failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_artist.py:70>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1784>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1770>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1125>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_repr passed 1 out of the required 1 times. Success!\n[Test/test]   | test_artists failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_artist.py:229>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1742>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_artist_top_albums_limit_default failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_artist.py:113>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:307>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_artist_top_tracks failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_artist.py:79>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:307>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_artist_eq_none_is_false passed 1 out of the required 1 times. Success!\n[Test/test]   | test_artist_get_correction failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_artist.py:263>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1718>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_get_userplaycount failed and was not selected for rerun.\n[Test/test]   | \t<class 'TypeError'>\n[Test/test]   | \t'>=' not supported between instances of 'NoneType' and 'int'\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_artist.py:276>]\n[Test/test]   | test_artist_top_albums_limit[50] failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_artist.py:102>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:307>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_artist_top_albums_limit[1] failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_artist.py:102>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:307>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_artist_ne_none_is_true passed 1 out of the required 1 times. Success!\n[Test/test]   | test_artist_top_albums_limit[100] failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_artist.py:102>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:307>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_artist_listener_count failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_artist.py:126>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1753>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_bio_content_none failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_artist.py:60>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1788>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1770>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1125>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | test_artist_is_hashable failed and was not selected for rerun.\n[Test/test]   | \t<class 'pylast.WSError'>\n[Test/test]   | \tInvalid parameters - Your request is missing a required parameter\n[Test/test]   | \t[<TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/tests/test_artist.py:26>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1797>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:1108>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:943>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:932>, <TracebackEntry /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast/.tox/py/lib/pypy3.9/site-packages/pylast/__init__.py:961>]\n[Test/test]   | \n[Test/test]   | ===End Flaky Test Report===\n[Test/test]   | \u001b[36m\u001b[1m=========================== short test summary info ============================\u001b[0m\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_album.py::\u001b[1mTestPyLastAlbum::test_album_in_recent_tracks\u001b[0m - pylast.PyLastError\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_album.py::\u001b[1mTestPyLastAlbum::test_no_mbid\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_album.py::\u001b[1mTestPyLastAlbum::test_album_tags_are_topitems\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_album.py::\u001b[1mTestPyLastAlbum::test_album_wiki_published_date\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_album.py::\u001b[1mTestPyLastAlbum::test_album_wiki_summary\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_album.py::\u001b[1mTestPyLastAlbum::test_album_wiki_content\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_album.py::\u001b[1mTestPyLastAlbum::test_mbid\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_album.py::\u001b[1mTestPyLastAlbum::test_get_cover_image\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_track.py::\u001b[1mTestPyLastTrack::test_user_play_count_in_track_info\u001b[0m - TypeError: '>=' not supported between instances of 'NoneType' and 'int'\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_track.py::\u001b[1mTestPyLastTrack::test_track_get_duration\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_track.py::\u001b[1mTestPyLastTrack::test_user_loved_in_track_info\u001b[0m - assert None is not None\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_track.py::\u001b[1mTestPyLastTrack::test_track_listener_count\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_track.py::\u001b[1mTestPyLastTrack::test_track_with_no_mbid\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_track.py::\u001b[1mTestPyLastTrack::test_track_get_similar\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_track.py::\u001b[1mTestPyLastTrack::test_track_get_similar_limits\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_track.py::\u001b[1mTestPyLastTrack::test_track_wiki_summary\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_track.py::\u001b[1mTestPyLastTrack::test_album_tracks\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_track.py::\u001b[1mTestPyLastTrack::test_track_is_hashable\u001b[0m - pylast.PyLastError\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_track.py::\u001b[1mTestPyLastTrack::test_track_get_album\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_track.py::\u001b[1mTestPyLastTrack::test_track_title_prop_caps\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_track.py::\u001b[1mTestPyLastTrack::test_track_get_correction\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_track.py::\u001b[1mTestPyLastTrack::test_track_wiki_content\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_user_tagged_artists\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_get_user_unixtime_registration\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_user_tagged_tracks\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_user_get_top_tags_with_limit\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_user_subscriber\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_get_user_registration\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_user_charts\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_user_top_artists\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_get_image\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_user_get_country\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_get_recent_tracks_limit_none\u001b[0m - pylast.PyLastError\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_get_recent_tracks_from_to\u001b[0m - pylast.PyLastError\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_user_tagged_albums\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_cacheable_user_get_track_scrobbles\u001b[0m - pylast.PyLastError\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_get_countryless_user\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_user_top_tracks\u001b[0m - pylast.PyLastError\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_get_weekly_artist_charts\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_user_get_image\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_now_playing_user_with_no_scrobbles\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_user_get_track_scrobbles\u001b[0m - pylast.PyLastError\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_get_playcount\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_get_name\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_user_top_albums\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_get_weekly_track_charts\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_user.py::\u001b[1mTestPyLastUser::test_love_limits\u001b[0m - pylast.PyLastError\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_tag.py::\u001b[1mTestPyLastTag::test_tag_top_albums\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_tag.py::\u001b[1mTestPyLastTag::test_tag_is_hashable\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_tag.py::\u001b[1mTestPyLastTag::test_tags\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_tag.py::\u001b[1mTestPyLastTag::test_tag_top_artists\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_library.py::\u001b[1mTestPyLastLibrary::test_cacheable_library\u001b[0m - pylast.PyLastError\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_album_search_images\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_tag_top_tracks\u001b[0m - pylast.PyLastError\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_country_top_tracks\u001b[0m - pylast.PyLastError\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_network_get_top_tags_with_no_limit\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_network_get_top_tracks_with_limit\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_artist_search\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_album_search\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_country_top_artists\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_track_search\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_enable_rate_limiting\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_init_with_token\u001b[0m - AssertionError: assert 'Invalid para...red parameter' == 'Unauthorized...t ...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_caching\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_network_get_top_tags_with_limit\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_country_network_top_tracks\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_disable_rate_limiting\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_geo_get_top_artists\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_artist_mbid\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_search_get_total_result_count\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_track_search_images\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_network_get_top_artists_with_limit\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_album_data\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_artist_search_images\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_geo_get_top_tracks\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_track_data\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_album_mbid\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_network.py::\u001b[1mTestPyLastNetwork::test_track_mbid\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_artist.py::\u001b[1mTestPyLastArtist::test_bio_content\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_artist.py::\u001b[1mTestPyLastArtist::test_bio_published_date\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_artist.py::\u001b[1mTestPyLastArtist::test_artist_top_albums\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_artist.py::\u001b[1mTestPyLastArtist::test_bio_summary\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_artist.py::\u001b[1mTestPyLastArtist::test_artists\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_artist.py::\u001b[1mTestPyLastArtist::test_artist_top_albums_limit_default\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_artist.py::\u001b[1mTestPyLastArtist::test_artist_top_tracks\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_artist.py::\u001b[1mTestPyLastArtist::test_artist_get_correction\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_artist.py::\u001b[1mTestPyLastArtist::test_get_userplaycount\u001b[0m - TypeError: '>=' not supported between instances of 'NoneType' and 'int'\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_artist.py::\u001b[1mTestPyLastArtist::test_artist_top_albums_limit[50]\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_artist.py::\u001b[1mTestPyLastArtist::test_artist_top_albums_limit[1]\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_artist.py::\u001b[1mTestPyLastArtist::test_artist_top_albums_limit[100]\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_artist.py::\u001b[1mTestPyLastArtist::test_artist_listener_count\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_artist.py::\u001b[1mTestPyLastArtist::test_bio_content_none\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31mFAILED\u001b[0m tests/test_artist.py::\u001b[1mTestPyLastArtist::test_artist_is_hashable\u001b[0m - pylast.WSError: Invalid parameters - Your request is missing a required par...\n[Test/test]   | \u001b[31m======= \u001b[31m\u001b[1m93 failed\u001b[0m, \u001b[32m38 passed\u001b[0m, \u001b[33m9 skipped\u001b[0m, \u001b[33m1 xfailed\u001b[0m\u001b[31m in 105.18s (0:01:45)\u001b[0m\u001b[31m ========\u001b[0m\n[Test/test]   | \u001b[1m\u001b[35mpy:\u001b[0m\u001b[31m exit 1 (106.99 seconds) /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pylast-pylast> pytest -v -s -W all --cov pylast --cov tests --cov-report term-missing --cov-report xml --random-order pid=189\u001b[0m\n[Test/test]   | \u001b[1m\u001b[35m.pkg:\u001b[0m\u001b[36m _exit\u001b[22m\u001b[2m>\u001b[0m python /opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/pyproject_api/_backend.py True hatchling.build\u001b[0m\n[Test/test]   |   py: FAIL code 1 (158.85=setup[51.86]+cmd[106.99] seconds)\n[Test/test]   |   evaluation failed :( (159.13 seconds)\n[Test/test]   \u274c  Failure - Main Tox tests\n[Test/test] exitcode '1': failure\n[Test/test] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'test' failed\n"
}