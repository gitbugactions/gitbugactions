{
    "repository": "rtic-rs/rtic",
    "clone_url": "https://github.com/rtic-rs/rtic.git",
    "timestamp": "2023-05-30T09:23:05.542599Z",
    "clone_success": true,
    "number of actions": 4,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Build/build docs                          ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build/Build usage examples                ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build/cargo fmt                           ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build/clippy                              ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build/Parse the master branch RTIC version] \ud83d\ude80  Start image=crawlergpt:latest\n[Build/tests                               ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build/check examples                      ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build/check                               ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build/QEMU run                            ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build/check                               ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build/Build usage examples                ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build/QEMU run                            ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build/check examples                      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build/cargo fmt                           ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build/build docs                          ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build/clippy                              ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build/tests                               ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build/Parse the master branch RTIC version]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build/check                               ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/cargo fmt                           ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/tests                               ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/Build usage examples                ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/build docs                          ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/check examples                      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/Parse the master branch RTIC version]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/QEMU run                            ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/clippy                              ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/build docs                          ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/clippy                              ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/check                               ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/cargo fmt                           ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/check examples                      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/tests                               ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/QEMU run                            ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/Parse the master branch RTIC version]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/Build usage examples                ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/build docs                          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rtic-rs-rtic] user=0 workdir=\n[Build/cargo fmt                           ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rtic-rs-rtic] user=0 workdir=\n[Build/clippy                              ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rtic-rs-rtic] user=0 workdir=\n[Build/cargo fmt                           ]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[Build/clippy                              ]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[Build/build docs                          ]   \u2601  git clone 'https://github.com/taiki-e/install-action' # ref=v2\n[Build/cargo fmt                           ] \u2b50 Run Main Checkout\n[Build/clippy                              ] \ud83e\uddea  Matrix: map[backend:thumbv7 toolchain:nightly]\n[Build/cargo fmt                           ]   \u2705  Success - Main Checkout\n[Build/clippy                              ] \u2b50 Run Main Checkout\n[Build/build docs                          ] \u2b50 Run Pre Install lychee\n[Build/clippy                              ]   \u2705  Success - Main Checkout\n[Build/build docs                          ]   \u2705  Success - Pre Install lychee\n[Build/cargo fmt                           ] \u2b50 Run Main Cache Dependencies\n[Build/cargo fmt                           ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/Swatinem-rust-cache@v2/ dst=/var/run/act/actions/Swatinem-rust-cache@v2/\n[Build/cargo fmt                           ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/Swatinem-rust-cache@v2/] user=0 workdir=\n[Build/clippy                              ] \u2b50 Run Main Install Rust nightly\n[Build/build docs                          ]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v3\n[Build/build docs                          ] \u2b50 Run Main Checkout\n[Build/clippy                              ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Build/build docs                          ]   \u2705  Success - Main Checkout\n[Build/build docs                          ] \u2b50 Run Main Install lychee\n[Build/build docs                          ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/taiki-e-install-action@v2/ dst=/var/run/act/actions/taiki-e-install-action@v2/\n[Build/build docs                          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/taiki-e-install-action@v2/] user=0 workdir=\n[Build/clippy                              ]   | /var/run/act/workflow/1: line 2: rustup: command not found\n[Build/clippy                              ]   \u274c  Failure - Main Install Rust nightly\n[Build/cargo fmt                           ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/Swatinem-rust-cache@v2/dist/restore/index.js] user= workdir=\n[Build/build docs                          ] \u2b50 Run Main bash --noprofile --norc \"${GITHUB_ACTION_PATH:?}/main.sh\"\n[Build/clippy                              ] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Build/build docs                          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-0.sh] user= workdir=\n[Build/Build usage examples                ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rtic-rs-rtic] user=0 workdir=\n[Build/QEMU run                            ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rtic-rs-rtic] user=0 workdir=\n[Build/check                               ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rtic-rs-rtic] user=0 workdir=\n[Build/tests                               ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rtic-rs-rtic] user=0 workdir=\n[Build/check examples                      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rtic-rs-rtic] user=0 workdir=\n[Build/Parse the master branch RTIC version]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rtic-rs-rtic] user=0 workdir=\n[Build/clippy                              ] \ud83c\udfc1  Job failed\n[Build/build docs                          ]   | info: install-action does not support lychee; fallback to cargo-binstall\n[Build/build docs                          ]   | info: installing cargo-binstall\n[Build/cargo fmt                           ]   \u2705  Success - Main Cache Dependencies\n[Build/build docs                          ]   | info: downloading https://github.com/cargo-bins/cargo-binstall/releases/download/v0.23.1/cargo-binstall-x86_64-unknown-linux-musl.tgz\n[Build/cargo fmt                           ]   \u2699  ::set-output:: cache-hit=false\n[Build/cargo fmt                           ] \u2b50 Run Main cargo xtask fmt\n[Build/cargo fmt                           ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Build/build docs                          ]   | info: verifying sha256 checksum for cargo-binstall-x86_64-unknown-linux-musl.tgz\n[Build/build docs                          ]   | info: cargo-binstall installed at /usr/local/bin/cargo-binstall\n[Build/build docs                          ]   | + cargo binstall -V\n[Build/build docs                          ]   | /var/run/act/actions/taiki-e-install-action@v2/main.sh: line 10: cargo: command not found\n[Build/build docs                          ]   \u274c  Failure - Main bash --noprofile --norc \"${GITHUB_ACTION_PATH:?}/main.sh\"\n[Build/build docs                          ] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Build/build docs                          ]   \u274c  Failure - Main Install lychee\n[Build/build docs                          ] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Build/build docs                          ] \u2b50 Run Post Install lychee\n[Build/build docs                          ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/taiki-e-install-action@v2/ dst=/var/run/act/actions/taiki-e-install-action@v2/\n[Build/build docs                          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/taiki-e-install-action@v2/] user=0 workdir=\n[Build/Build usage examples                ]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[Build/tests                               ]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[Build/QEMU run                            ]   \u2601  git clone 'https://github.com/taiki-e/install-action' # ref=v2\n[Build/check examples                      ]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[Build/check                               ]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[Build/Parse the master branch RTIC version] \u2b50 Run Main actions/checkout@v3\n[Build/Parse the master branch RTIC version]   \u2705  Success - Main actions/checkout@v3\n[Build/Build usage examples                ] \ud83e\uddea  Matrix: map[toolchain:nightly]\n[Build/tests                               ] \ud83e\uddea  Matrix: map[backend:thumbv7 package:rtic]\n[Build/Build usage examples                ] \u2b50 Run Main Checkout\n[Build/Build usage examples                ]   \u2705  Success - Main Checkout\n[Build/tests                               ] \u2b50 Run Main Checkout\n[Build/QEMU run                            ] \u2b50 Run Pre Install cargo-binutils\n[Build/tests                               ]   \u2705  Success - Main Checkout\n[Build/check examples                      ] \ud83e\uddea  Matrix: map[backend:thumbv7 toolchain:nightly]\n[Build/Parse the master branch RTIC version] \u2b50 Run Main Get crate version and print output branch release/vX\n[Build/check examples                      ] \u2b50 Run Main Checkout\n[Build/check                               ] \ud83e\uddea  Matrix: map[backend:thumbv7 toolchain:nightly]\n[Build/QEMU run                            ]   \u2705  Success - Pre Install cargo-binutils\n[Build/check                               ] \u2b50 Run Main Checkout\n[Build/check examples                      ]   \u2705  Success - Main Checkout\n[Build/check                               ]   \u2705  Success - Main Checkout\n[Build/Parse the master branch RTIC version]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/crateversionbranch] user= workdir=\n[Build/Build usage examples                ] \u2b50 Run Main Install rust nightly\n[Build/tests                               ] \u2b50 Run Main Cache Dependencies\n[Build/QEMU run                            ]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[Build/tests                               ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/Swatinem-rust-cache@v2/ dst=/var/run/act/actions/Swatinem-rust-cache@v2/\n[Build/Build usage examples                ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Build/QEMU run                            ] \ud83e\uddea  Matrix: map[backend:thumbv7 toolchain:nightly]\n[Build/check examples                      ] \u2b50 Run Main Install Rust nightly\n[Build/QEMU run                            ] \u2b50 Run Main Checkout\n[Build/tests                               ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/Swatinem-rust-cache@v2/] user=0 workdir=\n[Build/check                               ] \u2b50 Run Main Install Rust nightly\n[Build/QEMU run                            ]   \u2705  Success - Main Checkout\n[Build/check examples                      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Build/check                               ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Build/QEMU run                            ] \u2b50 Run Main Install Rust nightly\n[Build/QEMU run                            ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Build/Build usage examples                ]   | /var/run/act/workflow/1: line 2: rustup: command not found\n[Build/cargo fmt                           ]   | /var/run/act/workflow/2: line 2: cargo: command not found\n[Build/cargo fmt                           ]   \u274c  Failure - Main cargo xtask fmt\n[Build/Build usage examples                ]   \u274c  Failure - Main Install rust nightly\n[Build/Parse the master branch RTIC version]   | /var/run/act/workflow/crateversionbranch: line 2: cargo: command not found\n[Build/Parse the master branch RTIC version]   \u274c  Failure - Main Get crate version and print output branch release/vX\n[Build/QEMU run                            ]   | /var/run/act/workflow/1: line 2: rustup: command not found\n[Build/build docs                          ]   \u2705  Success - Post Install lychee\n[Build/QEMU run                            ]   \u274c  Failure - Main Install Rust nightly\n[Build/check                               ]   | /var/run/act/workflow/1: line 2: rustup: command not found\n[Build/check                               ]   \u274c  Failure - Main Install Rust nightly\n[Build/tests                               ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/Swatinem-rust-cache@v2/dist/restore/index.js] user= workdir=\n[Build/check examples                      ]   | /var/run/act/workflow/1: line 2: rustup: command not found\n[Build/check examples                      ]   \u274c  Failure - Main Install Rust nightly\n[Build/QEMU run                            ] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Build/Parse the master branch RTIC version] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Build/cargo fmt                           ] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Build/Build usage examples                ] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Build/check                               ] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Build/check examples                      ] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Build/tests                               ]   \u2705  Success - Main Cache Dependencies\n[Build/tests                               ]   \u2699  ::set-output:: cache-hit=false\n[Build/tests                               ] \u2b50 Run Main Configure Rust target (v6, v7, v8.b v8.m)\n[Build/cargo fmt                           ] \ud83c\udfc1  Job failed\n[Build/tests                               ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Build/Build usage examples                ] \ud83c\udfc1  Job failed\n[Build/check                               ] \ud83c\udfc1  Job failed\n[Build/QEMU run                            ] \ud83c\udfc1  Job failed\n[Build/check examples                      ] \ud83c\udfc1  Job failed\n[Build/build docs                          ] \ud83c\udfc1  Job failed\n[Build/tests                               ]   | /var/run/act/workflow/2: line 2: rustup: command not found\n[Build/tests                               ]   \u274c  Failure - Main Configure Rust target (v6, v7, v8.b v8.m)\n[Build/Parse the master branch RTIC version] \ud83c\udfc1  Job failed\n[Build/tests                               ] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Build/tests                               ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Build usage examples' failed\n"
}