{
    "repository": "TimNN/cargo-lipo",
    "clone_url": "https://github.com/TimNN/cargo-lipo.git",
    "timestamp": "2023-05-30T08:52:08.857744Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Test/check] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/check]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/check]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/check]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/check]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/TimNN-cargo-lipo] user=0 workdir=\n[Test/check]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Test/check]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Test/check] \ud83e\uddea  Matrix: map[rust:stable]\n[Test/check] \u2b50 Run Main actions/checkout@v2\n[Test/check]   \u2705  Success - Main actions/checkout@v2\n[Test/check] \u2b50 Run Main actions-rs/toolchain@v1\n[Test/check]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Test/check]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Test/check]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Test/check]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[Test/check]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Test/check]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Test/check]   \ud83d\udcac  ::debug::Destination /tmp/6a6f41f9-0064-4988-a487-498bf3b08e07\n[Test/check]   \ud83d\udcac  ::debug::download complete\n[Test/check]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/6a6f41f9-0064-4988-a487-498bf3b08e07\n[Test/check]   | [command]/tmp/6a6f41f9-0064-4988-a487-498bf3b08e07 --default-toolchain none -y\n[Test/check]   | info: downloading installer\n[Test/check]   | info: profile set to 'default'\n[Test/check]   | info: default host triple is x86_64-unknown-linux-gnu\n[Test/check]   | info: skipping toolchain installation\n[Test/check]   | \n[Test/check]   | \n[Test/check]   | Rust is installed now. Great!\n[Test/check]   | \n[Test/check]   | To get started you may need to restart your current shell.\n[Test/check]   | This would reload your PATH environment variable to include\n[Test/check]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Test/check]   | \n[Test/check]   | To configure your current shell, run:\n[Test/check]   | source \"$HOME/.cargo/env\"\n[Test/check]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Test/check]   | Default host: x86_64-unknown-linux-gnu\n[Test/check]   | rustup home:  /home/runneradmin/.rustup\n[Test/check]   | \n[Test/check]   | no active toolchain\n[Test/check]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Test/check]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Test/check]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Test/check]   | Installed rustup 1.26.0 support profiles\n[Test/check]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Test/check]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Test/check]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Test/check]   | Installed rustup 1.26.0 support components\n[Test/check]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Test/check]   | info: profile set to 'minimal'\n[Test/check]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable --component rustfmt --component clippy\n[Test/check]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Test/check]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Test/check]   | info: downloading component 'cargo'\n[Test/check]   | info: downloading component 'clippy'\n[Test/check]   | info: downloading component 'rust-std'\n[Test/check]   | info: downloading component 'rustc'\n[Test/check]   | info: downloading component 'rustfmt'\n[Test/check]   | info: installing component 'cargo'\n[Test/check]   | info: installing component 'clippy'\n[Test/check]   | info: installing component 'rust-std'\n[Test/check]   | info: installing component 'rustc'\n[Test/check]   | info: installing component 'rustfmt'\n[Test/check]   | \n[Test/check]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Test/check]   | \n[Test/check]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Test/check]   | info: checking for self-update\n[Test/check]   \u2753  ::group::Gathering installed versions\n[Test/check]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Test/check]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Test/check]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[Test/check]   \u2699  ::set-output:: rustc_hash=84c898d65\n[Test/check]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Test/check]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[Test/check]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[Test/check]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Test/check]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Test/check]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Test/check]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Test/check]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Test/check]   \u2753  ::endgroup::\n[Test/check]   \u2705  Success - Main actions-rs/toolchain@v1\n[Test/check]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Test/check] \u2b50 Run Main cargo check --all --manifest-path ./Cargo.toml\n[Test/check]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Test/check]   |     Updating crates.io index\n[Test/check]   |  Downloading crates ...\n[Test/check]   |   Downloaded addr2line v0.14.1\n[Test/check]   |   Downloaded error-chain v0.12.4\n[Test/check]   |   Downloaded failure v0.1.8\n[Test/check]   |   Downloaded heck v0.3.2\n[Test/check]   |   Downloaded gimli v0.23.0\n[Test/check]   |   Downloaded textwrap v0.11.0\n[Test/check]   |   Downloaded version_check v0.9.2\n[Test/check]   |   Downloaded unicode-segmentation v1.7.1\n[Test/check]   |   Downloaded thread_local v1.1.3\n[Test/check]   |   Downloaded env_logger v0.6.2\n[Test/check]   |   Downloaded unicode-xid v0.1.0\n[Test/check]   |   Downloaded syn v0.15.44\n[Test/check]   |   Downloaded quote v0.6.13\n[Test/check]   |   Downloaded quick-error v1.2.3\n[Test/check]   |   Downloaded strsim v0.8.0\n[Test/check]   |   Downloaded structopt-derive v0.2.18\n[Test/check]   |   Downloaded structopt v0.2.18\n[Test/check]   |   Downloaded regex-syntax v0.6.22\n[Test/check]   |   Downloaded humantime v1.3.0\n[Test/check]   |   Downloaded quote v1.0.8\n[Test/check]   |   Downloaded libc v0.2.85\n[Test/check]   |   Downloaded proc-macro2 v0.4.30\n[Test/check]   |   Downloaded atty v0.2.14\n[Test/check]   |   Downloaded clap v2.33.3\n[Test/check]   |   Downloaded semver-parser v0.7.0\n[Test/check]   |   Downloaded ryu v1.0.5\n[Test/check]   |   Downloaded miniz_oxide v0.4.3\n[Test/check]   |   Downloaded bitflags v1.2.1\n[Test/check]   |   Downloaded backtrace v0.3.56\n[Test/check]   |   Downloaded autocfg v1.0.1\n[Test/check]   |   Downloaded ansi_term v0.11.0\n[Test/check]   |   Downloaded aho-corasick v0.7.15\n[Test/check]   |   Downloaded adler v0.2.3\n[Test/check]   |   Downloaded vec_map v0.8.2\n[Test/check]   |   Downloaded unicode-xid v0.2.1\n[Test/check]   |   Downloaded unicode-width v0.1.8\n[Test/check]   |   Downloaded termcolor v1.1.2\n[Test/check]   |   Downloaded syn v1.0.60\n[Test/check]   |   Downloaded serde_json v1.0.62\n[Test/check]   |   Downloaded serde_derive v1.0.123\n[Test/check]   |   Downloaded serde v1.0.123\n[Test/check]   |   Downloaded cargo_metadata v0.6.4\n[Test/check]   |   Downloaded semver v0.9.0\n[Test/check]   |   Downloaded rustc-demangle v0.1.18\n[Test/check]   |   Downloaded regex v1.4.3\n[Test/check]   |   Downloaded proc-macro2 v1.0.24\n[Test/check]   |   Downloaded once_cell v1.5.2\n[Test/check]   |   Downloaded object v0.23.0\n[Test/check]   |   Downloaded cfg-if v1.0.0\n[Test/check]   |   Downloaded memchr v2.3.4\n[Test/check]   |   Downloaded log v0.4.14\n[Test/check]   |   Downloaded itoa v0.4.7\n[Test/check]   |    Compiling libc v0.2.85\n[Test/check]   |    Compiling autocfg v1.0.1\n[Test/check]   |    Compiling proc-macro2 v1.0.24\n[Test/check]   |     Checking cfg-if v1.0.0\n[Test/check]   |    Compiling proc-macro2 v0.4.30\n[Test/check]   |    Compiling unicode-xid v0.2.1\n[Test/check]   |    Compiling unicode-xid v0.1.0\n[Test/check]   |    Compiling serde v1.0.123\n[Test/check]   |     Checking adler v0.2.3\n[Test/check]   |    Compiling memchr v2.3.4\n[Test/check]   |     Checking gimli v0.23.0\n[Test/check]   |    Compiling version_check v0.9.2\n[Test/check]   |     Checking rustc-demangle v0.1.18\n[Test/check]   |    Compiling ryu v1.0.5\n[Test/check]   |    Compiling syn v0.15.44\n[Test/check]   |    Compiling syn v1.0.60\n[Test/check]   |     Checking object v0.23.0\n[Test/check]   |    Compiling bitflags v1.2.1\n[Test/check]   |    Compiling serde_json v1.0.62\n[Test/check]   |    Compiling log v0.4.14\n[Test/check]   |     Checking once_cell v1.5.2\n[Test/check]   |     Checking unicode-width v0.1.8\n[Test/check]   |    Compiling serde_derive v1.0.123\n[Test/check]   |    Compiling unicode-segmentation v1.7.1\n[Test/check]   |     Checking semver-parser v0.7.0\n[Test/check]   |     Checking vec_map v0.8.2\n[Test/check]   |     Checking quick-error v1.2.3\n[Test/check]   |     Checking strsim v0.8.0\n[Test/check]   |     Checking ansi_term v0.11.0\n[Test/check]   |     Checking itoa v0.4.7\n[Test/check]   |     Checking regex-syntax v0.6.22\n[Test/check]   |     Checking termcolor v1.1.2\n[Test/check]   |     Checking textwrap v0.11.0\n[Test/check]   |     Checking humantime v1.3.0\n[Test/check]   |     Checking thread_local v1.1.3\n[Test/check]   |    Compiling heck v0.3.2\n[Test/check]   |    Compiling miniz_oxide v0.4.3\n[Test/check]   |    Compiling error-chain v0.12.4\n[Test/check]   |     Checking aho-corasick v0.7.15\n[Test/check]   |    Compiling quote v1.0.8\n[Test/check]   |    Compiling quote v0.6.13\n[Test/check]   |     Checking atty v0.2.14\n[Test/check]   |     Checking addr2line v0.14.1\n[Test/check]   |     Checking clap v2.33.3\n[Test/check]   |     Checking regex v1.4.3\n[Test/check]   |     Checking backtrace v0.3.56\n[Test/check]   |     Checking failure v0.1.8\n[Test/check]   |     Checking env_logger v0.6.2\n[Test/check]   |     Checking semver v0.9.0\n[Test/check]   |    Compiling structopt-derive v0.2.18\n[Test/check]   |     Checking structopt v0.2.18\n[Test/check]   |     Checking cargo_metadata v0.6.4\n[Test/check]   |     Checking cargo-lipo v3.2.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/TimNN-cargo-lipo)\n[Test/check]   |     Finished dev [unoptimized + debuginfo] target(s) in 2m 13s\n[Test/check]   \u2705  Success - Main cargo check --all --manifest-path ./Cargo.toml\n[Test/check] \u2b50 Run Main (cd . && cargo fmt --all -- --check)\n(cd ./testdata/simple && cargo fmt --all -- --check)\n(cd ./testdata/workspace && cargo fmt --all -- --check)\ncargo clippy --all --manifest-path ./Cargo.toml -- --deny warnings\ncargo clippy --all --manifest-path ./testdata/simple/Cargo.toml -- --deny warnings\ncargo clippy --all --manifest-path ./testdata/workspace/Cargo.toml -- --deny warnings\n[Test/check]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Test/check]   |     Checking cargo-lipo v3.2.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/TimNN-cargo-lipo)\n[Test/check]   | error: dereferencing a tuple pattern where every element takes a reference\n[Test/check]   |   --> src/xcode.rs:71:37\n[Test/check]   |    |\n[Test/check]   | 71 |     cmd.envs(env::vars_os().filter(|&(ref name, _)| match name.to_str() {\n[Test/check]   |    |                                     ^^^^^^^^^^^^^^\n[Test/check]   |    |\n[Test/check]   |    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrowed_reference\n[Test/check]   |    = note: `-D clippy::needless-borrowed-reference` implied by `-D warnings`\n[Test/check]   | help: try removing the `&` and `ref` parts\n[Test/check]   |    |\n[Test/check]   | 71 -     cmd.envs(env::vars_os().filter(|&(ref name, _)| match name.to_str() {\n[Test/check]   | 71 +     cmd.envs(env::vars_os().filter(|(name, _)| match name.to_str() {\n[Test/check]   |    |\n[Test/check]   | \n[Test/check]   | error: could not compile `cargo-lipo` due to previous error\n[Test/check]   \u274c  Failure - Main (cd . && cargo fmt --all -- --check)\n(cd ./testdata/simple && cargo fmt --all -- --check)\n(cd ./testdata/workspace && cargo fmt --all -- --check)\ncargo clippy --all --manifest-path ./Cargo.toml -- --deny warnings\ncargo clippy --all --manifest-path ./testdata/simple/Cargo.toml -- --deny warnings\ncargo clippy --all --manifest-path ./testdata/workspace/Cargo.toml -- --deny warnings\n[Test/check] exitcode '101': failure\n[Test/check] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'check' failed\n"
}