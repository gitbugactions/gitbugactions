{
    "repository": "paholg/typenum",
    "clone_url": "https://github.com/paholg/typenum.git",
    "timestamp": "2023-05-30T08:52:09.256520Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/Lint  ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Test-2] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Test-1] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Test-1]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Lint  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Test-2]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Test-1]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test-2]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test-1]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test-2]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Lint  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test-1]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/paholg-typenum] user=0 workdir=\n[CI/Test-2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/paholg-typenum] user=0 workdir=\n[CI/Lint  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test-2]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=master\n[CI/Test-1]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=master\n[CI/Test-2] \u2b50 Run Pre dtolnay/rust-toolchain@master\n[CI/Test-1] \u2b50 Run Pre dtolnay/rust-toolchain@master\n[CI/Test-2]   \u2705  Success - Pre dtolnay/rust-toolchain@master\n[CI/Test-1]   \u2705  Success - Pre dtolnay/rust-toolchain@master\n[CI/Test-2] \ud83e\uddea  Matrix: map[os:ubuntu-latest rust:stable]\n[CI/Test-1] \ud83e\uddea  Matrix: map[mb_const_generics: os:ubuntu-latest rust:1.37.0]\n[CI/Test-2] \u2b50 Run Main actions/checkout@v3\n[CI/Test-1] \u2b50 Run Main actions/checkout@v3\n[CI/Test-1]   \u2705  Success - Main actions/checkout@v3\n[CI/Test-2]   \u2705  Success - Main actions/checkout@v3\n[CI/Lint  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/paholg-typenum] user=0 workdir=\n[CI/Lint  ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=nightly\n[CI/Test-2] \u2b50 Run Main dtolnay/rust-toolchain@master\n[CI/Test-1] \u2b50 Run Main dtolnay/rust-toolchain@master\n[CI/Lint  ] \u2b50 Run Pre dtolnay/rust-toolchain@nightly\n[CI/Test-2]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[CI/Test-1]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[CI/Test-2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[CI/Test-1]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[CI/Lint  ]   \u2705  Success - Pre dtolnay/rust-toolchain@nightly\n[CI/Lint  ] \u2b50 Run Main actions/checkout@v3\n[CI/Lint  ]   \u2705  Success - Main actions/checkout@v3\n[CI/Lint  ] \u2b50 Run Main dtolnay/rust-toolchain@nightly\n[CI/Lint  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[CI/Lint  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@nightly/] user=0 workdir=\n[CI/Test-2] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Test-1] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Test-2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Test-1]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Test-2]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Test-1]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Lint  ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Test-1]   \u2699  ::set-output:: toolchain=1.37.0\n[CI/Test-2]   \u2699  ::set-output:: toolchain=stable\n[CI/Lint  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Test-1] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Test-2] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Test-1]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Test-2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Test-1]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Test-2]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Lint  ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Test-1]   \u2699  ::set-output:: targets=\n[CI/Test-1]   \u2699  ::set-output:: components=\n[CI/Test-1]   \u2699  ::set-output:: downgrade=\n[CI/Test-2]   \u2699  ::set-output:: components=\n[CI/Test-2]   \u2699  ::set-output:: downgrade=\n[CI/Test-2]   \u2699  ::set-output:: targets=\n[CI/Lint  ]   \u2699  ::set-output:: toolchain=nightly\n[CI/Test-1] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Test-2] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Lint  ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade= --allow-downgrade\" >> $GITHUB_OUTPUT\n[CI/Lint  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Test-2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Test-1]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Test-1]   | info: downloading installer\n[CI/Lint  ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade= --allow-downgrade\" >> $GITHUB_OUTPUT\n[CI/Test-2]   | info: downloading installer\n[CI/Test-1]   | info: profile set to 'default'\n[CI/Test-1]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Test-1]   | info: skipping toolchain installation\n[CI/Test-1]   | \n[CI/Test-1]   | \n[CI/Test-1]   | Rust is installed now. Great!\n[CI/Test-1]   | \n[CI/Test-1]   | To get started you may need to restart your current shell.\n[CI/Test-1]   | This would reload your PATH environment variable to include\n[CI/Test-1]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Test-1]   | \n[CI/Test-1]   | To configure your current shell, run:\n[CI/Test-1]   | source \"$HOME/.cargo/env\"\n[CI/Test-2]   | info: profile set to 'default'\n[CI/Test-2]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Test-2]   | info: skipping toolchain installation\n[CI/Test-2]   | \n[CI/Test-2]   | \n[CI/Test-2]   | Rust is installed now. Great!\n[CI/Test-2]   | \n[CI/Test-2]   | To get started you may need to restart your current shell.\n[CI/Test-2]   | This would reload your PATH environment variable to include\n[CI/Test-2]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Test-2]   | \n[CI/Test-2]   | To configure your current shell, run:\n[CI/Test-2]   | source \"$HOME/.cargo/env\"\n[CI/Test-1]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Test-2]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Lint  ]   \u2699  ::set-output:: targets=\n[CI/Lint  ]   \u2699  ::set-output:: components= --component rustfmt --component clippy\n[CI/Lint  ]   \u2699  ::set-output:: downgrade= --allow-downgrade\n[CI/Lint  ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Test-1]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Test-2]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Test-1] \u2b50 Run Main rustup toolchain install 1.37.0\n[CI/Test-2] \u2b50 Run Main rustup toolchain install stable\n[CI/Lint  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Test-2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/Test-1]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/Lint  ]   | info: downloading installer\n[CI/Test-2]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/Test-1]   | info: syncing channel updates for '1.37.0-x86_64-unknown-linux-gnu'\n[CI/Test-2]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/Test-2]   | info: downloading component 'cargo'\n[CI/Test-1]   | info: latest update on 2019-08-15, rust version 1.37.0 (eae3437df 2019-08-13)\n[CI/Test-1]   | info: downloading component 'cargo'\n[CI/Lint  ]   | info: profile set to 'default'\n[CI/Lint  ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Lint  ]   | info: skipping toolchain installation\n[CI/Lint  ]   | \n[CI/Lint  ]   | \n[CI/Lint  ]   | Rust is installed now. Great!\n[CI/Lint  ]   | \n[CI/Lint  ]   | To get started you may need to restart your current shell.\n[CI/Lint  ]   | This would reload your PATH environment variable to include\n[CI/Lint  ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Lint  ]   | \n[CI/Lint  ]   | To configure your current shell, run:\n[CI/Lint  ]   | source \"$HOME/.cargo/env\"\n[CI/Lint  ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Test-2]   | info: downloading component 'rust-std'\n[CI/Test-1]   | info: downloading component 'rust-std'\n[CI/Lint  ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Test-2]   | info: downloading component 'rustc'\n[CI/Lint  ] \u2b50 Run Main rustup toolchain install nightly\n[CI/Lint  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/Test-1]   | info: downloading component 'rustc'\n[CI/Test-2]   | info: installing component 'cargo'\n[CI/Lint  ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Lint  ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Lint  ]   | info: downloading component 'cargo'\n[CI/Test-2]   | info: installing component 'rust-std'\n[CI/Lint  ]   | info: downloading component 'clippy'\n[CI/Lint  ]   | info: downloading component 'rust-std'\n[CI/Test-2]   | info: installing component 'rustc'\n[CI/Lint  ]   | info: downloading component 'rustc'\n[CI/Test-2]   | \n[CI/Test-2]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Test-2]   | \n[CI/Test-2]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Test-2]   \u2705  Success - Main rustup toolchain install stable\n[CI/Test-2] \u2b50 Run Main rustup default stable\n[CI/Test-2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/Test-1]   | info: installing component 'cargo'\n[CI/Test-1]   | info: installing component 'rust-std'\n[CI/Lint  ]   | info: downloading component 'rustfmt'\n[CI/Lint  ]   | info: installing component 'cargo'\n[CI/Lint  ]   | info: installing component 'clippy'\n[CI/Test-1]   | info: installing component 'rustc'\n[CI/Lint  ]   | info: installing component 'rust-std'\n[CI/Lint  ]   | info: installing component 'rustc'\n[CI/Lint  ]   \u274c  Failure - Main rustup toolchain install nightly\n[CI/Test-1]   | \n[CI/Test-1]   |   1.37.0-x86_64-unknown-linux-gnu installed - rustc 1.37.0 (eae3437df 2019-08-13)\n[CI/Test-1]   | \n[CI/Test-1]   | info: default toolchain set to '1.37.0-x86_64-unknown-linux-gnu'\n[CI/Test-1]   \u2705  Success - Main rustup toolchain install 1.37.0\n[CI/Test-1] \u2b50 Run Main rustup default 1.37.0\n[CI/Test-1]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/Lint  ] Error response from daemon: Could not find the file /var/run/act/workflow/pathcmd.txt in container b63f7fe12ed3285a6c10b8dc118a3d025c9f6c5899bf7a646883dab30bd43cfc\n[CI/Test-1]   | info: using existing install for '1.37.0-x86_64-unknown-linux-gnu'\n[CI/Test-1]   | info: default toolchain set to '1.37.0-x86_64-unknown-linux-gnu'\n[CI/Test-1]   | \n[CI/Test-1]   |   1.37.0-x86_64-unknown-linux-gnu unchanged - rustc 1.37.0 (eae3437df 2019-08-13)\n[CI/Test-1]   | \n[CI/Test-1]   \u2705  Success - Main rustup default 1.37.0\n[CI/Test-2]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/Test-2]   | \n[CI/Test-2]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Test-2]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Test-2]   | \n[CI/Test-2]   \u2705  Success - Main rustup default stable\n[CI/Test-1] \u2b50 Run Main : create cachekey\nDATE=$(rustc +1.37.0 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +1.37.0 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Lint  ]   \u2699  ::set-output:: cachekey=\n[CI/Lint  ]   \u2699  ::set-output:: name=nightly\n[CI/Lint  ]   \u274c  Failure - Main dtolnay/rust-toolchain@nightly\n[CI/Test-2] \u2b50 Run Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Lint  ] Error response from daemon: No such container: b63f7fe12ed3285a6c10b8dc118a3d025c9f6c5899bf7a646883dab30bd43cfc\n[CI/Test-1]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/Lint  ] \u2b50 Run Post dtolnay/rust-toolchain@nightly\n[CI/Lint  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[CI/Test-2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/Lint  ]   \u274c  Failure - Post dtolnay/rust-toolchain@nightly\n[CI/Lint  ] failed to remove container: Error response from daemon: No such container: b63f7fe12ed3285a6c10b8dc118a3d025c9f6c5899bf7a646883dab30bd43cfc\n[CI/Lint  ] \ud83c\udfc1  Job failed\n[CI/Test-2]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Test-1]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +1.37.0 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +1.37.0 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Test-2]   \u2699  ::set-output:: cachekey=2023041684c8\n[CI/Test-1]   \u2699  ::set-output:: cachekey=20190813eae3\n[CI/Test-1] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Test-2] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Test-1]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/Test-2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/Test-1]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Test-2]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Test-2]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/Test-1] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/8c5251ca8714eb62e3e11c759203ae8741753909731b226fc2170d2640f1c1c8/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Test-2] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/3320e79a2f9c72b7f0a0275f31ce87ea382a34122d93a11bbb92a01ccb626706/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Test-1]   \u2699  ::set-output:: cachekey=20190813eae3\n[CI/Test-1]   \u2699  ::set-output:: name=1.37.0\n[CI/Test-1]   \u274c  Failure - Main dtolnay/rust-toolchain@master\n[CI/Test-1] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/8c5251ca8714eb62e3e11c759203ae8741753909731b226fc2170d2640f1c1c8/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Test-2]   \u2699  ::set-output:: cachekey=2023041684c8\n[CI/Test-2]   \u2699  ::set-output:: name=stable\n[CI/Test-2]   \u274c  Failure - Main dtolnay/rust-toolchain@master\n[CI/Test-2] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/3320e79a2f9c72b7f0a0275f31ce87ea382a34122d93a11bbb92a01ccb626706/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Test-2] \u2b50 Run Post dtolnay/rust-toolchain@master\n[CI/Test-1] \u2b50 Run Post dtolnay/rust-toolchain@master\n[CI/Test-2]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[CI/Test-1]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[CI/Test-1]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[CI/Test-2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[CI/Test-1]   \u2705  Success - Post dtolnay/rust-toolchain@master\n[CI/Test-2]   \u2705  Success - Post dtolnay/rust-toolchain@master\n[CI/Test-1] \ud83c\udfc1  Job succeeded\n[CI/Test-2] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}