{
    "repository": "gfx-rs/rspirv",
    "clone_url": "https://github.com/gfx-rs/rspirv.git",
    "timestamp": "2023-05-30T09:11:58.697776Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Continuous integration/Run autogen         ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/Cargo check and test] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/Cargo fmt           ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/Cargo clippy        ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/Cargo check and test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/Cargo clippy        ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/Run autogen         ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/Cargo fmt           ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/Cargo fmt           ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Cargo check and test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Cargo clippy        ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Run autogen         ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Cargo check and test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Cargo fmt           ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Cargo clippy        ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Run autogen         ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Cargo fmt           ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv] user=0 workdir=\n[Continuous integration/Cargo check and test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv] user=0 workdir=\n[Continuous integration/Cargo clippy        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv] user=0 workdir=\n[Continuous integration/Run autogen         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv] user=0 workdir=\n[Continuous integration/Run autogen         ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous integration/Cargo clippy        ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous integration/Cargo check and test]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous integration/Cargo fmt           ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous integration/Run autogen         ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous integration/Cargo clippy        ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous integration/Cargo check and test]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous integration/Cargo fmt           ] Unable to checkout 16499b5e05bf2e26879000db0c1d13f7e13fa3af: EOF\n[Continuous integration/Run autogen         ] \u2b50 Run Main actions/checkout@v2\n[Continuous integration/Cargo clippy        ] \u2b50 Run Main actions/checkout@v2\n[Continuous integration/Cargo check and test]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous integration/Cargo check and test] \ud83e\uddea  Matrix: map[os:ubuntu-latest rust:stable]\n[Continuous integration/Run autogen         ]   \u2705  Success - Main actions/checkout@v2\n[Continuous integration/Cargo clippy        ]   \u2705  Success - Main actions/checkout@v2\n[Continuous integration/Cargo check and test] \u2b50 Run Main actions/checkout@v2\n[Continuous integration/Cargo check and test]   \u2705  Success - Main actions/checkout@v2\n[Continuous integration/Cargo fmt           ] \ud83c\udfc1  Job succeeded\n[Continuous integration/Run autogen         ] \u2b50 Run Main actions-rs/toolchain@v1\n[Continuous integration/Cargo clippy        ] \u2b50 Run Main actions-rs/toolchain@v1\n[Continuous integration/Cargo check and test] \u2b50 Run Main actions-rs/toolchain@v1\n[Continuous integration/Run autogen         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous integration/Cargo clippy        ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous integration/Cargo clippy        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous integration/Run autogen         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous integration/Cargo check and test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous integration/Cargo check and test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous integration/Run autogen         ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous integration/Cargo check and test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous integration/Cargo clippy        ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous integration/Cargo check and test]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[Continuous integration/Cargo clippy        ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[Continuous integration/Cargo clippy        ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous integration/Cargo check and test]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous integration/Cargo clippy        ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous integration/Cargo clippy        ]   \ud83d\udcac  ::debug::Destination /tmp/7d96d072-c4c6-4ea6-ae68-1a9cb216ad3f\n[Continuous integration/Cargo check and test]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous integration/Cargo check and test]   \ud83d\udcac  ::debug::Destination /tmp/a1072003-1a27-4c06-be43-f133f7039550\n[Continuous integration/Run autogen         ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[Continuous integration/Cargo clippy        ]   \ud83d\udcac  ::debug::download complete\n[Continuous integration/Cargo clippy        ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/7d96d072-c4c6-4ea6-ae68-1a9cb216ad3f\n[Continuous integration/Cargo clippy        ]   | [command]/tmp/7d96d072-c4c6-4ea6-ae68-1a9cb216ad3f --default-toolchain none -y\n[Continuous integration/Cargo check and test]   \ud83d\udcac  ::debug::download complete\n[Continuous integration/Cargo check and test]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/a1072003-1a27-4c06-be43-f133f7039550\n[Continuous integration/Cargo check and test]   | [command]/tmp/a1072003-1a27-4c06-be43-f133f7039550 --default-toolchain none -y\n[Continuous integration/Run autogen         ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous integration/Run autogen         ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous integration/Run autogen         ]   \ud83d\udcac  ::debug::Destination /tmp/f3768715-0093-4fc0-a9b3-535eeb6a734c\n[Continuous integration/Cargo clippy        ]   | info: downloading installer\n[Continuous integration/Run autogen         ]   \ud83d\udcac  ::debug::download complete\n[Continuous integration/Run autogen         ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/f3768715-0093-4fc0-a9b3-535eeb6a734c\n[Continuous integration/Run autogen         ]   | [command]/tmp/f3768715-0093-4fc0-a9b3-535eeb6a734c --default-toolchain none -y\n[Continuous integration/Cargo check and test]   | info: downloading installer\n[Continuous integration/Run autogen         ]   | info: downloading installer\n[Continuous integration/Run autogen         ]   | info: profile set to 'default'\n[Continuous integration/Run autogen         ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous integration/Run autogen         ]   | info: skipping toolchain installation\n[Continuous integration/Run autogen         ]   | \n[Continuous integration/Run autogen         ]   | \n[Continuous integration/Run autogen         ]   | Rust is installed now. Great!\n[Continuous integration/Run autogen         ]   | \n[Continuous integration/Run autogen         ]   | To get started you may need to restart your current shell.\n[Continuous integration/Run autogen         ]   | This would reload your PATH environment variable to include\n[Continuous integration/Run autogen         ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous integration/Run autogen         ]   | \n[Continuous integration/Run autogen         ]   | To configure your current shell, run:\n[Continuous integration/Run autogen         ]   | source \"$HOME/.cargo/env\"\n[Continuous integration/Run autogen         ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous integration/Run autogen         ]   | Default host: x86_64-unknown-linux-gnu\n[Continuous integration/Run autogen         ]   | rustup home:  /home/runneradmin/.rustup\n[Continuous integration/Run autogen         ]   | \n[Continuous integration/Run autogen         ]   | no active toolchain\n[Continuous integration/Run autogen         ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[Continuous integration/Cargo clippy        ]   | info: profile set to 'default'\n[Continuous integration/Cargo clippy        ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous integration/Cargo clippy        ]   | info: skipping toolchain installation\n[Continuous integration/Cargo clippy        ]   | \n[Continuous integration/Cargo clippy        ]   | \n[Continuous integration/Cargo clippy        ]   | Rust is installed now. Great!\n[Continuous integration/Cargo clippy        ]   | \n[Continuous integration/Cargo clippy        ]   | To get started you may need to restart your current shell.\n[Continuous integration/Cargo clippy        ]   | This would reload your PATH environment variable to include\n[Continuous integration/Cargo clippy        ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous integration/Cargo clippy        ]   | \n[Continuous integration/Cargo clippy        ]   | To configure your current shell, run:\n[Continuous integration/Cargo clippy        ]   | source \"$HOME/.cargo/env\"\n[Continuous integration/Cargo check and test]   | info: profile set to 'default'\n[Continuous integration/Cargo check and test]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous integration/Cargo check and test]   | info: skipping toolchain installation\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | Rust is installed now. Great!\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | To get started you may need to restart your current shell.\n[Continuous integration/Cargo check and test]   | This would reload your PATH environment variable to include\n[Continuous integration/Cargo check and test]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | To configure your current shell, run:\n[Continuous integration/Cargo check and test]   | source \"$HOME/.cargo/env\"\n[Continuous integration/Cargo clippy        ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous integration/Run autogen         ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/Cargo check and test]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous integration/Cargo clippy        ]   | Default host: x86_64-unknown-linux-gnu\n[Continuous integration/Cargo clippy        ]   | rustup home:  /home/runneradmin/.rustup\n[Continuous integration/Cargo clippy        ]   | \n[Continuous integration/Cargo clippy        ]   | no active toolchain\n[Continuous integration/Cargo clippy        ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/Cargo check and test]   | Default host: x86_64-unknown-linux-gnu\n[Continuous integration/Cargo check and test]   | rustup home:  /home/runneradmin/.rustup\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | no active toolchain\n[Continuous integration/Cargo check and test]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/Cargo clippy        ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/Cargo clippy        ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/Cargo clippy        ]   | Installed rustup 1.26.0 support profiles\n[Continuous integration/Cargo clippy        ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/Cargo check and test]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/Cargo check and test]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/Cargo check and test]   | Installed rustup 1.26.0 support profiles\n[Continuous integration/Cargo clippy        ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/Cargo clippy        ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/Cargo check and test]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous integration/Cargo clippy        ]   | Installed rustup 1.26.0 support components\n[Continuous integration/Cargo clippy        ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous integration/Cargo check and test]   | info: profile set to 'minimal'\n[Continuous integration/Cargo check and test]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[Continuous integration/Cargo clippy        ]   | info: profile set to 'minimal'\n[Continuous integration/Cargo clippy        ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable --component clippy\n[Continuous integration/Cargo check and test]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/Cargo clippy        ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/Cargo check and test]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/Cargo check and test]   | info: downloading component 'cargo'\n[Continuous integration/Run autogen         ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/Run autogen         ]   | info: downloading component 'cargo'\n[Continuous integration/Cargo clippy        ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/Cargo clippy        ]   | info: downloading component 'cargo'\n[Continuous integration/Cargo check and test]   | info: downloading component 'rust-std'\n[Continuous integration/Run autogen         ]   | info: downloading component 'clippy'\n[Continuous integration/Cargo clippy        ]   | info: downloading component 'clippy'\n[Continuous integration/Run autogen         ]   | info: downloading component 'rust-docs'\n[Continuous integration/Cargo clippy        ]   | info: downloading component 'rust-std'\n[Continuous integration/Cargo check and test]   | info: downloading component 'rustc'\n[Continuous integration/Run autogen         ]   | info: downloading component 'rust-std'\n[Continuous integration/Cargo clippy        ]   | info: downloading component 'rustc'\n[Continuous integration/Run autogen         ]   | info: downloading component 'rustc'\n[Continuous integration/Cargo clippy        ]   | info: installing component 'cargo'\n[Continuous integration/Cargo check and test]   | info: installing component 'cargo'\n[Continuous integration/Run autogen         ]   | info: downloading component 'rustfmt'\n[Continuous integration/Run autogen         ]   | info: installing component 'cargo'\n[Continuous integration/Cargo clippy        ]   | info: installing component 'clippy'\n[Continuous integration/Cargo check and test]   | info: installing component 'rust-std'\n[Continuous integration/Cargo clippy        ]   | info: installing component 'rust-std'\n[Continuous integration/Run autogen         ]   | info: installing component 'clippy'\n[Continuous integration/Run autogen         ]   | info: installing component 'rust-docs'\n[Continuous integration/Cargo clippy        ]   | info: installing component 'rustc'\n[Continuous integration/Cargo check and test]   | info: installing component 'rustc'\n[Continuous integration/Run autogen         ]   | info: installing component 'rust-std'\n[Continuous integration/Run autogen         ]   | info: installing component 'rustc'\n[Continuous integration/Cargo clippy        ]   | \n[Continuous integration/Cargo clippy        ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/Cargo clippy        ]   | \n[Continuous integration/Cargo clippy        ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/Cargo clippy        ]   | info: checking for self-update\n[Continuous integration/Cargo clippy        ]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[Continuous integration/Cargo clippy        ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/Cargo clippy        ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv' set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/Cargo clippy        ]   | \n[Continuous integration/Cargo clippy        ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/Cargo clippy        ]   | \n[Continuous integration/Cargo clippy        ]   \u2753  ::group::Gathering installed versions\n[Continuous integration/Cargo clippy        ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous integration/Cargo clippy        ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/Cargo clippy        ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/Cargo clippy        ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[Continuous integration/Cargo clippy        ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous integration/Cargo clippy        ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[Continuous integration/Cargo clippy        ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[Continuous integration/Cargo clippy        ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/Cargo clippy        ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/Cargo clippy        ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/Cargo clippy        ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Continuous integration/Cargo clippy        ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/Cargo clippy        ]   \u2753  ::endgroup::\n[Continuous integration/Cargo clippy        ]   \u2705  Success - Main actions-rs/toolchain@v1\n[Continuous integration/Cargo clippy        ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous integration/Cargo clippy        ] \u2b50 Run Main actions-rs/cargo@v1\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/Cargo check and test]   | info: checking for self-update\n[Continuous integration/Cargo check and test]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[Continuous integration/Cargo check and test]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/Cargo check and test]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv' set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   \u2753  ::group::Gathering installed versions\n[Continuous integration/Cargo check and test]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous integration/Cargo clippy        ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[Continuous integration/Cargo check and test]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/Cargo check and test]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/Cargo check and test]   \u2699  ::set-output:: rustc_hash=84c898d65\n[Continuous integration/Cargo check and test]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous integration/Cargo check and test]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[Continuous integration/Cargo check and test]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[Continuous integration/Cargo check and test]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/Cargo check and test]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/Cargo check and test]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/Cargo check and test]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Continuous integration/Cargo check and test]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/Cargo check and test]   \u2753  ::endgroup::\n[Continuous integration/Cargo check and test]   \u2705  Success - Main actions-rs/toolchain@v1\n[Continuous integration/Cargo clippy        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[Continuous integration/Cargo check and test]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous integration/Cargo check and test] \u2b50 Run Main actions-rs/cargo@v1\n[Continuous integration/Cargo check and test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[Continuous integration/Cargo check and test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[Continuous integration/Run autogen         ]   | info: installing component 'rustfmt'\n[Continuous integration/Run autogen         ]   | \n[Continuous integration/Run autogen         ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/Run autogen         ]   | \n[Continuous integration/Run autogen         ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/Run autogen         ]   | info: checking for self-update\n[Continuous integration/Run autogen         ]   \u2753  ::group::Gathering installed versions\n[Continuous integration/Run autogen         ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous integration/Run autogen         ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/Run autogen         ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/Run autogen         ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[Continuous integration/Run autogen         ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous integration/Run autogen         ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[Continuous integration/Run autogen         ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[Continuous integration/Run autogen         ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/Run autogen         ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/Run autogen         ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/Run autogen         ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Continuous integration/Run autogen         ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/Run autogen         ]   \u2753  ::endgroup::\n[Continuous integration/Run autogen         ]   \u2705  Success - Main actions-rs/toolchain@v1\n[Continuous integration/Run autogen         ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous integration/Run autogen         ] \u2b50 Run Main actions-rs/cargo@v1\n[Continuous integration/Run autogen         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[Continuous integration/Run autogen         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[Continuous integration/Run autogen         ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[Continuous integration/Cargo clippy        ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[Continuous integration/Cargo check and test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[Continuous integration/Run autogen         ]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[Continuous integration/Run autogen         ]   | [command]/home/runneradmin/.cargo/bin/cargo run -p rspirv-autogen\n[Continuous integration/Cargo clippy        ]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[Continuous integration/Cargo clippy        ]   | [command]/home/runneradmin/.cargo/bin/cargo clippy --all --all-targets -- -Dwarnings\n[Continuous integration/Run autogen         ]   |     Updating crates.io index\n[Continuous integration/Cargo check and test]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[Continuous integration/Cargo check and test]   | [command]/home/runneradmin/.cargo/bin/cargo check --workspace --all-targets --verbose\n[Continuous integration/Cargo clippy        ]   |     Updating crates.io index\n[Continuous integration/Cargo check and test]   |     Updating crates.io index\n[Continuous integration/Cargo clippy        ]   |  Downloading crates ...\n[Continuous integration/Cargo clippy        ]   |   Downloaded atty v0.2.14\n[Continuous integration/Cargo clippy        ]   |   Downloaded heck v0.3.3\n[Continuous integration/Cargo clippy        ]   |   Downloaded libc v0.2.144\n[Continuous integration/Cargo clippy        ]   |   Downloaded quote v1.0.28\n[Continuous integration/Cargo clippy        ]   |   Downloaded unicode-width v0.1.10\n[Continuous integration/Cargo clippy        ]   |   Downloaded vec_map v0.8.2\n[Continuous integration/Cargo clippy        ]   |   Downloaded rustc-hash v1.1.0\n[Continuous integration/Cargo clippy        ]   |   Downloaded clap v2.34.0\n[Continuous integration/Cargo clippy        ]   |   Downloaded ansi_term v0.12.1\n[Continuous integration/Cargo clippy        ]   |   Downloaded textwrap v0.11.0\n[Continuous integration/Cargo clippy        ]   |   Downloaded strsim v0.8.0\n[Continuous integration/Cargo clippy        ]   |   Downloaded itoa v1.0.6\n[Continuous integration/Cargo clippy        ]   |   Downloaded bitflags v1.3.2\n[Continuous integration/Cargo clippy        ]   |   Downloaded unicode-segmentation v1.10.1\n[Continuous integration/Cargo clippy        ]   |   Downloaded unicode-ident v1.0.9\n[Continuous integration/Cargo clippy        ]   |   Downloaded syn v2.0.18\n[Continuous integration/Cargo clippy        ]   |   Downloaded serde_json v1.0.96\n[Continuous integration/Cargo clippy        ]   |   Downloaded serde_derive v1.0.163\n[Continuous integration/Cargo clippy        ]   |   Downloaded serde v1.0.163\n[Continuous integration/Cargo clippy        ]   |   Downloaded ryu v1.0.13\n[Continuous integration/Cargo clippy        ]   |   Downloaded assert_matches v1.5.0\n[Continuous integration/Cargo clippy        ]   |   Downloaded proc-macro2 v1.0.59\n[Continuous integration/Cargo clippy        ]   |    Compiling proc-macro2 v1.0.59\n[Continuous integration/Cargo clippy        ]   |     Checking bitflags v1.3.2\n[Continuous integration/Cargo clippy        ]   |    Compiling quote v1.0.28\n[Continuous integration/Cargo clippy        ]   |    Compiling libc v0.2.144\n[Continuous integration/Cargo clippy        ]   |    Compiling unicode-ident v1.0.9\n[Continuous integration/Cargo clippy        ]   |    Compiling serde v1.0.163\n[Continuous integration/Cargo clippy        ]   |     Checking rustc-hash v1.1.0\n[Continuous integration/Cargo clippy        ]   |     Checking unicode-width v0.1.10\n[Continuous integration/Cargo clippy        ]   |    Compiling serde_json v1.0.96\n[Continuous integration/Cargo clippy        ]   |     Checking ryu v1.0.13\n[Continuous integration/Cargo clippy        ]   |     Checking itoa v1.0.6\n[Continuous integration/Cargo clippy        ]   |     Checking unicode-segmentation v1.10.1\n[Continuous integration/Cargo clippy        ]   |     Checking strsim v0.8.0\n[Continuous integration/Cargo clippy        ]   |     Checking ansi_term v0.12.1\n[Continuous integration/Cargo clippy        ]   |     Checking vec_map v0.8.2\n[Continuous integration/Cargo clippy        ]   |     Checking assert_matches v1.5.0\n[Continuous integration/Cargo clippy        ]   |     Checking spirv v0.2.0+sdk-1.3.243.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/spirv)\n[Continuous integration/Cargo clippy        ]   |     Checking textwrap v0.11.0\n[Continuous integration/Cargo clippy        ]   |     Checking heck v0.3.3\n[Continuous integration/Cargo clippy        ]   |    Compiling syn v2.0.18\n[Continuous integration/Cargo clippy        ]   |     Checking atty v0.2.14\n[Continuous integration/Cargo clippy        ]   |     Checking rspirv v0.11.0+sdk-1.3.243.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/rspirv)\n[Continuous integration/Cargo clippy        ]   |     Checking clap v2.34.0\n[Continuous integration/Cargo clippy        ]   |    Compiling serde_derive v1.0.163\n[Continuous integration/Cargo clippy        ]   |     Checking rspirv-autogen v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/autogen)\n[Continuous integration/Cargo clippy        ]   |     Checking rspirv-dis v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/dis)\n[Continuous integration/Cargo clippy        ]   |     Finished dev [unoptimized + debuginfo] target(s) in 2m 11s\n[Continuous integration/Cargo clippy        ]   \u2705  Success - Main actions-rs/cargo@v1\n[Continuous integration/Cargo clippy        ] \ud83c\udfc1  Job succeeded\n[Continuous integration/Run autogen         ]   |  Downloading crates ...\n[Continuous integration/Run autogen         ]   |   Downloaded itoa v1.0.6\n[Continuous integration/Run autogen         ]   |   Downloaded serde v1.0.163\n[Continuous integration/Run autogen         ]   |   Downloaded serde_json v1.0.96\n[Continuous integration/Run autogen         ]   |   Downloaded serde_derive v1.0.163\n[Continuous integration/Run autogen         ]   |   Downloaded ryu v1.0.13\n[Continuous integration/Run autogen         ]   |   Downloaded proc-macro2 v1.0.59\n[Continuous integration/Run autogen         ]   |   Downloaded unicode-segmentation v1.10.1\n[Continuous integration/Run autogen         ]   |   Downloaded unicode-ident v1.0.9\n[Continuous integration/Run autogen         ]   |   Downloaded syn v2.0.18\n[Continuous integration/Run autogen         ]   |   Downloaded quote v1.0.28\n[Continuous integration/Run autogen         ]   |   Downloaded heck v0.3.3\n[Continuous integration/Run autogen         ]   |    Compiling unicode-ident v1.0.9\n[Continuous integration/Run autogen         ]   |    Compiling ryu v1.0.13\n[Continuous integration/Run autogen         ]   |    Compiling unicode-segmentation v1.10.1\n[Continuous integration/Run autogen         ]   |    Compiling itoa v1.0.6\n[Continuous integration/Run autogen         ]   |    Compiling serde v1.0.163\n[Continuous integration/Run autogen         ]   |    Compiling proc-macro2 v1.0.59\n[Continuous integration/Run autogen         ]   |    Compiling heck v0.3.3\n[Continuous integration/Run autogen         ]   |    Compiling quote v1.0.28\n[Continuous integration/Run autogen         ]   |    Compiling syn v2.0.18\n[Continuous integration/Cargo check and test]   |  Downloading crates ...\n[Continuous integration/Cargo check and test]   |   Downloaded assert_matches v1.5.0\n[Continuous integration/Cargo check and test]   |   Downloaded vec_map v0.8.2\n[Continuous integration/Cargo check and test]   |   Downloaded unicode-segmentation v1.10.1\n[Continuous integration/Cargo check and test]   |   Downloaded unicode-width v0.1.10\n[Continuous integration/Cargo check and test]   |   Downloaded unicode-ident v1.0.9\n[Continuous integration/Cargo check and test]   |   Downloaded quote v1.0.28\n[Continuous integration/Cargo check and test]   |   Downloaded heck v0.3.3\n[Continuous integration/Cargo check and test]   |   Downloaded ansi_term v0.12.1\n[Continuous integration/Cargo check and test]   |   Downloaded itoa v1.0.6\n[Continuous integration/Cargo check and test]   |   Downloaded clap v2.34.0\n[Continuous integration/Cargo check and test]   |   Downloaded rustc-hash v1.1.0\n[Continuous integration/Cargo check and test]   |   Downloaded textwrap v0.11.0\n[Continuous integration/Cargo check and test]   |   Downloaded serde_derive v1.0.163\n[Continuous integration/Cargo check and test]   |   Downloaded strsim v0.8.0\n[Continuous integration/Cargo check and test]   |   Downloaded syn v2.0.18\n[Continuous integration/Cargo check and test]   |   Downloaded libc v0.2.144\n[Continuous integration/Cargo check and test]   |   Downloaded serde_json v1.0.96\n[Continuous integration/Cargo check and test]   |   Downloaded serde v1.0.163\n[Continuous integration/Cargo check and test]   |   Downloaded proc-macro2 v1.0.59\n[Continuous integration/Cargo check and test]   |   Downloaded ryu v1.0.13\n[Continuous integration/Cargo check and test]   |   Downloaded bitflags v1.3.2\n[Continuous integration/Cargo check and test]   |   Downloaded atty v0.2.14\n[Continuous integration/Cargo check and test]   |     Blocking waiting for file lock on build directory\n[Continuous integration/Run autogen         ]   |    Compiling serde_derive v1.0.163\n[Continuous integration/Run autogen         ]   |    Compiling serde_json v1.0.96\n[Continuous integration/Run autogen         ]   |    Compiling rspirv-autogen v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/autogen)\n[Continuous integration/Run autogen         ]   |     Finished dev [unoptimized + debuginfo] target(s) in 2m 28s\n[Continuous integration/Cargo check and test]   |        Fresh bitflags v1.3.2\n[Continuous integration/Cargo check and test]   |        Fresh rustc-hash v1.1.0\n[Continuous integration/Cargo check and test]   |        Fresh unicode-ident v1.0.9\n[Continuous integration/Cargo check and test]   |        Fresh unicode-width v0.1.10\n[Continuous integration/Cargo check and test]   |        Fresh ryu v1.0.13\n[Continuous integration/Cargo check and test]   |        Fresh ansi_term v0.12.1\n[Continuous integration/Cargo check and test]   |        Fresh strsim v0.8.0\n[Continuous integration/Cargo check and test]   |        Fresh vec_map v0.8.2\n[Continuous integration/Cargo check and test]   |        Fresh unicode-segmentation v1.10.1\n[Continuous integration/Cargo check and test]   |        Fresh itoa v1.0.6\n[Continuous integration/Cargo check and test]   |        Fresh assert_matches v1.5.0\n[Continuous integration/Cargo check and test]   |     Checking spirv v0.2.0+sdk-1.3.243.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/spirv)\n[Continuous integration/Cargo check and test]   |        Fresh textwrap v0.11.0\n[Continuous integration/Cargo check and test]   |        Fresh proc-macro2 v1.0.59\n[Continuous integration/Cargo check and test]   |        Fresh heck v0.3.3\n[Continuous integration/Cargo check and test]   |        Fresh libc v0.2.144\n[Continuous integration/Cargo check and test]   |        Fresh serde v1.0.163\n[Continuous integration/Cargo check and test]   |        Fresh quote v1.0.28\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name spirv --edition=2018 spirv/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 -C metadata=43819a2f2332ff41 -C extra-filename=-43819a2f2332ff41 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -C incremental=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/incremental -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern bitflags=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libbitflags-1a1c34f79f6e612c.rmeta`\n[Continuous integration/Cargo check and test]   |        Fresh atty v0.2.14\n[Continuous integration/Cargo check and test]   |        Fresh syn v2.0.18\n[Continuous integration/Cargo check and test]   |        Fresh serde_json v1.0.96\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name spirv --edition=2018 spirv/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --test -C metadata=93e5f2c63c3aadd1 -C extra-filename=-93e5f2c63c3aadd1 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -C incremental=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/incremental -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern bitflags=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libbitflags-1a1c34f79f6e612c.rmeta`\n[Continuous integration/Cargo check and test]   |        Fresh serde_derive v1.0.163\n[Continuous integration/Cargo check and test]   |        Fresh clap v2.34.0\n[Continuous integration/Cargo check and test]   |     Checking rspirv-autogen v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/autogen)\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name rspirv_autogen --edition=2018 autogen/src/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 -C metadata=104b64df09340df9 -C extra-filename=-104b64df09340df9 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -C incremental=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/incremental -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern heck=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libheck-1d305dd5e1863a27.rmeta --extern proc_macro2=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libproc_macro2-323f6f2920b4d414.rmeta --extern quote=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libquote-37ae3ec680bd8f81.rmeta --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libserde-d1ac885ac05a66ff.rmeta --extern serde_derive=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libserde_derive-e0cd8622b7c0a2eb.so --extern serde_json=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libserde_json-62764e8b3be88f76.rmeta`\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name rspirv_autogen --edition=2018 autogen/src/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --test -C metadata=2af3e3951f368e8c -C extra-filename=-2af3e3951f368e8c --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -C incremental=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/incremental -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern heck=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libheck-1d305dd5e1863a27.rmeta --extern proc_macro2=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libproc_macro2-323f6f2920b4d414.rmeta --extern quote=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libquote-37ae3ec680bd8f81.rmeta --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libserde-d1ac885ac05a66ff.rmeta --extern serde_derive=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libserde_derive-e0cd8622b7c0a2eb.so --extern serde_json=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libserde_json-62764e8b3be88f76.rmeta`\n[Continuous integration/Run autogen         ]   |      Running `target/debug/rspirv-autogen`\n[Continuous integration/Run autogen         ]   | thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }', autogen/src/main.rs:122:45\n[Continuous integration/Run autogen         ]   | note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n[Continuous integration/Run autogen         ]   \u2757  ::error::The process '/home/runneradmin/.cargo/bin/cargo' failed with exit code 101\n[Continuous integration/Run autogen         ]   \u274c  Failure - Main actions-rs/cargo@v1\n[Continuous integration/Run autogen         ] exitcode '1': failure\n[Continuous integration/Cargo check and test]   |     Checking rspirv v0.11.0+sdk-1.3.243.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/rspirv)\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name rspirv --edition=2018 rspirv/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 -C metadata=253f19666eb04469 -C extra-filename=-253f19666eb04469 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -C incremental=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/incremental -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern rustc_hash=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/librustc_hash-1904cd8478c1b0ae.rmeta --extern spirv=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libspirv-43819a2f2332ff41.rmeta`\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name rspirv --edition=2018 rspirv/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --test -C metadata=bce2b1b5b1b6dbc6 -C extra-filename=-bce2b1b5b1b6dbc6 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -C incremental=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/incremental -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern assert_matches=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libassert_matches-54ee6f67700b600e.rmeta --extern rustc_hash=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/librustc_hash-1904cd8478c1b0ae.rmeta --extern spirv=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libspirv-43819a2f2332ff41.rmeta`\n[Continuous integration/Run autogen         ] \ud83c\udfc1  Job failed\n[Continuous integration/Cargo check and test]   |     Checking rspirv-dis v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/dis)\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name spirv_blobs --edition=2018 rspirv/tests/spirv_blobs.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --test -C metadata=3a32c2c65789c968 -C extra-filename=-3a32c2c65789c968 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -C incremental=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/incremental -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern assert_matches=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libassert_matches-54ee6f67700b600e.rmeta --extern rspirv=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/librspirv-253f19666eb04469.rmeta --extern rustc_hash=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/librustc_hash-1904cd8478c1b0ae.rmeta --extern spirv=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libspirv-43819a2f2332ff41.rmeta`\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name rspirv_dis --edition=2018 dis/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --test -C metadata=b54945fc92c4a6b8 -C extra-filename=-b54945fc92c4a6b8 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -C incremental=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/incremental -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern clap=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libclap-3e5b4a1625a1a5c8.rmeta --extern rspirv=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/librspirv-253f19666eb04469.rmeta`\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name rspirv_dis --edition=2018 dis/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 -C metadata=c30bccc27c49f7de -C extra-filename=-c30bccc27c49f7de --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -C incremental=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/incremental -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern clap=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libclap-3e5b4a1625a1a5c8.rmeta --extern rspirv=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/librspirv-253f19666eb04469.rmeta`\n[Continuous integration/Cargo check and test]   |     Finished dev [unoptimized + debuginfo] target(s) in 2m 39s\n[Continuous integration/Cargo check and test]   \u2705  Success - Main actions-rs/cargo@v1\n[Continuous integration/Cargo check and test] \u2b50 Run Main actions-rs/cargo@v1\n[Continuous integration/Cargo check and test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[Continuous integration/Cargo check and test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[Continuous integration/Cargo check and test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[Continuous integration/Cargo check and test]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[Continuous integration/Cargo check and test]   | [command]/home/runneradmin/.cargo/bin/cargo test --workspace --verbose\n[Continuous integration/Cargo check and test]   |    Compiling bitflags v1.3.2\n[Continuous integration/Cargo check and test]   |        Fresh unicode-ident v1.0.9\n[Continuous integration/Cargo check and test]   |    Compiling rustc-hash v1.1.0\n[Continuous integration/Cargo check and test]   |    Compiling assert_matches v1.5.0\n[Continuous integration/Cargo check and test]   |    Compiling unicode-width v0.1.10\n[Continuous integration/Cargo check and test]   |        Fresh ryu v1.0.13\n[Continuous integration/Cargo check and test]   |    Compiling vec_map v0.8.2\n[Continuous integration/Cargo check and test]   |        Fresh unicode-segmentation v1.10.1\n[Continuous integration/Cargo check and test]   |    Compiling ansi_term v0.12.1\n[Continuous integration/Cargo check and test]   |        Fresh itoa v1.0.6\n[Continuous integration/Cargo check and test]   |    Compiling strsim v0.8.0\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name bitflags --edition=2018 /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.3.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"default\"' -C metadata=82cc2d155c6eb112 -C extra-filename=-82cc2d155c6eb112 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --cap-lints allow`\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name rustc_hash /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' -C metadata=0063061f61875cb5 -C extra-filename=-0063061f61875cb5 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --cap-lints allow`\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name vec_map /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=16513e7e42b275bd -C extra-filename=-16513e7e42b275bd --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --cap-lints allow`\n[Continuous integration/Cargo check and test]   |        Fresh heck v0.3.3\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name assert_matches /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/assert_matches-1.5.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=d72ee7125223a4e6 -C extra-filename=-d72ee7125223a4e6 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --cap-lints allow`\n[Continuous integration/Cargo check and test]   |        Fresh proc-macro2 v1.0.59\n[Continuous integration/Cargo check and test]   |    Compiling libc v0.2.144\n[Continuous integration/Cargo check and test]   |        Fresh serde v1.0.163\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name unicode_width /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.10/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"default\"' -C metadata=f75bb0008a5efcfa -C extra-filename=-f75bb0008a5efcfa --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --cap-lints allow`\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name strsim /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/strsim-0.8.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=a5c39ae05640b5d1 -C extra-filename=-a5c39ae05640b5d1 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --cap-lints allow`\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name ansi_term /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=d7fe617575af129f -C extra-filename=-d7fe617575af129f --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --cap-lints allow`\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name libc /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.144/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=0be63fab91bc2427 -C extra-filename=-0be63fab91bc2427 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --cap-lints allow --cfg freebsd11 --cfg libc_priv_mod_use --cfg libc_union --cfg libc_const_size_of --cfg libc_align --cfg libc_int128 --cfg libc_core_cvoid --cfg libc_packedN --cfg libc_cfg_target_vendor --cfg libc_non_exhaustive --cfg libc_long_array --cfg libc_ptr_addr_of --cfg libc_underscore_const_names --cfg libc_const_extern_fn`\n[Continuous integration/Cargo check and test]   |        Fresh quote v1.0.28\n[Continuous integration/Cargo check and test]   |        Fresh serde_json v1.0.96\n[Continuous integration/Cargo check and test]   |        Fresh syn v2.0.18\n[Continuous integration/Cargo check and test]   |        Fresh serde_derive v1.0.163\n[Continuous integration/Cargo check and test]   |    Compiling rspirv-autogen v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/autogen)\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name rspirv_autogen --edition=2018 autogen/src/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --test -C metadata=43e4688ef54ac7d9 -C extra-filename=-43e4688ef54ac7d9 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -C incremental=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/incremental -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern heck=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libheck-339c0316264898a3.rlib --extern proc_macro2=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libproc_macro2-728e061fb89ae090.rlib --extern quote=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libquote-804689aadab9b4d3.rlib --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libserde-66d1c0ed2eb6d761.rlib --extern serde_derive=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libserde_derive-ae5984dc7fd23f3c.so --extern serde_json=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libserde_json-929b242140233068.rlib`\n[Continuous integration/Cargo check and test]   |    Compiling spirv v0.2.0+sdk-1.3.243.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/spirv)\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name spirv --edition=2018 spirv/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=6de9e1f483a9384d -C extra-filename=-6de9e1f483a9384d --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -C incremental=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/incremental -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern bitflags=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libbitflags-82cc2d155c6eb112.rmeta`\n[Continuous integration/Cargo check and test]   |    Compiling textwrap v0.11.0\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name textwrap /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=cfdac01baef5b46b -C extra-filename=-cfdac01baef5b46b --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern unicode_width=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libunicode_width-f75bb0008a5efcfa.rmeta --cap-lints allow`\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name spirv --edition=2018 spirv/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --test -C metadata=076966fbeb9a3232 -C extra-filename=-076966fbeb9a3232 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -C incremental=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/incremental -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern bitflags=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libbitflags-82cc2d155c6eb112.rlib`\n[Continuous integration/Cargo check and test]   |    Compiling atty v0.2.14\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name atty /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/atty-0.2.14/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=9a73e521909ba202 -C extra-filename=-9a73e521909ba202 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern libc=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/liblibc-0be63fab91bc2427.rmeta --cap-lints allow`\n[Continuous integration/Cargo check and test]   |    Compiling clap v2.34.0\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name clap --edition=2018 /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.34.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"ansi_term\"' --cfg 'feature=\"atty\"' --cfg 'feature=\"color\"' --cfg 'feature=\"default\"' --cfg 'feature=\"strsim\"' --cfg 'feature=\"suggestions\"' --cfg 'feature=\"vec_map\"' -C metadata=ba96f830495f6e60 -C extra-filename=-ba96f830495f6e60 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern ansi_term=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libansi_term-d7fe617575af129f.rmeta --extern atty=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libatty-9a73e521909ba202.rmeta --extern bitflags=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libbitflags-82cc2d155c6eb112.rmeta --extern strsim=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libstrsim-a5c39ae05640b5d1.rmeta --extern textwrap=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libtextwrap-cfdac01baef5b46b.rmeta --extern unicode_width=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libunicode_width-f75bb0008a5efcfa.rmeta --extern vec_map=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libvec_map-16513e7e42b275bd.rmeta --cap-lints allow`\n[Continuous integration/Cargo check and test]   |    Compiling rspirv v0.11.0+sdk-1.3.243.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/rspirv)\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name rspirv --edition=2018 rspirv/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=72cb4d4661ce2c4c -C extra-filename=-72cb4d4661ce2c4c --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -C incremental=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/incremental -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern rustc_hash=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/librustc_hash-0063061f61875cb5.rmeta --extern spirv=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libspirv-6de9e1f483a9384d.rmeta`\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name rspirv --edition=2018 rspirv/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --test -C metadata=d2b0943f6559de62 -C extra-filename=-d2b0943f6559de62 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -C incremental=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/incremental -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern assert_matches=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libassert_matches-d72ee7125223a4e6.rlib --extern rustc_hash=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/librustc_hash-0063061f61875cb5.rlib --extern spirv=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libspirv-6de9e1f483a9384d.rlib`\n[Continuous integration/Cargo check and test]   |    Compiling rspirv-dis v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/dis)\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name spirv_blobs --edition=2018 rspirv/tests/spirv_blobs.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --test -C metadata=bfa71690bf5a65d8 -C extra-filename=-bfa71690bf5a65d8 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -C incremental=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/incremental -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern assert_matches=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libassert_matches-d72ee7125223a4e6.rlib --extern rspirv=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/librspirv-72cb4d4661ce2c4c.rlib --extern rustc_hash=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/librustc_hash-0063061f61875cb5.rlib --extern spirv=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libspirv-6de9e1f483a9384d.rlib`\n[Continuous integration/Cargo check and test]   |      Running `rustc --crate-name rspirv_dis --edition=2018 dis/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --test -C metadata=4c6abe6fa1fa7650 -C extra-filename=-4c6abe6fa1fa7650 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -C incremental=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/incremental -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern clap=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libclap-ba96f830495f6e60.rlib --extern rspirv=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/librspirv-72cb4d4661ce2c4c.rlib`\n[Continuous integration/Cargo check and test]   |     Finished test [unoptimized + debuginfo] target(s) in 15.80s\n[Continuous integration/Cargo check and test]   |      Running `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/rspirv-d2b0943f6559de62`\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | running 81 tests\n[Continuous integration/Cargo check and test]   | test binary::assemble::tests::test_assemble_function_void ... ok\n[Continuous integration/Cargo check and test]   | test binary::assemble::tests::test_assemble_function_parameters ... ok\n[Continuous integration/Cargo check and test]   | test binary::assemble::tests::test_assemble_inst_iadd ... ok\n[Continuous integration/Cargo check and test]   | test binary::assemble::tests::test_assemble_inst_memory_model ... ok\n[Continuous integration/Cargo check and test]   | test binary::assemble::tests::test_assemble_inst_nop ... ok\n[Continuous integration/Cargo check and test]   | test binary::assemble::tests::test_assemble_inst_type_int ... ok\n[Continuous integration/Cargo check and test]   | test binary::assemble::tests::test_assemble_operand_bitmask ... ok\n[Continuous integration/Cargo check and test]   | test binary::assemble::tests::test_assemble_operand_enum ... ok\n[Continuous integration/Cargo check and test]   | test binary::assemble::tests::test_assemble_str ... ok\n[Continuous integration/Cargo check and test]   | test binary::decoder::tests::test_decode_bit32 ... ok\n[Continuous integration/Cargo check and test]   | test binary::decoder::tests::test_decode_bit64 ... ok\n[Continuous integration/Cargo check and test]   | test binary::decoder::tests::test_decoding_after_errors ... ok\n[Continuous integration/Cargo check and test]   | test binary::decoder::tests::test_decoding_source_language ... ok\n[Continuous integration/Cargo check and test]   | test binary::decoder::tests::test_decoding_string ... ok\n[Continuous integration/Cargo check and test]   | test binary::decoder::tests::test_decoding_unknown_execution_model ... ok\n[Continuous integration/Cargo check and test]   | test binary::decoder::tests::test_decoding_word_from_four_bytes ... ok\n[Continuous integration/Cargo check and test]   | test binary::decoder::tests::test_decoding_word_from_one_bytes ... ok\n[Continuous integration/Cargo check and test]   | test binary::decoder::tests::test_decoding_word_from_three_bytes ... ok\n[Continuous integration/Cargo check and test]   | test binary::decoder::tests::test_decoding_word_from_two_bytes ... ok\n[Continuous integration/Cargo check and test]   | test binary::decoder::tests::test_decoding_words ... ok\n[Continuous integration/Cargo check and test]   | test binary::decoder::tests::test_limit ... ok\n[Continuous integration/Cargo check and test]   | test binary::decoder::tests::test_offset ... ok\n[Continuous integration/Cargo check and test]   | test binary::disassemble::tests::test_disassemble_ext_inst_glsl ... ok\n[Continuous integration/Cargo check and test]   | test binary::disassemble::tests::test_disassemble_ext_inst_opencl ... ok\n[Continuous integration/Cargo check and test]   | test binary::disassemble::tests::test_disassemble_operand_memory_semantics ... ok\n[Continuous integration/Cargo check and test]   | test binary::disassemble::tests::test_disassemble_operand_function_control ... ok\n[Continuous integration/Cargo check and test]   | test binary::disassemble::tests::test_disassemble_module_one_inst_in_each_section ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_consumer_finalize_error ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_consumer_initialize_error ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_consumer_parse_inst_error ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_module_builder ... ok\n[Continuous integration/Cargo check and test]   | test binary::disassemble::tests::test_disassemble_literal_bit_constants ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_consumer_parse_header_error ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_bit64_float ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parse_words ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_bit32_float ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_bit32_int ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_bitmasks_requiring_params_img_operands_param_order ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_bit64_int ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_bitmasks_requiring_params_mem_access_missing_param ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_bitmasks_requiring_params_mem_access_no_param ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_bitmasks_requiring_params_mem_access_with_param ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_bitmasks_requiring_params_no_mem_access ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_complete_header ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_empty_binary ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_extra_operand ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_incomplete_header ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_missing_one_optional_operand ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_missing_operand ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_missing_operand_parameters ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_missing_two_optional_operands ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_operand_parameters ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_one_inst ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_spec_constant_op ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_spec_constant_op_missing_parameter ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_unsupported_endianness ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_with_all_optional_operands ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_wrong_magic_number ... ok\n[Continuous integration/Cargo check and test]   | test binary::parser::tests::test_parsing_zero_word_count ... ok\n[Continuous integration/Cargo check and test]   | test dr::build::tests::test_build_undefs ... ok\n[Continuous integration/Cargo check and test]   | test dr::build::tests::test_constant_bit32 ... ok\n[Continuous integration/Cargo check and test]   | test dr::build::tests::test_decoration_no_additional_params ... ok\n[Continuous integration/Cargo check and test]   | test dr::build::tests::test_build_variables ... ok\n[Continuous integration/Cargo check and test]   | test dr::build::tests::test_decoration_with_additional_params ... ok\n[Continuous integration/Cargo check and test]   | test dr::build::tests::test_forward_ref_pointer_type ... ok\n[Continuous integration/Cargo check and test]   | test dr::build::tests::test_forward_ref_phi ... ok\n[Continuous integration/Cargo check and test]   | test dr::build::tests::test_memory_model ... ok\n[Continuous integration/Cargo check and test]   | test dr::build::tests::test_spec_constant_bit32 ... ok\n[Continuous integration/Cargo check and test]   | test dr::build::tests::test_spirv_version ... ok\n[Continuous integration/Cargo check and test]   | test dr::constructs::tests::test_convert_from_bit_enums ... ok\n[Continuous integration/Cargo check and test]   | test dr::constructs::tests::test_convert_from_numbers ... ok\n[Continuous integration/Cargo check and test]   | test dr::constructs::tests::test_convert_from_op ... ok\n[Continuous integration/Cargo check and test]   | test dr::constructs::tests::test_convert_from_string ... ok\n[Continuous integration/Cargo check and test]   | test dr::constructs::tests::test_convert_from_value_enums ... ok\n[Continuous integration/Cargo check and test]   | test dr::constructs::tests::test_operand_display ... ok\n[Continuous integration/Cargo check and test]   | test dr::loader::tests::test_load_undef ... ok\n[Continuous integration/Cargo check and test]   | test sr::storage::tests::append_non_unique ... ok\n[Continuous integration/Cargo check and test]   | test dr::loader::tests::test_load_variable ... ok\n[Continuous integration/Cargo check and test]   | test sr::storage::tests::append_unique ... ok\n[Continuous integration/Cargo check and test]   | test sr::storage::tests::fetch_or_append_non_unique ... ok\n[Continuous integration/Cargo check and test]   | test sr::storage::tests::fetch_or_append_unique ... ok\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | test result: ok. 81 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   |      Running `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/spirv_blobs-bfa71690bf5a65d8`\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | running 1 test\n[Continuous integration/Cargo check and test]   | test test_external_modules ... ok\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   |      Running `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/rspirv_autogen-43e4688ef54ac7d9`\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | running 0 tests\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   |      Running `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/rspirv_dis-4c6abe6fa1fa7650`\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | running 0 tests\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   |      Running `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/spirv-076966fbeb9a3232`\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | running 0 tests\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   |    Doc-tests rspirv\n[Continuous integration/Cargo check and test]   |      Running `rustdoc --edition=2018 --crate-type lib --crate-name rspirv --test /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/rspirv/lib.rs -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern assert_matches=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libassert_matches-d72ee7125223a4e6.rlib --extern rspirv=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/librspirv-72cb4d4661ce2c4c.rlib --extern rustc_hash=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/librustc_hash-0063061f61875cb5.rlib --extern spirv=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libspirv-6de9e1f483a9384d.rlib -C embed-bitcode=no --error-format human`\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | running 6 tests\n[Continuous integration/Cargo check and test]   | test binary/decoder.rs - binary::decoder::Decoder (line 46) ... ok\n[Continuous integration/Cargo check and test]   | test dr/loader.rs - dr::loader::load_bytes (line 214) ... ok\n[Continuous integration/Cargo check and test]   | test dr/loader.rs - dr::loader::load_words (line 252) ... ok\n[Continuous integration/Cargo check and test]   | test binary/parser.rs - binary::parser::Parser (line 182) ... ok\n[Continuous integration/Cargo check and test]   | test lib.rs - (line 31) ... ok\n[Continuous integration/Cargo check and test]   | test dr/build/mod.rs - dr::build::Builder (line 53) ... ok\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.18s\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   |    Doc-tests spirv\n[Continuous integration/Cargo check and test]   |      Running `rustdoc --edition=2018 --crate-type lib --crate-name spirv --test /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/spirv/lib.rs -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps --extern bitflags=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libbitflags-82cc2d155c6eb112.rlib --extern spirv=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/gfx-rs-rspirv/target/debug/deps/libspirv-6de9e1f483a9384d.rlib -C embed-bitcode=no --error-format human`\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | running 0 tests\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Continuous integration/Cargo check and test]   | \n[Continuous integration/Cargo check and test]   \u2705  Success - Main actions-rs/cargo@v1\n[Continuous integration/Cargo check and test] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: EOF\n"
}