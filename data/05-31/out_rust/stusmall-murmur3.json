{
    "repository": "stusmall/murmur3",
    "clone_url": "https://github.com/stusmall/murmur3.git",
    "timestamp": "2023-05-30T08:54:34.117555Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[build/Test             ] \ud83d\ude80  Start image=crawlergpt:latest\n[build/Format and Clippy] \ud83d\ude80  Start image=crawlergpt:latest\n[build/Test             ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[build/Format and Clippy]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[build/Test             ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[build/Format and Clippy]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[build/Test             ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[build/Format and Clippy]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[build/Format and Clippy]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stusmall-murmur3] user=0 workdir=\n[build/Test             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stusmall-murmur3] user=0 workdir=\n[build/Format and Clippy]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[build/Test             ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[build/Format and Clippy]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[build/Test             ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[build/Format and Clippy]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[build/Test             ] \ud83e\uddea  Matrix: map[platform:ubuntu-latest]\n[build/Test             ] \u2b50 Run Main Checkout sources\n[build/Format and Clippy] \ud83e\uddea  Matrix: map[platform:ubuntu-latest]\n[build/Format and Clippy] \u2b50 Run Main Checkout sources\n[build/Test             ]   \u2705  Success - Main Checkout sources\n[build/Format and Clippy]   \u2705  Success - Main Checkout sources\n[build/Test             ] \u2b50 Run Main Install Rust stable toolchain\n[build/Test             ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[build/Format and Clippy] \u2b50 Run Main Install Rust stable toolchain\n[build/Format and Clippy]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[build/Test             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[build/Format and Clippy]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[build/Test             ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[build/Format and Clippy]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[build/Test             ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[build/Test             ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[build/Test             ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[build/Test             ]   \ud83d\udcac  ::debug::Destination /tmp/0f326d41-8bbf-4dd9-a094-03d6aa4d2cb7\n[build/Test             ]   \ud83d\udcac  ::debug::download complete\n[build/Test             ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/0f326d41-8bbf-4dd9-a094-03d6aa4d2cb7\n[build/Test             ]   | [command]/tmp/0f326d41-8bbf-4dd9-a094-03d6aa4d2cb7 --default-toolchain none -y\n[build/Format and Clippy]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[build/Format and Clippy]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[build/Format and Clippy]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[build/Format and Clippy]   \ud83d\udcac  ::debug::Destination /tmp/d6da558a-c400-421e-8193-ce42d0aab983\n[build/Test             ]   | info: downloading installer\n[build/Test             ]   | info: profile set to 'default'\n[build/Test             ]   | info: default host triple is x86_64-unknown-linux-gnu\n[build/Test             ]   | info: skipping toolchain installation\n[build/Test             ]   | \n[build/Test             ]   | \n[build/Test             ]   | Rust is installed now. Great!\n[build/Test             ]   | \n[build/Test             ]   | To get started you may need to restart your current shell.\n[build/Test             ]   | This would reload your PATH environment variable to include\n[build/Test             ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[build/Test             ]   | \n[build/Test             ]   | To configure your current shell, run:\n[build/Test             ]   | source \"$HOME/.cargo/env\"\n[build/Test             ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[build/Test             ]   | Default host: x86_64-unknown-linux-gnu\n[build/Test             ]   | rustup home:  /home/runneradmin/.rustup\n[build/Test             ]   | \n[build/Test             ]   | no active toolchain\n[build/Test             ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[build/Test             ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[build/Test             ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[build/Test             ]   | Installed rustup 1.26.0 support profiles\n[build/Test             ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[build/Test             ]   | info: profile set to 'minimal'\n[build/Test             ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[build/Test             ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[build/Test             ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[build/Test             ]   | info: downloading component 'cargo'\n[build/Test             ]   | info: downloading component 'rust-std'\n[build/Test             ]   | info: downloading component 'rustc'\n[build/Test             ]   | info: installing component 'cargo'\n[build/Test             ]   | info: installing component 'rust-std'\n[build/Format and Clippy]   \ud83d\udcac  ::debug::download complete\n[build/Format and Clippy]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/d6da558a-c400-421e-8193-ce42d0aab983\n[build/Format and Clippy]   | [command]/tmp/d6da558a-c400-421e-8193-ce42d0aab983 --default-toolchain none -y\n[build/Format and Clippy]   | info: downloading installer\n[build/Format and Clippy]   | info: profile set to 'default'\n[build/Format and Clippy]   | info: default host triple is x86_64-unknown-linux-gnu\n[build/Format and Clippy]   | info: skipping toolchain installation\n[build/Format and Clippy]   | \n[build/Format and Clippy]   | \n[build/Format and Clippy]   | Rust is installed now. Great!\n[build/Format and Clippy]   | \n[build/Format and Clippy]   | To get started you may need to restart your current shell.\n[build/Format and Clippy]   | This would reload your PATH environment variable to include\n[build/Format and Clippy]   | Cargo's bin directory ($HOME/.cargo/bin).\n[build/Format and Clippy]   | \n[build/Format and Clippy]   | To configure your current shell, run:\n[build/Format and Clippy]   | source \"$HOME/.cargo/env\"\n[build/Format and Clippy]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[build/Format and Clippy]   | Default host: x86_64-unknown-linux-gnu\n[build/Format and Clippy]   | rustup home:  /home/runneradmin/.rustup\n[build/Format and Clippy]   | \n[build/Format and Clippy]   | no active toolchain\n[build/Format and Clippy]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[build/Format and Clippy]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[build/Format and Clippy]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[build/Format and Clippy]   | Installed rustup 1.26.0 support profiles\n[build/Format and Clippy]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[build/Format and Clippy]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[build/Format and Clippy]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[build/Format and Clippy]   | Installed rustup 1.26.0 support components\n[build/Format and Clippy]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[build/Format and Clippy]   | info: profile set to 'minimal'\n[build/Format and Clippy]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable --component rustfmt --component clippy\n[build/Format and Clippy]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[build/Format and Clippy]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[build/Format and Clippy]   | info: downloading component 'cargo'\n[build/Format and Clippy]   | info: downloading component 'clippy'\n[build/Format and Clippy]   | info: downloading component 'rust-std'\n[build/Format and Clippy]   | info: downloading component 'rustc'\n[build/Test             ]   | info: installing component 'rustc'\n[build/Format and Clippy]   | info: downloading component 'rustfmt'\n[build/Format and Clippy]   | info: installing component 'cargo'\n[build/Format and Clippy]   | info: installing component 'clippy'\n[build/Format and Clippy]   | info: installing component 'rust-std'\n[build/Test             ]   | \n[build/Test             ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[build/Test             ]   | \n[build/Test             ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[build/Test             ]   | info: checking for self-update\n[build/Test             ]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[build/Test             ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[build/Test             ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stusmall-murmur3' set to 'stable-x86_64-unknown-linux-gnu'\n[build/Test             ]   | \n[build/Test             ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[build/Test             ]   | \n[build/Test             ]   \u2753  ::group::Gathering installed versions\n[build/Test             ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[build/Test             ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[build/Test             ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[build/Test             ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[build/Test             ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[build/Test             ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[build/Test             ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[build/Test             ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[build/Test             ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[build/Test             ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[build/Test             ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[build/Test             ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[build/Test             ]   \u2753  ::endgroup::\n[build/Test             ]   \u2705  Success - Main Install Rust stable toolchain\n[build/Format and Clippy]   | info: installing component 'rustc'\n[build/Test             ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[build/Test             ] \u2b50 Run Main Run cargo test\n[build/Test             ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[build/Test             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[build/Format and Clippy]   | info: installing component 'rustfmt'\n[build/Format and Clippy]   | \n[build/Format and Clippy]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[build/Format and Clippy]   | \n[build/Format and Clippy]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[build/Format and Clippy]   | info: checking for self-update\n[build/Format and Clippy]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[build/Format and Clippy]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[build/Format and Clippy]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stusmall-murmur3' set to 'stable-x86_64-unknown-linux-gnu'\n[build/Format and Clippy]   | \n[build/Format and Clippy]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[build/Format and Clippy]   | \n[build/Format and Clippy]   \u2753  ::group::Gathering installed versions\n[build/Format and Clippy]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[build/Format and Clippy]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[build/Format and Clippy]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[build/Format and Clippy]   \u2699  ::set-output:: rustc_hash=84c898d65\n[build/Format and Clippy]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[build/Format and Clippy]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[build/Format and Clippy]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[build/Format and Clippy]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[build/Format and Clippy]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[build/Format and Clippy]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[build/Format and Clippy]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[build/Format and Clippy]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[build/Format and Clippy]   \u2753  ::endgroup::\n[build/Format and Clippy]   \u2705  Success - Main Install Rust stable toolchain\n[build/Format and Clippy]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[build/Format and Clippy] \u2b50 Run Main Run cargo fmt\n[build/Format and Clippy]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[build/Format and Clippy]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[build/Format and Clippy]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[build/Test             ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[build/Test             ]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[build/Test             ]   | [command]/home/runneradmin/.cargo/bin/cargo test\n[build/Format and Clippy]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[build/Format and Clippy]   | [command]/home/runneradmin/.cargo/bin/cargo fmt --all -- --check\n[build/Test             ]   |     Updating crates.io index\n[build/Format and Clippy]   \u2705  Success - Main Run cargo fmt\n[build/Format and Clippy] \u2b50 Run Main Run cargo clippy\n[build/Format and Clippy]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[build/Format and Clippy]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[build/Format and Clippy]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[build/Format and Clippy]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[build/Format and Clippy]   | [command]/home/runneradmin/.cargo/bin/cargo clippy --all -- -D warnings\n[build/Format and Clippy]   |     Updating crates.io index\n[build/Test             ]   |  Downloading crates ...\n[build/Test             ]   |   Downloaded rand_core v0.5.1\n[build/Test             ]   |   Downloaded regex v1.8.3\n[build/Test             ]   |   Downloaded unicode-width v0.1.10\n[build/Test             ]   |   Downloaded regex-syntax v0.7.2\n[build/Test             ]   |   Downloaded clang-sys v0.29.3\n[build/Test             ]   |   Downloaded shlex v0.1.1\n[build/Test             ]   |   Downloaded getrandom v0.1.16\n[build/Test             ]   |   Downloaded cfg-if v0.1.10\n[build/Test             ]   |   Downloaded ansi_term v0.12.1\n[build/Test             ]   |   Downloaded which v3.1.1\n[build/Test             ]   |   Downloaded rustc-hash v1.1.0\n[build/Test             ]   |   Downloaded version_check v0.9.4\n[build/Test             ]   |   Downloaded rand_chacha v0.2.2\n[build/Test             ]   |   Downloaded unicode-ident v1.0.9\n[build/Test             ]   |   Downloaded glob v0.3.1\n[build/Test             ]   |   Downloaded textwrap v0.11.0\n[build/Test             ]   |   Downloaded quote v1.0.28\n[build/Test             ]   |   Downloaded proc-macro2 v1.0.59\n[build/Test             ]   |   Downloaded clap v2.34.0\n[build/Test             ]   |   Downloaded humantime v1.3.0\n[build/Test             ]   |   Downloaded env_logger v0.7.1\n[build/Test             ]   |   Downloaded termcolor v1.2.0\n[build/Test             ]   |   Downloaded strsim v0.8.0\n[build/Test             ]   |   Downloaded bindgen v0.53.3\n[build/Test             ]   |   Downloaded rand v0.7.3\n[build/Test             ]   |   Downloaded lazycell v1.3.0\n[build/Test             ]   |   Downloaded vec_map v0.8.2\n[build/Test             ]   |   Downloaded atty v0.2.14\n[build/Test             ]   |   Downloaded quick-error v1.2.3\n[build/Test             ]   |   Downloaded quickcheck v0.9.2\n[build/Test             ]   |   Downloaded peeking_take_while v0.1.2\n[build/Test             ]   |   Downloaded nom v5.1.3\n[build/Test             ]   |   Downloaded libloading v0.5.2\n[build/Test             ]   |   Downloaded cexpr v0.4.0\n[build/Test             ]   |   Downloaded ppv-lite86 v0.2.17\n[build/Test             ]   |   Downloaded memchr v2.5.0\n[build/Test             ]   |   Downloaded log v0.4.18\n[build/Test             ]   |   Downloaded libc v0.2.144\n[build/Test             ]   |   Downloaded lazy_static v1.4.0\n[build/Test             ]   |   Downloaded cfg-if v1.0.0\n[build/Test             ]   |   Downloaded cc v1.0.79\n[build/Test             ]   |   Downloaded bitflags v1.3.2\n[build/Test             ]   |   Downloaded aho-corasick v1.0.1\n[build/Test             ]   |    Compiling libc v0.2.144\n[build/Test             ]   |    Compiling memchr v2.5.0\n[build/Test             ]   |    Compiling glob v0.3.1\n[build/Test             ]   |    Compiling cc v1.0.79\n[build/Test             ]   |    Compiling log v0.4.18\n[build/Test             ]   |    Compiling version_check v0.9.4\n[build/Test             ]   |    Compiling regex-syntax v0.7.2\n[build/Test             ]   |    Compiling quick-error v1.2.3\n[build/Test             ]   |    Compiling proc-macro2 v1.0.59\n[build/Test             ]   |    Compiling unicode-width v0.1.10\n[build/Test             ]   |    Compiling getrandom v0.1.16\n[build/Test             ]   |    Compiling quote v1.0.28\n[build/Test             ]   |    Compiling termcolor v1.2.0\n[build/Test             ]   |    Compiling unicode-ident v1.0.9\n[build/Test             ]   |    Compiling bindgen v0.53.3\n[build/Test             ]   |    Compiling cfg-if v1.0.0\n[build/Test             ]   |    Compiling ansi_term v0.12.1\n[build/Test             ]   |    Compiling strsim v0.8.0\n[build/Test             ]   |    Compiling vec_map v0.8.2\n[build/Test             ]   |    Compiling bitflags v1.3.2\n[build/Test             ]   |    Compiling lazycell v1.3.0\n[build/Test             ]   |    Compiling cfg-if v0.1.10\n[build/Test             ]   |    Compiling shlex v0.1.1\n[build/Test             ]   |    Compiling lazy_static v1.4.0\n[build/Test             ]   |    Compiling rustc-hash v1.1.0\n[build/Test             ]   |    Compiling peeking_take_while v0.1.2\n[build/Test             ]   |    Compiling ppv-lite86 v0.2.17\n[build/Test             ]   |    Compiling murmur3 v0.5.2 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stusmall-murmur3)\n[build/Test             ]   |    Compiling humantime v1.3.0\n[build/Test             ]   |    Compiling textwrap v0.11.0\n[build/Test             ]   |    Compiling clang-sys v0.29.3\n[build/Test             ]   |    Compiling nom v5.1.3\n[build/Test             ]   |    Compiling libloading v0.5.2\n[build/Test             ]   |    Compiling aho-corasick v1.0.1\n[build/Test             ]   |    Compiling atty v0.2.14\n[build/Test             ]   |    Compiling which v3.1.1\n[build/Test             ]   |    Compiling clap v2.34.0\n[build/Test             ]   |    Compiling rand_core v0.5.1\n[build/Test             ]   |    Compiling rand_chacha v0.2.2\n[build/Test             ]   |    Compiling rand v0.7.3\n[build/Test             ]   |    Compiling regex v1.8.3\n[build/Test             ]   |    Compiling cexpr v0.4.0\n[build/Test             ]   |    Compiling env_logger v0.7.1\n[build/Test             ]   |    Compiling quickcheck v0.9.2\n[build/Test             ]   |    Compiling murmur3-sys v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stusmall-murmur3/murmur3-sys)\n[build/Test             ]   | warning: couldn't execute `llvm-config --prefix` (error: No such file or directory (os error 2))\n[build/Test             ]   | warning: set the LLVM_CONFIG_PATH environment variable to the full path to a valid `llvm-config` executable (including the executable itself)\n[build/Test             ]   |     Finished test [unoptimized + debuginfo] target(s) in 2m 35s\n[build/Test             ]   |      Running unittests src/lib.rs (target/debug/deps/murmur3-04e8203c0deccaab)\n[build/Test             ]   | \n[build/Test             ]   | running 0 tests\n[build/Test             ]   | \n[build/Test             ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[build/Test             ]   | \n[build/Test             ]   |      Running tests/quickcheck.rs (target/debug/deps/quickcheck-3b994d78337451b0)\n[build/Test             ]   | \n[build/Test             ]   | running 4 tests\n[build/Test             ]   | test quickcheck_32_slice ... ok\n[build/Test             ]   | test quickcheck_x86_128 ... ok\n[build/Test             ]   | test quickcheck_x64_128 ... ok\n[build/Test             ]   | test quickcheck_32 ... ok\n[build/Test             ]   | \n[build/Test             ]   | test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s\n[build/Test             ]   | \n[build/Test             ]   |      Running tests/test.rs (target/debug/deps/test-b621bb94f3043554)\n[build/Test             ]   | \n[build/Test             ]   | running 1 test\n[build/Test             ]   | test test_static_strings ... ok\n[build/Test             ]   | \n[build/Test             ]   | test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[build/Test             ]   | \n[build/Test             ]   |    Doc-tests murmur3\n[build/Test             ]   | \n[build/Test             ]   | running 4 tests\n[build/Test             ]   | test src/murmur3_32.rs - murmur3_32::murmur3_32_of_slice (line 68) ... ok\n[build/Test             ]   | test src/murmur3_x86_128.rs - murmur3_x86_128::murmur3_x86_128 (line 17) ... ok\n[build/Test             ]   | test src/murmur3_x64_128.rs - murmur3_x64_128::murmur3_x64_128 (line 17) ... ok\n[build/Test             ]   | test src/murmur3_32.rs - murmur3_32::murmur3_32 (line 24) ... ok\n[build/Test             ]   | \n[build/Test             ]   | test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.30s\n[build/Test             ]   | \n[build/Test             ]   \u2705  Success - Main Run cargo test\n[build/Test             ] \ud83c\udfc1  Job succeeded\n[build/Format and Clippy]   |     Checking murmur3 v0.5.2 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stusmall-murmur3)\n[build/Format and Clippy]   |     Finished dev [unoptimized + debuginfo] target(s) in 1m 59s\n[build/Format and Clippy]   \u2705  Success - Main Run cargo clippy\n[build/Format and Clippy] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}