{
    "repository": "petgraph/petgraph",
    "clone_url": "https://github.com/petgraph/petgraph.git",
    "timestamp": "2023-05-30T08:34:21.426579Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Continuous integration/rustfmt] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/tests  ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/miri   ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/rustfmt]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/miri   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/tests  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/rustfmt]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/miri   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/miri   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/rustfmt]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/tests  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/tests  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/miri   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/petgraph-petgraph] user=0 workdir=\n[Continuous integration/rustfmt]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/petgraph-petgraph] user=0 workdir=\n[Continuous integration/miri   ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=nightly\n[Continuous integration/rustfmt]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous integration/rustfmt] \ud83e\uddea  Matrix: map[rust:stable rustfmt:rustfmt]\n[Continuous integration/miri   ] \u2b50 Run Pre dtolnay/rust-toolchain@nightly\n[Continuous integration/rustfmt] \u2b50 Run Main actions/checkout@v2\n[Continuous integration/rustfmt]   \u2705  Success - Main actions/checkout@v2\n[Continuous integration/miri   ]   \u2705  Success - Pre dtolnay/rust-toolchain@nightly\n[Continuous integration/rustfmt] \u2b50 Run Main actions-rs/toolchain@v1\n[Continuous integration/miri   ] \u2b50 Run Main actions/checkout@v3\n[Continuous integration/miri   ]   \u2705  Success - Main actions/checkout@v3\n[Continuous integration/rustfmt]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous integration/rustfmt]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous integration/miri   ] \u2b50 Run Main dtolnay/rust-toolchain@nightly\n[Continuous integration/miri   ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[Continuous integration/rustfmt]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous integration/tests  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/petgraph-petgraph] user=0 workdir=\n[Continuous integration/miri   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@nightly/] user=0 workdir=\n[Continuous integration/rustfmt]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[Continuous integration/rustfmt]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous integration/rustfmt]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous integration/rustfmt]   \ud83d\udcac  ::debug::Destination /tmp/30d03dce-6991-4dac-8589-858801efb456\n[Continuous integration/rustfmt]   \ud83d\udcac  ::debug::download complete\n[Continuous integration/rustfmt]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/30d03dce-6991-4dac-8589-858801efb456\n[Continuous integration/rustfmt]   | [command]/tmp/30d03dce-6991-4dac-8589-858801efb456 --default-toolchain none -y\n[Continuous integration/rustfmt]   | info: downloading installer\n[Continuous integration/miri   ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Continuous integration/rustfmt]   | info: profile set to 'default'\n[Continuous integration/rustfmt]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous integration/rustfmt]   | info: skipping toolchain installation\n[Continuous integration/rustfmt]   | \n[Continuous integration/rustfmt]   | \n[Continuous integration/rustfmt]   | Rust is installed now. Great!\n[Continuous integration/rustfmt]   | \n[Continuous integration/rustfmt]   | To get started you may need to restart your current shell.\n[Continuous integration/rustfmt]   | This would reload your PATH environment variable to include\n[Continuous integration/rustfmt]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous integration/rustfmt]   | \n[Continuous integration/rustfmt]   | To configure your current shell, run:\n[Continuous integration/rustfmt]   | source \"$HOME/.cargo/env\"\n[Continuous integration/rustfmt]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous integration/rustfmt]   | Default host: x86_64-unknown-linux-gnu\n[Continuous integration/rustfmt]   | rustup home:  /home/runneradmin/.rustup\n[Continuous integration/rustfmt]   | \n[Continuous integration/rustfmt]   | no active toolchain\n[Continuous integration/rustfmt]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/rustfmt]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/rustfmt]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/rustfmt]   | Installed rustup 1.26.0 support profiles\n[Continuous integration/rustfmt]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/rustfmt]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/rustfmt]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/rustfmt]   | Installed rustup 1.26.0 support components\n[Continuous integration/rustfmt]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous integration/rustfmt]   | info: profile set to 'minimal'\n[Continuous integration/rustfmt]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable --component rustfmt\n[Continuous integration/rustfmt]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/tests  ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous integration/tests  ] \ud83e\uddea  Matrix: map[fixed_deps:-p indexmap --precise 1.7.0 rust:1.41.0]\n[Continuous integration/tests  ] \u2b50 Run Main actions/checkout@v2\n[Continuous integration/rustfmt]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/rustfmt]   | info: downloading component 'cargo'\n[Continuous integration/miri   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[Continuous integration/rustfmt]   | info: downloading component 'rust-std'\n[Continuous integration/tests  ]   \u2705  Success - Main actions/checkout@v2\n[Continuous integration/rustfmt]   | info: downloading component 'rustc'\n[Continuous integration/miri   ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Continuous integration/rustfmt]   | info: downloading component 'rustfmt'\n[Continuous integration/rustfmt]   | info: installing component 'cargo'\n[Continuous integration/rustfmt]   | info: installing component 'rust-std'\n[Continuous integration/miri   ]   \u2699  ::set-output:: toolchain=nightly\n[Continuous integration/tests  ] \u2b50 Run Main actions-rs/toolchain@v1\n[Continuous integration/rustfmt]   | info: installing component 'rustc'\n[Continuous integration/tests  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous integration/miri   ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade= --allow-downgrade\" >> $GITHUB_OUTPUT\n[Continuous integration/tests  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous integration/miri   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[Continuous integration/rustfmt]   | info: installing component 'rustfmt'\n[Continuous integration/rustfmt]   | \n[Continuous integration/rustfmt]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/rustfmt]   | \n[Continuous integration/rustfmt]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/rustfmt]   | info: checking for self-update\n[Continuous integration/rustfmt]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[Continuous integration/rustfmt]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/rustfmt]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/petgraph-petgraph' set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/rustfmt]   | \n[Continuous integration/rustfmt]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/rustfmt]   | \n[Continuous integration/rustfmt]   \u2753  ::group::Gathering installed versions\n[Continuous integration/rustfmt]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous integration/rustfmt]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/rustfmt]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/rustfmt]   \u2699  ::set-output:: rustc_hash=84c898d65\n[Continuous integration/rustfmt]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous integration/rustfmt]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[Continuous integration/rustfmt]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[Continuous integration/rustfmt]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/rustfmt]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/rustfmt]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/rustfmt]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Continuous integration/rustfmt]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/rustfmt]   \u2753  ::endgroup::\n[Continuous integration/rustfmt]   \u2705  Success - Main actions-rs/toolchain@v1\n[Continuous integration/rustfmt]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous integration/rustfmt] \u2b50 Run Main Rustfmt\n[Continuous integration/rustfmt]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Continuous integration/miri   ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade= --allow-downgrade\" >> $GITHUB_OUTPUT\n[Continuous integration/tests  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous integration/rustfmt]   \u2705  Success - Main Rustfmt\n[Continuous integration/tests  ]   \ud83d\udcac  ::debug::using toolchain from input: 1.41.0\n[Continuous integration/tests  ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous integration/tests  ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous integration/tests  ]   \ud83d\udcac  ::debug::Destination /tmp/bfdfd446-c7eb-4dca-917b-188184d01770\n[Continuous integration/tests  ]   \ud83d\udcac  ::debug::download complete\n[Continuous integration/tests  ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/bfdfd446-c7eb-4dca-917b-188184d01770\n[Continuous integration/tests  ]   | [command]/tmp/bfdfd446-c7eb-4dca-917b-188184d01770 --default-toolchain none -y\n[Continuous integration/tests  ]   | info: downloading installer\n[Continuous integration/tests  ]   | info: profile set to 'default'\n[Continuous integration/tests  ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous integration/tests  ]   | info: skipping toolchain installation\n[Continuous integration/tests  ]   | \n[Continuous integration/tests  ]   | \n[Continuous integration/tests  ]   | Rust is installed now. Great!\n[Continuous integration/tests  ]   | \n[Continuous integration/tests  ]   | To get started you may need to restart your current shell.\n[Continuous integration/tests  ]   | This would reload your PATH environment variable to include\n[Continuous integration/tests  ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous integration/tests  ]   | \n[Continuous integration/tests  ]   | To configure your current shell, run:\n[Continuous integration/tests  ]   | source \"$HOME/.cargo/env\"\n[Continuous integration/tests  ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous integration/tests  ]   | Default host: x86_64-unknown-linux-gnu\n[Continuous integration/tests  ]   | rustup home:  /home/runneradmin/.rustup\n[Continuous integration/tests  ]   | \n[Continuous integration/tests  ]   | no active toolchain\n[Continuous integration/tests  ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/tests  ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/tests  ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/tests  ]   | Installed rustup 1.26.0 support profiles\n[Continuous integration/tests  ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous integration/tests  ]   | info: profile set to 'minimal'\n[Continuous integration/tests  ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install 1.41.0\n[Continuous integration/tests  ]   | info: syncing channel updates for '1.41.0-x86_64-unknown-linux-gnu'\n[Continuous integration/tests  ]   | info: latest update on 2020-01-30, rust version 1.41.0 (5e1a79984 2020-01-27)\n[Continuous integration/tests  ]   | info: downloading component 'cargo'\n[Continuous integration/miri   ]   \u2699  ::set-output:: targets=\n[Continuous integration/miri   ]   \u2699  ::set-output:: components= --component miri\n[Continuous integration/miri   ]   \u2699  ::set-output:: downgrade= --allow-downgrade\n[Continuous integration/tests  ]   | info: downloading component 'rust-std'\n[Continuous integration/miri   ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Continuous integration/tests  ]   | info: downloading component 'rustc'\n[Continuous integration/miri   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[Continuous integration/tests  ]   | info: installing component 'cargo'\n[Continuous integration/tests  ]   | info: installing component 'rust-std'\n[Continuous integration/tests  ]   | info: installing component 'rustc'\n[Continuous integration/tests  ]   | \n[Continuous integration/tests  ]   |   1.41.0-x86_64-unknown-linux-gnu installed - rustc 1.41.0 (5e1a79984 2020-01-27)\n[Continuous integration/tests  ]   | \n[Continuous integration/tests  ]   | info: default toolchain set to '1.41.0-x86_64-unknown-linux-gnu'\n[Continuous integration/tests  ]   | info: checking for self-update\n[Continuous integration/tests  ]   | [command]/home/runneradmin/.cargo/bin/rustup override set 1.41.0\n[Continuous integration/tests  ]   | info: using existing install for '1.41.0-x86_64-unknown-linux-gnu'\n[Continuous integration/tests  ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/petgraph-petgraph' set to '1.41.0-x86_64-unknown-linux-gnu'\n[Continuous integration/tests  ]   | \n[Continuous integration/tests  ]   |   1.41.0-x86_64-unknown-linux-gnu unchanged - rustc 1.41.0 (5e1a79984 2020-01-27)\n[Continuous integration/tests  ]   | \n[Continuous integration/tests  ]   \u2753  ::group::Gathering installed versions\n[Continuous integration/tests  ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous integration/tests  ]   | rustc 1.41.0 (5e1a79984 2020-01-27)\n[Continuous integration/tests  ]   \u2699  ::set-output:: rustc=1.41.0 (5e1a79984 2020-01-27)\n[Continuous integration/tests  ]   \u2699  ::set-output:: rustc_hash=5e1a79984\n[Continuous integration/tests  ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous integration/tests  ]   | cargo 1.41.0 (626f0f40e 2019-12-03)\n[Continuous integration/tests  ]   \u2699  ::set-output:: cargo=1.41.0 (626f0f40e 2019-12-03)\n[Continuous integration/tests  ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/tests  ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/tests  ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/tests  ]   | info: The currently active `rustc` version is `rustc 1.41.0 (5e1a79984 2020-01-27)`\n[Continuous integration/tests  ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/tests  ]   \u2753  ::endgroup::\n[Continuous integration/tests  ]   \u2705  Success - Main actions-rs/toolchain@v1\n[Continuous integration/tests  ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous integration/tests  ] \u2b50 Run Main Build\n[Continuous integration/tests  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Continuous integration/miri   ]   | info: downloading installer\n[Continuous integration/miri   ]   | info: profile set to 'default'\n[Continuous integration/miri   ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous integration/miri   ]   | info: skipping toolchain installation\n[Continuous integration/miri   ]   | \n[Continuous integration/miri   ]   | \n[Continuous integration/miri   ]   | Rust is installed now. Great!\n[Continuous integration/miri   ]   | \n[Continuous integration/miri   ]   | To get started you may need to restart your current shell.\n[Continuous integration/miri   ]   | This would reload your PATH environment variable to include\n[Continuous integration/miri   ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous integration/miri   ]   | \n[Continuous integration/miri   ]   | To configure your current shell, run:\n[Continuous integration/miri   ]   | source \"$HOME/.cargo/env\"\n[Continuous integration/miri   ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Continuous integration/rustfmt] \ud83c\udfc1  Job succeeded\n[Continuous integration/tests  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Updating\u001b[0m crates.io index\n[Continuous integration/miri   ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous integration/miri   ] \u2b50 Run Main rustup toolchain install nightly\n[Continuous integration/miri   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[Continuous integration/miri   ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[Continuous integration/miri   ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[Continuous integration/miri   ]   | info: downloading component 'cargo'\n[Continuous integration/miri   ]   | info: downloading component 'miri'\n[Continuous integration/miri   ]   | info: downloading component 'rust-std'\n[Continuous integration/miri   ]   | info: downloading component 'rustc'\n[Continuous integration/miri   ]   | info: installing component 'cargo'\n[Continuous integration/miri   ]   | info: installing component 'miri'\n[Continuous integration/miri   ]   | info: installing component 'rust-std'\n[Continuous integration/miri   ]   | info: installing component 'rustc'\n[Continuous integration/tests  ]   \u274c  Failure - Main Build\n[Continuous integration/miri   ]   \u274c  Failure - Main rustup toolchain install nightly\n[Continuous integration/miri   ] Error response from daemon: Could not find the file /var/run/act/workflow/pathcmd.txt in container acb752ed654c503fbcbe72fdb986ef9e22b13a4f7a46be1f344f4db7ce194f5d\n[Continuous integration/tests  ] Error response from daemon: Could not find the file /var/run/act/workflow/pathcmd.txt in container 77bc551d62897e1ce8362887a5dec57d1a867b936abf37d19ef9c1bbee0bb936\n[Continuous integration/tests  ] failed to remove container: Error response from daemon: No such container: 77bc551d62897e1ce8362887a5dec57d1a867b936abf37d19ef9c1bbee0bb936\n[Continuous integration/tests  ] \ud83c\udfc1  Job failed\n[Continuous integration/miri   ]   \u2699  ::set-output:: cachekey=\n[Continuous integration/miri   ]   \u2699  ::set-output:: name=nightly\n[Continuous integration/miri   ]   \u274c  Failure - Main dtolnay/rust-toolchain@nightly\n[Continuous integration/miri   ] Error response from daemon: No such container: acb752ed654c503fbcbe72fdb986ef9e22b13a4f7a46be1f344f4db7ce194f5d\n[Continuous integration/miri   ] \u2b50 Run Post dtolnay/rust-toolchain@nightly\n[Continuous integration/miri   ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[Continuous integration/miri   ]   \u274c  Failure - Post dtolnay/rust-toolchain@nightly\n[Continuous integration/miri   ] failed to remove container: Error response from daemon: No such container: acb752ed654c503fbcbe72fdb986ef9e22b13a4f7a46be1f344f4db7ce194f5d\n[Continuous integration/miri   ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Error occurred running finally: Error occurred running finally: Error response from daemon: No such container: acb752ed654c503fbcbe72fdb986ef9e22b13a4f7a46be1f344f4db7ce194f5d (original error: <nil>) (original error: <nil>)\n"
}