{
    "repository": "bluss/scopeguard",
    "clone_url": "https://github.com/bluss/scopeguard.git",
    "timestamp": "2023-05-30T08:42:15.928884Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/format] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/build ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/no_std] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/format]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/build ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/no_std]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/format]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/no_std]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/no_std]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/build ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/format]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/build ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/build ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-scopeguard] user=0 workdir=\n[CI/format]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-scopeguard] user=0 workdir=\n[CI/no_std]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-scopeguard] user=0 workdir=\n[CI/build ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/build ] \ud83e\uddea  Matrix: map[rust:stable]\n[CI/no_std] \u2b50 Run Main actions/checkout@v2\n[CI/format] \u2b50 Run Main actions/checkout@v2\n[CI/build ] \u2b50 Run Main actions/checkout@v2\n[CI/build ]   \u2705  Success - Main actions/checkout@v2\n[CI/no_std]   \u2705  Success - Main actions/checkout@v2\n[CI/format]   \u2705  Success - Main actions/checkout@v2\n[CI/format] \u2b50 Run Main Check formatting\n[CI/build ] \u2b50 Run Main Install Rust\n[CI/no_std] \u2b50 Run Main Test no_std support\n[CI/build ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/build ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/format]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[CI/build ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/format]   | /var/run/act/workflow/1: line 2: cargo: command not found\n[CI/format]   \u274c  Failure - Main Check formatting\n[CI/build ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[CI/build ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/build ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/build ]   \ud83d\udcac  ::debug::Destination /tmp/eaf405b1-b2e7-4ca4-9290-935da5979802\n[CI/no_std]   \u274c  Failure - Main Test no_std support\n[CI/no_std] Error response from daemon: No such container: 258c61debbff3b911efab907e63f339481fcaf5fa2c9828b375e61f093d8004f\n[CI/no_std] failed to remove container: Error response from daemon: No such container: 258c61debbff3b911efab907e63f339481fcaf5fa2c9828b375e61f093d8004f\n[CI/no_std] \ud83c\udfc1  Job failed\n[CI/build ]   \ud83d\udcac  ::debug::download complete\n[CI/build ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/eaf405b1-b2e7-4ca4-9290-935da5979802\n[CI/build ]   | [command]/tmp/eaf405b1-b2e7-4ca4-9290-935da5979802 --default-toolchain none -y\n[CI/build ]   | info: downloading installer\n[CI/build ]   | info: profile set to 'default'\n[CI/build ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/build ]   | info: skipping toolchain installation\n[CI/build ]   | \n[CI/build ]   | \n[CI/build ]   | Rust is installed now. Great!\n[CI/build ]   | \n[CI/build ]   | To get started you may need to restart your current shell.\n[CI/build ]   | This would reload your PATH environment variable to include\n[CI/build ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/build ]   | \n[CI/build ]   | To configure your current shell, run:\n[CI/build ]   | source \"$HOME/.cargo/env\"\n[CI/build ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/build ]   | Default host: x86_64-unknown-linux-gnu\n[CI/build ]   | rustup home:  /home/runneradmin/.rustup\n[CI/build ]   | \n[CI/build ]   | no active toolchain\n[CI/build ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/build ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/build ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/build ]   | Installed rustup 1.26.0 support profiles\n[CI/build ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[CI/build ]   | info: profile set to 'minimal'\n[CI/build ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[CI/build ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/format] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[CI/build ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/build ]   | info: downloading component 'cargo'\n[CI/build ]   | info: downloading component 'rust-std'\n[CI/build ]   | info: downloading component 'rustc'\n[CI/format] \ud83c\udfc1  Job failed\n[CI/build ]   | info: installing component 'cargo'\n[CI/build ]   | info: installing component 'rust-std'\n[CI/build ]   | info: installing component 'rustc'\n[CI/build ]   | \n[CI/build ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/build ]   | \n[CI/build ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/build ]   | info: checking for self-update\n[CI/build ]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[CI/build ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/build ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-scopeguard' set to 'stable-x86_64-unknown-linux-gnu'\n[CI/build ]   | \n[CI/build ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/build ]   | \n[CI/build ]   \u2753  ::group::Gathering installed versions\n[CI/build ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/build ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/build ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[CI/build ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[CI/build ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/build ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[CI/build ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[CI/build ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/build ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/build ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/build ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[CI/build ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/build ]   \u2753  ::endgroup::\n[CI/build ]   \u2705  Success - Main Install Rust\n[CI/build ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/build ] \u2b50 Run Main Build\n[CI/build ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/build ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m scopeguard v1.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-scopeguard)\n[CI/build ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m dev [unoptimized + debuginfo] target(s) in 1.12s\n[CI/build ]   \u2705  Success - Main Build\n[CI/build ] \u2b50 Run Main Run tests\n[CI/build ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/build ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m scopeguard v1.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-scopeguard)\n[CI/build ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m test [unoptimized + debuginfo] target(s) in 1.23s\n[CI/build ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m unittests src/lib.rs (target/debug/deps/scopeguard-4829f39d956406a9)\n[CI/build ]   | \n[CI/build ]   | running 8 tests\n[CI/build ]   | test tests::test_defer ... ok\n[CI/build ]   | test tests::test_defer_unwind_2 ... ok\n[CI/build ]   | test tests::test_defer_success_2 ... ok\n[CI/build ]   | test tests::test_dropped_once_when_not_run ... ok\n[CI/build ]   | test tests::test_defer_success_1 ... ok\n[CI/build ]   | test tests::test_defer_unwind_1 ... ok\n[CI/build ]   | test tests::test_into_inner ... ok\n[CI/build ]   | test tests::test_only_dropped_by_closure_when_run ... ok\n[CI/build ]   | \n[CI/build ]   | test result: ok. 8 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/build ]   | \n[CI/build ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Doc-tests\u001b[0m scopeguard\n[CI/build ]   | \n[CI/build ]   | running 6 tests\n[CI/build ]   | test src/lib.rs - guard_on_unwind (line 407) ... ok\n[CI/build ]   | test src/lib.rs - (line 14) ... ok\n[CI/build ]   | test src/lib.rs - (line 37) ... ok\n[CI/build ]   | test src/lib.rs - (line 74) ... ok\n[CI/build ]   | test src/lib.rs - ScopeGuard<T,F,S>::into_inner (line 336) ... ok\n[CI/build ]   | test src/lib.rs - (line 106) ... ok\n[CI/build ]   | \n[CI/build ]   | test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.51s\n[CI/build ]   | \n[CI/build ]   \u2705  Success - Main Run tests\n[CI/build ] \u2b50 Run Main Run tests (without default features)\n[CI/build ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[CI/build ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m scopeguard v1.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-scopeguard)\n[CI/build ]   | \u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::panic::catch_unwind`\u001b[0m\n[CI/build ]   | \u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:497:9\u001b[0m\n[CI/build ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n[CI/build ]   | \u001b[0m\u001b[1m\u001b[38;5;12m497\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use std::panic::catch_unwind;\u001b[0m\n[CI/build ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n[CI/build ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n[CI/build ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n[CI/build ]   | \n[CI/build ]   | \u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::panic::AssertUnwindSafe`\u001b[0m\n[CI/build ]   | \u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:498:9\u001b[0m\n[CI/build ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n[CI/build ]   | \u001b[0m\u001b[1m\u001b[38;5;12m498\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use std::panic::AssertUnwindSafe;\u001b[0m\n[CI/build ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n[CI/build ]   | \n[CI/build ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m:\u001b[0m `scopeguard` (lib test) generated 2 warnings (run `cargo fix --lib -p scopeguard --tests` to apply 2 suggestions)\n[CI/build ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m test [unoptimized + debuginfo] target(s) in 1.28s\n[CI/build ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m unittests src/lib.rs (target/debug/deps/scopeguard-14b2a9f67bdb845a)\n[CI/build ]   | \n[CI/build ]   | running 3 tests\n[CI/build ]   | test tests::test_defer ... ok\n[CI/build ]   | test tests::test_into_inner ... ok\n[CI/build ]   | test tests::test_only_dropped_by_closure_when_run ... ok\n[CI/build ]   | \n[CI/build ]   | test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/build ]   | \n[CI/build ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Doc-tests\u001b[0m scopeguard\n[CI/build ]   | \n[CI/build ]   | running 5 tests\n[CI/build ]   | test src/lib.rs - (line 37) ... ok\n[CI/build ]   | test src/lib.rs - (line 14) ... ok\n[CI/build ]   | test src/lib.rs - ScopeGuard<T,F,S>::into_inner (line 336) ... ok\n[CI/build ]   | test src/lib.rs - (line 106) ... ok\n[CI/build ]   | test src/lib.rs - (line 74) ... ok\n[CI/build ]   | \n[CI/build ]   | test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.62s\n[CI/build ]   | \n[CI/build ]   \u2705  Success - Main Run tests (without default features)\n[CI/build ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: Error occurred running finally: Error occurred running finally: Error response from daemon: get act-CI-no-std-c5765759164f6d28ffb843f63f8565260a56926fe12fa3309e66877319651218-env: no such volume (original error: <nil>) (original error: <nil>)\n"
}