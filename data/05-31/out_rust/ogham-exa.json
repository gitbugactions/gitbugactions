{
    "repository": "ogham/exa",
    "clone_url": "https://github.com/ogham/exa.git",
    "timestamp": "2023-05-30T08:26:33.038445Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Unit tests/unit-tests] \ud83d\ude80  Start image=crawlergpt:latest\n[Unit tests/unit-tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Unit tests/unit-tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Unit tests/unit-tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Unit tests/unit-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/ogham-exa] user=0 workdir=\n[Unit tests/unit-tests]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Unit tests/unit-tests]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Unit tests/unit-tests]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Unit tests/unit-tests] \ud83e\uddea  Matrix: map[os:ubuntu-latest rust:1.63.0]\n[Unit tests/unit-tests] \u2b50 Run Main Checkout repository\n[Unit tests/unit-tests]   \u2705  Success - Main Checkout repository\n[Unit tests/unit-tests] \u2b50 Run Main Install Rust toolchain\n[Unit tests/unit-tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Unit tests/unit-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Unit tests/unit-tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Unit tests/unit-tests]   \ud83d\udcac  ::debug::using toolchain from input: 1.63.0\n[Unit tests/unit-tests]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Unit tests/unit-tests]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Unit tests/unit-tests]   \ud83d\udcac  ::debug::Destination /tmp/0c81034a-27a7-4e1b-946c-65baf759449a\n[Unit tests/unit-tests]   \ud83d\udcac  ::debug::download complete\n[Unit tests/unit-tests]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/0c81034a-27a7-4e1b-946c-65baf759449a\n[Unit tests/unit-tests]   | [command]/tmp/0c81034a-27a7-4e1b-946c-65baf759449a --default-toolchain none -y\n[Unit tests/unit-tests]   | info: downloading installer\n[Unit tests/unit-tests]   | info: profile set to 'default'\n[Unit tests/unit-tests]   | info: default host triple is x86_64-unknown-linux-gnu\n[Unit tests/unit-tests]   | info: skipping toolchain installation\n[Unit tests/unit-tests]   | \n[Unit tests/unit-tests]   | \n[Unit tests/unit-tests]   | Rust is installed now. Great!\n[Unit tests/unit-tests]   | \n[Unit tests/unit-tests]   | To get started you may need to restart your current shell.\n[Unit tests/unit-tests]   | This would reload your PATH environment variable to include\n[Unit tests/unit-tests]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Unit tests/unit-tests]   | \n[Unit tests/unit-tests]   | To configure your current shell, run:\n[Unit tests/unit-tests]   | source \"$HOME/.cargo/env\"\n[Unit tests/unit-tests]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Unit tests/unit-tests]   | Default host: x86_64-unknown-linux-gnu\n[Unit tests/unit-tests]   | rustup home:  /home/runneradmin/.rustup\n[Unit tests/unit-tests]   | \n[Unit tests/unit-tests]   | info: syncing channel updates for '1.63.0-x86_64-unknown-linux-gnu'\n[Unit tests/unit-tests]   | info: latest update on 2022-08-11, rust version 1.63.0 (4b91a6ea7 2022-08-08)\n[Unit tests/unit-tests]   | info: downloading component 'cargo'\n[Unit tests/unit-tests]   | info: downloading component 'clippy'\n[Unit tests/unit-tests]   | info: downloading component 'rust-docs'\n[Unit tests/unit-tests]   | info: downloading component 'rust-std'\n[Unit tests/unit-tests]   | info: downloading component 'rustc'\n[Unit tests/unit-tests]   | info: downloading component 'rustfmt'\n[Unit tests/unit-tests]   | info: installing component 'cargo'\n[Unit tests/unit-tests]   | info: installing component 'clippy'\n[Unit tests/unit-tests]   | info: installing component 'rust-docs'\n[Unit tests/unit-tests]   | info: installing component 'rust-std'\n[Unit tests/unit-tests]   | info: installing component 'rustc'\n[Unit tests/unit-tests]   | info: installing component 'rustfmt'\n[Unit tests/unit-tests]   | 1.63.0-x86_64-unknown-linux-gnu (overridden by '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/ogham-exa/rust-toolchain.toml')\n[Unit tests/unit-tests]   | rustc 1.63.0 (4b91a6ea7 2022-08-08)\n[Unit tests/unit-tests]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Unit tests/unit-tests]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Unit tests/unit-tests]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Unit tests/unit-tests]   | info: The currently active `rustc` version is `rustc 1.63.0 (4b91a6ea7 2022-08-08)`\n[Unit tests/unit-tests]   | Installed rustup 1.26.0 support profiles\n[Unit tests/unit-tests]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Unit tests/unit-tests]   | info: profile set to 'minimal'\n[Unit tests/unit-tests]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install 1.63.0\n[Unit tests/unit-tests]   | info: syncing channel updates for '1.63.0-x86_64-unknown-linux-gnu'\n[Unit tests/unit-tests]   | \n[Unit tests/unit-tests]   |   1.63.0-x86_64-unknown-linux-gnu unchanged - rustc 1.63.0 (4b91a6ea7 2022-08-08)\n[Unit tests/unit-tests]   | \n[Unit tests/unit-tests]   | info: checking for self-update\n[Unit tests/unit-tests]   | [command]/home/runneradmin/.cargo/bin/rustup override set 1.63.0\n[Unit tests/unit-tests]   | info: using existing install for '1.63.0-x86_64-unknown-linux-gnu'\n[Unit tests/unit-tests]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/ogham-exa' set to '1.63.0-x86_64-unknown-linux-gnu'\n[Unit tests/unit-tests]   | \n[Unit tests/unit-tests]   |   1.63.0-x86_64-unknown-linux-gnu unchanged - rustc 1.63.0 (4b91a6ea7 2022-08-08)\n[Unit tests/unit-tests]   | \n[Unit tests/unit-tests]   \u2753  ::group::Gathering installed versions\n[Unit tests/unit-tests]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Unit tests/unit-tests]   | rustc 1.63.0 (4b91a6ea7 2022-08-08)\n[Unit tests/unit-tests]   \u2699  ::set-output:: rustc=1.63.0 (4b91a6ea7 2022-08-08)\n[Unit tests/unit-tests]   \u2699  ::set-output:: rustc_hash=4b91a6ea7\n[Unit tests/unit-tests]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Unit tests/unit-tests]   | cargo 1.63.0 (fd9c4297c 2022-07-01)\n[Unit tests/unit-tests]   \u2699  ::set-output:: cargo=1.63.0 (fd9c4297c 2022-07-01)\n[Unit tests/unit-tests]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Unit tests/unit-tests]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Unit tests/unit-tests]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Unit tests/unit-tests]   | info: The currently active `rustc` version is `rustc 1.63.0 (4b91a6ea7 2022-08-08)`\n[Unit tests/unit-tests]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Unit tests/unit-tests]   \u2753  ::endgroup::\n[Unit tests/unit-tests]   \u2705  Success - Main Install Rust toolchain\n[Unit tests/unit-tests]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Unit tests/unit-tests] \u2b50 Run Main Install cargo-hack\n[Unit tests/unit-tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[Unit tests/unit-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[Unit tests/unit-tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[Unit tests/unit-tests]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[Unit tests/unit-tests]   | [command]/home/runneradmin/.cargo/bin/cargo install cargo-hack\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Updating\u001b[0m crates.io index\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m Downloading\u001b[0m crates ...\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m cargo-hack v0.5.28\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Installing\u001b[0m cargo-hack v0.5.28\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m Downloading\u001b[0m crates ...\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m ctrlc v3.3.1\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m slab v0.4.8\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m toml_edit v0.19.10\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m toml_datetime v0.6.2\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m termcolor v1.2.0\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m static_assertions v1.1.0\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serde v1.0.163\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m winnow v0.4.6\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m hashbrown v0.12.3\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m cfg-if v1.0.0\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serde_json v1.0.96\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m nix v0.26.2\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m indexmap v1.9.3\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m anyhow v1.0.71\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m libc v0.2.144\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m ryu v1.0.13\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m rustix v0.37.19\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m linux-raw-sys v0.3.8\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m io-lifetimes v1.0.11\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m autocfg v1.1.0\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m memchr v2.5.0\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m itoa v1.0.6\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m is-terminal v0.4.7\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m bitflags v1.3.2\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m lexopt v0.3.0\n[Unit tests/unit-tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[31merror\u001b[0m\u001b[1m:\u001b[0m failed to compile `cargo-hack v0.5.28`, intermediate artifacts can be found at `/tmp/cargo-installDZ5PMB`\n[Unit tests/unit-tests]   | \n[Unit tests/unit-tests]   | Caused by:\n[Unit tests/unit-tests]   |   package `toml_edit v0.19.10` cannot be built because it requires rustc 1.64.0 or newer, while the currently active rustc version is 1.63.0\n[Unit tests/unit-tests]   \u2757  ::error::The process '/home/runneradmin/.cargo/bin/cargo' failed with exit code 101\n[Unit tests/unit-tests]   \u274c  Failure - Main Install cargo-hack\n[Unit tests/unit-tests] exitcode '1': failure\n[Unit tests/unit-tests] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'unit-tests' failed\n"
}