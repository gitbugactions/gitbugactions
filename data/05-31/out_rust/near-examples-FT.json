{
    "repository": "near-examples/FT",
    "clone_url": "https://github.com/near-examples/FT.git",
    "timestamp": "2023-05-30T09:43:45.162989Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Tests/tests] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests/tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests/tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/near-examples-FT] user=0 workdir=\n[Tests/tests]   \u2601  git clone 'https://github.com/actions/setup-node' # ref=v2\n[Tests/tests]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Tests/tests] \ud83e\uddea  Matrix: map[platform:ubuntu-latest]\n[Tests/tests] \u2b50 Run Main Checkout branch\n[Tests/tests]   \u2705  Success - Main Checkout branch\n[Tests/tests] \u2b50 Run Main Install Node\n[Tests/tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-node@v2/ dst=/var/run/act/actions/actions-setup-node@v2/\n[Tests/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-node@v2/] user=0 workdir=\n[Tests/tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-node@v2/dist/setup/index.js] user= workdir=\n[Tests/tests]   \u2753 add-matcher /run/act/actions/actions-setup-node@v2/.github/tsc.json\n[Tests/tests]   \u2753 add-matcher /run/act/actions/actions-setup-node@v2/.github/eslint-stylish.json\n[Tests/tests]   \u2753 add-matcher /run/act/actions/actions-setup-node@v2/.github/eslint-compact.json\n[Tests/tests]   \u2705  Success - Main Install Node\n[Tests/tests] \u2b50 Run Main Install Rust\n[Tests/tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Tests/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Tests/tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Tests/tests]   \ud83d\udcac  ::debug::using toolchain from input: stable-2020-10-08\n[Tests/tests]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Tests/tests]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Tests/tests]   \ud83d\udcac  ::debug::Destination /tmp/268ca9bc-b140-42e6-9942-7841ed3d5d09\n[Tests/tests]   \ud83d\udcac  ::debug::download complete\n[Tests/tests]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/268ca9bc-b140-42e6-9942-7841ed3d5d09\n[Tests/tests]   | [command]/tmp/268ca9bc-b140-42e6-9942-7841ed3d5d09 --default-toolchain none -y\n[Tests/tests]   | info: downloading installer\n[Tests/tests]   | info: profile set to 'default'\n[Tests/tests]   | info: default host triple is x86_64-unknown-linux-gnu\n[Tests/tests]   | info: skipping toolchain installation\n[Tests/tests]   | \n[Tests/tests]   | \n[Tests/tests]   | Rust is installed now. Great!\n[Tests/tests]   | \n[Tests/tests]   | To get started you may need to restart your current shell.\n[Tests/tests]   | This would reload your PATH environment variable to include\n[Tests/tests]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Tests/tests]   | \n[Tests/tests]   | To configure your current shell, run:\n[Tests/tests]   | source \"$HOME/.cargo/env\"\n[Tests/tests]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Tests/tests]   | Default host: x86_64-unknown-linux-gnu\n[Tests/tests]   | rustup home:  /home/runneradmin/.rustup\n[Tests/tests]   | \n[Tests/tests]   | no active toolchain\n[Tests/tests]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable-2020-10-08\n[Tests/tests]   | info: syncing channel updates for 'stable-2020-10-08-x86_64-unknown-linux-gnu'\n[Tests/tests]   | info: latest update on 2020-10-08, rust version 1.47.0 (18bf6b4f0 2020-10-07)\n[Tests/tests]   | info: downloading component 'cargo'\n[Tests/tests]   | info: downloading component 'clippy'\n[Tests/tests]   | info: downloading component 'rust-docs'\n[Tests/tests]   | info: downloading component 'rust-std'\n[Tests/tests]   | info: downloading component 'rustc'\n[Tests/tests]   | info: downloading component 'rustfmt'\n[Tests/tests]   | info: installing component 'cargo'\n[Tests/tests]   | info: installing component 'clippy'\n[Tests/tests]   | info: installing component 'rust-docs'\n[Tests/tests]   | 73 deferred IO operations\n[Tests/tests]   | info: installing component 'rust-std'\n[Tests/tests]   | info: installing component 'rustc'\n[Tests/tests]   | info: installing component 'rustfmt'\n[Tests/tests]   | \n[Tests/tests]   |   stable-2020-10-08-x86_64-unknown-linux-gnu installed - rustc 1.47.0 (18bf6b4f0 2020-10-07)\n[Tests/tests]   | \n[Tests/tests]   | info: default toolchain set to 'stable-2020-10-08-x86_64-unknown-linux-gnu'\n[Tests/tests]   | info: checking for self-update\n[Tests/tests]   | [command]/home/runneradmin/.cargo/bin/rustup target add --toolchain stable-2020-10-08 wasm32-unknown-unknown\n[Tests/tests]   | info: downloading component 'rust-std' for 'wasm32-unknown-unknown'\n[Tests/tests]   | info: installing component 'rust-std' for 'wasm32-unknown-unknown'\n[Tests/tests]   \u2753  ::group::Gathering installed versions\n[Tests/tests]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Tests/tests]   | rustc 1.47.0 (18bf6b4f0 2020-10-07)\n[Tests/tests]   \u2699  ::set-output:: rustc=1.47.0 (18bf6b4f0 2020-10-07)\n[Tests/tests]   \u2699  ::set-output:: rustc_hash=18bf6b4f0\n[Tests/tests]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Tests/tests]   | cargo 1.47.0 (f3c7e066a 2020-08-28)\n[Tests/tests]   \u2699  ::set-output:: cargo=1.47.0 (f3c7e066a 2020-08-28)\n[Tests/tests]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Tests/tests]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Tests/tests]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Tests/tests]   | info: The currently active `rustc` version is `rustc 1.47.0 (18bf6b4f0 2020-10-07)`\n[Tests/tests]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Tests/tests]   \u2753  ::endgroup::\n[Tests/tests]   \u2705  Success - Main Install Rust\n[Tests/tests]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Tests/tests] \u2b50 Run Main Run unit tests\n[Tests/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Tests/tests]   |     Updating crates.io index\n[Tests/tests]   |  Downloading crates ...\n[Tests/tests]   |   Downloaded derive_more v0.99.17\n[Tests/tests]   |   Downloaded getrandom v0.1.16\n[Tests/tests]   |   Downloaded dyn-clone v1.0.11\n[Tests/tests]   |   Downloaded rand_chacha v0.2.2\n[Tests/tests]   |   Downloaded num-rational v0.3.2\n[Tests/tests]   |   Downloaded schemars_derive v0.8.12\n[Tests/tests]   |   Downloaded rustc_version v0.4.0\n[Tests/tests]   |   Downloaded itoa v1.0.6\n[Tests/tests]   |   Downloaded lazy_static v1.4.0\n[Tests/tests]   |   Downloaded unicode-ident v1.0.9\n[Tests/tests]   |   Downloaded crypto-common v0.1.6\n[Tests/tests]   |   Downloaded proc-macro-crate v0.1.5\n[Tests/tests]   |   Downloaded serde_derive_internals v0.26.0\n[Tests/tests]   |   Downloaded signature v1.6.4\n[Tests/tests]   | error: failed to parse manifest at `/home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.4/Cargo.toml`\n[Tests/tests]   | \n[Tests/tests]   | Caused by:\n[Tests/tests]   |   failed to parse the `edition` key\n[Tests/tests]   | \n[Tests/tests]   | Caused by:\n[Tests/tests]   |   this version of Cargo is older than the `2021` edition, and only supports `2015` and `2018` editions.\n[Tests/tests]   \u274c  Failure - Main Run unit tests\n[Tests/tests] exitcode '101': failure\n[Tests/tests] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'tests' failed\n"
}