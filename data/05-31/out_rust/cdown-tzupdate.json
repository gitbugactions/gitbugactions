{
    "repository": "cdown/tzupdate",
    "clone_url": "https://github.com/cdown/tzupdate.git",
    "timestamp": "2023-05-30T08:24:19.721352Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[ci-crawler.yml/Lint ] \ud83d\ude80  Start image=crawlergpt:latest\n[ci-crawler.yml/Test ] \ud83d\ude80  Start image=crawlergpt:latest\n[ci-crawler.yml/Build] \ud83d\ude80  Start image=crawlergpt:latest\n[ci-crawler.yml/Test ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci-crawler.yml/Build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci-crawler.yml/Lint ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci-crawler.yml/Build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci-crawler.yml/Test ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci-crawler.yml/Lint ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci-crawler.yml/Build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci-crawler.yml/Test ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci-crawler.yml/Lint ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci-crawler.yml/Build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/cdown-tzupdate] user=0 workdir=\n[ci-crawler.yml/Build]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=stable\n[ci-crawler.yml/Lint ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/cdown-tzupdate] user=0 workdir=\n[ci-crawler.yml/Lint ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=stable\n[ci-crawler.yml/Build] \u2b50 Run Pre dtolnay/rust-toolchain@stable\n[ci-crawler.yml/Test ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/cdown-tzupdate] user=0 workdir=\n[ci-crawler.yml/Build]   \u2705  Success - Pre dtolnay/rust-toolchain@stable\n[ci-crawler.yml/Test ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=stable\n[ci-crawler.yml/Lint ] \u2b50 Run Pre dtolnay/rust-toolchain@stable\n[ci-crawler.yml/Lint ]   \u2705  Success - Pre dtolnay/rust-toolchain@stable\n[ci-crawler.yml/Build]   \u2601  git clone 'https://github.com/swatinem/rust-cache' # ref=v2\n[ci-crawler.yml/Test ] \u2b50 Run Pre dtolnay/rust-toolchain@stable\n[ci-crawler.yml/Lint ]   \u2601  git clone 'https://github.com/swatinem/rust-cache' # ref=v2\n[ci-crawler.yml/Test ]   \u2705  Success - Pre dtolnay/rust-toolchain@stable\n[ci-crawler.yml/Test ]   \u2601  git clone 'https://github.com/swatinem/rust-cache' # ref=v2\n[ci-crawler.yml/Build] \u2b50 Run Main actions/checkout@v3\n[ci-crawler.yml/Build]   \u2705  Success - Main actions/checkout@v3\n[ci-crawler.yml/Lint ] \u2b50 Run Main actions/checkout@v3\n[ci-crawler.yml/Lint ]   \u2705  Success - Main actions/checkout@v3\n[ci-crawler.yml/Test ] \u2b50 Run Main actions/checkout@v3\n[ci-crawler.yml/Build] \u2b50 Run Main dtolnay/rust-toolchain@stable\n[ci-crawler.yml/Test ]   \u2705  Success - Main actions/checkout@v3\n[ci-crawler.yml/Build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[ci-crawler.yml/Lint ] \u2b50 Run Main dtolnay/rust-toolchain@stable\n[ci-crawler.yml/Build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[ci-crawler.yml/Lint ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[ci-crawler.yml/Build] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[ci-crawler.yml/Lint ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[ci-crawler.yml/Test ] \u2b50 Run Main dtolnay/rust-toolchain@stable\n[ci-crawler.yml/Lint ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[ci-crawler.yml/Test ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[ci-crawler.yml/Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[ci-crawler.yml/Test ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[ci-crawler.yml/Lint ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[ci-crawler.yml/Build]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[ci-crawler.yml/Lint ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[ci-crawler.yml/Test ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[ci-crawler.yml/Lint ]   \u2699  ::set-output:: toolchain=stable\n[ci-crawler.yml/Build]   \u2699  ::set-output:: toolchain=stable\n[ci-crawler.yml/Lint ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[ci-crawler.yml/Test ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[ci-crawler.yml/Build] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[ci-crawler.yml/Lint ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[ci-crawler.yml/Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[ci-crawler.yml/Test ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[ci-crawler.yml/Build]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[ci-crawler.yml/Lint ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[ci-crawler.yml/Test ]   \u2699  ::set-output:: toolchain=stable\n[ci-crawler.yml/Lint ]   \u2699  ::set-output:: targets=\n[ci-crawler.yml/Build]   \u2699  ::set-output:: components=\n[ci-crawler.yml/Lint ]   \u2699  ::set-output:: components=\n[ci-crawler.yml/Build]   \u2699  ::set-output:: downgrade=\n[ci-crawler.yml/Lint ]   \u2699  ::set-output:: downgrade=\n[ci-crawler.yml/Build]   \u2699  ::set-output:: targets=\n[ci-crawler.yml/Build] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[ci-crawler.yml/Lint ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[ci-crawler.yml/Test ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[ci-crawler.yml/Lint ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[ci-crawler.yml/Test ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[ci-crawler.yml/Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[ci-crawler.yml/Test ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[ci-crawler.yml/Lint ]   | info: downloading installer\n[ci-crawler.yml/Build]   | info: downloading installer\n[ci-crawler.yml/Test ]   \u2699  ::set-output:: targets=\n[ci-crawler.yml/Test ]   \u2699  ::set-output:: components=\n[ci-crawler.yml/Test ]   \u2699  ::set-output:: downgrade=\n[ci-crawler.yml/Lint ]   | info: profile set to 'default'\n[ci-crawler.yml/Lint ]   | info: default host triple is x86_64-unknown-linux-gnu\n[ci-crawler.yml/Lint ]   | info: skipping toolchain installation\n[ci-crawler.yml/Lint ]   | \n[ci-crawler.yml/Lint ]   | \n[ci-crawler.yml/Lint ]   | Rust is installed now. Great!\n[ci-crawler.yml/Lint ]   | \n[ci-crawler.yml/Lint ]   | To get started you may need to restart your current shell.\n[ci-crawler.yml/Lint ]   | This would reload your PATH environment variable to include\n[ci-crawler.yml/Lint ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[ci-crawler.yml/Lint ]   | \n[ci-crawler.yml/Lint ]   | To configure your current shell, run:\n[ci-crawler.yml/Lint ]   | source \"$HOME/.cargo/env\"\n[ci-crawler.yml/Lint ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[ci-crawler.yml/Test ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[ci-crawler.yml/Build]   | info: profile set to 'default'\n[ci-crawler.yml/Build]   | info: default host triple is x86_64-unknown-linux-gnu\n[ci-crawler.yml/Build]   | info: skipping toolchain installation\n[ci-crawler.yml/Build]   | \n[ci-crawler.yml/Build]   | \n[ci-crawler.yml/Build]   | Rust is installed now. Great!\n[ci-crawler.yml/Build]   | \n[ci-crawler.yml/Build]   | To get started you may need to restart your current shell.\n[ci-crawler.yml/Build]   | This would reload your PATH environment variable to include\n[ci-crawler.yml/Build]   | Cargo's bin directory ($HOME/.cargo/bin).\n[ci-crawler.yml/Build]   | \n[ci-crawler.yml/Build]   | To configure your current shell, run:\n[ci-crawler.yml/Build]   | source \"$HOME/.cargo/env\"\n[ci-crawler.yml/Build]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[ci-crawler.yml/Lint ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[ci-crawler.yml/Test ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[ci-crawler.yml/Lint ] \u2b50 Run Main rustup toolchain install stable\n[ci-crawler.yml/Test ]   | info: downloading installer\n[ci-crawler.yml/Build]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[ci-crawler.yml/Build] \u2b50 Run Main rustup toolchain install stable\n[ci-crawler.yml/Test ]   | info: profile set to 'default'\n[ci-crawler.yml/Test ]   | info: default host triple is x86_64-unknown-linux-gnu\n[ci-crawler.yml/Test ]   | info: skipping toolchain installation\n[ci-crawler.yml/Test ]   | \n[ci-crawler.yml/Test ]   | \n[ci-crawler.yml/Test ]   | Rust is installed now. Great!\n[ci-crawler.yml/Test ]   | \n[ci-crawler.yml/Test ]   | To get started you may need to restart your current shell.\n[ci-crawler.yml/Test ]   | This would reload your PATH environment variable to include\n[ci-crawler.yml/Test ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[ci-crawler.yml/Test ]   | \n[ci-crawler.yml/Test ]   | To configure your current shell, run:\n[ci-crawler.yml/Test ]   | source \"$HOME/.cargo/env\"\n[ci-crawler.yml/Test ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[ci-crawler.yml/Lint ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[ci-crawler.yml/Lint ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[ci-crawler.yml/Lint ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[ci-crawler.yml/Lint ]   | info: downloading component 'cargo'\n[ci-crawler.yml/Lint ]   | info: downloading component 'rust-std'\n[ci-crawler.yml/Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[ci-crawler.yml/Lint ]   | info: downloading component 'rustc'\n[ci-crawler.yml/Test ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[ci-crawler.yml/Build]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[ci-crawler.yml/Lint ]   | info: installing component 'cargo'\n[ci-crawler.yml/Test ] \u2b50 Run Main rustup toolchain install stable\n[ci-crawler.yml/Build]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[ci-crawler.yml/Build]   | info: downloading component 'cargo'\n[ci-crawler.yml/Build]   | info: downloading component 'rust-std'\n[ci-crawler.yml/Build]   | info: downloading component 'rustc'\n[ci-crawler.yml/Lint ]   | info: installing component 'rust-std'\n[ci-crawler.yml/Test ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[ci-crawler.yml/Build]   | info: installing component 'cargo'\n[ci-crawler.yml/Test ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[ci-crawler.yml/Build]   | info: installing component 'rust-std'\n[ci-crawler.yml/Test ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[ci-crawler.yml/Test ]   | info: downloading component 'cargo'\n[ci-crawler.yml/Test ]   | info: downloading component 'rust-std'\n[ci-crawler.yml/Lint ]   | info: installing component 'rustc'\n[ci-crawler.yml/Test ]   | info: downloading component 'rustc'\n[ci-crawler.yml/Test ]   | info: installing component 'cargo'\n[ci-crawler.yml/Build]   | info: installing component 'rustc'\n[ci-crawler.yml/Test ]   | info: installing component 'rust-std'\n[ci-crawler.yml/Test ]   | info: installing component 'rustc'\n[ci-crawler.yml/Lint ]   | \n[ci-crawler.yml/Lint ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[ci-crawler.yml/Lint ]   | \n[ci-crawler.yml/Lint ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[ci-crawler.yml/Lint ]   \u2705  Success - Main rustup toolchain install stable\n[ci-crawler.yml/Lint ] \u2b50 Run Main rustup default stable\n[ci-crawler.yml/Lint ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[ci-crawler.yml/Build]   | \n[ci-crawler.yml/Build]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[ci-crawler.yml/Build]   | \n[ci-crawler.yml/Build]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[ci-crawler.yml/Build]   \u2705  Success - Main rustup toolchain install stable\n[ci-crawler.yml/Build] \u2b50 Run Main rustup default stable\n[ci-crawler.yml/Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[ci-crawler.yml/Test ]   | \n[ci-crawler.yml/Test ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[ci-crawler.yml/Test ]   | \n[ci-crawler.yml/Test ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[ci-crawler.yml/Test ]   \u2705  Success - Main rustup toolchain install stable\n[ci-crawler.yml/Test ] \u2b50 Run Main rustup default stable\n[ci-crawler.yml/Test ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[ci-crawler.yml/Build]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[ci-crawler.yml/Build]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[ci-crawler.yml/Build]   | \n[ci-crawler.yml/Test ]   | \n[ci-crawler.yml/Test ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[ci-crawler.yml/Test ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[ci-crawler.yml/Lint ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[ci-crawler.yml/Lint ]   | \n[ci-crawler.yml/Lint ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[ci-crawler.yml/Test ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[ci-crawler.yml/Test ]   | \n[ci-crawler.yml/Build]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[ci-crawler.yml/Build]   | \n[ci-crawler.yml/Test ]   \u2705  Success - Main rustup default stable\n[ci-crawler.yml/Lint ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[ci-crawler.yml/Lint ]   | \n[ci-crawler.yml/Build]   \u2705  Success - Main rustup default stable\n[ci-crawler.yml/Lint ]   \u2705  Success - Main rustup default stable\n[ci-crawler.yml/Test ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[ci-crawler.yml/Lint ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[ci-crawler.yml/Build] \u2b50 Run Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[ci-crawler.yml/Lint ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[ci-crawler.yml/Test ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[ci-crawler.yml/Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[ci-crawler.yml/Lint ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[ci-crawler.yml/Build]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[ci-crawler.yml/Test ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[ci-crawler.yml/Build]   \u2699  ::set-output:: cachekey=2023041684c8\n[ci-crawler.yml/Test ]   \u2699  ::set-output:: cachekey=2023041684c8\n[ci-crawler.yml/Lint ]   \u2699  ::set-output:: cachekey=2023041684c8\n[ci-crawler.yml/Build] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[ci-crawler.yml/Test ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[ci-crawler.yml/Lint ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[ci-crawler.yml/Test ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[ci-crawler.yml/Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[ci-crawler.yml/Lint ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[ci-crawler.yml/Lint ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[ci-crawler.yml/Build]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[ci-crawler.yml/Test ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[ci-crawler.yml/Lint ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[ci-crawler.yml/Test ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[ci-crawler.yml/Build]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[ci-crawler.yml/Test ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[ci-crawler.yml/Lint ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[ci-crawler.yml/Build] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[ci-crawler.yml/Lint ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[ci-crawler.yml/Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[ci-crawler.yml/Test ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[ci-crawler.yml/Lint ]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[ci-crawler.yml/Build]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[ci-crawler.yml/Test ]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[ci-crawler.yml/Build]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[ci-crawler.yml/Lint ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[ci-crawler.yml/Test ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[ci-crawler.yml/Build] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[ci-crawler.yml/Lint ] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[ci-crawler.yml/Test ] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[ci-crawler.yml/Lint ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[ci-crawler.yml/Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[ci-crawler.yml/Test ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[ci-crawler.yml/Lint ]   \u2705  Success - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[ci-crawler.yml/Build]   \u2705  Success - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[ci-crawler.yml/Test ]   \u2705  Success - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[ci-crawler.yml/Lint ]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[ci-crawler.yml/Test ]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[ci-crawler.yml/Build]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[ci-crawler.yml/Test ] \u2b50 Run Main rustc +stable --version --verbose\n[ci-crawler.yml/Lint ] \u2b50 Run Main rustc +stable --version --verbose\n[ci-crawler.yml/Build] \u2b50 Run Main rustc +stable --version --verbose\n[ci-crawler.yml/Lint ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-9.sh] user= workdir=\n[ci-crawler.yml/Test ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-9.sh] user= workdir=\n[ci-crawler.yml/Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-9.sh] user= workdir=\n[ci-crawler.yml/Lint ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[ci-crawler.yml/Lint ]   | binary: rustc\n[ci-crawler.yml/Lint ]   | commit-hash: 84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc\n[ci-crawler.yml/Lint ]   | commit-date: 2023-04-16\n[ci-crawler.yml/Lint ]   | host: x86_64-unknown-linux-gnu\n[ci-crawler.yml/Lint ]   | release: 1.69.0\n[ci-crawler.yml/Lint ]   | LLVM version: 15.0.7\n[ci-crawler.yml/Lint ]   \u2705  Success - Main rustc +stable --version --verbose\n[ci-crawler.yml/Test ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[ci-crawler.yml/Test ]   | binary: rustc\n[ci-crawler.yml/Test ]   | commit-hash: 84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc\n[ci-crawler.yml/Test ]   | commit-date: 2023-04-16\n[ci-crawler.yml/Test ]   | host: x86_64-unknown-linux-gnu\n[ci-crawler.yml/Test ]   | release: 1.69.0\n[ci-crawler.yml/Test ]   | LLVM version: 15.0.7\n[ci-crawler.yml/Test ]   \u2705  Success - Main rustc +stable --version --verbose\n[ci-crawler.yml/Build]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[ci-crawler.yml/Build]   | binary: rustc\n[ci-crawler.yml/Build]   | commit-hash: 84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc\n[ci-crawler.yml/Build]   | commit-date: 2023-04-16\n[ci-crawler.yml/Build]   | host: x86_64-unknown-linux-gnu\n[ci-crawler.yml/Build]   | release: 1.69.0\n[ci-crawler.yml/Build]   | LLVM version: 15.0.7\n[ci-crawler.yml/Build]   \u2705  Success - Main rustc +stable --version --verbose\n[ci-crawler.yml/Lint ]   \u2699  ::set-output:: cachekey=2023041684c8\n[ci-crawler.yml/Lint ]   \u2699  ::set-output:: name=stable\n[ci-crawler.yml/Lint ]   \u2705  Success - Main dtolnay/rust-toolchain@stable\n[ci-crawler.yml/Build]   \u2699  ::set-output:: cachekey=2023041684c8\n[ci-crawler.yml/Build]   \u2699  ::set-output:: name=stable\n[ci-crawler.yml/Build]   \u2705  Success - Main dtolnay/rust-toolchain@stable\n[ci-crawler.yml/Test ]   \u2699  ::set-output:: cachekey=2023041684c8\n[ci-crawler.yml/Test ]   \u2699  ::set-output:: name=stable\n[ci-crawler.yml/Test ]   \u2705  Success - Main dtolnay/rust-toolchain@stable\n[ci-crawler.yml/Build] \u2b50 Run Main swatinem/rust-cache@v2\n[ci-crawler.yml/Test ] \u2b50 Run Main swatinem/rust-cache@v2\n[ci-crawler.yml/Lint ] \u2b50 Run Main swatinem/rust-cache@v2\n[ci-crawler.yml/Build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/swatinem-rust-cache@v2/ dst=/var/run/act/actions/swatinem-rust-cache@v2/\n[ci-crawler.yml/Lint ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/swatinem-rust-cache@v2/ dst=/var/run/act/actions/swatinem-rust-cache@v2/\n[ci-crawler.yml/Test ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/swatinem-rust-cache@v2/ dst=/var/run/act/actions/swatinem-rust-cache@v2/\n[ci-crawler.yml/Build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/swatinem-rust-cache@v2/] user=0 workdir=\n[ci-crawler.yml/Lint ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/swatinem-rust-cache@v2/] user=0 workdir=\n[ci-crawler.yml/Test ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/swatinem-rust-cache@v2/] user=0 workdir=\n[ci-crawler.yml/Build] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/images/crawlergpt:latest/json\": context canceled\n",
    "actions_stderr": "panic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x48 pc=0xa13542]\n\ngoroutine 299 [running]:\ngithub.com/nektos/act/pkg/container.(*containerReference).extractFromImageEnv.func1({0xd3dd88, 0xc0005d63c0})\n\t/home/runner/work/act/act/pkg/container/docker_run.go:468 +0x1e2\ngithub.com/nektos/act/pkg/common.Executor.IfNot.func1({0xd3dd88, 0xc0005d63c0})\n\t/home/runner/work/act/act/pkg/common/executor.go:159 +0x56\ngithub.com/nektos/act/pkg/runner.(*RunContext).ApplyExtraPath(0xc00050ce00, {0xd3dd88, 0xc0005d63c0}, 0xc000576ee8)\n\t/home/runner/work/act/act/pkg/runner/run_context.go:305 +0x12b\ngithub.com/nektos/act/pkg/runner.runActionImpl.func1({0xd3dd88, 0xc0005d63c0})\n\t/home/runner/work/act/act/pkg/runner/action.go:159 +0x71d\ngithub.com/nektos/act/pkg/runner.(*stepActionRemote).main.func1({0xd3dd88, 0xc0005d63c0})\n\t/home/runner/work/act/act/pkg/runner/step_action_remote.go:127 +0x3cf\ngithub.com/nektos/act/pkg/runner.runStepExecutor.func1({0xd3dd88, 0xc0005d63c0})\n\t/home/runner/work/act/act/pkg/runner/step.go:137 +0xd39\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xd3dd88, 0xc0005d63c0})\n\t/home/runner/work/act/act/pkg/common/executor.go:141 +0x15b\ngithub.com/nektos/act/pkg/runner.newJobExecutor.func4({0xd3dd88, 0xc0005d63c0})\n\t/home/runner/work/act/act/pkg/runner/job_executor.go:77 +0x5a\ngithub.com/nektos/act/pkg/runner.useStepLogger.func1({0xd3dd88, 0xc0003edf80})\n\t/home/runner/work/act/act/pkg/runner/job_executor.go:191 +0x39e\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xd3dd88, 0xc0003edf80})\n\t/home/runner/work/act/act/pkg/common/executor.go:141 +0x15b\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xd3dd88, 0xc0003edf80})\n\t/home/runner/work/act/act/pkg/common/executor.go:129 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Finally.func1({0xd3dd88, 0xc0003edf80})\n\t/home/runner/work/act/act/pkg/common/executor.go:175 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Finally.func1({0xd3dd88, 0xc0003edf80})\n\t/home/runner/work/act/act/pkg/common/executor.go:175 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Finally.func1({0xd3dd88, 0xc0003edf80})\n\t/home/runner/work/act/act/pkg/common/executor.go:175 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xd3dd88, 0xc0003edf80})\n\t/home/runner/work/act/act/pkg/common/executor.go:141 +0x15b\ngithub.com/nektos/act/pkg/runner.(*RunContext).Executor.func1({0xd3dd88, 0xc0003edf80})\n\t/home/runner/work/act/act/pkg/runner/run_context.go:442 +0x58\ngithub.com/nektos/act/pkg/runner.(*runnerImpl).NewPlanExecutor.func1.1({0xd3dd88, 0xc0002c2390})\n\t/home/runner/work/act/act/pkg/runner/runner.go:145 +0x193\ngithub.com/nektos/act/pkg/common.NewParallelExecutor.func1.1(0x0?, 0x0?)\n\t/home/runner/work/act/act/pkg/common/executor.go:100 +0x5c\ncreated by github.com/nektos/act/pkg/common.NewParallelExecutor.func1\n\t/home/runner/work/act/act/pkg/common/executor.go:98 +0x89\n"
}