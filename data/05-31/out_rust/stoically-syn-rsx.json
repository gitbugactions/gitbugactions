{
    "repository": "stoically/syn-rsx",
    "clone_url": "https://github.com/stoically/syn-rsx.git",
    "timestamp": "2023-05-30T09:41:45.275623Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[ci/ci] \ud83d\ude80  Start image=crawlergpt:latest\n[ci/ci]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci/ci]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/ci]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/ci]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stoically-syn-rsx] user=0 workdir=\n[ci/ci]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=nightly\n[ci/ci] \u2b50 Run Pre dtolnay/rust-toolchain@nightly\n[ci/ci]   \u2705  Success - Pre dtolnay/rust-toolchain@nightly\n[ci/ci]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=stable\n[ci/ci] \u2b50 Run Pre dtolnay/rust-toolchain@stable\n[ci/ci]   \u2705  Success - Pre dtolnay/rust-toolchain@stable\n[ci/ci] \u2b50 Run Main actions/checkout@v3\n[ci/ci]   \u2705  Success - Main actions/checkout@v3\n[ci/ci] \u2b50 Run Main dtolnay/rust-toolchain@nightly\n[ci/ci]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[ci/ci]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@nightly/] user=0 workdir=\n[ci/ci] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[ci/ci]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[ci/ci]   \u2699  ::set-output:: toolchain=nightly\n[ci/ci] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade= --allow-downgrade\" >> $GITHUB_OUTPUT\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[ci/ci]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade= --allow-downgrade\" >> $GITHUB_OUTPUT\n[ci/ci]   \u2699  ::set-output:: targets=\n[ci/ci]   \u2699  ::set-output:: components= --component rustfmt\n[ci/ci]   \u2699  ::set-output:: downgrade= --allow-downgrade\n[ci/ci] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[ci/ci]   | info: downloading installer\n[ci/ci]   | info: profile set to 'default'\n[ci/ci]   | info: default host triple is x86_64-unknown-linux-gnu\n[ci/ci]   | info: skipping toolchain installation\n[ci/ci]   | \n[ci/ci]   | \n[ci/ci]   | Rust is installed now. Great!\n[ci/ci]   | \n[ci/ci]   | To get started you may need to restart your current shell.\n[ci/ci]   | This would reload your PATH environment variable to include\n[ci/ci]   | Cargo's bin directory ($HOME/.cargo/bin).\n[ci/ci]   | \n[ci/ci]   | To configure your current shell, run:\n[ci/ci]   | source \"$HOME/.cargo/env\"\n[ci/ci]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[ci/ci]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[ci/ci] \u2b50 Run Main rustup toolchain install nightly\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[ci/ci]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[ci/ci]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[ci/ci]   | info: downloading component 'cargo'\n[ci/ci]   | info: downloading component 'rust-std'\n[ci/ci]   | info: downloading component 'rustc'\n[ci/ci]   | info: downloading component 'rustfmt'\n[ci/ci]   | info: installing component 'cargo'\n[ci/ci]   | info: installing component 'rust-std'\n[ci/ci]   | info: installing component 'rustc'\n[ci/ci]   | info: installing component 'rustfmt'\n[ci/ci]   | \n[ci/ci]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[ci/ci]   | \n[ci/ci]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[ci/ci]   \u2705  Success - Main rustup toolchain install nightly\n[ci/ci] \u2b50 Run Main rustup default nightly\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[ci/ci]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[ci/ci]   | \n[ci/ci]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[ci/ci]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[ci/ci]   | \n[ci/ci]   \u2705  Success - Main rustup default nightly\n[ci/ci] \u2b50 Run Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[ci/ci]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[ci/ci]   \u2699  ::set-output:: cachekey=202305294985\n[ci/ci] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[ci/ci]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[ci/ci]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[ci/ci] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[ci/ci]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[ci/ci]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[ci/ci] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +nightly --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[ci/ci]   \u2705  Success - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +nightly --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[ci/ci]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[ci/ci] \u2b50 Run Main rustc +nightly --version --verbose\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-9.sh] user= workdir=\n[ci/ci]   | rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[ci/ci]   | binary: rustc\n[ci/ci]   | commit-hash: 498553fc04f6a3fdc53412320f4e913bc53bc267\n[ci/ci]   | commit-date: 2023-05-29\n[ci/ci]   | host: x86_64-unknown-linux-gnu\n[ci/ci]   | release: 1.72.0-nightly\n[ci/ci]   | LLVM version: 16.0.4\n[ci/ci]   \u2705  Success - Main rustc +nightly --version --verbose\n[ci/ci]   \u2699  ::set-output:: cachekey=202305294985\n[ci/ci]   \u2699  ::set-output:: name=nightly\n[ci/ci]   \u2705  Success - Main dtolnay/rust-toolchain@nightly\n[ci/ci] \u2b50 Run Main fmt\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[ci/ci]   \u2705  Success - Main fmt\n[ci/ci] \u2b50 Run Main dtolnay/rust-toolchain@stable\n[ci/ci]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[ci/ci]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[ci/ci] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3-composite-parse.sh] user= workdir=\n[ci/ci]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[ci/ci]   \u2699  ::set-output:: toolchain=stable\n[ci/ci] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3-composite-flags.sh] user= workdir=\n[ci/ci]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[ci/ci]   \u2699  ::set-output:: targets=\n[ci/ci]   \u2699  ::set-output:: components=\n[ci/ci]   \u2699  ::set-output:: downgrade=\n[ci/ci] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3-composite-2.sh] user= workdir=\n[ci/ci]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[ci/ci] \u2b50 Run Main rustup toolchain install stable\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3-composite-3.sh] user= workdir=\n[ci/ci]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[ci/ci]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[ci/ci]   | info: downloading component 'cargo'\n[ci/ci]   | info: downloading component 'rust-std'\n[ci/ci]   | info: downloading component 'rustc'\n[ci/ci]   | info: installing component 'cargo'\n[ci/ci]   | info: installing component 'rust-std'\n[ci/ci]   | info: installing component 'rustc'\n[ci/ci]   | \n[ci/ci]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[ci/ci]   | \n[ci/ci]   \u2705  Success - Main rustup toolchain install stable\n[ci/ci] \u2b50 Run Main rustup default stable\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3-composite-4.sh] user= workdir=\n[ci/ci]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[ci/ci]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[ci/ci]   | \n[ci/ci]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[ci/ci]   | \n[ci/ci]   \u2705  Success - Main rustup default stable\n[ci/ci] \u2b50 Run Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3-composite-rustc-version.sh] user= workdir=\n[ci/ci]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[ci/ci]   \u2699  ::set-output:: cachekey=2023041684c8\n[ci/ci] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3-composite-6.sh] user= workdir=\n[ci/ci]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[ci/ci] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3-composite-7.sh] user= workdir=\n[ci/ci]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[ci/ci] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3-composite-8.sh] user= workdir=\n[ci/ci]   \u2705  Success - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[ci/ci]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[ci/ci] \u2b50 Run Main rustc +stable --version --verbose\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3-composite-9.sh] user= workdir=\n[ci/ci]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[ci/ci]   | binary: rustc\n[ci/ci]   | commit-hash: 84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc\n[ci/ci]   | commit-date: 2023-04-16\n[ci/ci]   | host: x86_64-unknown-linux-gnu\n[ci/ci]   | release: 1.69.0\n[ci/ci]   | LLVM version: 15.0.7\n[ci/ci]   \u2705  Success - Main rustc +stable --version --verbose\n[ci/ci]   \u2699  ::set-output:: cachekey=2023041684c8\n[ci/ci]   \u2699  ::set-output:: name=stable\n[ci/ci]   \u2705  Success - Main dtolnay/rust-toolchain@stable\n[ci/ci] \u2b50 Run Main build\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Updating\u001b[0m crates.io index\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m Downloading\u001b[0m crates ...\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m unicode-ident v1.0.9\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m thiserror-impl v1.0.40\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m thiserror v1.0.40\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m proc-macro2 v1.0.59\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m quote v1.0.28\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m syn v2.0.18\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m syn v1.0.109\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m proc-macro2 v1.0.59\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m unicode-ident v1.0.9\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m quote v1.0.28\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m thiserror v1.0.40\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m syn v1.0.109\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m syn v2.0.18\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m thiserror-impl v1.0.40\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m syn-rsx v0.9.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stoically-syn-rsx)\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m dev [unoptimized + debuginfo] target(s) in 8.29s\n[ci/ci]   \u2705  Success - Main build\n[ci/ci] \u2b50 Run Main test\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m Downloading\u001b[0m crates ...\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m cfg-if v1.0.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m once_cell v1.17.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m lazy_static v1.4.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m scopeguard v1.1.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m plotters-svg v0.3.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m ciborium-io v0.2.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m indenter v0.3.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m crossbeam-epoch v0.9.14\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m either v1.8.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m atty v0.2.14\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m memoffset v0.8.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m cast v0.3.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m same-file v1.0.6\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m oorandom v11.1.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m crossbeam-deque v0.8.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m ciborium-ll v0.2.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m walkdir v2.3.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m criterion-plot v0.5.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m autocfg v1.1.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m tinytemplate v1.2.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m os_str_bytes v6.5.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m clap_lex v0.2.4\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m bitflags v1.3.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m anes v0.1.6\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m plotters-backend v0.3.4\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m ryu v1.0.13\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m num_cpus v1.15.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m itoa v1.0.6\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m ciborium v0.2.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m textwrap v0.16.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serde_derive v1.0.163\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m half v1.8.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m eyre v0.6.8\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m crossbeam-utils v0.8.15\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m num-traits v0.2.15\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m indexmap v1.9.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m rayon-core v1.11.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serde v1.0.163\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m hashbrown v0.12.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m crossbeam-channel v0.5.8\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m criterion v0.4.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m plotters v0.3.4\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serde_json v1.0.96\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m itertools v0.10.5\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m regex-syntax v0.7.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m rayon v1.7.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m clap v3.2.25\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m regex v1.8.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m libc v0.2.144\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m autocfg v1.1.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m crossbeam-utils v0.8.15\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m libc v0.2.144\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m cfg-if v1.0.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde v1.0.163\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m scopeguard v1.1.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m either v1.8.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m rayon-core v1.11.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde_json v1.0.96\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m half v1.8.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m os_str_bytes v6.5.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m ciborium-io v0.2.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m ryu v1.0.13\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m itoa v1.0.6\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m hashbrown v0.12.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m plotters-backend v0.3.4\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m regex-syntax v0.7.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m eyre v0.6.8\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m cast v0.3.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m textwrap v0.16.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m same-file v1.0.6\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m bitflags v1.3.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m anes v0.1.6\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m once_cell v1.17.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m oorandom v11.1.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m lazy_static v1.4.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m indenter v0.3.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde_derive v1.0.163\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m walkdir v2.3.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m itertools v0.10.5\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m clap_lex v0.2.4\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m ciborium-ll v0.2.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m memoffset v0.8.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m crossbeam-epoch v0.9.14\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m num-traits v0.2.15\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m indexmap v1.9.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m plotters-svg v0.3.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m crossbeam-channel v0.5.8\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m clap v3.2.25\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m crossbeam-deque v0.8.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m num_cpus v1.15.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m atty v0.2.14\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m regex v1.8.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m criterion-plot v0.5.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m rayon v1.7.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m plotters v0.3.4\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m ciborium v0.2.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m tinytemplate v1.2.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m criterion v0.4.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m syn-rsx v0.9.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stoically-syn-rsx)\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m test [unoptimized + debuginfo] target(s) in 13.35s\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m unittests src/lib.rs (target/debug/deps/syn_rsx-4d8109bce4993b55)\n[ci/ci]   | \n[ci/ci]   | running 0 tests\n[ci/ci]   | \n[ci/ci]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[ci/ci]   | \n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m tests/test.rs (target/debug/deps/test-0e915bc69a04736e)\n[ci/ci]   | \n[ci/ci]   | running 21 tests\n[ci/ci]   | test test_comment ... ok\n[ci/ci]   | test test_doctype ... ok\n[ci/ci]   | test test_block_as_tag_name ... ok\n[ci/ci]   | test test_block_as_attribute ... ok\n[ci/ci]   | test test_coloned_attribute_name ... ok\n[ci/ci]   | test test_block_as_tag_name_with_closing_tag ... ok\n[ci/ci]   | test test_block_node ... ok\n[ci/ci]   | test test_dashed_attribute_name ... ok\n[ci/ci]   | test test_fragment ... ok\n[ci/ci]   | test test_path_as_tag_name ... ok\n[ci/ci]   | test test_number_of_top_level_nodes ... ok\n[ci/ci]   | test test_flat_tree ... ok\n[ci/ci]   | test test_mixed_colon_and_dash_attribute_name ... ok\n[ci/ci]   | test test_single_element_with_attributes ... ok\n[ci/ci]   | test test_single_element_with_text ... ok\n[ci/ci]   | test test_single_empty_element ... ok\n[ci/ci]   | test test_reserved_keyword_attributes ... ok\n[ci/ci]   | test test_transform_block_none ... ok\n[ci/ci]   | test test_reserved_keywords ... ok\n[ci/ci]   | test test_type_of_top_level_nodes ... ok\n[ci/ci]   | test test_transform_block_some ... ok\n[ci/ci]   | \n[ci/ci]   | test result: ok. 21 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[ci/ci]   | \n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Doc-tests\u001b[0m syn-rsx\n[ci/ci]   | \n[ci/ci]   | running 11 tests\n[ci/ci]   | test src/lib.rs - (line 119) ... ignored\n[ci/ci]   | test src/lib.rs - (line 131) ... ignored\n[ci/ci]   | test src/lib.rs - (line 109) ... ok\n[ci/ci]   | test src/lib.rs - (line 83) ... ok\n[ci/ci]   | test src/config.rs - config::ParserConfig::transform_block (line 56) ... ok\n[ci/ci]   | test src/lib.rs - (line 62) ... ok\n[ci/ci]   | test src/lib.rs - (line 95) ... ok\n[ci/ci]   | test src/lib.rs - (line 5) ... ok\n[ci/ci]   | test src/lib.rs - (line 40) ... ok\n[ci/ci]   | test src/lib.rs - (line 52) ... ok\n[ci/ci]   | test src/lib.rs - (line 73) ... ok\n[ci/ci]   | \n[ci/ci]   | test result: ok. 9 passed; 0 failed; 2 ignored; 0 measured; 0 filtered out; finished in 0.84s\n[ci/ci]   | \n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m syn v2.0.18\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m thiserror-impl v1.0.40\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m thiserror v1.0.40\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m syn-rsx v0.9.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stoically-syn-rsx)\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m html-to-string-macro v0.2.5 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stoically-syn-rsx/examples/html-to-string-macro)\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m test [unoptimized + debuginfo] target(s) in 5.71s\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m unittests src/lib.rs (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stoically-syn-rsx/target/debug/deps/html_to_string_macro-e29380703d17d4c3)\n[ci/ci]   | \n[ci/ci]   | running 0 tests\n[ci/ci]   | \n[ci/ci]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[ci/ci]   | \n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m tests/tests.rs (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stoically-syn-rsx/target/debug/deps/tests-052185d7c38f6137)\n[ci/ci]   | \n[ci/ci]   | running 1 test\n[ci/ci]   | test test ... ok\n[ci/ci]   | \n[ci/ci]   | test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[ci/ci]   | \n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Doc-tests\u001b[0m html-to-string-macro\n[ci/ci]   | \n[ci/ci]   | running 1 test\n[ci/ci]   | test src/lib.rs - html (line 89) ... ok\n[ci/ci]   | \n[ci/ci]   | test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.29s\n[ci/ci]   | \n[ci/ci]   \u2705  Success - Main test\n[ci/ci] \u2b50 Run Main coverage\n[ci/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Updating\u001b[0m crates.io index\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m Downloading\u001b[0m crates ...\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m cargo-tarpaulin v0.25.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Installing\u001b[0m cargo-tarpaulin v0.25.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Updating\u001b[0m crates.io index\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m Downloading\u001b[0m crates ...\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m adler v1.0.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m regex-automata v0.1.10\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m socket2 v0.4.9\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m unicode-width v0.1.10\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m miniz_oxide v0.7.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m tracing-subscriber v0.2.25\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m indexmap v1.8.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m quick-xml v0.28.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m procfs v0.15.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m jobserver v0.1.26\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m object v0.26.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m md5 v0.7.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m strsim v0.8.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m textwrap v0.11.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m tracing-log v0.1.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m tracing-attributes v0.1.24\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m vec_map v0.8.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m humantime v2.1.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m leb128 v0.2.5\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m rustc_version v0.4.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m rustc-demangle v0.1.23\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m semver v1.0.17\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m object v0.30.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m pkg-config v0.3.27\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m toml v0.5.11\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m url v2.3.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m unicode-normalization v0.1.22\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m sharded-slab v0.1.4\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m linux-raw-sys v0.1.4\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m thread_local v1.1.7\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m rustix v0.36.14\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m unicode-bidi v0.3.13\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m regex-syntax v0.6.29\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m tinyvec_macros v0.1.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m libssh2-sys v0.3.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m adler32 v1.2.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m idna v0.3.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m gimli v0.27.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m libz-sys v1.1.9\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m curl-sys v0.4.62+curl-8.1.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m libgit2-sys v0.15.2+1.6.4\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m tinyvec v1.6.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m camino v1.1.4\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m nix v0.26.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m openssl-sys v0.9.88\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m percent-encoding v2.2.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m iana-time-zone v0.1.56\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m humantime-serde v1.1.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m glob v0.3.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m fallible-iterator v0.2.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m clap v2.34.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m cargo-platform v0.1.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m time v0.1.45\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m openssl-probe v0.1.5\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m stable_deref_trait v1.2.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m smallvec v1.10.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m matchers v0.0.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m llvm_profparser v0.3.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m hashbrown v0.11.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m gzip-header v0.3.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m git2 v0.17.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m deflate v0.8.6\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m curl v0.4.44\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m coveralls-api v0.5.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m cargo_metadata v0.15.4\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m ansi_term v0.12.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m pin-project-lite v0.2.9\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m nom v7.1.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m minimal-lexical v0.2.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m memchr v2.5.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m log v0.4.18\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m hex v0.4.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m form_urlencoded v1.1.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m flate2 v1.0.26\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m crc32fast v1.3.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m chrono v0.4.25\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m cc v1.0.79\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m byteorder v1.4.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m anyhow v1.0.71\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m aho-corasick v1.0.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m tracing-core v0.1.31\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m tracing v0.1.37\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m static_assertions v1.1.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m io-lifetimes v1.0.11\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m libc v0.2.144\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m proc-macro2 v1.0.59\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m quote v1.0.28\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m unicode-ident v1.0.9\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m pkg-config v0.3.27\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde v1.0.163\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m cfg-if v1.0.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m autocfg v1.1.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m memchr v2.5.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m crc32fast v1.3.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m semver v1.0.17\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m once_cell v1.17.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m adler v1.0.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m tinyvec_macros v0.1.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m log v0.4.18\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m bitflags v1.3.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m io-lifetimes v1.0.11\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m lazy_static v1.4.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde_json v1.0.96\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m thiserror v1.0.40\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m curl v0.4.44\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m byteorder v1.4.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m camino v1.1.4\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m percent-encoding v2.2.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m openssl-probe v0.1.5\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m pin-project-lite v0.2.9\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m regex-syntax v0.6.29\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m unicode-bidi v0.3.13\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m hashbrown v0.11.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m itoa v1.0.6\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m ryu v1.0.13\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m anyhow v1.0.71\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m rustix v0.36.14\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m iana-time-zone v0.1.56\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m linux-raw-sys v0.1.4\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m minimal-lexical v0.2.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m llvm_profparser v0.3.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m adler32 v1.2.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m regex-syntax v0.7.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m procfs v0.15.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m unicode-width v0.1.10\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m ansi_term v0.12.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m md5 v0.7.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m syn v1.0.109\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m hex v0.4.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m same-file v1.0.6\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m smallvec v1.10.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m vec_map v0.8.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m leb128 v0.2.5\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m humantime v2.1.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m static_assertions v1.1.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m fallible-iterator v0.2.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m stable_deref_trait v1.2.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m strsim v0.8.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m glob v0.3.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m rustc-demangle v0.1.23\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m sharded-slab v0.1.4\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m tinyvec v1.6.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m form_urlencoded v1.1.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m miniz_oxide v0.7.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m textwrap v0.11.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m walkdir v2.3.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m tracing-core v0.1.31\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m thread_local v1.1.7\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m num-traits v0.2.15\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m indexmap v1.8.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m gzip-header v0.3.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m tracing-log v0.1.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m flate2 v1.0.26\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m aho-corasick v1.0.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m nom v7.1.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m quick-xml v0.28.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m deflate v0.8.6\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m syn v2.0.18\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m object v0.26.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m object v0.30.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m unicode-normalization v0.1.22\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m jobserver v0.1.26\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m cc v1.0.79\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m time v0.1.45\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m socket2 v0.4.9\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m atty v0.2.14\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m nix v0.26.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m num_cpus v1.15.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m idna v0.3.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m regex v1.8.3\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m clap v2.34.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m regex-automata v0.1.10\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m url v2.3.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m chrono v0.4.25\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m libz-sys v1.1.9\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m openssl-sys v0.9.88\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m curl-sys v0.4.62+curl-8.1.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m libssh2-sys v0.3.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m libgit2-sys v0.15.2+1.6.4\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m matchers v0.0.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde_derive v1.0.163\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m tracing-attributes v0.1.24\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m thiserror-impl v1.0.40\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m tracing v0.1.37\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m tracing-subscriber v0.2.25\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m git2 v0.17.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m cargo-platform v0.1.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m humantime-serde v1.1.1\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m toml v0.5.11\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m rustc_version v0.4.0\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m cargo-tarpaulin v0.25.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m gimli v0.27.2\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m cargo_metadata v0.15.4\n[ci/ci]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m coveralls-api v0.5.0\n[ci/ci]   \u274c  Failure - Main coverage\n[ci/ci] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/bbc2579948f39210ad0df033826ee5299c156c410c74042f3431607e29d06762/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[ci/ci] \u2b50 Run Post dtolnay/rust-toolchain@stable\n[ci/ci]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[ci/ci]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[ci/ci]   \u2705  Success - Post dtolnay/rust-toolchain@stable\n[ci/ci] \u2b50 Run Post dtolnay/rust-toolchain@nightly\n[ci/ci]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[ci/ci]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@nightly/] user=0 workdir=\n[ci/ci]   \u2705  Success - Post dtolnay/rust-toolchain@nightly\n[ci/ci] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}