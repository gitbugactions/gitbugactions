{"repository": "TheAlgorithms/Java", "clone_url": "https://github.com/TheAlgorithms/Java.git", "timestamp": "2023-05-31T20:31:55.284398Z", "commit_hash": "96c1a96647c947f8f0c531ade3bc18967359e0ea", "commit_message": "Fix empty input handling in FindMax (#4206)\n\n", "related_issues": "", "bug_patch": "diff --git a/src/main/java/com/thealgorithms/maths/FindMax.java b/src/main/java/com/thealgorithms/maths/FindMax.java\nindex a7be869..559424f 100644\n--- a/src/main/java/com/thealgorithms/maths/FindMax.java\n+++ b/src/main/java/com/thealgorithms/maths/FindMax.java\n@@ -24,16 +24,20 @@ public class FindMax {\n     }\n \n     /**\n-     * find max of array\n+     * @brief finds the maximum value stored in the input array\n      *\n-     * @param array the array contains element\n-     * @return max value of given array\n+     * @param array the input array\n+     * @exception IllegalArgumentException input array is empty\n+     * @return the maximum value stored in the input array\n      */\n     public static int findMax(int[] array) {\n-        int max = array[0];\n-        for (int i = 1; i < array.length; ++i) {\n-            if (array[i] > max) {\n-                max = array[i];\n+        if (array.length == 0) {\n+            throw new IllegalArgumentException(\"array must be non-empty.\");\n+        }\n+        int max = Integer.MIN_VALUE;\n+        for (final var value : array) {\n+            if (value > max) {\n+                max = value;\n             }\n         }\n         return max;\n", "test_patch": "diff --git a/src/test/java/com/thealgorithms/maths/FindMaxTest.java b/src/test/java/com/thealgorithms/maths/FindMaxTest.java\nindex 43daaea..a7a18fe 100644\n--- a/src/test/java/com/thealgorithms/maths/FindMaxTest.java\n+++ b/src/test/java/com/thealgorithms/maths/FindMaxTest.java\n@@ -1,16 +1,41 @@\n package com.thealgorithms.maths;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n \n import org.junit.jupiter.api.Test;\n \n public class FindMaxTest {\n \n     @Test\n-    public void testFindMaxValue() {\n+    public void testFindMax0() {\n         assertEquals(\n             10,\n             FindMax.findMax(new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 })\n         );\n     }\n+\n+    @Test\n+    public void testFindMax1() {\n+        assertEquals(\n+            7,\n+            FindMax.findMax(new int[] { 6, 3, 5, 1, 7, 4, 1 })\n+        );\n+    }\n+\n+    @Test\n+    public void testFindMax2() {\n+        assertEquals(\n+            10,\n+            FindMax.findMax(new int[] { 10, 0 })\n+        );\n+    }\n+\n+    @Test\n+    public void testFindMaxThrowsExceptionForEmptyInput() {\n+        assertThrows(\n+            IllegalArgumentException.class,\n+            () -> FindMax.findMax(new int[]{})\n+        );\n+    }\n }\n"}
{"repository": "TheAlgorithms/Java", "clone_url": "https://github.com/TheAlgorithms/Java.git", "timestamp": "2023-05-31T20:39:53.762778Z", "commit_hash": "e14b30b88c0de95186fe1937f795b7d8fd3fa8aa", "commit_message": "Fix empty input handling in GCD (#4199)\n\n", "related_issues": "", "bug_patch": "diff --git a/src/main/java/com/thealgorithms/maths/GCD.java b/src/main/java/com/thealgorithms/maths/GCD.java\nindex c05f963..96a2b47 100644\n--- a/src/main/java/com/thealgorithms/maths/GCD.java\n+++ b/src/main/java/com/thealgorithms/maths/GCD.java\n@@ -33,15 +33,15 @@ public class GCD {\n     }\n \n     /**\n-     * get greatest common divisor in array\n+     * @brief computes gcd of an array of numbers\n      *\n-     * @param number contains number\n-     * @return gcd\n+     * @param numbers the input array\n+     * @return gcd of all of the numbers in the input array\n      */\n-    public static int gcd(int[] number) {\n-        int result = number[0];\n-        for (int i = 1; i < number.length; i++) { // call gcd function (input two value)\n-            result = gcd(result, number[i]);\n+    public static int gcd(int[] numbers) {\n+        int result = 0;\n+        for (final var number : numbers) {\n+            result = gcd(result, number);\n         }\n \n         return result;\n", "test_patch": "diff --git a/src/test/java/com/thealgorithms/maths/GCDTest.java b/src/test/java/com/thealgorithms/maths/GCDTest.java\nindex e18d3ea..bbf10ca 100644\n--- a/src/test/java/com/thealgorithms/maths/GCDTest.java\n+++ b/src/test/java/com/thealgorithms/maths/GCDTest.java\n@@ -48,4 +48,19 @@ public class GCDTest {\n     void test7() {\n         Assertions.assertEquals(GCD.gcd(9, 6), 3);\n     }\n+    \n+    @Test\n+    void testArrayGcd1() {\n+        Assertions.assertEquals(GCD.gcd(new int[]{9, 6}), 3);\n+    }\n+\n+    @Test\n+    void testArrayGcd2() {\n+        Assertions.assertEquals(GCD.gcd(new int[]{2*3*5*7, 2*5*5*5, 2*5*11, 5*5*5*13}), 5);\n+    }\n+    \n+    @Test\n+    void testArrayGcdForEmptyInput() {\n+        Assertions.assertEquals(GCD.gcd(new int[]{}), 0);\n+    }    \n }\n"}
