{
    "repository": "alexflint/go-filemutex",
    "clone_url": "https://github.com/alexflint/go-filemutex.git",
    "timestamp": "2023-05-30T11:29:15.395613Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Go/Build and test (Linux)  ] \ud83d\ude80  Start image=crawlergpt:latest\n[Go/Build and test (macOS)  ] \ud83d\ude80  Start image=crawlergpt:latest\n[Go/Build and test (Windows)] \ud83d\ude80  Start image=crawlergpt:latest\n[Go/Build and test (Windows)]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go/Build and test (Linux)  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go/Build and test (macOS)  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go/Build and test (Windows)]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/Build and test (macOS)  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/Build and test (Linux)  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/Build and test (Linux)  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/Build and test (Windows)]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/Build and test (macOS)  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/Build and test (Linux)  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/alexflint-go-filemutex] user=0 workdir=\n[Go/Build and test (Windows)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/alexflint-go-filemutex] user=0 workdir=\n[Go/Build and test (Linux)  ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v1\n[Go/Build and test (macOS)  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/alexflint-go-filemutex] user=0 workdir=\n[Go/Build and test (Linux)  ] \ud83e\uddea  Matrix: map[go:1.13]\n[Go/Build and test (Linux)  ] \u2b50 Run Main Set up Go\n[Go/Build and test (Linux)  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v1/ dst=/var/run/act/actions/actions-setup-go@v1/\n[Go/Build and test (Windows)]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v1\n[Go/Build and test (Linux)  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v1/] user=0 workdir=\n[Go/Build and test (Windows)] \ud83e\uddea  Matrix: map[go:1.13]\n[Go/Build and test (Windows)] \u2b50 Run Main Set up Go\n[Go/Build and test (Linux)  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v1/lib/setup-go.js] user= workdir=\n[Go/Build and test (Windows)]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v1/ dst=/var/run/act/actions/actions-setup-go@v1/\n[Go/Build and test (macOS)  ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v1\n[Go/Build and test (macOS)  ] \ud83e\uddea  Matrix: map[go:1.13]\n[Go/Build and test (macOS)  ] \u2b50 Run Main Set up Go\n[Go/Build and test (Windows)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v1/] user=0 workdir=\n[Go/Build and test (macOS)  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v1/ dst=/var/run/act/actions/actions-setup-go@v1/\n[Go/Build and test (macOS)  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v1/] user=0 workdir=\n[Go/Build and test (Windows)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v1/lib/setup-go.js] user= workdir=\n[Go/Build and test (Linux)  ]   \ud83d\udcac  ::debug::evaluating 19 versions\n[Go/Build and test (Linux)  ]   \ud83d\udcac  ::debug::matched: 1.13.15\n[Go/Build and test (Linux)  ]   \ud83d\udcac  ::debug::isExplicit: 1.13.15\n[Go/Build and test (Linux)  ]   \ud83d\udcac  ::debug::explicit? true\n[Go/Build and test (Linux)  ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.13.15/x64\n[Go/Build and test (Linux)  ]   \ud83d\udcac  ::debug::not found\n[Go/Build and test (Linux)  ]   \ud83d\udcac  ::debug::Downloading Go from: https://storage.googleapis.com/golang/go1.13.15.linux-amd64.tar.gz\n[Go/Build and test (Linux)  ]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.13.15.linux-amd64.tar.gz\n[Go/Build and test (Linux)  ]   \ud83d\udcac  ::debug::Downloading /tmp/cd60ea21-84b4-4399-aeb1-48554e69a6bc\n[Go/Build and test (Linux)  ]   \ud83d\udcac  ::debug::download complete\n[Go/Build and test (Linux)  ]   | [command]/usr/bin/tar xzC /tmp/a981850e-44f8-40b0-86b5-b305146accca -f /tmp/cd60ea21-84b4-4399-aeb1-48554e69a6bc\n[Go/Build and test (Linux)  ]   \ud83d\udcac  ::debug::Caching tool go 1.13.15 x64\n[Go/Build and test (Linux)  ]   \ud83d\udcac  ::debug::source dir: /tmp/a981850e-44f8-40b0-86b5-b305146accca/go\n[Go/Build and test (Linux)  ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.13.15/x64\n[Go/Build and test (Linux)  ]   \ud83d\udcac  ::debug::finished caching tool\n[Go/Build and test (Linux)  ]   \ud83d\udcac  ::debug::Go tool is cached under /opt/hostedtoolcache/go/1.13.15/x64\n[Go/Build and test (Linux)  ]   \u2753 add-matcher /run/act/actions/actions-setup-go@v1/.github/go.json\n[Go/Build and test (Linux)  ]   \u2705  Success - Main Set up Go\n[Go/Build and test (Linux)  ]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.13.15/x64\n[Go/Build and test (Linux)  ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.13.15/x64/bin\n[Go/Build and test (Linux)  ] \u2b50 Run Main Checkout\n[Go/Build and test (Linux)  ]   \u2705  Success - Main Checkout\n[Go/Build and test (Linux)  ] \u2b50 Run Main Build\n[Go/Build and test (Linux)  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Go/Build and test (macOS)  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v1/lib/setup-go.js] user= workdir=\n[Go/Build and test (Windows)]   \ud83d\udcac  ::debug::evaluating 19 versions\n[Go/Build and test (Windows)]   \ud83d\udcac  ::debug::matched: 1.13.15\n[Go/Build and test (Windows)]   \ud83d\udcac  ::debug::isExplicit: 1.13.15\n[Go/Build and test (Windows)]   \ud83d\udcac  ::debug::explicit? true\n[Go/Build and test (Windows)]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.13.15/x64\n[Go/Build and test (Windows)]   \ud83d\udcac  ::debug::not found\n[Go/Build and test (Windows)]   \ud83d\udcac  ::debug::Downloading Go from: https://storage.googleapis.com/golang/go1.13.15.linux-amd64.tar.gz\n[Go/Build and test (Windows)]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.13.15.linux-amd64.tar.gz\n[Go/Build and test (Windows)]   \ud83d\udcac  ::debug::Downloading /tmp/22797276-aa63-4fe5-a9a4-b58dfcc7a4eb\n[Go/Build and test (Linux)  ]   | go: downloading golang.org/x/sys v0.0.0-20210616094352-59db8d763f22\n[Go/Build and test (Linux)  ]   | go: extracting golang.org/x/sys v0.0.0-20210616094352-59db8d763f22\n[Go/Build and test (Linux)  ]   | go: finding golang.org/x/sys v0.0.0-20210616094352-59db8d763f22\n[Go/Build and test (Linux)  ]   | golang.org/x/sys/internal/unsafeheader\n[Go/Build and test (Linux)  ]   | golang.org/x/sys/unix\n[Go/Build and test (Linux)  ]   | github.com/alexflint/go-filemutex\n[Go/Build and test (Linux)  ]   \u2705  Success - Main Build\n[Go/Build and test (Linux)  ] \u2b50 Run Main Test\n[Go/Build and test (Windows)]   \ud83d\udcac  ::debug::download complete\n[Go/Build and test (Windows)]   | [command]/usr/bin/tar xzC /tmp/b0d6d087-e6c6-4814-ae3b-917afea21404 -f /tmp/22797276-aa63-4fe5-a9a4-b58dfcc7a4eb\n[Go/Build and test (Linux)  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Go/Build and test (Windows)]   \ud83d\udcac  ::debug::Caching tool go 1.13.15 x64\n[Go/Build and test (Windows)]   \ud83d\udcac  ::debug::source dir: /tmp/b0d6d087-e6c6-4814-ae3b-917afea21404/go\n[Go/Build and test (Windows)]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.13.15/x64\n[Go/Build and test (Windows)]   \ud83d\udcac  ::debug::finished caching tool\n[Go/Build and test (Windows)]   \ud83d\udcac  ::debug::Go tool is cached under /opt/hostedtoolcache/go/1.13.15/x64\n[Go/Build and test (Windows)]   \u2753 add-matcher /run/act/actions/actions-setup-go@v1/.github/go.json\n[Go/Build and test (Windows)]   \u2705  Success - Main Set up Go\n[Go/Build and test (Linux)  ]   | go: downloading github.com/stretchr/testify v1.4.0\n[Go/Build and test (Windows)]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.13.15/x64\n[Go/Build and test (Linux)  ]   | go: extracting github.com/stretchr/testify v1.4.0\n[Go/Build and test (Linux)  ]   | go: downloading github.com/davecgh/go-spew v1.1.0\n[Go/Build and test (Linux)  ]   | go: downloading gopkg.in/yaml.v2 v2.2.2\n[Go/Build and test (Linux)  ]   | go: downloading github.com/pmezard/go-difflib v1.0.0\n[Go/Build and test (Linux)  ]   | go: extracting github.com/pmezard/go-difflib v1.0.0\n[Go/Build and test (Linux)  ]   | go: extracting github.com/davecgh/go-spew v1.1.0\n[Go/Build and test (Linux)  ]   | go: extracting gopkg.in/yaml.v2 v2.2.2\n[Go/Build and test (Linux)  ]   | go: finding github.com/stretchr/testify v1.4.0\n[Go/Build and test (Linux)  ]   | go: finding github.com/davecgh/go-spew v1.1.0\n[Go/Build and test (Linux)  ]   | go: finding github.com/pmezard/go-difflib v1.0.0\n[Go/Build and test (Linux)  ]   | go: finding gopkg.in/yaml.v2 v2.2.2\n[Go/Build and test (macOS)  ]   \ud83d\udcac  ::debug::evaluating 19 versions\n[Go/Build and test (macOS)  ]   \ud83d\udcac  ::debug::matched: 1.13.15\n[Go/Build and test (macOS)  ]   \ud83d\udcac  ::debug::isExplicit: 1.13.15\n[Go/Build and test (macOS)  ]   \ud83d\udcac  ::debug::explicit? true\n[Go/Build and test (macOS)  ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.13.15/x64\n[Go/Build and test (macOS)  ]   \ud83d\udcac  ::debug::not found\n[Go/Build and test (macOS)  ]   \ud83d\udcac  ::debug::Downloading Go from: https://storage.googleapis.com/golang/go1.13.15.linux-amd64.tar.gz\n[Go/Build and test (macOS)  ]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.13.15.linux-amd64.tar.gz\n[Go/Build and test (macOS)  ]   \ud83d\udcac  ::debug::Downloading /tmp/b897be22-5edf-437f-a1eb-5c1ebebaa487\n[Go/Build and test (Windows)]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.13.15/x64/bin\n[Go/Build and test (Windows)] \u2b50 Run Main Checkout\n[Go/Build and test (Windows)]   \u2705  Success - Main Checkout\n[Go/Build and test (Windows)] \u2b50 Run Main Build\n[Go/Build and test (Linux)  ]   | === RUN   TestLockUnlock\n[Go/Build and test (Linux)  ]   | --- PASS: TestLockUnlock (0.00s)\n[Go/Build and test (Linux)  ]   | === RUN   TestTryLockUnlock\n[Go/Build and test (Linux)  ]   | --- PASS: TestTryLockUnlock (0.00s)\n[Go/Build and test (Linux)  ]   | === RUN   TestRLockUnlock\n[Go/Build and test (Linux)  ]   | --- PASS: TestRLockUnlock (0.00s)\n[Go/Build and test (Linux)  ]   | === RUN   TestClose\n[Go/Build and test (Linux)  ]   | --- PASS: TestClose (0.01s)\n[Go/Build and test (Linux)  ]   | === RUN   TestOnlyClose\n[Go/Build and test (Linux)  ]   | --- PASS: TestOnlyClose (0.00s)\n[Go/Build and test (Linux)  ]   | === RUN   TestLockErrorsAreRecoverable\n[Go/Build and test (Linux)  ]   | --- PASS: TestLockErrorsAreRecoverable (0.00s)\n[Go/Build and test (Linux)  ]   | === RUN   TestUnlockErrorsAreRecoverable\n[Go/Build and test (Linux)  ]   | --- PASS: TestUnlockErrorsAreRecoverable (0.00s)\n[Go/Build and test (Linux)  ]   | === RUN   TestRLockErrorsAreRecoverable\n[Go/Build and test (Linux)  ]   | --- PASS: TestRLockErrorsAreRecoverable (0.00s)\n[Go/Build and test (Linux)  ]   | === RUN   TestRUnlockErrorsAreRecoverable\n[Go/Build and test (Linux)  ]   | --- PASS: TestRUnlockErrorsAreRecoverable (0.00s)\n[Go/Build and test (Linux)  ]   | PASS\n[Go/Build and test (Linux)  ]   | ok  \tgithub.com/alexflint/go-filemutex\t0.071s\n[Go/Build and test (Linux)  ]   \u2705  Success - Main Test\n[Go/Build and test (macOS)  ]   \ud83d\udcac  ::debug::download complete\n[Go/Build and test (macOS)  ]   | [command]/usr/bin/tar xzC /tmp/169e1115-aabe-4b2a-bc4f-a7ac22838513 -f /tmp/b897be22-5edf-437f-a1eb-5c1ebebaa487\n[Go/Build and test (Windows)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Go/Build and test (macOS)  ]   \ud83d\udcac  ::debug::Caching tool go 1.13.15 x64\n[Go/Build and test (macOS)  ]   \ud83d\udcac  ::debug::source dir: /tmp/169e1115-aabe-4b2a-bc4f-a7ac22838513/go\n[Go/Build and test (macOS)  ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.13.15/x64\n[Go/Build and test (Windows)]   | go: downloading golang.org/x/sys v0.0.0-20210616094352-59db8d763f22\n[Go/Build and test (Windows)]   | go: extracting golang.org/x/sys v0.0.0-20210616094352-59db8d763f22\n[Go/Build and test (Windows)]   | go: finding golang.org/x/sys v0.0.0-20210616094352-59db8d763f22\n[Go/Build and test (Windows)]   | golang.org/x/sys/internal/unsafeheader\n[Go/Build and test (Windows)]   | golang.org/x/sys/unix\n[Go/Build and test (Windows)]   | github.com/alexflint/go-filemutex\n[Go/Build and test (Windows)]   \u2705  Success - Main Build\n[Go/Build and test (Linux)  ] \ud83c\udfc1  Job succeeded\n[Go/Build and test (Windows)] \u2b50 Run Main Test\n[Go/Build and test (Windows)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Go/Build and test (macOS)  ]   \ud83d\udcac  ::debug::finished caching tool\n[Go/Build and test (macOS)  ]   \ud83d\udcac  ::debug::Go tool is cached under /opt/hostedtoolcache/go/1.13.15/x64\n[Go/Build and test (macOS)  ]   \u2753 add-matcher /run/act/actions/actions-setup-go@v1/.github/go.json\n[Go/Build and test (macOS)  ]   \u2705  Success - Main Set up Go\n[Go/Build and test (macOS)  ]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.13.15/x64\n[Go/Build and test (macOS)  ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.13.15/x64/bin\n[Go/Build and test (macOS)  ] \u2b50 Run Main Checkout\n[Go/Build and test (macOS)  ]   \u2705  Success - Main Checkout\n[Go/Build and test (macOS)  ] \u2b50 Run Main Build\n[Go/Build and test (macOS)  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Go/Build and test (Windows)]   | go: downloading github.com/stretchr/testify v1.4.0\n[Go/Build and test (Windows)]   | go: extracting github.com/stretchr/testify v1.4.0\n[Go/Build and test (Windows)]   | go: downloading gopkg.in/yaml.v2 v2.2.2\n[Go/Build and test (Windows)]   | go: downloading github.com/davecgh/go-spew v1.1.0\n[Go/Build and test (Windows)]   | go: downloading github.com/pmezard/go-difflib v1.0.0\n[Go/Build and test (Windows)]   | go: extracting gopkg.in/yaml.v2 v2.2.2\n[Go/Build and test (Windows)]   | go: extracting github.com/pmezard/go-difflib v1.0.0\n[Go/Build and test (Windows)]   | go: extracting github.com/davecgh/go-spew v1.1.0\n[Go/Build and test (Windows)]   | go: finding github.com/stretchr/testify v1.4.0\n[Go/Build and test (macOS)  ]   | go: downloading golang.org/x/sys v0.0.0-20210616094352-59db8d763f22\n[Go/Build and test (Windows)]   | go: finding github.com/davecgh/go-spew v1.1.0\n[Go/Build and test (Windows)]   | go: finding github.com/pmezard/go-difflib v1.0.0\n[Go/Build and test (Windows)]   | go: finding gopkg.in/yaml.v2 v2.2.2\n[Go/Build and test (macOS)  ]   | go: extracting golang.org/x/sys v0.0.0-20210616094352-59db8d763f22\n[Go/Build and test (macOS)  ]   | go: finding golang.org/x/sys v0.0.0-20210616094352-59db8d763f22\n[Go/Build and test (macOS)  ]   | golang.org/x/sys/internal/unsafeheader\n[Go/Build and test (macOS)  ]   | golang.org/x/sys/unix\n[Go/Build and test (macOS)  ]   | github.com/alexflint/go-filemutex\n[Go/Build and test (macOS)  ]   \u2705  Success - Main Build\n[Go/Build and test (macOS)  ] \u2b50 Run Main Test\n[Go/Build and test (macOS)  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Go/Build and test (Windows)]   | === RUN   TestLockUnlock\n[Go/Build and test (Windows)]   | --- PASS: TestLockUnlock (0.00s)\n[Go/Build and test (Windows)]   | === RUN   TestTryLockUnlock\n[Go/Build and test (Windows)]   | --- PASS: TestTryLockUnlock (0.00s)\n[Go/Build and test (Windows)]   | === RUN   TestRLockUnlock\n[Go/Build and test (Windows)]   | --- PASS: TestRLockUnlock (0.00s)\n[Go/Build and test (Windows)]   | === RUN   TestClose\n[Go/Build and test (Windows)]   | --- PASS: TestClose (0.00s)\n[Go/Build and test (Windows)]   | === RUN   TestOnlyClose\n[Go/Build and test (Windows)]   | --- PASS: TestOnlyClose (0.00s)\n[Go/Build and test (Windows)]   | === RUN   TestLockErrorsAreRecoverable\n[Go/Build and test (Windows)]   | --- PASS: TestLockErrorsAreRecoverable (0.00s)\n[Go/Build and test (Windows)]   | === RUN   TestUnlockErrorsAreRecoverable\n[Go/Build and test (Windows)]   | --- PASS: TestUnlockErrorsAreRecoverable (0.00s)\n[Go/Build and test (Windows)]   | === RUN   TestRLockErrorsAreRecoverable\n[Go/Build and test (Windows)]   | --- PASS: TestRLockErrorsAreRecoverable (0.00s)\n[Go/Build and test (Windows)]   | === RUN   TestRUnlockErrorsAreRecoverable\n[Go/Build and test (Windows)]   | --- PASS: TestRUnlockErrorsAreRecoverable (0.00s)\n[Go/Build and test (Windows)]   | PASS\n[Go/Build and test (Windows)]   | ok  \tgithub.com/alexflint/go-filemutex\t0.019s\n[Go/Build and test (Windows)]   \u2705  Success - Main Test\n[Go/Build and test (Windows)] \ud83c\udfc1  Job succeeded\n[Go/Build and test (macOS)  ]   | go: downloading github.com/stretchr/testify v1.4.0\n[Go/Build and test (macOS)  ]   | go: extracting github.com/stretchr/testify v1.4.0\n[Go/Build and test (macOS)  ]   | go: downloading gopkg.in/yaml.v2 v2.2.2\n[Go/Build and test (macOS)  ]   | go: downloading github.com/davecgh/go-spew v1.1.0\n[Go/Build and test (macOS)  ]   | go: downloading github.com/pmezard/go-difflib v1.0.0\n[Go/Build and test (macOS)  ]   | go: extracting gopkg.in/yaml.v2 v2.2.2\n[Go/Build and test (macOS)  ]   | go: extracting github.com/pmezard/go-difflib v1.0.0\n[Go/Build and test (macOS)  ]   | go: extracting github.com/davecgh/go-spew v1.1.0\n[Go/Build and test (macOS)  ]   | go: finding github.com/stretchr/testify v1.4.0\n[Go/Build and test (macOS)  ]   | go: finding github.com/davecgh/go-spew v1.1.0\n[Go/Build and test (macOS)  ]   | go: finding github.com/pmezard/go-difflib v1.0.0\n[Go/Build and test (macOS)  ]   | go: finding gopkg.in/yaml.v2 v2.2.2\n[Go/Build and test (macOS)  ]   | === RUN   TestLockUnlock\n[Go/Build and test (macOS)  ]   | --- PASS: TestLockUnlock (0.00s)\n[Go/Build and test (macOS)  ]   | === RUN   TestTryLockUnlock\n[Go/Build and test (macOS)  ]   | --- PASS: TestTryLockUnlock (0.00s)\n[Go/Build and test (macOS)  ]   | === RUN   TestRLockUnlock\n[Go/Build and test (macOS)  ]   | --- PASS: TestRLockUnlock (0.00s)\n[Go/Build and test (macOS)  ]   | === RUN   TestClose\n[Go/Build and test (macOS)  ]   | --- PASS: TestClose (0.00s)\n[Go/Build and test (macOS)  ]   | === RUN   TestOnlyClose\n[Go/Build and test (macOS)  ]   | --- PASS: TestOnlyClose (0.00s)\n[Go/Build and test (macOS)  ]   | === RUN   TestLockErrorsAreRecoverable\n[Go/Build and test (macOS)  ]   | --- PASS: TestLockErrorsAreRecoverable (0.00s)\n[Go/Build and test (macOS)  ]   | === RUN   TestUnlockErrorsAreRecoverable\n[Go/Build and test (macOS)  ]   | --- PASS: TestUnlockErrorsAreRecoverable (0.00s)\n[Go/Build and test (macOS)  ]   | === RUN   TestRLockErrorsAreRecoverable\n[Go/Build and test (macOS)  ]   | --- PASS: TestRLockErrorsAreRecoverable (0.00s)\n[Go/Build and test (macOS)  ]   | === RUN   TestRUnlockErrorsAreRecoverable\n[Go/Build and test (macOS)  ]   | --- PASS: TestRUnlockErrorsAreRecoverable (0.00s)\n[Go/Build and test (macOS)  ]   | PASS\n[Go/Build and test (macOS)  ]   | ok  \tgithub.com/alexflint/go-filemutex\t0.221s\n[Go/Build and test (macOS)  ]   \u2705  Success - Main Test\n[Go/Build and test (macOS)  ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}