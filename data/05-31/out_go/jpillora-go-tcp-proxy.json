{
    "repository": "jpillora/go-tcp-proxy",
    "clone_url": "https://github.com/jpillora/go-tcp-proxy.git",
    "timestamp": "2023-05-30T10:54:47.788952Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/Test   ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Release] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Test   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Release]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Release]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Release]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Release]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/jpillora-go-tcp-proxy] user=0 workdir=\n[CI/Test   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/jpillora-go-tcp-proxy] user=0 workdir=\n[CI/Test   ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v1\n[CI/Test   ] \ud83e\uddea  Matrix: map[go-version:1.13.x platform:ubuntu-latest]\n[CI/Test   ] \u2b50 Run Main Install Go\n[CI/Release] \u2b50 Run Main Check out code\n[CI/Release]   \u2705  Success - Main Check out code\n[CI/Test   ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v1/ dst=/var/run/act/actions/actions-setup-go@v1/\n[CI/Test   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v1/] user=0 workdir=\n[CI/Release] \u2b50 Run Main goreleaser\n[CI/Release]   \ud83d\udc33  docker pull image=goreleaser/goreleaser:latest platform= username= forcePull=false\n[CI/Test   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v1/lib/setup-go.js] user= workdir=\n[CI/Test   ]   \ud83d\udcac  ::debug::evaluating 19 versions\n[CI/Test   ]   \ud83d\udcac  ::debug::matched: 1.13.15\n[CI/Test   ]   \ud83d\udcac  ::debug::isExplicit: 1.13.15\n[CI/Test   ]   \ud83d\udcac  ::debug::explicit? true\n[CI/Test   ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.13.15/x64\n[CI/Test   ]   \ud83d\udcac  ::debug::not found\n[CI/Test   ]   \ud83d\udcac  ::debug::Downloading Go from: https://storage.googleapis.com/golang/go1.13.15.linux-amd64.tar.gz\n[CI/Test   ]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.13.15.linux-amd64.tar.gz\n[CI/Test   ]   \ud83d\udcac  ::debug::Downloading /tmp/404befad-1df8-49fe-b632-d302868653e6\n[CI/Release]   \ud83d\udc33  docker create image=goreleaser/goreleaser:latest platform= entrypoint=[] cmd=[\"release\" \"--config\" \".github/goreleaser.yml\"]\n[CI/Test   ]   \ud83d\udcac  ::debug::download complete\n[CI/Test   ]   | [command]/usr/bin/tar xzC /tmp/c7183193-14cf-4d6d-bb65-969fdb1f3aa1 -f /tmp/404befad-1df8-49fe-b632-d302868653e6\n[CI/Test   ]   \ud83d\udcac  ::debug::Caching tool go 1.13.15 x64\n[CI/Test   ]   \ud83d\udcac  ::debug::source dir: /tmp/c7183193-14cf-4d6d-bb65-969fdb1f3aa1/go\n[CI/Test   ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.13.15/x64\n[CI/Test   ]   \ud83d\udcac  ::debug::finished caching tool\n[CI/Test   ]   \ud83d\udcac  ::debug::Go tool is cached under /opt/hostedtoolcache/go/1.13.15/x64\n[CI/Test   ]   \u2753 add-matcher /run/act/actions/actions-setup-go@v1/.github/go.json\n[CI/Test   ]   \u2705  Success - Main Install Go\n[CI/Test   ]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.13.15/x64\n[CI/Test   ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.13.15/x64/bin\n[CI/Test   ] \u2b50 Run Main Checkout code\n[CI/Test   ]   \u2705  Success - Main Checkout code\n[CI/Test   ] \u2b50 Run Main Build\n[CI/Test   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/Test   ]   | go: downloading github.com/mgutz/ansi v0.0.0-20170206155736-9520e82c474b\n[CI/Test   ]   | go: extracting github.com/mgutz/ansi v0.0.0-20170206155736-9520e82c474b\n[CI/Test   ]   | go: downloading github.com/mattn/go-colorable v0.1.4\n[CI/Test   ]   | go: extracting github.com/mattn/go-colorable v0.1.4\n[CI/Test   ]   | go: downloading github.com/mattn/go-isatty v0.0.8\n[CI/Test   ]   | go: extracting github.com/mattn/go-isatty v0.0.8\n[CI/Test   ]   | go: downloading golang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223\n[CI/Test   ]   | go: extracting golang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223\n[CI/Test   ]   | go: finding github.com/mgutz/ansi v0.0.0-20170206155736-9520e82c474b\n[CI/Test   ]   | go: finding github.com/mattn/go-colorable v0.1.4\n[CI/Test   ]   | go: finding github.com/mattn/go-isatty v0.0.8\n[CI/Test   ]   | go: finding golang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223\n[CI/Test   ]   | golang.org/x/sys/unix\n[CI/Test   ]   | github.com/mattn/go-isatty\n[CI/Test   ]   | github.com/mattn/go-colorable\n[CI/Test   ]   | github.com/mgutz/ansi\n[CI/Test   ]   | github.com/jpillora/go-tcp-proxy\n[CI/Test   ]   \u2705  Success - Main Build\n[CI/Test   ] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/d389487153590828554c60b0a7c967b1f539fe5deba0e7ceb6436984f812661f?force=1&v=1\": context deadline exceeded\n[CI/Test   ] \ud83c\udfc1  Job succeeded\n[CI/Release]   \ud83d\udc33  docker run image=goreleaser/goreleaser:latest platform= entrypoint=[] cmd=[\"release\" \"--config\" \".github/goreleaser.yml\"]\n[CI/Release]   | \u001b[1;94m  \u2022\u001b[0m \u001b[1mstarting release...\u001b[0m\n[CI/Release]   | \u001b[1;94m  \u2022\u001b[0m loading config file                              \u001b[1;94mfile\u001b[0m=.github/goreleaser.yml\n[CI/Release]   | \u001b[1;94m  \u2022\u001b[0m \u001b[1mloading environment variables\u001b[0m\n[CI/Release]   | \u001b[1;91m  \u2a2f\u001b[0m \u001b[1mrelease failed after 0s\u001b[0m                  \u001b[1;91merror\u001b[0m=missing GITHUB_TOKEN, GITLAB_TOKEN and GITEA_TOKEN\n[CI/Release]   \u274c  Failure - Main goreleaser\n[CI/Release] exit with `FAILURE`: 1\n[CI/Release] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Error occurred running finally: Error occurred running finally: context deadline exceeded (original error: <nil>) (original error: <nil>)\n"
}