{
    "repository": "go-spatial/tegola",
    "clone_url": "https://github.com/go-spatial/tegola.git",
    "timestamp": "2023-05-30T11:42:43.082052Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[On push/Test on Ubuntu] \ud83d\ude80  Start image=crawlergpt:latest\n[On push/Test on Ubuntu]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[On push/Test on Ubuntu]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[On push/Test on Ubuntu]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[On push/Test on Ubuntu]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/go-spatial-tegola] user=0 workdir=\n[On push/Test on Ubuntu]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v3\n[On push/Test on Ubuntu] \u2b50 Run Main Check out code\n[On push/Test on Ubuntu]   \u2705  Success - Main Check out code\n[On push/Test on Ubuntu] \u2b50 Run Main Set up Go\n[On push/Test on Ubuntu]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v3/ dst=/var/run/act/actions/actions-setup-go@v3/\n[On push/Test on Ubuntu]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v3/] user=0 workdir=\n[On push/Test on Ubuntu]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/setup/index.js] user= workdir=\n[On push/Test on Ubuntu]   | Setup go version spec 1.20.2\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::isExplicit: 1.20.2\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::explicit? true\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.20.2/x64\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::not found\n[On push/Test on Ubuntu]   | Attempting to download 1.20.2...\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::No manifest cached\n[On push/Test on Ubuntu]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::HttpClientError: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v3/dist/setup/index.js:8612:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[On push/Test on Ubuntu]   | Falling back to download directly from Go\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.20.2\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.20.2\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.20.2\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::matched go1.20.2\n[On push/Test on Ubuntu]   | Install from dist\n[On push/Test on Ubuntu]   | Acquiring go1.20.2 from https://storage.googleapis.com/golang/go1.20.2.linux-amd64.tar.gz\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.20.2.linux-amd64.tar.gz\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::Destination /tmp/a67935d6-2aeb-4334-b390-701de5868128\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::download complete\n[On push/Test on Ubuntu]   | Extracting Go...\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::Checking tar --version\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[On push/Test on Ubuntu]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/8173e409-d9f2-4b7e-b49e-327b3657afe7 -f /tmp/a67935d6-2aeb-4334-b390-701de5868128\n[On push/Test on Ubuntu]   | Successfully extracted go to /tmp/8173e409-d9f2-4b7e-b49e-327b3657afe7\n[On push/Test on Ubuntu]   | Adding to the cache ...\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::Caching tool go 1.20.2 x64\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::source dir: /tmp/8173e409-d9f2-4b7e-b49e-327b3657afe7/go\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.2/x64\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::finished caching tool\n[On push/Test on Ubuntu]   | Successfully cached go to /opt/hostedtoolcache/go/1.20.2/x64\n[On push/Test on Ubuntu]   | Added go to the path\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.20.2/x64/bin/go:\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[On push/Test on Ubuntu]   \ud83d\udcac  ::debug::add bin true\n[On push/Test on Ubuntu]   | Successfully set up Go version 1.20.2\n[On push/Test on Ubuntu]   \u2753 add-matcher /run/act/actions/actions-setup-go@v3/matchers.json\n[On push/Test on Ubuntu]   | go version go1.20.2 linux/amd64\n[On push/Test on Ubuntu]   | \n[On push/Test on Ubuntu]   \u2753  ::group::go env\n[On push/Test on Ubuntu]   | GO111MODULE=\"\"\n[On push/Test on Ubuntu]   | GOARCH=\"amd64\"\n[On push/Test on Ubuntu]   | GOBIN=\"\"\n[On push/Test on Ubuntu]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[On push/Test on Ubuntu]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[On push/Test on Ubuntu]   | GOEXE=\"\"\n[On push/Test on Ubuntu]   | GOEXPERIMENT=\"\"\n[On push/Test on Ubuntu]   | GOFLAGS=\"\"\n[On push/Test on Ubuntu]   | GOHOSTARCH=\"amd64\"\n[On push/Test on Ubuntu]   | GOHOSTOS=\"linux\"\n[On push/Test on Ubuntu]   | GOINSECURE=\"\"\n[On push/Test on Ubuntu]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[On push/Test on Ubuntu]   | GONOPROXY=\"\"\n[On push/Test on Ubuntu]   | GONOSUMDB=\"\"\n[On push/Test on Ubuntu]   | GOOS=\"linux\"\n[On push/Test on Ubuntu]   | GOPATH=\"/home/runneradmin/go\"\n[On push/Test on Ubuntu]   | GOPRIVATE=\"\"\n[On push/Test on Ubuntu]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[On push/Test on Ubuntu]   | GOROOT=\"/opt/hostedtoolcache/go/1.20.2/x64\"\n[On push/Test on Ubuntu]   | GOSUMDB=\"sum.golang.org\"\n[On push/Test on Ubuntu]   | GOTMPDIR=\"\"\n[On push/Test on Ubuntu]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.20.2/x64/pkg/tool/linux_amd64\"\n[On push/Test on Ubuntu]   | GOVCS=\"\"\n[On push/Test on Ubuntu]   | GOVERSION=\"go1.20.2\"\n[On push/Test on Ubuntu]   | GCCGO=\"gccgo\"\n[On push/Test on Ubuntu]   | GOAMD64=\"v1\"\n[On push/Test on Ubuntu]   | AR=\"ar\"\n[On push/Test on Ubuntu]   | CC=\"gcc\"\n[On push/Test on Ubuntu]   | CXX=\"g++\"\n[On push/Test on Ubuntu]   | CGO_ENABLED=\"1\"\n[On push/Test on Ubuntu]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/go-spatial-tegola/go.mod\"\n[On push/Test on Ubuntu]   | GOWORK=\"\"\n[On push/Test on Ubuntu]   | CGO_CFLAGS=\"-O2 -g\"\n[On push/Test on Ubuntu]   | CGO_CPPFLAGS=\"\"\n[On push/Test on Ubuntu]   | CGO_CXXFLAGS=\"-O2 -g\"\n[On push/Test on Ubuntu]   | CGO_FFLAGS=\"-O2 -g\"\n[On push/Test on Ubuntu]   | CGO_LDFLAGS=\"-O2 -g\"\n[On push/Test on Ubuntu]   | PKG_CONFIG=\"pkg-config\"\n[On push/Test on Ubuntu]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build1330759941=/tmp/go-build -gno-record-gcc-switches\"\n[On push/Test on Ubuntu]   | \n[On push/Test on Ubuntu]   \u2753  ::endgroup::\n[On push/Test on Ubuntu]   \u2705  Success - Main Set up Go\n[On push/Test on Ubuntu]   \u2699  ::set-output:: go-version=1.20.2\n[On push/Test on Ubuntu]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.20.2/x64/bin\n[On push/Test on Ubuntu]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[On push/Test on Ubuntu] \u2b50 Run Main Env Debug\n[On push/Test on Ubuntu]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[On push/Test on Ubuntu]   | GO111MODULE=\"\"\n[On push/Test on Ubuntu]   | GOARCH=\"amd64\"\n[On push/Test on Ubuntu]   | GOBIN=\"\"\n[On push/Test on Ubuntu]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[On push/Test on Ubuntu]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[On push/Test on Ubuntu]   | GOEXE=\"\"\n[On push/Test on Ubuntu]   | GOEXPERIMENT=\"\"\n[On push/Test on Ubuntu]   | GOFLAGS=\"\"\n[On push/Test on Ubuntu]   | GOHOSTARCH=\"amd64\"\n[On push/Test on Ubuntu]   | GOHOSTOS=\"linux\"\n[On push/Test on Ubuntu]   | GOINSECURE=\"\"\n[On push/Test on Ubuntu]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[On push/Test on Ubuntu]   | GONOPROXY=\"\"\n[On push/Test on Ubuntu]   | GONOSUMDB=\"\"\n[On push/Test on Ubuntu]   | GOOS=\"linux\"\n[On push/Test on Ubuntu]   | GOPATH=\"/home/runneradmin/go\"\n[On push/Test on Ubuntu]   | GOPRIVATE=\"\"\n[On push/Test on Ubuntu]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[On push/Test on Ubuntu]   | GOROOT=\"/opt/hostedtoolcache/go/1.20.2/x64\"\n[On push/Test on Ubuntu]   | GOSUMDB=\"sum.golang.org\"\n[On push/Test on Ubuntu]   | GOTMPDIR=\"\"\n[On push/Test on Ubuntu]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.20.2/x64/pkg/tool/linux_amd64\"\n[On push/Test on Ubuntu]   | GOVCS=\"\"\n[On push/Test on Ubuntu]   | GOVERSION=\"go1.20.2\"\n[On push/Test on Ubuntu]   | GCCGO=\"gccgo\"\n[On push/Test on Ubuntu]   | GOAMD64=\"v1\"\n[On push/Test on Ubuntu]   | AR=\"ar\"\n[On push/Test on Ubuntu]   | CC=\"gcc\"\n[On push/Test on Ubuntu]   | CXX=\"g++\"\n[On push/Test on Ubuntu]   | CGO_ENABLED=\"1\"\n[On push/Test on Ubuntu]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/go-spatial-tegola/go.mod\"\n[On push/Test on Ubuntu]   | GOWORK=\"\"\n[On push/Test on Ubuntu]   | CGO_CFLAGS=\"-O2 -g\"\n[On push/Test on Ubuntu]   | CGO_CPPFLAGS=\"\"\n[On push/Test on Ubuntu]   | CGO_CXXFLAGS=\"-O2 -g\"\n[On push/Test on Ubuntu]   | CGO_FFLAGS=\"-O2 -g\"\n[On push/Test on Ubuntu]   | CGO_LDFLAGS=\"-O2 -g\"\n[On push/Test on Ubuntu]   | PKG_CONFIG=\"pkg-config\"\n[On push/Test on Ubuntu]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2045190138=/tmp/go-build -gno-record-gcc-switches\"\n[On push/Test on Ubuntu]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/go-spatial-tegola\n[On push/Test on Ubuntu]   | /home/runneradmin\n[On push/Test on Ubuntu]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/go-spatial-tegola\n[On push/Test on Ubuntu]   \u2705  Success - Main Env Debug\n[On push/Test on Ubuntu] \u2b50 Run Main Load Postgres test data\n[On push/Test on Ubuntu]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[On push/Test on Ubuntu]   |   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n[On push/Test on Ubuntu]   |                                  Dload  Upload   Total   Spent    Left  Speed\n[On push/Test on Ubuntu]   | \r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100 3553k  100 3553k    0     0  6967k      0 --:--:-- --:--:-- --:--:-- 7207k\n[On push/Test on Ubuntu]   | pg_restore: error: connection to database \"postgres\" failed: could not connect to server: Connection refused\n[On push/Test on Ubuntu]   | \tIs the server running on host \"localhost\" (127.0.0.1) and accepting\n[On push/Test on Ubuntu]   | \tTCP/IP connections on port 5432?\n[On push/Test on Ubuntu]   | could not connect to server: Cannot assign requested address\n[On push/Test on Ubuntu]   | \tIs the server running on host \"localhost\" (::1) and accepting\n[On push/Test on Ubuntu]   | \tTCP/IP connections on port 5432?\n[On push/Test on Ubuntu]   \u274c  Failure - Main Load Postgres test data\n[On push/Test on Ubuntu] exitcode '1': failure\n[On push/Test on Ubuntu] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Test on Ubuntu' failed\n"
}