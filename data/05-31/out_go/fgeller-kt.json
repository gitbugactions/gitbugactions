{
    "repository": "fgeller/kt",
    "clone_url": "https://github.com/fgeller/kt.git",
    "timestamp": "2023-05-30T11:30:23.537733Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Continuous Integration/kt Test] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous Integration/kt Test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous Integration/kt Test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/kt Test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/kt Test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/fgeller-kt] user=0 workdir=\n[Continuous Integration/kt Test]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[Continuous Integration/kt Test] \u2b50 Run Main Set up Go 1.x\n[Continuous Integration/kt Test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[Continuous Integration/kt Test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[Continuous Integration/kt Test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[Continuous Integration/kt Test]   | Setup go stable version spec ^1.18\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::isExplicit: \n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::explicit? false\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::explicit? true\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::explicit? true\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::explicit? true\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::match not found\n[Continuous Integration/kt Test]   | Attempting to download ^1.18...\n[Continuous Integration/kt Test]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::Error: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v2/dist/index.js:5294:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Continuous Integration/kt Test]   | Falling back to download directly from Go\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::check 1.20.4 satisfies ^1.18\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::matched go1.20.4\n[Continuous Integration/kt Test]   | Install from dist\n[Continuous Integration/kt Test]   | Acquiring go1.20.4 from https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::Destination /tmp/3e3aab49-dd3f-4d10-8831-4c514b43f8b1\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::download complete\n[Continuous Integration/kt Test]   | Extracting Go...\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::Checking tar --version\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Continuous Integration/kt Test]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/37b21c5e-9010-4bb5-b3ad-e4593d75aceb -f /tmp/3e3aab49-dd3f-4d10-8831-4c514b43f8b1\n[Continuous Integration/kt Test]   | Successfully extracted go to /tmp/37b21c5e-9010-4bb5-b3ad-e4593d75aceb\n[Continuous Integration/kt Test]   | Adding to the cache ...\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::Caching tool go 1.20.4 x64\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::source dir: /tmp/37b21c5e-9010-4bb5-b3ad-e4593d75aceb/go\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.4/x64\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::finished caching tool\n[Continuous Integration/kt Test]   | Successfully cached go to /opt/hostedtoolcache/go/1.20.4/x64\n[Continuous Integration/kt Test]   | Added go to the path\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.20.4/x64/bin/go:\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Continuous Integration/kt Test]   \ud83d\udcac  ::debug::add bin true\n[Continuous Integration/kt Test]   | Successfully setup go version ^1.18\n[Continuous Integration/kt Test]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[Continuous Integration/kt Test]   | go version go1.20.4 linux/amd64\n[Continuous Integration/kt Test]   | \n[Continuous Integration/kt Test]   \u2753  ::group::go env\n[Continuous Integration/kt Test]   | GO111MODULE=\"\"\n[Continuous Integration/kt Test]   | GOARCH=\"amd64\"\n[Continuous Integration/kt Test]   | GOBIN=\"\"\n[Continuous Integration/kt Test]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Continuous Integration/kt Test]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Continuous Integration/kt Test]   | GOEXE=\"\"\n[Continuous Integration/kt Test]   | GOEXPERIMENT=\"\"\n[Continuous Integration/kt Test]   | GOFLAGS=\"\"\n[Continuous Integration/kt Test]   | GOHOSTARCH=\"amd64\"\n[Continuous Integration/kt Test]   | GOHOSTOS=\"linux\"\n[Continuous Integration/kt Test]   | GOINSECURE=\"\"\n[Continuous Integration/kt Test]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Continuous Integration/kt Test]   | GONOPROXY=\"\"\n[Continuous Integration/kt Test]   | GONOSUMDB=\"\"\n[Continuous Integration/kt Test]   | GOOS=\"linux\"\n[Continuous Integration/kt Test]   | GOPATH=\"/home/runneradmin/go\"\n[Continuous Integration/kt Test]   | GOPRIVATE=\"\"\n[Continuous Integration/kt Test]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Continuous Integration/kt Test]   | GOROOT=\"/opt/hostedtoolcache/go/1.20.4/x64\"\n[Continuous Integration/kt Test]   | GOSUMDB=\"sum.golang.org\"\n[Continuous Integration/kt Test]   | GOTMPDIR=\"\"\n[Continuous Integration/kt Test]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.20.4/x64/pkg/tool/linux_amd64\"\n[Continuous Integration/kt Test]   | GOVCS=\"\"\n[Continuous Integration/kt Test]   | GOVERSION=\"go1.20.4\"\n[Continuous Integration/kt Test]   | GCCGO=\"gccgo\"\n[Continuous Integration/kt Test]   | GOAMD64=\"v1\"\n[Continuous Integration/kt Test]   | AR=\"ar\"\n[Continuous Integration/kt Test]   | CC=\"gcc\"\n[Continuous Integration/kt Test]   | CXX=\"g++\"\n[Continuous Integration/kt Test]   | CGO_ENABLED=\"1\"\n[Continuous Integration/kt Test]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/fgeller-kt/go.mod\"\n[Continuous Integration/kt Test]   | GOWORK=\"\"\n[Continuous Integration/kt Test]   | CGO_CFLAGS=\"-O2 -g\"\n[Continuous Integration/kt Test]   | CGO_CPPFLAGS=\"\"\n[Continuous Integration/kt Test]   | CGO_CXXFLAGS=\"-O2 -g\"\n[Continuous Integration/kt Test]   | CGO_FFLAGS=\"-O2 -g\"\n[Continuous Integration/kt Test]   | CGO_LDFLAGS=\"-O2 -g\"\n[Continuous Integration/kt Test]   | PKG_CONFIG=\"pkg-config\"\n[Continuous Integration/kt Test]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2515346897=/tmp/go-build -gno-record-gcc-switches\"\n[Continuous Integration/kt Test]   | \n[Continuous Integration/kt Test]   \u2753  ::endgroup::\n[Continuous Integration/kt Test]   \u2705  Success - Main Set up Go 1.x\n[Continuous Integration/kt Test]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.20.4/x64\n[Continuous Integration/kt Test]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.20.4/x64/bin\n[Continuous Integration/kt Test]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Continuous Integration/kt Test] \u2b50 Run Main Check out code into the Go module directory\n[Continuous Integration/kt Test]   \u2705  Success - Main Check out code into the Go module directory\n[Continuous Integration/kt Test] \u2b50 Run Main Get dependencies\n[Continuous Integration/kt Test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Continuous Integration/kt Test]   | go: downloading github.com/Shopify/sarama v1.36.0\n[Continuous Integration/kt Test]   | go: downloading golang.org/x/crypto v0.0.0-20220722155217-630584e8d5aa\n[Continuous Integration/kt Test]   | go: downloading github.com/davecgh/go-spew v1.1.1\n[Continuous Integration/kt Test]   | go: downloading github.com/stretchr/testify v1.8.0\n[Continuous Integration/kt Test]   | go: downloading gopkg.in/yaml.v3 v3.0.1\n[Continuous Integration/kt Test]   | go: downloading github.com/pmezard/go-difflib v1.0.0\n[Continuous Integration/kt Test]   | go: downloading github.com/jcmturner/gofork v1.7.6\n[Continuous Integration/kt Test]   | go: downloading github.com/eapache/go-resiliency v1.3.0\n[Continuous Integration/kt Test]   | go: downloading github.com/jcmturner/gokrb5/v8 v8.4.3\n[Continuous Integration/kt Test]   | go: downloading github.com/eapache/queue v1.1.0\n[Continuous Integration/kt Test]   | go: downloading github.com/eapache/go-xerial-snappy v0.0.0-20180814174437-776d5712da21\n[Continuous Integration/kt Test]   | go: downloading github.com/klauspost/compress v1.15.9\n[Continuous Integration/kt Test]   | go: downloading github.com/hashicorp/go-multierror v1.1.1\n[Continuous Integration/kt Test]   | go: downloading github.com/pierrec/lz4/v4 v4.1.15\n[Continuous Integration/kt Test]   | go: downloading golang.org/x/net v0.0.0-20220809184613-07c6da5e1ced\n[Continuous Integration/kt Test]   | go: downloading github.com/rcrowley/go-metrics v0.0.0-20201227073835-cf1acfcdf475\n[Continuous Integration/kt Test]   | go: downloading github.com/golang/snappy v0.0.4\n[Continuous Integration/kt Test]   | go: downloading github.com/hashicorp/errwrap v1.1.0\n[Continuous Integration/kt Test]   | go: downloading github.com/hashicorp/go-uuid v1.0.3\n[Continuous Integration/kt Test]   | go: downloading github.com/jcmturner/dnsutils/v2 v2.0.0\n[Continuous Integration/kt Test]   | go: downloading github.com/jcmturner/aescts/v2 v2.0.0\n[Continuous Integration/kt Test]   | go: downloading github.com/jcmturner/rpc/v2 v2.0.3\n[Continuous Integration/kt Test]   | go: downloading golang.org/x/term v0.0.0-20220722155259-a9ba230a4035\n[Continuous Integration/kt Test]   | go: downloading golang.org/x/sys v0.0.0-20220728004956-3c1f35247d10\n[Continuous Integration/kt Test]   \u2705  Success - Main Get dependencies\n[Continuous Integration/kt Test] \u2b50 Run Main Bring up containers\n[Continuous Integration/kt Test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Continuous Integration/kt Test]   | unknown shorthand flag: 'f' in -f\n[Continuous Integration/kt Test]   | See 'docker --help'.\n[Continuous Integration/kt Test]   | \n[Continuous Integration/kt Test]   | Usage:  docker [OPTIONS] COMMAND\n[Continuous Integration/kt Test]   | \n[Continuous Integration/kt Test]   | A self-sufficient runtime for containers\n[Continuous Integration/kt Test]   | \n[Continuous Integration/kt Test]   | Options:\n[Continuous Integration/kt Test]   |       --config string      Location of client config files (default\n[Continuous Integration/kt Test]   |                            \"/home/runneradmin/.docker\")\n[Continuous Integration/kt Test]   |   -c, --context string     Name of the context to use to connect to the\n[Continuous Integration/kt Test]   |                            daemon (overrides DOCKER_HOST env var and\n[Continuous Integration/kt Test]   |                            default context set with \"docker context use\")\n[Continuous Integration/kt Test]   |   -D, --debug              Enable debug mode\n[Continuous Integration/kt Test]   |   -H, --host list          Daemon socket(s) to connect to\n[Continuous Integration/kt Test]   |   -l, --log-level string   Set the logging level\n[Continuous Integration/kt Test]   |                            (\"debug\"|\"info\"|\"warn\"|\"error\"|\"fatal\")\n[Continuous Integration/kt Test]   |                            (default \"info\")\n[Continuous Integration/kt Test]   |       --tls                Use TLS; implied by --tlsverify\n[Continuous Integration/kt Test]   |       --tlscacert string   Trust certs signed only by this CA (default\n[Continuous Integration/kt Test]   |                            \"/home/runneradmin/.docker/ca.pem\")\n[Continuous Integration/kt Test]   |       --tlscert string     Path to TLS certificate file (default\n[Continuous Integration/kt Test]   |                            \"/home/runneradmin/.docker/cert.pem\")\n[Continuous Integration/kt Test]   |       --tlskey string      Path to TLS key file (default\n[Continuous Integration/kt Test]   |                            \"/home/runneradmin/.docker/key.pem\")\n[Continuous Integration/kt Test]   |       --tlsverify          Use TLS and verify the remote\n[Continuous Integration/kt Test]   |   -v, --version            Print version information and quit\n[Continuous Integration/kt Test]   | \n[Continuous Integration/kt Test]   | Management Commands:\n[Continuous Integration/kt Test]   |   builder     Manage builds\n[Continuous Integration/kt Test]   |   buildx*     Build with BuildKit (Docker Inc., 0.6.0+azure)\n[Continuous Integration/kt Test]   |   config      Manage Docker configs\n[Continuous Integration/kt Test]   |   container   Manage containers\n[Continuous Integration/kt Test]   |   context     Manage contexts\n[Continuous Integration/kt Test]   |   image       Manage images\n[Continuous Integration/kt Test]   |   manifest    Manage Docker image manifests and manifest lists\n[Continuous Integration/kt Test]   |   network     Manage networks\n[Continuous Integration/kt Test]   |   node        Manage Swarm nodes\n[Continuous Integration/kt Test]   |   plugin      Manage plugins\n[Continuous Integration/kt Test]   |   secret      Manage Docker secrets\n[Continuous Integration/kt Test]   |   service     Manage services\n[Continuous Integration/kt Test]   |   stack       Manage Docker stacks\n[Continuous Integration/kt Test]   |   swarm       Manage Swarm\n[Continuous Integration/kt Test]   |   system      Manage Docker\n[Continuous Integration/kt Test]   |   trust       Manage trust on Docker images\n[Continuous Integration/kt Test]   |   volume      Manage volumes\n[Continuous Integration/kt Test]   | \n[Continuous Integration/kt Test]   | Commands:\n[Continuous Integration/kt Test]   |   attach      Attach local standard input, output, and error streams to a running container\n[Continuous Integration/kt Test]   |   build       Build an image from a Dockerfile\n[Continuous Integration/kt Test]   |   commit      Create a new image from a container's changes\n[Continuous Integration/kt Test]   |   cp          Copy files/folders between a container and the local filesystem\n[Continuous Integration/kt Test]   |   create      Create a new container\n[Continuous Integration/kt Test]   |   diff        Inspect changes to files or directories on a container's filesystem\n[Continuous Integration/kt Test]   |   events      Get real time events from the server\n[Continuous Integration/kt Test]   |   exec        Run a command in a running container\n[Continuous Integration/kt Test]   |   export      Export a container's filesystem as a tar archive\n[Continuous Integration/kt Test]   |   history     Show the history of an image\n[Continuous Integration/kt Test]   |   images      List images\n[Continuous Integration/kt Test]   |   import      Import the contents from a tarball to create a filesystem image\n[Continuous Integration/kt Test]   |   info        Display system-wide information\n[Continuous Integration/kt Test]   |   inspect     Return low-level information on Docker objects\n[Continuous Integration/kt Test]   |   kill        Kill one or more running containers\n[Continuous Integration/kt Test]   |   load        Load an image from a tar archive or STDIN\n[Continuous Integration/kt Test]   |   login       Log in to a Docker registry\n[Continuous Integration/kt Test]   |   logout      Log out from a Docker registry\n[Continuous Integration/kt Test]   |   logs        Fetch the logs of a container\n[Continuous Integration/kt Test]   |   pause       Pause all processes within one or more containers\n[Continuous Integration/kt Test]   |   port        List port mappings or a specific mapping for the container\n[Continuous Integration/kt Test]   |   ps          List containers\n[Continuous Integration/kt Test]   |   pull        Pull an image or a repository from a registry\n[Continuous Integration/kt Test]   |   push        Push an image or a repository to a registry\n[Continuous Integration/kt Test]   |   rename      Rename a container\n[Continuous Integration/kt Test]   |   restart     Restart one or more containers\n[Continuous Integration/kt Test]   |   rm          Remove one or more containers\n[Continuous Integration/kt Test]   |   rmi         Remove one or more images\n[Continuous Integration/kt Test]   |   run         Run a command in a new container\n[Continuous Integration/kt Test]   |   save        Save one or more images to a tar archive (streamed to STDOUT by default)\n[Continuous Integration/kt Test]   |   search      Search the Docker Hub for images\n[Continuous Integration/kt Test]   |   start       Start one or more stopped containers\n[Continuous Integration/kt Test]   |   stats       Display a live stream of container(s) resource usage statistics\n[Continuous Integration/kt Test]   |   stop        Stop one or more running containers\n[Continuous Integration/kt Test]   |   tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE\n[Continuous Integration/kt Test]   |   top         Display the running processes of a container\n[Continuous Integration/kt Test]   |   unpause     Unpause all processes within one or more containers\n[Continuous Integration/kt Test]   |   update      Update configuration of one or more containers\n[Continuous Integration/kt Test]   |   version     Show the Docker version information\n[Continuous Integration/kt Test]   |   wait        Block until one or more containers stop, then print their exit codes\n[Continuous Integration/kt Test]   | \n[Continuous Integration/kt Test]   | Run 'docker COMMAND --help' for more information on a command.\n[Continuous Integration/kt Test]   | \n[Continuous Integration/kt Test]   | \u001b[1mTo get more help with docker, check out our guides at https://docs.docker.com/go/guides/\u001b[0m\n[Continuous Integration/kt Test]   | \n[Continuous Integration/kt Test]   \u274c  Failure - Main Bring up containers\n[Continuous Integration/kt Test] exitcode '125': failure\n[Continuous Integration/kt Test] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'kt Test' failed\n"
}