{
    "repository": "devx-cafe/git-phlow",
    "clone_url": "https://github.com/devx-cafe/git-phlow.git",
    "timestamp": "2023-05-30T12:10:22.587230Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Test-integration - Build - Test - Deliver/Integrate] \ud83d\ude80  Start image=crawlergpt:latest\n[Test-integration - Build - Test - Deliver/Integrate]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test-integration - Build - Test - Deliver/Integrate]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test-integration - Build - Test - Deliver/Integrate]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test-integration - Build - Test - Deliver/Integrate]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/devx-cafe-git-phlow] user=0 workdir=\n[Test-integration - Build - Test - Deliver/Integrate] \u2b50 Run Main Check out code into the Go module directory\n[Test-integration - Build - Test - Deliver/Integrate]   \u2705  Success - Main Check out code into the Go module directory\n[Test-integration - Build - Test - Deliver/Integrate] \u2b50 Run Main getfetch\n[Test-integration - Build - Test - Deliver/Integrate]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Test-integration - Build - Test - Deliver/Integrate]   | Already up to date.\n[Test-integration - Build - Test - Deliver/Integrate]   \u2705  Success - Main getfetch\n[Test-integration - Build - Test - Deliver/Integrate] \u2b50 Run Main setting remote\n[Test-integration - Build - Test - Deliver/Integrate]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test-integration - Build - Test - Deliver/Integrate]   \u2705  Success - Main setting remote\n[Test-integration - Build - Test - Deliver/Integrate] \u2b50 Run Main Show branch\n[Test-integration - Build - Test - Deliver/Integrate]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Test-integration - Build - Test - Deliver/Integrate]   | * master fe5e99c [origin/master] Create CODEOWNERS\n[Test-integration - Build - Test - Deliver/Integrate]   \u2705  Success - Main Show branch\n[Test-integration - Build - Test - Deliver/Integrate] \u2b50 Run Main show git branch\n[Test-integration - Build - Test - Deliver/Integrate]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Test-integration - Build - Test - Deliver/Integrate]   | Branch 'master' set up to track remote branch 'master' from 'origin'.\n[Test-integration - Build - Test - Deliver/Integrate]   \u2705  Success - Main show git branch\n[Test-integration - Build - Test - Deliver/Integrate] \u2b50 Run Main Show branch\n[Test-integration - Build - Test - Deliver/Integrate]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[Test-integration - Build - Test - Deliver/Integrate]   | * master fe5e99c [origin/master] Create CODEOWNERS\n[Test-integration - Build - Test - Deliver/Integrate]   \u2705  Success - Main Show branch\n[Test-integration - Build - Test - Deliver/Integrate] \u2b50 Run Main setting git config\n[Test-integration - Build - Test - Deliver/Integrate]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[Test-integration - Build - Test - Deliver/Integrate]   \u2705  Success - Main setting git config\n[Test-integration - Build - Test - Deliver/Integrate] \u2b50 Run Main setting git config\n[Test-integration - Build - Test - Deliver/Integrate]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/7] user= workdir=\n[Test-integration - Build - Test - Deliver/Integrate]   \u2705  Success - Main setting git config\n[Test-integration - Build - Test - Deliver/Integrate] \u2b50 Run Main Rebase to remote branch\n[Test-integration - Build - Test - Deliver/Integrate]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/8] user= workdir=\n[Test-integration - Build - Test - Deliver/Integrate]   | Current branch master is up to date.\n[Test-integration - Build - Test - Deliver/Integrate]   \u2705  Success - Main Rebase to remote branch\n[Test-integration - Build - Test - Deliver/Integrate] \u2b50 Run Main Checkout target branch\n[Test-integration - Build - Test - Deliver/Integrate]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/9] user= workdir=\n[Test-integration - Build - Test - Deliver/Integrate]   | Already on 'master'\n[Test-integration - Build - Test - Deliver/Integrate]   | Your branch is up to date with 'origin/master'.\n[Test-integration - Build - Test - Deliver/Integrate]   \u2705  Success - Main Checkout target branch\n[Test-integration - Build - Test - Deliver/Integrate] \u2b50 Run Main Pull latest\n[Test-integration - Build - Test - Deliver/Integrate]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/10] user= workdir=\n[Test-integration - Build - Test - Deliver/Integrate]   | warning: redirecting to https://github.com/code-cafes/git-phlow.git/\n[Test-integration - Build - Test - Deliver/Integrate]   | From https://github.com/code-cafes/git-phlow\n[Test-integration - Build - Test - Deliver/Integrate]   |  * branch            master     -> FETCH_HEAD\n[Test-integration - Build - Test - Deliver/Integrate]   | Already up to date.\n[Test-integration - Build - Test - Deliver/Integrate]   \u2705  Success - Main Pull latest\n[Test-integration - Build - Test - Deliver/Integrate] \u2b50 Run Main Merge\n[Test-integration - Build - Test - Deliver/Integrate]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/11] user= workdir=\n[Test-integration - Build - Test - Deliver/Integrate]   | Already up to date.\n[Test-integration - Build - Test - Deliver/Integrate]   \u2705  Success - Main Merge\n[Test-integration - Build - Test - Deliver/Integrate] \u2b50 Run Main Show branch\n[Test-integration - Build - Test - Deliver/Integrate]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/12] user= workdir=\n[Test-integration - Build - Test - Deliver/Integrate]   | * master fe5e99c [origin/master] Create CODEOWNERS\n[Test-integration - Build - Test - Deliver/Integrate]   \u2705  Success - Main Show branch\n[Test-integration - Build - Test - Deliver/Integrate] \u2b50 Run Main Install dependencies\n[Test-integration - Build - Test - Deliver/Integrate]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/13] user= workdir=\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading github.com/fatih/color v1.7.0\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading github.com/AlecAivazis/survey/v2 v2.0.7\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading github.com/go-errors/errors v1.0.1\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading golang.org/x/crypto v0.0.0-20200320181102-891825fb96df\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading github.com/spf13/cobra v0.0.6\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading github.com/briandowns/spinner v1.10.0\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading github.com/mattn/go-colorable v0.1.6\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading github.com/mattn/go-isatty v0.0.12\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading github.com/go-ini/ini v1.55.0\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading github.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading github.com/mgutz/ansi v0.0.0-20170206155736-9520e82c474b\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading golang.org/x/text v0.3.0\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading golang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading github.com/spf13/pflag v1.0.3\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading github.com/inconshreveable/mousetrap v1.0.0\n[Test-integration - Build - Test - Deliver/Integrate]   \u2705  Success - Main Install dependencies\n[Test-integration - Build - Test - Deliver/Integrate] \u2b50 Run Main Build\n[Test-integration - Build - Test - Deliver/Integrate]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/14] user= workdir=\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/code-cafe/git-phlow/flags\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/code-cafe/git-phlow/options\n[Test-integration - Build - Test - Deliver/Integrate]   | golang.org/x/text/transform\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/kballard/go-shellquote\n[Test-integration - Build - Test - Deliver/Integrate]   | golang.org/x/sys/unix\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/go-errors/errors\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/code-cafe/git-phlow/executor\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/go-ini/ini\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/spf13/pflag\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/code-cafe/git-phlow/githandler\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/code-cafe/git-phlow/context\n[Test-integration - Build - Test - Deliver/Integrate]   | golang.org/x/text/width\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/code-cafe/git-phlow/cmd/cmdperm\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/AlecAivazis/survey/v2/terminal\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/spf13/cobra\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/mattn/go-isatty\n[Test-integration - Build - Test - Deliver/Integrate]   | golang.org/x/crypto/ssh/terminal\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/mattn/go-colorable\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/mgutz/ansi\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/fatih/color\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/code-cafe/git-phlow/ui\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/briandowns/spinner\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/AlecAivazis/survey/v2/core\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/code-cafe/git-phlow/plugins\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/AlecAivazis/survey/v2\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/code-cafe/git-phlow/setting\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/code-cafe/git-phlow/phlow\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/code-cafe/git-phlow/cmd\n[Test-integration - Build - Test - Deliver/Integrate]   | github.com/code-cafe/git-phlow\n[Test-integration - Build - Test - Deliver/Integrate]   \u2705  Success - Main Build\n[Test-integration - Build - Test - Deliver/Integrate] \u2b50 Run Main test\n[Test-integration - Build - Test - Deliver/Integrate]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/15] user= workdir=\n[Test-integration - Build - Test - Deliver/Integrate]   | \n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading github.com/onsi/ginkgo v1.16.5\n[Test-integration - Build - Test - Deliver/Integrate]   | go: found github.com/onsi/ginkgo/ginkgo in github.com/onsi/ginkgo v1.16.5\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading github.com/onsi/ginkgo v1.12.0\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading github.com/hpcloud/tail v1.0.0\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading gopkg.in/fsnotify.v1 v1.4.7\n[Test-integration - Build - Test - Deliver/Integrate]   | go: github.com/onsi/ginkgo upgrade => v1.16.5\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading golang.org/x/sys v0.0.0-20210112080510-489259a85091\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading github.com/go-task/slim-sprig v0.0.0-20210107165309-348f09dbbbc0\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading github.com/nxadm/tail v1.4.8\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading golang.org/x/tools v0.0.0-20201224043029-2b0845dc783e\n[Test-integration - Build - Test - Deliver/Integrate]   | go: downloading github.com/fsnotify/fsnotify v1.4.9\n[Test-integration - Build - Test - Deliver/Integrate]   \u274c  Failure - Main test\n[Test-integration - Build - Test - Deliver/Integrate] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/91db6e44836ebcdccff2f6c84b6d469fbb0d382871d9f14967940418edbebda7/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Test-integration - Build - Test - Deliver/Integrate] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}