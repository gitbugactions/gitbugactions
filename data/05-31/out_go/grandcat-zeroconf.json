{
    "repository": "grandcat/zeroconf",
    "clone_url": "https://github.com/grandcat/zeroconf.git",
    "timestamp": "2023-05-30T11:47:20.621033Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[unittest/Unit tests (ubuntu, Go 1.15.x)] \ud83d\ude80  Start image=crawlergpt:latest\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/grandcat-zeroconf] user=0 workdir=\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[unittest/Unit tests (ubuntu, Go 1.15.x)] \ud83e\uddea  Matrix: map[go:1.15.x os:ubuntu]\n[unittest/Unit tests (ubuntu, Go 1.15.x)] \u2b50 Run Main actions/checkout@v2\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \u2705  Success - Main actions/checkout@v2\n[unittest/Unit tests (ubuntu, Go 1.15.x)] \u2b50 Run Main actions/setup-go@v2\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | Setup go stable version spec 1.15.x\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udcac  ::debug::isExplicit: \n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udcac  ::debug::explicit? false\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udcac  ::debug::explicit? true\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udcac  ::debug::explicit? true\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udcac  ::debug::explicit? true\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udcac  ::debug::evaluating 3 versions\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udcac  ::debug::matched: 1.15.15\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.15.15/x64\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udcac  ::debug::Found tool in cache go 1.15.15 x64\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | Found in cache @ /opt/hostedtoolcache/go/1.15.15/x64\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | Added go to the path\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.15.15/x64/bin/go:\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udcac  ::debug::add bin true\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | Successfully setup go version 1.15.x\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | go version go1.15.15 linux/amd64\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | \n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \u2753  ::group::go env\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GO111MODULE=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOARCH=\"amd64\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOBIN=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOEXE=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOFLAGS=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOHOSTARCH=\"amd64\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOHOSTOS=\"linux\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOINSECURE=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GONOPROXY=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GONOSUMDB=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOOS=\"linux\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOPATH=\"/home/runneradmin/go\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOPRIVATE=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOROOT=\"/opt/hostedtoolcache/go/1.15.15/x64\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOSUMDB=\"sum.golang.org\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOTMPDIR=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.15.15/x64/pkg/tool/linux_amd64\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GCCGO=\"gccgo\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | AR=\"ar\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | CC=\"gcc\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | CXX=\"g++\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | CGO_ENABLED=\"1\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/grandcat-zeroconf/go.mod\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | CGO_CFLAGS=\"-g -O2\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | CGO_CPPFLAGS=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | CGO_CXXFLAGS=\"-g -O2\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | CGO_FFLAGS=\"-g -O2\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | CGO_LDFLAGS=\"-g -O2\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | PKG_CONFIG=\"pkg-config\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build790706966=/tmp/go-build -gno-record-gcc-switches\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | \n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \u2753  ::endgroup::\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \u2705  Success - Main actions/setup-go@v2\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.15.15/x64\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.15.15/x64/bin\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[unittest/Unit tests (ubuntu, Go 1.15.x)] \u2b50 Run Main Go information\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | go version go1.15.15 linux/amd64\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GO111MODULE=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOARCH=\"amd64\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOBIN=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOEXE=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOFLAGS=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOHOSTARCH=\"amd64\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOHOSTOS=\"linux\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOINSECURE=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GONOPROXY=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GONOSUMDB=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOOS=\"linux\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOPATH=\"/home/runneradmin/go\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOPRIVATE=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOROOT=\"/opt/hostedtoolcache/go/1.15.15/x64\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOSUMDB=\"sum.golang.org\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOTMPDIR=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.15.15/x64/pkg/tool/linux_amd64\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GCCGO=\"gccgo\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | AR=\"ar\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | CC=\"gcc\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | CXX=\"g++\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | CGO_ENABLED=\"1\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/grandcat-zeroconf/go.mod\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | CGO_CFLAGS=\"-g -O2\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | CGO_CPPFLAGS=\"\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | CGO_CXXFLAGS=\"-g -O2\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | CGO_FFLAGS=\"-g -O2\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | CGO_LDFLAGS=\"-g -O2\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | PKG_CONFIG=\"pkg-config\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build030707374=/tmp/go-build -gno-record-gcc-switches\"\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \u2705  Success - Main Go information\n[unittest/Unit tests (ubuntu, Go 1.15.x)] \u2b50 Run Main Run tests\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | go: downloading golang.org/x/net v0.0.0-20210423184538-5f58ad60dda6\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | go: downloading github.com/miekg/dns v1.1.41\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | go: downloading github.com/cenkalti/backoff v2.2.1+incompatible\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | go: downloading github.com/pkg/errors v0.9.1\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | go: downloading golang.org/x/sys v0.0.0-20210426080607-c94f62235c83\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | === RUN   TestBasic\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | 2023/05/30 11:54:55 Published service: test--xxxxxxxxxxxx, type: _test--xxxx._tcp, domain: local.\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | --- PASS: TestBasic (5.00s)\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | 2023/05/30 11:54:59 Shutting down.\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | === RUN   TestNoRegister\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | --- PASS: TestNoRegister (5.00s)\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | === RUN   TestSubtype\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | === RUN   TestSubtype/browse_with_subtype\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | 2023/05/30 11:55:04 Published service: test--xxxxxxxxxxxx, type: _test--xxxx._tcp,_fancy, domain: local.\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | 2023/05/30 11:55:09 Shutting down.\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | === RUN   TestSubtype/browse_without_subtype\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | 2023/05/30 11:55:09 Published service: test--xxxxxxxxxxxx, type: _test--xxxx._tcp,_fancy, domain: local.\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | 2023/05/30 11:55:14 Shutting down.\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | --- PASS: TestSubtype (10.00s)\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   |     --- PASS: TestSubtype/browse_with_subtype (5.00s)\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   |     --- PASS: TestSubtype/browse_without_subtype (5.00s)\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | PASS\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | ok  \tgithub.com/grandcat/zeroconf\t20.043s\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | ?   \tgithub.com/grandcat/zeroconf/examples/proxyservice\t[no test files]\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | ?   \tgithub.com/grandcat/zeroconf/examples/register\t[no test files]\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | ?   \tgithub.com/grandcat/zeroconf/examples/resolv\t[no test files]\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \u2705  Success - Main Run tests\n[unittest/Unit tests (ubuntu, Go 1.15.x)] \u2b50 Run Main Run tests (32 bit)\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | === RUN   TestBasic\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | 2023/05/30 11:55:51 Published service: test--xxxxxxxxxxxx, type: _test--xxxx._tcp, domain: local.\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | --- PASS: TestBasic (5.00s)\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | === RUN   TestNoRegister\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | 2023/05/30 11:55:56 Shutting down.\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | --- PASS: TestNoRegister (5.00s)\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | === RUN   TestSubtype\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | === RUN   TestSubtype/browse_with_subtype\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | 2023/05/30 11:56:01 Published service: test--xxxxxxxxxxxx, type: _test--xxxx._tcp,_fancy, domain: local.\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | === RUN   TestSubtype/browse_without_subtype\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | 2023/05/30 11:56:06 Shutting down.\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | 2023/05/30 11:56:06 Published service: test--xxxxxxxxxxxx, type: _test--xxxx._tcp,_fancy, domain: local.\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | 2023/05/30 11:56:11 Shutting down.\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | --- PASS: TestSubtype (10.00s)\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   |     --- PASS: TestSubtype/browse_with_subtype (5.00s)\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   |     --- PASS: TestSubtype/browse_without_subtype (5.00s)\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | PASS\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | ok  \tgithub.com/grandcat/zeroconf\t20.092s\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | ?   \tgithub.com/grandcat/zeroconf/examples/proxyservice\t[no test files]\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | ?   \tgithub.com/grandcat/zeroconf/examples/register\t[no test files]\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   | ?   \tgithub.com/grandcat/zeroconf/examples/resolv\t[no test files]\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \u2705  Success - Main Run tests (32 bit)\n[unittest/Unit tests (ubuntu, Go 1.15.x)] \u2b50 Run Main Run tests with race detector\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[unittest/Unit tests (ubuntu, Go 1.15.x)]   \u274c  Failure - Main Run tests with race detector\n[unittest/Unit tests (ubuntu, Go 1.15.x)] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/fef37efc080353a23f566301b2505a0e8b9d460886da04ffa7c9b8b9b59a0c49/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[unittest/Unit tests (ubuntu, Go 1.15.x)] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}