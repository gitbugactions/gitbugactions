{
    "repository": "fatih/camelcase",
    "clone_url": "https://github.com/fatih/camelcase.git",
    "timestamp": "2023-05-30T11:09:13.479199Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[build/Test & Build] \ud83d\ude80  Start image=crawlergpt:latest\n[build/Test & Build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[build/Test & Build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[build/Test & Build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[build/Test & Build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/fatih-camelcase] user=0 workdir=\n[build/Test & Build]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v1\n[build/Test & Build] \u2b50 Run Main Set up Go 1.15\n[build/Test & Build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v1/ dst=/var/run/act/actions/actions-setup-go@v1/\n[build/Test & Build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v1/] user=0 workdir=\n[build/Test & Build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v1/lib/setup-go.js] user= workdir=\n[build/Test & Build]   \ud83d\udcac  ::debug::evaluating 19 versions\n[build/Test & Build]   \ud83d\udcac  ::debug::matched: 1.15.15\n[build/Test & Build]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[build/Test & Build]   \ud83d\udcac  ::debug::explicit? true\n[build/Test & Build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.15.15/x64\n[build/Test & Build]   \ud83d\udcac  ::debug::Found tool in cache go 1.15.15 x64\n[build/Test & Build]   \u2753 add-matcher /run/act/actions/actions-setup-go@v1/.github/go.json\n[build/Test & Build]   \u2705  Success - Main Set up Go 1.15\n[build/Test & Build]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.15.15/x64\n[build/Test & Build]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.15.15/x64/bin\n[build/Test & Build] \u2b50 Run Main Check out code into the Go module directory\n[build/Test & Build]   \u2705  Success - Main Check out code into the Go module directory\n[build/Test & Build] \u2b50 Run Main Test\n[build/Test & Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[build/Test & Build]   | ok  \tgithub.com/fatih/camelcase\t0.127s\n[build/Test & Build]   \u2705  Success - Main Test\n[build/Test & Build] \u2b50 Run Main Build\n[build/Test & Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[build/Test & Build]   \u2705  Success - Main Build\n[build/Test & Build] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/85f19f47a62299513901eae19b5a160aa1a3e46bd412ebff1e79b0921cf7c5a1?force=1&v=1\": context deadline exceeded\n[build/Test & Build] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: Error occurred running finally: Error occurred running finally: context deadline exceeded (original error: <nil>) (original error: <nil>)\n"
}