{
    "repository": "gwenn/yacr",
    "clone_url": "https://github.com/gwenn/yacr.git",
    "timestamp": "2023-05-30T10:25:04.163248Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[CI/Build] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/gwenn-yacr] user=0 workdir=\n[CI/Build]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v3\n[CI/Build] \u2b50 Run Main Set up Go 1.19\n[CI/Build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v3/ dst=/var/run/act/actions/actions-setup-go@v3/\n[CI/Build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v3/] user=0 workdir=\n[CI/Build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/setup/index.js] user= workdir=\n[CI/Build]   | Setup go version spec 1.19\n[CI/Build]   \ud83d\udcac  ::debug::isExplicit: \n[CI/Build]   \ud83d\udcac  ::debug::explicit? false\n[CI/Build]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[CI/Build]   \ud83d\udcac  ::debug::explicit? true\n[CI/Build]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[CI/Build]   \ud83d\udcac  ::debug::explicit? true\n[CI/Build]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[CI/Build]   \ud83d\udcac  ::debug::explicit? true\n[CI/Build]   \ud83d\udcac  ::debug::evaluating 3 versions\n[CI/Build]   \ud83d\udcac  ::debug::match not found\n[CI/Build]   | Attempting to download 1.19...\n[CI/Build]   \ud83d\udcac  ::debug::No manifest cached\n[CI/Build]   | matching 1.19...\n[CI/Build]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.19\n[CI/Build]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.19\n[CI/Build]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.19\n[CI/Build]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.19\n[CI/Build]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.19\n[CI/Build]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.19\n[CI/Build]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[CI/Build]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[CI/Build]   \ud83d\udcac  ::debug::matched 1.19.9\n[CI/Build]   | Acquiring 1.19.9 from https://github.com/actions/go-versions/releases/download/1.19.9-4868897838/go-1.19.9-linux-x64.tar.gz\n[CI/Build]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/go-versions/releases/download/1.19.9-4868897838/go-1.19.9-linux-x64.tar.gz\n[CI/Build]   \ud83d\udcac  ::debug::Destination /tmp/9ba0dd37-1e4c-4a00-b4e0-52af7420542c\n[CI/Build]   \ud83d\udcac  ::debug::download complete\n[CI/Build]   | Extracting Go...\n[CI/Build]   \ud83d\udcac  ::debug::Checking tar --version\n[CI/Build]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[CI/Build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/61fcecac-8f86-40b0-98e0-38e6668e4d21 -f /tmp/9ba0dd37-1e4c-4a00-b4e0-52af7420542c\n[CI/Build]   | Successfully extracted go to /tmp/61fcecac-8f86-40b0-98e0-38e6668e4d21\n[CI/Build]   | Adding to the cache ...\n[CI/Build]   \ud83d\udcac  ::debug::Caching tool go 1.19.9 x64\n[CI/Build]   \ud83d\udcac  ::debug::source dir: /tmp/61fcecac-8f86-40b0-98e0-38e6668e4d21\n[CI/Build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.19.9/x64\n[CI/Build]   \ud83d\udcac  ::debug::finished caching tool\n[CI/Build]   | Successfully cached go to /opt/hostedtoolcache/go/1.19.9/x64\n[CI/Build]   | Added go to the path\n[CI/Build]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.19.9/x64/bin/go:\n[CI/Build]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[CI/Build]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[CI/Build]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[CI/Build]   \ud83d\udcac  ::debug::add bin true\n[CI/Build]   | Successfully set up Go version 1.19\n[CI/Build]   \u2753 add-matcher /run/act/actions/actions-setup-go@v3/matchers.json\n[CI/Build]   | go version go1.19.9 linux/amd64\n[CI/Build]   | \n[CI/Build]   \u2753  ::group::go env\n[CI/Build]   | GO111MODULE=\"\"\n[CI/Build]   | GOARCH=\"amd64\"\n[CI/Build]   | GOBIN=\"\"\n[CI/Build]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[CI/Build]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[CI/Build]   | GOEXE=\"\"\n[CI/Build]   | GOEXPERIMENT=\"\"\n[CI/Build]   | GOFLAGS=\"\"\n[CI/Build]   | GOHOSTARCH=\"amd64\"\n[CI/Build]   | GOHOSTOS=\"linux\"\n[CI/Build]   | GOINSECURE=\"\"\n[CI/Build]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[CI/Build]   | GONOPROXY=\"\"\n[CI/Build]   | GONOSUMDB=\"\"\n[CI/Build]   | GOOS=\"linux\"\n[CI/Build]   | GOPATH=\"/home/runneradmin/go\"\n[CI/Build]   | GOPRIVATE=\"\"\n[CI/Build]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[CI/Build]   | GOROOT=\"/opt/hostedtoolcache/go/1.19.9/x64\"\n[CI/Build]   | GOSUMDB=\"sum.golang.org\"\n[CI/Build]   | GOTMPDIR=\"\"\n[CI/Build]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.19.9/x64/pkg/tool/linux_amd64\"\n[CI/Build]   | GOVCS=\"\"\n[CI/Build]   | GOVERSION=\"go1.19.9\"\n[CI/Build]   | GCCGO=\"gccgo\"\n[CI/Build]   | GOAMD64=\"v1\"\n[CI/Build]   | AR=\"ar\"\n[CI/Build]   | CC=\"gcc\"\n[CI/Build]   | CXX=\"g++\"\n[CI/Build]   | CGO_ENABLED=\"1\"\n[CI/Build]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/gwenn-yacr/go.mod\"\n[CI/Build]   | GOWORK=\"\"\n[CI/Build]   | CGO_CFLAGS=\"-g -O2\"\n[CI/Build]   | CGO_CPPFLAGS=\"\"\n[CI/Build]   | CGO_CXXFLAGS=\"-g -O2\"\n[CI/Build]   | CGO_FFLAGS=\"-g -O2\"\n[CI/Build]   | CGO_LDFLAGS=\"-g -O2\"\n[CI/Build]   | PKG_CONFIG=\"pkg-config\"\n[CI/Build]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build1013510068=/tmp/go-build -gno-record-gcc-switches\"\n[CI/Build]   | \n[CI/Build]   \u2753  ::endgroup::\n[CI/Build]   \u2705  Success - Main Set up Go 1.19\n[CI/Build]   \u2699  ::set-output:: go-version=1.19.9\n[CI/Build]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.19.9/x64/bin\n[CI/Build]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[CI/Build] \u2b50 Run Main Check out code into the Go module directory\n[CI/Build]   \u2705  Success - Main Check out code into the Go module directory\n[CI/Build] \u2b50 Run Main Get dependencies\n[CI/Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/Build]   \u2705  Success - Main Get dependencies\n[CI/Build] \u2b50 Run Main Build\n[CI/Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/Build]   | github.com/gwenn/yacr\n[CI/Build]   \u2705  Success - Main Build\n[CI/Build] \u2b50 Run Main Test\n[CI/Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[CI/Build]   | ok  \tgithub.com/gwenn/yacr\t0.015s\n[CI/Build]   \u2705  Success - Main Test\n[CI/Build] \u2b50 Run Post Set up Go 1.19\n[CI/Build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/cache-save/index.js] user= workdir=\n[CI/Build]   \u2705  Success - Post Set up Go 1.19\n[CI/Build] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}