{
    "repository": "goadesign/goa",
    "clone_url": "https://github.com/goadesign/goa.git",
    "timestamp": "2023-05-30T10:58:23.781372Z",
    "clone_success": true,
    "number of actions": 4,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[build/Windows] \ud83d\ude80  Start image=crawlergpt:latest\n[build/Linux  ] \ud83d\ude80  Start image=crawlergpt:latest\n[build/Linux  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[build/Windows]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[build/Linux  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[build/Windows]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[build/Linux  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[build/Windows]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[build/Windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/goadesign-goa] user=0 workdir=\n[build/Linux  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/goadesign-goa] user=0 workdir=\n[build/Windows]   \u2601  git clone 'https://github.com/runforesight/foresight-workflow-kit-action' # ref=v1\n[build/Windows]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v4.0.1\n[build/Windows]   \u2601  git clone 'https://github.com/runforesight/foresight-test-kit-action' # ref=v1\n[build/Windows] \u2b50 Run Main Collect Workflow Telemetry\n[build/Windows]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/runforesight-foresight-workflow-kit-action@v1/ dst=/var/run/act/actions/runforesight-foresight-workflow-kit-action@v1/\n[build/Windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/runforesight-foresight-workflow-kit-action@v1/] user=0 workdir=\n[build/Windows]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/runforesight-foresight-workflow-kit-action@v1/dist/main/index.js] user= workdir=\n[build/Linux  ]   \u2601  git clone 'https://github.com/runforesight/foresight-workflow-kit-action' # ref=v1\n[build/Linux  ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v4.0.1\n[build/Windows]   | [Foresight Workflow Kit] Initializing ...\n[build/Linux  ]   \u2601  git clone 'https://github.com/runforesight/foresight-test-kit-action' # ref=v1\n[build/Windows]   | [Foresight Workflow Kit] Workflow telemetry server port is: 10000\n[build/Windows]   | [Foresight Workflow Kit] Starting stat collector ...\n[build/Windows]   | [Foresight Workflow Kit] Started stat collector\n[build/Windows]   | [Foresight Workflow Kit] Starting process tracer ...\n[build/Windows]   | [Foresight Workflow Kit] Using proc_tracer_ubuntu-20\n[build/Windows]   \u2757  ::error::[Foresight Workflow Kit] Unable to start process tracer\n[build/Windows]   | [Foresight Workflow Kit] libbpf: Failed to bump RLIMIT_MEMLOCK (err = -1), you might need to do it explicitly!\n[build/Windows]   | [Foresight Workflow Kit] libbpf: Error in bpf_object__probe_loading():Operation not permitted(1). Couldn't load trivial BPF program. Make sure your kernel supports BPF (CONFIG_BPF_SYSCALL=y) and/or that RLIMIT_MEMLOCK is set to big enough value.\n[build/Windows]   | [Foresight Workflow Kit] libbpf: failed to load object 'proc_tracer_bpf'\n[build/Windows]   | [Foresight Workflow Kit] libbpf: failed to load BPF skeleton 'proc_tracer_bpf': -1\n[build/Windows]   | [Foresight Workflow Kit] Failed to load and verify BPF skeleton\n[build/Windows]   | [Foresight Workflow Kit] Initialization completed\n[build/Windows]   \u2705  Success - Main Collect Workflow Telemetry\n[build/Linux  ] \u2b50 Run Main Collect Workflow Telemetry\n[build/Linux  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/runforesight-foresight-workflow-kit-action@v1/ dst=/var/run/act/actions/runforesight-foresight-workflow-kit-action@v1/\n[build/Linux  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/runforesight-foresight-workflow-kit-action@v1/] user=0 workdir=\n[build/Windows] \u2b50 Run Main Set up Go 1.20\n[build/Windows]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v4.0.1/ dst=/var/run/act/actions/actions-setup-go@v4.0.1/\n[build/Windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v4.0.1/] user=0 workdir=\n[build/Linux  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/runforesight-foresight-workflow-kit-action@v1/dist/main/index.js] user= workdir=\n[build/Windows]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v4.0.1/dist/setup/index.js] user= workdir=\n[build/Linux  ]   | [Foresight Workflow Kit] Initializing ...\n[build/Linux  ]   | [Foresight Workflow Kit] Workflow telemetry server port is: 10000\n[build/Linux  ]   | [Foresight Workflow Kit] Starting stat collector ...\n[build/Linux  ]   | [Foresight Workflow Kit] Started stat collector\n[build/Linux  ]   | [Foresight Workflow Kit] Starting process tracer ...\n[build/Windows]   | Setup go version spec 1.20\n[build/Windows]   \ud83d\udcac  ::debug::isExplicit: \n[build/Windows]   \ud83d\udcac  ::debug::explicit? false\n[build/Windows]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[build/Windows]   \ud83d\udcac  ::debug::explicit? true\n[build/Windows]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[build/Windows]   \ud83d\udcac  ::debug::explicit? true\n[build/Windows]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[build/Windows]   \ud83d\udcac  ::debug::explicit? true\n[build/Windows]   \ud83d\udcac  ::debug::evaluating 3 versions\n[build/Windows]   \ud83d\udcac  ::debug::match not found\n[build/Windows]   | Attempting to download 1.20...\n[build/Windows]   \ud83d\udcac  ::debug::No manifest cached\n[build/Linux  ]   | [Foresight Workflow Kit] Using proc_tracer_ubuntu-20\n[build/Windows]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[build/Windows]   \ud83d\udcac  ::debug::HttpClientError: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v4.0.1/dist/setup/index.js:8907:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[build/Windows]   | Falling back to download directly from Go\n[build/Linux  ]   \u2757  ::error::[Foresight Workflow Kit] Unable to start process tracer\n[build/Linux  ]   | [Foresight Workflow Kit] libbpf: Failed to bump RLIMIT_MEMLOCK (err = -1), you might need to do it explicitly!\n[build/Linux  ]   | [Foresight Workflow Kit] libbpf: Error in bpf_object__probe_loading():Operation not permitted(1). Couldn't load trivial BPF program. Make sure your kernel supports BPF (CONFIG_BPF_SYSCALL=y) and/or that RLIMIT_MEMLOCK is set to big enough value.\n[build/Linux  ]   | [Foresight Workflow Kit] libbpf: failed to load object 'proc_tracer_bpf'\n[build/Linux  ]   | [Foresight Workflow Kit] libbpf: failed to load BPF skeleton 'proc_tracer_bpf': -1\n[build/Linux  ]   | [Foresight Workflow Kit] Failed to load and verify BPF skeleton\n[build/Linux  ]   | [Foresight Workflow Kit] Initialization completed\n[build/Linux  ]   \u2705  Success - Main Collect Workflow Telemetry\n[build/Windows]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.20\n[build/Windows]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[build/Windows]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[build/Windows]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[build/Windows]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[build/Windows]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[build/Windows]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[build/Windows]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[build/Windows]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[build/Windows]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[build/Windows]   \ud83d\udcac  ::debug::matched go1.20.4\n[build/Windows]   | Install from dist\n[build/Windows]   | Acquiring go1.20.4 from https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[build/Windows]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[build/Windows]   \ud83d\udcac  ::debug::Destination /tmp/9bf32864-3c7d-462a-8baa-38665e50c0bb\n[build/Linux  ] \u2b50 Run Main Set up Go 1.20\n[build/Linux  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v4.0.1/ dst=/var/run/act/actions/actions-setup-go@v4.0.1/\n[build/Linux  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v4.0.1/] user=0 workdir=\n[build/Windows]   \ud83d\udcac  ::debug::download complete\n[build/Windows]   | Extracting Go...\n[build/Windows]   \ud83d\udcac  ::debug::Checking tar --version\n[build/Windows]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[build/Windows]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/61c672d5-7312-401d-928b-2aa52ddf274d -f /tmp/9bf32864-3c7d-462a-8baa-38665e50c0bb\n[build/Windows]   | Successfully extracted go to /tmp/61c672d5-7312-401d-928b-2aa52ddf274d\n[build/Windows]   | Adding to the cache ...\n[build/Windows]   \ud83d\udcac  ::debug::Caching tool go 1.20.4 x64\n[build/Windows]   \ud83d\udcac  ::debug::source dir: /tmp/61c672d5-7312-401d-928b-2aa52ddf274d/go\n[build/Windows]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.4/x64\n[build/Windows]   \ud83d\udcac  ::debug::finished caching tool\n[build/Windows]   | Successfully cached go to /opt/hostedtoolcache/go/1.20.4/x64\n[build/Windows]   | Added go to the path\n[build/Windows]   | Successfully set up Go version 1.20\n[build/Windows]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.20.4/x64/bin/go:\n[build/Windows]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[build/Windows]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[build/Windows]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[build/Windows]   \ud83d\udcac  ::debug::add bin true\n[build/Windows]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[build/Windows]   \u2753 add-matcher /run/act/actions/actions-setup-go@v4.0.1/matchers.json\n[build/Windows]   | go version go1.20.4 linux/amd64\n[build/Windows]   | \n[build/Windows]   \u2753  ::group::go env\n[build/Windows]   | GO111MODULE=\"\"\n[build/Windows]   | GOARCH=\"amd64\"\n[build/Windows]   | GOBIN=\"\"\n[build/Windows]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[build/Windows]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[build/Windows]   | GOEXE=\"\"\n[build/Windows]   | GOEXPERIMENT=\"\"\n[build/Windows]   | GOFLAGS=\"\"\n[build/Windows]   | GOHOSTARCH=\"amd64\"\n[build/Windows]   | GOHOSTOS=\"linux\"\n[build/Windows]   | GOINSECURE=\"\"\n[build/Windows]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[build/Windows]   | GONOPROXY=\"\"\n[build/Windows]   | GONOSUMDB=\"\"\n[build/Windows]   | GOOS=\"linux\"\n[build/Windows]   | GOPATH=\"/home/runneradmin/go\"\n[build/Windows]   | GOPRIVATE=\"\"\n[build/Windows]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[build/Windows]   | GOROOT=\"/opt/hostedtoolcache/go/1.20.4/x64\"\n[build/Windows]   | GOSUMDB=\"sum.golang.org\"\n[build/Windows]   | GOTMPDIR=\"\"\n[build/Windows]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.20.4/x64/pkg/tool/linux_amd64\"\n[build/Windows]   | GOVCS=\"\"\n[build/Windows]   | GOVERSION=\"go1.20.4\"\n[build/Windows]   | GCCGO=\"gccgo\"\n[build/Windows]   | GOAMD64=\"v1\"\n[build/Windows]   | AR=\"ar\"\n[build/Windows]   | CC=\"gcc\"\n[build/Windows]   | CXX=\"g++\"\n[build/Windows]   | CGO_ENABLED=\"1\"\n[build/Windows]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/goadesign-goa/go.mod\"\n[build/Windows]   | GOWORK=\"\"\n[build/Windows]   | CGO_CFLAGS=\"-O2 -g\"\n[build/Windows]   | CGO_CPPFLAGS=\"\"\n[build/Windows]   | CGO_CXXFLAGS=\"-O2 -g\"\n[build/Windows]   | CGO_FFLAGS=\"-O2 -g\"\n[build/Windows]   | CGO_LDFLAGS=\"-O2 -g\"\n[build/Windows]   | PKG_CONFIG=\"pkg-config\"\n[build/Windows]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build3367223523=/tmp/go-build -gno-record-gcc-switches\"\n[build/Windows]   | \n[build/Windows]   \u2753  ::endgroup::\n[build/Windows]   \u2705  Success - Main Set up Go 1.20\n[build/Windows]   \u2699  ::set-output:: go-version=1.20.4\n[build/Windows]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.20.4/x64/bin\n[build/Windows]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[build/Windows] \u2b50 Run Main Check out code into the Go module directory\n[build/Windows]   \u2705  Success - Main Check out code into the Go module directory\n[build/Windows] \u2b50 Run Main Extract branch name\n[build/Windows]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/extract_branch.sh] user= workdir=\n[build/Windows]   \u2699  ::set-output:: branch=v3\n[build/Linux  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v4.0.1/dist/setup/index.js] user= workdir=\n[build/Windows]   \u2705  Success - Main Extract branch name\n[build/Linux  ]   | Setup go version spec 1.20\n[build/Linux  ]   \ud83d\udcac  ::debug::isExplicit: \n[build/Linux  ]   \ud83d\udcac  ::debug::explicit? false\n[build/Linux  ]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[build/Linux  ]   \ud83d\udcac  ::debug::explicit? true\n[build/Linux  ]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[build/Linux  ]   \ud83d\udcac  ::debug::explicit? true\n[build/Linux  ]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[build/Linux  ]   \ud83d\udcac  ::debug::explicit? true\n[build/Linux  ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[build/Linux  ]   \ud83d\udcac  ::debug::match not found\n[build/Linux  ]   | Attempting to download 1.20...\n[build/Linux  ]   \ud83d\udcac  ::debug::No manifest cached\n[build/Linux  ]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[build/Linux  ]   \ud83d\udcac  ::debug::HttpClientError: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v4.0.1/dist/setup/index.js:8907:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[build/Linux  ]   | Falling back to download directly from Go\n[build/Windows] \u2b50 Run Main Add $GOPATH/bin to PATH\n[build/Linux  ]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.20\n[build/Linux  ]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[build/Linux  ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[build/Linux  ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[build/Linux  ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[build/Linux  ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[build/Linux  ]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[build/Linux  ]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[build/Linux  ]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[build/Linux  ]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[build/Linux  ]   \ud83d\udcac  ::debug::matched go1.20.4\n[build/Linux  ]   | Install from dist\n[build/Linux  ]   | Acquiring go1.20.4 from https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[build/Linux  ]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[build/Linux  ]   \ud83d\udcac  ::debug::Destination /tmp/ca29d9e4-afb3-42bb-b003-a1e80d10b8e3\n[build/Windows]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/setup_path.sh] user= workdir=\n[build/Linux  ]   \ud83d\udcac  ::debug::download complete\n[build/Linux  ]   | Extracting Go...\n[build/Linux  ]   \ud83d\udcac  ::debug::Checking tar --version\n[build/Linux  ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[build/Linux  ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/6226be0d-dd8d-47a3-894f-f1655080a6ac -f /tmp/ca29d9e4-afb3-42bb-b003-a1e80d10b8e3\n[build/Linux  ]   | Successfully extracted go to /tmp/6226be0d-dd8d-47a3-894f-f1655080a6ac\n[build/Linux  ]   | Adding to the cache ...\n[build/Linux  ]   \ud83d\udcac  ::debug::Caching tool go 1.20.4 x64\n[build/Linux  ]   \ud83d\udcac  ::debug::source dir: /tmp/6226be0d-dd8d-47a3-894f-f1655080a6ac/go\n[build/Linux  ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.4/x64\n[build/Linux  ]   \ud83d\udcac  ::debug::finished caching tool\n[build/Linux  ]   | Successfully cached go to /opt/hostedtoolcache/go/1.20.4/x64\n[build/Linux  ]   | Added go to the path\n[build/Linux  ]   | Successfully set up Go version 1.20\n[build/Linux  ]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.20.4/x64/bin/go:\n[build/Linux  ]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[build/Linux  ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[build/Linux  ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[build/Linux  ]   \ud83d\udcac  ::debug::add bin true\n[build/Linux  ]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[build/Linux  ]   \u2753 add-matcher /run/act/actions/actions-setup-go@v4.0.1/matchers.json\n[build/Linux  ]   | go version go1.20.4 linux/amd64\n[build/Linux  ]   | \n[build/Linux  ]   \u2753  ::group::go env\n[build/Linux  ]   | GO111MODULE=\"\"\n[build/Linux  ]   | GOARCH=\"amd64\"\n[build/Linux  ]   | GOBIN=\"\"\n[build/Linux  ]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[build/Linux  ]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[build/Linux  ]   | GOEXE=\"\"\n[build/Linux  ]   | GOEXPERIMENT=\"\"\n[build/Linux  ]   | GOFLAGS=\"\"\n[build/Linux  ]   | GOHOSTARCH=\"amd64\"\n[build/Linux  ]   | GOHOSTOS=\"linux\"\n[build/Linux  ]   | GOINSECURE=\"\"\n[build/Linux  ]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[build/Linux  ]   | GONOPROXY=\"\"\n[build/Linux  ]   | GONOSUMDB=\"\"\n[build/Linux  ]   | GOOS=\"linux\"\n[build/Linux  ]   | GOPATH=\"/home/runneradmin/go\"\n[build/Linux  ]   | GOPRIVATE=\"\"\n[build/Linux  ]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[build/Linux  ]   | GOROOT=\"/opt/hostedtoolcache/go/1.20.4/x64\"\n[build/Linux  ]   | GOSUMDB=\"sum.golang.org\"\n[build/Linux  ]   | GOTMPDIR=\"\"\n[build/Linux  ]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.20.4/x64/pkg/tool/linux_amd64\"\n[build/Linux  ]   | GOVCS=\"\"\n[build/Linux  ]   | GOVERSION=\"go1.20.4\"\n[build/Linux  ]   | GCCGO=\"gccgo\"\n[build/Linux  ]   | GOAMD64=\"v1\"\n[build/Linux  ]   | AR=\"ar\"\n[build/Linux  ]   | CC=\"gcc\"\n[build/Linux  ]   | CXX=\"g++\"\n[build/Linux  ]   | CGO_ENABLED=\"1\"\n[build/Linux  ]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/goadesign-goa/go.mod\"\n[build/Linux  ]   | GOWORK=\"\"\n[build/Linux  ]   | CGO_CFLAGS=\"-O2 -g\"\n[build/Linux  ]   | CGO_CPPFLAGS=\"\"\n[build/Linux  ]   | CGO_CXXFLAGS=\"-O2 -g\"\n[build/Linux  ]   | CGO_FFLAGS=\"-O2 -g\"\n[build/Linux  ]   | CGO_LDFLAGS=\"-O2 -g\"\n[build/Linux  ]   | PKG_CONFIG=\"pkg-config\"\n[build/Linux  ]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build1150177269=/tmp/go-build -gno-record-gcc-switches\"\n[build/Linux  ]   | \n[build/Linux  ]   \u2753  ::endgroup::\n[build/Linux  ]   \u2705  Success - Main Set up Go 1.20\n[build/Linux  ]   \u2699  ::set-output:: go-version=1.20.4\n[build/Linux  ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.20.4/x64/bin\n[build/Linux  ]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[build/Linux  ] \u2b50 Run Main Check out code into the Go module directory\n[build/Linux  ]   \u2705  Success - Main Check out code into the Go module directory\n[build/Linux  ] \u2b50 Run Main Extract branch name\n[build/Linux  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/extract_branch] user= workdir=\n[build/Linux  ]   \u2699  ::set-output:: branch=v3\n[build/Linux  ]   \u2705  Success - Main Extract branch name\n[build/Windows]   \u2705  Success - Main Add $GOPATH/bin to PATH\n[build/Windows]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[build/Linux  ] \u2b50 Run Main Add $GOPATH/bin to PATH\n[build/Windows] \u2b50 Run Main Build\n[build/Windows]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[build/Linux  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/setup_path] user= workdir=\n[build/Linux  ]   \u2705  Success - Main Add $GOPATH/bin to PATH\n[build/Windows]   | INSTALLING DEPENDENCIES...\n[build/Linux  ]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[build/Linux  ] \u2b50 Run Main Build\n[build/Linux  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[build/Windows]   | go: downloading google.golang.org/grpc/cmd/protoc-gen-go-grpc v1.3.0\n[build/Windows]   | go: downloading google.golang.org/protobuf v1.28.1\n[build/Windows]   | go: downloading honnef.co/go/tools v0.4.3\n[build/Windows]   | go: downloading golang.org/x/tools v0.4.1-0.20221208213631-3f74d914ae6d\n[build/Windows]   | go: downloading github.com/BurntSushi/toml v1.2.1\n[build/Windows]   | go: downloading golang.org/x/exp/typeparams v0.0.0-20221208152030-732eee02a75a\n[build/Windows]   | go: downloading golang.org/x/sys v0.3.0\n[build/Windows]   | go: downloading golang.org/x/mod v0.7.0\n[build/Linux  ]   | INSTALLING DEPENDENCIES...\n[build/Windows]   | go: downloading github.com/google/go-cmp v0.5.9\n[build/Windows]   | go: downloading github.com/stretchr/testify v1.8.1\n[build/Windows]   | go: downloading gopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f\n[build/Windows]   | go: downloading github.com/smartystreets/assertions v1.2.0\n[build/Windows]   | go: downloading github.com/jtolds/gls v4.20.0+incompatible\n[build/Windows]   | go: downloading github.com/go-test/deep v1.0.8\n[build/Windows]   | go: downloading github.com/ugorji/go/codec v1.2.7\n[build/Windows]   | go: downloading golang.org/x/sync v0.2.0\n[build/Windows]   | go: downloading github.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1\n[build/Windows]   | go: downloading github.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e\n[build/Windows]   | go: downloading github.com/pmezard/go-difflib v1.0.0\n[build/Windows]   | go: downloading github.com/davecgh/go-spew v1.1.1\n[build/Windows]   | go: downloading github.com/kr/text v0.2.0\n[build/Windows]   | go: downloading github.com/ugorji/go v1.2.7\n[build/Windows]   | INSTALLING PROTOC...\n[build/Windows]   |   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n[build/Windows]   |                                  Dload  Upload   Total   Spent    Left  Speed\n[build/Windows]   | \r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n[build/Windows]   | \r100 2761k  100 2761k    0     0  3772k      0 --:--:-- --:--:-- --:--:-- 3772k\n[build/Windows]   | Archive:  protoc-22.2-linux-x86_64.zip\n[build/Windows]   |   inflating: bin/protoc              \n[build/Windows]   |   inflating: include/google/protobuf/any.proto  \n[build/Windows]   |   inflating: include/google/protobuf/api.proto  \n[build/Windows]   |   inflating: include/google/protobuf/compiler/plugin.proto  \n[build/Windows]   |   inflating: include/google/protobuf/descriptor.proto  \n[build/Windows]   |   inflating: include/google/protobuf/duration.proto  \n[build/Windows]   |   inflating: include/google/protobuf/empty.proto  \n[build/Windows]   |   inflating: include/google/protobuf/field_mask.proto  \n[build/Windows]   |   inflating: include/google/protobuf/source_context.proto  \n[build/Windows]   |   inflating: include/google/protobuf/struct.proto  \n[build/Windows]   |   inflating: include/google/protobuf/timestamp.proto  \n[build/Windows]   |   inflating: include/google/protobuf/type.proto  \n[build/Windows]   |   inflating: include/google/protobuf/wrappers.proto  \n[build/Windows]   |   inflating: readme.txt              \n[build/Windows]   | libprotoc 22.2\n[build/Linux  ]   | go: downloading google.golang.org/grpc/cmd/protoc-gen-go-grpc v1.3.0\n[build/Linux  ]   | go: downloading google.golang.org/protobuf v1.28.1\n[build/Windows]   | go test ./...\n[build/Linux  ]   \u274c  Failure - Main Build\n[build/Linux  ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/e0b1b706ceb01823baa1d0b41813c12296d99823ee79c496cfb59189627ed937/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[build/Windows]   \u274c  Failure - Main Build\n[build/Windows] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/d41195e1c25c7d8c100d2d312f693c2c232eddb369d9565d1f02fe6d0cbd3064/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[build/Linux  ] \u2b50 Run Post Collect Workflow Telemetry\n[build/Windows] \u2b50 Run Post Collect Workflow Telemetry\n[build/Linux  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/runforesight-foresight-workflow-kit-action@v1/dist/post/index.js] user= workdir=\n[build/Windows]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/runforesight-foresight-workflow-kit-action@v1/dist/post/index.js] user= workdir=\n[build/Windows]   | [Foresight Workflow Kit] Finishing ...\n[build/Windows]   | [Foresight Workflow Kit] SERVER_PORT: 10000\n[build/Windows]   | [Foresight Workflow Kit] Finishing stat collector ...\n[build/Windows]   | [Foresight Workflow Kit] Triggering stat collect ...\n[build/Linux  ]   | [Foresight Workflow Kit] Finishing ...\n[build/Linux  ]   | [Foresight Workflow Kit] SERVER_PORT: 10000\n[build/Linux  ]   | [Foresight Workflow Kit] Finishing stat collector ...\n[build/Linux  ]   | [Foresight Workflow Kit] Triggering stat collect ...\n[build/Windows]   | [Foresight Workflow Kit] Finished stat collector\n[build/Windows]   | [Foresight Workflow Kit] Finishing process tracer ...\n[build/Windows]   | [Foresight Workflow Kit] Skipped finishing process tracer since process tracer didn't started\n[build/Windows]   | [Foresight Workflow Kit] Please sure that your workflow has \"actions:read\" permission!\n[build/Windows]   \u2757  ::error::[Foresight Workflow Kit] [@octokit/auth-action] `GITHUB_TOKEN` variable is not set. It must be set on either `env:` or `with:`. See https://github.com/octokit/auth-action.js#createactionauth\n[build/Windows]   \u2705  Success - Post Collect Workflow Telemetry\n[build/Linux  ]   | [Foresight Workflow Kit] Finished stat collector\n[build/Linux  ]   | [Foresight Workflow Kit] Finishing process tracer ...\n[build/Linux  ]   | [Foresight Workflow Kit] Skipped finishing process tracer since process tracer didn't started\n[build/Linux  ]   | [Foresight Workflow Kit] Please sure that your workflow has \"actions:read\" permission!\n[build/Linux  ]   \u2757  ::error::[Foresight Workflow Kit] [@octokit/auth-action] `GITHUB_TOKEN` variable is not set. It must be set on either `env:` or `with:`. See https://github.com/octokit/auth-action.js#createactionauth\n[build/Linux  ]   \u2705  Success - Post Collect Workflow Telemetry\n[build/Linux  ] \ud83c\udfc1  Job succeeded\n[build/Windows] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}