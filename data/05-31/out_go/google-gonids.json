{
    "repository": "google/gonids",
    "clone_url": "https://github.com/google/gonids.git",
    "timestamp": "2023-05-30T12:04:15.054457Z",
    "clone_success": true,
    "number of actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Go/Build and Test] \ud83d\ude80  Start image=crawlergpt:latest\n[Go/Build and Test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go/Build and Test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/Build and Test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/Build and Test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/google-gonids] user=0 workdir=\n[Go/Build and Test]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v1\n[Go/Build and Test] \u2b50 Run Main Set up Go 1.13\n[Go/Build and Test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v1/ dst=/var/run/act/actions/actions-setup-go@v1/\n[Go/Build and Test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v1/] user=0 workdir=\n[Go/Build and Test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v1/lib/setup-go.js] user= workdir=\n[Go/Build and Test]   \ud83d\udcac  ::debug::evaluating 19 versions\n[Go/Build and Test]   \ud83d\udcac  ::debug::matched: 1.13.15\n[Go/Build and Test]   \ud83d\udcac  ::debug::isExplicit: 1.13.15\n[Go/Build and Test]   \ud83d\udcac  ::debug::explicit? true\n[Go/Build and Test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.13.15/x64\n[Go/Build and Test]   \ud83d\udcac  ::debug::not found\n[Go/Build and Test]   \ud83d\udcac  ::debug::Downloading Go from: https://storage.googleapis.com/golang/go1.13.15.linux-amd64.tar.gz\n[Go/Build and Test]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.13.15.linux-amd64.tar.gz\n[Go/Build and Test]   \ud83d\udcac  ::debug::Downloading /tmp/1eda88f5-094e-46ef-bebc-bfaa65953569\n[Go/Build and Test]   \ud83d\udcac  ::debug::download complete\n[Go/Build and Test]   | [command]/usr/bin/tar xzC /tmp/95f32676-862d-4d08-af1d-560b935c6f30 -f /tmp/1eda88f5-094e-46ef-bebc-bfaa65953569\n[Go/Build and Test]   \ud83d\udcac  ::debug::Caching tool go 1.13.15 x64\n[Go/Build and Test]   \ud83d\udcac  ::debug::source dir: /tmp/95f32676-862d-4d08-af1d-560b935c6f30/go\n[Go/Build and Test]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.13.15/x64\n[Go/Build and Test]   \ud83d\udcac  ::debug::finished caching tool\n[Go/Build and Test]   \ud83d\udcac  ::debug::Go tool is cached under /opt/hostedtoolcache/go/1.13.15/x64\n[Go/Build and Test]   \u2753 add-matcher /run/act/actions/actions-setup-go@v1/.github/go.json\n[Go/Build and Test]   \u2705  Success - Main Set up Go 1.13\n[Go/Build and Test]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.13.15/x64\n[Go/Build and Test]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.13.15/x64/bin\n[Go/Build and Test] \u2b50 Run Main Check out code into the Go module directory\n[Go/Build and Test]   \u2705  Success - Main Check out code into the Go module directory\n[Go/Build and Test] \u2b50 Run Main Get dependencies\n[Go/Build and Test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Go/Build and Test]   | go: downloading github.com/kylelemons/godebug v1.1.0\n[Go/Build and Test]   | go: extracting github.com/kylelemons/godebug v1.1.0\n[Go/Build and Test]   \u2705  Success - Main Get dependencies\n[Go/Build and Test] \u2b50 Run Main Build\n[Go/Build and Test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Go/Build and Test]   | github.com/google/gonids\n[Go/Build and Test]   \u2705  Success - Main Build\n[Go/Build and Test] \u2b50 Run Main Test\n[Go/Build and Test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Go/Build and Test]   | go: finding github.com/kylelemons/godebug v1.1.0\n[Go/Build and Test]   | === RUN   TestFuzz\n[Go/Build and Test]   | GODEBUG=--- PASS: TestFuzz (0.00s)\n[Go/Build and Test]   | === RUN   TestLexer\n[Go/Build and Test]   | --- PASS: TestLexer (0.00s)\n[Go/Build and Test]   | === RUN   TestShouldBeHTTP\n[Go/Build and Test]   | --- PASS: TestShouldBeHTTP (0.00s)\n[Go/Build and Test]   | === RUN   TestExpensivePCRE\n[Go/Build and Test]   | --- PASS: TestExpensivePCRE (0.00s)\n[Go/Build and Test]   | === RUN   TestSnortHTTPHeader\n[Go/Build and Test]   | --- PASS: TestSnortHTTPHeader (0.00s)\n[Go/Build and Test]   | === RUN   TestNoReferences\n[Go/Build and Test]   | --- PASS: TestNoReferences (0.00s)\n[Go/Build and Test]   | === RUN   TestOnlyShortContents\n[Go/Build and Test]   | --- PASS: TestOnlyShortContents (0.00s)\n[Go/Build and Test]   | === RUN   TestOptimizeHTTP\n[Go/Build and Test]   | --- PASS: TestOptimizeHTTP (0.00s)\n[Go/Build and Test]   | === RUN   TestSnortURILenFix\n[Go/Build and Test]   | --- PASS: TestSnortURILenFix (0.04s)\n[Go/Build and Test]   | === RUN   TestSnortHTTPHeaderFix\n[Go/Build and Test]   | --- PASS: TestSnortHTTPHeaderFix (0.00s)\n[Go/Build and Test]   | === RUN   TestUpgradeToSuri5\n[Go/Build and Test]   | --- PASS: TestUpgradeToSuri5 (0.00s)\n[Go/Build and Test]   | === RUN   TestParseContent\n[Go/Build and Test]   | --- PASS: TestParseContent (0.00s)\n[Go/Build and Test]   | === RUN   TestParseLenMatch\n[Go/Build and Test]   | --- PASS: TestParseLenMatch (0.00s)\n[Go/Build and Test]   | === RUN   TestParseByteMatch\n[Go/Build and Test]   | --- PASS: TestParseByteMatch (0.00s)\n[Go/Build and Test]   | === RUN   TestParseBase64Decode\n[Go/Build and Test]   | --- PASS: TestParseBase64Decode (0.00s)\n[Go/Build and Test]   | === RUN   TestParseFlowbit\n[Go/Build and Test]   | --- PASS: TestParseFlowbit (0.00s)\n[Go/Build and Test]   | === RUN   TestParseXbit\n[Go/Build and Test]   | --- PASS: TestParseXbit (0.00s)\n[Go/Build and Test]   | === RUN   TestParseFlowint\n[Go/Build and Test]   | --- PASS: TestParseFlowint (0.00s)\n[Go/Build and Test]   | === RUN   TestParseRule\n[Go/Build and Test]   | --- PASS: TestParseRule (0.05s)\n[Go/Build and Test]   | === RUN   TestInSlice\n[Go/Build and Test]   | --- PASS: TestInSlice (0.00s)\n[Go/Build and Test]   | === RUN   TestInEqualOut\n[Go/Build and Test]   | --- PASS: TestInEqualOut (0.00s)\n[Go/Build and Test]   | === RUN   TestContainsUnescaped\n[Go/Build and Test]   | --- PASS: TestContainsUnescaped (0.00s)\n[Go/Build and Test]   | === RUN   TestValidNetwork\n[Go/Build and Test]   | --- PASS: TestValidNetwork (0.00s)\n[Go/Build and Test]   | === RUN   TestPortsValid\n[Go/Build and Test]   | --- PASS: TestPortsValid (0.00s)\n[Go/Build and Test]   | === RUN   TestValidNetworks\n[Go/Build and Test]   | --- PASS: TestValidNetworks (0.00s)\n[Go/Build and Test]   | === RUN   TestContentToRegexp\n[Go/Build and Test]   | --- PASS: TestContentToRegexp (0.00s)\n[Go/Build and Test]   | === RUN   TestContentFormatPattern\n[Go/Build and Test]   | --- PASS: TestContentFormatPattern (0.00s)\n[Go/Build and Test]   | === RUN   TestFastPatternString\n[Go/Build and Test]   | --- PASS: TestFastPatternString (0.00s)\n[Go/Build and Test]   | === RUN   TestContentOptionString\n[Go/Build and Test]   | --- PASS: TestContentOptionString (0.00s)\n[Go/Build and Test]   | === RUN   TestReferenceString\n[Go/Build and Test]   | --- PASS: TestReferenceString (0.00s)\n[Go/Build and Test]   | === RUN   TestMetdatasString\n[Go/Build and Test]   | --- PASS: TestMetdatasString (0.00s)\n[Go/Build and Test]   | === RUN   TestNetString\n[Go/Build and Test]   | --- PASS: TestNetString (0.00s)\n[Go/Build and Test]   | === RUN   TestNetworkString\n[Go/Build and Test]   | --- PASS: TestNetworkString (0.00s)\n[Go/Build and Test]   | === RUN   TestByteMatchString\n[Go/Build and Test]   | --- PASS: TestByteMatchString (0.00s)\n[Go/Build and Test]   | === RUN   TestBase64DecodeString\n[Go/Build and Test]   | --- PASS: TestBase64DecodeString (0.00s)\n[Go/Build and Test]   | === RUN   TestTLSTagString\n[Go/Build and Test]   | --- PASS: TestTLSTagString (0.00s)\n[Go/Build and Test]   | === RUN   TestLenMatchString\n[Go/Build and Test]   | --- PASS: TestLenMatchString (0.00s)\n[Go/Build and Test]   | === RUN   TestContentString\n[Go/Build and Test]   | --- PASS: TestContentString (0.00s)\n[Go/Build and Test]   | === RUN   TestPCREString\n[Go/Build and Test]   | --- PASS: TestPCREString (0.00s)\n[Go/Build and Test]   | === RUN   TestFlowbitsString\n[Go/Build and Test]   | --- PASS: TestFlowbitsString (0.00s)\n[Go/Build and Test]   | === RUN   TestXbitsString\n[Go/Build and Test]   | --- PASS: TestXbitsString (0.00s)\n[Go/Build and Test]   | === RUN   TestFlowintsString\n[Go/Build and Test]   | --- PASS: TestFlowintsString (0.00s)\n[Go/Build and Test]   | === RUN   TestRuleString\n[Go/Build and Test]   | --- PASS: TestRuleString (0.00s)\n[Go/Build and Test]   | === RUN   TestRE\n[Go/Build and Test]   | --- PASS: TestRE (0.00s)\n[Go/Build and Test]   | === RUN   TestLastContent\n[Go/Build and Test]   | --- PASS: TestLastContent (0.00s)\n[Go/Build and Test]   | === RUN   TestDataPosString\n[Go/Build and Test]   | --- PASS: TestDataPosString (0.00s)\n[Go/Build and Test]   | === RUN   TestIsStickyBuffer\n[Go/Build and Test]   | --- PASS: TestIsStickyBuffer (0.00s)\n[Go/Build and Test]   | === RUN   TestStickyBuffer\n[Go/Build and Test]   | --- PASS: TestStickyBuffer (0.00s)\n[Go/Build and Test]   | === RUN   TestHasVar\n[Go/Build and Test]   | --- PASS: TestHasVar (0.00s)\n[Go/Build and Test]   | === RUN   TestInsertMatcher\n[Go/Build and Test]   | --- PASS: TestInsertMatcher (0.00s)\n[Go/Build and Test]   | === RUN   TestRuleGetSidMsg\n[Go/Build and Test]   | --- PASS: TestRuleGetSidMsg (0.00s)\n[Go/Build and Test]   | PASS\n[Go/Build and Test]   | ok  \tgithub.com/google/gonids\t0.250s\n[Go/Build and Test]   \u2705  Success - Main Test\n[Go/Build and Test] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}