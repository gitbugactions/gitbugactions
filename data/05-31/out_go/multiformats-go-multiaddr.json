{
    "repository": "multiformats/go-multiaddr",
    "clone_url": "https://github.com/multiformats/go-multiaddr.git",
    "timestamp": "2023-05-30T10:45:37.720858Z",
    "clone_success": true,
    "number of actions": 6,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Go Test/ubuntu (go 1.18.x)] \ud83d\ude80  Start image=crawlergpt:latest\n[Go Test/ubuntu (go 1.18.x)]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go Test/ubuntu (go 1.18.x)]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go Test/ubuntu (go 1.18.x)]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go Test/ubuntu (go 1.18.x)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/multiformats-go-multiaddr] user=0 workdir=\n[Go Test/ubuntu (go 1.18.x)]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v3\n[Go Test/ubuntu (go 1.18.x)]   \u2601  git clone 'https://github.com/protocol/multiple-go-modules' # ref=v1.2\n[Go Test/ubuntu (go 1.18.x)] \u2b50 Run Pre Run tests\n[Go Test/ubuntu (go 1.18.x)]   \u2705  Success - Pre Run tests\n[Go Test/ubuntu (go 1.18.x)]   \u2601  git clone 'https://github.com/protocol/multiple-go-modules' # ref=v1.2\n[Go Test/ubuntu (go 1.18.x)] \u2b50 Run Pre Run tests (32 bit)\n[Go Test/ubuntu (go 1.18.x)]   \u2705  Success - Pre Run tests (32 bit)\n[Go Test/ubuntu (go 1.18.x)]   \u2601  git clone 'https://github.com/protocol/multiple-go-modules' # ref=v1.2\n[Go Test/ubuntu (go 1.18.x)] \u2b50 Run Pre Run tests with race detector\n[Go Test/ubuntu (go 1.18.x)]   \u2705  Success - Pre Run tests with race detector\n[Go Test/ubuntu (go 1.18.x)]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=81cd2dc8148241f03f5839d295e000b8f761e378\n[Go Test/ubuntu (go 1.18.x)] \ud83e\uddea  Matrix: map[go:1.18.x os:ubuntu]\n[Go Test/ubuntu (go 1.18.x)] \u2b50 Run Main actions/checkout@v3\n[Go Test/ubuntu (go 1.18.x)]   \u2705  Success - Main actions/checkout@v3\n[Go Test/ubuntu (go 1.18.x)] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/bd8654a9874e8d4e28244b7ab6ea98cb72feb3deee33c51679e1769b3218f703/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Go Test/ubuntu (go 1.18.x)] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}