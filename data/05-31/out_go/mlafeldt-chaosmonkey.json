{
    "repository": "mlafeldt/chaosmonkey",
    "clone_url": "https://github.com/mlafeldt/chaosmonkey.git",
    "timestamp": "2023-05-30T11:42:31.647677Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Go/Run] \ud83d\ude80  Start image=crawlergpt:latest\n[Go/Run]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go/Run]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/Run]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/Run]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/mlafeldt-chaosmonkey] user=0 workdir=\n[Go/Run]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[Go/Run] \u2b50 Run Main Install Go\n[Go/Run]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[Go/Run]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[Go/Run]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[Go/Run]   | Setup go stable version spec \n[Go/Run]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[Go/Run]   | go version go1.15.15 linux/amd64\n[Go/Run]   | \n[Go/Run]   \u2753  ::group::go env\n[Go/Run]   | GO111MODULE=\"\"\n[Go/Run]   | GOARCH=\"amd64\"\n[Go/Run]   | GOBIN=\"\"\n[Go/Run]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Go/Run]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Go/Run]   | GOEXE=\"\"\n[Go/Run]   | GOFLAGS=\"\"\n[Go/Run]   | GOHOSTARCH=\"amd64\"\n[Go/Run]   | GOHOSTOS=\"linux\"\n[Go/Run]   | GOINSECURE=\"\"\n[Go/Run]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Go/Run]   | GONOPROXY=\"\"\n[Go/Run]   | GONOSUMDB=\"\"\n[Go/Run]   | GOOS=\"linux\"\n[Go/Run]   | GOPATH=\"/home/runneradmin/go\"\n[Go/Run]   | GOPRIVATE=\"\"\n[Go/Run]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Go/Run]   | GOROOT=\"/opt/hostedtoolcache/go/1.15.15/x64\"\n[Go/Run]   | GOSUMDB=\"sum.golang.org\"\n[Go/Run]   | GOTMPDIR=\"\"\n[Go/Run]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.15.15/x64/pkg/tool/linux_amd64\"\n[Go/Run]   | GCCGO=\"gccgo\"\n[Go/Run]   | AR=\"ar\"\n[Go/Run]   | CC=\"gcc\"\n[Go/Run]   | CXX=\"g++\"\n[Go/Run]   | CGO_ENABLED=\"1\"\n[Go/Run]   | GOMOD=\"\"\n[Go/Run]   | CGO_CFLAGS=\"-g -O2\"\n[Go/Run]   | CGO_CPPFLAGS=\"\"\n[Go/Run]   | CGO_CXXFLAGS=\"-g -O2\"\n[Go/Run]   | CGO_FFLAGS=\"-g -O2\"\n[Go/Run]   | CGO_LDFLAGS=\"-g -O2\"\n[Go/Run]   | PKG_CONFIG=\"pkg-config\"\n[Go/Run]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build044130266=/tmp/go-build -gno-record-gcc-switches\"\n[Go/Run]   | \n[Go/Run]   \u2753  ::endgroup::\n[Go/Run]   \u2705  Success - Main Install Go\n[Go/Run] \u2b50 Run Main Get sources\n[Go/Run]   \u2705  Success - Main Get sources\n[Go/Run] \u2b50 Run Main Install dependencies\n[Go/Run]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Go/Run]   | go get -d -t ./...\n[Go/Run]   | go get golang.org/x/lint/golint\n[Go/Run]   | # golang.org/x/tools/go/gcexportdata\n[Go/Run]   | /home/runneradmin/go/src/golang.org/x/tools/go/gcexportdata/gcexportdata.go:97:9: undefined: io.ReadAll\n[Go/Run]   | make: *** [Makefile:12: install-deps] Error 2\n[Go/Run]   \u274c  Failure - Main Install dependencies\n[Go/Run] exitcode '2': failure\n[Go/Run] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Run' failed\n"
}