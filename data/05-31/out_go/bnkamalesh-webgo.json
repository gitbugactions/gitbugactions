{
    "repository": "bnkamalesh/webgo",
    "clone_url": "https://github.com/bnkamalesh/webgo.git",
    "timestamp": "2023-05-30T11:26:56.687159Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Tests/Test with default latest Go] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests/Test with Go 1.13          ] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests/Test with Go 1.13          ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests/Test with default latest Go]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests/Test with Go 1.13          ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/Test with default latest Go]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/Test with Go 1.13          ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/Test with default latest Go]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/Test with Go 1.13          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/bnkamalesh-webgo] user=0 workdir=\n[Tests/Test with Go 1.13          ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v3\n[Tests/Test with Go 1.13          ] \u2b50 Run Main actions/checkout@v3\n[Tests/Test with Go 1.13          ]   \u2705  Success - Main actions/checkout@v3\n[Tests/Test with Go 1.13          ] \u2b50 Run Main Set up Go 1.13\n[Tests/Test with Go 1.13          ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v3/ dst=/var/run/act/actions/actions-setup-go@v3/\n[Tests/Test with Go 1.13          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v3/] user=0 workdir=\n[Tests/Test with Go 1.13          ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/setup/index.js] user= workdir=\n[Tests/Test with default latest Go]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/bnkamalesh-webgo] user=0 workdir=\n[Tests/Test with Go 1.13          ]   | internal/modules/cjs/loader.js:892\n[Tests/Test with Go 1.13          ]   |   throw err;\n[Tests/Test with Go 1.13          ]   |   ^\n[Tests/Test with Go 1.13          ]   | \n[Tests/Test with Go 1.13          ]   | Error: Cannot find module '/var/run/act/actions/actions-setup-go@v3/dist/setup/index.js'\n[Tests/Test with Go 1.13          ]   |     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:889:15)\n[Tests/Test with Go 1.13          ]   |     at Function.Module._load (internal/modules/cjs/loader.js:745:27)\n[Tests/Test with Go 1.13          ]   |     at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:76:12)\n[Tests/Test with Go 1.13          ]   |     at internal/main/run_main_module.js:17:47 {\n[Tests/Test with Go 1.13          ]   |   code: 'MODULE_NOT_FOUND',\n[Tests/Test with Go 1.13          ]   |   requireStack: []\n[Tests/Test with Go 1.13          ]   | }\n[Tests/Test with Go 1.13          ]   \u274c  Failure - Main Set up Go 1.13\n[Tests/Test with Go 1.13          ] exitcode '1': failure\n[Tests/Test with default latest Go]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v3\n[Tests/Test with default latest Go] \u2b50 Run Main actions/checkout@v3\n[Tests/Test with default latest Go]   \u2705  Success - Main actions/checkout@v3\n[Tests/Test with default latest Go] \u2b50 Run Main Set up Go latest\n[Tests/Test with default latest Go]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v3/ dst=/var/run/act/actions/actions-setup-go@v3/\n[Tests/Test with default latest Go]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v3/] user=0 workdir=\n[Tests/Test with default latest Go]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/setup/index.js] user= workdir=\n[Tests/Test with Go 1.13          ] \ud83c\udfc1  Job failed\n[Tests/Test with default latest Go]   | Setup go version spec \n[Tests/Test with default latest Go]   \u2753 add-matcher /run/act/actions/actions-setup-go@v3/matchers.json\n[Tests/Test with default latest Go]   | go version go1.15.15 linux/amd64\n[Tests/Test with default latest Go]   | \n[Tests/Test with default latest Go]   \u2753  ::group::go env\n[Tests/Test with default latest Go]   | GO111MODULE=\"\"\n[Tests/Test with default latest Go]   | GOARCH=\"amd64\"\n[Tests/Test with default latest Go]   | GOBIN=\"\"\n[Tests/Test with default latest Go]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Tests/Test with default latest Go]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Tests/Test with default latest Go]   | GOEXE=\"\"\n[Tests/Test with default latest Go]   | GOFLAGS=\"\"\n[Tests/Test with default latest Go]   | GOHOSTARCH=\"amd64\"\n[Tests/Test with default latest Go]   | GOHOSTOS=\"linux\"\n[Tests/Test with default latest Go]   | GOINSECURE=\"\"\n[Tests/Test with default latest Go]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Tests/Test with default latest Go]   | GONOPROXY=\"\"\n[Tests/Test with default latest Go]   | GONOSUMDB=\"\"\n[Tests/Test with default latest Go]   | GOOS=\"linux\"\n[Tests/Test with default latest Go]   | GOPATH=\"/home/runneradmin/go\"\n[Tests/Test with default latest Go]   | GOPRIVATE=\"\"\n[Tests/Test with default latest Go]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Tests/Test with default latest Go]   | GOROOT=\"/opt/hostedtoolcache/go/1.15.15/x64\"\n[Tests/Test with default latest Go]   | GOSUMDB=\"sum.golang.org\"\n[Tests/Test with default latest Go]   | GOTMPDIR=\"\"\n[Tests/Test with default latest Go]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.15.15/x64/pkg/tool/linux_amd64\"\n[Tests/Test with default latest Go]   | GCCGO=\"gccgo\"\n[Tests/Test with default latest Go]   | AR=\"ar\"\n[Tests/Test with default latest Go]   | CC=\"gcc\"\n[Tests/Test with default latest Go]   | CXX=\"g++\"\n[Tests/Test with default latest Go]   | CGO_ENABLED=\"1\"\n[Tests/Test with default latest Go]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/bnkamalesh-webgo/go.mod\"\n[Tests/Test with default latest Go]   | CGO_CFLAGS=\"-g -O2\"\n[Tests/Test with default latest Go]   | CGO_CPPFLAGS=\"\"\n[Tests/Test with default latest Go]   | CGO_CXXFLAGS=\"-g -O2\"\n[Tests/Test with default latest Go]   | CGO_FFLAGS=\"-g -O2\"\n[Tests/Test with default latest Go]   | CGO_LDFLAGS=\"-g -O2\"\n[Tests/Test with default latest Go]   | PKG_CONFIG=\"pkg-config\"\n[Tests/Test with default latest Go]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build414198584=/tmp/go-build -gno-record-gcc-switches\"\n[Tests/Test with default latest Go]   | \n[Tests/Test with default latest Go]   \u2753  ::endgroup::\n[Tests/Test with default latest Go]   \u2705  Success - Main Set up Go latest\n[Tests/Test with default latest Go]   \u2699  ::set-output:: go-version=1.15.15\n[Tests/Test with default latest Go] \u2b50 Run Main Test\n[Tests/Test with default latest Go]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Tests/Test with default latest Go]   | ok  \tgithub.com/bnkamalesh/webgo/v7\t2.572s\tcoverage: 86.2% of statements\n[Tests/Test with default latest Go]   | ?   \tgithub.com/bnkamalesh/webgo/v7/extensions/sse\t[no test files]\n[Tests/Test with default latest Go]   | ok  \tgithub.com/bnkamalesh/webgo/v7/middleware/accesslog\t0.030s\tcoverage: 100.0% of statements\n[Tests/Test with default latest Go]   | ok  \tgithub.com/bnkamalesh/webgo/v7/middleware/cors\t0.029s\tcoverage: 91.2% of statements\n[Tests/Test with default latest Go]   \u2705  Success - Main Test\n[Tests/Test with default latest Go] \u2b50 Run Post Set up Go latest\n[Tests/Test with default latest Go]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/cache-save/index.js] user= workdir=\n[Tests/Test with default latest Go]   \u2705  Success - Post Set up Go latest\n[Tests/Test with default latest Go] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: Job 'Test with Go 1.13' failed\n"
}