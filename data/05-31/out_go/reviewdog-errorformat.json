{
    "repository": "reviewdog/errorformat",
    "clone_url": "https://github.com/reviewdog/errorformat.git",
    "timestamp": "2023-05-30T11:59:23.683258Z",
    "clone_success": true,
    "number of actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Tests/go-generate] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests/test       ] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests/test       ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests/go-generate]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests/go-generate]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/test       ] failed to remove container: Error response from daemon: removal of container 82826431ae591d4c1d8d9c639dfc5049aee8315dc6e84e78fda17661fa60e32f is already in progress\n[Tests/go-generate]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/go-generate]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/reviewdog-errorformat] user=0 workdir=\n[Tests/go-generate]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v3\n[Tests/go-generate] \u2b50 Run Main actions/setup-go@v3\n[Tests/go-generate]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v3/ dst=/var/run/act/actions/actions-setup-go@v3/\n[Tests/go-generate]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v3/] user=0 workdir=\n[Tests/go-generate]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/setup/index.js] user= workdir=\n[Tests/go-generate]   | Setup go version spec 1.16\n[Tests/go-generate]   \ud83d\udcac  ::debug::isExplicit: \n[Tests/go-generate]   \ud83d\udcac  ::debug::explicit? false\n[Tests/go-generate]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Tests/go-generate]   \ud83d\udcac  ::debug::explicit? true\n[Tests/go-generate]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Tests/go-generate]   \ud83d\udcac  ::debug::explicit? true\n[Tests/go-generate]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Tests/go-generate]   \ud83d\udcac  ::debug::explicit? true\n[Tests/go-generate]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Tests/go-generate]   \ud83d\udcac  ::debug::matched: 1.16.7\n[Tests/go-generate]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.16.7/x64\n[Tests/go-generate]   \ud83d\udcac  ::debug::Found tool in cache go 1.16.7 x64\n[Tests/go-generate]   | Found in cache @ /opt/hostedtoolcache/go/1.16.7/x64\n[Tests/go-generate]   | Added go to the path\n[Tests/go-generate]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.16.7/x64/bin/go:\n[Tests/go-generate]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Tests/go-generate]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Tests/go-generate]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Tests/go-generate]   \ud83d\udcac  ::debug::add bin true\n[Tests/go-generate]   | Successfully set up Go version 1.16\n[Tests/go-generate]   \u2753 add-matcher /run/act/actions/actions-setup-go@v3/matchers.json\n[Tests/go-generate]   | go version go1.16.7 linux/amd64\n[Tests/go-generate]   | \n[Tests/go-generate]   \u2753  ::group::go env\n[Tests/go-generate]   | GO111MODULE=\"\"\n[Tests/go-generate]   | GOARCH=\"amd64\"\n[Tests/go-generate]   | GOBIN=\"\"\n[Tests/go-generate]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Tests/go-generate]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Tests/go-generate]   | GOEXE=\"\"\n[Tests/go-generate]   | GOFLAGS=\"\"\n[Tests/go-generate]   | GOHOSTARCH=\"amd64\"\n[Tests/go-generate]   | GOHOSTOS=\"linux\"\n[Tests/go-generate]   | GOINSECURE=\"\"\n[Tests/go-generate]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Tests/go-generate]   | GONOPROXY=\"\"\n[Tests/go-generate]   | GONOSUMDB=\"\"\n[Tests/go-generate]   | GOOS=\"linux\"\n[Tests/go-generate]   | GOPATH=\"/home/runneradmin/go\"\n[Tests/go-generate]   | GOPRIVATE=\"\"\n[Tests/go-generate]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Tests/go-generate]   | GOROOT=\"/opt/hostedtoolcache/go/1.16.7/x64\"\n[Tests/go-generate]   | GOSUMDB=\"sum.golang.org\"\n[Tests/go-generate]   | GOTMPDIR=\"\"\n[Tests/go-generate]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.16.7/x64/pkg/tool/linux_amd64\"\n[Tests/go-generate]   | GOVCS=\"\"\n[Tests/go-generate]   | GOVERSION=\"go1.16.7\"\n[Tests/go-generate]   | GCCGO=\"gccgo\"\n[Tests/go-generate]   | AR=\"ar\"\n[Tests/go-generate]   | CC=\"gcc\"\n[Tests/go-generate]   | CXX=\"g++\"\n[Tests/go-generate]   | CGO_ENABLED=\"1\"\n[Tests/go-generate]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/reviewdog-errorformat/go.mod\"\n[Tests/go-generate]   | CGO_CFLAGS=\"-g -O2\"\n[Tests/go-generate]   | CGO_CPPFLAGS=\"\"\n[Tests/go-generate]   | CGO_CXXFLAGS=\"-g -O2\"\n[Tests/go-generate]   | CGO_FFLAGS=\"-g -O2\"\n[Tests/go-generate]   | CGO_LDFLAGS=\"-g -O2\"\n[Tests/go-generate]   | PKG_CONFIG=\"pkg-config\"\n[Tests/go-generate]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build4211725623=/tmp/go-build -gno-record-gcc-switches\"\n[Tests/go-generate]   | \n[Tests/go-generate]   \u2753  ::endgroup::\n[Tests/go-generate]   \u2705  Success - Main actions/setup-go@v3\n[Tests/go-generate]   \u2699  ::set-output:: go-version=1.16.7\n[Tests/go-generate]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.16.7/x64/bin\n[Tests/go-generate]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Tests/go-generate] \u2b50 Run Main actions/checkout@v3\n[Tests/go-generate]   \u2705  Success - Main actions/checkout@v3\n[Tests/go-generate] \u2b50 Run Main go generate ./...\n[Tests/go-generate]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Tests/go-generate]   | go: downloading github.com/haya14busa/go-checkstyle v0.0.0-20170303121022-5e9d09f51fa1\n[Tests/go-generate]   | go: downloading github.com/haya14busa/go-sarif v0.0.0-20210102043135-e2c5fed2fa3d\n[Tests/go-generate]   \u2705  Success - Main go generate ./...\n[Tests/go-generate] \u2b50 Run Main Check go generate diff\n[Tests/go-generate]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Tests/go-generate]   \u2705  Success - Main Check go generate diff\n[Tests/go-generate] \u2b50 Run Post actions/setup-go@v3\n[Tests/go-generate]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/cache-save/index.js] user= workdir=\n[Tests/go-generate]   \u2705  Success - Post actions/setup-go@v3\n[Tests/go-generate] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: Error response from daemon: remove act-Tests-test-efaca9afe36619b200b3cfa9e5d34050817b306c4f3904a728db9dc8b724d71d-env: volume is in use - [82826431ae591d4c1d8d9c639dfc5049aee8315dc6e84e78fda17661fa60e32f]\n"
}