{
    "repository": "matrix-org/go-neb",
    "clone_url": "https://github.com/matrix-org/go-neb.git",
    "timestamp": "2023-05-30T11:48:05.143836Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/Run the tests] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Run the tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Run the tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Run the tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Run the tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/matrix-org-go-neb] user=0 workdir=\n[CI/Run the tests]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[CI/Run the tests] \u2b50 Run Main Checkout code\n[CI/Run the tests]   \u2705  Success - Main Checkout code\n[CI/Run the tests] \u2b50 Run Main Setup Go\n[CI/Run the tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[CI/Run the tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[CI/Run the tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[CI/Run the tests]   | Setup go stable version spec ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::isExplicit: \n[CI/Run the tests]   \ud83d\udcac  ::debug::explicit? false\n[CI/Run the tests]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[CI/Run the tests]   \ud83d\udcac  ::debug::explicit? true\n[CI/Run the tests]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[CI/Run the tests]   \ud83d\udcac  ::debug::explicit? true\n[CI/Run the tests]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[CI/Run the tests]   \ud83d\udcac  ::debug::explicit? true\n[CI/Run the tests]   \ud83d\udcac  ::debug::evaluating 3 versions\n[CI/Run the tests]   \ud83d\udcac  ::debug::match not found\n[CI/Run the tests]   | Attempting to download ~1.18.0...\n[CI/Run the tests]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[CI/Run the tests]   \ud83d\udcac  ::debug::Error: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v2/dist/index.js:5294:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[CI/Run the tests]   | Falling back to download directly from Go\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.20.4 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.20.3 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.20.2 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.20.1 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.20.0 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.20.0-rc3 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.20.0-rc2 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.20.0-rc1 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.19.9 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.19.8 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.19.7 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.19.6 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.19.5 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.19.4 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.19.3 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.19.2 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.19.1 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.19.0 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.19.0-rc2 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.19.0-rc1 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.19.0-beta1 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::check 1.18.10 satisfies ~1.18.0\n[CI/Run the tests]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[CI/Run the tests]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[CI/Run the tests]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[CI/Run the tests]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[CI/Run the tests]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[CI/Run the tests]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[CI/Run the tests]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[CI/Run the tests]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[CI/Run the tests]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[CI/Run the tests]   \ud83d\udcac  ::debug::matched go1.18.10\n[CI/Run the tests]   | Install from dist\n[CI/Run the tests]   | Acquiring go1.18.10 from https://storage.googleapis.com/golang/go1.18.10.linux-amd64.tar.gz\n[CI/Run the tests]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.18.10.linux-amd64.tar.gz\n[CI/Run the tests]   \ud83d\udcac  ::debug::Destination /tmp/d366eefa-0b6e-4517-9289-674fe03d69e4\n[CI/Run the tests]   \ud83d\udcac  ::debug::download complete\n[CI/Run the tests]   | Extracting Go...\n[CI/Run the tests]   \ud83d\udcac  ::debug::Checking tar --version\n[CI/Run the tests]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[CI/Run the tests]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/f121c11e-636f-4847-89d8-66677cf84b11 -f /tmp/d366eefa-0b6e-4517-9289-674fe03d69e4\n[CI/Run the tests]   | Successfully extracted go to /tmp/f121c11e-636f-4847-89d8-66677cf84b11\n[CI/Run the tests]   | Adding to the cache ...\n[CI/Run the tests]   \ud83d\udcac  ::debug::Caching tool go 1.18.10 x64\n[CI/Run the tests]   \ud83d\udcac  ::debug::source dir: /tmp/f121c11e-636f-4847-89d8-66677cf84b11/go\n[CI/Run the tests]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.18.10/x64\n[CI/Run the tests]   \ud83d\udcac  ::debug::finished caching tool\n[CI/Run the tests]   | Successfully cached go to /opt/hostedtoolcache/go/1.18.10/x64\n[CI/Run the tests]   | Added go to the path\n[CI/Run the tests]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.18.10/x64/bin/go:\n[CI/Run the tests]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[CI/Run the tests]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[CI/Run the tests]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[CI/Run the tests]   \ud83d\udcac  ::debug::add bin true\n[CI/Run the tests]   | Successfully setup go version ~1.18.0\n[CI/Run the tests]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[CI/Run the tests]   | go version go1.18.10 linux/amd64\n[CI/Run the tests]   | \n[CI/Run the tests]   \u2753  ::group::go env\n[CI/Run the tests]   | GO111MODULE=\"\"\n[CI/Run the tests]   | GOARCH=\"amd64\"\n[CI/Run the tests]   | GOBIN=\"\"\n[CI/Run the tests]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[CI/Run the tests]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[CI/Run the tests]   | GOEXE=\"\"\n[CI/Run the tests]   | GOEXPERIMENT=\"\"\n[CI/Run the tests]   | GOFLAGS=\"\"\n[CI/Run the tests]   | GOHOSTARCH=\"amd64\"\n[CI/Run the tests]   | GOHOSTOS=\"linux\"\n[CI/Run the tests]   | GOINSECURE=\"\"\n[CI/Run the tests]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[CI/Run the tests]   | GONOPROXY=\"\"\n[CI/Run the tests]   | GONOSUMDB=\"\"\n[CI/Run the tests]   | GOOS=\"linux\"\n[CI/Run the tests]   | GOPATH=\"/home/runneradmin/go\"\n[CI/Run the tests]   | GOPRIVATE=\"\"\n[CI/Run the tests]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[CI/Run the tests]   | GOROOT=\"/opt/hostedtoolcache/go/1.18.10/x64\"\n[CI/Run the tests]   | GOSUMDB=\"sum.golang.org\"\n[CI/Run the tests]   | GOTMPDIR=\"\"\n[CI/Run the tests]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.18.10/x64/pkg/tool/linux_amd64\"\n[CI/Run the tests]   | GOVCS=\"\"\n[CI/Run the tests]   | GOVERSION=\"go1.18.10\"\n[CI/Run the tests]   | GCCGO=\"gccgo\"\n[CI/Run the tests]   | GOAMD64=\"v1\"\n[CI/Run the tests]   | AR=\"ar\"\n[CI/Run the tests]   | CC=\"gcc\"\n[CI/Run the tests]   | CXX=\"g++\"\n[CI/Run the tests]   | CGO_ENABLED=\"1\"\n[CI/Run the tests]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/matrix-org-go-neb/go.mod\"\n[CI/Run the tests]   | GOWORK=\"\"\n[CI/Run the tests]   | CGO_CFLAGS=\"-g -O2\"\n[CI/Run the tests]   | CGO_CPPFLAGS=\"\"\n[CI/Run the tests]   | CGO_CXXFLAGS=\"-g -O2\"\n[CI/Run the tests]   | CGO_FFLAGS=\"-g -O2\"\n[CI/Run the tests]   | CGO_LDFLAGS=\"-g -O2\"\n[CI/Run the tests]   | PKG_CONFIG=\"pkg-config\"\n[CI/Run the tests]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2281184432=/tmp/go-build -gno-record-gcc-switches\"\n[CI/Run the tests]   | \n[CI/Run the tests]   \u2753  ::endgroup::\n[CI/Run the tests]   \u2705  Success - Main Setup Go\n[CI/Run the tests]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.18.10/x64\n[CI/Run the tests]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.18.10/x64/bin\n[CI/Run the tests]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[CI/Run the tests] \u2b50 Run Main Install libolm\n[CI/Run the tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/Run the tests]   | Reading package lists...\n[CI/Run the tests]   | Building dependency tree...\n[CI/Run the tests]   | Reading state information...\n[CI/Run the tests]   | The following NEW packages will be installed:\n[CI/Run the tests]   |   libolm-dev libolm3\n[CI/Run the tests]   | 0 upgraded, 2 newly installed, 0 to remove and 20 not upgraded.\n[CI/Run the tests]   | Need to get 111 kB of archives.\n[CI/Run the tests]   | After this operation, 309 kB of additional disk space will be used.\n[CI/Run the tests]   | Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libolm3 amd64 3.1.3+dfsg-2build2 [98.9 kB]\n[CI/Run the tests]   | Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libolm-dev amd64 3.1.3+dfsg-2build2 [11.9 kB]\n[CI/Run the tests]   | Fetched 111 kB in 1s (174 kB/s)\n[CI/Run the tests]   | Selecting previously unselected package libolm3:amd64.\r\n[CI/Run the tests]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[CI/Run the tests]   | Preparing to unpack .../libolm3_3.1.3+dfsg-2build2_amd64.deb ...\r\n[CI/Run the tests]   | Unpacking libolm3:amd64 (3.1.3+dfsg-2build2) ...\r\n[CI/Run the tests]   | Selecting previously unselected package libolm-dev:amd64.\r\n[CI/Run the tests]   | Preparing to unpack .../libolm-dev_3.1.3+dfsg-2build2_amd64.deb ...\r\n[CI/Run the tests]   | Unpacking libolm-dev:amd64 (3.1.3+dfsg-2build2) ...\r\n[CI/Run the tests]   | Setting up libolm3:amd64 (3.1.3+dfsg-2build2) ...\r\n[CI/Run the tests]   | Setting up libolm-dev:amd64 (3.1.3+dfsg-2build2) ...\r\n[CI/Run the tests]   | Processing triggers for libc-bin (2.31-0ubuntu9.2) ...\r\n[CI/Run the tests]   \u2705  Success - Main Install libolm\n[CI/Run the tests] \u2b50 Run Main Install linters\n[CI/Run the tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/Run the tests]   | go: downloading honnef.co/go/tools v0.4.3\n[CI/Run the tests]   | go: downloading golang.org/x/exp/typeparams v0.0.0-20221208152030-732eee02a75a\n[CI/Run the tests]   | go: downloading golang.org/x/tools v0.4.1-0.20221208213631-3f74d914ae6d\n[CI/Run the tests]   | go: downloading github.com/BurntSushi/toml v1.2.1\n[CI/Run the tests]   | go: downloading golang.org/x/sys v0.3.0\n[CI/Run the tests]   | go: downloading golang.org/x/mod v0.7.0\n[CI/Run the tests]   | # honnef.co/go/tools/unused\n[CI/Run the tests]   | /home/runneradmin/go/pkg/mod/honnef.co/go/tools@v0.4.3/unused/unused.go:419:14: obj.Origin undefined (type *types.Var has no field or method Origin)\n[CI/Run the tests]   | /home/runneradmin/go/pkg/mod/honnef.co/go/tools@v0.4.3/unused/unused.go:421:14: obj.Origin undefined (type *types.Func has no field or method Origin)\n[CI/Run the tests]   | note: module requires Go 1.19\n[CI/Run the tests]   | # honnef.co/go/tools/staticcheck\n[CI/Run the tests]   | /home/runneradmin/go/pkg/mod/honnef.co/go/tools@v0.4.3/staticcheck/lint.go:4025:29: righti.Method(i).Origin undefined (type *types.Func has no field or method Origin)\n[CI/Run the tests]   | /home/runneradmin/go/pkg/mod/honnef.co/go/tools@v0.4.3/staticcheck/lint.go:4030:36: sel.Obj().(*types.Func).Origin undefined (type *types.Func has no field or method Origin)\n[CI/Run the tests]   | note: module requires Go 1.19\n[CI/Run the tests]   \u274c  Failure - Main Install linters\n[CI/Run the tests] exitcode '2': failure\n[CI/Run the tests] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Run the tests' failed\n"
}