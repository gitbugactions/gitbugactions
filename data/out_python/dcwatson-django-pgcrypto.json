{
    "repository": "dcwatson/django-pgcrypto",
    "clone_url": "https://github.com/dcwatson/django-pgcrypto.git",
    "timestamp": "2023-05-29T14:33:03.515155Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/test  ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/checks] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/test  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/checks]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/checks]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/checks]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/test  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/test  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/checks]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/dcwatson-django-pgcrypto] user=0 workdir=\n[CI/checks]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v1\n[CI/checks] \u2b50 Run Main actions/checkout@v1\n[CI/checks]   \u2705  Success - Main actions/checkout@v1\n[CI/checks] \u2b50 Run Main Set up Python\n[CI/checks]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v1/ dst=/var/run/act/actions/actions-setup-python@v1/\n[CI/checks]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v1/] user=0 workdir=\n[CI/checks]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v1/dist/index.js] user= workdir=\n[CI/test  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/dcwatson-django-pgcrypto] user=0 workdir=\n[CI/checks]   \ud83d\udcac  ::debug::Semantic version spec of 3.x is 3.x\n[CI/checks]   \ud83d\udcac  ::debug::isExplicit: \n[CI/checks]   \ud83d\udcac  ::debug::explicit? false\n[CI/checks]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[CI/checks]   \ud83d\udcac  ::debug::explicit? true\n[CI/checks]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[CI/checks]   \ud83d\udcac  ::debug::explicit? true\n[CI/checks]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[CI/checks]   \ud83d\udcac  ::debug::explicit? true\n[CI/checks]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[CI/checks]   \ud83d\udcac  ::debug::explicit? true\n[CI/checks]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[CI/checks]   \ud83d\udcac  ::debug::explicit? true\n[CI/checks]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[CI/checks]   \ud83d\udcac  ::debug::explicit? true\n[CI/checks]   \ud83d\udcac  ::debug::evaluating 6 versions\n[CI/checks]   \ud83d\udcac  ::debug::matched: 3.9.6\n[CI/checks]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[CI/checks]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[CI/checks]   | Successfully setup CPython (3.9.6)\n[CI/checks]   \u2753 add-matcher /run/act/actions/actions-setup-python@v1/.github/python.json\n[CI/checks]   \u2705  Success - Main Set up Python\n[CI/checks]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[CI/checks]   \u2699  ::set-output:: python-version=3.9.6\n[CI/checks]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[CI/checks]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[CI/checks] \u2b50 Run Main Install Checkers\n[CI/checks]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/checks]   | Collecting black\n[CI/test  ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v1\n[CI/checks]   |   Downloading black-23.3.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.7 MB)\n[CI/checks]   | Collecting isort\n[CI/checks]   |   Downloading isort-5.12.0-py3-none-any.whl (91 kB)\n[CI/test  ] \ud83e\uddea  Matrix: map[django-version:2.2 python-version:3.5]\n[CI/checks]   | Collecting flake8\n[CI/checks]   |   Downloading flake8-6.0.0-py2.py3-none-any.whl (57 kB)\n[CI/test  ] \u2b50 Run Main actions/checkout@v1\n[CI/checks]   | Collecting packaging>=22.0\n[CI/checks]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[CI/checks]   | Collecting platformdirs>=2\n[CI/checks]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[CI/checks]   | Collecting click>=8.0.0\n[CI/checks]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[CI/checks]   | Collecting typing-extensions>=3.10.0.0\n[CI/checks]   |   Downloading typing_extensions-4.6.2-py3-none-any.whl (31 kB)\n[CI/test  ]   \u2705  Success - Main actions/checkout@v1\n[CI/checks]   | Collecting mypy-extensions>=0.4.3\n[CI/checks]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[CI/checks]   | Collecting pathspec>=0.9.0\n[CI/checks]   |   Downloading pathspec-0.11.1-py3-none-any.whl (29 kB)\n[CI/checks]   | Collecting tomli>=1.1.0\n[CI/checks]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[CI/checks]   | Collecting pycodestyle<2.11.0,>=2.10.0\n[CI/checks]   |   Downloading pycodestyle-2.10.0-py2.py3-none-any.whl (41 kB)\n[CI/checks]   | Collecting pyflakes<3.1.0,>=3.0.0\n[CI/checks]   |   Downloading pyflakes-3.0.1-py2.py3-none-any.whl (62 kB)\n[CI/checks]   | Collecting mccabe<0.8.0,>=0.7.0\n[CI/checks]   |   Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\n[CI/checks]   | Installing collected packages: typing-extensions, tomli, pyflakes, pycodestyle, platformdirs, pathspec, packaging, mypy-extensions, mccabe, click, isort, flake8, black\n[CI/checks]   | Successfully installed black-23.3.0 click-8.1.3 flake8-6.0.0 isort-5.12.0 mccabe-0.7.0 mypy-extensions-1.0.0 packaging-23.1 pathspec-0.11.1 platformdirs-3.5.1 pycodestyle-2.10.0 pyflakes-3.0.1 tomli-2.0.1 typing-extensions-4.6.2\n[CI/checks]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[CI/checks]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.9.6/x64/bin/python -m pip install --upgrade pip' command.\n[CI/checks]   \u2705  Success - Main Install Checkers\n[CI/test  ] \u2b50 Run Main Set up Python 3.5\n[CI/test  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v1/ dst=/var/run/act/actions/actions-setup-python@v1/\n[CI/checks] \u2b50 Run Main black\n[CI/test  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v1/] user=0 workdir=\n[CI/checks]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/test  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v1/dist/index.js] user= workdir=\n[CI/test  ]   \ud83d\udcac  ::debug::Semantic version spec of 3.5 is 3.5\n[CI/test  ]   \ud83d\udcac  ::debug::isExplicit: \n[CI/test  ]   \ud83d\udcac  ::debug::explicit? false\n[CI/test  ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[CI/test  ]   \ud83d\udcac  ::debug::explicit? true\n[CI/test  ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[CI/test  ]   \ud83d\udcac  ::debug::explicit? true\n[CI/test  ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[CI/test  ]   \ud83d\udcac  ::debug::explicit? true\n[CI/test  ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[CI/test  ]   \ud83d\udcac  ::debug::explicit? true\n[CI/test  ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[CI/test  ]   \ud83d\udcac  ::debug::explicit? true\n[CI/test  ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[CI/test  ]   \ud83d\udcac  ::debug::explicit? true\n[CI/test  ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[CI/test  ]   \ud83d\udcac  ::debug::matched: 3.5.10\n[CI/test  ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.5.10/x64\n[CI/test  ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.5.10 x64\n[CI/test  ]   | Successfully setup CPython (3.5.10)\n[CI/test  ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v1/.github/python.json\n[CI/test  ]   \u2705  Success - Main Set up Python 3.5\n[CI/checks]   | would reformat /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/dcwatson-django-pgcrypto/pgcrypto/fields.py\n[CI/checks]   | \n[CI/checks]   | Oh no! \ud83d\udca5 \ud83d\udc94 \ud83d\udca5\n[CI/checks]   | 1 file would be reformatted, 8 files would be left unchanged.\n[CI/checks]   \u274c  Failure - Main black\n[CI/test  ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.5.10/x64\n[CI/test  ]   \u2699  ::set-output:: python-version=3.5.10\n[CI/test  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.5.10/x64\n[CI/test  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.5.10/x64/bin\n[CI/test  ] \u2b50 Run Main Install Django\n[CI/checks] exitcode '1': failure\n[CI/test  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/test  ]   | DEPRECATION: Python 3.5 reached the end of its life on September 13th, 2020. Please upgrade your Python as Python 3.5 is no longer maintained. pip 21.0 will drop support for Python 3.5 in January 2021. pip 21.0 will remove support for this functionality.\n[CI/test  ]   | Collecting cryptography\n[CI/test  ]   |   Downloading cryptography-3.2.1-cp35-abi3-manylinux2010_x86_64.whl (2.6 MB)\n[CI/test  ]   | Collecting psycopg2-binary\n[CI/test  ]   |   Downloading psycopg2_binary-2.8.6-cp35-cp35m-manylinux1_x86_64.whl (3.0 MB)\n[CI/test  ]   | Collecting Django~=2.2.0\n[CI/test  ]   |   Downloading Django-2.2.28-py3-none-any.whl (7.5 MB)\n[CI/test  ]   | Collecting pytz\n[CI/test  ]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[CI/test  ]   | Collecting sqlparse>=0.2.2\n[CI/test  ]   |   Downloading sqlparse-0.4.4-py3-none-any.whl (41 kB)\n[CI/checks] \ud83c\udfc1  Job failed\n[CI/test  ]   | Collecting cffi!=1.11.3,>=1.8\n[CI/test  ]   |   Downloading cffi-1.15.1.tar.gz (508 kB)\n[CI/test  ]   | Collecting six>=1.4.1\n[CI/test  ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[CI/test  ]   | Collecting pycparser\n[CI/test  ]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[CI/test  ]   | Using legacy 'setup.py install' for cffi, since package 'wheel' is not installed.\n[CI/test  ]   | Installing collected packages: pycparser, sqlparse, six, pytz, cffi, psycopg2-binary, Django, cryptography\n[CI/test  ]   |     Running setup.py install for cffi: started\n[CI/test  ]   |     Running setup.py install for cffi: finished with status 'done'\n[CI/test  ]   | Successfully installed Django-2.2.28 cffi-1.15.1 cryptography-3.2.1 psycopg2-binary-2.8.6 pycparser-2.21 pytz-2023.3 six-1.16.0 sqlparse-0.4.4\n[CI/test  ]   \u2705  Success - Main Install Django\n[CI/test  ] \u2b50 Run Main Run Tests\n[CI/test  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/test  ]   | /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/dcwatson-django-pgcrypto/pgcrypto/fields.py:4: CryptographyDeprecationWarning: Python 3.5 support will be dropped in the next release of cryptography. Please upgrade your Python.\n[CI/test  ]   |   from cryptography.hazmat.backends import default_backend\n[CI/test  ]   | Creating test database for alias 'default'...\n[CI/test  ]   | /opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/db/backends/postgresql/base.py:270: RuntimeWarning: Normally Django will use a connection to the 'postgres' database to avoid running initialization queries against the production database when it's not needed (for example, when running tests). Django was unable to create a connection to the 'postgres' database and will use the first PostgreSQL database instead.\n[CI/test  ]   |   RuntimeWarning\n[CI/test  ]   | Traceback (most recent call last):\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/db/backends/base/base.py\", line 217, in ensure_connection\n[CI/test  ]   |     self.connect()\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/db/backends/base/base.py\", line 195, in connect\n[CI/test  ]   |     self.connection = self.get_new_connection(conn_params)\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/db/backends/postgresql/base.py\", line 178, in get_new_connection\n[CI/test  ]   |     connection = Database.connect(**conn_params)\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/psycopg2/__init__.py\", line 127, in connect\n[CI/test  ]   |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[CI/test  ]   | psycopg2.OperationalError: could not connect to server: Connection refused\n[CI/test  ]   | \tIs the server running on host \"localhost\" (127.0.0.1) and accepting\n[CI/test  ]   | \tTCP/IP connections on port 5432?\n[CI/test  ]   | could not connect to server: Cannot assign requested address\n[CI/test  ]   | \tIs the server running on host \"localhost\" (::1) and accepting\n[CI/test  ]   | \tTCP/IP connections on port 5432?\n[CI/test  ]   | \n[CI/test  ]   | \n[CI/test  ]   | The above exception was the direct cause of the following exception:\n[CI/test  ]   | \n[CI/test  ]   | Traceback (most recent call last):\n[CI/test  ]   |   File \"manage.py\", line 9, in <module>\n[CI/test  ]   |     execute_from_command_line(sys.argv)\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/core/management/__init__.py\", line 381, in execute_from_command_line\n[CI/test  ]   |     utility.execute()\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/core/management/__init__.py\", line 375, in execute\n[CI/test  ]   |     self.fetch_command(subcommand).run_from_argv(self.argv)\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/core/management/commands/test.py\", line 23, in run_from_argv\n[CI/test  ]   |     super().run_from_argv(argv)\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/core/management/base.py\", line 323, in run_from_argv\n[CI/test  ]   |     self.execute(*args, **cmd_options)\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/core/management/base.py\", line 364, in execute\n[CI/test  ]   |     output = self.handle(*args, **options)\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/core/management/commands/test.py\", line 53, in handle\n[CI/test  ]   |     failures = test_runner.run_tests(test_labels)\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/test/runner.py\", line 629, in run_tests\n[CI/test  ]   |     old_config = self.setup_databases(aliases=databases)\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/test/runner.py\", line 554, in setup_databases\n[CI/test  ]   |     self.parallel, **kwargs\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/test/utils.py\", line 174, in setup_databases\n[CI/test  ]   |     serialize=connection.settings_dict.get('TEST', {}).get('SERIALIZE', True),\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/db/backends/base/creation.py\", line 58, in create_test_db\n[CI/test  ]   |     self._create_test_db(verbosity, autoclobber, keepdb)\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/db/backends/base/creation.py\", line 168, in _create_test_db\n[CI/test  ]   |     with self._nodb_connection.cursor() as cursor:\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/db/backends/base/base.py\", line 256, in cursor\n[CI/test  ]   |     return self._cursor()\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/db/backends/base/base.py\", line 233, in _cursor\n[CI/test  ]   |     self.ensure_connection()\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/db/backends/base/base.py\", line 217, in ensure_connection\n[CI/test  ]   |     self.connect()\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/db/utils.py\", line 89, in __exit__\n[CI/test  ]   |     raise dj_exc_value.with_traceback(traceback) from exc_value\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/db/backends/base/base.py\", line 217, in ensure_connection\n[CI/test  ]   |     self.connect()\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/db/backends/base/base.py\", line 195, in connect\n[CI/test  ]   |     self.connection = self.get_new_connection(conn_params)\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/django/db/backends/postgresql/base.py\", line 178, in get_new_connection\n[CI/test  ]   |     connection = Database.connect(**conn_params)\n[CI/test  ]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/psycopg2/__init__.py\", line 127, in connect\n[CI/test  ]   |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[CI/test  ]   | django.db.utils.OperationalError: could not connect to server: Connection refused\n[CI/test  ]   | \tIs the server running on host \"localhost\" (127.0.0.1) and accepting\n[CI/test  ]   | \tTCP/IP connections on port 5432?\n[CI/test  ]   | could not connect to server: Cannot assign requested address\n[CI/test  ]   | \tIs the server running on host \"localhost\" (::1) and accepting\n[CI/test  ]   | \tTCP/IP connections on port 5432?\n[CI/test  ]   | \n[CI/test  ]   \u274c  Failure - Main Run Tests\n[CI/test  ] exitcode '1': failure\n[CI/test  ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'test' failed\n"
}