{
    "repository": "py-sherlock/sherlock",
    "clone_url": "https://github.com/py-sherlock/sherlock.git",
    "timestamp": "2023-05-29T15:14:53.641193Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/CD/Lint             ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/CD/Test 3.7 - Ubuntu] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/CD/Lint             ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/CD/Lint             ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/CD/Lint             ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/py-sherlock-sherlock] user=0 workdir=\n[CI/CD/Lint             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/py-sherlock-sherlock] user=0 workdir=\n[CI/CD/Test 3.7 - Ubuntu]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[CI/CD/Lint             ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[CI/CD/Test 3.7 - Ubuntu]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[CI/CD/Lint             ] \u2b50 Run Main actions/checkout@v3\n[CI/CD/Lint             ]   \u2705  Success - Main actions/checkout@v3\n[CI/CD/Test 3.7 - Ubuntu] \ud83e\uddea  Matrix: map[os:Ubuntu py:3.7]\n[CI/CD/Test 3.7 - Ubuntu] \u2b50 Run Main actions/checkout@v3\n[CI/CD/Test 3.7 - Ubuntu]   \u2705  Success - Main actions/checkout@v3\n[CI/CD/Lint             ] \u2b50 Run Main Install Poetry\n[CI/CD/Test 3.7 - Ubuntu] \u2b50 Run Main Install Poetry\n[CI/CD/Lint             ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[CI/CD/Test 3.7 - Ubuntu]   | \u26a0\ufe0f  Note: '/home/runneradmin/.local/bin' is not on your PATH environment\n[CI/CD/Test 3.7 - Ubuntu]   |     variable. These apps will not be globally accessible until your PATH is\n[CI/CD/Test 3.7 - Ubuntu]   |     updated. Run `pipx ensurepath` to automatically add it, or manually modify\n[CI/CD/Test 3.7 - Ubuntu]   |     your PATH in your shell's config file (i.e. ~/.bashrc).\n[CI/CD/Test 3.7 - Ubuntu]   | creating virtual environment...\n[CI/CD/Test 3.7 - Ubuntu]   | creating shared libraries...\n[CI/CD/Test 3.7 - Ubuntu]   | upgrading shared libraries...\n[CI/CD/Test 3.7 - Ubuntu]   | installing poetry...\n[CI/CD/Test 3.7 - Ubuntu]   |   installed package poetry 1.5.0, Python 3.8.10\n[CI/CD/Test 3.7 - Ubuntu]   |   These apps are now globally available\n[CI/CD/Test 3.7 - Ubuntu]   |     - poetry\n[CI/CD/Test 3.7 - Ubuntu]   | done! \u2728 \ud83c\udf1f \u2728\n[CI/CD/Test 3.7 - Ubuntu]   \u2705  Success - Main Install Poetry\n[CI/CD/Test 3.7 - Ubuntu] \u2b50 Run Main Setup Python 3.7\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[CI/CD/Lint             ]   | \u26a0\ufe0f  Note: '/home/runneradmin/.local/bin' is not on your PATH environment\n[CI/CD/Lint             ]   |     variable. These apps will not be globally accessible until your PATH is\n[CI/CD/Lint             ]   |     updated. Run `pipx ensurepath` to automatically add it, or manually modify\n[CI/CD/Lint             ]   |     your PATH in your shell's config file (i.e. ~/.bashrc).\n[CI/CD/Lint             ]   | creating virtual environment...\n[CI/CD/Lint             ]   | creating shared libraries...\n[CI/CD/Lint             ]   | upgrading shared libraries...\n[CI/CD/Lint             ]   | installing poetry...\n[CI/CD/Lint             ]   |   installed package poetry 1.5.0, Python 3.8.10\n[CI/CD/Lint             ]   |   These apps are now globally available\n[CI/CD/Lint             ]   |     - poetry\n[CI/CD/Lint             ]   | done! \u2728 \ud83c\udf1f \u2728\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[CI/CD/Lint             ]   \u2705  Success - Main Install Poetry\n[CI/CD/Lint             ] \u2b50 Run Main Setup Python \n[CI/CD/Lint             ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[CI/CD/Lint             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[CI/CD/Lint             ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[CI/CD/Lint             ]   \u2753  ::group::Installed versions\n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::isExplicit: \n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::explicit? false\n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::explicit? true\n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::explicit? true\n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::explicit? true\n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::explicit? true\n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::explicit? true\n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::explicit? true\n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::matched: 3.7.11\n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[CI/CD/Lint             ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[CI/CD/Lint             ]   | Successfully set up CPython (3.7.11)\n[CI/CD/Lint             ]   \u2753  ::endgroup::\n[CI/CD/Lint             ]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[CI/CD/Lint             ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[CI/CD/Test 3.7 - Ubuntu]   \u2753  ::group::Installed versions\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::isExplicit: \n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::explicit? false\n[CI/CD/Lint             ]   \u2705  Success - Main Setup Python \n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::explicit? true\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::explicit? true\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::explicit? true\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::explicit? true\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::explicit? true\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::explicit? true\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::evaluating 6 versions\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::matched: 3.7.11\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[CI/CD/Test 3.7 - Ubuntu]   | Successfully set up CPython (3.7.11)\n[CI/CD/Test 3.7 - Ubuntu]   \u2753  ::endgroup::\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[CI/CD/Test 3.7 - Ubuntu]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[CI/CD/Test 3.7 - Ubuntu]   \u2705  Success - Main Setup Python 3.7\n[CI/CD/Test 3.7 - Ubuntu]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[CI/CD/Test 3.7 - Ubuntu]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[CI/CD/Test 3.7 - Ubuntu]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[CI/CD/Test 3.7 - Ubuntu]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[CI/CD/Test 3.7 - Ubuntu]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[CI/CD/Test 3.7 - Ubuntu]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[CI/CD/Lint             ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[CI/CD/Lint             ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[CI/CD/Lint             ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[CI/CD/Lint             ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[CI/CD/Lint             ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[CI/CD/Lint             ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[CI/CD/Lint             ]   \u2699  ::set-output:: python-version=3.7.11\n[CI/CD/Lint             ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[CI/CD/Test 3.7 - Ubuntu]   \u2699  ::set-output:: python-version=3.7.11\n[CI/CD/Test 3.7 - Ubuntu]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[CI/CD/Test 3.7 - Ubuntu]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[CI/CD/Test 3.7 - Ubuntu]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[CI/CD/Lint             ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[CI/CD/Lint             ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[CI/CD/Lint             ] \u2b50 Run Main Install linting tools\n[CI/CD/Test 3.7 - Ubuntu] \u2b50 Run Main Install `libmemcached-dev`\n[CI/CD/Lint             ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/CD/Lint             ]   | /var/run/act/workflow/3: line 2: poetry: command not found\n[CI/CD/Lint             ]   \u274c  Failure - Main Install linting tools\n[CI/CD/Lint             ] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[CI/CD/Test 3.7 - Ubuntu]   | Reading package lists...\n[CI/CD/Test 3.7 - Ubuntu]   | Building dependency tree...\n[CI/CD/Test 3.7 - Ubuntu]   | Reading state information...\n[CI/CD/Test 3.7 - Ubuntu]   | The following additional packages will be installed:\n[CI/CD/Test 3.7 - Ubuntu]   |   libhashkit-dev libhashkit2 libmemcachedutil2 libsasl2-dev\n[CI/CD/Test 3.7 - Ubuntu]   | The following NEW packages will be installed:\n[CI/CD/Test 3.7 - Ubuntu]   |   libhashkit-dev libhashkit2 libmemcached-dev libmemcachedutil2 libsasl2-dev\n[CI/CD/Test 3.7 - Ubuntu]   | 0 upgraded, 5 newly installed, 0 to remove and 20 not upgraded.\n[CI/CD/Test 3.7 - Ubuntu]   | Need to get 533 kB of archives.\n[CI/CD/Test 3.7 - Ubuntu]   | After this operation, 2139 kB of additional disk space will be used.\n[CI/CD/Test 3.7 - Ubuntu]   | Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libhashkit2 amd64 1.0.18-4.2ubuntu2 [35.2 kB]\n[CI/CD/Test 3.7 - Ubuntu]   | Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 libhashkit-dev amd64 1.0.18-4.2ubuntu2 [24.0 kB]\n[CI/CD/Test 3.7 - Ubuntu]   | Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 libmemcachedutil2 amd64 1.0.18-4.2ubuntu2 [9644 B]\n[CI/CD/Test 3.7 - Ubuntu]   | Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 libsasl2-dev amd64 2.1.27+dfsg-2 [225 kB]\n[CI/CD/Test 3.7 - Ubuntu]   | Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 libmemcached-dev amd64 1.0.18-4.2ubuntu2 [239 kB]\n[CI/CD/Lint             ] \ud83c\udfc1  Job failed\n[CI/CD/Test 3.7 - Ubuntu]   | Fetched 533 kB in 1s (598 kB/s)\n[CI/CD/Test 3.7 - Ubuntu]   | Selecting previously unselected package libhashkit2:amd64.\r\n[CI/CD/Test 3.7 - Ubuntu]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[CI/CD/Test 3.7 - Ubuntu]   | Preparing to unpack .../libhashkit2_1.0.18-4.2ubuntu2_amd64.deb ...\r\n[CI/CD/Test 3.7 - Ubuntu]   | Unpacking libhashkit2:amd64 (1.0.18-4.2ubuntu2) ...\r\n[CI/CD/Test 3.7 - Ubuntu]   | Selecting previously unselected package libhashkit-dev:amd64.\r\n[CI/CD/Test 3.7 - Ubuntu]   | Preparing to unpack .../libhashkit-dev_1.0.18-4.2ubuntu2_amd64.deb ...\r\n[CI/CD/Test 3.7 - Ubuntu]   | Unpacking libhashkit-dev:amd64 (1.0.18-4.2ubuntu2) ...\r\n[CI/CD/Test 3.7 - Ubuntu]   | Selecting previously unselected package libmemcachedutil2:amd64.\r\n[CI/CD/Test 3.7 - Ubuntu]   | Preparing to unpack .../libmemcachedutil2_1.0.18-4.2ubuntu2_amd64.deb ...\r\n[CI/CD/Test 3.7 - Ubuntu]   | Unpacking libmemcachedutil2:amd64 (1.0.18-4.2ubuntu2) ...\r\n[CI/CD/Test 3.7 - Ubuntu]   | Selecting previously unselected package libsasl2-dev.\r\n[CI/CD/Test 3.7 - Ubuntu]   | Preparing to unpack .../libsasl2-dev_2.1.27+dfsg-2_amd64.deb ...\r\n[CI/CD/Test 3.7 - Ubuntu]   | Unpacking libsasl2-dev (2.1.27+dfsg-2) ...\r\n[CI/CD/Test 3.7 - Ubuntu]   | Selecting previously unselected package libmemcached-dev:amd64.\r\n[CI/CD/Test 3.7 - Ubuntu]   | Preparing to unpack .../libmemcached-dev_1.0.18-4.2ubuntu2_amd64.deb ...\r\n[CI/CD/Test 3.7 - Ubuntu]   | Unpacking libmemcached-dev:amd64 (1.0.18-4.2ubuntu2) ...\r\n[CI/CD/Test 3.7 - Ubuntu]   | Setting up libmemcachedutil2:amd64 (1.0.18-4.2ubuntu2) ...\r\n[CI/CD/Test 3.7 - Ubuntu]   | Setting up libhashkit2:amd64 (1.0.18-4.2ubuntu2) ...\r\n[CI/CD/Test 3.7 - Ubuntu]   | Setting up libsasl2-dev (2.1.27+dfsg-2) ...\r\n[CI/CD/Test 3.7 - Ubuntu]   | Setting up libhashkit-dev:amd64 (1.0.18-4.2ubuntu2) ...\r\n[CI/CD/Test 3.7 - Ubuntu]   | Setting up libmemcached-dev:amd64 (1.0.18-4.2ubuntu2) ...\r\n[CI/CD/Test 3.7 - Ubuntu]   | Processing triggers for libc-bin (2.31-0ubuntu9.2) ...\r\n[CI/CD/Test 3.7 - Ubuntu]   \u2705  Success - Main Install `libmemcached-dev`\n[CI/CD/Test 3.7 - Ubuntu] \u2b50 Run Main Install sherlock\n[CI/CD/Test 3.7 - Ubuntu]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[CI/CD/Test 3.7 - Ubuntu]   | /var/run/act/workflow/4: line 2: poetry: command not found\n[CI/CD/Test 3.7 - Ubuntu]   \u274c  Failure - Main Install sherlock\n[CI/CD/Test 3.7 - Ubuntu] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[CI/CD/Test 3.7 - Ubuntu] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Lint' failed\n"
}