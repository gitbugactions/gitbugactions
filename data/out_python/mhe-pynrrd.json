{
    "repository": "mhe/pynrrd",
    "clone_url": "https://github.com/mhe/pynrrd.git",
    "timestamp": "2023-05-29T14:03:42.609040Z",
    "clone_success": true,
    "number of actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Run tests/test] \ud83d\ude80  Start image=crawlergpt:latest\n[Run tests/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Run tests/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run tests/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run tests/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/mhe-pynrrd] user=0 workdir=\n[Run tests/test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v3\n[Run tests/test]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v2\n[Run tests/test] \ud83e\uddea  Matrix: map[python-version:3.7]\n[Run tests/test] \u2b50 Run Main actions/checkout@v3\n[Run tests/test]   \u2705  Success - Main actions/checkout@v3\n[Run tests/test] \u2b50 Run Main actions/setup-python@v3\n[Run tests/test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v3/ dst=/var/run/act/actions/actions-setup-python@v3/\n[Run tests/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v3/] user=0 workdir=\n[Run tests/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/setup/index.js] user= workdir=\n[Run tests/test]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[Run tests/test]   \ud83d\udcac  ::debug::isExplicit: \n[Run tests/test]   \ud83d\udcac  ::debug::explicit? false\n[Run tests/test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Run tests/test]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/test]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Run tests/test]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/test]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Run tests/test]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/test]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Run tests/test]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/test]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Run tests/test]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/test]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Run tests/test]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/test]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Run tests/test]   \ud83d\udcac  ::debug::matched: 3.7.11\n[Run tests/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[Run tests/test]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[Run tests/test]   | Successfully setup CPython (3.7.11)\n[Run tests/test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v3/.github/python.json\n[Run tests/test]   \u2705  Success - Main actions/setup-python@v3\n[Run tests/test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[Run tests/test]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[Run tests/test]   \u2699  ::set-output:: python-version=3.7.11\n[Run tests/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[Run tests/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[Run tests/test] \u2b50 Run Main Install requirements\n[Run tests/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Run tests/test]   | Collecting numpy>=1.11.1\n[Run tests/test]   |   Downloading numpy-1.21.6-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (15.7 MB)\n[Run tests/test]   | Collecting nptyping\n[Run tests/test]   |   Downloading nptyping-2.5.0-py3-none-any.whl (37 kB)\n[Run tests/test]   | Collecting typing_extensions\n[Run tests/test]   |   Downloading typing_extensions-4.6.2-py3-none-any.whl (31 kB)\n[Run tests/test]   | Collecting numpy>=1.11.1\n[Run tests/test]   |   Downloading numpy-1.21.5-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (15.7 MB)\n[Run tests/test]   | Installing collected packages: typing-extensions, numpy, nptyping\n[Run tests/test]   | Successfully installed nptyping-2.5.0 numpy-1.21.5 typing-extensions-4.6.2\n[Run tests/test]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Run tests/test]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[Run tests/test]   \u2705  Success - Main Install requirements\n[Run tests/test] \u2b50 Run Main Install coverage\n[Run tests/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Run tests/test]   | Collecting codecov\n[Run tests/test]   |   Downloading codecov-2.1.13-py2.py3-none-any.whl (16 kB)\n[Run tests/test]   | Collecting requests>=2.7.9\n[Run tests/test]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[Run tests/test]   | Collecting coverage\n[Run tests/test]   |   Downloading coverage-7.2.6-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (225 kB)\n[Run tests/test]   | Collecting charset-normalizer<4,>=2\n[Run tests/test]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[Run tests/test]   | Collecting urllib3<3,>=1.21.1\n[Run tests/test]   |   Downloading urllib3-2.0.2-py3-none-any.whl (123 kB)\n[Run tests/test]   | Collecting certifi>=2017.4.17\n[Run tests/test]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[Run tests/test]   | Collecting idna<4,>=2.5\n[Run tests/test]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[Run tests/test]   | Installing collected packages: urllib3, idna, charset-normalizer, certifi, requests, coverage, codecov\n[Run tests/test]   | Successfully installed certifi-2023.5.7 charset-normalizer-3.1.0 codecov-2.1.13 coverage-7.2.6 idna-3.4 requests-2.31.0 urllib3-2.0.2\n[Run tests/test]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Run tests/test]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[Run tests/test]   \u2705  Success - Main Install coverage\n[Run tests/test] \u2b50 Run Main Run tests\n[Run tests/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Run tests/test]   | test_format_matrix (test_formatting.TestFieldFormatting) ... ok\n[Run tests/test]   | test_format_number (test_formatting.TestFieldFormatting) ... ok\n[Run tests/test]   | test_format_number_list (test_formatting.TestFieldFormatting) ... ok\n[Run tests/test]   | test_format_optional_matrix (test_formatting.TestFieldFormatting) ... ok\n[Run tests/test]   | test_format_optional_vector (test_formatting.TestFieldFormatting) ... ok\n[Run tests/test]   | test_format_vector (test_formatting.TestFieldFormatting) ... ok\n[Run tests/test]   | test_parse_matrix (test_parsing.TestFieldParsing) ... ok\n[Run tests/test]   | test_parse_number_auto_dtype (test_parsing.TestFieldParsing) ... ok\n[Run tests/test]   | test_parse_number_list_float (test_parsing.TestFieldParsing) ... ok\n[Run tests/test]   | test_parse_number_list_int (test_parsing.TestFieldParsing) ... ok\n[Run tests/test]   | test_parse_optional_matrix (test_parsing.TestFieldParsing) ... ok\n[Run tests/test]   | test_parse_optional_vector (test_parsing.TestFieldParsing) ... ok\n[Run tests/test]   | test_parse_vector (test_parsing.TestFieldParsing) ... ok\n[Run tests/test]   | test_big_endian (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_custom_fields_with_field_map (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_custom_fields_without_field_map (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_detached_header_no_filename (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_invalid_custom_field (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_invalid_encoding (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_invalid_endian (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_invalid_index_order (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_invalid_lineskip (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_invalid_magic_line (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_invalid_magic_line2 (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_invalid_magic_line3 (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_missing_endianness (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_missing_required_field (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_detached_header_and_data (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_detached_header_and_data_with_byteskip_minus1 (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_detached_header_and_data_with_byteskip_minus5 (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_detached_header_and_nifti_data (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_detached_header_and_nifti_data_with_byteskip_minus1 (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_detached_header_only (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_dup_field_error_and_warn (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_header_and_ascii_1d_data (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_header_and_ascii_2d_data (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_header_and_bz2_compressed_data (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_header_and_data_filename (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_header_and_gz_compressed_data (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_header_and_gz_compressed_data_with_byteskip_minus1 (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_header_and_gz_compressed_data_with_lineskip3 (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_header_only (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_header_only_with_filename (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_memory (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_quoted_string_header (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_quoted_string_header_no_quotes (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_raw_header (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_read_simple_4d_nrrd (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_wrong_sizes (test_reading.TestReadingFunctionsC) ... ok\n[Run tests/test]   | test_big_endian (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_custom_fields_with_field_map (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_custom_fields_without_field_map (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_detached_header_no_filename (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_invalid_custom_field (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_invalid_encoding (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_invalid_endian (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_invalid_index_order (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_invalid_lineskip (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_invalid_magic_line (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_invalid_magic_line2 (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_invalid_magic_line3 (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_missing_endianness (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_missing_required_field (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_detached_header_and_data (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_detached_header_and_data_with_byteskip_minus1 (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_detached_header_and_data_with_byteskip_minus5 (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_detached_header_and_nifti_data (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_detached_header_and_nifti_data_with_byteskip_minus1 (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_detached_header_only (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_dup_field_error_and_warn (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_header_and_ascii_1d_data (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_header_and_ascii_2d_data (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_header_and_bz2_compressed_data (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_header_and_data_filename (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_header_and_gz_compressed_data (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_header_and_gz_compressed_data_with_byteskip_minus1 (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_header_and_gz_compressed_data_with_lineskip3 (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_header_only (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_header_only_with_filename (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_memory (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_quoted_string_header (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_quoted_string_header_no_quotes (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_raw_header (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_read_simple_4d_nrrd (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_wrong_sizes (test_reading.TestReadingFunctionsFortran) ... ok\n[Run tests/test]   | test_invalid_custom_field (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_invalid_index_order (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_quoted_string_list_header (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_remove_endianness (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_unsupported_encoding (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_ascii_1d (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_ascii_2d (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_ascii_3d (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_bzip2 (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_bzip2_level1 (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_check_remove_datafile (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_custom_fields_with_custom_field_map (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_custom_fields_without_custom_field_map (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_default_header (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_detached_ascii (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_detached_bz2 (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_detached_datafile_check (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_detached_datafile_check2 (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_detached_datafile_custom_name (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_detached_gz (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_detached_raw (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_detached_raw_as_nrrd (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_detached_raw_odd_extension (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_fake_encoding (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_gz (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_gz_level1 (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_memory_bzip2 (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_memory_default (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_memory_file_handle (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_memory_gzip (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_memory_raw (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_write_raw (test_writing.TestWritingFunctionsC) ... ok\n[Run tests/test]   | test_invalid_custom_field (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_invalid_index_order (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_quoted_string_list_header (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_remove_endianness (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_unsupported_encoding (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_ascii_1d (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_ascii_2d (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_ascii_3d (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_bzip2 (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_bzip2_level1 (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_check_remove_datafile (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_custom_fields_with_custom_field_map (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_custom_fields_without_custom_field_map (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_default_header (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_detached_ascii (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_detached_bz2 (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_detached_datafile_check (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_detached_datafile_check2 (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_detached_datafile_custom_name (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_detached_gz (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_detached_raw (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_detached_raw_as_nrrd (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_detached_raw_odd_extension (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_fake_encoding (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_gz (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_gz_level1 (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_memory_bzip2 (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_memory_default (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_memory_file_handle (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_memory_gzip (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_memory_raw (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | test_write_raw (test_writing.TestWritingFunctionsFortran) ... ok\n[Run tests/test]   | \n[Run tests/test]   | ----------------------------------------------------------------------\n[Run tests/test]   | Ran 149 tests in 1.290s\n[Run tests/test]   | \n[Run tests/test]   | OK\n[Run tests/test]   \u2705  Success - Main Run tests\n[Run tests/test] \u2b50 Run Main Upload Coverage to Codecov\n[Run tests/test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/codecov-codecov-action@v2/ dst=/var/run/act/actions/codecov-codecov-action@v2/\n[Run tests/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/codecov-codecov-action@v2/] user=0 workdir=\n[Run tests/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v2/dist/index.js] user= workdir=\n[Run tests/test]   | ==> linux OS detected\n[Run tests/test]   | https://uploader.codecov.io/latest/linux/codecov.SHA256SUM\n[Run tests/test]   | ==> SHASUM file signed by key id 806bb28aed779869\n[Run tests/test]   | ==> Uploader SHASUM verified (02b055414cc124203ab061ffc45f5497ca39ede5e63a06717a6981c32d7b425f  codecov)\n[Run tests/test]   | ==> Running version latest\n[Run tests/test]   | ==> Running version v0.5.0\n[Run tests/test]   | [command]/run/act/actions/codecov-codecov-action@v2/dist/codecov -n  -Q github-action-2.1.0\n[Run tests/test]   | [2023-05-29T14:05:52.247Z] ['info'] \n[Run tests/test]   |      _____          _\n[Run tests/test]   |     / ____|        | |\n[Run tests/test]   |    | |     ___   __| | ___  ___ _____   __\n[Run tests/test]   |    | |    / _ \\ / _` |/ _ \\/ __/ _ \\ \\ / /\n[Run tests/test]   |    | |___| (_) | (_| |  __/ (_| (_) \\ V /\n[Run tests/test]   |     \\_____\\___/ \\__,_|\\___|\\___\\___/ \\_/\n[Run tests/test]   | \n[Run tests/test]   |   Codecov report uploader 0.5.0\n[Run tests/test]   | [2023-05-29T14:05:52.272Z] ['info'] => Project root located at: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/mhe-pynrrd\n[Run tests/test]   | [2023-05-29T14:05:52.274Z] ['info'] -> No token specified or token is empty\n[Run tests/test]   | [2023-05-29T14:05:52.468Z] ['info'] Running coverage xml...\n[Run tests/test]   | [2023-05-29T14:05:52.677Z] ['info'] Searching for coverage files...\n[Run tests/test]   | [2023-05-29T14:05:52.721Z] ['info'] Warning: Some files located via search were excluded from upload.\n[Run tests/test]   | [2023-05-29T14:05:52.721Z] ['info'] If Codecov did not locate your files, please review https://docs.codecov.com/docs/supported-report-formats\n[Run tests/test]   | [2023-05-29T14:05:52.721Z] ['info'] => Found 1 possible coverage files:\n[Run tests/test]   |   coverage.xml\n[Run tests/test]   | [2023-05-29T14:05:52.721Z] ['info'] Processing /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/mhe-pynrrd/coverage.xml...\n[Run tests/test]   | [2023-05-29T14:05:52.725Z] ['info'] Detected GitHub Actions as the CI provider.\n[Run tests/test]   | [2023-05-29T14:05:53.065Z] ['info'] Pinging Codecov: https://codecov.io/upload/v4?package=github-action-2.1.0-uploader-0.5.0&token=*******&branch=&build=1&build_url=https%3A%2F%2Fgithub.com%2Fmhe%2Fpynrrd%2Factions%2Fruns%2F1&commit=d7f1d0ced4aadb01cc160b16e2763d27e7e3d386&job=Run+tests&pr=&service=github-actions&slug=mhe%2Fpynrrd&name=&tag=&flags=&parent=\n[Run tests/test]   | [2023-05-29T14:05:54.327Z] ['error'] There was an error running the uploader: Error uploading to https://codecov.io: Error: There was an error fetching the storage URL during POST: 404 - {'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\n[Run tests/test]   \u2705  Success - Main Upload Coverage to Codecov\n[Run tests/test] \u2b50 Run Post actions/setup-python@v3\n[Run tests/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/cache-save/index.js] user= workdir=\n[Run tests/test]   \u2705  Success - Post actions/setup-python@v3\n[Run tests/test] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}