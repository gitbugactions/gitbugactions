{
    "repository": "artefactory/streamlit_prophet",
    "clone_url": "https://github.com/artefactory/streamlit_prophet.git",
    "timestamp": "2023-05-29T16:30:19.463629Z",
    "clone_success": true,
    "number of actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Continuous Integration/ci] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous Integration/ci]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous Integration/ci]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/ci]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/ci]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/artefactory-streamlit_prophet] user=0 workdir=\n[Continuous Integration/ci]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2.2.2\n[Continuous Integration/ci]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2.1.5\n[Continuous Integration/ci] \ud83e\uddea  Matrix: map[python-version:3.8]\n[Continuous Integration/ci] \u2b50 Run Main actions/checkout@v2\n[Continuous Integration/ci]   \u2705  Success - Main actions/checkout@v2\n[Continuous Integration/ci] \u2b50 Run Main Set up Python 3.8\n[Continuous Integration/ci]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2.2.2/ dst=/var/run/act/actions/actions-setup-python@v2.2.2/\n[Continuous Integration/ci]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2.2.2/] user=0 workdir=\n[Continuous Integration/ci]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2.2.2/dist/index.js] user= workdir=\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::isExplicit: \n[Continuous Integration/ci]   \ud83d\udcac  ::debug::explicit? false\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::explicit? true\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::explicit? true\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::explicit? true\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::explicit? true\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::explicit? true\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::explicit? true\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::matched: 3.8.11\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[Continuous Integration/ci]   \u2699  ::set-output:: python-version=3.8.11\n[Continuous Integration/ci]   | Successfully setup CPython (3.8.11)\n[Continuous Integration/ci]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2.2.2/.github/python.json\n[Continuous Integration/ci]   \u2705  Success - Main Set up Python 3.8\n[Continuous Integration/ci]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[Continuous Integration/ci]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[Continuous Integration/ci]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[Continuous Integration/ci]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[Continuous Integration/ci] \u2b50 Run Main Install poetry\n[Continuous Integration/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Continuous Integration/ci]   | curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python\n[Continuous Integration/ci]   | The canonical source for Poetry's installation script is now https://install.python-poetry.org. Please update your usage to reflect this.\n[Continuous Integration/ci]   | Retrieving Poetry metadata\n[Continuous Integration/ci]   | \n[Continuous Integration/ci]   | # Welcome to Poetry!\n[Continuous Integration/ci]   | \n[Continuous Integration/ci]   | This will download and install the latest version of Poetry,\n[Continuous Integration/ci]   | a dependency and package manager for Python.\n[Continuous Integration/ci]   | \n[Continuous Integration/ci]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[Continuous Integration/ci]   | \n[Continuous Integration/ci]   | /home/runneradmin/.local/bin\n[Continuous Integration/ci]   | \n[Continuous Integration/ci]   | You can uninstall at any time by executing this script with the --uninstall option,\n[Continuous Integration/ci]   | and these changes will be reverted.\n[Continuous Integration/ci]   | \n[Continuous Integration/ci]   | Installing Poetry (1.5.1)\n[Continuous Integration/ci]   | Installing Poetry (1.5.1): Creating environment\n[Continuous Integration/ci]   | Installing Poetry (1.5.1): Installing Poetry\n[Continuous Integration/ci]   | Installing Poetry (1.5.1): Creating script\n[Continuous Integration/ci]   | Installing Poetry (1.5.1): Done\n[Continuous Integration/ci]   | \n[Continuous Integration/ci]   | Poetry (1.5.1) is installed now. Great!\n[Continuous Integration/ci]   | \n[Continuous Integration/ci]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[Continuous Integration/ci]   | environment variable.\n[Continuous Integration/ci]   | \n[Continuous Integration/ci]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[Continuous Integration/ci]   | \n[Continuous Integration/ci]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[Continuous Integration/ci]   | \n[Continuous Integration/ci]   | You can test that everything is set up by executing:\n[Continuous Integration/ci]   | \n[Continuous Integration/ci]   | `poetry --version`\n[Continuous Integration/ci]   | \n[Continuous Integration/ci]   \u2705  Success - Main Install poetry\n[Continuous Integration/ci] \u2b50 Run Main Set up cache\n[Continuous Integration/ci]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2.1.5/ dst=/var/run/act/actions/actions-cache@v2.1.5/\n[Continuous Integration/ci]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2.1.5/] user=0 workdir=\n[Continuous Integration/ci]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2.1.5/dist/restore/index.js] user= workdir=\n[Continuous Integration/ci]   \ud83d\udcbe  ::save-state name=CACHE_KEY::venv-3.8-b7aede7534990aba960e77aab6eb77487aef9becdf5cc5995c20e418013e8bc8-2731c68f8d28ae0c2ab4af8e979bbb8a3c4a35c8c64559c8f9d78c6e209f7812\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::Resolved Keys:\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::[\"venv-3.8-b7aede7534990aba960e77aab6eb77487aef9becdf5cc5995c20e418013e8bc8-2731c68f8d28ae0c2ab4af8e979bbb8a3c4a35c8c64559c8f9d78c6e209f7812\"]\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::Checking zstd --version\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Continuous Integration/ci]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Continuous Integration/ci]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[Continuous Integration/ci]   \u2699  ::set-output:: cache-hit=false\n[Continuous Integration/ci]   \u2705  Success - Main Set up cache\n[Continuous Integration/ci] \u2b50 Run Main Set Poetry Path\n[Continuous Integration/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Continuous Integration/ci]   \u2705  Success - Main Set Poetry Path\n[Continuous Integration/ci]   \u2699  ::add-path:: /home/runneradmin/.poetry/bin\n[Continuous Integration/ci] \u2b50 Run Main Install dependencies\n[Continuous Integration/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[Continuous Integration/ci]   | /var/run/act/workflow/5: line 2: poetry: command not found\n[Continuous Integration/ci]   \u274c  Failure - Main Install dependencies\n[Continuous Integration/ci] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Continuous Integration/ci] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'ci' failed\n"
}