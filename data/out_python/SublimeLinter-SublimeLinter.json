{
    "repository": "SublimeLinter/SublimeLinter",
    "clone_url": "https://github.com/SublimeLinter/SublimeLinter.git",
    "timestamp": "2023-05-29T15:03:04.444488Z",
    "clone_success": true,
    "number of actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[tests/run-syntax-tests      ] \ud83d\ude80  Start image=crawlergpt:latest\n[tests/run-tests             ] \ud83d\ude80  Start image=crawlergpt:latest\n[tests/check-upgrade-messages] \ud83d\ude80  Start image=crawlergpt:latest\n[tests/run-tests             ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[tests/check-upgrade-messages]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/check-upgrade-messages]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/run-tests             ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/run-tests             ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/check-upgrade-messages]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/run-tests             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/SublimeLinter-SublimeLinter] user=0 workdir=\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/SublimeLinter-SublimeLinter] user=0 workdir=\n[tests/check-upgrade-messages]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/SublimeLinter-SublimeLinter] user=0 workdir=\n[tests/run-syntax-tests      ]   \u2601  git clone 'https://github.com/SublimeText/UnitTesting' # ref=v1\n[tests/run-tests             ]   \u2601  git clone 'https://github.com/SublimeText/UnitTesting' # ref=v1\n[tests/check-upgrade-messages]   \u2601  git clone 'https://github.com/kaste/upgrade-messages-test-action' # ref=v1\n[tests/run-syntax-tests      ] \u2b50 Run Pre SublimeText/UnitTesting/actions/setup@v1\n[tests/run-tests             ] \u2b50 Run Pre SublimeText/UnitTesting/actions/setup@v1\n[tests/run-syntax-tests      ]   \u2705  Success - Pre SublimeText/UnitTesting/actions/setup@v1\n[tests/run-tests             ]   \u2705  Success - Pre SublimeText/UnitTesting/actions/setup@v1\n[tests/check-upgrade-messages] \u2b50 Run Pre kaste/upgrade-messages-test-action@v1\n[tests/check-upgrade-messages]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[tests/run-syntax-tests      ]   \u2601  git clone 'https://github.com/SublimeText/UnitTesting' # ref=v1\n[tests/run-tests             ]   \u2601  git clone 'https://github.com/SublimeText/UnitTesting' # ref=v1\n[tests/check-upgrade-messages]   \u2705  Success - Pre kaste/upgrade-messages-test-action@v1\n[tests/check-upgrade-messages] \u2b50 Run Main actions/checkout@v3\n[tests/check-upgrade-messages]   \u2705  Success - Main actions/checkout@v3\n[tests/run-syntax-tests      ] \u2b50 Run Pre SublimeText/UnitTesting/actions/run-syntax-tests@v1\n[tests/run-syntax-tests      ]   \u2705  Success - Pre SublimeText/UnitTesting/actions/run-syntax-tests@v1\n[tests/check-upgrade-messages] \u2b50 Run Main kaste/upgrade-messages-test-action@v1\n[tests/check-upgrade-messages]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/kaste-upgrade-messages-test-action@v1/ dst=/var/run/act/actions/kaste-upgrade-messages-test-action@v1/\n[tests/check-upgrade-messages]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/kaste-upgrade-messages-test-action@v1/] user=0 workdir=\n[tests/run-syntax-tests      ] \u2b50 Run Main actions/checkout@v3\n[tests/run-tests             ] \u2b50 Run Pre SublimeText/UnitTesting/actions/run-tests@v1\n[tests/run-syntax-tests      ]   \u2705  Success - Main actions/checkout@v3\n[tests/run-tests             ]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[tests/run-syntax-tests      ] \u2b50 Run Main SublimeText/UnitTesting/actions/setup@v1\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/SublimeText-UnitTesting-actions-setup@v1/ dst=/var/run/act/actions/SublimeText-UnitTesting-actions-setup@v1/\n[tests/run-tests             ]   \u2705  Success - Pre SublimeText/UnitTesting/actions/run-tests@v1\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/SublimeText-UnitTesting-actions-setup@v1/] user=0 workdir=\n[tests/run-tests             ] \ud83e\uddea  Matrix: map[st-version:3]\n[tests/run-tests             ] \u2b50 Run Main actions/checkout@v3\n[tests/run-tests             ]   \u2705  Success - Main actions/checkout@v3\n[tests/run-tests             ] \u2b50 Run Main SublimeText/UnitTesting/actions/setup@v1\n[tests/run-tests             ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/SublimeText-UnitTesting-actions-setup@v1/ dst=/var/run/act/actions/SublimeText-UnitTesting-actions-setup@v1/\n[tests/run-tests             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/SublimeText-UnitTesting-actions-setup@v1/] user=0 workdir=\n[tests/run-tests             ] \u2b50 Run Main Set environmental variables\n[tests/run-syntax-tests      ] \u2b50 Run Main Set environmental variables\n[tests/check-upgrade-messages] \u2b50 Run Main actions/setup-python@v4\n[tests/check-upgrade-messages]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-0.sh] user= workdir=\n[tests/run-tests             ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-0.sh] user= workdir=\n[tests/check-upgrade-messages]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[tests/run-syntax-tests      ]   \u2705  Success - Main Set environmental variables\n[tests/run-tests             ]   \u2705  Success - Main Set environmental variables\n[tests/check-upgrade-messages]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[tests/run-syntax-tests      ]   \u2699  ::set-env:: SUBLIME_TEXT_VERSION=4\n[tests/run-syntax-tests      ]   \u2699  ::set-env:: SUBLIME_TEXT_ARCH=x64\n[tests/run-tests             ]   \u2699  ::set-env:: SUBLIME_TEXT_VERSION=3\n[tests/run-tests             ]   \u2699  ::set-env:: SUBLIME_TEXT_ARCH=x64\n[tests/run-tests             ] \u2b50 Run Main Setup SUBLIME_TEXT_PACKAGES\n[tests/run-syntax-tests      ] \u2b50 Run Main Setup SUBLIME_TEXT_PACKAGES\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[tests/check-upgrade-messages]   \u2753  ::group::Installed versions\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::Semantic version spec of 3.10 is 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::isExplicit: \n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::explicit? false\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::explicit? true\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::explicit? true\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::explicit? true\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::explicit? true\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::explicit? true\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::explicit? true\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::evaluating 6 versions\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::match not found\n[tests/check-upgrade-messages]   | Version 3.10 was not found in the local cache\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.12.0-beta.1 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.12.0-alpha.7 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.12.0-alpha.6 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.12.0-alpha.5 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.12.0-alpha.4 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.12.0-alpha.3 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.12.0-alpha.2 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.12.0-alpha.1 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.11.3 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.11.2 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.11.1 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.11.0 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.11.0-rc.2 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.11.0-rc.1 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.11.0-beta.5 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.11.0-beta.4 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.11.0-beta.3 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.11.0-beta.2 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.11.0-beta.1 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.11.0-alpha.7 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.11.0-alpha.6 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.11.0-alpha.5 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.11.0-alpha.4 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.11.0-alpha.3 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.11.0-alpha.2 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.11.0-alpha.1 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::check 3.10.11 satisfies 3.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::arm64===x64 && darwin===linux\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::matched 3.10.11\n[tests/check-upgrade-messages]   | Version 3.10 is available for downloading\n[tests/check-upgrade-messages]   | Download from \"https://github.com/actions/python-versions/releases/download/3.10.11-4626646535/python-3.10.11-linux-20.04-x64.tar.gz\"\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/python-versions/releases/download/3.10.11-4626646535/python-3.10.11-linux-20.04-x64.tar.gz\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::Destination /tmp/3d5da130-16a9-4645-a059-00a9c8bf3619\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-1.sh] user= workdir=\n[tests/run-tests             ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-1.sh] user= workdir=\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::download complete\n[tests/check-upgrade-messages]   | Extract downloaded archive\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::Checking tar --version\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[tests/check-upgrade-messages]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/af688242-e210-47b5-9a4a-24c100bf2937 -f /tmp/3d5da130-16a9-4645-a059-00a9c8bf3619\n[tests/check-upgrade-messages]   | Execute installation script\n[tests/check-upgrade-messages]   | Check if Python hostedtoolcache folder exist...\n[tests/check-upgrade-messages]   | Create Python 3.10.11 folder\n[tests/check-upgrade-messages]   | Copy Python binaries to hostedtoolcache folder\n[tests/check-upgrade-messages]   | Create additional symlinks (Required for the UsePythonVersion Azure Pipelines task and the setup-python GitHub Action)\n[tests/check-upgrade-messages]   | Upgrading pip...\n[tests/check-upgrade-messages]   | Looking in links: /tmp/tmpy40dx82y\n[tests/check-upgrade-messages]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages (65.5.0)\n[tests/check-upgrade-messages]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages (23.0.1)\n[tests/check-upgrade-messages]   | Collecting pip\n[tests/check-upgrade-messages]   | Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[tests/check-upgrade-messages]   | \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 49.1 MB/s eta 0:00:00\n[tests/check-upgrade-messages]   | \n[tests/check-upgrade-messages]   | Installing collected packages: pip\n[tests/check-upgrade-messages]   | Successfully installed pip-23.1.2\n[tests/check-upgrade-messages]   | Create complete file\n[tests/run-syntax-tests      ]   \u2705  Success - Main Setup SUBLIME_TEXT_PACKAGES\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::isExplicit: \n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::explicit? false\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::explicit? true\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::isExplicit: 3.10.11\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::explicit? true\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::explicit? true\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::explicit? true\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::explicit? true\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::explicit? true\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::explicit? true\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::evaluating 7 versions\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::matched: 3.10.11\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.10.11/x64\n[tests/check-upgrade-messages]   \ud83d\udcac  ::debug::Found tool in cache Python 3.10.11 x64\n[tests/check-upgrade-messages]   | Successfully set up CPython (3.10.11)\n[tests/check-upgrade-messages]   \u2753  ::endgroup::\n[tests/check-upgrade-messages]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[tests/check-upgrade-messages]   \u2705  Success - Main actions/setup-python@v4\n[tests/run-tests             ]   \u2705  Success - Main Setup SUBLIME_TEXT_PACKAGES\n[tests/run-tests             ]   \u2699  ::set-env:: SUBLIME_TEXT_PACKAGES=/home/runneradmin/.config/sublime-text-3/Packages\n[tests/run-syntax-tests      ]   \u2699  ::set-env:: SUBLIME_TEXT_PACKAGES=/home/runneradmin/.config/sublime-text/Packages\n[tests/check-upgrade-messages]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.10.11/x64/lib\n[tests/check-upgrade-messages]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.10.11/x64\n[tests/check-upgrade-messages]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.10.11/x64/lib/pkgconfig\n[tests/check-upgrade-messages]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.11/x64\n[tests/check-upgrade-messages]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.11/x64\n[tests/check-upgrade-messages]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.11/x64\n[tests/check-upgrade-messages]   \u2699  ::set-output:: python-version=3.10.11\n[tests/check-upgrade-messages]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.10.11/x64/bin/python\n[tests/check-upgrade-messages]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.11/x64\n[tests/check-upgrade-messages]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.11/x64/bin\n[tests/check-upgrade-messages] \u2b50 Run Main python /var/run/act/actions/kaste-upgrade-messages-test-action@v1/test.py\n[tests/run-tests             ] \u2b50 Run Main if [ \"Linux\" = \"Windows\" ]; then\n  echo \"c:\\st\" >> $GITHUB_PATH\nelse\n  echo \"$HOME/.local/bin\" >> $GITHUB_PATH\nfi\n[tests/run-syntax-tests      ] \u2b50 Run Main if [ \"Linux\" = \"Windows\" ]; then\n  echo \"c:\\st\" >> $GITHUB_PATH\nelse\n  echo \"$HOME/.local/bin\" >> $GITHUB_PATH\nfi\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[tests/check-upgrade-messages]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-1.sh] user= workdir=\n[tests/run-tests             ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[tests/check-upgrade-messages]   | OK: Could read messages.json\n[tests/check-upgrade-messages]   | OK: Could parse messages.json\n[tests/check-upgrade-messages]   | OK: Could read messages/install.txt\n[tests/check-upgrade-messages]   | OK: Could read messages/4.16.1.txt\n[tests/check-upgrade-messages]   | OK: Could read messages/4.17.0.txt\n[tests/check-upgrade-messages]   | OK: Could read messages/4.19.0.txt\n[tests/check-upgrade-messages]   | OK: Could read messages/4.20.0.txt\n[tests/check-upgrade-messages]   | OK: Could read messages/4.22.0.txt\n[tests/check-upgrade-messages]   | OK: All tests passed.\n[tests/run-tests             ]   \u2705  Success - Main if [ \"Linux\" = \"Windows\" ]; then\n  echo \"c:\\st\" >> $GITHUB_PATH\nelse\n  echo \"$HOME/.local/bin\" >> $GITHUB_PATH\nfi\n[tests/check-upgrade-messages]   \u2705  Success - Main python /var/run/act/actions/kaste-upgrade-messages-test-action@v1/test.py\n[tests/run-syntax-tests      ]   \u2705  Success - Main if [ \"Linux\" = \"Windows\" ]; then\n  echo \"c:\\st\" >> $GITHUB_PATH\nelse\n  echo \"$HOME/.local/bin\" >> $GITHUB_PATH\nfi\n[tests/run-tests             ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[tests/run-tests             ] \u2b50 Run Main sudo bash $GITHUB_ACTION_PATH/../../scripts/install_ubuntu_sys_req.sh\necho \"DISPLAY=:1\" >> $GITHUB_ENV\n\nif [ \"xvfb\" = \"xvfb\" ]; then\n  sudo apt-get install xvfb\nelif [ \"xvfb\" = \"turbovnc\" ]; then\n  wget https://phoenixnap.dl.sourceforge.net/project/turbovnc/2.2.5/turbovnc_2.2.5_amd64.deb\n  sudo dpkg -i turbovnc_2.2.5_amd64.deb\n  echo \"/opt/TurboVNC/bin\" >> $GITHUB_PATH\nfi\nif [ \"xvfb\" != \"false\" ]; then\n  if [ \"icevm\" = \"xfce\" ]; then\n    sudo apt-get install --no-install-recommends xfce4 xfce4-goodies dbus-x11\n  elif [ \"icevm\" = \"icewm\" ]; then\n    sudo apt-get install icewm\n  elif [ \"icevm\" = \"fluxbox\" ]; then\n    sudo apt-get install fluxbox\n  fi\nfi\n[tests/run-syntax-tests      ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[tests/check-upgrade-messages]   \u2705  Success - Main kaste/upgrade-messages-test-action@v1\n[tests/run-syntax-tests      ] \u2b50 Run Main sudo bash $GITHUB_ACTION_PATH/../../scripts/install_ubuntu_sys_req.sh\necho \"DISPLAY=:1\" >> $GITHUB_ENV\n\nif [ \"xvfb\" = \"xvfb\" ]; then\n  sudo apt-get install xvfb\nelif [ \"xvfb\" = \"turbovnc\" ]; then\n  wget https://phoenixnap.dl.sourceforge.net/project/turbovnc/2.2.5/turbovnc_2.2.5_amd64.deb\n  sudo dpkg -i turbovnc_2.2.5_amd64.deb\n  echo \"/opt/TurboVNC/bin\" >> $GITHUB_PATH\nfi\nif [ \"xvfb\" != \"false\" ]; then\n  if [ \"icevm\" = \"xfce\" ]; then\n    sudo apt-get install --no-install-recommends xfce4 xfce4-goodies dbus-x11\n  elif [ \"icevm\" = \"icewm\" ]; then\n    sudo apt-get install icewm\n  elif [ \"icevm\" = \"fluxbox\" ]; then\n    sudo apt-get install fluxbox\n  fi\nfi\n[tests/run-tests             ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[tests/check-upgrade-messages] \u2b50 Run Post kaste/upgrade-messages-test-action@v1\n[tests/check-upgrade-messages]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/kaste-upgrade-messages-test-action@v1/ dst=/var/run/act/actions/kaste-upgrade-messages-test-action@v1/\n[tests/check-upgrade-messages]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/kaste-upgrade-messages-test-action@v1/] user=0 workdir=\n[tests/check-upgrade-messages] \u2b50 Run Post actions/setup-python@v4\n[tests/run-syntax-tests      ]   | Get:1 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ InRelease [3622 B]\n[tests/run-syntax-tests      ]   | Get:2 https://packages.microsoft.com/ubuntu/20.04/prod focal InRelease [3611 B]\n[tests/run-syntax-tests      ]   | Get:3 https://dl.hhvm.com/ubuntu focal InRelease [3137 B]\n[tests/run-syntax-tests      ]   | Get:4 http://dl.google.com/linux/chrome/deb stable InRelease [1825 B]\n[tests/run-syntax-tests      ]   | Hit:5 http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu focal InRelease\n[tests/run-tests             ]   | Hit:1 http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu focal InRelease\n[tests/run-tests             ]   | Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease\n[tests/run-tests             ]   | Get:3 https://packages.microsoft.com/ubuntu/20.04/prod focal InRelease [3611 B]\n[tests/run-tests             ]   | Get:4 https://dl.hhvm.com/ubuntu focal InRelease [3137 B]\n[tests/run-tests             ]   | Get:5 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ InRelease [3622 B]\n[tests/run-tests             ]   | Get:6 http://dl.google.com/linux/chrome/deb stable InRelease [1825 B]\n[tests/run-syntax-tests      ]   | Hit:6 http://archive.ubuntu.com/ubuntu focal InRelease\n[tests/run-syntax-tests      ]   | Get:7 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]\n[tests/run-tests             ]   | Get:7 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]\n[tests/check-upgrade-messages]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[tests/run-tests             ]   | Get:8 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]\n[tests/run-syntax-tests      ]   | Get:8 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]\n[tests/run-syntax-tests      ]   | Get:9 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ Packages [77.6 kB]\n[tests/run-tests             ]   | Hit:9 https://adoptopenjdk.jfrog.io/adoptopenjdk/deb focal InRelease\n[tests/run-syntax-tests      ]   | Hit:10 https://adoptopenjdk.jfrog.io/adoptopenjdk/deb focal InRelease\n[tests/run-tests             ]   | Get:10 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]\n[tests/run-syntax-tests      ]   | Get:11 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]\n[tests/run-syntax-tests      ]   | Get:12 https://packages.microsoft.com/ubuntu/20.04/prod focal/main all Packages [2521 B]\n[tests/run-syntax-tests      ]   | Get:13 https://packages.microsoft.com/ubuntu/20.04/prod focal/main amd64 Packages [201 kB]\n[tests/run-syntax-tests      ]   | Get:14 https://dl.hhvm.com/ubuntu focal/main amd64 Packages [1880 B]\n[tests/run-tests             ]   | Get:11 https://packages.microsoft.com/ubuntu/20.04/prod focal/main all Packages [2521 B]\n[tests/run-tests             ]   | Get:12 https://packages.microsoft.com/ubuntu/20.04/prod focal/main amd64 Packages [201 kB]\n[tests/run-syntax-tests      ]   | Err:4 http://dl.google.com/linux/chrome/deb stable InRelease\n[tests/run-syntax-tests      ]   |   The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[tests/run-tests             ]   | Get:13 https://dl.hhvm.com/ubuntu focal/main amd64 Packages [1880 B]\n[tests/run-tests             ]   | Get:14 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ Packages [77.6 kB]\n[tests/run-tests             ]   | Err:6 http://dl.google.com/linux/chrome/deb stable InRelease\n[tests/run-tests             ]   |   The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[tests/run-tests             ]   | Get:15 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [739 kB]\n[tests/run-syntax-tests      ]   | Get:15 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [739 kB]\n[tests/run-tests             ]   | Get:16 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [31.2 kB]\n[tests/run-syntax-tests      ]   | Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [2412 kB]\n[tests/run-tests             ]   | Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1346 kB]\n[tests/run-tests             ]   | Get:18 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [739 kB]\n[tests/run-syntax-tests      ]   | Get:17 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [2726 kB]\n[tests/run-tests             ]   | Get:19 http://security.ubuntu.com/ubuntu focal-security/multiverse i386 Packages [8141 B]\n[tests/run-tests             ]   | Get:20 http://security.ubuntu.com/ubuntu focal-security/restricted i386 Packages [36.9 kB]\n[tests/run-syntax-tests      ]   | Get:18 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [3204 kB]\n[tests/run-tests             ]   | Get:21 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [3204 kB]\n[tests/run-syntax-tests      ]   | Get:19 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [1052 kB]\n[tests/run-tests             ]   | Get:22 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [28.5 kB]\n[tests/run-tests             ]   | Get:23 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [2270 kB]\n[tests/run-syntax-tests      ]   | Get:20 http://security.ubuntu.com/ubuntu focal-security/restricted i386 Packages [36.9 kB]\n[tests/run-syntax-tests      ]   | Get:21 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1346 kB]\n[tests/run-syntax-tests      ]   | Get:22 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [2270 kB]\n[tests/run-tests             ]   | Get:24 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [2412 kB]\n[tests/run-syntax-tests      ]   | Get:23 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [31.2 kB]\n[tests/run-tests             ]   | Get:25 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [2726 kB]\n[tests/run-tests             ]   | Get:26 http://archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [55.2 kB]\n[tests/run-syntax-tests      ]   | Get:24 http://archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [55.2 kB]\n[tests/run-syntax-tests      ]   | Get:25 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [28.5 kB]\n[tests/run-syntax-tests      ]   | Get:26 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [28.6 kB]\n[tests/run-tests             ]   | Get:27 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [28.6 kB]\n[tests/run-tests             ]   | Get:28 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [1052 kB]\n[tests/run-syntax-tests      ]   | Get:27 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [739 kB]\n[tests/run-syntax-tests      ]   | Get:28 http://security.ubuntu.com/ubuntu focal-security/multiverse i386 Packages [8141 B]\n[tests/run-tests             ]   | Fetched 15.3 MB in 6s (2754 kB/s)\n[tests/run-syntax-tests      ]   | Fetched 15.3 MB in 6s (2728 kB/s)\n[tests/run-tests             ]   | Reading package lists...\n[tests/run-tests             ]   | W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: http://dl.google.com/linux/chrome/deb stable InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[tests/run-tests             ]   | W: Failed to fetch http://dl.google.com/linux/chrome/deb/dists/stable/InRelease  The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[tests/run-tests             ]   | W: Some index files failed to download. They have been ignored, or old ones used instead.\n[tests/run-syntax-tests      ]   | Reading package lists...\n[tests/run-syntax-tests      ]   | W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: http://dl.google.com/linux/chrome/deb stable InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[tests/run-syntax-tests      ]   | W: Failed to fetch http://dl.google.com/linux/chrome/deb/dists/stable/InRelease  The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[tests/run-syntax-tests      ]   | W: Some index files failed to download. They have been ignored, or old ones used instead.\n[tests/run-syntax-tests      ]   | Reading package lists...\n[tests/run-tests             ]   | Reading package lists...\n[tests/run-syntax-tests      ]   | Building dependency tree...\n[tests/run-syntax-tests      ]   | Reading state information...\n[tests/run-tests             ]   | Building dependency tree...\n[tests/run-tests             ]   | Reading state information...\n[tests/run-syntax-tests      ]   | psmisc is already the newest version (23.3-1).\n[tests/run-syntax-tests      ]   | psmisc set to manually installed.\n[tests/run-syntax-tests      ]   | libglib2.0-0 is already the newest version (2.64.6-1~ubuntu20.04.4).\n[tests/run-syntax-tests      ]   | libglib2.0-0 set to manually installed.\n[tests/run-syntax-tests      ]   | The following additional packages will be installed:\n[tests/run-syntax-tests      ]   |   libgtk-3-common\n[tests/run-syntax-tests      ]   | Suggested packages:\n[tests/run-syntax-tests      ]   |   gvfs\n[tests/run-syntax-tests      ]   | Recommended packages:\n[tests/run-syntax-tests      ]   |   libgtk-3-bin\n[tests/run-syntax-tests      ]   | The following NEW packages will be installed:\n[tests/run-syntax-tests      ]   |   locales-all\n[tests/run-syntax-tests      ]   | The following packages will be upgraded:\n[tests/run-syntax-tests      ]   |   libgtk-3-0 libgtk-3-common locales\n[tests/run-syntax-tests      ]   | 3 upgraded, 1 newly installed, 0 to remove and 385 not upgraded.\n[tests/run-syntax-tests      ]   | Need to get 17.3 MB of archives.\n[tests/run-syntax-tests      ]   | After this operation, 227 MB of additional disk space will be used.\n[tests/run-syntax-tests      ]   | Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 locales all 2.31-0ubuntu9.9 [3869 kB]\n[tests/run-tests             ]   | psmisc is already the newest version (23.3-1).\n[tests/run-tests             ]   | psmisc set to manually installed.\n[tests/run-tests             ]   | libglib2.0-0 is already the newest version (2.64.6-1~ubuntu20.04.4).\n[tests/run-tests             ]   | libglib2.0-0 set to manually installed.\n[tests/run-tests             ]   | The following additional packages will be installed:\n[tests/run-tests             ]   |   libgtk-3-common\n[tests/run-tests             ]   | Suggested packages:\n[tests/run-tests             ]   |   gvfs\n[tests/run-tests             ]   | Recommended packages:\n[tests/run-tests             ]   |   libgtk-3-bin\n[tests/run-tests             ]   | The following NEW packages will be installed:\n[tests/run-tests             ]   |   locales-all\n[tests/run-tests             ]   | The following packages will be upgraded:\n[tests/run-tests             ]   |   libgtk-3-0 libgtk-3-common locales\n[tests/run-tests             ]   | 3 upgraded, 1 newly installed, 0 to remove and 385 not upgraded.\n[tests/run-tests             ]   | Need to get 17.3 MB of archives.\n[tests/run-tests             ]   | After this operation, 227 MB of additional disk space will be used.\n[tests/run-tests             ]   | Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 locales all 2.31-0ubuntu9.9 [3869 kB]\n[tests/run-syntax-tests      ]   | Get:2 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgtk-3-common all 3.24.20-0ubuntu1.1 [234 kB]\n[tests/run-syntax-tests      ]   | Get:3 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgtk-3-0 amd64 3.24.20-0ubuntu1.1 [2620 kB]\n[tests/run-syntax-tests      ]   | Get:4 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 locales-all amd64 2.31-0ubuntu9.9 [10.5 MB]\n[tests/run-tests             ]   | Get:2 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgtk-3-common all 3.24.20-0ubuntu1.1 [234 kB]\n[tests/run-tests             ]   | Get:3 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgtk-3-0 amd64 3.24.20-0ubuntu1.1 [2620 kB]\n[tests/run-tests             ]   | Get:4 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 locales-all amd64 2.31-0ubuntu9.9 [10.5 MB]\n[tests/run-syntax-tests      ]   | Preconfiguring packages ...\n[tests/run-tests             ]   | Preconfiguring packages ...\n[tests/run-syntax-tests      ]   | Fetched 17.3 MB in 1s (15.3 MB/s)\n[tests/run-tests             ]   | Fetched 17.3 MB in 1s (20.8 MB/s)\n[tests/run-syntax-tests      ]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[tests/run-syntax-tests      ]   | Preparing to unpack .../locales_2.31-0ubuntu9.9_all.deb ...\r\n[tests/run-syntax-tests      ]   | Unpacking locales (2.31-0ubuntu9.9) over (2.31-0ubuntu9.2) ...\r\n[tests/run-tests             ]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[tests/run-tests             ]   | Preparing to unpack .../locales_2.31-0ubuntu9.9_all.deb ...\r\n[tests/run-tests             ]   | Unpacking locales (2.31-0ubuntu9.9) over (2.31-0ubuntu9.2) ...\r\n[tests/run-syntax-tests      ]   | Preparing to unpack .../libgtk-3-common_3.24.20-0ubuntu1.1_all.deb ...\r\n[tests/run-tests             ]   | Preparing to unpack .../libgtk-3-common_3.24.20-0ubuntu1.1_all.deb ...\r\n[tests/run-syntax-tests      ]   | Unpacking libgtk-3-common (3.24.20-0ubuntu1.1) over (3.24.20-0ubuntu1) ...\r\n[tests/run-tests             ]   | Unpacking libgtk-3-common (3.24.20-0ubuntu1.1) over (3.24.20-0ubuntu1) ...\r\n[tests/run-tests             ]   | Preparing to unpack .../libgtk-3-0_3.24.20-0ubuntu1.1_amd64.deb ...\r\n[tests/run-syntax-tests      ]   | Preparing to unpack .../libgtk-3-0_3.24.20-0ubuntu1.1_amd64.deb ...\r\n[tests/run-tests             ]   | Unpacking libgtk-3-0:amd64 (3.24.20-0ubuntu1.1) over (3.24.20-0ubuntu1) ...\r\n[tests/run-syntax-tests      ]   | Unpacking libgtk-3-0:amd64 (3.24.20-0ubuntu1.1) over (3.24.20-0ubuntu1) ...\r\n[tests/run-syntax-tests      ]   | Selecting previously unselected package locales-all.\r\n[tests/run-tests             ]   | Selecting previously unselected package locales-all.\r\n[tests/run-syntax-tests      ]   | Preparing to unpack .../locales-all_2.31-0ubuntu9.9_amd64.deb ...\r\n[tests/run-tests             ]   | Preparing to unpack .../locales-all_2.31-0ubuntu9.9_amd64.deb ...\r\n[tests/run-syntax-tests      ]   | Unpacking locales-all (2.31-0ubuntu9.9) ...\r\n[tests/run-tests             ]   | Unpacking locales-all (2.31-0ubuntu9.9) ...\r\n[tests/run-syntax-tests      ]   | Setting up locales (2.31-0ubuntu9.9) ...\r\n[tests/run-tests             ]   | Setting up locales (2.31-0ubuntu9.9) ...\r\n[tests/run-syntax-tests      ]   | locales-all installed, skipping locales generation\r\n[tests/run-tests             ]   | locales-all installed, skipping locales generation\r\n[tests/run-syntax-tests      ]   | Setting up locales-all (2.31-0ubuntu9.9) ...\r\n[tests/run-tests             ]   | Setting up locales-all (2.31-0ubuntu9.9) ...\r\n[tests/run-syntax-tests      ]   | Setting up libgtk-3-common (3.24.20-0ubuntu1.1) ...\r\n[tests/run-tests             ]   | Setting up libgtk-3-common (3.24.20-0ubuntu1.1) ...\r\n[tests/run-syntax-tests      ]   | Processing triggers for libc-bin (2.31-0ubuntu9.2) ...\r\n[tests/run-tests             ]   | Processing triggers for libc-bin (2.31-0ubuntu9.2) ...\r\n[tests/run-syntax-tests      ]   | Processing triggers for libglib2.0-0:amd64 (2.64.6-1~ubuntu20.04.4) ...\r\n[tests/run-tests             ]   | Processing triggers for libglib2.0-0:amd64 (2.64.6-1~ubuntu20.04.4) ...\r\n[tests/run-syntax-tests      ]   | Setting up libgtk-3-0:amd64 (3.24.20-0ubuntu1.1) ...\r\n[tests/run-tests             ]   | Setting up libgtk-3-0:amd64 (3.24.20-0ubuntu1.1) ...\r\n[tests/run-syntax-tests      ]   | Processing triggers for libc-bin (2.31-0ubuntu9.2) ...\r\n[tests/run-tests             ]   | Processing triggers for libc-bin (2.31-0ubuntu9.2) ...\r\n[tests/check-upgrade-messages]   \u2705  Success - Post actions/setup-python@v4\n[tests/run-tests             ]   | Reading package lists...\n[tests/run-syntax-tests      ]   | Reading package lists...\n[tests/run-tests             ]   | Building dependency tree...\n[tests/run-tests             ]   | Reading state information...\n[tests/run-syntax-tests      ]   | Building dependency tree...\n[tests/run-syntax-tests      ]   | Reading state information...\n[tests/check-upgrade-messages]   \u2705  Success - Post kaste/upgrade-messages-test-action@v1\n[tests/run-syntax-tests      ]   | The following additional packages will be installed:\n[tests/run-syntax-tests      ]   |   xserver-common\n[tests/run-syntax-tests      ]   | Recommended packages:\n[tests/run-syntax-tests      ]   |   xfonts-base\n[tests/run-syntax-tests      ]   | The following packages will be upgraded:\n[tests/run-syntax-tests      ]   |   xserver-common xvfb\n[tests/run-tests             ]   | The following additional packages will be installed:\n[tests/run-tests             ]   |   xserver-common\n[tests/run-tests             ]   | Recommended packages:\n[tests/run-tests             ]   |   xfonts-base\n[tests/run-tests             ]   | The following packages will be upgraded:\n[tests/run-tests             ]   |   xserver-common xvfb\n[tests/run-tests             ]   | 2 upgraded, 0 newly installed, 0 to remove and 383 not upgraded.\n[tests/run-tests             ]   | Need to get 807 kB of archives.\n[tests/run-tests             ]   | After this operation, 2048 B of additional disk space will be used.\n[tests/run-tests             ]   | Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 xserver-common all 2:1.20.13-1ubuntu1~20.04.8 [27.2 kB]\n[tests/run-syntax-tests      ]   | 2 upgraded, 0 newly installed, 0 to remove and 383 not upgraded.\n[tests/run-syntax-tests      ]   | Need to get 807 kB of archives.\n[tests/run-syntax-tests      ]   | After this operation, 2048 B of additional disk space will be used.\n[tests/run-syntax-tests      ]   | Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 xserver-common all 2:1.20.13-1ubuntu1~20.04.8 [27.2 kB]\n[tests/run-tests             ]   | Get:2 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 xvfb amd64 2:1.20.13-1ubuntu1~20.04.8 [780 kB]\n[tests/run-syntax-tests      ]   | Get:2 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 xvfb amd64 2:1.20.13-1ubuntu1~20.04.8 [780 kB]\n[tests/run-tests             ]   | Fetched 807 kB in 0s (2242 kB/s)\n[tests/run-tests             ]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 200682 files and directories currently installed.)\r\n[tests/run-tests             ]   | Preparing to unpack .../xserver-common_2%3a1.20.13-1ubuntu1~20.04.8_all.deb ...\r\n[tests/run-tests             ]   | Unpacking xserver-common (2:1.20.13-1ubuntu1~20.04.8) over (2:1.20.11-1ubuntu1~20.04.2) ...\r\n[tests/run-tests             ]   | Preparing to unpack .../xvfb_2%3a1.20.13-1ubuntu1~20.04.8_amd64.deb ...\r\n[tests/run-tests             ]   | Unpacking xvfb (2:1.20.13-1ubuntu1~20.04.8) over (2:1.20.11-1ubuntu1~20.04.2) ...\r\n[tests/run-syntax-tests      ]   | Fetched 807 kB in 1s (585 kB/s)\n[tests/run-syntax-tests      ]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 200682 files and directories currently installed.)\r\n[tests/run-syntax-tests      ]   | Preparing to unpack .../xserver-common_2%3a1.20.13-1ubuntu1~20.04.8_all.deb ...\r\n[tests/run-syntax-tests      ]   | Unpacking xserver-common (2:1.20.13-1ubuntu1~20.04.8) over (2:1.20.11-1ubuntu1~20.04.2) ...\r\n[tests/run-tests             ]   | Setting up xserver-common (2:1.20.13-1ubuntu1~20.04.8) ...\r\n[tests/run-tests             ]   | Setting up xvfb (2:1.20.13-1ubuntu1~20.04.8) ...\r\n[tests/run-tests             ]   \u2705  Success - Main sudo bash $GITHUB_ACTION_PATH/../../scripts/install_ubuntu_sys_req.sh\necho \"DISPLAY=:1\" >> $GITHUB_ENV\n\nif [ \"xvfb\" = \"xvfb\" ]; then\n  sudo apt-get install xvfb\nelif [ \"xvfb\" = \"turbovnc\" ]; then\n  wget https://phoenixnap.dl.sourceforge.net/project/turbovnc/2.2.5/turbovnc_2.2.5_amd64.deb\n  sudo dpkg -i turbovnc_2.2.5_amd64.deb\n  echo \"/opt/TurboVNC/bin\" >> $GITHUB_PATH\nfi\nif [ \"xvfb\" != \"false\" ]; then\n  if [ \"icevm\" = \"xfce\" ]; then\n    sudo apt-get install --no-install-recommends xfce4 xfce4-goodies dbus-x11\n  elif [ \"icevm\" = \"icewm\" ]; then\n    sudo apt-get install icewm\n  elif [ \"icevm\" = \"fluxbox\" ]; then\n    sudo apt-get install fluxbox\n  fi\nfi\n[tests/run-syntax-tests      ]   | Preparing to unpack .../xvfb_2%3a1.20.13-1ubuntu1~20.04.8_amd64.deb ...\r\n[tests/run-syntax-tests      ]   | Unpacking xvfb (2:1.20.13-1ubuntu1~20.04.8) over (2:1.20.11-1ubuntu1~20.04.2) ...\r\n[tests/run-tests             ]   \u2699  ::set-env:: DISPLAY=:1\n[tests/run-syntax-tests      ]   | Setting up xserver-common (2:1.20.13-1ubuntu1~20.04.8) ...\r\n[tests/run-syntax-tests      ]   | Setting up xvfb (2:1.20.13-1ubuntu1~20.04.8) ...\r\n[tests/run-syntax-tests      ]   \u2705  Success - Main sudo bash $GITHUB_ACTION_PATH/../../scripts/install_ubuntu_sys_req.sh\necho \"DISPLAY=:1\" >> $GITHUB_ENV\n\nif [ \"xvfb\" = \"xvfb\" ]; then\n  sudo apt-get install xvfb\nelif [ \"xvfb\" = \"turbovnc\" ]; then\n  wget https://phoenixnap.dl.sourceforge.net/project/turbovnc/2.2.5/turbovnc_2.2.5_amd64.deb\n  sudo dpkg -i turbovnc_2.2.5_amd64.deb\n  echo \"/opt/TurboVNC/bin\" >> $GITHUB_PATH\nfi\nif [ \"xvfb\" != \"false\" ]; then\n  if [ \"icevm\" = \"xfce\" ]; then\n    sudo apt-get install --no-install-recommends xfce4 xfce4-goodies dbus-x11\n  elif [ \"icevm\" = \"icewm\" ]; then\n    sudo apt-get install icewm\n  elif [ \"icevm\" = \"fluxbox\" ]; then\n    sudo apt-get install fluxbox\n  fi\nfi\n[tests/run-tests             ] \u2b50 Run Main if [ \"xvfb\" = \"xvfb\" ]; then\n  Xvfb $DISPLAY -screen 0 1024x768x24 -ac +extension GLX +render -noreset &\n  sleep 1\n  if [ \"icevm\" = \"xfce\" ]; then\n    nohup startxfce4 &\n  elif [ \"icevm\" = \"icewm\" ]; then\n    nohup icewm &\n  elif [ \"icevm\" = \"fluxbox\" ]; then\n    nohup fluxbox &\n  fi\nelif [ \"xvfb\" = \"turbovnc\" ]; then\n  mkdir $HOME/.vnc\n  echo $RANDOM$RANDOM | vncpasswd -f > $HOME/.vnc/passwd\n  chmod 0600 $HOME/.vnc/passwd\n  if [ \"icevm\" = \"xfce\" ]; then\n    vncserver $DISPLAY -geometry 1024x768 -depth 24 -wm \"startxfce4\"\n  elif [ \"icevm\" = \"false\" ]; then\n    vncserver $DISPLAY -geometry 1024x768 -depth 24\n  else\n    vncserver $DISPLAY -geometry 1024x768 -depth 24 -wm \"icevm\"\n  fi\nfi\n[tests/run-syntax-tests      ]   \u2699  ::set-env:: DISPLAY=:1\n[tests/run-tests             ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[tests/run-syntax-tests      ] \u2b50 Run Main if [ \"xvfb\" = \"xvfb\" ]; then\n  Xvfb $DISPLAY -screen 0 1024x768x24 -ac +extension GLX +render -noreset &\n  sleep 1\n  if [ \"icevm\" = \"xfce\" ]; then\n    nohup startxfce4 &\n  elif [ \"icevm\" = \"icewm\" ]; then\n    nohup icewm &\n  elif [ \"icevm\" = \"fluxbox\" ]; then\n    nohup fluxbox &\n  fi\nelif [ \"xvfb\" = \"turbovnc\" ]; then\n  mkdir $HOME/.vnc\n  echo $RANDOM$RANDOM | vncpasswd -f > $HOME/.vnc/passwd\n  chmod 0600 $HOME/.vnc/passwd\n  if [ \"icevm\" = \"xfce\" ]; then\n    vncserver $DISPLAY -geometry 1024x768 -depth 24 -wm \"startxfce4\"\n  elif [ \"icevm\" = \"false\" ]; then\n    vncserver $DISPLAY -geometry 1024x768 -depth 24\n  else\n    vncserver $DISPLAY -geometry 1024x768 -depth 24 -wm \"icevm\"\n  fi\nfi\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[tests/run-tests             ]   | _XSERVTransmkdir: ERROR: euid != 0,directory /tmp/.X11-unix will not be created.\n[tests/run-syntax-tests      ]   | _XSERVTransmkdir: ERROR: euid != 0,directory /tmp/.X11-unix will not be created.\n[tests/check-upgrade-messages] \ud83c\udfc1  Job succeeded\n[tests/run-tests             ]   \u2705  Success - Main if [ \"xvfb\" = \"xvfb\" ]; then\n  Xvfb $DISPLAY -screen 0 1024x768x24 -ac +extension GLX +render -noreset &\n  sleep 1\n  if [ \"icevm\" = \"xfce\" ]; then\n    nohup startxfce4 &\n  elif [ \"icevm\" = \"icewm\" ]; then\n    nohup icewm &\n  elif [ \"icevm\" = \"fluxbox\" ]; then\n    nohup fluxbox &\n  fi\nelif [ \"xvfb\" = \"turbovnc\" ]; then\n  mkdir $HOME/.vnc\n  echo $RANDOM$RANDOM | vncpasswd -f > $HOME/.vnc/passwd\n  chmod 0600 $HOME/.vnc/passwd\n  if [ \"icevm\" = \"xfce\" ]; then\n    vncserver $DISPLAY -geometry 1024x768 -depth 24 -wm \"startxfce4\"\n  elif [ \"icevm\" = \"false\" ]; then\n    vncserver $DISPLAY -geometry 1024x768 -depth 24\n  else\n    vncserver $DISPLAY -geometry 1024x768 -depth 24 -wm \"icevm\"\n  fi\nfi\n[tests/run-syntax-tests      ]   \u2705  Success - Main if [ \"xvfb\" = \"xvfb\" ]; then\n  Xvfb $DISPLAY -screen 0 1024x768x24 -ac +extension GLX +render -noreset &\n  sleep 1\n  if [ \"icevm\" = \"xfce\" ]; then\n    nohup startxfce4 &\n  elif [ \"icevm\" = \"icewm\" ]; then\n    nohup icewm &\n  elif [ \"icevm\" = \"fluxbox\" ]; then\n    nohup fluxbox &\n  fi\nelif [ \"xvfb\" = \"turbovnc\" ]; then\n  mkdir $HOME/.vnc\n  echo $RANDOM$RANDOM | vncpasswd -f > $HOME/.vnc/passwd\n  chmod 0600 $HOME/.vnc/passwd\n  if [ \"icevm\" = \"xfce\" ]; then\n    vncserver $DISPLAY -geometry 1024x768 -depth 24 -wm \"startxfce4\"\n  elif [ \"icevm\" = \"false\" ]; then\n    vncserver $DISPLAY -geometry 1024x768 -depth 24\n  else\n    vncserver $DISPLAY -geometry 1024x768 -depth 24 -wm \"icevm\"\n  fi\nfi\n[tests/run-tests             ] \u2b50 Run Main bash $GITHUB_ACTION_PATH/../../scripts/install_sublime_text.sh\n[tests/run-syntax-tests      ] \u2b50 Run Main bash $GITHUB_ACTION_PATH/../../scripts/install_sublime_text.sh\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-5.sh] user= workdir=\n[tests/run-tests             ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-5.sh] user= workdir=\n[tests/run-tests             ]   | installing sublime text 3\n[tests/run-syntax-tests      ]   | installing sublime text 4\n[tests/run-syntax-tests      ]   | downloading https://download.sublimetext.com/sublime_text_build_4143_x64.tar.xz\n[tests/run-syntax-tests      ]   |   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n[tests/run-syntax-tests      ]   |                                  Dload  Upload   Total   Spent    Left  Speed\n[tests/run-tests             ]   | downloading https://download.sublimetext.com/sublime_text_3_build_3211_x64.tar.bz2\n[tests/run-tests             ]   |   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n[tests/run-tests             ]   |                                  Dload  Upload   Total   Spent    Left  Speed\n[tests/run-syntax-tests      ]   | \r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r  2 16.6M    2  431k    0     0   428k      0  0:00:39  0:00:01  0:00:38  428k\r 38 16.6M   38 6511k    0     0  3297k      0  0:00:05  0:00:01  0:00:04 3295k\r 69 16.6M   69 11.5M    0     0  4008k      0  0:00:04  0:00:02  0:00:02 4006k\r 89 16.6M   89 14.9M    0     0  3871k      0  0:00:04  0:00:03  0:00:01 3870k\r100 16.6M  100 16.6M    0     0  3637k      0  0:00:04  0:00:04 --:--:-- 3637k\n[tests/run-syntax-tests      ]   | Reading package lists...\n[tests/run-syntax-tests      ]   | Building dependency tree...\n[tests/run-syntax-tests      ]   | Reading state information...\n[tests/run-syntax-tests      ]   | The following packages will be upgraded:\n[tests/run-syntax-tests      ]   |   xz-utils\n[tests/run-syntax-tests      ]   | 1 upgraded, 0 newly installed, 0 to remove and 382 not upgraded.\n[tests/run-syntax-tests      ]   | Need to get 82.6 kB of archives.\n[tests/run-syntax-tests      ]   | After this operation, 0 B of additional disk space will be used.\n[tests/run-syntax-tests      ]   | Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 xz-utils amd64 5.2.4-1ubuntu1.1 [82.6 kB]\n[tests/run-syntax-tests      ]   | Fetched 82.6 kB in 0s (453 kB/s)\n[tests/run-syntax-tests      ]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 200682 files and directories currently installed.)\r\n[tests/run-syntax-tests      ]   | Preparing to unpack .../xz-utils_5.2.4-1ubuntu1.1_amd64.deb ...\r\n[tests/run-syntax-tests      ]   | Unpacking xz-utils (5.2.4-1ubuntu1.1) over (5.2.4-1ubuntu1) ...\r\n[tests/run-syntax-tests      ]   | Setting up xz-utils (5.2.4-1ubuntu1.1) ...\r\n[tests/run-tests             ]   | \r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r  0 13.0M    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\r  0 13.0M    0 98232    0     0  51619      0  0:04:24  0:00:01  0:04:23 51592\r  1 13.0M    1  239k    0     0  82280      0  0:02:46  0:00:02  0:02:44 82253\r  2 13.0M    2  367k    0     0  94992      0  0:02:23  0:00:03  0:02:20 94968\r  3 13.0M    3  511k    0     0   103k      0  0:02:08  0:00:04  0:02:04  103k\r  5 13.0M    5  687k    0     0   116k      0  0:01:54  0:00:05  0:01:49  140k\r  7 13.0M    7 1023k    0     0   148k      0  0:01:30  0:00:06  0:01:24  185k\r 11 13.0M   11 1583k    0     0   199k      0  0:01:06  0:00:07  0:00:59  272k\r 18 13.0M   18 2495k    0     0   279k      0  0:00:47  0:00:08  0:00:39  428k\r 29 13.0M   29 3936k    0     0   397k      0  0:00:33  0:00:09  0:00:24  689k\r 45 13.0M   45 6048k    0     0   553k      0  0:00:24  0:00:10  0:00:14 1069k\r 69 13.0M   69 9247k    0     0   775k      0  0:00:17  0:00:11  0:00:06 1643k\r 94 13.0M   94 12.2M    0     0   973k      0  0:00:13  0:00:12  0:00:01 2204k\r100 13.0M  100 13.0M    0     0   999k      0  0:00:13  0:00:13 --:--:-- 2449k\n[tests/run-syntax-tests      ]   \u2705  Success - Main bash $GITHUB_ACTION_PATH/../../scripts/install_sublime_text.sh\n[tests/run-syntax-tests      ] \u2b50 Run Main # Disable warnings about detached HEAD\n# https://stackoverflow.com/questions/36794501\ngit config --global advice.detachedHead false\n\n# block sublime text website ip\nbash $GITHUB_ACTION_PATH/../../scripts/block_ip.sh\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[tests/run-tests             ]   \u2705  Success - Main bash $GITHUB_ACTION_PATH/../../scripts/install_sublime_text.sh\n[tests/run-tests             ] \u2b50 Run Main # Disable warnings about detached HEAD\n# https://stackoverflow.com/questions/36794501\ngit config --global advice.detachedHead false\n\n# block sublime text website ip\nbash $GITHUB_ACTION_PATH/../../scripts/block_ip.sh\n[tests/run-tests             ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[tests/run-syntax-tests      ]   | block sublime text ip address\n[tests/run-tests             ]   | block sublime text ip address\n[tests/run-syntax-tests      ]   | Reading package lists...\n[tests/run-tests             ]   | Reading package lists...\n[tests/run-syntax-tests      ]   | Building dependency tree...\n[tests/run-syntax-tests      ]   | Reading state information...\n[tests/run-syntax-tests      ]   | net-tools is already the newest version (1.60+git20180626.aebd88e-1ubuntu1).\n[tests/run-syntax-tests      ]   | 0 upgraded, 0 newly installed, 0 to remove and 382 not upgraded.\n[tests/run-tests             ]   | Building dependency tree...\n[tests/run-tests             ]   | Reading state information...\n[tests/run-syntax-tests      ]   | SIOCADDRT: Operation not permitted\n[tests/run-syntax-tests      ]   | See https://github.com/SublimeText/UnitTesting/issues/190#issuecomment-850133753\n[tests/run-syntax-tests      ]   \u2705  Success - Main # Disable warnings about detached HEAD\n# https://stackoverflow.com/questions/36794501\ngit config --global advice.detachedHead false\n\n# block sublime text website ip\nbash $GITHUB_ACTION_PATH/../../scripts/block_ip.sh\n[tests/run-tests             ]   | net-tools is already the newest version (1.60+git20180626.aebd88e-1ubuntu1).\n[tests/run-tests             ]   | 0 upgraded, 0 newly installed, 0 to remove and 383 not upgraded.\n[tests/run-tests             ]   | SIOCADDRT: Operation not permitted\n[tests/run-tests             ]   | See https://github.com/SublimeText/UnitTesting/issues/190#issuecomment-850133753\n[tests/run-tests             ]   \u2705  Success - Main # Disable warnings about detached HEAD\n# https://stackoverflow.com/questions/36794501\ngit config --global advice.detachedHead false\n\n# block sublime text website ip\nbash $GITHUB_ACTION_PATH/../../scripts/block_ip.sh\n[tests/run-syntax-tests      ] \u2b50 Run Main REPO=\"$GITHUB_REPOSITORY\"\nif [ \"true\" = \"true\" ]; then\n  cd \"./\"\n  REMOTEURL=$(git config --get remote.origin.url || true)\n  cd -\n  if [[ \"$REMOTEURL\" =~ ^https://github.com/ ]]; then\n    REPO=${REMOTEURL#https://github.com/}\n    REPO=${REPO%\\.git}\n  fi\nfi\nPACKAGE_FROM_INPUTS=\"\"\nPACKAGE=\"${PACKAGE_FROM_INPUTS:-${REPO#*/}}\"\n\necho \"PACKAGE=$PACKAGE\" >> $GITHUB_ENV\n[tests/run-tests             ] \u2b50 Run Main REPO=\"$GITHUB_REPOSITORY\"\nif [ \"true\" = \"true\" ]; then\n  cd \"./\"\n  REMOTEURL=$(git config --get remote.origin.url || true)\n  cd -\n  if [[ \"$REMOTEURL\" =~ ^https://github.com/ ]]; then\n    REPO=${REMOTEURL#https://github.com/}\n    REPO=${REPO%\\.git}\n  fi\nfi\nPACKAGE_FROM_INPUTS=\"\"\nPACKAGE=\"${PACKAGE_FROM_INPUTS:-${REPO#*/}}\"\n\necho \"PACKAGE=$PACKAGE\" >> $GITHUB_ENV\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[tests/run-tests             ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[tests/run-syntax-tests      ]   | /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/SublimeLinter-SublimeLinter\n[tests/run-syntax-tests      ]   \u2705  Success - Main REPO=\"$GITHUB_REPOSITORY\"\nif [ \"true\" = \"true\" ]; then\n  cd \"./\"\n  REMOTEURL=$(git config --get remote.origin.url || true)\n  cd -\n  if [[ \"$REMOTEURL\" =~ ^https://github.com/ ]]; then\n    REPO=${REMOTEURL#https://github.com/}\n    REPO=${REPO%\\.git}\n  fi\nfi\nPACKAGE_FROM_INPUTS=\"\"\nPACKAGE=\"${PACKAGE_FROM_INPUTS:-${REPO#*/}}\"\n\necho \"PACKAGE=$PACKAGE\" >> $GITHUB_ENV\n[tests/run-tests             ]   | /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/SublimeLinter-SublimeLinter\n[tests/run-tests             ]   \u2705  Success - Main REPO=\"$GITHUB_REPOSITORY\"\nif [ \"true\" = \"true\" ]; then\n  cd \"./\"\n  REMOTEURL=$(git config --get remote.origin.url || true)\n  cd -\n  if [[ \"$REMOTEURL\" =~ ^https://github.com/ ]]; then\n    REPO=${REMOTEURL#https://github.com/}\n    REPO=${REPO%\\.git}\n  fi\nfi\nPACKAGE_FROM_INPUTS=\"\"\nPACKAGE=\"${PACKAGE_FROM_INPUTS:-${REPO#*/}}\"\n\necho \"PACKAGE=$PACKAGE\" >> $GITHUB_ENV\n[tests/run-syntax-tests      ]   \u2699  ::set-env:: PACKAGE=SublimeLinter\n[tests/run-tests             ]   \u2699  ::set-env:: PACKAGE=SublimeLinter\n[tests/run-tests             ] \u2b50 Run Main . $GITHUB_ACTION_PATH/../../scripts/utils.sh\n\n# Copy plugin files to Packages/<Package> folder if files are checked out.\nif [ \"true\" = \"true\" ]; then\n  cd \"./\"\n  if [ -d \"./.git\" ] && [ ! -d \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\" ]; then\n      # symlink does not play well with coverage\n      echo \"copy the package to sublime package directory\"\n      mkdir -p \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n      cp -r ./ \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n      # detached head will crash package control\n      rm -rf \"$SUBLIME_TEXT_PACKAGES/$PACKAGE/.git\"\n  fi\n  cd -\nfi\nif [ \"true\" = \"true\" ]; then\n    InstallPackage \"UnitTesting\" \"https://github.com/SublimeText/UnitTesting\" \"\"\nfi\nif [ \"true\" = \"true\" ]; then\n    InstallPackage \"coverage\" \"https://github.com/codexns/sublime-coverage\" \"\"\nfi\n\nwhile read -r x; do\n    if [[ \"$x\" =~ ^(.*):(.*)/([^@]*)@?(.*)$ ]]; then\n        PKG=\"${BASH_REMATCH[1]}\"\n        USER=\"${BASH_REMATCH[2]}\"\n        REPO=\"${BASH_REMATCH[3]}\"\n        SHA=\"${BASH_REMATCH[4]}\"\n    elif [[ \"$x\" =~ ^(.*)/([^@]*)@?(.*)$ ]]; then\n        PKG=\"${BASH_REMATCH[2]}\"\n        USER=\"${BASH_REMATCH[1]}\"\n        REPO=\"${BASH_REMATCH[2]}\"\n        SHA=\"${BASH_REMATCH[3]}\"\n    else\n      continue\n    fi\n    InstallPackage \"$PKG\" \"https://github.com/$USER/$REPO\" \"$SHA\"\ndone <<< \"\"\n[tests/run-syntax-tests      ] \u2b50 Run Main . $GITHUB_ACTION_PATH/../../scripts/utils.sh\n\n# Copy plugin files to Packages/<Package> folder if files are checked out.\nif [ \"true\" = \"true\" ]; then\n  cd \"./\"\n  if [ -d \"./.git\" ] && [ ! -d \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\" ]; then\n      # symlink does not play well with coverage\n      echo \"copy the package to sublime package directory\"\n      mkdir -p \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n      cp -r ./ \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n      # detached head will crash package control\n      rm -rf \"$SUBLIME_TEXT_PACKAGES/$PACKAGE/.git\"\n  fi\n  cd -\nfi\nif [ \"true\" = \"true\" ]; then\n    InstallPackage \"UnitTesting\" \"https://github.com/SublimeText/UnitTesting\" \"\"\nfi\nif [ \"true\" = \"true\" ]; then\n    InstallPackage \"coverage\" \"https://github.com/codexns/sublime-coverage\" \"\"\nfi\n\nwhile read -r x; do\n    if [[ \"$x\" =~ ^(.*):(.*)/([^@]*)@?(.*)$ ]]; then\n        PKG=\"${BASH_REMATCH[1]}\"\n        USER=\"${BASH_REMATCH[2]}\"\n        REPO=\"${BASH_REMATCH[3]}\"\n        SHA=\"${BASH_REMATCH[4]}\"\n    elif [[ \"$x\" =~ ^(.*)/([^@]*)@?(.*)$ ]]; then\n        PKG=\"${BASH_REMATCH[2]}\"\n        USER=\"${BASH_REMATCH[1]}\"\n        REPO=\"${BASH_REMATCH[2]}\"\n        SHA=\"${BASH_REMATCH[3]}\"\n    else\n      continue\n    fi\n    InstallPackage \"$PKG\" \"https://github.com/$USER/$REPO\" \"$SHA\"\ndone <<< \"\"\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-9.sh] user= workdir=\n[tests/run-tests             ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-9.sh] user= workdir=\n[tests/run-syntax-tests      ]   | copy the package to sublime package directory\n[tests/run-tests             ]   | copy the package to sublime package directory\n[tests/run-tests             ]   | /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/SublimeLinter-SublimeLinter\n[tests/run-syntax-tests      ]   | /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/SublimeLinter-SublimeLinter\n[tests/run-syntax-tests      ]   | Installing UnitTesting from https://github.com/SublimeText/UnitTesting@1.5.9 to /home/runneradmin/.config/sublime-text/Packages/UnitTesting\n[tests/run-tests             ]   | Installing UnitTesting from https://github.com/SublimeText/UnitTesting@1.5.9 to /home/runneradmin/.config/sublime-text-3/Packages/UnitTesting\n[tests/run-tests             ]   | Installing coverage from https://github.com/codexns/sublime-coverage@1.0.0 to /home/runneradmin/.config/sublime-text-3/Packages/coverage\n[tests/run-tests             ]   \u2705  Success - Main . $GITHUB_ACTION_PATH/../../scripts/utils.sh\n\n# Copy plugin files to Packages/<Package> folder if files are checked out.\nif [ \"true\" = \"true\" ]; then\n  cd \"./\"\n  if [ -d \"./.git\" ] && [ ! -d \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\" ]; then\n      # symlink does not play well with coverage\n      echo \"copy the package to sublime package directory\"\n      mkdir -p \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n      cp -r ./ \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n      # detached head will crash package control\n      rm -rf \"$SUBLIME_TEXT_PACKAGES/$PACKAGE/.git\"\n  fi\n  cd -\nfi\nif [ \"true\" = \"true\" ]; then\n    InstallPackage \"UnitTesting\" \"https://github.com/SublimeText/UnitTesting\" \"\"\nfi\nif [ \"true\" = \"true\" ]; then\n    InstallPackage \"coverage\" \"https://github.com/codexns/sublime-coverage\" \"\"\nfi\n\nwhile read -r x; do\n    if [[ \"$x\" =~ ^(.*):(.*)/([^@]*)@?(.*)$ ]]; then\n        PKG=\"${BASH_REMATCH[1]}\"\n        USER=\"${BASH_REMATCH[2]}\"\n        REPO=\"${BASH_REMATCH[3]}\"\n        SHA=\"${BASH_REMATCH[4]}\"\n    elif [[ \"$x\" =~ ^(.*)/([^@]*)@?(.*)$ ]]; then\n        PKG=\"${BASH_REMATCH[2]}\"\n        USER=\"${BASH_REMATCH[1]}\"\n        REPO=\"${BASH_REMATCH[2]}\"\n        SHA=\"${BASH_REMATCH[3]}\"\n    else\n      continue\n    fi\n    InstallPackage \"$PKG\" \"https://github.com/$USER/$REPO\" \"$SHA\"\ndone <<< \"\"\n[tests/run-syntax-tests      ]   | Installing coverage from https://github.com/codexns/sublime-coverage@1.0.0 to /home/runneradmin/.config/sublime-text/Packages/coverage\n[tests/run-tests             ] \u2b50 Run Main bash $GITHUB_ACTION_PATH/../../scripts/install_package_control.sh\n[tests/run-tests             ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-10.sh] user= workdir=\n[tests/run-syntax-tests      ]   \u2705  Success - Main . $GITHUB_ACTION_PATH/../../scripts/utils.sh\n\n# Copy plugin files to Packages/<Package> folder if files are checked out.\nif [ \"true\" = \"true\" ]; then\n  cd \"./\"\n  if [ -d \"./.git\" ] && [ ! -d \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\" ]; then\n      # symlink does not play well with coverage\n      echo \"copy the package to sublime package directory\"\n      mkdir -p \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n      cp -r ./ \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n      # detached head will crash package control\n      rm -rf \"$SUBLIME_TEXT_PACKAGES/$PACKAGE/.git\"\n  fi\n  cd -\nfi\nif [ \"true\" = \"true\" ]; then\n    InstallPackage \"UnitTesting\" \"https://github.com/SublimeText/UnitTesting\" \"\"\nfi\nif [ \"true\" = \"true\" ]; then\n    InstallPackage \"coverage\" \"https://github.com/codexns/sublime-coverage\" \"\"\nfi\n\nwhile read -r x; do\n    if [[ \"$x\" =~ ^(.*):(.*)/([^@]*)@?(.*)$ ]]; then\n        PKG=\"${BASH_REMATCH[1]}\"\n        USER=\"${BASH_REMATCH[2]}\"\n        REPO=\"${BASH_REMATCH[3]}\"\n        SHA=\"${BASH_REMATCH[4]}\"\n    elif [[ \"$x\" =~ ^(.*)/([^@]*)@?(.*)$ ]]; then\n        PKG=\"${BASH_REMATCH[2]}\"\n        USER=\"${BASH_REMATCH[1]}\"\n        REPO=\"${BASH_REMATCH[2]}\"\n        SHA=\"${BASH_REMATCH[3]}\"\n    else\n      continue\n    fi\n    InstallPackage \"$PKG\" \"https://github.com/$USER/$REPO\" \"$SHA\"\ndone <<< \"\"\n[tests/run-syntax-tests      ] \u2b50 Run Main bash $GITHUB_ACTION_PATH/../../scripts/install_package_control.sh\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-10.sh] user= workdir=\n[tests/run-tests             ]   | creating Package Control.sublime-settings\n[tests/run-syntax-tests      ]   | creating Package Control.sublime-settings\n[tests/run-tests             ]   | .....\n[tests/run-tests             ]   | Package Control installed.\n[tests/run-syntax-tests      ]   | .....\n[tests/run-syntax-tests      ]   | Package Control installed.\n[tests/run-tests             ]   \u2705  Success - Main bash $GITHUB_ACTION_PATH/../../scripts/install_package_control.sh\n[tests/run-syntax-tests      ]   \u2705  Success - Main bash $GITHUB_ACTION_PATH/../../scripts/install_package_control.sh\n[tests/run-syntax-tests      ] \u2b50 Run Main if [ \"true\" = \"true\" ]; then\n  # package control may have updated the checked out repo, we need to restore it\n  if [ -f \"$SUBLIME_TEXT_PACKAGES/$PACKAGE/dependency-metadata.json\" ]; then\n    cd \"./\"\n    rm -rf \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n    cp -r ./ \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n    rm -rf \"$SUBLIME_TEXT_PACKAGES/$PACKAGE/.git\"\n    touch \"$SUBLIME_TEXT_PACKAGES/$PACKAGE/.sublime-dependency\"\n    cd -\n  fi\nfi\n[tests/run-tests             ] \u2b50 Run Main if [ \"true\" = \"true\" ]; then\n  # package control may have updated the checked out repo, we need to restore it\n  if [ -f \"$SUBLIME_TEXT_PACKAGES/$PACKAGE/dependency-metadata.json\" ]; then\n    cd \"./\"\n    rm -rf \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n    cp -r ./ \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n    rm -rf \"$SUBLIME_TEXT_PACKAGES/$PACKAGE/.git\"\n    touch \"$SUBLIME_TEXT_PACKAGES/$PACKAGE/.sublime-dependency\"\n    cd -\n  fi\nfi\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-12.sh] user= workdir=\n[tests/run-tests             ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-12.sh] user= workdir=\n[tests/run-tests             ]   \u2705  Success - Main if [ \"true\" = \"true\" ]; then\n  # package control may have updated the checked out repo, we need to restore it\n  if [ -f \"$SUBLIME_TEXT_PACKAGES/$PACKAGE/dependency-metadata.json\" ]; then\n    cd \"./\"\n    rm -rf \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n    cp -r ./ \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n    rm -rf \"$SUBLIME_TEXT_PACKAGES/$PACKAGE/.git\"\n    touch \"$SUBLIME_TEXT_PACKAGES/$PACKAGE/.sublime-dependency\"\n    cd -\n  fi\nfi\n[tests/run-syntax-tests      ]   \u2705  Success - Main if [ \"true\" = \"true\" ]; then\n  # package control may have updated the checked out repo, we need to restore it\n  if [ -f \"$SUBLIME_TEXT_PACKAGES/$PACKAGE/dependency-metadata.json\" ]; then\n    cd \"./\"\n    rm -rf \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n    cp -r ./ \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n    rm -rf \"$SUBLIME_TEXT_PACKAGES/$PACKAGE/.git\"\n    touch \"$SUBLIME_TEXT_PACKAGES/$PACKAGE/.sublime-dependency\"\n    cd -\n  fi\nfi\n[tests/run-tests             ]   \u2705  Success - Main SublimeText/UnitTesting/actions/setup@v1\n[tests/run-syntax-tests      ]   \u2705  Success - Main SublimeText/UnitTesting/actions/setup@v1\n[tests/run-tests             ] \u2b50 Run Main SublimeText/UnitTesting/actions/run-tests@v1\n[tests/run-syntax-tests      ] \u2b50 Run Main SublimeText/UnitTesting/actions/run-syntax-tests@v1\n[tests/run-tests             ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/SublimeText-UnitTesting-actions-run-tests@v1/ dst=/var/run/act/actions/SublimeText-UnitTesting-actions-run-tests@v1/\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/SublimeText-UnitTesting-actions-run-syntax-tests@v1/ dst=/var/run/act/actions/SublimeText-UnitTesting-actions-run-syntax-tests@v1/\n[tests/run-tests             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/SublimeText-UnitTesting-actions-run-tests@v1/] user=0 workdir=\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/SublimeText-UnitTesting-actions-run-syntax-tests@v1/] user=0 workdir=\n[tests/run-tests             ] \u2b50 Run Main PACKAGE_FROM_INPUTS=\"\"\nPACKAGE=\"${PACKAGE_FROM_INPUTS:-$PACKAGE}\"\n\nif [ \"false\" == \"true\" ]; then\n  python3 \"$GITHUB_ACTION_PATH/../../scripts/run_tests.py\" \"$PACKAGE\" --coverage\nelse\n  python3 \"$GITHUB_ACTION_PATH/../../scripts/run_tests.py\" \"$PACKAGE\"\nfi\n[tests/run-syntax-tests      ] \u2b50 Run Main PACKAGE_FROM_INPUTS=\"\"\nPACKAGE=\"${PACKAGE_FROM_INPUTS:-$PACKAGE}\"\n\npython3 \"$GITHUB_ACTION_PATH/../../scripts/run_tests.py\" \"$PACKAGE\" --syntax-test\n\nif [ \"true\" == \"true\" ]; then\n  python3 \"$GITHUB_ACTION_PATH/../../scripts/run_tests.py\" \"$PACKAGE\" --syntax-compatibility\nfi\n[tests/run-tests             ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[tests/run-tests             ]   | Wait for tests output....Unable to connect to dbus\n[tests/run-syntax-tests      ]   | Wait for tests output........\n[tests/run-syntax-tests      ]   | Start to read output...\n[tests/run-syntax-tests      ]   | Success: 565 assertions in 1 file passed\n[tests/run-syntax-tests      ]   | OK\n[tests/run-syntax-tests      ]   | \n[tests/run-syntax-tests      ]   | UnitTesting: Done.\n[tests/run-syntax-tests      ]   | Wait for tests output......\n[tests/run-syntax-tests      ]   | Start to read output...\n[tests/run-syntax-tests      ]   | Success: 2 syntaxes passed\n[tests/run-syntax-tests      ]   | OK\n[tests/run-syntax-tests      ]   | \n[tests/run-syntax-tests      ]   | UnitTesting: Done.\n[tests/run-syntax-tests      ]   \u2705  Success - Main PACKAGE_FROM_INPUTS=\"\"\nPACKAGE=\"${PACKAGE_FROM_INPUTS:-$PACKAGE}\"\n\npython3 \"$GITHUB_ACTION_PATH/../../scripts/run_tests.py\" \"$PACKAGE\" --syntax-test\n\nif [ \"true\" == \"true\" ]; then\n  python3 \"$GITHUB_ACTION_PATH/../../scripts/run_tests.py\" \"$PACKAGE\" --syntax-compatibility\nfi\n[tests/run-syntax-tests      ]   \u2705  Success - Main SublimeText/UnitTesting/actions/run-syntax-tests@v1\n[tests/run-syntax-tests      ] \u2b50 Run Post SublimeText/UnitTesting/actions/run-syntax-tests@v1\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/SublimeText-UnitTesting-actions-run-syntax-tests@v1/ dst=/var/run/act/actions/SublimeText-UnitTesting-actions-run-syntax-tests@v1/\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/SublimeText-UnitTesting-actions-run-syntax-tests@v1/] user=0 workdir=\n[tests/run-tests             ]   \u274c  Failure - Main PACKAGE_FROM_INPUTS=\"\"\nPACKAGE=\"${PACKAGE_FROM_INPUTS:-$PACKAGE}\"\n\nif [ \"false\" == \"true\" ]; then\n  python3 \"$GITHUB_ACTION_PATH/../../scripts/run_tests.py\" \"$PACKAGE\" --coverage\nelse\n  python3 \"$GITHUB_ACTION_PATH/../../scripts/run_tests.py\" \"$PACKAGE\"\nfi\n[tests/run-syntax-tests      ] context canceled\n[tests/run-syntax-tests      ]   \u2705  Success - Post SublimeText/UnitTesting/actions/run-syntax-tests@v1\n[tests/run-tests             ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/d193910a5bc54266bb8b75f0598b3a45f71b38d78aa688c481cd9b110d37c829/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[tests/run-tests             ]   \u274c  Failure - Main SublimeText/UnitTesting/actions/run-tests@v1\n[tests/run-tests             ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/d193910a5bc54266bb8b75f0598b3a45f71b38d78aa688c481cd9b110d37c829/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[tests/run-syntax-tests      ] \u2b50 Run Post SublimeText/UnitTesting/actions/setup@v1\n[tests/run-syntax-tests      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/SublimeText-UnitTesting-actions-setup@v1/ dst=/var/run/act/actions/SublimeText-UnitTesting-actions-setup@v1/\n[tests/run-syntax-tests      ]   \u274c  Failure - Post SublimeText/UnitTesting/actions/setup@v1\n[tests/run-tests             ] \u2b50 Run Post SublimeText/UnitTesting/actions/run-tests@v1\n[tests/run-tests             ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/SublimeText-UnitTesting-actions-run-tests@v1/ dst=/var/run/act/actions/SublimeText-UnitTesting-actions-run-tests@v1/\n[tests/run-tests             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/SublimeText-UnitTesting-actions-run-tests@v1/] user=0 workdir=\n[tests/run-tests             ]   \u2705  Success - Post SublimeText/UnitTesting/actions/run-tests@v1\n[tests/run-syntax-tests      ] \ud83c\udfc1  Job failed\n[tests/run-tests             ] \u2b50 Run Post SublimeText/UnitTesting/actions/setup@v1\n[tests/run-tests             ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/SublimeText-UnitTesting-actions-setup@v1/ dst=/var/run/act/actions/SublimeText-UnitTesting-actions-setup@v1/\n[tests/run-tests             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/SublimeText-UnitTesting-actions-setup@v1/] user=0 workdir=\n[tests/run-tests             ]   \u2705  Success - Post SublimeText/UnitTesting/actions/setup@v1\n[tests/run-tests             ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}