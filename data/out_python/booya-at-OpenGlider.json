{
    "repository": "booya-at/OpenGlider",
    "clone_url": "https://github.com/booya-at/OpenGlider.git",
    "timestamp": "2023-05-29T14:56:59.105998Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[run all tests/run tests] \ud83d\ude80  Start image=crawlergpt:latest\n[run all tests/run tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[run all tests/run tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[run all tests/run tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[run all tests/run tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/booya-at-OpenGlider] user=0 workdir=\n[run all tests/run tests]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v1\n[run all tests/run tests] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.8]\n[run all tests/run tests] \u2b50 Run Main actions/checkout@v2\n[run all tests/run tests]   \u2705  Success - Main actions/checkout@v2\n[run all tests/run tests] \u2b50 Run Main Set up Python\n[run all tests/run tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v1/ dst=/var/run/act/actions/actions-setup-python@v1/\n[run all tests/run tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v1/] user=0 workdir=\n[run all tests/run tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v1/dist/index.js] user= workdir=\n[run all tests/run tests]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[run all tests/run tests]   \ud83d\udcac  ::debug::isExplicit: \n[run all tests/run tests]   \ud83d\udcac  ::debug::explicit? false\n[run all tests/run tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[run all tests/run tests]   \ud83d\udcac  ::debug::explicit? true\n[run all tests/run tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[run all tests/run tests]   \ud83d\udcac  ::debug::explicit? true\n[run all tests/run tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[run all tests/run tests]   \ud83d\udcac  ::debug::explicit? true\n[run all tests/run tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[run all tests/run tests]   \ud83d\udcac  ::debug::explicit? true\n[run all tests/run tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[run all tests/run tests]   \ud83d\udcac  ::debug::explicit? true\n[run all tests/run tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[run all tests/run tests]   \ud83d\udcac  ::debug::explicit? true\n[run all tests/run tests]   \ud83d\udcac  ::debug::evaluating 6 versions\n[run all tests/run tests]   \ud83d\udcac  ::debug::matched: 3.8.11\n[run all tests/run tests]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[run all tests/run tests]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[run all tests/run tests]   | Successfully setup CPython (3.8.11)\n[run all tests/run tests]   \u2753 add-matcher /run/act/actions/actions-setup-python@v1/.github/python.json\n[run all tests/run tests]   \u2705  Success - Main Set up Python\n[run all tests/run tests]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[run all tests/run tests]   \u2699  ::set-output:: python-version=3.8.11\n[run all tests/run tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[run all tests/run tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[run all tests/run tests] \u2b50 Run Main install requirements\n[run all tests/run tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[run all tests/run tests]   | Processing /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/booya-at-OpenGlider\n[run all tests/run tests]   |   DEPRECATION: A future pip version will change local packages to be built in-place without first copying to a temporary directory. We recommend you use --use-feature=in-tree-build to test your packages with this new behavior before it becomes the default.\n[run all tests/run tests]   |    pip 21.3 will remove support for this functionality. You can find discussion regarding this at https://github.com/pypa/pip/issues/7555.\n[run all tests/run tests]   | Collecting svgwrite\n[run all tests/run tests]   |   Downloading svgwrite-1.4.3-py3-none-any.whl (67 kB)\n[run all tests/run tests]   | Collecting numpy\n[run all tests/run tests]   |   Downloading numpy-1.24.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.3 MB)\n[run all tests/run tests]   | Collecting scipy\n[run all tests/run tests]   |   Downloading scipy-1.10.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (34.5 MB)\n[run all tests/run tests]   | Collecting ezdxf\n[run all tests/run tests]   |   Downloading ezdxf-1.0.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (3.2 MB)\n[run all tests/run tests]   | Collecting ezodf\n[run all tests/run tests]   |   Downloading ezodf-0.3.2.tar.gz (125 kB)\n[run all tests/run tests]   | Collecting lxml\n[run all tests/run tests]   |   Downloading lxml-4.9.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (7.1 MB)\n[run all tests/run tests]   | Collecting pyexcel-ods\n[run all tests/run tests]   |   Downloading pyexcel_ods-0.6.0-py2.py3-none-any.whl (10 kB)\n[run all tests/run tests]   | Collecting meshpy\n[run all tests/run tests]   |   Downloading MeshPy-2022.1.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (458 kB)\n[run all tests/run tests]   | Collecting typing-extensions\n[run all tests/run tests]   |   Downloading typing_extensions-4.6.2-py3-none-any.whl (31 kB)\n[run all tests/run tests]   | Collecting pyparsing>=2.0.1\n[run all tests/run tests]   |   Downloading pyparsing-3.0.9-py3-none-any.whl (98 kB)\n[run all tests/run tests]   | Collecting pytools>=2011.2\n[run all tests/run tests]   |   Downloading pytools-2022.1.14.tar.gz (74 kB)\n[run all tests/run tests]   | Collecting gmsh-interop\n[run all tests/run tests]   |   Downloading gmsh_interop-2021.1.1.tar.gz (24 kB)\n[run all tests/run tests]   | Collecting platformdirs>=2.2.0\n[run all tests/run tests]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[run all tests/run tests]   | Collecting pyexcel-io>=0.6.2\n[run all tests/run tests]   |   Downloading pyexcel_io-0.6.6-py2.py3-none-any.whl (44 kB)\n[run all tests/run tests]   | Collecting odfpy>=1.3.5\n[run all tests/run tests]   |   Downloading odfpy-1.4.1.tar.gz (717 kB)\n[run all tests/run tests]   | Collecting defusedxml\n[run all tests/run tests]   |   Downloading defusedxml-0.7.1-py2.py3-none-any.whl (25 kB)\n[run all tests/run tests]   | Collecting lml>=0.0.4\n[run all tests/run tests]   |   Downloading lml-0.1.0-py2.py3-none-any.whl (10 kB)\n[run all tests/run tests]   | Using legacy 'setup.py install' for OpenGlider, since package 'wheel' is not installed.\n[run all tests/run tests]   | Using legacy 'setup.py install' for ezodf, since package 'wheel' is not installed.\n[run all tests/run tests]   | Using legacy 'setup.py install' for pytools, since package 'wheel' is not installed.\n[run all tests/run tests]   | Using legacy 'setup.py install' for gmsh-interop, since package 'wheel' is not installed.\n[run all tests/run tests]   | Using legacy 'setup.py install' for odfpy, since package 'wheel' is not installed.\n[run all tests/run tests]   | Installing collected packages: typing-extensions, platformdirs, pytools, numpy, lml, defusedxml, pyparsing, pyexcel-io, odfpy, gmsh-interop, svgwrite, scipy, pyexcel-ods, meshpy, lxml, ezodf, ezdxf, OpenGlider\n[run all tests/run tests]   |     Running setup.py install for pytools: started\n[run all tests/run tests]   |     Running setup.py install for pytools: finished with status 'done'\n[run all tests/run tests]   |     Running setup.py install for odfpy: started\n[run all tests/run tests]   |     Running setup.py install for odfpy: finished with status 'done'\n[run all tests/run tests]   |     Running setup.py install for gmsh-interop: started\n[run all tests/run tests]   |     Running setup.py install for gmsh-interop: finished with status 'done'\n[run all tests/run tests]   |     Running setup.py install for ezodf: started\n[run all tests/run tests]   |     Running setup.py install for ezodf: finished with status 'done'\n[run all tests/run tests]   |     Running setup.py install for OpenGlider: started\n[run all tests/run tests]   |     Running setup.py install for OpenGlider: finished with status 'done'\n[run all tests/run tests]   | Successfully installed OpenGlider-0.5 defusedxml-0.7.1 ezdxf-1.0.3 ezodf-0.3.2 gmsh-interop-2021.1.1 lml-0.1.0 lxml-4.9.2 meshpy-2022.1.3 numpy-1.24.3 odfpy-1.4.1 platformdirs-3.5.1 pyexcel-io-0.6.6 pyexcel-ods-0.6.0 pyparsing-3.0.9 pytools-2022.1.14 scipy-1.10.1 svgwrite-1.4.3 typing-extensions-4.6.2\n[run all tests/run tests]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[run all tests/run tests]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.8.11/x64/bin/python -m pip install --upgrade pip' command.\n[run all tests/run tests]   | Requirement already satisfied: meshpy in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (2022.1.3)\n[run all tests/run tests]   | Requirement already satisfied: pytools>=2011.2 in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (from meshpy) (2022.1.14)\n[run all tests/run tests]   | Requirement already satisfied: gmsh-interop in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (from meshpy) (2021.1.1)\n[run all tests/run tests]   | Requirement already satisfied: numpy in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (from meshpy) (1.24.3)\n[run all tests/run tests]   | Requirement already satisfied: platformdirs>=2.2.0 in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (from pytools>=2011.2->meshpy) (3.5.1)\n[run all tests/run tests]   | Requirement already satisfied: typing_extensions>=4.0 in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (from pytools>=2011.2->meshpy) (4.6.2)\n[run all tests/run tests]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[run all tests/run tests]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.8.11/x64/bin/python -m pip install --upgrade pip' command.\n[run all tests/run tests]   \u2705  Success - Main install requirements\n[run all tests/run tests] \u2b50 Run Main test\n[run all tests/run tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[run all tests/run tests]   | test_addition (test_ballooning.TestBallooningBezier) ... ok\n[run all tests/run tests]   | test_multiplication (test_ballooning.TestBallooningBezier) ... ok\n[run all tests/run tests]   | test_fit (test_bezier.TestBezier) ... ok\n[run all tests/run tests]   | test_get_sequence (test_bezier.TestBezier) ... ok\n[run all tests/run tests]   | test_get_value (test_bezier.TestBezier) ... ok\n[run all tests/run tests]   | test_length (test_bezier.TestBezier) ... ok\n[run all tests/run tests]   | test_is_in_list (test_distribution.TestProfile) ... ok\n[run all tests/run tests]   | test_area (test_glider.TestGlider) ... ok\n[run all tests/run tests]   | test_aspectratio (test_glider.TestGlider) ... ok\n[run all tests/run tests]   | test_flatten (test_glider.TestGlider) ... ok\n[run all tests/run tests]   | test_mean_rib (test_glider.TestGlider) ... ok\n[run all tests/run tests]   | test_numpoints (test_glider.TestGlider) ... ok\n[run all tests/run tests]   | test_scale (test_glider.TestGlider) ... ok\n[run all tests/run tests]   | test_span (test_glider.TestGlider) ... ok\n[run all tests/run tests]   | test_create_glider (test_glider_2d.GliderTestCase2D) ... ok\n[run all tests/run tests]   | test_export (test_glider_2d.GliderTestCase2D) ... ok\n[run all tests/run tests]   | test_export_ods (test_glider_2d.GliderTestCase2D) ... ok\n[run all tests/run tests]   | test_fit (test_glider_2d.GliderTestCase2D) ... ok\n[run all tests/run tests]   | test_set_area (test_glider_2d.GliderTestCase2D) ... ok\n[run all tests/run tests]   | test_export_apame (test_glider_exports.TestGlider) ... skipped 'obsolete'\n[run all tests/run tests]   | test_export_dxf (test_glider_exports.TestGlider) ... skipped 'this hangs'\n[run all tests/run tests]   | test_export_glider_json (test_glider_exports.TestGlider) ... ok\n[run all tests/run tests]   | test_export_glider_json2 (test_glider_exports.TestGlider) ... ok\n[run all tests/run tests]   | test_export_glider_ods (test_glider_exports.TestGlider) ... ok\n[run all tests/run tests]   | test_export_json (test_glider_exports.TestGlider) ... skipped 'obsolete'\n[run all tests/run tests]   | test_export_obj (test_glider_exports.TestGlider) ... skipped 'obsolete'\n[run all tests/run tests]   | test_export_plots (test_glider_exports.TestGlider) ... ok\n[run all tests/run tests]   | test_import_export_ods (test_glider_exports.TestGlider) ... skipped 'obsolete'\n[run all tests/run tests]   | test_case_1 (test_lines.TestLines) ... ok\n[run all tests/run tests]   | test_case_2 (test_lines.TestLines) ... ok\n[run all tests/run tests]   | test_case_3 (test_lines.TestLines) ... ok\n[run all tests/run tests]   | test_case_4 (test_lines.TestLines) ... ok\n[run all tests/run tests]   | test_glider_mesh (test_mesh.TestMesh) ... ok\n[run all tests/run tests]   | test_mesh (test_mesh.TestMesh) ... ok\n[run all tests/run tests]   | test_patterns_dribs (test_patterns.TestPlots) ... skipped 'not working'\n[run all tests/run tests]   | test_patterns_panels (test_patterns.TestPlots) ... skipped 'not working'\n[run all tests/run tests]   | test_patterns_ribs (test_patterns.TestPlots) ... skipped 'not working'\n[run all tests/run tests]   | test_add (test_profile.TestProfile) ... ok\n[run all tests/run tests]   | test_area (test_profile.TestProfile) ... ok\n[run all tests/run tests]   | test_camber (test_profile.TestProfile) ... skipped 'whatsoever!'\n[run all tests/run tests]   | test_compute_naca (test_profile.TestProfile) ... ok\n[run all tests/run tests]   | test_contains_point (test_profile.TestProfile) ... ok\n[run all tests/run tests]   | test_export (test_profile.TestProfile) ... ok\n[run all tests/run tests]   | test_mul (test_profile.TestProfile) ... ok\n[run all tests/run tests]   | test_multiplication (test_profile.TestProfile) ... ok\n[run all tests/run tests]   | test_numpoints (test_profile.TestProfile) ... ok\n[run all tests/run tests]   | test_numpoints2 (test_profile.TestProfile) ... skipped 'redundant'\n[run all tests/run tests]   | test_profilepoint (test_profile.TestProfile) ... ok\n[run all tests/run tests]   | test_thickness (test_profile.TestProfile) ... ok\n[run all tests/run tests]   | test_A_selfcheck (test_vector.TestVector2D) ... ok\n[run all tests/run tests]   | test_Cut (test_vector.TestVector2D) ... ok\n[run all tests/run tests]   | test_normvectors (test_vector.TestVector2D) ... ok\n[run all tests/run tests]   | test_shift (test_vector.TestVector2D) ... ok\n[run all tests/run tests]   | test_walk_case_afterend (test_vector.TestVector2D) ... ok\n[run all tests/run tests]   | test_walk_case_before (test_vector.TestVector2D) ... ok\n[run all tests/run tests]   | test_walk_case_within (test_vector.TestVector2D) ... ok\n[run all tests/run tests]   | test_walk_total (test_vector.TestVector2D) ... ok\n[run all tests/run tests]   | test_walk_case_afterend (test_vector.TestVector3D) ... ok\n[run all tests/run tests]   | test_walk_case_before (test_vector.TestVector3D) ... ok\n[run all tests/run tests]   | test_walk_case_within (test_vector.TestVector3D) ... ok\n[run all tests/run tests]   | test_walk_total (test_vector.TestVector3D) ... ok\n[run all tests/run tests]   | test_rotation_scale (test_vector.TestVectorFunctions3D) ... ok\n[run all tests/run tests]   | test_rotation_scale_2 (test_vector.TestVectorFunctions3D) ... ok\n[run all tests/run tests]   | test_align (test_rib.TestRib) ... ok\n[run all tests/run tests]   | test_align_scale (test_rib.TestRib) ... ok\n[run all tests/run tests]   | test_mesh (test_rib.TestRib) ... ok\n[run all tests/run tests]   | test_normvectors (test_rib.TestRib) ... ok\n[run all tests/run tests]   | test_chords (test_shape.GliderTestCase2D) ... ok\n[run all tests/run tests]   | test_A_selfcheck (test_vector.TestVector2D) ... ok\n[run all tests/run tests]   | test_Cut (test_vector.TestVector2D) ... ok\n[run all tests/run tests]   | test_normvectors (test_vector.TestVector2D) ... ok\n[run all tests/run tests]   | test_shift (test_vector.TestVector2D) ... ok\n[run all tests/run tests]   | test_walk_case_afterend (test_vector.TestVector2D) ... ok\n[run all tests/run tests]   | test_walk_case_before (test_vector.TestVector2D) ... ok\n[run all tests/run tests]   | test_walk_case_within (test_vector.TestVector2D) ... ok\n[run all tests/run tests]   | test_walk_total (test_vector.TestVector2D) ... ok\n[run all tests/run tests]   | test_walk_case_afterend (test_vector.TestVector3D) ... ok\n[run all tests/run tests]   | test_walk_case_before (test_vector.TestVector3D) ... ok\n[run all tests/run tests]   | test_walk_case_within (test_vector.TestVector3D) ... ok\n[run all tests/run tests]   | test_walk_total (test_vector.TestVector3D) ... ok\n[run all tests/run tests]   | test_rotation_scale (test_vector.TestVectorFunctions3D) ... ok\n[run all tests/run tests]   | test_rotation_scale_2 (test_vector.TestVectorFunctions3D) ... ok\n[run all tests/run tests]   | \n[run all tests/run tests]   | ----------------------------------------------------------------------\n[run all tests/run tests]   | Ran 82 tests in 38.840s\n[run all tests/run tests]   | \n[run all tests/run tests]   | OK (skipped=10)\n[run all tests/run tests]   | \n[run all tests/run tests]   | \n[run all tests/run tests]   | >>> Running (1/1)\n[run all tests/run tests]   | <class 'openglider.plots.glider.PlotMaker'> <openglider.plots.glider.PlotMaker object at 0x7f39fa06d9a0>\n[run all tests/run tests]   | <openglider.vector.drawing.layout.Layout object at 0x7f39f9c677c0>\n[run all tests/run tests]   | >>> Errors: []\n[run all tests/run tests]   | >>> Failures: []\n[run all tests/run tests]   | return: False\n[run all tests/run tests]   \u2705  Success - Main test\n[run all tests/run tests] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}