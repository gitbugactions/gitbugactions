{
    "repository": "bcwaldon/warlock",
    "clone_url": "https://github.com/bcwaldon/warlock.git",
    "timestamp": "2023-05-29T14:31:15.130391Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/Run unit tests] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Run unit tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Run unit tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Run unit tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Run unit tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bcwaldon-warlock] user=0 workdir=\n[CI/Run unit tests]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[CI/Run unit tests] \ud83e\uddea  Matrix: map[python:3.7]\n[CI/Run unit tests] \u2b50 Run Main Checkout source code\n[CI/Run unit tests]   \u2705  Success - Main Checkout source code\n[CI/Run unit tests] \u2b50 Run Main Set up Python 3.7\n[CI/Run unit tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[CI/Run unit tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[CI/Run unit tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[CI/Run unit tests]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[CI/Run unit tests]   \ud83d\udcac  ::debug::isExplicit: \n[CI/Run unit tests]   \ud83d\udcac  ::debug::explicit? false\n[CI/Run unit tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[CI/Run unit tests]   \ud83d\udcac  ::debug::explicit? true\n[CI/Run unit tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[CI/Run unit tests]   \ud83d\udcac  ::debug::explicit? true\n[CI/Run unit tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[CI/Run unit tests]   \ud83d\udcac  ::debug::explicit? true\n[CI/Run unit tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[CI/Run unit tests]   \ud83d\udcac  ::debug::explicit? true\n[CI/Run unit tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[CI/Run unit tests]   \ud83d\udcac  ::debug::explicit? true\n[CI/Run unit tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[CI/Run unit tests]   \ud83d\udcac  ::debug::explicit? true\n[CI/Run unit tests]   \ud83d\udcac  ::debug::evaluating 6 versions\n[CI/Run unit tests]   \ud83d\udcac  ::debug::matched: 3.7.11\n[CI/Run unit tests]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[CI/Run unit tests]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[CI/Run unit tests]   | Successfully setup CPython (3.7.11)\n[CI/Run unit tests]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[CI/Run unit tests]   \u2705  Success - Main Set up Python 3.7\n[CI/Run unit tests]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[CI/Run unit tests]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[CI/Run unit tests]   \u2699  ::set-output:: python-version=3.7.11\n[CI/Run unit tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[CI/Run unit tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[CI/Run unit tests] \u2b50 Run Main Install dependencies\n[CI/Run unit tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/Run unit tests]   | Collecting tox\n[CI/Run unit tests]   |   Downloading tox-4.5.2-py3-none-any.whl (148 kB)\n[CI/Run unit tests]   | Collecting pyproject-api>=1.5.1\n[CI/Run unit tests]   |   Downloading pyproject_api-1.5.1-py3-none-any.whl (12 kB)\n[CI/Run unit tests]   | Collecting colorama>=0.4.6\n[CI/Run unit tests]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[CI/Run unit tests]   | Collecting filelock>=3.12\n[CI/Run unit tests]   |   Downloading filelock-3.12.0-py3-none-any.whl (10 kB)\n[CI/Run unit tests]   | Collecting packaging>=23.1\n[CI/Run unit tests]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[CI/Run unit tests]   | Collecting cachetools>=5.3\n[CI/Run unit tests]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[CI/Run unit tests]   | Collecting typing-extensions>=4.6.2\n[CI/Run unit tests]   |   Downloading typing_extensions-4.6.2-py3-none-any.whl (31 kB)\n[CI/Run unit tests]   | Collecting tomli>=2.0.1\n[CI/Run unit tests]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[CI/Run unit tests]   | Collecting chardet>=5.1\n[CI/Run unit tests]   |   Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n[CI/Run unit tests]   | Collecting platformdirs>=3.5.1\n[CI/Run unit tests]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[CI/Run unit tests]   | Collecting virtualenv>=20.23\n[CI/Run unit tests]   |   Downloading virtualenv-20.23.0-py3-none-any.whl (3.3 MB)\n[CI/Run unit tests]   | Collecting pluggy>=1\n[CI/Run unit tests]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[CI/Run unit tests]   | Collecting importlib-metadata>=6.6\n[CI/Run unit tests]   |   Downloading importlib_metadata-6.6.0-py3-none-any.whl (22 kB)\n[CI/Run unit tests]   | Collecting zipp>=0.5\n[CI/Run unit tests]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[CI/Run unit tests]   | Collecting distlib<1,>=0.3.6\n[CI/Run unit tests]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[CI/Run unit tests]   | Installing collected packages: zipp, typing-extensions, tomli, platformdirs, packaging, importlib-metadata, filelock, distlib, virtualenv, pyproject-api, pluggy, colorama, chardet, cachetools, tox\n[CI/Run unit tests]   | Successfully installed cachetools-5.3.1 chardet-5.1.0 colorama-0.4.6 distlib-0.3.6 filelock-3.12.0 importlib-metadata-6.6.0 packaging-23.1 platformdirs-3.5.1 pluggy-1.0.0 pyproject-api-1.5.1 tomli-2.0.1 tox-4.5.2 typing-extensions-4.6.2 virtualenv-20.23.0 zipp-3.15.0\n[CI/Run unit tests]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[CI/Run unit tests]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[CI/Run unit tests]   \u2705  Success - Main Install dependencies\n[CI/Run unit tests] \u2b50 Run Main Run unit tests (via tox)\n[CI/Run unit tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/Run unit tests]   | py: install_deps> python -I -m pip install poetry\n[CI/Run unit tests]   | py: freeze> python -m pip freeze --all\n[CI/Run unit tests]   | py: attrs==23.1.0,backports.cached-property==1.0.2,build==0.10.0,CacheControl==0.12.11,certifi==2023.5.7,cffi==1.15.1,charset-normalizer==3.1.0,cleo==2.0.1,crashtest==0.4.1,cryptography==40.0.2,distlib==0.3.6,dulwich==0.21.5,filelock==3.12.0,html5lib==1.1,idna==3.4,importlib-metadata==6.6.0,importlib-resources==5.12.0,installer==0.7.0,jaraco.classes==3.2.3,jeepney==0.8.0,jsonschema==4.17.3,keyring==23.13.1,lockfile==0.12.2,more-itertools==9.1.0,msgpack==1.0.5,packaging==23.1,pexpect==4.8.0,pip==23.1.2,pkginfo==1.9.6,pkgutil_resolve_name==1.3.10,platformdirs==3.5.1,poetry==1.5.0,poetry-core==1.6.0,poetry-plugin-export==1.4.0,ptyprocess==0.7.0,pycparser==2.21,pyproject_hooks==1.0.0,pyrsistent==0.19.3,rapidfuzz==2.15.1,requests==2.31.0,requests-toolbelt==1.0.0,SecretStorage==3.3.3,setuptools==67.7.2,shellingham==1.5.0.post1,six==1.16.0,tomli==2.0.1,tomlkit==0.11.8,trove-classifiers==2023.5.24,typing_extensions==4.6.2,urllib3==1.26.16,virtualenv==20.23.0,webencodings==0.5.1,wheel==0.40.0,zipp==3.15.0\n[CI/Run unit tests]   | py: commands[0]> poetry install -v\n[CI/Run unit tests]   | Using virtualenv: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bcwaldon-warlock/.tox/py\n[CI/Run unit tests]   | Installing dependencies from lock file\n[CI/Run unit tests]   | \n[CI/Run unit tests]   | Finding the necessary packages for the current system\n[CI/Run unit tests]   | \n[CI/Run unit tests]   | Package operations: 10 installs, 8 updates, 0 removals, 1 skipped\n[CI/Run unit tests]   | \n[CI/Run unit tests]   |   \u2022 Updating typing-extensions (4.6.2 -> 4.2.0)\n[CI/Run unit tests]   |   \u2022 Updating zipp (3.15.0 -> 3.8.0)\n[CI/Run unit tests]   |   \u2022 Updating importlib-metadata (6.6.0 -> 4.11.4)\n[CI/Run unit tests]   |   \u2022 Installing pyparsing (3.0.9)\n[CI/Run unit tests]   |   \u2022 Updating attrs (23.1.0 -> 21.4.0)\n[CI/Run unit tests]   |   \u2022 Installing iniconfig (1.1.1)\n[CI/Run unit tests]   |   \u2022 Updating packaging (23.1 -> 21.3)\n[CI/Run unit tests]   |   \u2022 Installing pluggy (1.0.0)\n[CI/Run unit tests]   |   \u2022 Installing py (1.11.0)\n[CI/Run unit tests]   |   \u2022 Installing toml (0.10.2)\n[CI/Run unit tests]   |   \u2022 Installing coverage (6.4.1)\n[CI/Run unit tests]   |   \u2022 Updating importlib-resources (5.12.0 -> 5.8.0)\n[CI/Run unit tests]   |   \u2022 Installing jsonpointer (2.3)\n[CI/Run unit tests]   |   \u2022 Updating pyrsistent (0.19.3 -> 0.18.1)\n[CI/Run unit tests]   |   \u2022 Installing pytest (6.2.5)\n[CI/Run unit tests]   |   \u2022 Installing jsonpatch (1.32)\n[CI/Run unit tests]   |   \u2022 Updating jsonschema (4.17.3 -> 4.6.0)\n[CI/Run unit tests]   |   \u2022 Installing pytest-cov (3.0.0)\n[CI/Run unit tests]   |   \u2022 Installing tomli (2.0.1): Skipped for the following reason: Already installed\n[CI/Run unit tests]   | \n[CI/Run unit tests]   | Installing the current project: warlock (2.0.1)\n[CI/Run unit tests]   | py: commands[1]> poetry run pytest\n[CI/Run unit tests]   | ============================= test session starts ==============================\n[CI/Run unit tests]   | platform linux -- Python 3.7.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0 -- /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bcwaldon-warlock/.tox/py/bin/python\n[CI/Run unit tests]   | cachedir: .tox/py/.pytest_cache\n[CI/Run unit tests]   | rootdir: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bcwaldon-warlock, configfile: pytest.ini, testpaths: tests\n[CI/Run unit tests]   | plugins: cov-3.0.0\n[CI/Run unit tests]   | collecting ... collected 18 items\n[CI/Run unit tests]   | \n[CI/Run unit tests]   | tests/test_core.py::TestCore::test_attr_syntax PASSED                    [  5%]\n[CI/Run unit tests]   | tests/test_core.py::TestCore::test_changes PASSED                        [ 11%]\n[CI/Run unit tests]   | tests/test_core.py::TestCore::test_create_invalid_object PASSED          [ 16%]\n[CI/Run unit tests]   | tests/test_core.py::TestCore::test_deepcopy PASSED                       [ 22%]\n[CI/Run unit tests]   | tests/test_core.py::TestCore::test_dict_syntax PASSED                    [ 27%]\n[CI/Run unit tests]   | tests/test_core.py::TestCore::test_forbidden_methods PASSED              [ 33%]\n[CI/Run unit tests]   | tests/test_core.py::TestCore::test_invalid_operations PASSED             [ 38%]\n[CI/Run unit tests]   | tests/test_core.py::TestCore::test_items PASSED                          [ 44%]\n[CI/Run unit tests]   | tests/test_core.py::TestCore::test_naming PASSED                         [ 50%]\n[CI/Run unit tests]   | tests/test_core.py::TestCore::test_no_mask_arbitrary_properties PASSED   [ 55%]\n[CI/Run unit tests]   | tests/test_core.py::TestCore::test_patch_alter_value PASSED              [ 61%]\n[CI/Run unit tests]   | tests/test_core.py::TestCore::test_patch_drop_attribute PASSED           [ 66%]\n[CI/Run unit tests]   | tests/test_core.py::TestCore::test_patch_multiple_operations PASSED      [ 72%]\n[CI/Run unit tests]   | tests/test_core.py::TestCore::test_patch_no_changes PASSED               [ 77%]\n[CI/Run unit tests]   | tests/test_core.py::TestCore::test_patch_reduce_operations PASSED        [ 83%]\n[CI/Run unit tests]   | tests/test_core.py::TestCore::test_recursive_models PASSED               [ 88%]\n[CI/Run unit tests]   | tests/test_core.py::TestCore::test_resolver PASSED                       [ 94%]\n[CI/Run unit tests]   | tests/test_core.py::TestCore::test_update PASSED                         [100%]\n[CI/Run unit tests]   | \n[CI/Run unit tests]   | ---------- coverage: platform linux, python 3.7.11-final-0 -----------\n[CI/Run unit tests]   | Name                    Stmts   Miss  Cover\n[CI/Run unit tests]   | -------------------------------------------\n[CI/Run unit tests]   | warlock/__init__.py         3      0   100%\n[CI/Run unit tests]   | warlock/core.py            23      0   100%\n[CI/Run unit tests]   | warlock/exceptions.py       5      0   100%\n[CI/Run unit tests]   | warlock/model.py           80      5    94%\n[CI/Run unit tests]   | -------------------------------------------\n[CI/Run unit tests]   | TOTAL                     111      5    95%\n[CI/Run unit tests]   | Coverage HTML written to dir htmlcov\n[CI/Run unit tests]   | \n[CI/Run unit tests]   | \n[CI/Run unit tests]   | ============================== 18 passed in 1.07s ==============================\n[CI/Run unit tests]   |   py: OK (43.24=setup[29.59]+cmd[9.89,3.77] seconds)\n[CI/Run unit tests]   |   congratulations :) (43.45 seconds)\n[CI/Run unit tests]   \u2705  Success - Main Run unit tests (via tox)\n[CI/Run unit tests] \u2b50 Run Post Set up Python 3.7\n[CI/Run unit tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[CI/Run unit tests]   \u2705  Success - Post Set up Python 3.7\n[CI/Run unit tests] \ud83c\udfc1  Job succeeded\n[CI/Upload release artifacts] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Upload release artifacts]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Upload release artifacts]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Upload release artifacts]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Upload release artifacts]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bcwaldon-warlock] user=0 workdir=\n[CI/Upload release artifacts]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[CI/Upload release artifacts]   \u2601  git clone 'https://github.com/pypa/gh-action-pypi-publish' # ref=master\n[CI/Upload release artifacts] \u2b50 Run Main Checkout source code\n[CI/Upload release artifacts]   \u2705  Success - Main Checkout source code\n[CI/Upload release artifacts] \u2b50 Run Main Set up Python\n[CI/Upload release artifacts]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[CI/Upload release artifacts]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[CI/Upload release artifacts]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[CI/Upload release artifacts]   \ud83d\udcac  ::debug::Semantic version spec of 3.10 is 3.10\n[CI/Upload release artifacts]   \ud83d\udcac  ::debug::isExplicit: \n[CI/Upload release artifacts]   \ud83d\udcac  ::debug::explicit? false\n[CI/Upload release artifacts]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[CI/Upload release artifacts]   \ud83d\udcac  ::debug::explicit? true\n[CI/Upload release artifacts]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[CI/Upload release artifacts]   \ud83d\udcac  ::debug::explicit? true\n[CI/Upload release artifacts]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[CI/Upload release artifacts]   \ud83d\udcac  ::debug::explicit? true\n[CI/Upload release artifacts]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[CI/Upload release artifacts]   \ud83d\udcac  ::debug::explicit? true\n[CI/Upload release artifacts]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[CI/Upload release artifacts]   \ud83d\udcac  ::debug::explicit? true\n[CI/Upload release artifacts]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[CI/Upload release artifacts]   \ud83d\udcac  ::debug::explicit? true\n[CI/Upload release artifacts]   \ud83d\udcac  ::debug::evaluating 6 versions\n[CI/Upload release artifacts]   \ud83d\udcac  ::debug::match not found\n[CI/Upload release artifacts]   | Version 3.10 was not found in the local cache\n[CI/Upload release artifacts]   \u2757  ::error::API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[CI/Upload release artifacts]   \u274c  Failure - Main Set up Python\n[CI/Upload release artifacts] exitcode '1': failure\n[CI/Upload release artifacts] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Upload release artifacts' failed\n"
}