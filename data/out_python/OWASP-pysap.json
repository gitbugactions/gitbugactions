{
    "repository": "OWASP/pysap",
    "clone_url": "https://github.com/OWASP/pysap.git",
    "timestamp": "2023-05-29T15:21:28.523423Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Build and test pysap/Check code health                     ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build and test pysap/Run unit tests and build wheel-1      ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build and test pysap/Build documentation and source package] \ud83d\ude80  Start image=crawlergpt:latest\n[Build and test pysap/Run unit tests and build wheel-2      ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build and test pysap/Build documentation and source package]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build and test pysap/Check code health                     ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build and test pysap/Build documentation and source package]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and test pysap/Check code health                     ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and test pysap/Build documentation and source package]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and test pysap/Check code health                     ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and test pysap/Check code health                     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/OWASP-pysap] user=0 workdir=\n[Build and test pysap/Build documentation and source package]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/OWASP-pysap] user=0 workdir=\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/OWASP-pysap] user=0 workdir=\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/OWASP-pysap] user=0 workdir=\n[Build and test pysap/Check code health                     ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[Build and test pysap/Run unit tests and build wheel-2      ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[Build and test pysap/Run unit tests and build wheel-1      ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[Build and test pysap/Build documentation and source package]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[Build and test pysap/Check code health                     ] \ud83e\uddea  Matrix: map[python-version:2.7]\n[Build and test pysap/Check code health                     ] \u2b50 Run Main Checkout pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v2\n[Build and test pysap/Check code health                     ]   \u2705  Success - Main Checkout pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v2\n[Build and test pysap/Build documentation and source package]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v2\n[Build and test pysap/Check code health                     ] \u2b50 Run Main Setup Python 2.7\n[Build and test pysap/Run unit tests and build wheel-2      ] \ud83e\uddea  Matrix: map[experimental:true os:ubuntu-latest python-version:2.7]\n[Build and test pysap/Run unit tests and build wheel-2      ] \u2b50 Run Main Checkout pysap\n[Build and test pysap/Run unit tests and build wheel-1      ] \ud83e\uddea  Matrix: map[experimental:false os:ubuntu-latest python-version:2.7]\n[Build and test pysap/Check code health                     ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[Build and test pysap/Run unit tests and build wheel-1      ] \u2b50 Run Main Checkout pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   \u2705  Success - Main Checkout pysap\n[Build and test pysap/Build documentation and source package] \ud83e\uddea  Matrix: map[python-version:2.7]\n[Build and test pysap/Build documentation and source package] \u2b50 Run Main Checkout pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   \u2705  Success - Main Checkout pysap\n[Build and test pysap/Check code health                     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[Build and test pysap/Build documentation and source package]   \u2705  Success - Main Checkout pysap\n[Build and test pysap/Run unit tests and build wheel-2      ] \u2b50 Run Main Setup Python 2.7\n[Build and test pysap/Run unit tests and build wheel-1      ] \u2b50 Run Main Setup Python 2.7\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[Build and test pysap/Build documentation and source package] \u2b50 Run Main Setup Python 2.7\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[Build and test pysap/Build documentation and source package]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[Build and test pysap/Build documentation and source package]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[Build and test pysap/Check code health                     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[Build and test pysap/Build documentation and source package]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[Build and test pysap/Check code health                     ]   \ud83d\udcac  ::debug::Semantic version spec of 2.7 is 2.7\n[Build and test pysap/Check code health                     ]   \ud83d\udcac  ::debug::isExplicit: \n[Build and test pysap/Check code health                     ]   \ud83d\udcac  ::debug::explicit? false\n[Build and test pysap/Check code health                     ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Build and test pysap/Check code health                     ]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Check code health                     ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Build and test pysap/Check code health                     ]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Check code health                     ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Build and test pysap/Check code health                     ]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Check code health                     ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Build and test pysap/Check code health                     ]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Check code health                     ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Build and test pysap/Check code health                     ]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Check code health                     ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Build and test pysap/Check code health                     ]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Check code health                     ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Build and test pysap/Check code health                     ]   \ud83d\udcac  ::debug::matched: 2.7.18\n[Build and test pysap/Check code health                     ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/2.7.18/x64\n[Build and test pysap/Check code health                     ]   \ud83d\udcac  ::debug::Found tool in cache Python 2.7.18 x64\n[Build and test pysap/Check code health                     ]   | Successfully setup CPython (2.7.18)\n[Build and test pysap/Check code health                     ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[Build and test pysap/Check code health                     ]   \u2705  Success - Main Setup Python 2.7\n[Build and test pysap/Check code health                     ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/2.7.18/x64\n[Build and test pysap/Check code health                     ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/2.7.18/x64/lib\n[Build and test pysap/Check code health                     ]   \u2699  ::set-output:: python-version=2.7.18\n[Build and test pysap/Check code health                     ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64\n[Build and test pysap/Check code health                     ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64/bin\n[Build and test pysap/Check code health                     ] \u2b50 Run Main Install dependencies\n[Build and test pysap/Check code health                     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::Semantic version spec of 2.7 is 2.7\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::isExplicit: \n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::explicit? false\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::matched: 2.7.18\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/2.7.18/x64\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::Found tool in cache Python 2.7.18 x64\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Successfully setup CPython (2.7.18)\n[Build and test pysap/Run unit tests and build wheel-2      ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[Build and test pysap/Run unit tests and build wheel-2      ]   \u2705  Success - Main Setup Python 2.7\n[Build and test pysap/Build documentation and source package]   \ud83d\udcac  ::debug::Semantic version spec of 2.7 is 2.7\n[Build and test pysap/Build documentation and source package]   \ud83d\udcac  ::debug::isExplicit: \n[Build and test pysap/Build documentation and source package]   \ud83d\udcac  ::debug::explicit? false\n[Build and test pysap/Build documentation and source package]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Build and test pysap/Build documentation and source package]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Build documentation and source package]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Build and test pysap/Build documentation and source package]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Build documentation and source package]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Build and test pysap/Build documentation and source package]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Build documentation and source package]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Build and test pysap/Build documentation and source package]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Build documentation and source package]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Build and test pysap/Build documentation and source package]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Build documentation and source package]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Build and test pysap/Build documentation and source package]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Build documentation and source package]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Build and test pysap/Build documentation and source package]   \ud83d\udcac  ::debug::matched: 2.7.18\n[Build and test pysap/Build documentation and source package]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/2.7.18/x64\n[Build and test pysap/Build documentation and source package]   \ud83d\udcac  ::debug::Found tool in cache Python 2.7.18 x64\n[Build and test pysap/Build documentation and source package]   | Successfully setup CPython (2.7.18)\n[Build and test pysap/Build documentation and source package]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[Build and test pysap/Build documentation and source package]   \u2705  Success - Main Setup Python 2.7\n[Build and test pysap/Check code health                     ]   | DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.\n[Build and test pysap/Check code health                     ]   | Requirement already up-to-date: pip in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (20.3.4)\n[Build and test pysap/Check code health                     ]   | Collecting wheel\n[Build and test pysap/Check code health                     ]   |   Downloading wheel-0.37.1-py2.py3-none-any.whl (35 kB)\n[Build and test pysap/Check code health                     ]   | Installing collected packages: wheel\n[Build and test pysap/Build documentation and source package]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/2.7.18/x64/lib\n[Build and test pysap/Build documentation and source package]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/2.7.18/x64\n[Build and test pysap/Run unit tests and build wheel-2      ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/2.7.18/x64\n[Build and test pysap/Run unit tests and build wheel-2      ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/2.7.18/x64/lib\n[Build and test pysap/Check code health                     ]   | Successfully installed wheel-0.37.1\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::Semantic version spec of 2.7 is 2.7\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::isExplicit: \n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::explicit? false\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::explicit? true\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::matched: 2.7.18\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/2.7.18/x64\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::Found tool in cache Python 2.7.18 x64\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Successfully setup CPython (2.7.18)\n[Build and test pysap/Run unit tests and build wheel-1      ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[Build and test pysap/Run unit tests and build wheel-1      ]   \u2705  Success - Main Setup Python 2.7\n[Build and test pysap/Check code health                     ]   | DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.\n[Build and test pysap/Run unit tests and build wheel-1      ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/2.7.18/x64\n[Build and test pysap/Run unit tests and build wheel-1      ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/2.7.18/x64/lib\n[Build and test pysap/Build documentation and source package]   \u2699  ::set-output:: python-version=2.7.18\n[Build and test pysap/Run unit tests and build wheel-2      ]   \u2699  ::set-output:: python-version=2.7.18\n[Build and test pysap/Check code health                     ]   | Collecting flake8\n[Build and test pysap/Check code health                     ]   |   Downloading flake8-3.9.2-py2.py3-none-any.whl (73 kB)\n[Build and test pysap/Check code health                     ]   | Collecting six\n[Build and test pysap/Check code health                     ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[Build and test pysap/Check code health                     ]   | Collecting typing; python_version < \"3.5\"\n[Build and test pysap/Check code health                     ]   |   Downloading typing-3.10.0.0-py2-none-any.whl (26 kB)\n[Build and test pysap/Check code health                     ]   | Collecting configparser; python_version < \"3.2\"\n[Build and test pysap/Check code health                     ]   |   Downloading configparser-4.0.2-py2.py3-none-any.whl (22 kB)\n[Build and test pysap/Check code health                     ]   | Collecting functools32; python_version < \"3.2\"\n[Build and test pysap/Check code health                     ]   |   Downloading functools32-3.2.3-2.tar.gz (31 kB)\n[Build and test pysap/Run unit tests and build wheel-2      ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64\n[Build and test pysap/Run unit tests and build wheel-2      ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64/bin\n[Build and test pysap/Build documentation and source package]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64\n[Build and test pysap/Build documentation and source package]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64/bin\n[Build and test pysap/Check code health                     ]   | Collecting importlib-metadata; python_version < \"3.8\"\n[Build and test pysap/Check code health                     ]   |   Downloading importlib_metadata-2.1.3-py2.py3-none-any.whl (10 kB)\n[Build and test pysap/Check code health                     ]   | Collecting enum34; python_version < \"3.4\"\n[Build and test pysap/Check code health                     ]   |   Downloading enum34-1.1.10-py2-none-any.whl (11 kB)\n[Build and test pysap/Build documentation and source package] \u2b50 Run Main Install Linux dependencies\n[Build and test pysap/Check code health                     ]   | Collecting pyflakes<2.4.0,>=2.3.0\n[Build and test pysap/Check code health                     ]   |   Downloading pyflakes-2.3.1-py2.py3-none-any.whl (68 kB)\n[Build and test pysap/Check code health                     ]   | Collecting mccabe<0.7.0,>=0.6.0\n[Build and test pysap/Check code health                     ]   |   Downloading mccabe-0.6.1-py2.py3-none-any.whl (8.6 kB)\n[Build and test pysap/Check code health                     ]   | Collecting pycodestyle<2.8.0,>=2.7.0\n[Build and test pysap/Check code health                     ]   |   Downloading pycodestyle-2.7.0-py2.py3-none-any.whl (41 kB)\n[Build and test pysap/Check code health                     ]   | Collecting contextlib2; python_version < \"3\"\n[Build and test pysap/Check code health                     ]   |   Downloading contextlib2-0.6.0.post1-py2.py3-none-any.whl (9.8 kB)\n[Build and test pysap/Run unit tests and build wheel-2      ] \u2b50 Run Main Install Python dependencies\n[Build and test pysap/Run unit tests and build wheel-1      ]   \u2699  ::set-output:: python-version=2.7.18\n[Build and test pysap/Check code health                     ]   | Collecting zipp>=0.5\n[Build and test pysap/Check code health                     ]   |   Downloading zipp-1.2.0-py2.py3-none-any.whl (4.8 kB)\n[Build and test pysap/Check code health                     ]   | Collecting pathlib2; python_version < \"3\"\n[Build and test pysap/Check code health                     ]   |   Downloading pathlib2-2.3.7.post1-py2.py3-none-any.whl (18 kB)\n[Build and test pysap/Check code health                     ]   | Collecting scandir; python_version < \"3.5\"\n[Build and test pysap/Check code health                     ]   |   Downloading scandir-1.10.0.tar.gz (33 kB)\n[Build and test pysap/Check code health                     ]   | Building wheels for collected packages: functools32, scandir\n[Build and test pysap/Check code health                     ]   |   Building wheel for functools32 (setup.py): started\n[Build and test pysap/Check code health                     ]   |   Building wheel for functools32 (setup.py): finished with status 'done'\n[Build and test pysap/Check code health                     ]   |   Created wheel for functools32: filename=functools32-3.2.3.post2-py2-none-any.whl size=14554 sha256=0c95977533995f1eeeb7bd6fcdc6755e807521597242bc519307fb1fc78fbacb\n[Build and test pysap/Check code health                     ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/c2/ea/a3/25af52265fad6418a74df0b8d9ca8b89e0b3735dbd4d0d3794\n[Build and test pysap/Check code health                     ]   |   Building wheel for scandir (setup.py): started\n[Build and test pysap/Run unit tests and build wheel-1      ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64\n[Build and test pysap/Run unit tests and build wheel-1      ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64/bin\n[Build and test pysap/Build documentation and source package]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Build and test pysap/Check code health                     ]   |   Building wheel for scandir (setup.py): finished with status 'done'\n[Build and test pysap/Check code health                     ]   |   Created wheel for scandir: filename=scandir-1.10.0-cp27-cp27mu-linux_x86_64.whl size=44961 sha256=2884fb475b676c0979083a3b6b258da50e91af4cf372b35efecf116ad13d66a6\n[Build and test pysap/Check code health                     ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/58/2c/26/52406f7d1f19bcc47a6fbd1037a5f293492f5cf1d58c539edb\n[Build and test pysap/Check code health                     ]   | Successfully built functools32 scandir\n[Build and test pysap/Run unit tests and build wheel-1      ] \u2b50 Run Main Install Python dependencies\n[Build and test pysap/Check code health                     ]   | Installing collected packages: typing, configparser, functools32, contextlib2, zipp, scandir, six, pathlib2, importlib-metadata, enum34, pyflakes, mccabe, pycodestyle, flake8\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Build and test pysap/Check code health                     ]   | Successfully installed configparser-4.0.2 contextlib2-0.6.0.post1 enum34-1.1.10 flake8-3.9.2 functools32-3.2.3.post2 importlib-metadata-2.1.3 mccabe-0.6.1 pathlib2-2.3.7.post1 pycodestyle-2.7.0 pyflakes-2.3.1 scandir-1.10.0 six-1.16.0 typing-3.10.0.0 zipp-1.2.0\n[Build and test pysap/Check code health                     ]   | DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.\n[Build and test pysap/Check code health                     ]   | Collecting scapy==2.4.4\n[Build and test pysap/Check code health                     ]   |   Downloading scapy-2.4.4.tar.gz (1.0 MB)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Build and test pysap/Build documentation and source package]   | Reading package lists...\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Requirement already up-to-date: pip in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (20.3.4)\n[Build and test pysap/Build documentation and source package]   | Building dependency tree...\n[Build and test pysap/Build documentation and source package]   | Reading state information...\n[Build and test pysap/Build documentation and source package]   | The following additional packages will be installed:\n[Build and test pysap/Build documentation and source package]   |   dvisvgm fonts-droid-fallback fonts-lmodern fonts-noto-mono fonts-urw-base35\n[Build and test pysap/Build documentation and source package]   |   libgs9 libgs9-common libharfbuzz-icu0 libijs-0.35 libjbig2dec0 libkpathsea6\n[Build and test pysap/Build documentation and source package]   |   libopenjp2-7 libptexenc1 libsynctex2 libteckit0 libtexlua53 libtexluajit2\n[Build and test pysap/Build documentation and source package]   |   libwoff1 libzzip-0-13 lmodern pandoc-data poppler-data t1utils texlive-base\n[Build and test pysap/Build documentation and source package]   |   texlive-binaries xfonts-encodings xfonts-utils\n[Build and test pysap/Build documentation and source package]   | Suggested packages:\n[Build and test pysap/Build documentation and source package]   |   fonts-noto fonts-freefont-otf | fonts-freefont-ttf fonts-texgyre\n[Build and test pysap/Build documentation and source package]   |   ghostscript-x texlive-latex-recommended texlive-xetex texlive-luatex\n[Build and test pysap/Build documentation and source package]   |   pandoc-citeproc texlive-latex-extra context wkhtmltopdf librsvg2-bin groff\n[Build and test pysap/Build documentation and source package]   |   ghc nodejs python libjs-mathjax node-katex poppler-utils\n[Build and test pysap/Build documentation and source package]   |   fonts-japanese-mincho | fonts-ipafont-mincho fonts-japanese-gothic\n[Build and test pysap/Build documentation and source package]   |   | fonts-ipafont-gothic fonts-arphic-ukai fonts-arphic-uming fonts-nanum\n[Build and test pysap/Build documentation and source package]   |   perl-tk xpdf | pdf-viewer xzdec texlive-latex-base-doc\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Collecting wheel\n[Build and test pysap/Run unit tests and build wheel-2      ]   |   Downloading wheel-0.37.1-py2.py3-none-any.whl (35 kB)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Installing collected packages: wheel\n[Build and test pysap/Build documentation and source package]   | The following NEW packages will be installed:\n[Build and test pysap/Build documentation and source package]   |   dvisvgm fonts-droid-fallback fonts-lmodern fonts-noto-mono fonts-urw-base35\n[Build and test pysap/Build documentation and source package]   |   ghostscript libgs9 libgs9-common libharfbuzz-icu0 libijs-0.35 libjbig2dec0\n[Build and test pysap/Build documentation and source package]   |   libkpathsea6 libopenjp2-7 libptexenc1 libsynctex2 libteckit0 libtexlua53\n[Build and test pysap/Build documentation and source package]   |   libtexluajit2 libwoff1 libzzip-0-13 lmodern pandoc pandoc-data poppler-data\n[Build and test pysap/Build documentation and source package]   |   t1utils texlive-base texlive-binaries texlive-latex-base xfonts-encodings\n[Build and test pysap/Build documentation and source package]   |   xfonts-utils\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Successfully installed wheel-0.37.1\n[Build and test pysap/Build documentation and source package]   | 0 upgraded, 30 newly installed, 0 to remove and 20 not upgraded.\n[Build and test pysap/Build documentation and source package]   | Need to get 74.8 MB of archives.\n[Build and test pysap/Build documentation and source package]   | After this operation, 352 MB of additional disk space will be used.\n[Build and test pysap/Build documentation and source package]   | Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 fonts-droid-fallback all 1:6.0.1r16-1.1 [1805 kB]\n[Build and test pysap/Check code health                     ]   | Collecting cryptography==2.9.2\n[Build and test pysap/Check code health                     ]   |   Downloading cryptography-2.9.2-cp27-cp27mu-manylinux2010_x86_64.whl (2.7 MB)\n[Build and test pysap/Check code health                     ]   | Collecting ipaddress; python_version < \"3\"\n[Build and test pysap/Check code health                     ]   |   Downloading ipaddress-1.0.23-py2.py3-none-any.whl (18 kB)\n[Build and test pysap/Check code health                     ]   | Requirement already satisfied: six>=1.4.1 in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from cryptography==2.9.2->-r requirements.txt (line 2)) (1.16.0)\n[Build and test pysap/Build documentation and source package]   | Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 poppler-data all 0.4.9-2 [1475 kB]\n[Build and test pysap/Build documentation and source package]   | Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 fonts-urw-base35 all 20170801.1-3 [6333 kB]\n[Build and test pysap/Check code health                     ]   | Collecting cffi!=1.11.3,>=1.8\n[Build and test pysap/Check code health                     ]   |   Downloading cffi-1.15.1-cp27-cp27mu-manylinux1_x86_64.whl (390 kB)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.\n[Build and test pysap/Check code health                     ]   | Requirement already satisfied: enum34; python_version < \"3\" in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from cryptography==2.9.2->-r requirements.txt (line 2)) (1.1.10)\n[Build and test pysap/Build documentation and source package]   | Ign:4 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgs9-common all 9.50~dfsg-5ubuntu4.2\n[Build and test pysap/Check code health                     ]   | Collecting pycparser\n[Build and test pysap/Build documentation and source package]   | Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 libijs-0.35 amd64 0.35-15 [15.7 kB]\n[Build and test pysap/Build documentation and source package]   | Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 libjbig2dec0 amd64 0.18-1ubuntu1 [60.0 kB]\n[Build and test pysap/Check code health                     ]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[Build and test pysap/Build documentation and source package]   | Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libopenjp2-7 amd64 2.3.1-1ubuntu4.20.04.1 [141 kB]\n[Build and test pysap/Build documentation and source package]   | Ign:8 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgs9 amd64 9.50~dfsg-5ubuntu4.2\n[Build and test pysap/Build documentation and source package]   | Get:9 http://archive.ubuntu.com/ubuntu focal/main amd64 libkpathsea6 amd64 2019.20190605.51237-3build2 [57.0 kB]\n[Build and test pysap/Build documentation and source package]   | Get:10 http://archive.ubuntu.com/ubuntu focal/main amd64 libwoff1 amd64 1.0.2-1build2 [42.0 kB]\n[Build and test pysap/Build documentation and source package]   | Get:11 http://archive.ubuntu.com/ubuntu focal/universe amd64 dvisvgm amd64 2.8.1-1build1 [1048 kB]\n[Build and test pysap/Check code health                     ]   | Building wheels for collected packages: scapy\n[Build and test pysap/Check code health                     ]   |   Building wheel for scapy (setup.py): started\n[Build and test pysap/Build documentation and source package]   | Ign:4 http://security.ubuntu.com/ubuntu focal-updates/main amd64 libgs9-common all 9.50~dfsg-5ubuntu4.2\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Collecting scapy==2.4.4\n[Build and test pysap/Build documentation and source package]   | Err:8 http://security.ubuntu.com/ubuntu focal-updates/main amd64 libgs9 amd64 9.50~dfsg-5ubuntu4.2\n[Build and test pysap/Build documentation and source package]   |   404  Not Found [IP: 91.189.91.39 80]\n[Build and test pysap/Build documentation and source package]   | Get:12 http://archive.ubuntu.com/ubuntu focal/universe amd64 fonts-lmodern all 2.004.5-6 [4532 kB]\n[Build and test pysap/Run unit tests and build wheel-2      ]   |   Downloading scapy-2.4.4.tar.gz (1.0 MB)\n[Build and test pysap/Build documentation and source package]   | Err:4 http://security.ubuntu.com/ubuntu focal-updates/main amd64 libgs9-common all 9.50~dfsg-5ubuntu4.2\n[Build and test pysap/Build documentation and source package]   |   404  Not Found [IP: 91.189.91.39 80]\n[Build and test pysap/Check code health                     ]   |   Building wheel for scapy (setup.py): finished with status 'done'\n[Build and test pysap/Check code health                     ]   |   Created wheel for scapy: filename=scapy-2.4.4-py2.py3-none-any.whl size=1189183 sha256=167b21ee2288d8b523f0c52634afce2f4c5fccc5c6b6e649d9124b79470db142\n[Build and test pysap/Check code health                     ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/54/7f/78/f171363d7702a91ddabc3a1503e2fd43618fa0f9f55e401720\n[Build and test pysap/Check code health                     ]   | Successfully built scapy\n[Build and test pysap/Check code health                     ]   | Installing collected packages: scapy, ipaddress, pycparser, cffi, cryptography\n[Build and test pysap/Build documentation and source package]   | Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 fonts-noto-mono all 20200323-1build1~ubuntu20.04.1 [80.6 kB]\n[Build and test pysap/Build documentation and source package]   | Ign:14 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 ghostscript amd64 9.50~dfsg-5ubuntu4.2\n[Build and test pysap/Build documentation and source package]   | Get:15 http://archive.ubuntu.com/ubuntu focal/main amd64 libharfbuzz-icu0 amd64 2.6.4-1ubuntu4 [5580 B]\n[Build and test pysap/Build documentation and source package]   | Get:16 http://archive.ubuntu.com/ubuntu focal/main amd64 libptexenc1 amd64 2019.20190605.51237-3build2 [35.5 kB]\n[Build and test pysap/Build documentation and source package]   | Get:17 http://archive.ubuntu.com/ubuntu focal/main amd64 libsynctex2 amd64 2019.20190605.51237-3build2 [55.0 kB]\n[Build and test pysap/Build documentation and source package]   | Err:14 http://security.ubuntu.com/ubuntu focal-updates/main amd64 ghostscript amd64 9.50~dfsg-5ubuntu4.2\n[Build and test pysap/Build documentation and source package]   |   404  Not Found [IP: 91.189.91.39 80]\n[Build and test pysap/Build documentation and source package]   | Get:18 http://archive.ubuntu.com/ubuntu focal/universe amd64 libteckit0 amd64 2.5.8+ds2-5ubuntu2 [320 kB]\n[Build and test pysap/Build documentation and source package]   | Get:19 http://archive.ubuntu.com/ubuntu focal/main amd64 libtexlua53 amd64 2019.20190605.51237-3build2 [105 kB]\n[Build and test pysap/Build documentation and source package]   | Get:20 http://archive.ubuntu.com/ubuntu focal/main amd64 libtexluajit2 amd64 2019.20190605.51237-3build2 [235 kB]\n[Build and test pysap/Build documentation and source package]   | Get:21 http://archive.ubuntu.com/ubuntu focal/universe amd64 libzzip-0-13 amd64 0.13.62-3.2ubuntu1 [26.2 kB]\n[Build and test pysap/Build documentation and source package]   | Get:22 http://archive.ubuntu.com/ubuntu focal/main amd64 xfonts-encodings all 1:1.0.5-0ubuntu1 [573 kB]\n[Build and test pysap/Build documentation and source package]   | Get:23 http://archive.ubuntu.com/ubuntu focal/main amd64 xfonts-utils amd64 1:7.7+6 [91.5 kB]\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Collecting cryptography==2.9.2\n[Build and test pysap/Run unit tests and build wheel-2      ]   |   Downloading cryptography-2.9.2-cp27-cp27mu-manylinux2010_x86_64.whl (2.7 MB)\n[Build and test pysap/Build documentation and source package]   | Get:24 http://archive.ubuntu.com/ubuntu focal/universe amd64 lmodern all 2.004.5-6 [9474 kB]\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Collecting ipaddress; python_version < \"3\"\n[Build and test pysap/Run unit tests and build wheel-2      ]   |   Downloading ipaddress-1.0.23-py2.py3-none-any.whl (18 kB)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Collecting six>=1.4.1\n[Build and test pysap/Run unit tests and build wheel-2      ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Collecting cffi!=1.11.3,>=1.8\n[Build and test pysap/Run unit tests and build wheel-2      ]   |   Downloading cffi-1.15.1-cp27-cp27mu-manylinux1_x86_64.whl (390 kB)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Collecting enum34; python_version < \"3\"\n[Build and test pysap/Run unit tests and build wheel-2      ]   |   Downloading enum34-1.1.10-py2-none-any.whl (11 kB)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Collecting pycparser\n[Build and test pysap/Run unit tests and build wheel-2      ]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[Build and test pysap/Build documentation and source package]   | Get:25 http://archive.ubuntu.com/ubuntu focal/universe amd64 pandoc-data all 2.5-3build2 [76.0 kB]\n[Build and test pysap/Build documentation and source package]   | Get:26 http://archive.ubuntu.com/ubuntu focal/universe amd64 pandoc amd64 2.5-3build2 [15.4 MB]\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Building wheels for collected packages: scapy\n[Build and test pysap/Run unit tests and build wheel-2      ]   |   Building wheel for scapy (setup.py): started\n[Build and test pysap/Build documentation and source package]   | Get:27 http://archive.ubuntu.com/ubuntu focal/main amd64 t1utils amd64 1.41-3 [56.1 kB]\n[Build and test pysap/Build documentation and source package]   | Get:28 http://archive.ubuntu.com/ubuntu focal/universe amd64 texlive-binaries amd64 2019.20190605.51237-3build2 [8041 kB]\n[Build and test pysap/Run unit tests and build wheel-2      ]   |   Building wheel for scapy (setup.py): finished with status 'done'\n[Build and test pysap/Run unit tests and build wheel-2      ]   |   Created wheel for scapy: filename=scapy-2.4.4-py2.py3-none-any.whl size=1189183 sha256=76bc24813c6482d079db3de11529d8b9ea95d6a3f886e8e82511ea73849c4765\n[Build and test pysap/Run unit tests and build wheel-2      ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/54/7f/78/f171363d7702a91ddabc3a1503e2fd43618fa0f9f55e401720\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Successfully built scapy\n[Build and test pysap/Build documentation and source package]   | Get:29 http://archive.ubuntu.com/ubuntu focal/universe amd64 texlive-base all 2019.20200218-1 [20.8 MB]\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Installing collected packages: scapy, ipaddress, six, pycparser, cffi, enum34, cryptography\n[Build and test pysap/Check code health                     ]   | Successfully installed cffi-1.15.1 cryptography-2.9.2 ipaddress-1.0.23 pycparser-2.21 scapy-2.4.4\n[Build and test pysap/Check code health                     ]   \u2705  Success - Main Install dependencies\n[Build and test pysap/Check code health                     ] \u2b50 Run Main Run flake8 tests\n[Build and test pysap/Build documentation and source package]   | Get:30 http://archive.ubuntu.com/ubuntu focal/universe amd64 texlive-latex-base all 2019.20200218-1 [990 kB]\n[Build and test pysap/Check code health                     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Build and test pysap/Build documentation and source package]   | Fetched 71.9 MB in 8s (8837 kB/s)\n[Build and test pysap/Build documentation and source package]   | E: Failed to fetch http://security.ubuntu.com/ubuntu/pool/main/g/ghostscript/libgs9-common_9.50~dfsg-5ubuntu4.2_all.deb  404  Not Found [IP: 91.189.91.39 80]\n[Build and test pysap/Build documentation and source package]   | E: Failed to fetch http://security.ubuntu.com/ubuntu/pool/main/g/ghostscript/libgs9_9.50~dfsg-5ubuntu4.2_amd64.deb  404  Not Found [IP: 91.189.91.39 80]\n[Build and test pysap/Build documentation and source package]   | E: Failed to fetch http://security.ubuntu.com/ubuntu/pool/main/g/ghostscript/ghostscript_9.50~dfsg-5ubuntu4.2_amd64.deb  404  Not Found [IP: 91.189.91.39 80]\n[Build and test pysap/Build documentation and source package]   | E: Unable to fetch some archives, maybe run apt-get update or try with --fix-missing?\n[Build and test pysap/Build documentation and source package]   \u274c  Failure - Main Install Linux dependencies\n[Build and test pysap/Build documentation and source package] exitcode '100': failure\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Successfully installed cffi-1.15.1 cryptography-2.9.2 enum34-1.1.10 ipaddress-1.0.23 pycparser-2.21 scapy-2.4.4 six-1.16.0\n[Build and test pysap/Run unit tests and build wheel-2      ]   \u2705  Success - Main Install Python dependencies\n[Build and test pysap/Run unit tests and build wheel-2      ] \u2b50 Run Main Run unit tests\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[Build and test pysap/Run unit tests and build wheel-1      ]   | DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.\n[Build and test pysap/Run unit tests and build wheel-2      ]   | running test\n[Build and test pysap/Run unit tests and build wheel-2      ]   | running egg_info\n[Build and test pysap/Run unit tests and build wheel-2      ]   | creating pysap.egg-info\n[Build and test pysap/Run unit tests and build wheel-2      ]   | writing requirements to pysap.egg-info/requires.txt\n[Build and test pysap/Run unit tests and build wheel-2      ]   | writing pysap.egg-info/PKG-INFO\n[Build and test pysap/Run unit tests and build wheel-2      ]   | writing top-level names to pysap.egg-info/top_level.txt\n[Build and test pysap/Run unit tests and build wheel-2      ]   | writing dependency_links to pysap.egg-info/dependency_links.txt\n[Build and test pysap/Run unit tests and build wheel-2      ]   | writing manifest file 'pysap.egg-info/SOURCES.txt'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | reading manifest file 'pysap.egg-info/SOURCES.txt'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | reading manifest template 'MANIFEST.in'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | writing manifest file 'pysap.egg-info/SOURCES.txt'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | running build_ext\n[Build and test pysap/Run unit tests and build wheel-2      ]   | building 'pysapcompress' extension\n[Build and test pysap/Run unit tests and build wheel-2      ]   | creating build\n[Build and test pysap/Run unit tests and build wheel-2      ]   | creating build/temp.linux-x86_64-2.7\n[Build and test pysap/Run unit tests and build wheel-2      ]   | creating build/temp.linux-x86_64-2.7/pysapcompress\n[Build and test pysap/Run unit tests and build wheel-2      ]   | gcc -pthread -fno-strict-aliasing -g -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/opt/hostedtoolcache/Python/2.7.18/x64/include/python2.7 -c pysapcompress/pysapcompress.cpp -o build/temp.linux-x86_64-2.7/pysapcompress/pysapcompress.o\n[Build and test pysap/Run unit tests and build wheel-2      ]   | cc1plus: warning: command line option \u2018-Wstrict-prototypes\u2019 is valid for C/ObjC but not for C++\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Requirement already up-to-date: pip in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (20.3.4)\n[Build and test pysap/Build documentation and source package] \ud83c\udfc1  Job failed\n[Build and test pysap/Run unit tests and build wheel-2      ]   | pysapcompress/pysapcompress.cpp: In function \u2018int decompress_packet(const unsigned char*, int, unsigned char**, int*)\u2019:\n[Build and test pysap/Run unit tests and build wheel-2      ]   | pysapcompress/pysapcompress.cpp:120:10: warning: variable \u2018bufin_length\u2019 set but not used [-Wunused-but-set-variable]\n[Build and test pysap/Run unit tests and build wheel-2      ]   |   120 |  SAP_INT bufin_length = 0, bufin_rest = 0, bufout_length = 0, bufout_rest = 0, data_length = 0, bytes_read = 0, bytes_decompressed = 0, total_decompressed = 0;\n[Build and test pysap/Run unit tests and build wheel-2      ]   |       |          ^~~~~~~~~~~~\n[Build and test pysap/Run unit tests and build wheel-2      ]   | pysapcompress/pysapcompress.cpp: In function \u2018int compress_packet(const unsigned char*, int, unsigned char**, int*, unsigned int)\u2019:\n[Build and test pysap/Run unit tests and build wheel-2      ]   | pysapcompress/pysapcompress.cpp:250:12: warning: variable \u2018bufin\u2019 set but not used [-Wunused-but-set-variable]\n[Build and test pysap/Run unit tests and build wheel-2      ]   |   250 |  SAP_BYTE *bufin = NULL, *bufin_pos = NULL, *bufout = NULL, *bufout_pos = NULL;\n[Build and test pysap/Run unit tests and build wheel-2      ]   |       |            ^~~~~\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Collecting wheel\n[Build and test pysap/Run unit tests and build wheel-1      ]   |   Downloading wheel-0.37.1-py2.py3-none-any.whl (35 kB)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Installing collected packages: wheel\n[Build and test pysap/Run unit tests and build wheel-2      ]   | gcc -pthread -fno-strict-aliasing -g -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/opt/hostedtoolcache/Python/2.7.18/x64/include/python2.7 -c pysapcompress/vpa105CsObjInt.cpp -o build/temp.linux-x86_64-2.7/pysapcompress/vpa105CsObjInt.o\n[Build and test pysap/Run unit tests and build wheel-2      ]   | cc1plus: warning: command line option \u2018-Wstrict-prototypes\u2019 is valid for C/ObjC but not for C++\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Successfully installed wheel-0.37.1\n[Build and test pysap/Run unit tests and build wheel-2      ]   | gcc -pthread -fno-strict-aliasing -g -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/opt/hostedtoolcache/Python/2.7.18/x64/include/python2.7 -c pysapcompress/vpa106cslzc.cpp -o build/temp.linux-x86_64-2.7/pysapcompress/vpa106cslzc.o\n[Build and test pysap/Run unit tests and build wheel-2      ]   | cc1plus: warning: command line option \u2018-Wstrict-prototypes\u2019 is valid for C/ObjC but not for C++\n[Build and test pysap/Run unit tests and build wheel-2      ]   | pysapcompress/vpa106cslzc.cpp: In member function \u2018int CsObjectInt::CsDecomprLZC(SAP_BYTE*, SAP_INT, SAP_BYTE*, SAP_INT, SAP_INT, SAP_INT*, SAP_INT*)\u2019:\n[Build and test pysap/Run unit tests and build wheel-2      ]   | pysapcompress/vpa106cslzc.cpp:814:16: warning: \u2018finchar\u2019 may be used uninitialized in this function [-Wmaybe-uninitialized]\n[Build and test pysap/Run unit tests and build wheel-2      ]   |   814 |   csc.sfinchar = finchar;\n[Build and test pysap/Run unit tests and build wheel-2      ]   |       |   ~~~~~~~~~~~~~^~~~~~~~~\n[Build and test pysap/Run unit tests and build wheel-2      ]   | pysapcompress/vpa106cslzc.cpp:813:16: warning: \u2018oldcode\u2019 may be used uninitialized in this function [-Wmaybe-uninitialized]\n[Build and test pysap/Run unit tests and build wheel-2      ]   |   813 |   csc.soldcode = oldcode;\n[Build and test pysap/Run unit tests and build wheel-2      ]   |       |   ~~~~~~~~~~~~~^~~~~~~~~\n[Build and test pysap/Run unit tests and build wheel-2      ]   | gcc -pthread -fno-strict-aliasing -g -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/opt/hostedtoolcache/Python/2.7.18/x64/include/python2.7 -c pysapcompress/vpa107cslzh.cpp -o build/temp.linux-x86_64-2.7/pysapcompress/vpa107cslzh.o\n[Build and test pysap/Run unit tests and build wheel-2      ]   | cc1plus: warning: command line option \u2018-Wstrict-prototypes\u2019 is valid for C/ObjC but not for C++\n[Build and test pysap/Run unit tests and build wheel-1      ]   | DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.\n[Build and test pysap/Run unit tests and build wheel-2      ]   | gcc -pthread -fno-strict-aliasing -g -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/opt/hostedtoolcache/Python/2.7.18/x64/include/python2.7 -c pysapcompress/vpa108csulzh.cpp -o build/temp.linux-x86_64-2.7/pysapcompress/vpa108csulzh.o\n[Build and test pysap/Run unit tests and build wheel-2      ]   | cc1plus: warning: command line option \u2018-Wstrict-prototypes\u2019 is valid for C/ObjC but not for C++\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Collecting scapy==2.4.4\n[Build and test pysap/Run unit tests and build wheel-2      ]   | creating build/lib.linux-x86_64-2.7\n[Build and test pysap/Run unit tests and build wheel-2      ]   | g++ -pthread -shared -Wl,--rpath=/opt/hostedtoolcache/Python/2.7.18/x64/lib build/temp.linux-x86_64-2.7/pysapcompress/pysapcompress.o build/temp.linux-x86_64-2.7/pysapcompress/vpa105CsObjInt.o build/temp.linux-x86_64-2.7/pysapcompress/vpa106cslzc.o build/temp.linux-x86_64-2.7/pysapcompress/vpa107cslzh.o build/temp.linux-x86_64-2.7/pysapcompress/vpa108csulzh.o -L/opt/hostedtoolcache/Python/2.7.18/x64/lib -lpython2.7 -o build/lib.linux-x86_64-2.7/pysapcompress.so\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysapcompress.so -> \n[Build and test pysap/Run unit tests and build wheel-1      ]   |   Downloading scapy-2.4.4.tar.gz (1.0 MB)\n[Build and test pysap/Check code health                     ]   | 0\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapcar_archive (tests.sapcar_test.PySAPCARTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test some basic construction of a SAP CAR archive ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapcar_archive_200 (tests.sapcar_test.PySAPCARTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAP CAR archive file version 2.00 ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapcar_archive_200_to_201 (tests.sapcar_test.PySAPCARTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAP CAR archive object conversion from 2.00 to 2.01 ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapcar_archive_201 (tests.sapcar_test.PySAPCARTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAP CAR archive file version 2.01 ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapcar_archive_201_to_200 (tests.sapcar_test.PySAPCARTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAP CAR archive object conversion from 2.01 to 2.00 ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapcar_archive_add_file (tests.sapcar_test.PySAPCARTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test some basic construction of a SAP CAR archive adding from an existent file ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapcar_archive_file_200_to_201 (tests.sapcar_test.PySAPCARTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAP CAR archive file object conversion from 2.00 to 2.01 ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapcar_archive_file_from_file (tests.sapcar_test.PySAPCARTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAP CAR archive file object construction from file using the original name ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapcar_archive_file_length (tests.sapcar_test.PySAPCARTest) ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_ssfs_data_record_decrypt (tests.sapssfs_test.PySAPSSFSDataDecryptTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test decrypting a record with a given key in a SSFS Data file. ... No handlers could be found for logger \"pysap.ssfs\"\n[Build and test pysap/Run unit tests and build wheel-2      ]   | ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_ssfs_data_parsing (tests.sapssfs_test.PySAPSSFSDataTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test parsing of a SSFS Data file ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_ssfs_data_record_hmac (tests.sapssfs_test.PySAPSSFSDataTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test validation of header and data with HMAC field in a SSFS Data file. ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_ssfs_data_record_lookup (tests.sapssfs_test.PySAPSSFSDataTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test looking up for a record with a given key name in a SSFS Data file. ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_ssfs_key_parsing (tests.sapssfs_test.PySAPSSFSKeyTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test parsing of a SSFS Key file ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_credv2_lps_off_v0_3des (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test parsing of a version 0 3DES encrypted credential with LPS off ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_credv2_lps_off_v0_3des_decrypt (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test decryption of a version 0 3DES encrypted credential with LPS off ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_credv2_lps_off_v0_dp_3des (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test parsing of a version 0 3DES encrypted credential with LPS off using DP (Windows) ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_credv2_lps_off_v0_dp_3des_decrypt (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test decryption of a version 0 3DES encrypted credential with LPS off using DP (Windows) ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_credv2_lps_off_v1_3des (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test parsing of a version 1 3DES encrypted credential with LPS off ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_credv2_lps_off_v1_3des_decrypt (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test decryption of a version 1 3DES encrypted credential with LPS off ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_credv2_lps_off_v1_aes256 (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test parsing of a version 1 AES256 encrypted credential with LPS off ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_credv2_lps_off_v1_aes256_decrypt (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test decryption of a version 1 AES256 encrypted credential with LPS off ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_credv2_lps_on_v2_dp_aes256 (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test parsing of a version 2 AES256 encrypted credential with LPS on, DP type ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_credv2_lps_on_v2_int_aes256 (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test parsing of a version 2 AES256 encrypted credential with LPS on, INT type ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_credv2_lps_on_v2_int_aes256_composed_subject (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test parsing of a version 2 AES256 encrypted credential with LPS on, INT type, ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_credv2_lps_on_v2_int_aes256_decrypt (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test decryption of a version 2 AES256 encrypted credential with LPS on, INT type ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_compress_input (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test compress function input ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_decompress_input (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test decompress function input ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_import (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test import of the pysapcompress library ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_invalid_read (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test invalid read vulnerability in LZH code (CVE-2015-2278) ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_invalid_write (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test invalid write vulnerability in LZC code (CVE-2015-2282) ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_login (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test (de)compression of a login packet. The result is ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_login_screen (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test (de)compression of a login screen packet. The result is ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_lzc (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test compression and decompression using LZC algorithm ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_lzh (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test compression and decompression using LZH algorithm ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_lzh_decompress (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test decompression using LZH algorithm ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_saproutedstreamsocket (tests.saprouter_test.PySAPRoutedStreamSocketTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAPRoutedStreamSocket ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_saproutedstreamsocket_error (tests.saprouter_test.PySAPRoutedStreamSocketTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAPRoutedStreamSocket throwing of Exception if an invalid ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_saproutedstreamsocket_getnisocket (tests.saprouter_test.PySAPRoutedStreamSocketTest)\n[Build and test pysap/Check code health                     ]   | ./examples/ms_impersonator.py:117:5: E741 ambiguous variable name 'l'\n[Build and test pysap/Check code health                     ]   | ./examples/dlmanager_decrypt.py:33:1: C901 'parse_java' is too complex (36)\n[Build and test pysap/Check code health                     ]   | ./examples/dlmanager_decrypt.py:39:26: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./examples/dlmanager_decrypt.py:173:5: E722 do not use bare 'except'\n[Build and test pysap/Check code health                     ]   | ./examples/diag_interceptor.py:30:1: F403 'from pysap.SAPDiagItems import *' used; unable to detect undefined names\n[Build and test pysap/Check code health                     ]   | ./examples/diag_interceptor.py:37:22: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_interceptor.py:38:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_interceptor.py:38:26: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/hdb_discovery.py:88:1: C901 'main' is too complex (16)\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_brute_force.py:33:1: F403 'from pysap.SAPDiagItems import *' used; unable to detect undefined names\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_brute_force.py:41:22: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_brute_force.py:42:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_brute_force.py:42:26: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_brute_force.py:105:11: F405 'SAPDiagSES' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_brute_force.py:108:18: F405 'SAPDiagDyntAtom' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_brute_force.py:109:9: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_brute_force.py:111:9: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_brute_force.py:113:9: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_brute_force.py:119:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_brute_force.py:120:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_brute_force.py:121:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_brute_force.py:122:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_brute_force.py:135:24: F632 use ==/!= to compare constant literals (str, bytes, int, float, tuple)\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_brute_force.py:135:49: F632 use ==/!= to compare constant literals (str, bytes, int, float, tuple)\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_brute_force.py:141:1: C901 'login' is too complex (11)\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_brute_force.py:227:1: C901 'main' is too complex (27)\n[Build and test pysap/Check code health                     ]   | ./examples/enqueue_monitor.py:174:9: E722 do not use bare 'except'\n[Build and test pysap/Check code health                     ]   | ./examples/router_portfw.py:81:41: E201 whitespace after '('\n[Build and test pysap/Check code health                     ]   | ./examples/router_portfw.py:86:53: E701 multiple statements on one line (colon)\n[Build and test pysap/Check code health                     ]   | ./examples/router_portfw.py:89:55: E701 multiple statements on one line (colon)\n[Build and test pysap/Check code health                     ]   | ./examples/router_portfw.py:124:5: E101 indentation contains mixed spaces and tabs\n[Build and test pysap/Check code health                     ]   | ./examples/router_portfw.py:124:5: W191 indentation contains tabs\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:29:1: F403 'from pysap.SAPDiagItems import *' used; unable to detect undefined names\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:39:22: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:40:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:40:26: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:70:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:70:36: F405 'support_data_sapnw_702' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:71:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:72:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:73:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:74:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:75:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:76:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:77:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:78:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:79:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:80:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:80:36: F405 'SAPDiagAreaSize' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:81:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:82:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:83:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:84:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:85:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:86:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:86:36: F405 'SAPDiagMenuEntries' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:86:64: F405 'SAPDiagMenuEntry' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:88:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:88:36: F405 'SAPDiagMenuEntries' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:88:64: F405 'SAPDiagMenuEntry' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:90:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:90:36: F405 'SAPDiagMenuEntries' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:90:64: F405 'SAPDiagMenuEntry' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:91:64: F405 'SAPDiagMenuEntry' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:93:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:94:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:94:36: F405 'SAPDiagDyntAtom' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:94:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:95:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:96:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:97:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:98:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:99:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:100:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:101:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:102:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:103:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:104:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:105:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:106:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:107:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:108:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:109:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:110:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:111:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:112:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:113:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:114:59: F405 'SAPDiagDyntAtomItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:119:17: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:119:40: F405 'support_data_sapnw_702' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:120:17: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:121:17: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:122:17: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:123:17: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:124:17: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:125:17: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:126:17: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:127:17: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:128:17: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:129:17: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:130:17: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:131:17: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:132:17: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:133:17: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_rogue_server.py:166:5: C901 'SAPDiagServerHandler.handle_msg' is too complex (13)\n[Build and test pysap/Check code health                     ]   | ./examples/router_admin.py:114:1: C901 'main' is too complex (28)\n[Build and test pysap/Check code health                     ]   | ./examples/diag_dos_exploit.py:100:1: C901 'main' is too complex (13)\n[Build and test pysap/Check code health                     ]   | ./examples/gw_monitor.py:78:13: F841 local variable 'response' is assigned to but never used\n[Build and test pysap/Check code health                     ]   | ./examples/gw_monitor.py:110:9: F841 local variable 'response' is assigned to but never used\n[Build and test pysap/Check code health                     ]   | ./examples/diag_capturer.py:26:1: F401 'scapy.arch' imported but unused\n[Build and test pysap/Check code health                     ]   | ./examples/diag_capturer.py:36:1: F403 'from pysap.SAPDiagItems import *' used; unable to detect undefined names\n[Build and test pysap/Check code health                     ]   | ./examples/diag_capturer.py:43:22: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_capturer.py:44:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_capturer.py:44:26: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_capturer.py:109:30: W605 invalid escape sequence '\\Q'\n[Build and test pysap/Check code health                     ]   | ./examples/diag_render_login_screen.py:30:1: F403 'from pysap.SAPDiagItems import *' used; unable to detect undefined names\n[Build and test pysap/Check code health                     ]   | ./examples/diag_render_login_screen.py:46:22: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_render_login_screen.py:47:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_render_login_screen.py:47:26: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_render_login_screen.py:159:1: C901 'render_diag_screen' is too complex (26)\n[Build and test pysap/Check code health                     ]   | ./examples/diag_render_login_screen.py:210:36: W605 invalid escape sequence '\\Q'\n[Build and test pysap/Check code health                     ]   | ./examples/ms_dump_param.py:77:1: C901 'main' is too complex (20)\n[Build and test pysap/Check code health                     ]   | ./examples/ms_dump_param.py:126:117: W504 line break after binary operator\n[Build and test pysap/Check code health                     ]   | ./examples/enqueue_dos_exploit.py:135:97: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./examples/ms_monitor.py:222:5: C901 'SAPMSMonitorConsole.do_dump' is too complex (15)\n[Build and test pysap/Check code health                     ]   | ./examples/router_fingerprint.py:220:1: C901 'main' is too complex (20)\n[Build and test pysap/Check code health                     ]   | ./examples/router_fingerprint.py:245:5: E741 ambiguous variable name 'l'\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_screen_info.py:30:1: F403 'from pysap.SAPDiagItems import *' used; unable to detect undefined names\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_screen_info.py:42:22: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_screen_info.py:43:13: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./examples/diag_login_screen_info.py:43:26: F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPDiag.py:582:5: C901 'SAPDiag.get_item' is too complex (12)\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPDiagClient.py:153:58: W504 line break after binary operator\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPDiagClient.py:154:65: W504 line break after binary operator\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPCAR.py:39:20: E241 multiple spaces after ','\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPCAR.py:40:20: E241 multiple spaces after ','\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPCAR.py:41:20: E241 multiple spaces after ','\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPCAR.py:42:20: E241 multiple spaces after ','\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPCAR.py:43:20: E241 multiple spaces after ','\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPCAR.py:44:20: E241 multiple spaces after ','\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPCAR.py:46:20: E241 multiple spaces after ','\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPCAR.py:47:20: E241 multiple spaces after ','\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPCAR.py:49:20: E241 multiple spaces after ','\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPCAR.py:50:20: E241 multiple spaces after ','\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPCAR.py:52:20: E241 multiple spaces after ','\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPCAR.py:53:20: E241 multiple spaces after ','\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPCAR.py:55:20: E241 multiple spaces after ','\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPCAR.py:56:20: E241 multiple spaces after ','\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPCAR.py:58:20: E241 multiple spaces after ','\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPCAR.py:59:20: E241 multiple spaces after ','\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPCAR.py:61:20: E241 multiple spaces after ','\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPCAR.py:62:20: E241 multiple spaces after ','\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPIGS.py:205:21: E126 continuation line over-indented for hanging indent\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPIGS.py:208:18: E126 continuation line over-indented for hanging indent\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPSSFS.py:91:44: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPSSFS.py:106:31: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPMS.py:881:44: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPMS.py:902:42: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPMS.py:1019:44: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPMS.py:1045:42: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPMS.py:1078:45: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./pysap/SAPHDB.py:762:95: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/fields.py:127:13: E741 ambiguous variable name 'l'\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/fields.py:133:13: E741 ambiguous variable name 'l'\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/fields.py:140:17: E741 ambiguous variable name 'l'\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/fields.py:141:13: E722 do not use bare 'except'\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/fields.py:142:17: E741 ambiguous variable name 'l'\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/fields.py:158:9: E741 ambiguous variable name 'l'\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/fields.py:162:9: E741 ambiguous variable name 'l'\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/fields.py:178:9: E741 ambiguous variable name 'l'\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/fields.py:185:9: E741 ambiguous variable name 'l'\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/fields.py:239:9: E741 ambiguous variable name 'l'\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/fields.py:254:5: C901 'PacketListStopField.getfield' is too complex (12)\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/fields.py:255:13: E741 ambiguous variable name 'l'\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/fields.py:257:13: E741 ambiguous variable name 'l'\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/__init__.py:33:1: F401 'binascii.hexlify' imported but unused\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/__init__.py:35:1: F401 'scapy.utils.hexdump' imported but unused\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/__init__.py:104:5: C901 'PKCS12_PBKDF1.derive' is too complex (16)\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/__init__.py:214:41: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/rsec.py:232:23: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/rsec.py:236:33: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/rsec.py:236:43: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/rsec.py:236:45: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/rsec.py:237:36: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/rsec.py:237:40: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/rsec.py:237:46: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/rsec.py:239:51: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/rsec.py:239:53: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/rsec.py:251:17: E127 continuation line over-indented for visual indent\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/rsec.py:252:17: E127 continuation line over-indented for visual indent\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/rsec.py:253:17: E127 continuation line over-indented for visual indent\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/rsec.py:254:17: E127 continuation line over-indented for visual indent\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/rsec.py:255:17: E127 continuation line over-indented for visual indent\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/rsec.py:256:17: E127 continuation line over-indented for visual indent\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/rsec.py:257:17: E127 continuation line over-indented for visual indent\n[Build and test pysap/Check code health                     ]   | ./pysap/utils/crypto/rsec.py:262:29: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./tests/sapcar_test.py:108:76: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./tests/sapcar_test.py:113:69: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./tests/sapcar_test.py:114:69: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./tests/sapcar_test.py:116:64: E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | ./tests/sapssfs_test.py:24:1: F401 'pysap.SAPSSFS.SAPSSFSLock' imported but unused\n[Build and test pysap/Check code health                     ]   | ./tests/sapssfs_test.py:30:11: E222 multiple spaces after operator\n[Build and test pysap/Check code health                     ]   | ./tests/sapssfs_test.py:49:11: E222 multiple spaces after operator\n[Build and test pysap/Check code health                     ]   | ./tests/sapcredv2_test.py:195:9: F841 local variable 'c' is assigned to but never used\n[Build and test pysap/Check code health                     ]   | ./tests/crypto_test.py:49:24: E127 continuation line over-indented for visual indent\n[Build and test pysap/Check code health                     ]   | 14    C901 'main' is too complex (13)\n[Build and test pysap/Check code health                     ]   | 1     E101 indentation contains mixed spaces and tabs\n[Build and test pysap/Check code health                     ]   | 2     E126 continuation line over-indented for hanging indent\n[Build and test pysap/Check code health                     ]   | 8     E127 continuation line over-indented for visual indent\n[Build and test pysap/Check code health                     ]   | 1     E201 whitespace after '('\n[Build and test pysap/Check code health                     ]   | 2     E222 multiple spaces after operator\n[Build and test pysap/Check code health                     ]   | 25    E226 missing whitespace around arithmetic operator\n[Build and test pysap/Check code health                     ]   | 18    E241 multiple spaces after ','\n[Build and test pysap/Check code health                     ]   | 2     E701 multiple statements on one line (colon)\n[Build and test pysap/Check code health                     ]   | 3     E722 do not use bare 'except'\n[Build and test pysap/Check code health                     ]   | 13    E741 ambiguous variable name 'l'\n[Build and test pysap/Check code health                     ]   | 4     F401 'scapy.arch' imported but unused\n[Build and test pysap/Check code health                     ]   | 6     F403 'from pysap.SAPDiagItems import *' used; unable to detect undefined names\n[Build and test pysap/Check code health                     ]   | 95    F405 'SAPDiagItem' may be undefined, or defined from star imports: pysap.SAPDiagItems\n[Build and test pysap/Check code health                     ]   | 2     F632 use ==/!= to compare constant literals (str, bytes, int, float, tuple)\n[Build and test pysap/Check code health                     ]   | 3     F841 local variable 'response' is assigned to but never used\n[Build and test pysap/Check code health                     ]   | 1     W191 indentation contains tabs\n[Build and test pysap/Check code health                     ]   | 3     W504 line break after binary operator\n[Build and test pysap/Check code health                     ]   | 2     W605 invalid escape sequence '\\Q'\n[Build and test pysap/Check code health                     ]   | 205\n[Build and test pysap/Check code health                     ]   \u2705  Success - Main Run flake8 tests\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Collecting cryptography==2.9.2\n[Build and test pysap/Run unit tests and build wheel-1      ]   |   Downloading cryptography-2.9.2-cp27-cp27mu-manylinux2010_x86_64.whl (2.7 MB)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAPRoutedStreamSocket get nisocket class method ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_saproutedstreamsocket_route_error (tests.saprouter_test.PySAPRoutedStreamSocketTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Collecting ipaddress; python_version < \"3\"\n[Build and test pysap/Run unit tests and build wheel-1      ]   |   Downloading ipaddress-1.0.23-py2.py3-none-any.whl (18 kB)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAPRoutedStreamSocket throwing of SAPRouteException if ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_saprouter_route_string (tests.saprouter_test.PySAPRouterTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test construction of SAPRouterRouteHop items ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Collecting six>=1.4.1\n[Build and test pysap/Run unit tests and build wheel-1      ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapniproxy (tests.sapni_test.PySAPNIProxyTest) ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Collecting cffi!=1.11.3,>=1.8\n[Build and test pysap/Run unit tests and build wheel-1      ]   |   Downloading cffi-1.15.1-cp27-cp27mu-manylinux1_x86_64.whl (390 kB)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapniproxy_process (tests.sapni_test.PySAPNIProxyTest) ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapniserver (tests.sapni_test.PySAPNIServerTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Collecting enum34; python_version < \"3\"\n[Build and test pysap/Run unit tests and build wheel-1      ]   |   Downloading enum34-1.1.10-py2-none-any.whl (11 kB)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Collecting pycparser\n[Build and test pysap/Run unit tests and build wheel-1      ]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Building wheels for collected packages: scapy\n[Build and test pysap/Run unit tests and build wheel-1      ]   |   Building wheel for scapy (setup.py): started\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAPNIServer ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapnistreamsocket (tests.sapni_test.PySAPNIStreamSocketTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAPNIStreamSocket ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapnistreamsocket_base_cls (tests.sapni_test.PySAPNIStreamSocketTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   |   Building wheel for scapy (setup.py): finished with status 'done'\n[Build and test pysap/Run unit tests and build wheel-1      ]   |   Created wheel for scapy: filename=scapy-2.4.4-py2.py3-none-any.whl size=1189183 sha256=d81b9202d46de8ead369e64d6c981cba112ac550a2e33ff9a9352c3ce5b00a5c\n[Build and test pysap/Run unit tests and build wheel-1      ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/54/7f/78/f171363d7702a91ddabc3a1503e2fd43618fa0f9f55e401720\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAPNIStreamSocket handling of custom base packet classes ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapnistreamsocket_close (tests.sapni_test.PySAPNIStreamSocketTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Successfully built scapy\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Installing collected packages: scapy, ipaddress, six, pycparser, cffi, enum34, cryptography\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAPNIStreamSocket with a server that closes the connection ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapnistreamsocket_getnisocket (tests.sapni_test.PySAPNIStreamSocketTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAPNIStreamSocket get nisocket class method ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapnistreamsocket_with_keep_alive (tests.sapni_test.PySAPNIStreamSocketTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAPNIStreamSocket with keep alive ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapnistreamsocket_without_keep_alive (tests.sapni_test.PySAPNIStreamSocketTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAPNIStreamSocket without keep alive ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapni_building (tests.sapni_test.PySAPNITest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAPNI length field building ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapni_dissection (tests.sapni_test.PySAPNITest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAPNI length field dissection ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapdiag_atoms (tests.sapdiag_test.PySAPDiagTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test dissection of Diag Items and Dynt Atom Items ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapdiag_header_build (tests.sapdiag_test.PySAPDiagTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAPDiag headers building ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapdiag_header_dissection_compressed (tests.sapdiag_test.PySAPDiagTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAPDiag headers dissection with compression ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapdiag_header_dissection_plain (tests.sapdiag_test.PySAPDiagTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SAPDiag headers dissection without compression ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapdiag_item (tests.sapdiag_test.PySAPDiagTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test construction of SAPDiag Items ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapdiag_items (tests.sapdiag_test.PySAPDiagTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test dissection of Diag Items ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapdiag_items_bind (tests.sapdiag_test.PySAPDiagTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test binding of SAPDiagItem classes ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_sapdiag_items_lookup (tests.sapdiag_test.PySAPDiagTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test lookup and filtering of SAPDiagItems inside a SAPDiag ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_pse_v2_lps_off_pbes1_3des_sha1 (tests.sappse_test.PySAPPSEv2Test)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test parsing of a v2 PBES1 encrypted PSE with LPS off ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_pse_v2_lps_off_pbes1_3des_sha1_decrypt (tests.sappse_test.PySAPPSEv2Test)\n[Build and test pysap/Check code health                     ] \u2b50 Run Post Setup Python 2.7\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Successfully installed cffi-1.15.1 cryptography-2.9.2 enum34-1.1.10 ipaddress-1.0.23 pycparser-2.21 scapy-2.4.4 six-1.16.0\n[Build and test pysap/Run unit tests and build wheel-1      ]   \u2705  Success - Main Install Python dependencies\n[Build and test pysap/Check code health                     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test decryption of a v2 PBES1 encrypted PSE with LPS off ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_pse_v4_lps_off_pbes1_3des_sha1 (tests.sappse_test.PySAPPSEv2Test)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test parsing of a v4 PBES1 encrypted PSE with LPS off ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_saphdbconnection_initialize (tests.saphdb_test.PySAPHDBConnectionTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test HDB Connection initialize ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_scram_pbkdf2sha256_scramble_salt (tests.crypto_test.PySAPCryptoUtilsTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SCRAM-PBKDF2-SHA256 scramble salt calculation. ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | test_scram_sha256_scramble_salt (tests.crypto_test.PySAPCryptoUtilsTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Test SCRAM SHA256 scramble salt calculation. ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ]   | \n[Build and test pysap/Run unit tests and build wheel-2      ]   | ----------------------------------------------------------------------\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Ran 66 tests in 8.830s\n[Build and test pysap/Run unit tests and build wheel-2      ]   | \n[Build and test pysap/Run unit tests and build wheel-2      ]   | OK\n[Build and test pysap/Run unit tests and build wheel-2      ]   \u2705  Success - Main Run unit tests\n[Build and test pysap/Run unit tests and build wheel-1      ] \u2b50 Run Main Run unit tests\n[Build and test pysap/Run unit tests and build wheel-2      ] \u2b50 Run Main Build wheel artifact\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[Build and test pysap/Check code health                     ]   \u2705  Success - Post Setup Python 2.7\n[Build and test pysap/Run unit tests and build wheel-2      ]   | running bdist_wheel\n[Build and test pysap/Run unit tests and build wheel-2      ]   | running build\n[Build and test pysap/Run unit tests and build wheel-2      ]   | running build_py\n[Build and test pysap/Run unit tests and build wheel-2      ]   | creating build/lib.linux-x86_64-2.7/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/SAPDiagItems.py -> build/lib.linux-x86_64-2.7/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/SAPEnqueue.py -> build/lib.linux-x86_64-2.7/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/SAPDiag.py -> build/lib.linux-x86_64-2.7/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/SAPDiagClient.py -> build/lib.linux-x86_64-2.7/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/SAPCredv2.py -> build/lib.linux-x86_64-2.7/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/SAPPSE.py -> build/lib.linux-x86_64-2.7/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/SAPNI.py -> build/lib.linux-x86_64-2.7/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/SAPLPS.py -> build/lib.linux-x86_64-2.7/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/SAPRFC.py -> build/lib.linux-x86_64-2.7/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/SAPSNC.py -> build/lib.linux-x86_64-2.7/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/SAPRouter.py -> build/lib.linux-x86_64-2.7/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/__init__.py -> build/lib.linux-x86_64-2.7/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/SAPCAR.py -> build/lib.linux-x86_64-2.7/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/SAPIGS.py -> build/lib.linux-x86_64-2.7/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/SAPSSFS.py -> build/lib.linux-x86_64-2.7/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/SAPMS.py -> build/lib.linux-x86_64-2.7/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/SAPHDB.py -> build/lib.linux-x86_64-2.7/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | creating build/lib.linux-x86_64-2.7/pysap/utils\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/utils/fields.py -> build/lib.linux-x86_64-2.7/pysap/utils\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/utils/console.py -> build/lib.linux-x86_64-2.7/pysap/utils\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/utils/__init__.py -> build/lib.linux-x86_64-2.7/pysap/utils\n[Build and test pysap/Run unit tests and build wheel-2      ]   | creating build/lib.linux-x86_64-2.7/pysap/utils/crypto\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/utils/crypto/__init__.py -> build/lib.linux-x86_64-2.7/pysap/utils/crypto\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying pysap/utils/crypto/rsec.py -> build/lib.linux-x86_64-2.7/pysap/utils/crypto\n[Build and test pysap/Run unit tests and build wheel-2      ]   | running build_ext\n[Build and test pysap/Run unit tests and build wheel-2      ]   | running build_scripts\n[Build and test pysap/Run unit tests and build wheel-2      ]   | creating build/scripts-2.7\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying and adjusting bin/pysapcar -> build/scripts-2.7\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying and adjusting bin/pysapgenpse -> build/scripts-2.7\n[Build and test pysap/Run unit tests and build wheel-2      ]   | changing mode of build/scripts-2.7/pysapcar from 644 to 755\n[Build and test pysap/Run unit tests and build wheel-2      ]   | changing mode of build/scripts-2.7/pysapgenpse from 644 to 755\n[Build and test pysap/Run unit tests and build wheel-2      ]   | installing to build/bdist.linux-x86_64/wheel\n[Build and test pysap/Run unit tests and build wheel-2      ]   | running install\n[Build and test pysap/Run unit tests and build wheel-2      ]   | running install_lib\n[Build and test pysap/Run unit tests and build wheel-2      ]   | creating build/bdist.linux-x86_64\n[Build and test pysap/Run unit tests and build wheel-2      ]   | creating build/bdist.linux-x86_64/wheel\n[Build and test pysap/Run unit tests and build wheel-2      ]   | creating build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPDiagItems.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPEnqueue.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPDiag.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPDiagClient.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPCredv2.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPPSE.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPNI.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPLPS.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPRFC.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPSNC.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPRouter.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/__init__.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPCAR.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPIGS.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPSSFS.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPMS.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | creating build/bdist.linux-x86_64/wheel/pysap/utils\n[Build and test pysap/Run unit tests and build wheel-2      ]   | creating build/bdist.linux-x86_64/wheel/pysap/utils/crypto\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/utils/crypto/__init__.py -> build/bdist.linux-x86_64/wheel/pysap/utils/crypto\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/utils/crypto/rsec.py -> build/bdist.linux-x86_64/wheel/pysap/utils/crypto\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/utils/fields.py -> build/bdist.linux-x86_64/wheel/pysap/utils\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/utils/console.py -> build/bdist.linux-x86_64/wheel/pysap/utils\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/utils/__init__.py -> build/bdist.linux-x86_64/wheel/pysap/utils\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPHDB.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/lib.linux-x86_64-2.7/pysapcompress.so -> build/bdist.linux-x86_64/wheel\n[Build and test pysap/Run unit tests and build wheel-2      ]   | running install_egg_info\n[Build and test pysap/Run unit tests and build wheel-2      ]   | running egg_info\n[Build and test pysap/Run unit tests and build wheel-2      ]   | writing requirements to pysap.egg-info/requires.txt\n[Build and test pysap/Run unit tests and build wheel-2      ]   | writing pysap.egg-info/PKG-INFO\n[Build and test pysap/Run unit tests and build wheel-2      ]   | writing top-level names to pysap.egg-info/top_level.txt\n[Build and test pysap/Run unit tests and build wheel-2      ]   | writing dependency_links to pysap.egg-info/dependency_links.txt\n[Build and test pysap/Run unit tests and build wheel-2      ]   | reading manifest file 'pysap.egg-info/SOURCES.txt'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | reading manifest template 'MANIFEST.in'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | writing manifest file 'pysap.egg-info/SOURCES.txt'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Copying pysap.egg-info to build/bdist.linux-x86_64/wheel/pysap-0.1.20.dev0-py2.7.egg-info\n[Build and test pysap/Run unit tests and build wheel-2      ]   | running install_scripts\n[Build and test pysap/Run unit tests and build wheel-2      ]   | creating build/bdist.linux-x86_64/wheel/pysap-0.1.20.dev0.data\n[Build and test pysap/Run unit tests and build wheel-2      ]   | creating build/bdist.linux-x86_64/wheel/pysap-0.1.20.dev0.data/scripts\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/scripts-2.7/pysapgenpse -> build/bdist.linux-x86_64/wheel/pysap-0.1.20.dev0.data/scripts\n[Build and test pysap/Run unit tests and build wheel-2      ]   | copying build/scripts-2.7/pysapcar -> build/bdist.linux-x86_64/wheel/pysap-0.1.20.dev0.data/scripts\n[Build and test pysap/Run unit tests and build wheel-2      ]   | changing mode of build/bdist.linux-x86_64/wheel/pysap-0.1.20.dev0.data/scripts/pysapgenpse to 755\n[Build and test pysap/Run unit tests and build wheel-2      ]   | changing mode of build/bdist.linux-x86_64/wheel/pysap-0.1.20.dev0.data/scripts/pysapcar to 755\n[Build and test pysap/Run unit tests and build wheel-1      ]   | running test\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding license file \"COPYING\" (matched pattern \"COPYING*\")\n[Build and test pysap/Run unit tests and build wheel-2      ]   | creating build/bdist.linux-x86_64/wheel/pysap-0.1.20.dev0.dist-info/WHEEL\n[Build and test pysap/Run unit tests and build wheel-2      ]   | creating 'dist/pysap-0.1.20.dev0-cp27-cp27mu-linux_x86_64.whl' and adding 'build/bdist.linux-x86_64/wheel' to it\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysapcompress.so'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/SAPCAR.py'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/SAPCredv2.py'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/SAPDiag.py'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/SAPDiagClient.py'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/SAPDiagItems.py'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/SAPEnqueue.py'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/SAPHDB.py'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/SAPIGS.py'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/SAPLPS.py'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/SAPMS.py'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/SAPNI.py'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/SAPPSE.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | running egg_info\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/SAPRFC.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | writing requirements to pysap.egg-info/requires.txt\n[Build and test pysap/Run unit tests and build wheel-1      ]   | writing pysap.egg-info/PKG-INFO\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/SAPRouter.py'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/SAPSNC.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | writing top-level names to pysap.egg-info/top_level.txt\n[Build and test pysap/Run unit tests and build wheel-1      ]   | writing dependency_links to pysap.egg-info/dependency_links.txt\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/SAPSSFS.py'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/__init__.py'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/utils/__init__.py'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/utils/console.py'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/utils/fields.py'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/utils/crypto/__init__.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | reading manifest file 'pysap.egg-info/SOURCES.txt'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap/utils/crypto/rsec.py'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap-0.1.20.dev0.data/scripts/pysapcar'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap-0.1.20.dev0.data/scripts/pysapgenpse'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | reading manifest template 'MANIFEST.in'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap-0.1.20.dev0.dist-info/COPYING'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap-0.1.20.dev0.dist-info/METADATA'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap-0.1.20.dev0.dist-info/WHEEL'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap-0.1.20.dev0.dist-info/top_level.txt'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | adding 'pysap-0.1.20.dev0.dist-info/RECORD'\n[Build and test pysap/Run unit tests and build wheel-2      ]   | removing build/bdist.linux-x86_64/wheel\n[Build and test pysap/Run unit tests and build wheel-1      ]   | writing manifest file 'pysap.egg-info/SOURCES.txt'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | running build_ext\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysapcompress.so -> \n[Build and test pysap/Run unit tests and build wheel-2      ]   \u2705  Success - Main Build wheel artifact\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapcar_archive (tests.sapcar_test.PySAPCARTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test some basic construction of a SAP CAR archive ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapcar_archive_200 (tests.sapcar_test.PySAPCARTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAP CAR archive file version 2.00 ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapcar_archive_200_to_201 (tests.sapcar_test.PySAPCARTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAP CAR archive object conversion from 2.00 to 2.01 ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapcar_archive_201 (tests.sapcar_test.PySAPCARTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAP CAR archive file version 2.01 ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapcar_archive_201_to_200 (tests.sapcar_test.PySAPCARTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAP CAR archive object conversion from 2.01 to 2.00 ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapcar_archive_add_file (tests.sapcar_test.PySAPCARTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test some basic construction of a SAP CAR archive adding from an existent file ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapcar_archive_file_200_to_201 (tests.sapcar_test.PySAPCARTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAP CAR archive file object conversion from 2.00 to 2.01 ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapcar_archive_file_from_file (tests.sapcar_test.PySAPCARTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAP CAR archive file object construction from file using the original name ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapcar_archive_file_length (tests.sapcar_test.PySAPCARTest) ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_ssfs_data_record_decrypt (tests.sapssfs_test.PySAPSSFSDataDecryptTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test decrypting a record with a given key in a SSFS Data file. ... No handlers could be found for logger \"pysap.ssfs\"\n[Build and test pysap/Run unit tests and build wheel-1      ]   | ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_ssfs_data_parsing (tests.sapssfs_test.PySAPSSFSDataTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test parsing of a SSFS Data file ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_ssfs_data_record_hmac (tests.sapssfs_test.PySAPSSFSDataTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test validation of header and data with HMAC field in a SSFS Data file. ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_ssfs_data_record_lookup (tests.sapssfs_test.PySAPSSFSDataTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test looking up for a record with a given key name in a SSFS Data file. ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_ssfs_key_parsing (tests.sapssfs_test.PySAPSSFSKeyTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test parsing of a SSFS Key file ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_credv2_lps_off_v0_3des (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test parsing of a version 0 3DES encrypted credential with LPS off ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_credv2_lps_off_v0_3des_decrypt (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test decryption of a version 0 3DES encrypted credential with LPS off ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_credv2_lps_off_v0_dp_3des (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test parsing of a version 0 3DES encrypted credential with LPS off using DP (Windows) ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_credv2_lps_off_v0_dp_3des_decrypt (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test decryption of a version 0 3DES encrypted credential with LPS off using DP (Windows) ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_credv2_lps_off_v1_3des (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test parsing of a version 1 3DES encrypted credential with LPS off ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_credv2_lps_off_v1_3des_decrypt (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test decryption of a version 1 3DES encrypted credential with LPS off ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_credv2_lps_off_v1_aes256 (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test parsing of a version 1 AES256 encrypted credential with LPS off ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_credv2_lps_off_v1_aes256_decrypt (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test decryption of a version 1 AES256 encrypted credential with LPS off ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_credv2_lps_on_v2_dp_aes256 (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test parsing of a version 2 AES256 encrypted credential with LPS on, DP type ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_credv2_lps_on_v2_int_aes256 (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test parsing of a version 2 AES256 encrypted credential with LPS on, INT type ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_credv2_lps_on_v2_int_aes256_composed_subject (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test parsing of a version 2 AES256 encrypted credential with LPS on, INT type, ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_credv2_lps_on_v2_int_aes256_decrypt (tests.sapcredv2_test.PySAPCredV2Test)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test decryption of a version 2 AES256 encrypted credential with LPS on, INT type ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_compress_input (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test compress function input ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_decompress_input (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test decompress function input ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_import (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test import of the pysapcompress library ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_invalid_read (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test invalid read vulnerability in LZH code (CVE-2015-2278) ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_invalid_write (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test invalid write vulnerability in LZC code (CVE-2015-2282) ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_login (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test (de)compression of a login packet. The result is ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_login_screen (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test (de)compression of a login screen packet. The result is ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_lzc (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test compression and decompression using LZC algorithm ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_lzh (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test compression and decompression using LZH algorithm ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_lzh_decompress (tests.pysapcompress_test.PySAPCompressTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test decompression using LZH algorithm ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_saproutedstreamsocket (tests.saprouter_test.PySAPRoutedStreamSocketTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAPRoutedStreamSocket ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_saproutedstreamsocket_error (tests.saprouter_test.PySAPRoutedStreamSocketTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAPRoutedStreamSocket throwing of Exception if an invalid ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_saproutedstreamsocket_getnisocket (tests.saprouter_test.PySAPRoutedStreamSocketTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAPRoutedStreamSocket get nisocket class method ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_saproutedstreamsocket_route_error (tests.saprouter_test.PySAPRoutedStreamSocketTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAPRoutedStreamSocket throwing of SAPRouteException if ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_saprouter_route_string (tests.saprouter_test.PySAPRouterTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test construction of SAPRouterRouteHop items ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapniproxy (tests.sapni_test.PySAPNIProxyTest) ... ok\n[Build and test pysap/Run unit tests and build wheel-2      ] \u2b50 Run Main Upload wheel artifact\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapniproxy_process (tests.sapni_test.PySAPNIProxyTest) ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapniserver (tests.sapni_test.PySAPNIServerTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAPNIServer ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapnistreamsocket (tests.sapni_test.PySAPNIStreamSocketTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-upload-artifact@v2/ dst=/var/run/act/actions/actions-upload-artifact@v2/\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAPNIStreamSocket ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapnistreamsocket_base_cls (tests.sapni_test.PySAPNIStreamSocketTest)\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-upload-artifact@v2/] user=0 workdir=\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAPNIStreamSocket handling of custom base packet classes ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapnistreamsocket_close (tests.sapni_test.PySAPNIStreamSocketTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAPNIStreamSocket with a server that closes the connection ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapnistreamsocket_getnisocket (tests.sapni_test.PySAPNIStreamSocketTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAPNIStreamSocket get nisocket class method ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapnistreamsocket_with_keep_alive (tests.sapni_test.PySAPNIStreamSocketTest)\n[Build and test pysap/Check code health                     ] \ud83c\udfc1  Job succeeded\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAPNIStreamSocket with keep alive ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapnistreamsocket_without_keep_alive (tests.sapni_test.PySAPNIStreamSocketTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAPNIStreamSocket without keep alive ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapni_building (tests.sapni_test.PySAPNITest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAPNI length field building ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapni_dissection (tests.sapni_test.PySAPNITest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAPNI length field dissection ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapdiag_atoms (tests.sapdiag_test.PySAPDiagTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test dissection of Diag Items and Dynt Atom Items ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapdiag_header_build (tests.sapdiag_test.PySAPDiagTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAPDiag headers building ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapdiag_header_dissection_compressed (tests.sapdiag_test.PySAPDiagTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAPDiag headers dissection with compression ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapdiag_header_dissection_plain (tests.sapdiag_test.PySAPDiagTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SAPDiag headers dissection without compression ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapdiag_item (tests.sapdiag_test.PySAPDiagTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test construction of SAPDiag Items ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapdiag_items (tests.sapdiag_test.PySAPDiagTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test dissection of Diag Items ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapdiag_items_bind (tests.sapdiag_test.PySAPDiagTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test binding of SAPDiagItem classes ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_sapdiag_items_lookup (tests.sapdiag_test.PySAPDiagTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test lookup and filtering of SAPDiagItems inside a SAPDiag ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_pse_v2_lps_off_pbes1_3des_sha1 (tests.sappse_test.PySAPPSEv2Test)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test parsing of a v2 PBES1 encrypted PSE with LPS off ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_pse_v2_lps_off_pbes1_3des_sha1_decrypt (tests.sappse_test.PySAPPSEv2Test)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test decryption of a v2 PBES1 encrypted PSE with LPS off ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_pse_v4_lps_off_pbes1_3des_sha1 (tests.sappse_test.PySAPPSEv2Test)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test parsing of a v4 PBES1 encrypted PSE with LPS off ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_saphdbconnection_initialize (tests.saphdb_test.PySAPHDBConnectionTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test HDB Connection initialize ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_scram_pbkdf2sha256_scramble_salt (tests.crypto_test.PySAPCryptoUtilsTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SCRAM-PBKDF2-SHA256 scramble salt calculation. ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | test_scram_sha256_scramble_salt (tests.crypto_test.PySAPCryptoUtilsTest)\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Test SCRAM SHA256 scramble salt calculation. ... ok\n[Build and test pysap/Run unit tests and build wheel-1      ]   | \n[Build and test pysap/Run unit tests and build wheel-1      ]   | ----------------------------------------------------------------------\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Ran 66 tests in 8.475s\n[Build and test pysap/Run unit tests and build wheel-1      ]   | \n[Build and test pysap/Run unit tests and build wheel-1      ]   | OK\n[Build and test pysap/Run unit tests and build wheel-1      ]   \u2705  Success - Main Run unit tests\n[Build and test pysap/Run unit tests and build wheel-1      ] \u2b50 Run Main Build wheel artifact\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-upload-artifact@v2/dist/index.js] user= workdir=\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::Search path '/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/OWASP-pysap/dist'\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::File:/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/OWASP-pysap/dist/pysap-0.1.20.dev0-cp27-cp27mu-linux_x86_64.whl was found using the provided searchPath\n[Build and test pysap/Run unit tests and build wheel-2      ]   | With the provided path, there will be 1 file uploaded\n[Build and test pysap/Run unit tests and build wheel-2      ]   \ud83d\udcac  ::debug::Root artifact directory is /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/OWASP-pysap/dist\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Starting artifact upload\n[Build and test pysap/Run unit tests and build wheel-2      ]   | For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging\n[Build and test pysap/Run unit tests and build wheel-2      ]   | Artifact name is valid!\n[Build and test pysap/Run unit tests and build wheel-2      ]   \u2757  ::error::Unable to get ACTIONS_RUNTIME_TOKEN env variable\n[Build and test pysap/Run unit tests and build wheel-1      ]   | running bdist_wheel\n[Build and test pysap/Run unit tests and build wheel-2      ]   \u274c  Failure - Main Upload wheel artifact\n[Build and test pysap/Run unit tests and build wheel-1      ]   | running build\n[Build and test pysap/Run unit tests and build wheel-1      ]   | running build_py\n[Build and test pysap/Run unit tests and build wheel-1      ]   | running build_ext\n[Build and test pysap/Run unit tests and build wheel-1      ]   | running build_scripts\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying and adjusting bin/pysapcar -> build/scripts-2.7\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying and adjusting bin/pysapgenpse -> build/scripts-2.7\n[Build and test pysap/Run unit tests and build wheel-1      ]   | installing to build/bdist.linux-x86_64/wheel\n[Build and test pysap/Run unit tests and build wheel-1      ]   | running install\n[Build and test pysap/Run unit tests and build wheel-1      ]   | running install_lib\n[Build and test pysap/Run unit tests and build wheel-1      ]   | creating build/bdist.linux-x86_64/wheel\n[Build and test pysap/Run unit tests and build wheel-1      ]   | creating build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPDiagItems.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPEnqueue.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPDiag.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPDiagClient.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPCredv2.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPPSE.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPNI.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPLPS.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPRFC.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPSNC.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPRouter.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/__init__.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPCAR.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPIGS.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPSSFS.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPMS.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   | creating build/bdist.linux-x86_64/wheel/pysap/utils\n[Build and test pysap/Run unit tests and build wheel-1      ]   | creating build/bdist.linux-x86_64/wheel/pysap/utils/crypto\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/utils/crypto/__init__.py -> build/bdist.linux-x86_64/wheel/pysap/utils/crypto\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/utils/crypto/rsec.py -> build/bdist.linux-x86_64/wheel/pysap/utils/crypto\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/utils/fields.py -> build/bdist.linux-x86_64/wheel/pysap/utils\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/utils/console.py -> build/bdist.linux-x86_64/wheel/pysap/utils\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/utils/__init__.py -> build/bdist.linux-x86_64/wheel/pysap/utils\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysap/SAPHDB.py -> build/bdist.linux-x86_64/wheel/pysap\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/lib.linux-x86_64-2.7/pysapcompress.so -> build/bdist.linux-x86_64/wheel\n[Build and test pysap/Run unit tests and build wheel-1      ]   | running install_egg_info\n[Build and test pysap/Run unit tests and build wheel-1      ]   | running egg_info\n[Build and test pysap/Run unit tests and build wheel-1      ]   | writing requirements to pysap.egg-info/requires.txt\n[Build and test pysap/Run unit tests and build wheel-1      ]   | writing pysap.egg-info/PKG-INFO\n[Build and test pysap/Run unit tests and build wheel-1      ]   | writing top-level names to pysap.egg-info/top_level.txt\n[Build and test pysap/Run unit tests and build wheel-1      ]   | writing dependency_links to pysap.egg-info/dependency_links.txt\n[Build and test pysap/Run unit tests and build wheel-1      ]   | reading manifest file 'pysap.egg-info/SOURCES.txt'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | reading manifest template 'MANIFEST.in'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | writing manifest file 'pysap.egg-info/SOURCES.txt'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Copying pysap.egg-info to build/bdist.linux-x86_64/wheel/pysap-0.1.20.dev0-py2.7.egg-info\n[Build and test pysap/Run unit tests and build wheel-1      ]   | running install_scripts\n[Build and test pysap/Run unit tests and build wheel-1      ]   | creating build/bdist.linux-x86_64/wheel/pysap-0.1.20.dev0.data\n[Build and test pysap/Run unit tests and build wheel-1      ]   | creating build/bdist.linux-x86_64/wheel/pysap-0.1.20.dev0.data/scripts\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/scripts-2.7/pysapgenpse -> build/bdist.linux-x86_64/wheel/pysap-0.1.20.dev0.data/scripts\n[Build and test pysap/Run unit tests and build wheel-1      ]   | copying build/scripts-2.7/pysapcar -> build/bdist.linux-x86_64/wheel/pysap-0.1.20.dev0.data/scripts\n[Build and test pysap/Run unit tests and build wheel-1      ]   | changing mode of build/bdist.linux-x86_64/wheel/pysap-0.1.20.dev0.data/scripts/pysapgenpse to 755\n[Build and test pysap/Run unit tests and build wheel-1      ]   | changing mode of build/bdist.linux-x86_64/wheel/pysap-0.1.20.dev0.data/scripts/pysapcar to 755\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding license file \"COPYING\" (matched pattern \"COPYING*\")\n[Build and test pysap/Run unit tests and build wheel-1      ]   | creating build/bdist.linux-x86_64/wheel/pysap-0.1.20.dev0.dist-info/WHEEL\n[Build and test pysap/Run unit tests and build wheel-1      ]   | creating 'dist/pysap-0.1.20.dev0-cp27-cp27mu-linux_x86_64.whl' and adding 'build/bdist.linux-x86_64/wheel' to it\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysapcompress.so'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/SAPCAR.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/SAPCredv2.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/SAPDiag.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/SAPDiagClient.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/SAPDiagItems.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/SAPEnqueue.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/SAPHDB.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/SAPIGS.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/SAPLPS.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/SAPMS.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/SAPNI.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/SAPPSE.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/SAPRFC.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/SAPRouter.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/SAPSNC.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/SAPSSFS.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/__init__.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/utils/__init__.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/utils/console.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/utils/fields.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/utils/crypto/__init__.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap/utils/crypto/rsec.py'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap-0.1.20.dev0.data/scripts/pysapcar'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap-0.1.20.dev0.data/scripts/pysapgenpse'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap-0.1.20.dev0.dist-info/COPYING'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap-0.1.20.dev0.dist-info/METADATA'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap-0.1.20.dev0.dist-info/WHEEL'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap-0.1.20.dev0.dist-info/top_level.txt'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | adding 'pysap-0.1.20.dev0.dist-info/RECORD'\n[Build and test pysap/Run unit tests and build wheel-1      ]   | removing build/bdist.linux-x86_64/wheel\n[Build and test pysap/Run unit tests and build wheel-1      ]   \u2705  Success - Main Build wheel artifact\n[Build and test pysap/Run unit tests and build wheel-2      ] exitcode '1': failure\n[Build and test pysap/Run unit tests and build wheel-1      ] \u2b50 Run Main Upload wheel artifact\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-upload-artifact@v2/ dst=/var/run/act/actions/actions-upload-artifact@v2/\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-upload-artifact@v2/] user=0 workdir=\n[Build and test pysap/Run unit tests and build wheel-2      ] \ud83c\udfc1  Job failed\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-upload-artifact@v2/dist/index.js] user= workdir=\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::Search path '/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/OWASP-pysap/dist'\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::File:/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/OWASP-pysap/dist/pysap-0.1.20.dev0-cp27-cp27mu-linux_x86_64.whl was found using the provided searchPath\n[Build and test pysap/Run unit tests and build wheel-1      ]   | With the provided path, there will be 1 file uploaded\n[Build and test pysap/Run unit tests and build wheel-1      ]   \ud83d\udcac  ::debug::Root artifact directory is /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/OWASP-pysap/dist\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Starting artifact upload\n[Build and test pysap/Run unit tests and build wheel-1      ]   | For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging\n[Build and test pysap/Run unit tests and build wheel-1      ]   | Artifact name is valid!\n[Build and test pysap/Run unit tests and build wheel-1      ]   \u2757  ::error::Unable to get ACTIONS_RUNTIME_TOKEN env variable\n[Build and test pysap/Run unit tests and build wheel-1      ]   \u274c  Failure - Main Upload wheel artifact\n[Build and test pysap/Run unit tests and build wheel-1      ] exitcode '1': failure\n[Build and test pysap/Run unit tests and build wheel-1      ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Build documentation and source package' failed\n"
}