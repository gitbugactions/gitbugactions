{
    "repository": "peplin/pygatt",
    "clone_url": "https://github.com/peplin/pygatt.git",
    "timestamp": "2023-05-29T15:27:15.920700Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Run unit tests and lint/tests] \ud83d\ude80  Start image=crawlergpt:latest\n[Run unit tests and lint/tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Run unit tests and lint/tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run unit tests and lint/tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run unit tests and lint/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/peplin-pygatt] user=0 workdir=\n[Run unit tests and lint/tests]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[Run unit tests and lint/tests] \ud83e\uddea  Matrix: map[python-version:2.7]\n[Run unit tests and lint/tests] \u2b50 Run Main actions/checkout@v2\n[Run unit tests and lint/tests]   \u2705  Success - Main actions/checkout@v2\n[Run unit tests and lint/tests] \u2b50 Run Main Set up Python 2.7\n[Run unit tests and lint/tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[Run unit tests and lint/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[Run unit tests and lint/tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[Run unit tests and lint/tests]   \ud83d\udcac  ::debug::Semantic version spec of 2.7 is 2.7\n[Run unit tests and lint/tests]   \ud83d\udcac  ::debug::isExplicit: \n[Run unit tests and lint/tests]   \ud83d\udcac  ::debug::explicit? false\n[Run unit tests and lint/tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Run unit tests and lint/tests]   \ud83d\udcac  ::debug::explicit? true\n[Run unit tests and lint/tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Run unit tests and lint/tests]   \ud83d\udcac  ::debug::explicit? true\n[Run unit tests and lint/tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Run unit tests and lint/tests]   \ud83d\udcac  ::debug::explicit? true\n[Run unit tests and lint/tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Run unit tests and lint/tests]   \ud83d\udcac  ::debug::explicit? true\n[Run unit tests and lint/tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Run unit tests and lint/tests]   \ud83d\udcac  ::debug::explicit? true\n[Run unit tests and lint/tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Run unit tests and lint/tests]   \ud83d\udcac  ::debug::explicit? true\n[Run unit tests and lint/tests]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Run unit tests and lint/tests]   \ud83d\udcac  ::debug::matched: 2.7.18\n[Run unit tests and lint/tests]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/2.7.18/x64\n[Run unit tests and lint/tests]   \ud83d\udcac  ::debug::Found tool in cache Python 2.7.18 x64\n[Run unit tests and lint/tests]   | Successfully setup CPython (2.7.18)\n[Run unit tests and lint/tests]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[Run unit tests and lint/tests]   \u2705  Success - Main Set up Python 2.7\n[Run unit tests and lint/tests]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/2.7.18/x64\n[Run unit tests and lint/tests]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/2.7.18/x64/lib\n[Run unit tests and lint/tests]   \u2699  ::set-output:: python-version=2.7.18\n[Run unit tests and lint/tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64\n[Run unit tests and lint/tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64/bin\n[Run unit tests and lint/tests] \u2b50 Run Main Install Tox and any other packages\n[Run unit tests and lint/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Run unit tests and lint/tests]   | DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.\n[Run unit tests and lint/tests]   | Collecting tox\n[Run unit tests and lint/tests]   |   Downloading tox-3.28.0-py2.py3-none-any.whl (86 kB)\n[Run unit tests and lint/tests]   | Collecting filelock>=3.0.0\n[Run unit tests and lint/tests]   |   Downloading filelock-3.2.1-py2.py3-none-any.whl (9.3 kB)\n[Run unit tests and lint/tests]   | Collecting pluggy>=0.12.0\n[Run unit tests and lint/tests]   |   Downloading pluggy-0.13.1-py2.py3-none-any.whl (18 kB)\n[Run unit tests and lint/tests]   | Collecting virtualenv!=20.0.0,!=20.0.1,!=20.0.2,!=20.0.3,!=20.0.4,!=20.0.5,!=20.0.6,!=20.0.7,>=16.0.0\n[Run unit tests and lint/tests]   |   Downloading virtualenv-20.15.1-py2.py3-none-any.whl (10.1 MB)\n[Run unit tests and lint/tests]   | Collecting packaging>=14\n[Run unit tests and lint/tests]   |   Downloading packaging-20.9-py2.py3-none-any.whl (40 kB)\n[Run unit tests and lint/tests]   | Collecting importlib-metadata>=0.12; python_version < \"3.8\"\n[Run unit tests and lint/tests]   |   Downloading importlib_metadata-2.1.3-py2.py3-none-any.whl (10 kB)\n[Run unit tests and lint/tests]   | Collecting py>=1.4.17\n[Run unit tests and lint/tests]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[Run unit tests and lint/tests]   | Collecting six>=1.14.0\n[Run unit tests and lint/tests]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[Run unit tests and lint/tests]   | Collecting toml>=0.10.2; python_version <= \"3.6\"\n[Run unit tests and lint/tests]   |   Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\n[Run unit tests and lint/tests]   | Collecting platformdirs<3,>=2\n[Run unit tests and lint/tests]   |   Downloading platformdirs-2.0.2-py2.py3-none-any.whl (10 kB)\n[Run unit tests and lint/tests]   | Collecting importlib-resources>=1.0; python_version < \"3.7\"\n[Run unit tests and lint/tests]   |   Downloading importlib_resources-3.3.1-py2.py3-none-any.whl (26 kB)\n[Run unit tests and lint/tests]   | Collecting distlib<1,>=0.3.1\n[Run unit tests and lint/tests]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[Run unit tests and lint/tests]   | Collecting pathlib2<3,>=2.3.3; python_version < \"3.4\" and sys_platform != \"win32\"\n[Run unit tests and lint/tests]   |   Downloading pathlib2-2.3.7.post1-py2.py3-none-any.whl (18 kB)\n[Run unit tests and lint/tests]   | Collecting pyparsing>=2.0.2\n[Run unit tests and lint/tests]   |   Downloading pyparsing-2.4.7-py2.py3-none-any.whl (67 kB)\n[Run unit tests and lint/tests]   | Collecting contextlib2; python_version < \"3\"\n[Run unit tests and lint/tests]   |   Downloading contextlib2-0.6.0.post1-py2.py3-none-any.whl (9.8 kB)\n[Run unit tests and lint/tests]   | Collecting zipp>=0.5\n[Run unit tests and lint/tests]   |   Downloading zipp-1.2.0-py2.py3-none-any.whl (4.8 kB)\n[Run unit tests and lint/tests]   | Collecting configparser>=3.5; python_version < \"3\"\n[Run unit tests and lint/tests]   |   Downloading configparser-4.0.2-py2.py3-none-any.whl (22 kB)\n[Run unit tests and lint/tests]   | Collecting typing; python_version < \"3.5\"\n[Run unit tests and lint/tests]   |   Downloading typing-3.10.0.0-py2-none-any.whl (26 kB)\n[Run unit tests and lint/tests]   | Collecting singledispatch; python_version < \"3.4\"\n[Run unit tests and lint/tests]   |   Downloading singledispatch-3.7.0-py2.py3-none-any.whl (9.2 kB)\n[Run unit tests and lint/tests]   | Collecting scandir; python_version < \"3.5\"\n[Run unit tests and lint/tests]   |   Downloading scandir-1.10.0.tar.gz (33 kB)\n[Run unit tests and lint/tests]   | Using legacy 'setup.py install' for scandir, since package 'wheel' is not installed.\n[Run unit tests and lint/tests]   | Installing collected packages: filelock, contextlib2, zipp, configparser, typing, scandir, six, pathlib2, importlib-metadata, pluggy, platformdirs, singledispatch, importlib-resources, distlib, virtualenv, pyparsing, packaging, py, toml, tox\n[Run unit tests and lint/tests]   |     Running setup.py install for scandir: started\n[Run unit tests and lint/tests]   |     Running setup.py install for scandir: finished with status 'done'\n[Run unit tests and lint/tests]   | Successfully installed configparser-4.0.2 contextlib2-0.6.0.post1 distlib-0.3.6 filelock-3.2.1 importlib-metadata-2.1.3 importlib-resources-3.3.1 packaging-20.9 pathlib2-2.3.7.post1 platformdirs-2.0.2 pluggy-0.13.1 py-1.11.0 pyparsing-2.4.7 scandir-1.10.0 singledispatch-3.7.0 six-1.16.0 toml-0.10.2 tox-3.28.0 typing-3.10.0.0 virtualenv-20.15.1 zipp-1.2.0\n[Run unit tests and lint/tests]   \u2705  Success - Main Install Tox and any other packages\n[Run unit tests and lint/tests] \u2b50 Run Main Run Tox\n[Run unit tests and lint/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Run unit tests and lint/tests]   | No handlers could be found for logger \"filelock\"\n[Run unit tests and lint/tests]   | GLOB sdist-make: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/peplin-pygatt/setup.py\n[Run unit tests and lint/tests]   | py create: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/peplin-pygatt/.tox/py\n[Run unit tests and lint/tests]   | py installdeps: -r/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/peplin-pygatt/requirements.txt, pexpect\n[Run unit tests and lint/tests]   | py inst: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/peplin-pygatt/.tox/.tmp/package/1/pygatt-4.0.5.zip\n[Run unit tests and lint/tests]   | py installed: DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.,astroid==1.6.6,backports.functools-lru-cache==1.6.4,coverage==5.5,enum-compat==0.0.3,enum34==1.1.10,flake8==2.1.0,funcsigs==1.0.2,lazy-object-proxy==1.6.0,logilab-common==1.4.4,mccabe==0.6.1,mock==3.0.5,nose==1.3.7,pep8==1.7.1,pexpect==4.8.0,ptyprocess==0.7.0,pyflakes==2.4.0,pygatt @ file:///tmp/de65f406-fe28-11ed-a890-af2cc187fc11/peplin-pygatt/.tox/.tmp/package/1/pygatt-4.0.5.zip,pylint==1.2.1,pyserial==3.5,singledispatch==3.7.0,six==1.16.0,wrapt==1.15.0\n[Run unit tests and lint/tests]   | py run-test-pre: PYTHONHASHSEED='127097797'\n[Run unit tests and lint/tests]   | py run-test: commands[0] | nosetests tests\n[Run unit tests and lint/tests]   | test_convert (tests.bgapi.test_bgapi.BGAPIAddressToHexTests) ... ok\n[Run unit tests and lint/tests]   | test_clear_bonds (tests.bgapi.test_bgapi.BGAPIBackendTests) ... ok\n[Run unit tests and lint/tests]   | clear_bonds shouldn't abort if disconnected. ... ok\n[Run unit tests and lint/tests]   | test_connect (tests.bgapi.test_bgapi.BGAPIBackendTests) ... ok\n[Run unit tests and lint/tests]   | test_connect_already_connected (tests.bgapi.test_bgapi.BGAPIBackendTests) ... ok\n[Run unit tests and lint/tests]   | test_reset_and_reconnect (tests.bgapi.test_bgapi.BGAPIBackendTests) ... ok\n[Run unit tests and lint/tests]   | test_scan_and_get_devices_discovered (tests.bgapi.test_bgapi.BGAPIBackendTests) ... ok\n[Run unit tests and lint/tests]   | test_serial_port_connection_failure (tests.bgapi.test_bgapi.BGAPIBackendTests) ... Exception in thread Thread-7:\n[Run unit tests and lint/tests]   | Traceback (most recent call last):\n[Run unit tests and lint/tests]   |   File \"/opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\n[Run unit tests and lint/tests]   |     self.run()\n[Run unit tests and lint/tests]   |   File \"/opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/threading.py\", line 754, in run\n[Run unit tests and lint/tests]   |     self.__target(*self.__args, **self.__kwargs)\n[Run unit tests and lint/tests]   |   File \"/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/peplin-pygatt/pygatt/backends/bgapi/bgapi.py\", line 652, in _receive\n[Run unit tests and lint/tests]   |     packet = self._lib.parse_byte(self._ser.read())\n[Run unit tests and lint/tests]   |   File \"/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/peplin-pygatt/.tox/py/lib/python2.7/site-packages/mock/mock.py\", line 1092, in __call__\n[Run unit tests and lint/tests]   |     return _mock_self._mock_call(*args, **kwargs)\n[Run unit tests and lint/tests]   |   File \"/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/peplin-pygatt/.tox/py/lib/python2.7/site-packages/mock/mock.py\", line 1143, in _mock_call\n[Run unit tests and lint/tests]   |     raise effect\n[Run unit tests and lint/tests]   | SerialException\n[Run unit tests and lint/tests]   | \n[Run unit tests and lint/tests]   | ok\n[Run unit tests and lint/tests]   | test_decode_invalid (tests.bgapi.test_bgapi.DecodePacketTests) ... ok\n[Run unit tests and lint/tests]   | test_decode_scan_packet (tests.bgapi.test_bgapi.DecodePacketTests) ... ok\n[Run unit tests and lint/tests]   | test_unrecognized_return_code (tests.bgapi.test_bgapi.ReturnCodeTests) ... ok\n[Run unit tests and lint/tests]   | test_invalid (tests.bgapi.test_bgapi.UsbInfoStringParsingTests) ... ok\n[Run unit tests and lint/tests]   | test_linux (tests.bgapi.test_bgapi.UsbInfoStringParsingTests) ... ok\n[Run unit tests and lint/tests]   | test_mac (tests.bgapi.test_bgapi.UsbInfoStringParsingTests) ... ok\n[Run unit tests and lint/tests]   | test_weird_platform (tests.bgapi.test_bgapi.UsbInfoStringParsingTests) ... ok\n[Run unit tests and lint/tests]   | test_bond (tests.bgapi.test_device.BGAPIDeviceTests) ... ok\n[Run unit tests and lint/tests]   | test_char_read (tests.bgapi.test_device.BGAPIDeviceTests) ... ok\n[Run unit tests and lint/tests]   | test_char_write (tests.bgapi.test_device.BGAPIDeviceTests) ... ok\n[Run unit tests and lint/tests]   | test_disconnect_when_connected (tests.bgapi.test_device.BGAPIDeviceTests) ... ok\n[Run unit tests and lint/tests]   | test_discover_characteristics (tests.bgapi.test_device.BGAPIDeviceTests) ... ok\n[Run unit tests and lint/tests]   | test_get_rssi (tests.bgapi.test_device.BGAPIDeviceTests) ... ok\n[Run unit tests and lint/tests]   | test_read_nonstandard_4byte_char (tests.bgapi.test_device.BGAPIDeviceTests) ... ok\n[Run unit tests and lint/tests]   | test_read_timeout_wrong_handle (tests.bgapi.test_device.BGAPIDeviceTests) ... ok\n[Run unit tests and lint/tests]   | test_auto_reconnect (tests.gatttool.test_backend.GATTToolBackendTests) ... ok\n[Run unit tests and lint/tests]   | test_auto_reconnect_call (tests.gatttool.test_backend.GATTToolBackendTests) ... ok\n[Run unit tests and lint/tests]   | test_connect (tests.gatttool.test_backend.GATTToolBackendTests) ... ok\n[Run unit tests and lint/tests]   | test_disconnect_callback (tests.gatttool.test_backend.GATTToolBackendTests) ... ok\n[Run unit tests and lint/tests]   | test_empty_notification (tests.gatttool.test_backend.GATTToolBackendTests) ... ok\n[Run unit tests and lint/tests]   | test_indication (tests.gatttool.test_backend.GATTToolBackendTests) ... ok\n[Run unit tests and lint/tests]   | test_malformed_notification (tests.gatttool.test_backend.GATTToolBackendTests) ... ok\n[Run unit tests and lint/tests]   | test_multi_byte_notification (tests.gatttool.test_backend.GATTToolBackendTests) ... ok\n[Run unit tests and lint/tests]   | test_no_reconnect_default (tests.gatttool.test_backend.GATTToolBackendTests) ... ok\n[Run unit tests and lint/tests]   | test_no_reconnect_disconnect (tests.gatttool.test_backend.GATTToolBackendTests) ... ok\n[Run unit tests and lint/tests]   | test_scan (tests.gatttool.test_backend.GATTToolBackendTests) ... ok\n[Run unit tests and lint/tests]   | test_single_byte_notification (tests.gatttool.test_backend.GATTToolBackendTests) ... ok\n[Run unit tests and lint/tests]   | test_additional_disconnect_callback (tests.gatttool.test_device.GATTToolBLEDeviceTests) ... ok\n[Run unit tests and lint/tests]   | test_bond (tests.gatttool.test_device.GATTToolBLEDeviceTests) ... ok\n[Run unit tests and lint/tests]   | test_char_read (tests.gatttool.test_device.GATTToolBLEDeviceTests) ... ok\n[Run unit tests and lint/tests]   | test_char_write (tests.gatttool.test_device.GATTToolBLEDeviceTests) ... ok\n[Run unit tests and lint/tests]   | test_disconnect (tests.gatttool.test_device.GATTToolBLEDeviceTests) ... ok\n[Run unit tests and lint/tests]   | test_get_cached_handle (tests.gatttool.test_device.GATTToolBLEDeviceTests) ... ok\n[Run unit tests and lint/tests]   | test_get_handle (tests.gatttool.test_device.GATTToolBLEDeviceTests) ... ok\n[Run unit tests and lint/tests]   | test_write_after_disconnect (tests.gatttool.test_device.GATTToolBLEDeviceTests) ... ok\n[Run unit tests and lint/tests]   | test_ignore_notification_for_another_handle (tests.test_device.BLEDeviceTest) ... ok\n[Run unit tests and lint/tests]   | test_receive_notification (tests.test_device.BLEDeviceTest) ... ok\n[Run unit tests and lint/tests]   | test_subscribe (tests.test_device.BLEDeviceTest) ... ok\n[Run unit tests and lint/tests]   | test_subscribe_another_callback (tests.test_device.BLEDeviceTest) ... ok\n[Run unit tests and lint/tests]   | test_unicode_get_handle (tests.test_device.BLEDeviceTest) ... ok\n[Run unit tests and lint/tests]   | test_unsubscribe (tests.test_device.BLEDeviceTest) ... ok\n[Run unit tests and lint/tests]   | \n[Run unit tests and lint/tests]   | ----------------------------------------------------------------------\n[Run unit tests and lint/tests]   | Ran 49 tests in 1.912s\n[Run unit tests and lint/tests]   | \n[Run unit tests and lint/tests]   | OK\n[Run unit tests and lint/tests]   | py run-test: commands[1] | flake8\n[Run unit tests and lint/tests]   | ___________________________________ summary ____________________________________\n[Run unit tests and lint/tests]   |   py: commands succeeded\n[Run unit tests and lint/tests]   |   congratulations :)\n[Run unit tests and lint/tests]   \u2705  Success - Main Run Tox\n[Run unit tests and lint/tests] \u2b50 Run Post Set up Python 2.7\n[Run unit tests and lint/tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[Run unit tests and lint/tests]   \u2705  Success - Post Set up Python 2.7\n[Run unit tests and lint/tests] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}