{
    "repository": "davidhalter/jedi",
    "clone_url": "https://github.com/davidhalter/jedi.git",
    "timestamp": "2023-05-29T14:20:54.888326Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[ci/coverage    ] \ud83d\ude80  Start image=crawlergpt:latest\n[ci/code-quality] \ud83d\ude80  Start image=crawlergpt:latest\n[ci/tests       ] \ud83d\ude80  Start image=crawlergpt:latest\n[ci/tests       ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci/code-quality]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci/coverage    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci/tests       ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/code-quality]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/coverage    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/code-quality]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/coverage    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/tests       ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/code-quality]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/davidhalter-jedi] user=0 workdir=\n[ci/coverage    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/davidhalter-jedi] user=0 workdir=\n[ci/tests       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/davidhalter-jedi] user=0 workdir=\n[ci/tests       ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[ci/code-quality] \u2b50 Run Main Checkout code\n[ci/coverage    ] \u2b50 Run Main Checkout code\n[ci/tests       ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[ci/tests       ] \ud83e\uddea  Matrix: map[environment:3.8 os:ubuntu-latest python-version:3.11]\n[ci/code-quality]   \u2705  Success - Main Checkout code\n[ci/coverage    ]   \u2705  Success - Main Checkout code\n[ci/tests       ] \u2b50 Run Main Checkout code\n[ci/tests       ]   \u2705  Success - Main Checkout code\n[ci/code-quality] \u2b50 Run Main Install dependencies\n[ci/coverage    ] \u2b50 Run Main Install dependencies\n[ci/tests       ] \u2b50 Run Main actions/setup-python@v4\n[ci/tests       ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[ci/coverage    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[ci/code-quality]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[ci/tests       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[ci/tests       ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[ci/code-quality]   | Processing /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/davidhalter-jedi\n[ci/coverage    ]   | Processing /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/davidhalter-jedi\n[ci/tests       ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[ci/tests       ]   \u2753  ::group::Installed versions\n[ci/tests       ]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[ci/tests       ]   \ud83d\udcac  ::debug::isExplicit: \n[ci/tests       ]   \ud83d\udcac  ::debug::explicit? false\n[ci/tests       ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[ci/tests       ]   \ud83d\udcac  ::debug::explicit? true\n[ci/tests       ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[ci/tests       ]   \ud83d\udcac  ::debug::explicit? true\n[ci/tests       ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[ci/tests       ]   \ud83d\udcac  ::debug::explicit? true\n[ci/tests       ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[ci/tests       ]   \ud83d\udcac  ::debug::explicit? true\n[ci/tests       ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[ci/tests       ]   \ud83d\udcac  ::debug::explicit? true\n[ci/tests       ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[ci/tests       ]   \ud83d\udcac  ::debug::explicit? true\n[ci/tests       ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[ci/tests       ]   \ud83d\udcac  ::debug::matched: 3.8.11\n[ci/tests       ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[ci/tests       ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[ci/tests       ]   | Successfully set up CPython (3.8.11)\n[ci/tests       ]   \u2753  ::endgroup::\n[ci/tests       ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[ci/code-quality]   |     ERROR: Command errored out with exit status 1:\n[ci/code-quality]   |      command: /usr/bin/python3 -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-req-build-xtvrcrlb/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-req-build-xtvrcrlb/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-req-build-xtvrcrlb/pip-egg-info\n[ci/code-quality]   |          cwd: /tmp/pip-req-build-xtvrcrlb/\n[ci/code-quality]   |     Complete output (5 lines):\n[ci/code-quality]   |     Traceback (most recent call last):\n[ci/code-quality]   |       File \"<string>\", line 1, in <module>\n[ci/code-quality]   |       File \"/tmp/pip-req-build-xtvrcrlb/setup.py\", line 16, in <module>\n[ci/code-quality]   |         assert os.path.isfile(\"jedi/third_party/typeshed/LICENSE\"), \\\n[ci/code-quality]   |     AssertionError: Please download the typeshed submodule first (Hint: git submodule update --init)\n[ci/code-quality]   |     ----------------------------------------\n[ci/tests       ]   \u2705  Success - Main actions/setup-python@v4\n[ci/code-quality]   | ERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n[ci/code-quality]   \u274c  Failure - Main Install dependencies\n[ci/coverage    ]   |     ERROR: Command errored out with exit status 1:\n[ci/coverage    ]   |      command: /usr/bin/python3 -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-req-build-nqacurpz/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-req-build-nqacurpz/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-req-build-nqacurpz/pip-egg-info\n[ci/coverage    ]   |          cwd: /tmp/pip-req-build-nqacurpz/\n[ci/coverage    ]   |     Complete output (5 lines):\n[ci/coverage    ]   |     Traceback (most recent call last):\n[ci/coverage    ]   |       File \"<string>\", line 1, in <module>\n[ci/coverage    ]   |       File \"/tmp/pip-req-build-nqacurpz/setup.py\", line 16, in <module>\n[ci/coverage    ]   |         assert os.path.isfile(\"jedi/third_party/typeshed/LICENSE\"), \\\n[ci/coverage    ]   |     AssertionError: Please download the typeshed submodule first (Hint: git submodule update --init)\n[ci/coverage    ]   |     ----------------------------------------\n[ci/coverage    ]   | ERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n[ci/coverage    ]   \u274c  Failure - Main Install dependencies\n[ci/tests       ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[ci/tests       ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[ci/tests       ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[ci/tests       ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib/pkgconfig\n[ci/tests       ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[ci/tests       ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[ci/tests       ]   \u2699  ::set-output:: python-version=3.8.11\n[ci/tests       ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.8.11/x64/bin/python\n[ci/code-quality] exitcode '1': failure\n[ci/tests       ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[ci/tests       ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[ci/coverage    ] exitcode '1': failure\n[ci/tests       ] \u2b50 Run Main actions/setup-python@v4\n[ci/tests       ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[ci/tests       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[ci/code-quality] \ud83c\udfc1  Job failed\n[ci/coverage    ] \ud83c\udfc1  Job failed\n[ci/tests       ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[ci/tests       ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[ci/tests       ]   \u2753  ::group::Installed versions\n[ci/tests       ]   \ud83d\udcac  ::debug::Semantic version spec of 3.11 is 3.11\n[ci/tests       ]   \ud83d\udcac  ::debug::isExplicit: \n[ci/tests       ]   \ud83d\udcac  ::debug::explicit? false\n[ci/tests       ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[ci/tests       ]   \ud83d\udcac  ::debug::explicit? true\n[ci/tests       ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[ci/tests       ]   \ud83d\udcac  ::debug::explicit? true\n[ci/tests       ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[ci/tests       ]   \ud83d\udcac  ::debug::explicit? true\n[ci/tests       ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[ci/tests       ]   \ud83d\udcac  ::debug::explicit? true\n[ci/tests       ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[ci/tests       ]   \ud83d\udcac  ::debug::explicit? true\n[ci/tests       ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[ci/tests       ]   \ud83d\udcac  ::debug::explicit? true\n[ci/tests       ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[ci/tests       ]   \ud83d\udcac  ::debug::match not found\n[ci/tests       ]   | Version 3.11 was not found in the local cache\n[ci/tests       ]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[ci/tests       ]   \u2757  ::error::API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[ci/tests       ]   \u274c  Failure - Main actions/setup-python@v4\n[ci/tests       ] exitcode '1': failure\n[ci/tests       ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'code-quality' failed\n"
}