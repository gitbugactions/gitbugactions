{
    "repository": "hukkin/tomli",
    "clone_url": "https://github.com/hukkin/tomli.git",
    "timestamp": "2023-05-29T16:33:41.157304Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Tests/coverage] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests/linters ] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests/tests   ] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests/linters ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests/tests   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests/coverage]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests/linters ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/coverage]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/tests   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/tests   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/linters ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/coverage]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/tests   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/hukkin-tomli] user=0 workdir=\n[Tests/linters ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/hukkin-tomli] user=0 workdir=\n[Tests/tests   ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v3\n[Tests/linters ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v3\n[Tests/tests   ] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:pypy-3.7]\n[Tests/tests   ] \u2b50 Run Main actions/checkout@v3\n[Tests/tests   ]   \u2705  Success - Main actions/checkout@v3\n[Tests/linters ] \u2b50 Run Main actions/checkout@v3\n[Tests/linters ]   \u2705  Success - Main actions/checkout@v3\n[Tests/tests   ] \u2b50 Run Main Set up Python pypy-3.7\n[Tests/tests   ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v3/ dst=/var/run/act/actions/actions-setup-python@v3/\n[Tests/linters ] \u2b50 Run Main actions/setup-python@v3\n[Tests/linters ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v3/ dst=/var/run/act/actions/actions-setup-python@v3/\n[Tests/tests   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v3/] user=0 workdir=\n[Tests/linters ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v3/] user=0 workdir=\n[Tests/tests   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/setup/index.js] user= workdir=\n[Tests/linters ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/setup/index.js] user= workdir=\n[Tests/coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/hukkin-tomli] user=0 workdir=\n[Tests/linters ]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[Tests/linters ]   \ud83d\udcac  ::debug::isExplicit: \n[Tests/linters ]   \ud83d\udcac  ::debug::explicit? false\n[Tests/linters ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Tests/linters ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/linters ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Tests/linters ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/linters ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Tests/linters ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/linters ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Tests/linters ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/linters ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Tests/linters ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/linters ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Tests/linters ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/linters ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Tests/linters ]   \ud83d\udcac  ::debug::matched: 3.8.11\n[Tests/linters ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[Tests/linters ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[Tests/tests   ]   \ud83d\udcac  ::debug::isExplicit: \n[Tests/tests   ]   \ud83d\udcac  ::debug::explicit? false\n[Tests/tests   ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Tests/tests   ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/tests   ]   \ud83d\udcac  ::debug::isExplicit: 3.6.12\n[Tests/tests   ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/tests   ]   \ud83d\udcac  ::debug::isExplicit: 3.7.10\n[Tests/tests   ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/tests   ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Tests/tests   ]   \ud83d\udcac  ::debug::matched: 3.7.10\n[Tests/tests   ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/PyPy/3.7.10/x64\n[Tests/tests   ]   \ud83d\udcac  ::debug::Found tool in cache PyPy 3.7.10 x64\n[Tests/linters ]   | Successfully setup CPython (3.8.11)\n[Tests/linters ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v3/.github/python.json\n[Tests/tests   ]   | Successfully setup PyPy 7.3.5\n[Tests/tests   ]   |  with Python (3.7.10)\n[Tests/tests   ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v3/.github/python.json\n[Tests/linters ]   \u2705  Success - Main actions/setup-python@v3\n[Tests/tests   ]   \u2705  Success - Main Set up Python pypy-3.7\n[Tests/linters ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[Tests/linters ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[Tests/tests   ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/PyPy/3.7.10/x64/bin\n[Tests/linters ]   \u2699  ::set-output:: python-version=3.8.11\n[Tests/tests   ]   \u2699  ::set-output:: python-version=pypy7.3.5\n[Tests/tests   ]   \u2699  ::add-path:: /opt/hostedtoolcache/PyPy/3.7.10/x64/bin\n[Tests/tests   ]   \u2699  ::add-path:: /opt/hostedtoolcache/PyPy/3.7.10/x64/bin\n[Tests/linters ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[Tests/linters ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[Tests/tests   ] \u2b50 Run Main Install package\n[Tests/linters ] \u2b50 Run Main Install pre-commit\n[Tests/linters ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Tests/tests   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Tests/coverage]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v3\n[Tests/linters ]   | Collecting pre-commit\n[Tests/linters ]   |   Downloading pre_commit-3.3.2-py2.py3-none-any.whl (202 kB)\n[Tests/linters ]   | Collecting pyyaml>=5.1\n[Tests/linters ]   |   Downloading PyYAML-6.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (701 kB)\n[Tests/coverage]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v2\n[Tests/linters ]   | Collecting nodeenv>=0.11.1\n[Tests/linters ]   |   Downloading nodeenv-1.8.0-py2.py3-none-any.whl (22 kB)\n[Tests/linters ]   | Collecting cfgv>=2.0.0\n[Tests/linters ]   |   Downloading cfgv-3.3.1-py2.py3-none-any.whl (7.3 kB)\n[Tests/linters ]   | Collecting virtualenv>=20.10.0\n[Tests/linters ]   |   Downloading virtualenv-20.23.0-py3-none-any.whl (3.3 MB)\n[Tests/linters ]   | Collecting identify>=1.0.0\n[Tests/linters ]   |   Downloading identify-2.5.24-py2.py3-none-any.whl (98 kB)\n[Tests/linters ]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (from nodeenv>=0.11.1->pre-commit) (56.0.0)\n[Tests/coverage] \u2b50 Run Main actions/checkout@v3\n[Tests/linters ]   | Collecting platformdirs<4,>=3.2\n[Tests/linters ]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[Tests/linters ]   | Collecting distlib<1,>=0.3.6\n[Tests/linters ]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[Tests/coverage]   \u2705  Success - Main actions/checkout@v3\n[Tests/linters ]   | Collecting filelock<4,>=3.11\n[Tests/linters ]   |   Downloading filelock-3.12.0-py3-none-any.whl (10 kB)\n[Tests/linters ]   | Installing collected packages: platformdirs, filelock, distlib, virtualenv, pyyaml, nodeenv, identify, cfgv, pre-commit\n[Tests/coverage] \u2b50 Run Main actions/setup-python@v3\n[Tests/coverage]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v3/ dst=/var/run/act/actions/actions-setup-python@v3/\n[Tests/linters ]   | Successfully installed cfgv-3.3.1 distlib-0.3.6 filelock-3.12.0 identify-2.5.24 nodeenv-1.8.0 platformdirs-3.5.1 pre-commit-3.3.2 pyyaml-6.0 virtualenv-20.23.0\n[Tests/tests   ]   | Processing /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/hukkin-tomli\n[Tests/tests   ]   |   DEPRECATION: A future pip version will change local packages to be built in-place without first copying to a temporary directory. We recommend you use --use-feature=in-tree-build to test your packages with this new behavior before it becomes the default.\n[Tests/tests   ]   |    pip 21.3 will remove support for this functionality. You can find discussion regarding this at https://github.com/pypa/pip/issues/7555.\n[Tests/linters ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Tests/linters ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.8.11/x64/bin/python -m pip install --upgrade pip' command.\n[Tests/coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v3/] user=0 workdir=\n[Tests/linters ]   \u2705  Success - Main Install pre-commit\n[Tests/tests   ]   |   Installing build dependencies: started\n[Tests/linters ] \u2b50 Run Main run linters\n[Tests/linters ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Tests/tests   ]   |   Installing build dependencies: finished with status 'done'\n[Tests/tests   ]   |   Getting requirements to build wheel: started\n[Tests/tests   ]   |   Getting requirements to build wheel: finished with status 'done'\n[Tests/tests   ]   |     Preparing wheel metadata: started\n[Tests/tests   ]   |     Preparing wheel metadata: finished with status 'done'\n[Tests/tests   ]   | Building wheels for collected packages: tomli\n[Tests/tests   ]   |   Building wheel for tomli (PEP 517): started\n[Tests/tests   ]   |   Building wheel for tomli (PEP 517): finished with status 'done'\n[Tests/tests   ]   |   Created wheel for tomli: filename=tomli-2.0.1-py3-none-any.whl size=13484 sha256=001defb8ea5c33be0f0b5794b60d81caaace940da39af9a9e71774856e92a642\n[Tests/tests   ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/d4/7a/67/354951b453353007871eae733e559570a95242d67504a4fa4a\n[Tests/tests   ]   | Successfully built tomli\n[Tests/tests   ]   | Installing collected packages: tomli\n[Tests/tests   ]   | Successfully installed tomli-2.0.1\n[Tests/tests   ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Tests/tests   ]   | You should consider upgrading via the '/opt/hostedtoolcache/PyPy/3.7.10/x64/bin/python -m pip install --upgrade pip' command.\n[Tests/tests   ]   \u2705  Success - Main Install package\n[Tests/tests   ] \u2b50 Run Main Test with unittest\n[Tests/tests   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Tests/coverage]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/setup/index.js] user= workdir=\n[Tests/linters ]   | [INFO] Initializing environment for https://github.com/Lucas-C/pre-commit-hooks.\n[Tests/linters ]   | [INFO] Initializing environment for https://github.com/executablebooks/mdformat.\n[Tests/linters ]   | [INFO] Initializing environment for https://github.com/executablebooks/mdformat:mdformat-toc,mdformat-gfm,mdformat-black.\n[Tests/linters ]   | [INFO] Initializing environment for https://github.com/asottile/yesqa.\n[Tests/linters ]   | [INFO] Initializing environment for https://github.com/asottile/yesqa:flake8-bugbear,flake8-builtins,flake8-comprehensions.\n[Tests/coverage]   \ud83d\udcac  ::debug::Semantic version spec of 3.10 is 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::isExplicit: \n[Tests/coverage]   \ud83d\udcac  ::debug::explicit? false\n[Tests/coverage]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Tests/coverage]   \ud83d\udcac  ::debug::explicit? true\n[Tests/coverage]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Tests/coverage]   \ud83d\udcac  ::debug::explicit? true\n[Tests/coverage]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Tests/coverage]   \ud83d\udcac  ::debug::explicit? true\n[Tests/coverage]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Tests/coverage]   \ud83d\udcac  ::debug::explicit? true\n[Tests/coverage]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Tests/coverage]   \ud83d\udcac  ::debug::explicit? true\n[Tests/coverage]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Tests/coverage]   \ud83d\udcac  ::debug::explicit? true\n[Tests/coverage]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Tests/coverage]   \ud83d\udcac  ::debug::match not found\n[Tests/coverage]   | Version 3.10 was not found in the local cache\n[Tests/linters ]   | [INFO] Initializing environment for https://github.com/MarcoGorelli/absolufy-imports.\n[Tests/tests   ]   | .............\n[Tests/tests   ]   | ----------------------------------------------------------------------\n[Tests/tests   ]   | Ran 13 tests in 0.292s\n[Tests/tests   ]   | \n[Tests/tests   ]   | OK\n[Tests/tests   ]   \u2705  Success - Main Test with unittest\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.12.0-beta.1 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.12.0-alpha.7 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.12.0-alpha.6 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.12.0-alpha.5 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.12.0-alpha.4 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.12.0-alpha.3 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.12.0-alpha.2 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.12.0-alpha.1 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.11.3 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.11.2 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.11.1 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.11.0 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.11.0-rc.2 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.11.0-rc.1 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.11.0-beta.5 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.11.0-beta.4 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.11.0-beta.3 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.11.0-beta.2 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.11.0-beta.1 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.11.0-alpha.7 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.11.0-alpha.6 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.11.0-alpha.5 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.11.0-alpha.4 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.11.0-alpha.3 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.11.0-alpha.2 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.11.0-alpha.1 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::check 3.10.11 satisfies 3.10\n[Tests/coverage]   \ud83d\udcac  ::debug::arm64===x64 && darwin===linux\n[Tests/coverage]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[Tests/coverage]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[Tests/coverage]   \ud83d\udcac  ::debug::matched 3.10.11\n[Tests/coverage]   | Version 3.10 is available for downloading\n[Tests/coverage]   | Download from \"https://github.com/actions/python-versions/releases/download/3.10.11-4626646535/python-3.10.11-linux-20.04-x64.tar.gz\"\n[Tests/coverage]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/python-versions/releases/download/3.10.11-4626646535/python-3.10.11-linux-20.04-x64.tar.gz\n[Tests/coverage]   \ud83d\udcac  ::debug::Destination /tmp/6db00af1-390d-49dd-a0fc-f2035cca0972\n[Tests/linters ]   | [INFO] Initializing environment for https://github.com/PyCQA/isort.\n[Tests/tests   ] \u2b50 Run Post Set up Python pypy-3.7\n[Tests/tests   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/cache-save/index.js] user= workdir=\n[Tests/linters ]   | [INFO] Initializing environment for https://github.com/psf/black.\n[Tests/coverage]   \ud83d\udcac  ::debug::download complete\n[Tests/coverage]   | Extract downloaded archive\n[Tests/coverage]   \ud83d\udcac  ::debug::Checking tar --version\n[Tests/coverage]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Tests/coverage]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/673744ab-4c0d-4312-8c4b-b7949674e7bd -f /tmp/6db00af1-390d-49dd-a0fc-f2035cca0972\n[Tests/linters ]   | [INFO] Initializing environment for https://github.com/myint/docformatter.\n[Tests/linters ]   | [INFO] Initializing environment for https://github.com/pre-commit/pre-commit-hooks.\n[Tests/linters ]   | [INFO] Initializing environment for https://github.com/pre-commit/pygrep-hooks.\n[Tests/coverage]   | Execute installation script\n[Tests/coverage]   | Check if Python hostedtoolcache folder exist...\n[Tests/coverage]   | Create Python 3.10.11 folder\n[Tests/coverage]   | Copy Python binaries to hostedtoolcache folder\n[Tests/linters ]   | [INFO] Initializing environment for https://github.com/PyCQA/flake8.\n[Tests/coverage]   | Create additional symlinks (Required for the UsePythonVersion Azure Pipelines task and the setup-python GitHub Action)\n[Tests/coverage]   | Upgrading pip...\n[Tests/coverage]   | Looking in links: /tmp/tmpv7d5g9ld\n[Tests/coverage]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages (65.5.0)\n[Tests/coverage]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages (23.0.1)\n[Tests/linters ]   | [INFO] Initializing environment for https://github.com/PyCQA/flake8:flake8-bugbear,flake8-builtins,flake8-comprehensions.\n[Tests/linters ]   | [INFO] Initializing environment for https://github.com/pre-commit/mirrors-mypy.\n[Tests/coverage]   | Collecting pip\n[Tests/coverage]   | Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[Tests/coverage]   | \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 16.8 MB/s eta 0:00:00\n[Tests/coverage]   | \n[Tests/coverage]   | Installing collected packages: pip\n[Tests/linters ]   | [INFO] Installing environment for https://github.com/Lucas-C/pre-commit-hooks.\n[Tests/linters ]   | [INFO] Once installed this environment will be reused.\n[Tests/linters ]   | [INFO] This may take a few minutes...\n[Tests/coverage]   | Successfully installed pip-23.1.2\n[Tests/coverage]   | Create complete file\n[Tests/coverage]   \ud83d\udcac  ::debug::isExplicit: \n[Tests/coverage]   \ud83d\udcac  ::debug::explicit? false\n[Tests/coverage]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Tests/coverage]   \ud83d\udcac  ::debug::explicit? true\n[Tests/coverage]   \ud83d\udcac  ::debug::isExplicit: 3.10.11\n[Tests/coverage]   \ud83d\udcac  ::debug::explicit? true\n[Tests/coverage]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Tests/coverage]   \ud83d\udcac  ::debug::explicit? true\n[Tests/coverage]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Tests/coverage]   \ud83d\udcac  ::debug::explicit? true\n[Tests/coverage]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Tests/coverage]   \ud83d\udcac  ::debug::explicit? true\n[Tests/coverage]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Tests/coverage]   \ud83d\udcac  ::debug::explicit? true\n[Tests/coverage]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Tests/coverage]   \ud83d\udcac  ::debug::explicit? true\n[Tests/coverage]   \ud83d\udcac  ::debug::evaluating 7 versions\n[Tests/coverage]   \ud83d\udcac  ::debug::matched: 3.10.11\n[Tests/coverage]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.10.11/x64\n[Tests/coverage]   \ud83d\udcac  ::debug::Found tool in cache Python 3.10.11 x64\n[Tests/coverage]   | Successfully setup CPython (3.10.11)\n[Tests/coverage]   \u2753 add-matcher /run/act/actions/actions-setup-python@v3/.github/python.json\n[Tests/coverage]   \u2705  Success - Main actions/setup-python@v3\n[Tests/tests   ]   \u2705  Success - Post Set up Python pypy-3.7\n[Tests/coverage]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.10.11/x64\n[Tests/coverage]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.10.11/x64/lib\n[Tests/coverage]   \u2699  ::set-output:: python-version=3.10.11\n[Tests/coverage]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.11/x64\n[Tests/coverage]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.11/x64/bin\n[Tests/coverage] \u2b50 Run Main Install package and coverage deps\n[Tests/coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Tests/linters ]   | [INFO] Installing environment for https://github.com/executablebooks/mdformat.\n[Tests/linters ]   | [INFO] Once installed this environment will be reused.\n[Tests/linters ]   | [INFO] This may take a few minutes...\n[Tests/tests   ] \ud83c\udfc1  Job succeeded\n[Tests/coverage]   | Processing /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/hukkin-tomli\n[Tests/coverage]   |   Installing build dependencies: started\n[Tests/coverage]   |   Installing build dependencies: finished with status 'done'\n[Tests/coverage]   |   Getting requirements to build wheel: started\n[Tests/coverage]   |   Getting requirements to build wheel: finished with status 'done'\n[Tests/coverage]   |   Preparing metadata (pyproject.toml): started\n[Tests/coverage]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[Tests/coverage]   | Collecting coverage\n[Tests/coverage]   |   Downloading coverage-7.2.6-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (228 kB)\n[Tests/coverage]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 228.7/228.7 kB 5.4 MB/s eta 0:00:00\n[Tests/coverage]   | Building wheels for collected packages: tomli\n[Tests/coverage]   |   Building wheel for tomli (pyproject.toml): started\n[Tests/coverage]   |   Building wheel for tomli (pyproject.toml): finished with status 'done'\n[Tests/coverage]   |   Created wheel for tomli: filename=tomli-2.0.1-py3-none-any.whl size=13484 sha256=001defb8ea5c33be0f0b5794b60d81caaace940da39af9a9e71774856e92a642\n[Tests/coverage]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/15/b2/ae/a6665213265a51659045624277d56e5a246ee36989b031efc1\n[Tests/coverage]   | Successfully built tomli\n[Tests/coverage]   | Installing collected packages: tomli, coverage\n[Tests/coverage]   | Successfully installed coverage-7.2.6 tomli-2.0.1\n[Tests/coverage]   | \n[Tests/coverage]   | [notice] A new release of pip is available: 23.0.1 -> 23.1.2\n[Tests/coverage]   | [notice] To update, run: pip install --upgrade pip\n[Tests/coverage]   \u2705  Success - Main Install package and coverage deps\n[Tests/coverage] \u2b50 Run Main Measure coverage\n[Tests/linters ]   | [INFO] Installing environment for https://github.com/asottile/yesqa.\n[Tests/linters ]   | [INFO] Once installed this environment will be reused.\n[Tests/linters ]   | [INFO] This may take a few minutes...\n[Tests/coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Tests/linters ]   | [INFO] Installing environment for https://github.com/MarcoGorelli/absolufy-imports.\n[Tests/linters ]   | [INFO] Once installed this environment will be reused.\n[Tests/linters ]   | [INFO] This may take a few minutes...\n[Tests/linters ]   | [INFO] Installing environment for https://github.com/PyCQA/isort.\n[Tests/linters ]   | [INFO] Once installed this environment will be reused.\n[Tests/linters ]   | [INFO] This may take a few minutes...\n[Tests/coverage]   | .............\n[Tests/coverage]   | ----------------------------------------------------------------------\n[Tests/coverage]   | Ran 13 tests in 0.027s\n[Tests/coverage]   | \n[Tests/coverage]   | OK\n[Tests/coverage]   | Name                                                                                     Stmts   Miss Branch BrPart  Cover\n[Tests/coverage]   | --------------------------------------------------------------------------------------------------------------------------\n[Tests/coverage]   | /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/tomli/__init__.py       4      0      0      0   100%\n[Tests/coverage]   | /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/tomli/_parser.py      464      0    182      0   100%\n[Tests/coverage]   | /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/tomli/_re.py           35      0      8      0   100%\n[Tests/coverage]   | /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/tomli/_types.py         4      0      0      0   100%\n[Tests/coverage]   | --------------------------------------------------------------------------------------------------------------------------\n[Tests/coverage]   | TOTAL                                                                                      507      0    190      0   100%\n[Tests/coverage]   \u2705  Success - Main Measure coverage\n[Tests/coverage] \u2b50 Run Main Report coverage\n[Tests/coverage]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/codecov-codecov-action@v2/ dst=/var/run/act/actions/codecov-codecov-action@v2/\n[Tests/coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/codecov-codecov-action@v2/] user=0 workdir=\n[Tests/linters ]   | [INFO] Installing environment for https://github.com/psf/black.\n[Tests/linters ]   | [INFO] Once installed this environment will be reused.\n[Tests/linters ]   | [INFO] This may take a few minutes...\n[Tests/coverage]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v2/dist/index.js] user= workdir=\n[Tests/coverage]   | ==> linux OS detected\n[Tests/linters ]   | [INFO] Installing environment for https://github.com/myint/docformatter.\n[Tests/linters ]   | [INFO] Once installed this environment will be reused.\n[Tests/linters ]   | [INFO] This may take a few minutes...\n[Tests/coverage]   | https://uploader.codecov.io/latest/linux/codecov.SHA256SUM\n[Tests/coverage]   | ==> SHASUM file signed by key id 806bb28aed779869\n[Tests/coverage]   | ==> Uploader SHASUM verified (02b055414cc124203ab061ffc45f5497ca39ede5e63a06717a6981c32d7b425f  codecov)\n[Tests/coverage]   | ==> Running version latest\n[Tests/coverage]   | ==> Running version v0.5.0\n[Tests/coverage]   | [command]/run/act/actions/codecov-codecov-action@v2/dist/codecov -n  -Q github-action-2.1.0\n[Tests/coverage]   | [2023-05-29T16:35:20.903Z] ['info'] \n[Tests/coverage]   |      _____          _\n[Tests/coverage]   |     / ____|        | |\n[Tests/coverage]   |    | |     ___   __| | ___  ___ _____   __\n[Tests/coverage]   |    | |    / _ \\ / _` |/ _ \\/ __/ _ \\ \\ / /\n[Tests/coverage]   |    | |___| (_) | (_| |  __/ (_| (_) \\ V /\n[Tests/coverage]   |     \\_____\\___/ \\__,_|\\___|\\___\\___/ \\_/\n[Tests/coverage]   | \n[Tests/coverage]   |   Codecov report uploader 0.5.0\n[Tests/coverage]   | [2023-05-29T16:35:20.911Z] ['info'] => Project root located at: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/hukkin-tomli\n[Tests/coverage]   | [2023-05-29T16:35:20.912Z] ['info'] -> No token specified or token is empty\n[Tests/coverage]   | [2023-05-29T16:35:21.064Z] ['info'] Running coverage xml...\n[Tests/coverage]   | [2023-05-29T16:35:21.293Z] ['info'] Searching for coverage files...\n[Tests/coverage]   | [2023-05-29T16:35:21.326Z] ['info'] Warning: Some files located via search were excluded from upload.\n[Tests/coverage]   | [2023-05-29T16:35:21.326Z] ['info'] If Codecov did not locate your files, please review https://docs.codecov.com/docs/supported-report-formats\n[Tests/coverage]   | [2023-05-29T16:35:21.326Z] ['info'] => Found 1 possible coverage files:\n[Tests/coverage]   |   coverage.xml\n[Tests/coverage]   | [2023-05-29T16:35:21.326Z] ['info'] Processing /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/hukkin-tomli/coverage.xml...\n[Tests/coverage]   | [2023-05-29T16:35:21.330Z] ['info'] Detected GitHub Actions as the CI provider.\n[Tests/coverage]   | [2023-05-29T16:35:21.654Z] ['info'] Pinging Codecov: https://codecov.io/upload/v4?package=github-action-2.1.0-uploader-0.5.0&token=*******&branch=master&build=1&build_url=https%3A%2F%2Fgithub.com%2Fhukkin%2Ftomli%2Factions%2Fruns%2F1&commit=0054e60840060499c67c6c4115d5d60abaa51ca2&job=Tests&pr=&service=github-actions&slug=hukkin%2Ftomli&name=&tag=&flags=&parent=\n[Tests/coverage]   | [2023-05-29T16:35:22.054Z] ['error'] There was an error running the uploader: Error uploading to https://codecov.io: Error: There was an error fetching the storage URL during POST: 404 - {'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\n[Tests/coverage]   \u2705  Success - Main Report coverage\n[Tests/coverage] \u2b50 Run Post actions/setup-python@v3\n[Tests/coverage]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/cache-save/index.js] user= workdir=\n[Tests/linters ]   | [INFO] Installing environment for https://github.com/pre-commit/pre-commit-hooks.\n[Tests/linters ]   | [INFO] Once installed this environment will be reused.\n[Tests/linters ]   | [INFO] This may take a few minutes...\n[Tests/linters ]   | [INFO] Installing environment for https://github.com/PyCQA/flake8.\n[Tests/linters ]   | [INFO] Once installed this environment will be reused.\n[Tests/linters ]   | [INFO] This may take a few minutes...\n[Tests/coverage]   \u2705  Success - Post actions/setup-python@v3\n[Tests/linters ]   | [INFO] Installing environment for https://github.com/pre-commit/mirrors-mypy.\n[Tests/linters ]   | [INFO] Once installed this environment will be reused.\n[Tests/linters ]   | [INFO] This may take a few minutes...\n[Tests/coverage] \ud83c\udfc1  Job succeeded\n[Tests/linters ]   | Insert license in comments...............................................Passed\n[Tests/linters ]   | mdformat.................................................................Passed\n[Tests/linters ]   | Strip unnecessary `# noqa`s..............................................Passed\n[Tests/linters ]   | absolufy-imports.........................................................Passed\n[Tests/linters ]   | isort....................................................................Passed\n[Tests/linters ]   | black....................................................................Passed\n[Tests/linters ]   | docformatter.............................................................Passed\n[Tests/linters ]   | check yaml...............................................................Passed\n[Tests/linters ]   | type annotations not comments............................................Passed\n[Tests/linters ]   | check blanket noqa.......................................................Passed\n[Tests/linters ]   | check blanket type ignore................................................Passed\n[Tests/linters ]   | flake8...................................................................Passed\n[Tests/linters ]   | mypy.....................................................................Passed\n[Tests/linters ]   \u2705  Success - Main run linters\n[Tests/linters ] \u2b50 Run Post actions/setup-python@v3\n[Tests/linters ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/cache-save/index.js] user= workdir=\n[Tests/linters ]   \u2705  Success - Post actions/setup-python@v3\n[Tests/linters ] \ud83c\udfc1  Job succeeded\n[Tests/allgood ] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests/allgood ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests/allgood ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/allgood ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/allgood ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/hukkin-tomli] user=0 workdir=\n[Tests/allgood ] \u2b50 Run Main echo \"Great success!\"\n[Tests/allgood ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/0] user= workdir=\n[Tests/allgood ]   | Great success!\n[Tests/allgood ]   \u2705  Success - Main echo \"Great success!\"\n[Tests/allgood ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}