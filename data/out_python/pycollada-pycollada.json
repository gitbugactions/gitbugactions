{
    "repository": "pycollada/pycollada",
    "clone_url": "https://github.com/pycollada/pycollada.git",
    "timestamp": "2023-05-29T14:08:05.959013Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Python package/Check Formatting] \ud83d\ude80  Start image=crawlergpt:latest\n[Python package/Check Formatting]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Python package/Check Formatting]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Python package/Check Formatting]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Python package/Check Formatting]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pycollada-pycollada] user=0 workdir=\n[Python package/Check Formatting]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[Python package/Check Formatting] \u2b50 Run Main actions/checkout@v3\n[Python package/Check Formatting]   \u2705  Success - Main actions/checkout@v3\n[Python package/Check Formatting] \u2b50 Run Main Set up Python 3.10\n[Python package/Check Formatting]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[Python package/Check Formatting]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[Python package/Check Formatting]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[Python package/Check Formatting]   \u2753  ::group::Installed versions\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::Semantic version spec of 3.10 is 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::isExplicit: \n[Python package/Check Formatting]   \ud83d\udcac  ::debug::explicit? false\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::explicit? true\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::explicit? true\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::explicit? true\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::explicit? true\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::explicit? true\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::explicit? true\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::match not found\n[Python package/Check Formatting]   | Version 3.10 was not found in the local cache\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.12.0-beta.1 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.12.0-alpha.7 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.12.0-alpha.6 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.12.0-alpha.5 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.12.0-alpha.4 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.12.0-alpha.3 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.12.0-alpha.2 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.12.0-alpha.1 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.11.3 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.11.2 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.11.1 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.11.0 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.11.0-rc.2 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.11.0-rc.1 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.11.0-beta.5 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.11.0-beta.4 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.11.0-beta.3 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.11.0-beta.2 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.11.0-beta.1 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.11.0-alpha.7 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.11.0-alpha.6 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.11.0-alpha.5 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.11.0-alpha.4 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.11.0-alpha.3 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.11.0-alpha.2 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.11.0-alpha.1 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::check 3.10.11 satisfies 3.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::arm64===x64 && darwin===linux\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::matched 3.10.11\n[Python package/Check Formatting]   | Version 3.10 is available for downloading\n[Python package/Check Formatting]   | Download from \"https://github.com/actions/python-versions/releases/download/3.10.11-4626646535/python-3.10.11-linux-20.04-x64.tar.gz\"\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/python-versions/releases/download/3.10.11-4626646535/python-3.10.11-linux-20.04-x64.tar.gz\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::Destination /tmp/109bf678-4f86-4127-94af-212288842a7f\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::download complete\n[Python package/Check Formatting]   | Extract downloaded archive\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::Checking tar --version\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Python package/Check Formatting]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/75d8e1de-9cc6-4f78-ac7b-8bcb52a46065 -f /tmp/109bf678-4f86-4127-94af-212288842a7f\n[Python package/Check Formatting]   | Execute installation script\n[Python package/Check Formatting]   | Check if Python hostedtoolcache folder exist...\n[Python package/Check Formatting]   | Create Python 3.10.11 folder\n[Python package/Check Formatting]   | Copy Python binaries to hostedtoolcache folder\n[Python package/Check Formatting]   | Create additional symlinks (Required for the UsePythonVersion Azure Pipelines task and the setup-python GitHub Action)\n[Python package/Check Formatting]   | Upgrading pip...\n[Python package/Check Formatting]   | Looking in links: /tmp/tmp8cvv4lhf\n[Python package/Check Formatting]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages (65.5.0)\n[Python package/Check Formatting]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages (23.0.1)\n[Python package/Check Formatting]   | Collecting pip\n[Python package/Check Formatting]   | Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[Python package/Check Formatting]   | \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 34.5 MB/s eta 0:00:00\n[Python package/Check Formatting]   | Installing collected packages: pip\n[Python package/Check Formatting]   | Successfully installed pip-23.1.2\n[Python package/Check Formatting]   | Create complete file\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::isExplicit: \n[Python package/Check Formatting]   \ud83d\udcac  ::debug::explicit? false\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::explicit? true\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::isExplicit: 3.10.11\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::explicit? true\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::explicit? true\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::explicit? true\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::explicit? true\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::explicit? true\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::explicit? true\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::evaluating 7 versions\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::matched: 3.10.11\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.10.11/x64\n[Python package/Check Formatting]   \ud83d\udcac  ::debug::Found tool in cache Python 3.10.11 x64\n[Python package/Check Formatting]   | Successfully set up CPython (3.10.11)\n[Python package/Check Formatting]   \u2753  ::endgroup::\n[Python package/Check Formatting]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[Python package/Check Formatting]   \u2705  Success - Main Set up Python 3.10\n[Python package/Check Formatting]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.10.11/x64\n[Python package/Check Formatting]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.10.11/x64/lib/pkgconfig\n[Python package/Check Formatting]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.11/x64\n[Python package/Check Formatting]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.11/x64\n[Python package/Check Formatting]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.11/x64\n[Python package/Check Formatting]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.10.11/x64/lib\n[Python package/Check Formatting]   \u2699  ::set-output:: python-version=3.10.11\n[Python package/Check Formatting]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.10.11/x64/bin/python\n[Python package/Check Formatting]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.11/x64\n[Python package/Check Formatting]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.11/x64/bin\n[Python package/Check Formatting] \u2b50 Run Main Install Formatting\n[Python package/Check Formatting]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Python package/Check Formatting]   | Collecting autopep8\n[Python package/Check Formatting]   |   Downloading autopep8-2.0.2-py2.py3-none-any.whl (45 kB)\n[Python package/Check Formatting]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 45.2/45.2 kB 3.3 MB/s eta 0:00:00\n[Python package/Check Formatting]   | Collecting flake8\n[Python package/Check Formatting]   |   Downloading flake8-6.0.0-py2.py3-none-any.whl (57 kB)\n[Python package/Check Formatting]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 57.8/57.8 kB 5.7 MB/s eta 0:00:00\n[Python package/Check Formatting]   | Collecting flake8-no-implicit-concat\n[Python package/Check Formatting]   |   Downloading flake8_no_implicit_concat-0.3.4-py3-none-any.whl (5.2 kB)\n[Python package/Check Formatting]   | Collecting pycodestyle>=2.10.0 (from autopep8)\n[Python package/Check Formatting]   |   Downloading pycodestyle-2.10.0-py2.py3-none-any.whl (41 kB)\n[Python package/Check Formatting]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.3/41.3 kB 5.5 MB/s eta 0:00:00\n[Python package/Check Formatting]   | Collecting tomli (from autopep8)\n[Python package/Check Formatting]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[Python package/Check Formatting]   | Collecting mccabe<0.8.0,>=0.7.0 (from flake8)\n[Python package/Check Formatting]   |   Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\n[Python package/Check Formatting]   | Collecting pyflakes<3.1.0,>=3.0.0 (from flake8)\n[Python package/Check Formatting]   |   Downloading pyflakes-3.0.1-py2.py3-none-any.whl (62 kB)\n[Python package/Check Formatting]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.8/62.8 kB 8.4 MB/s eta 0:00:00\n[Python package/Check Formatting]   | Installing collected packages: tomli, pyflakes, pycodestyle, mccabe, flake8, autopep8, flake8-no-implicit-concat\n[Python package/Check Formatting]   | Successfully installed autopep8-2.0.2 flake8-6.0.0 flake8-no-implicit-concat-0.3.4 mccabe-0.7.0 pycodestyle-2.10.0 pyflakes-3.0.1 tomli-2.0.1\n[Python package/Check Formatting]   | \n[Python package/Check Formatting]   | [notice] A new release of pip is available: 23.0.1 -> 23.1.2\n[Python package/Check Formatting]   | [notice] To update, run: pip install --upgrade pip\n[Python package/Check Formatting]   \u2705  Success - Main Install Formatting\n[Python package/Check Formatting] \u2b50 Run Main Check Formatting\n[Python package/Check Formatting]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Python package/Check Formatting]   | ./collada/__init__.py:74:5: C901 'Collada.__init__' is too complex (21)\n[Python package/Check Formatting]   | ./collada/__init__.py:421:5: C901 'Collada._loadNodes' is too complex (17)\n[Python package/Check Formatting]   | ./collada/__init__.py:486:5: C901 'Collada.save' is too complex (16)\n[Python package/Check Formatting]   | ./collada/asset.py:208:5: C901 'Asset.load' is too complex (17)\n[Python package/Check Formatting]   | ./collada/controller.py:62:5: C901 'Skin.__init__' is too complex (17)\n[Python package/Check Formatting]   | ./collada/controller.py:180:5: C901 'Skin.load' is too complex (24)\n[Python package/Check Formatting]   | ./collada/controller.py:348:5: C901 'Morph.load' is too complex (15)\n[Python package/Check Formatting]   | ./collada/geometry.py:170:5: C901 'Geometry.load' is too complex (17)\n[Python package/Check Formatting]   | ./collada/geometry.py:224:5: C901 'Geometry.save' is too complex (24)\n[Python package/Check Formatting]   | ./collada/light.py:389:5: C901 'SpotLight.load' is too complex (11)\n[Python package/Check Formatting]   | ./collada/lineset.py:63:5: C901 'LineSet.__init__' is too complex (12)\n[Python package/Check Formatting]   | ./collada/material.py:596:5: C901 'Effect.load' is too complex (22)\n[Python package/Check Formatting]   | ./collada/material.py:681:5: C901 'Effect._loadShadingParam' is too complex (12)\n[Python package/Check Formatting]   | ./collada/material.py:724:5: C901 'Effect.save' is too complex (24)\n[Python package/Check Formatting]   | ./collada/material.py:811:5: C901 'Effect.almostEqual' is too complex (13)\n[Python package/Check Formatting]   | ./collada/polylist.py:123:5: C901 'Polylist.__init__' is too complex (12)\n[Python package/Check Formatting]   | ./collada/primitive.py:74:5: C901 'Primitive._getInputsFromList' is too complex (20)\n[Python package/Check Formatting]   | ./collada/scene.py:390:5: C901 'Node.save' is too complex (11)\n[Python package/Check Formatting]   | ./collada/scene.py:862:1: C901 'loadNode' is too complex (14)\n[Python package/Check Formatting]   | ./collada/scene.py:946:5: C901 'Scene.load' is too complex (15)\n[Python package/Check Formatting]   | ./collada/triangleset.py:80:5: C901 'TriangleSet.__init__' is too complex (12)\n[Python package/Check Formatting]   | ./collada/xmlutil.py:38:1: C901 'If 38' is too complex (29)\n[Python package/Check Formatting]   | ./docs/conf.py:40:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:60:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:64:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:66:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:69:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:76:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:79:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:83:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:87:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:93:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:105:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:108:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:112:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:115:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:119:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:124:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:133:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:137:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:140:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:144:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:147:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:150:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:153:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:156:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:161:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:164:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:173:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:176:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:187:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:191:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:194:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:197:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:200:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:205:1: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./docs/conf.py:209:5: E301 expected 1 blank line, found 0\n[Python package/Check Formatting]   | ./examples/daeview/daeview.py:8:1: F403 'from pyglet.gl import *' used; unable to detect undefined names\n[Python package/Check Formatting]   | ./examples/daeview/daeview.py:13:14: F405 'Config' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/daeview.py:50:5: F405 'glViewport' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/daeview.py:51:5: F405 'glMatrixMode' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/daeview.py:51:18: F405 'GL_PROJECTION' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/daeview.py:52:5: F405 'glLoadIdentity' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/daeview.py:53:5: F405 'gluPerspective' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/daeview.py:54:5: F405 'glMatrixMode' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/daeview.py:54:18: F405 'GL_MODELVIEW' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/daeview.py:67:5: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:7:1: F401 'numpy' imported but unused\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:10:1: F403 'from pyglet.gl import *' used; unable to detect undefined names\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:16:1: F401 '.shader' imported but unused\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:23:5: C901 'GLSLRenderer.__init__' is too complex (22)\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:33:9: F405 'glClearColor' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:34:9: F405 'glEnable' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:34:18: F405 'GL_DEPTH_TEST' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:35:9: F405 'glEnable' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:35:18: F405 'GL_CULL_FACE' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:36:9: F405 'glEnable' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:36:18: F405 'GL_MULTISAMPLE' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:38:9: F405 'glEnable' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:38:18: F405 'GL_BLEND' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:39:9: F405 'glBlendFunc' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:39:21: F405 'GL_SRC_ALPHA' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:39:35: F405 'GL_ONE_MINUS_SRC_ALPHA' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:41:9: F405 'glEnable' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:41:18: F405 'GL_LIGHTING' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:43:9: F405 'glEnable' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:43:18: F405 'GL_LIGHT0' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:44:9: F405 'glLightfv' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:44:19: F405 'GL_LIGHT0' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:44:30: F405 'GL_AMBIENT' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:45:9: F405 'glLightfv' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:45:19: F405 'GL_LIGHT0' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:45:30: F405 'GL_DIFFUSE' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:46:9: F405 'glLightfv' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:46:19: F405 'GL_LIGHT0' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:46:30: F405 'GL_SPECULAR' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:48:9: F405 'glMaterialfv' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:48:22: F405 'GL_FRONT_AND_BACK' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:48:41: F405 'GL_AMBIENT_AND_DIFFUSE' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:49:9: F405 'glMaterialfv' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:49:22: F405 'GL_FRONT_AND_BACK' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:49:41: F405 'GL_SPECULAR' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:50:9: F405 'glMaterialf' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:50:21: F405 'GL_FRONT_AND_BACK' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:50:40: F405 'GL_SHININESS' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:54:9: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:113:43: F405 'GLuint' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:114:37: F405 'glGenTextures' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:117:37: F405 'glBindTexture' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:117:51: F405 'GL_TEXTURE_2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:118:37: F405 'glTexParameteri' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:118:53: F405 'GL_TEXTURE_2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:118:68: F405 'GL_TEXTURE_MAG_FILTER' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:118:91: F405 'GL_LINEAR' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:119:37: F405 'glTexParameteri' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:119:53: F405 'GL_TEXTURE_2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:119:68: F405 'GL_TEXTURE_MIN_FILTER' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:119:91: F405 'GL_LINEAR' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:120:37: F405 'glTexParameteri' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:120:53: F405 'GL_TEXTURE_2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:120:68: F405 'GL_TEXTURE_WRAP_S' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:120:87: F405 'GL_REPEAT' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:121:37: F405 'glTexParameteri' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:121:53: F405 'GL_TEXTURE_2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:121:68: F405 'GL_TEXTURE_WRAP_T' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:121:87: F405 'GL_REPEAT' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:124:37: F405 'glTexImage2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:124:50: F405 'GL_TEXTURE_2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:124:68: F405 'GL_RGBA' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:124:88: F405 'GL_RGBA' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:124:97: F405 'GL_UNSIGNED_BYTE' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:195:47: F405 'GL_TRIANGLES' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:204:47: F405 'GL_TRIANGLES' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:220:9: F405 'glClear' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:220:17: F405 'GL_COLOR_BUFFER_BIT' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:220:39: F405 'GL_DEPTH_BUFFER_BIT' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:221:9: F405 'glLoadIdentity' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:225:9: F405 'glLightfv' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:225:19: F405 'GL_LIGHT0' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:225:30: F405 'GL_POSITION' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:228:9: F405 'glTranslatef' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:229:9: F405 'glRotatef' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:230:9: F405 'glRotatef' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:231:9: F405 'glRotatef' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:256:17: F405 'glActiveTexture' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:256:33: F405 'GL_TEXTURE0' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:257:17: F405 'glEnable' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:257:26: F405 'GL_TEXTURE_2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:258:17: F405 'glBindTexture' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/GLSLRenderer.py:258:31: F405 'GL_TEXTURE_2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:7:1: F401 'numpy' imported but unused\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:8:1: F401 'pyglet' imported but unused\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:9:1: F403 'from pyglet.gl import *' used; unable to detect undefined names\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:24:9: F405 'glShadeModel' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:24:22: F405 'GL_SMOOTH' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:25:9: F405 'glClearColor' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:26:9: F405 'glClearDepth' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:27:9: F405 'glEnable' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:27:18: F405 'GL_DEPTH_TEST' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:28:9: F405 'glDepthFunc' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:28:21: F405 'GL_LEQUAL' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:30:9: F405 'glEnable' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:30:18: F405 'GL_MULTISAMPLE' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:32:9: F405 'glEnable' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:32:18: F405 'GL_LIGHTING' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:33:9: F405 'glEnable' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:33:18: F405 'GL_LIGHT0' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:34:9: F405 'glHint' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:34:16: F405 'GL_PERSPECTIVE_CORRECTION_HINT' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:34:48: F405 'GL_NICEST' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:35:9: F405 'glCullFace' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:35:20: F405 'GL_BACK' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:37:9: F405 'glEnable' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:37:18: F405 'GL_TEXTURE_2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:39:9: F405 'glTexParameterf' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:39:25: F405 'GL_TEXTURE_2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:39:40: F405 'GL_TEXTURE_MAG_FILTER' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:39:63: F405 'GL_NEAREST' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:40:9: F405 'glTexParameterf' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:40:25: F405 'GL_TEXTURE_2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:40:40: F405 'GL_TEXTURE_MIN_FILTER' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:40:63: F405 'GL_NEAREST' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:45:25: F405 'glGenLists' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:47:9: F405 'glNewList' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:47:34: F405 'GL_COMPILE' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:49:9: F405 'glEndList' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:52:5: C901 'OldStyleRenderer.drawPrimitives' is too complex (27)\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:53:9: F405 'glBegin' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:53:17: F405 'GL_TRIANGLES' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:59:35: F405 'GLfloat' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:89:43: F405 'GLuint' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:90:37: F405 'glGenTextures' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:93:37: F405 'glBindTexture' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:93:51: F405 'GL_TEXTURE_2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:94:37: F405 'glTexParameteri' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:94:53: F405 'GL_TEXTURE_2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:94:68: F405 'GL_TEXTURE_MAG_FILTER' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:94:91: F405 'GL_LINEAR' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:95:37: F405 'glTexParameteri' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:95:53: F405 'GL_TEXTURE_2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:95:68: F405 'GL_TEXTURE_MIN_FILTER' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:95:91: F405 'GL_LINEAR' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:96:37: F405 'glTexParameteri' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:96:53: F405 'GL_TEXTURE_2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:96:68: F405 'GL_TEXTURE_WRAP_S' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:96:87: F405 'GL_REPEAT' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:97:37: F405 'glTexParameteri' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:97:53: F405 'GL_TEXTURE_2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:97:68: F405 'GL_TEXTURE_WRAP_T' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:97:87: F405 'GL_REPEAT' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:98:37: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:101:37: F405 'glTexImage2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:101:50: F405 'GL_TEXTURE_2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:101:68: F405 'GL_RGBA' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:101:88: F405 'GL_RGBA' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:101:97: F405 'GL_UNSIGNED_BYTE' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:109:47: F405 'GLfloat' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:111:47: F405 'GLfloat' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:113:46: F405 'GLfloat' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:128:25: F405 'glBindTexture' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:128:39: F405 'GL_TEXTURE_2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:130:25: F405 'glBindTexture' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:130:39: F405 'GL_TEXTURE_2D' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:142:33: F405 'glMaterialfv' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:142:46: F405 'GL_FRONT' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:142:56: F405 'GL_DIFFUSE' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:144:33: F405 'glMaterialfv' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:144:46: F405 'GL_FRONT' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:144:56: F405 'GL_SPECULAR' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:146:33: F405 'glMaterialfv' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:146:46: F405 'GL_FRONT' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:146:56: F405 'GL_AMBIENT' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:148:33: F405 'glMaterialfv' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:148:46: F405 'GL_FRONT' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:148:56: F405 'GL_SHININESS' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:148:71: F405 'GLfloat' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:151:29: F405 'glNormal3fv' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:151:42: F405 'GLfloat' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:153:33: F405 'glTexCoord2fv' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:153:48: F405 'GLfloat' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:158:29: F405 'glVertex3fv' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:158:42: F405 'GLfloat' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:166:9: F405 'glEnd' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:169:9: F405 'glClear' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:169:17: F405 'GL_COLOR_BUFFER_BIT' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:169:39: F405 'GL_DEPTH_BUFFER_BIT' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:170:9: F405 'glMatrixMode' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:170:22: F405 'GL_PROJECTION' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:171:9: F405 'glLoadIdentity' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:173:13: F405 'gluPerspective' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:175:13: F405 'gluPerspective' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:176:9: F405 'glMatrixMode' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:176:22: F405 'GL_MODELVIEW' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:177:9: F405 'glLoadIdentity' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:179:22: F405 'GLfloat' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:180:9: F405 'glLightfv' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:180:19: F405 'GL_LIGHT0' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:180:30: F405 'GL_POSITION' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:181:9: F405 'glTranslatef' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:182:9: F405 'glRotatef' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:183:9: F405 'glRotatef' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:184:9: F405 'glRotatef' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:187:9: F405 'glCallList' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/OldStyleRenderer.py:191:9: F405 'glDeleteLists' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/__init__.py:1:1: F401 'os' imported but unused\n[Python package/Check Formatting]   | ./examples/daeview/renderer/__init__.py:2:1: F401 'sys' imported but unused\n[Python package/Check Formatting]   | ./examples/daeview/renderer/__init__.py:4:1: F401 '.GLSLRenderer.GLSLRenderer' imported but unused\n[Python package/Check Formatting]   | ./examples/daeview/renderer/__init__.py:5:1: F401 '.OldStyleRenderer.OldStyleRenderer' imported but unused\n[Python package/Check Formatting]   | ./examples/daeview/renderer/glutils.py:4:1: F401 'pyglet' imported but unused\n[Python package/Check Formatting]   | ./examples/daeview/renderer/glutils.py:5:1: F403 'from pyglet.gl import *' used; unable to detect undefined names\n[Python package/Check Formatting]   | ./examples/daeview/renderer/glutils.py:11:13: F405 'GLfloat' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/glutils.py:16:21: F405 'glGetString' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/glutils.py:16:33: F405 'GL_VERSION' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/glutils.py:21:9: F405 'glGetError' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/glutils.py:23:18: F405 'gluErrorString' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:8:1: F403 'from pyglet.gl import *' used; unable to detect undefined names\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:23:23: F405 'glCreateProgram' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:28:33: F405 'GL_VERTEX_SHADER' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:30:33: F405 'GL_FRAGMENT_SHADER' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:44:18: F405 'glCreateShader' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:50:9: F405 'glShaderSource' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:54:9: F405 'glCompileShader' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:58:9: F405 'glGetShaderiv' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:58:31: F405 'GL_COMPILE_STATUS' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:63:13: F405 'glGetShaderiv' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:63:35: F405 'GL_INFO_LOG_LENGTH' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:67:13: F405 'glGetShaderInfoLog' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:72:13: F405 'glAttachShader' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:76:9: F405 'glLinkProgram' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:80:9: F405 'glGetProgramiv' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:80:37: F405 'GL_LINK_STATUS' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:84:13: E265 block comment should start with '# '\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:85:13: F405 'glGetProgramiv' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:85:41: F405 'GL_INFO_LOG_LENGTH' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:87:22: F405 'create_string_buffer' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:89:13: F405 'glGetProgramInfoLog' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:98:9: F405 'glUseProgram' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:103:9: F405 'glUseProgram' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:112:17: F405 'glUniform1f' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:113:17: F405 'glUniform2f' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:114:17: F405 'glUniform3f' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:115:17: F405 'glUniform4f' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:117:27: F405 'glGetUniformLocation' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:126:17: F405 'glUniform1i' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:127:17: F405 'glUniform2i' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:128:17: F405 'glUniform3i' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:129:17: F405 'glUniform4i' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:131:27: F405 'glGetUniformLocation' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:138:15: F405 'glGetUniformLocation' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:140:9: F405 'glUniformMatrix4fv' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shader.py:140:44: F405 'c_float' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:304:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:304:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:306:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:306:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:308:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:308:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:309:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:309:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:311:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:311:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:322:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:322:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:325:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:325:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:326:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:326:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:327:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:327:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:329:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:329:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:330:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:330:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:332:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:332:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:334:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:334:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:335:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:335:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:336:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:336:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:337:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:337:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:338:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:338:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:340:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:340:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:341:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:341:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:342:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:342:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:343:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:343:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:344:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:344:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:345:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:345:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:346:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:346:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:347:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:347:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:348:1: W191 indentation contains tabs\n[Python package/Check Formatting]   | ./examples/daeview/renderer/shaders.py:348:1: E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | ./examples/print_collada_info.py:50:1: C901 'inspectCollada' is too complex (11)\n[Python package/Check Formatting]   | ./examples/recurse_check.py:14:1: C901 'main' is too complex (24)\n[Python package/Check Formatting]   | ./examples/recurse_check.py:85:16: E714 test for object identity should be 'is not'\n[Python package/Check Formatting]   | ./examples/recurse_check.py:88:31: E275 missing whitespace after keyword\n[Python package/Check Formatting]   | ./examples/recurse_check.py:90:27: E275 missing whitespace after keyword\n[Python package/Check Formatting]   | 26    C901 'Collada.__init__' is too complex (21)\n[Python package/Check Formatting]   | 26    E101 indentation contains mixed spaces and tabs\n[Python package/Check Formatting]   | 38    E265 block comment should start with '# '\n[Python package/Check Formatting]   | 2     E275 missing whitespace after keyword\n[Python package/Check Formatting]   | 1     E301 expected 1 blank line, found 0\n[Python package/Check Formatting]   | 1     E714 test for object identity should be 'is not'\n[Python package/Check Formatting]   | 9     F401 'numpy' imported but unused\n[Python package/Check Formatting]   | 5     F403 'from pyglet.gl import *' used; unable to detect undefined names\n[Python package/Check Formatting]   | 234   F405 'Config' may be undefined, or defined from star imports: pyglet.gl\n[Python package/Check Formatting]   | 26    W191 indentation contains tabs\n[Python package/Check Formatting]   | 368\n[Python package/Check Formatting]   \u2705  Success - Main Check Formatting\n[Python package/Check Formatting] \u2b50 Run Post Set up Python 3.10\n[Python package/Check Formatting]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[Python package/Check Formatting]   \u2705  Success - Post Set up Python 3.10\n[Python package/Check Formatting] \ud83c\udfc1  Job succeeded\n[Python package/build           ] \ud83d\ude80  Start image=crawlergpt:latest\n[Python package/build           ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Python package/build           ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Python package/build           ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Python package/build           ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pycollada-pycollada] user=0 workdir=\n[Python package/build           ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[Python package/build           ] \ud83e\uddea  Matrix: map[python-version:3.7]\n[Python package/build           ] \u2b50 Run Main actions/checkout@v3\n[Python package/build           ]   \u2705  Success - Main actions/checkout@v3\n[Python package/build           ] \u2b50 Run Main Set up Python 3.7\n[Python package/build           ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[Python package/build           ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[Python package/build           ]   | OCI runtime exec failed: exec failed: unable to start container process: error executing setns process: exit status 1: unknown\r\n[Python package/build           ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[Python package/build           ]   \u274c  Failure - Main Set up Python 3.7\n[Python package/build           ] Error response from daemon: Could not find the file /var/run/act/workflow/pathcmd.txt in container ae157f05134b4a22a45ad7307dfd90d428178924c7011b3a105ddb4fdb526efb\n[Python package/build           ] failed to remove container: Error response from daemon: No such container: ae157f05134b4a22a45ad7307dfd90d428178924c7011b3a105ddb4fdb526efb\n[Python package/build           ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Error occurred running finally: Error occurred running finally: Error response from daemon: remove act-Python-package-build-8f9a08f8f46a1e7a9dbd8c238cbc4611e2d70f9b17622a900f16e35d2442f78f-env: volume is in use - [7ebedb7cb84489dfff1275ed7c8badbb1a6fddce70ad5e7ca59554579f5be428] (original error: <nil>) (original error: <nil>)\n"
}