{
    "repository": "pydata/bottleneck",
    "clone_url": "https://github.com/pydata/bottleneck.git",
    "timestamp": "2023-05-29T14:05:44.091180Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Github Actions/test] \ud83d\ude80  Start image=crawlergpt:latest\n[Github Actions/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Github Actions/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Github Actions/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Github Actions/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pydata-bottleneck] user=0 workdir=\n[Github Actions/test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[Github Actions/test] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.7]\n[Github Actions/test] \u2b50 Run Main actions/checkout@v2\n[Github Actions/test]   \u2705  Success - Main actions/checkout@v2\n[Github Actions/test] \u2b50 Run Main Set up Python 3.7\n[Github Actions/test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[Github Actions/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[Github Actions/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[Github Actions/test]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[Github Actions/test]   \ud83d\udcac  ::debug::isExplicit: \n[Github Actions/test]   \ud83d\udcac  ::debug::explicit? false\n[Github Actions/test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Github Actions/test]   \ud83d\udcac  ::debug::explicit? true\n[Github Actions/test]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Github Actions/test]   \ud83d\udcac  ::debug::explicit? true\n[Github Actions/test]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Github Actions/test]   \ud83d\udcac  ::debug::explicit? true\n[Github Actions/test]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Github Actions/test]   \ud83d\udcac  ::debug::explicit? true\n[Github Actions/test]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Github Actions/test]   \ud83d\udcac  ::debug::explicit? true\n[Github Actions/test]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Github Actions/test]   \ud83d\udcac  ::debug::explicit? true\n[Github Actions/test]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Github Actions/test]   \ud83d\udcac  ::debug::matched: 3.7.11\n[Github Actions/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[Github Actions/test]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[Github Actions/test]   | Successfully setup CPython (3.7.11)\n[Github Actions/test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[Github Actions/test]   \u2705  Success - Main Set up Python 3.7\n[Github Actions/test]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[Github Actions/test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[Github Actions/test]   \u2699  ::set-output:: python-version=3.7.11\n[Github Actions/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[Github Actions/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[Github Actions/test] \u2b50 Run Main Install\n[Github Actions/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Github Actions/test]   |   DEPRECATION: A future pip version will change local packages to be built in-place without first copying to a temporary directory. We recommend you use --use-feature=in-tree-build to test your packages with this new behavior before it becomes the default.\n[Github Actions/test]   |    pip 21.3 will remove support for this functionality. You can find discussion regarding this at https://github.com/pypa/pip/issues/7555.\n[Github Actions/test]   | Processing /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pydata-bottleneck\n[Github Actions/test]   |   Installing build dependencies: started\n[Github Actions/test]   |   Installing build dependencies: finished with status 'done'\n[Github Actions/test]   |   Getting requirements to build wheel: started\n[Github Actions/test]   |   Getting requirements to build wheel: finished with status 'done'\n[Github Actions/test]   |     Preparing wheel metadata: started\n[Github Actions/test]   |     Preparing wheel metadata: finished with status 'done'\n[Github Actions/test]   | Collecting numpy\n[Github Actions/test]   |   Downloading numpy-1.21.6-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (15.7 MB)\n[Github Actions/test]   | Building wheels for collected packages: Bottleneck\n[Github Actions/test]   |   Building wheel for Bottleneck (PEP 517): started\n[Github Actions/test]   |   Building wheel for Bottleneck (PEP 517): finished with status 'done'\n[Github Actions/test]   |   Created wheel for Bottleneck: filename=Bottleneck-1.3.7.post0.dev7-cp37-cp37m-linux_x86_64.whl size=400409 sha256=8163b1f1a1a1fc19d607e44d3e80a041868b0a3d47ab3443ccb9d2a663f37f90\n[Github Actions/test]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/3e/97/ab/da9d2df71dd6fac1a6ca2a26f83af1bca67bcf78435608075b\n[Github Actions/test]   | Successfully built Bottleneck\n[Github Actions/test]   | Installing collected packages: numpy, Bottleneck\n[Github Actions/test]   | Successfully installed Bottleneck-1.3.7.post0.dev7 numpy-1.21.6\n[Github Actions/test]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Github Actions/test]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[Github Actions/test]   \u2705  Success - Main Install\n[Github Actions/test] \u2b50 Run Main Test with pytest\n[Github Actions/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Github Actions/test]   | Collecting pytest\n[Github Actions/test]   |   Downloading pytest-7.3.1-py3-none-any.whl (320 kB)\n[Github Actions/test]   | Collecting importlib-metadata>=0.12\n[Github Actions/test]   |   Downloading importlib_metadata-6.6.0-py3-none-any.whl (22 kB)\n[Github Actions/test]   | Collecting pluggy<2.0,>=0.12\n[Github Actions/test]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[Github Actions/test]   | Collecting exceptiongroup>=1.0.0rc8\n[Github Actions/test]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[Github Actions/test]   | Collecting packaging\n[Github Actions/test]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[Github Actions/test]   | Collecting iniconfig\n[Github Actions/test]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[Github Actions/test]   | Collecting tomli>=1.0.0\n[Github Actions/test]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[Github Actions/test]   | Collecting zipp>=0.5\n[Github Actions/test]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[Github Actions/test]   | Collecting typing-extensions>=3.6.4\n[Github Actions/test]   |   Downloading typing_extensions-4.6.2-py3-none-any.whl (31 kB)\n[Github Actions/test]   | Installing collected packages: zipp, typing-extensions, importlib-metadata, tomli, pluggy, packaging, iniconfig, exceptiongroup, pytest\n[Github Actions/test]   | Successfully installed exceptiongroup-1.1.1 importlib-metadata-6.6.0 iniconfig-2.0.0 packaging-23.1 pluggy-1.0.0 pytest-7.3.1 tomli-2.0.1 typing-extensions-4.6.2 zipp-3.15.0\n[Github Actions/test]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Github Actions/test]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[Github Actions/test]   | ============================= test session starts ==============================\n[Github Actions/test]   | platform linux -- Python 3.7.11, pytest-7.3.1, pluggy-1.0.0\n[Github Actions/test]   | rootdir: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pydata-bottleneck\n[Github Actions/test]   | configfile: setup.cfg\n[Github Actions/test]   | collected 192 items\n[Github Actions/test]   | \n[Github Actions/test]   | tests/input_modification_test.py .............................           [ 15%]\n[Github Actions/test]   | tests/list_input_test.py .............................                   [ 30%]\n[Github Actions/test]   | tests/memory_test.py .                                                   [ 30%]\n[Github Actions/test]   | tests/move_test.py .................................                     [ 47%]\n[Github Actions/test]   | tests/nonreduce_axis_test.py ....................                        [ 58%]\n[Github Actions/test]   | tests/nonreduce_test.py ..........                                       [ 63%]\n[Github Actions/test]   | tests/reduce_test.py ................................................... [ 90%]\n[Github Actions/test]   |                                                                          [ 90%]\n[Github Actions/test]   | tests/scalar_input_test.py ..................                            [ 99%]\n[Github Actions/test]   | tests/test_template.py .                                                 [100%]\n[Github Actions/test]   | \n[Github Actions/test]   | ======================== 192 passed in 62.38s (0:01:02) ========================\n[Github Actions/test]   \u2705  Success - Main Test with pytest\n[Github Actions/test] \u2b50 Run Post Set up Python 3.7\n[Github Actions/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[Github Actions/test]   \u2705  Success - Post Set up Python 3.7\n[Github Actions/test] \ud83c\udfc1  Job succeeded\n[Github Actions/check       ] \ud83d\ude80  Start image=crawlergpt:latest\n[Github Actions/check       ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Github Actions/check       ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Github Actions/check       ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Github Actions/check       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pydata-bottleneck] user=0 workdir=\n[Github Actions/check       ] \u2b50 Run Main Placeholder for CI checks in PRs\n[Github Actions/check       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/0] user= workdir=\n[Github Actions/check       ]   | Done\n[Github Actions/check       ]   \u2705  Success - Main Placeholder for CI checks in PRs\n[Github Actions/check       ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}