{
    "repository": "tilezen/mapbox-vector-tile",
    "clone_url": "https://github.com/tilezen/mapbox-vector-tile.git",
    "timestamp": "2023-05-29T15:47:35.061467Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/Python 3.8] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Python 3.8]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Python 3.8]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Python 3.8]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Python 3.8]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/tilezen-mapbox-vector-tile] user=0 workdir=\n[CI/Python 3.8]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[CI/Python 3.8]   \u2601  git clone 'https://github.com/coverallsapp/github-action' # ref=1.1.3\n[CI/Python 3.8] \ud83e\uddea  Matrix: map[python-version:3.8]\n[CI/Python 3.8] \u2b50 Run Main actions/checkout@v3\n[CI/Python 3.8]   \u2705  Success - Main actions/checkout@v3\n[CI/Python 3.8] \u2b50 Run Main Install poetry\n[CI/Python 3.8]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[CI/Python 3.8]   | \u26a0\ufe0f  Note: '/home/runneradmin/.local/bin' is not on your PATH environment\n[CI/Python 3.8]   |     variable. These apps will not be globally accessible until your PATH is\n[CI/Python 3.8]   |     updated. Run `pipx ensurepath` to automatically add it, or manually modify\n[CI/Python 3.8]   |     your PATH in your shell's config file (i.e. ~/.bashrc).\n[CI/Python 3.8]   | done! \u2728 \ud83c\udf1f \u2728\n[CI/Python 3.8]   | creating virtual environment...\n[CI/Python 3.8]   | creating shared libraries...\n[CI/Python 3.8]   | upgrading shared libraries...\n[CI/Python 3.8]   | installing poetry...\n[CI/Python 3.8]   |   installed package poetry 1.5.0, Python 3.8.10\n[CI/Python 3.8]   |   These apps are now globally available\n[CI/Python 3.8]   |     - poetry\n[CI/Python 3.8]   \u2705  Success - Main Install poetry\n[CI/Python 3.8] \u2b50 Run Main Set up Python 3.8\n[CI/Python 3.8]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[CI/Python 3.8]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[CI/Python 3.8]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[CI/Python 3.8]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[CI/Python 3.8]   \u2753  ::group::Installed versions\n[CI/Python 3.8]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[CI/Python 3.8]   \ud83d\udcac  ::debug::isExplicit: \n[CI/Python 3.8]   \ud83d\udcac  ::debug::explicit? false\n[CI/Python 3.8]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[CI/Python 3.8]   \ud83d\udcac  ::debug::explicit? true\n[CI/Python 3.8]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[CI/Python 3.8]   \ud83d\udcac  ::debug::explicit? true\n[CI/Python 3.8]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[CI/Python 3.8]   \ud83d\udcac  ::debug::explicit? true\n[CI/Python 3.8]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[CI/Python 3.8]   \ud83d\udcac  ::debug::explicit? true\n[CI/Python 3.8]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[CI/Python 3.8]   \ud83d\udcac  ::debug::explicit? true\n[CI/Python 3.8]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[CI/Python 3.8]   \ud83d\udcac  ::debug::explicit? true\n[CI/Python 3.8]   \ud83d\udcac  ::debug::evaluating 6 versions\n[CI/Python 3.8]   \ud83d\udcac  ::debug::matched: 3.8.11\n[CI/Python 3.8]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[CI/Python 3.8]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[CI/Python 3.8]   | Successfully set up CPython (3.8.11)\n[CI/Python 3.8]   \u2753  ::endgroup::\n[CI/Python 3.8]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[CI/Python 3.8]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[CI/Python 3.8]   \u2705  Success - Main Set up Python 3.8\n[CI/Python 3.8]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[CI/Python 3.8]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib/pkgconfig\n[CI/Python 3.8]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[CI/Python 3.8]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[CI/Python 3.8]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[CI/Python 3.8]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[CI/Python 3.8]   \u2699  ::set-output:: python-version=3.8.11\n[CI/Python 3.8]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.8.11/x64/bin/python\n[CI/Python 3.8]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[CI/Python 3.8]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[CI/Python 3.8] \u2b50 Run Main Install dependencies\n[CI/Python 3.8]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/Python 3.8]   | /var/run/act/workflow/3: line 2: poetry: command not found\n[CI/Python 3.8]   \u274c  Failure - Main Install dependencies\n[CI/Python 3.8] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[CI/Python 3.8] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Python ${{ matrix.python-version }}' failed\n"
}