{
    "repository": "3liz/QuickOSM",
    "clone_url": "https://github.com/3liz/QuickOSM.git",
    "timestamp": "2023-05-29T15:34:06.152613Z",
    "clone_success": true,
    "number of actions": 4,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Tests \ud83c\udfb3/test-qgis   ] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests \ud83c\udfb3/flake8      ] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests \ud83c\udfb3/pylint      ] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests \ud83c\udfb3/test-qgis   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests \ud83c\udfb3/test-qgis   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests \ud83c\udfb3/test-qgis   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/3liz-QuickOSM] user=0 workdir=\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/3liz-QuickOSM] user=0 workdir=\n[Tests \ud83c\udfb3/test-qgis   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/3liz-QuickOSM] user=0 workdir=\n[Tests \ud83c\udfb3/pylint      ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[Tests \ud83c\udfb3/flake8      ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[Tests \ud83c\udfb3/pylint      ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3.3.1\n[Tests \ud83c\udfb3/flake8      ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3.3.1\n[Tests \ud83c\udfb3/pylint      ] \u2b50 Run Main Setup Python\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[Tests \ud83c\udfb3/flake8      ] \u2b50 Run Main Setup Python\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[Tests \ud83c\udfb3/test-qgis   ] \u2b50 Run Main Check out repository\n[Tests \ud83c\udfb3/test-qgis   ]   \u2705  Success - Main Check out repository\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[Tests \ud83c\udfb3/flake8      ]   \u2753  ::group::Installed versions\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udcac  ::debug::Semantic version spec of 3.10 is 3.10\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udcac  ::debug::isExplicit: \n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udcac  ::debug::explicit? false\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udcac  ::debug::explicit? true\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udcac  ::debug::explicit? true\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udcac  ::debug::explicit? true\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udcac  ::debug::explicit? true\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udcac  ::debug::explicit? true\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udcac  ::debug::explicit? true\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udcac  ::debug::match not found\n[Tests \ud83c\udfb3/flake8      ]   | Version 3.10 was not found in the local cache\n[Tests \ud83c\udfb3/flake8      ]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[Tests \ud83c\udfb3/pylint      ]   \u2753  ::group::Installed versions\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udcac  ::debug::Semantic version spec of 3.10 is 3.10\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udcac  ::debug::isExplicit: \n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udcac  ::debug::explicit? false\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udcac  ::debug::explicit? true\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udcac  ::debug::explicit? true\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udcac  ::debug::explicit? true\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udcac  ::debug::explicit? true\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udcac  ::debug::explicit? true\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udcac  ::debug::explicit? true\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udcac  ::debug::match not found\n[Tests \ud83c\udfb3/pylint      ]   | Version 3.10 was not found in the local cache\n[Tests \ud83c\udfb3/pylint      ]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[Tests \ud83c\udfb3/flake8      ]   \u2757  ::error::API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Tests \ud83c\udfb3/flake8      ]   \u274c  Failure - Main Setup Python\n[Tests \ud83c\udfb3/pylint      ]   \u2757  ::error::API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Tests \ud83c\udfb3/pylint      ]   \u274c  Failure - Main Setup Python\n[Tests \ud83c\udfb3/test-qgis   ] \u2b50 Run Main Launching docker compose\n[Tests \ud83c\udfb3/pylint      ] exitcode '1': failure\n[Tests \ud83c\udfb3/flake8      ] exitcode '1': failure\n[Tests \ud83c\udfb3/test-qgis   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=.docker\n[Tests \ud83c\udfb3/pylint      ] \ud83c\udfc1  Job failed\n[Tests \ud83c\udfb3/flake8      ] \ud83c\udfc1  Job failed\n[Tests \ud83c\udfb3/test-qgis   ]   | unknown shorthand flag: 'f' in -f\n[Tests \ud83c\udfb3/test-qgis   ]   | See 'docker --help'.\n[Tests \ud83c\udfb3/test-qgis   ]   | \n[Tests \ud83c\udfb3/test-qgis   ]   | Usage:  docker [OPTIONS] COMMAND\n[Tests \ud83c\udfb3/test-qgis   ]   | \n[Tests \ud83c\udfb3/test-qgis   ]   | A self-sufficient runtime for containers\n[Tests \ud83c\udfb3/test-qgis   ]   | \n[Tests \ud83c\udfb3/test-qgis   ]   | Options:\n[Tests \ud83c\udfb3/test-qgis   ]   |       --config string      Location of client config files (default\n[Tests \ud83c\udfb3/test-qgis   ]   |                            \"/home/runneradmin/.docker\")\n[Tests \ud83c\udfb3/test-qgis   ]   |   -c, --context string     Name of the context to use to connect to the\n[Tests \ud83c\udfb3/test-qgis   ]   |                            daemon (overrides DOCKER_HOST env var and\n[Tests \ud83c\udfb3/test-qgis   ]   |                            default context set with \"docker context use\")\n[Tests \ud83c\udfb3/test-qgis   ]   |   -D, --debug              Enable debug mode\n[Tests \ud83c\udfb3/test-qgis   ]   |   -H, --host list          Daemon socket(s) to connect to\n[Tests \ud83c\udfb3/test-qgis   ]   |   -l, --log-level string   Set the logging level\n[Tests \ud83c\udfb3/test-qgis   ]   |                            (\"debug\"|\"info\"|\"warn\"|\"error\"|\"fatal\")\n[Tests \ud83c\udfb3/test-qgis   ]   |                            (default \"info\")\n[Tests \ud83c\udfb3/test-qgis   ]   |       --tls                Use TLS; implied by --tlsverify\n[Tests \ud83c\udfb3/test-qgis   ]   |       --tlscacert string   Trust certs signed only by this CA (default\n[Tests \ud83c\udfb3/test-qgis   ]   |                            \"/home/runneradmin/.docker/ca.pem\")\n[Tests \ud83c\udfb3/test-qgis   ]   |       --tlscert string     Path to TLS certificate file (default\n[Tests \ud83c\udfb3/test-qgis   ]   |                            \"/home/runneradmin/.docker/cert.pem\")\n[Tests \ud83c\udfb3/test-qgis   ]   |       --tlskey string      Path to TLS key file (default\n[Tests \ud83c\udfb3/test-qgis   ]   |                            \"/home/runneradmin/.docker/key.pem\")\n[Tests \ud83c\udfb3/test-qgis   ]   |       --tlsverify          Use TLS and verify the remote\n[Tests \ud83c\udfb3/test-qgis   ]   |   -v, --version            Print version information and quit\n[Tests \ud83c\udfb3/test-qgis   ]   | \n[Tests \ud83c\udfb3/test-qgis   ]   | Management Commands:\n[Tests \ud83c\udfb3/test-qgis   ]   |   builder     Manage builds\n[Tests \ud83c\udfb3/test-qgis   ]   |   buildx*     Build with BuildKit (Docker Inc., 0.6.0+azure)\n[Tests \ud83c\udfb3/test-qgis   ]   |   config      Manage Docker configs\n[Tests \ud83c\udfb3/test-qgis   ]   |   container   Manage containers\n[Tests \ud83c\udfb3/test-qgis   ]   |   context     Manage contexts\n[Tests \ud83c\udfb3/test-qgis   ]   |   image       Manage images\n[Tests \ud83c\udfb3/test-qgis   ]   |   manifest    Manage Docker image manifests and manifest lists\n[Tests \ud83c\udfb3/test-qgis   ]   |   network     Manage networks\n[Tests \ud83c\udfb3/test-qgis   ]   |   node        Manage Swarm nodes\n[Tests \ud83c\udfb3/test-qgis   ]   |   plugin      Manage plugins\n[Tests \ud83c\udfb3/test-qgis   ]   |   secret      Manage Docker secrets\n[Tests \ud83c\udfb3/test-qgis   ]   |   service     Manage services\n[Tests \ud83c\udfb3/test-qgis   ]   |   stack       Manage Docker stacks\n[Tests \ud83c\udfb3/test-qgis   ]   |   swarm       Manage Swarm\n[Tests \ud83c\udfb3/test-qgis   ]   |   system      Manage Docker\n[Tests \ud83c\udfb3/test-qgis   ]   |   trust       Manage trust on Docker images\n[Tests \ud83c\udfb3/test-qgis   ]   |   volume      Manage volumes\n[Tests \ud83c\udfb3/test-qgis   ]   | \n[Tests \ud83c\udfb3/test-qgis   ]   | Commands:\n[Tests \ud83c\udfb3/test-qgis   ]   |   attach      Attach local standard input, output, and error streams to a running container\n[Tests \ud83c\udfb3/test-qgis   ]   |   build       Build an image from a Dockerfile\n[Tests \ud83c\udfb3/test-qgis   ]   |   commit      Create a new image from a container's changes\n[Tests \ud83c\udfb3/test-qgis   ]   |   cp          Copy files/folders between a container and the local filesystem\n[Tests \ud83c\udfb3/test-qgis   ]   |   create      Create a new container\n[Tests \ud83c\udfb3/test-qgis   ]   |   diff        Inspect changes to files or directories on a container's filesystem\n[Tests \ud83c\udfb3/test-qgis   ]   |   events      Get real time events from the server\n[Tests \ud83c\udfb3/test-qgis   ]   |   exec        Run a command in a running container\n[Tests \ud83c\udfb3/test-qgis   ]   |   export      Export a container's filesystem as a tar archive\n[Tests \ud83c\udfb3/test-qgis   ]   |   history     Show the history of an image\n[Tests \ud83c\udfb3/test-qgis   ]   |   images      List images\n[Tests \ud83c\udfb3/test-qgis   ]   |   import      Import the contents from a tarball to create a filesystem image\n[Tests \ud83c\udfb3/test-qgis   ]   |   info        Display system-wide information\n[Tests \ud83c\udfb3/test-qgis   ]   |   inspect     Return low-level information on Docker objects\n[Tests \ud83c\udfb3/test-qgis   ]   |   kill        Kill one or more running containers\n[Tests \ud83c\udfb3/test-qgis   ]   |   load        Load an image from a tar archive or STDIN\n[Tests \ud83c\udfb3/test-qgis   ]   |   login       Log in to a Docker registry\n[Tests \ud83c\udfb3/test-qgis   ]   |   logout      Log out from a Docker registry\n[Tests \ud83c\udfb3/test-qgis   ]   |   logs        Fetch the logs of a container\n[Tests \ud83c\udfb3/test-qgis   ]   |   pause       Pause all processes within one or more containers\n[Tests \ud83c\udfb3/test-qgis   ]   |   port        List port mappings or a specific mapping for the container\n[Tests \ud83c\udfb3/test-qgis   ]   |   ps          List containers\n[Tests \ud83c\udfb3/test-qgis   ]   |   pull        Pull an image or a repository from a registry\n[Tests \ud83c\udfb3/test-qgis   ]   |   push        Push an image or a repository to a registry\n[Tests \ud83c\udfb3/test-qgis   ]   |   rename      Rename a container\n[Tests \ud83c\udfb3/test-qgis   ]   |   restart     Restart one or more containers\n[Tests \ud83c\udfb3/test-qgis   ]   |   rm          Remove one or more containers\n[Tests \ud83c\udfb3/test-qgis   ]   |   rmi         Remove one or more images\n[Tests \ud83c\udfb3/test-qgis   ]   |   run         Run a command in a new container\n[Tests \ud83c\udfb3/test-qgis   ]   |   save        Save one or more images to a tar archive (streamed to STDOUT by default)\n[Tests \ud83c\udfb3/test-qgis   ]   |   search      Search the Docker Hub for images\n[Tests \ud83c\udfb3/test-qgis   ]   |   start       Start one or more stopped containers\n[Tests \ud83c\udfb3/test-qgis   ]   |   stats       Display a live stream of container(s) resource usage statistics\n[Tests \ud83c\udfb3/test-qgis   ]   |   stop        Stop one or more running containers\n[Tests \ud83c\udfb3/test-qgis   ]   |   tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE\n[Tests \ud83c\udfb3/test-qgis   ]   |   top         Display the running processes of a container\n[Tests \ud83c\udfb3/test-qgis   ]   |   unpause     Unpause all processes within one or more containers\n[Tests \ud83c\udfb3/test-qgis   ]   |   update      Update configuration of one or more containers\n[Tests \ud83c\udfb3/test-qgis   ]   |   version     Show the Docker version information\n[Tests \ud83c\udfb3/test-qgis   ]   |   wait        Block until one or more containers stop, then print their exit codes\n[Tests \ud83c\udfb3/test-qgis   ]   | \n[Tests \ud83c\udfb3/test-qgis   ]   | Run 'docker COMMAND --help' for more information on a command.\n[Tests \ud83c\udfb3/test-qgis   ]   | \n[Tests \ud83c\udfb3/test-qgis   ]   | \u001b[1mTo get more help with docker, check out our guides at https://docs.docker.com/go/guides/\u001b[0m\n[Tests \ud83c\udfb3/test-qgis   ]   | \n[Tests \ud83c\udfb3/test-qgis   ]   | Wait 10 seconds\n[Tests \ud83c\udfb3/test-qgis   ]   | Installation of the plugin QuickOSM\n[Tests \ud83c\udfb3/test-qgis   ]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/qgis/json\": dial unix /var/run/docker.sock: connect: permission denied\n[Tests \ud83c\udfb3/test-qgis   ]   | Containers are running\n[Tests \ud83c\udfb3/test-qgis   ]   \u2705  Success - Main Launching docker compose\n[Tests \ud83c\udfb3/test-qgis   ] \u2b50 Run Main Running tests\n[Tests \ud83c\udfb3/test-qgis   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=.docker\n[Tests \ud83c\udfb3/test-qgis   ]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/qgis/json\": dial unix /var/run/docker.sock: connect: permission denied\n[Tests \ud83c\udfb3/test-qgis   ]   \u274c  Failure - Main Running tests\n[Tests \ud83c\udfb3/test-qgis   ] exitcode '1': failure\n[Tests \ud83c\udfb3/test-qgis   ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'test-qgis' failed\n"
}