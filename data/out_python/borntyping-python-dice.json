{
    "repository": "borntyping/python-dice",
    "clone_url": "https://github.com/borntyping/python-dice.git",
    "timestamp": "2023-05-29T14:59:11.808122Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Test/pytest] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/pytest]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/pytest]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/pytest]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/pytest]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/borntyping-python-dice] user=0 workdir=\n[Test/pytest]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[Test/pytest] \ud83e\uddea  Matrix: map[python-version:3.8]\n[Test/pytest] \u2b50 Run Main actions/checkout@v2\n[Test/pytest]   \u2705  Success - Main actions/checkout@v2\n[Test/pytest] \u2b50 Run Main actions/setup-python@v2\n[Test/pytest]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[Test/pytest]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[Test/pytest]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[Test/pytest]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[Test/pytest]   \ud83d\udcac  ::debug::isExplicit: \n[Test/pytest]   \ud83d\udcac  ::debug::explicit? false\n[Test/pytest]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Test/pytest]   \ud83d\udcac  ::debug::explicit? true\n[Test/pytest]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Test/pytest]   \ud83d\udcac  ::debug::explicit? true\n[Test/pytest]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Test/pytest]   \ud83d\udcac  ::debug::explicit? true\n[Test/pytest]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Test/pytest]   \ud83d\udcac  ::debug::explicit? true\n[Test/pytest]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Test/pytest]   \ud83d\udcac  ::debug::explicit? true\n[Test/pytest]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Test/pytest]   \ud83d\udcac  ::debug::explicit? true\n[Test/pytest]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Test/pytest]   \ud83d\udcac  ::debug::matched: 3.8.11\n[Test/pytest]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[Test/pytest]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[Test/pytest]   | Successfully setup CPython (3.8.11)\n[Test/pytest]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[Test/pytest]   \u2705  Success - Main actions/setup-python@v2\n[Test/pytest]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[Test/pytest]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[Test/pytest]   \u2699  ::set-output:: python-version=3.8.11\n[Test/pytest]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[Test/pytest]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[Test/pytest] \u2b50 Run Main python -m pip install pytest black .\n[Test/pytest]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test/pytest]   | Processing /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/borntyping-python-dice\n[Test/pytest]   |   DEPRECATION: A future pip version will change local packages to be built in-place without first copying to a temporary directory. We recommend you use --use-feature=in-tree-build to test your packages with this new behavior before it becomes the default.\n[Test/pytest]   |    pip 21.3 will remove support for this functionality. You can find discussion regarding this at https://github.com/pypa/pip/issues/7555.\n[Test/pytest]   |   Installing build dependencies: started\n[Test/pytest]   |   Installing build dependencies: finished with status 'done'\n[Test/pytest]   |   Getting requirements to build wheel: started\n[Test/pytest]   |   Getting requirements to build wheel: finished with status 'done'\n[Test/pytest]   |   Installing backend dependencies: started\n[Test/pytest]   |   Installing backend dependencies: finished with status 'done'\n[Test/pytest]   |     Preparing wheel metadata: started\n[Test/pytest]   |     Preparing wheel metadata: finished with status 'done'\n[Test/pytest]   | Collecting pytest\n[Test/pytest]   |   Downloading pytest-7.3.1-py3-none-any.whl (320 kB)\n[Test/pytest]   | Collecting black\n[Test/pytest]   |   Downloading black-23.3.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.6 MB)\n[Test/pytest]   | Collecting pluggy<2.0,>=0.12\n[Test/pytest]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[Test/pytest]   | Collecting packaging\n[Test/pytest]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[Test/pytest]   | Collecting iniconfig\n[Test/pytest]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[Test/pytest]   | Collecting tomli>=1.0.0\n[Test/pytest]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[Test/pytest]   | Collecting exceptiongroup>=1.0.0rc8\n[Test/pytest]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[Test/pytest]   | Collecting click>=8.0.0\n[Test/pytest]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[Test/pytest]   | Collecting typing-extensions>=3.10.0.0\n[Test/pytest]   |   Downloading typing_extensions-4.6.2-py3-none-any.whl (31 kB)\n[Test/pytest]   | Collecting platformdirs>=2\n[Test/pytest]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[Test/pytest]   | Collecting pathspec>=0.9.0\n[Test/pytest]   |   Downloading pathspec-0.11.1-py3-none-any.whl (29 kB)\n[Test/pytest]   | Collecting mypy-extensions>=0.4.3\n[Test/pytest]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[Test/pytest]   | Collecting pyparsing>=2.4.1\n[Test/pytest]   |   Downloading pyparsing-3.0.9-py3-none-any.whl (98 kB)\n[Test/pytest]   | Building wheels for collected packages: dice\n[Test/pytest]   |   Building wheel for dice (PEP 517): started\n[Test/pytest]   |   Building wheel for dice (PEP 517): finished with status 'done'\n[Test/pytest]   |   Created wheel for dice: filename=dice-4.0.0-py3-none-any.whl size=22275 sha256=0ab37bf8f6c8fe01c80a44cbda3acfd04de4cc1cd1b21d516a0cff4389829f31\n[Test/pytest]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/87/90/02/409ae31c54a40525f411938fb34a60a6eedcc574ecdf488c72\n[Test/pytest]   | Successfully built dice\n[Test/pytest]   | Installing collected packages: typing-extensions, tomli, pyparsing, pluggy, platformdirs, pathspec, packaging, mypy-extensions, iniconfig, exceptiongroup, click, pytest, dice, black\n[Test/pytest]   | Successfully installed black-23.3.0 click-8.1.3 dice-4.0.0 exceptiongroup-1.1.1 iniconfig-2.0.0 mypy-extensions-1.0.0 packaging-23.1 pathspec-0.11.1 platformdirs-3.5.1 pluggy-1.0.0 pyparsing-3.0.9 pytest-7.3.1 tomli-2.0.1 typing-extensions-4.6.2\n[Test/pytest]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Test/pytest]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.8.11/x64/bin/python -m pip install --upgrade pip' command.\n[Test/pytest]   \u2705  Success - Main python -m pip install pytest black .\n[Test/pytest] \u2b50 Run Main pytest\n[Test/pytest]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Test/pytest]   | ============================= test session starts ==============================\n[Test/pytest]   | platform linux -- Python 3.8.11, pytest-7.3.1, pluggy-1.0.0\n[Test/pytest]   | rootdir: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/borntyping-python-dice\n[Test/pytest]   | collected 93 items\n[Test/pytest]   | \n[Test/pytest]   | dice/tests/test_command.py .........                                     [  9%]\n[Test/pytest]   | dice/tests/test_elements.py ..........................                   [ 37%]\n[Test/pytest]   | dice/tests/test_grammar.py ............................................. [ 86%]\n[Test/pytest]   | ..                                                                       [ 88%]\n[Test/pytest]   | dice/tests/test_utilities.py ...........                                 [100%]\n[Test/pytest]   | \n[Test/pytest]   | ============================== 93 passed in 4.20s ==============================\n[Test/pytest]   \u2705  Success - Main pytest\n[Test/pytest] \u2b50 Run Main black --check .\n[Test/pytest]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Test/pytest]   | All done! \u2728 \ud83c\udf70 \u2728\n[Test/pytest]   | 13 files would be left unchanged.\n[Test/pytest]   \u2705  Success - Main black --check .\n[Test/pytest] \u2b50 Run Post actions/setup-python@v2\n[Test/pytest]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[Test/pytest]   \u2705  Success - Post actions/setup-python@v2\n[Test/pytest] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}