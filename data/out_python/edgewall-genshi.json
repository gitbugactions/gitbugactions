{
    "repository": "edgewall/genshi",
    "clone_url": "https://github.com/edgewall/genshi.git",
    "timestamp": "2023-05-29T14:12:06.730767Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Run test suite/tests] \ud83d\ude80  Start image=crawlergpt:latest\n[Run test suite/tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Run test suite/tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run test suite/tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run test suite/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/edgewall-genshi] user=0 workdir=\n[Run test suite/tests]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[Run test suite/tests] \ud83e\uddea  Matrix: map[python-version:2.7]\n[Run test suite/tests] \u2b50 Run Main actions/checkout@v2\n[Run test suite/tests]   \u2705  Success - Main actions/checkout@v2\n[Run test suite/tests] \u2b50 Run Main Set up Python 2.7\n[Run test suite/tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[Run test suite/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[Run test suite/tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[Run test suite/tests]   \ud83d\udcac  ::debug::Semantic version spec of 2.7 is 2.7\n[Run test suite/tests]   \ud83d\udcac  ::debug::isExplicit: \n[Run test suite/tests]   \ud83d\udcac  ::debug::explicit? false\n[Run test suite/tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Run test suite/tests]   \ud83d\udcac  ::debug::explicit? true\n[Run test suite/tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Run test suite/tests]   \ud83d\udcac  ::debug::explicit? true\n[Run test suite/tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Run test suite/tests]   \ud83d\udcac  ::debug::explicit? true\n[Run test suite/tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Run test suite/tests]   \ud83d\udcac  ::debug::explicit? true\n[Run test suite/tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Run test suite/tests]   \ud83d\udcac  ::debug::explicit? true\n[Run test suite/tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Run test suite/tests]   \ud83d\udcac  ::debug::explicit? true\n[Run test suite/tests]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Run test suite/tests]   \ud83d\udcac  ::debug::matched: 2.7.18\n[Run test suite/tests]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/2.7.18/x64\n[Run test suite/tests]   \ud83d\udcac  ::debug::Found tool in cache Python 2.7.18 x64\n[Run test suite/tests]   | Successfully setup CPython (2.7.18)\n[Run test suite/tests]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[Run test suite/tests]   \u2705  Success - Main Set up Python 2.7\n[Run test suite/tests]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/2.7.18/x64\n[Run test suite/tests]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/2.7.18/x64/lib\n[Run test suite/tests]   \u2699  ::set-output:: python-version=2.7.18\n[Run test suite/tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64\n[Run test suite/tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64/bin\n[Run test suite/tests] \u2b50 Run Main Run test suite\n[Run test suite/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Run test suite/tests]   | running test\n[Run test suite/tests]   | Searching for six\n[Run test suite/tests]   | Reading https://pypi.org/simple/six/\n[Run test suite/tests]   | Downloading https://files.pythonhosted.org/packages/d9/5a/e7c31adbe875f2abbb91bd84cf2dc52d792b5a01506781dbcf25c91daf11/six-1.16.0-py2.py3-none-any.whl#sha256=8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254\n[Run test suite/tests]   | Best match: six 1.16.0\n[Run test suite/tests]   | Processing six-1.16.0-py2.py3-none-any.whl\n[Run test suite/tests]   | Installing six-1.16.0-py2.py3-none-any.whl to /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/edgewall-genshi/.eggs\n[Run test suite/tests]   | \n[Run test suite/tests]   | Installed /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/edgewall-genshi/.eggs/six-1.16.0-py2.7.egg\n[Run test suite/tests]   | running egg_info\n[Run test suite/tests]   | creating Genshi.egg-info\n[Run test suite/tests]   | writing requirements to Genshi.egg-info/requires.txt\n[Run test suite/tests]   | writing Genshi.egg-info/PKG-INFO\n[Run test suite/tests]   | writing top-level names to Genshi.egg-info/top_level.txt\n[Run test suite/tests]   | writing dependency_links to Genshi.egg-info/dependency_links.txt\n[Run test suite/tests]   | writing entry points to Genshi.egg-info/entry_points.txt\n[Run test suite/tests]   | writing manifest file 'Genshi.egg-info/SOURCES.txt'\n[Run test suite/tests]   | reading manifest file 'Genshi.egg-info/SOURCES.txt'\n[Run test suite/tests]   | reading manifest template 'MANIFEST.in'\n[Run test suite/tests]   | warning: no files found matching '*.html' under directory 'doc'\n[Run test suite/tests]   | warning: no files found matching '*.css' under directory 'doc'\n[Run test suite/tests]   | warning: no files found matching '*.py' under directory 'doc'\n[Run test suite/tests]   | warning: no files found matching '*.ini' under directory 'doc'\n[Run test suite/tests]   | warning: no files found matching 'COPYING' under directory 'doc'\n[Run test suite/tests]   | warning: no previously-included files matching '*' found under directory 'doc/logo.lineform'\n[Run test suite/tests]   | warning: no previously-included files found matching 'doc/2000ft.graffle'\n[Run test suite/tests]   | warning: no previously-included files matching '*.pyc' found anywhere in distribution\n[Run test suite/tests]   | writing manifest file 'Genshi.egg-info/SOURCES.txt'\n[Run test suite/tests]   | running build_ext\n[Run test suite/tests]   | building 'genshi._speedups' extension\n[Run test suite/tests]   | creating build\n[Run test suite/tests]   | creating build/temp.linux-x86_64-2.7\n[Run test suite/tests]   | creating build/temp.linux-x86_64-2.7/genshi\n[Run test suite/tests]   | gcc -pthread -fno-strict-aliasing -g -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/opt/hostedtoolcache/Python/2.7.18/x64/include/python2.7 -c genshi/_speedups.c -o build/temp.linux-x86_64-2.7/genshi/_speedups.o\n[Run test suite/tests]   | gcc -pthread -shared -Wl,--rpath=/opt/hostedtoolcache/Python/2.7.18/x64/lib build/temp.linux-x86_64-2.7/genshi/_speedups.o -L/opt/hostedtoolcache/Python/2.7.18/x64/lib -lpython2.7 -o /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/edgewall-genshi/genshi/_speedups.so\n[Run test suite/tests]   | builder (genshi)\n[Run test suite/tests]   | Doctest: genshi.builder ... ok\n[Run test suite/tests]   | Element (genshi.builder)\n[Run test suite/tests]   | Doctest: genshi.builder.Element ... ok\n[Run test suite/tests]   | ElementFactory (genshi.builder)\n[Run test suite/tests]   | Doctest: genshi.builder.ElementFactory ... ok\n[Run test suite/tests]   | test_duplicate_attributes (genshi.tests.builder.ElementFactoryTestCase) ... ok\n[Run test suite/tests]   | test_link (genshi.tests.builder.ElementFactoryTestCase) ... ok\n[Run test suite/tests]   | test_markup_escape (genshi.tests.builder.ElementFactoryTestCase) ... ok\n[Run test suite/tests]   | test_nonstring_attributes (genshi.tests.builder.ElementFactoryTestCase) ... ok\n[Run test suite/tests]   | test_stream_as_child (genshi.tests.builder.ElementFactoryTestCase) ... ok\n[Run test suite/tests]   | test_pickle (genshi.tests.core.StreamTestCase) ... ok\n[Run test suite/tests]   | test_render_ascii (genshi.tests.core.StreamTestCase) ... ok\n[Run test suite/tests]   | test_render_output_stream_unicode (genshi.tests.core.StreamTestCase) ... ok\n[Run test suite/tests]   | test_render_output_stream_utf8 (genshi.tests.core.StreamTestCase) ... ok\n[Run test suite/tests]   | test_render_unicode (genshi.tests.core.StreamTestCase) ... ok\n[Run test suite/tests]   | test_render_utf8 (genshi.tests.core.StreamTestCase) ... ok\n[Run test suite/tests]   | test_Markup_escape_None_noquotes (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_add_markup (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_add_reverse (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_add_str (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_escape (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_escape_noquotes (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_join (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_join_over_iter (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_mod (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_mod_mapping (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_mod_multi (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_mod_noescape (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_mul (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_mul_reverse (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_new_with_encoding (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_pickle (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_repr (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_stripentities_all (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_stripentities_keepxml (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_striptags_empty (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_striptags_mid (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_unescape_markup (genshi.tests.core.MarkupTestCase) ... ok\n[Run test suite/tests]   | test_pickle (genshi.tests.core.NamespaceTestCase) ... ok\n[Run test suite/tests]   | test_repr (genshi.tests.core.NamespaceTestCase) ... ok\n[Run test suite/tests]   | test_repr_eval (genshi.tests.core.NamespaceTestCase) ... ok\n[Run test suite/tests]   | test_repr_eval_non_ascii (genshi.tests.core.NamespaceTestCase) ... ok\n[Run test suite/tests]   | test_non_ascii (genshi.tests.core.AttrsTestCase) ... ok\n[Run test suite/tests]   | test_pickle (genshi.tests.core.AttrsTestCase) ... ok\n[Run test suite/tests]   | test_curly_brace_equality (genshi.tests.core.QNameTestCase) ... ok\n[Run test suite/tests]   | test_leading_curly_brace (genshi.tests.core.QNameTestCase) ... ok\n[Run test suite/tests]   | test_pickle (genshi.tests.core.QNameTestCase) ... ok\n[Run test suite/tests]   | test_repr (genshi.tests.core.QNameTestCase) ... ok\n[Run test suite/tests]   | test_repr_eval (genshi.tests.core.QNameTestCase) ... ok\n[Run test suite/tests]   | test_repr_eval_non_ascii (genshi.tests.core.QNameTestCase) ... ok\n[Run test suite/tests]   | Attrs (genshi.core)\n[Run test suite/tests]   | Doctest: genshi.core.Attrs ... ok\n[Run test suite/tests]   | __getitem__ (genshi.core.Attrs)\n[Run test suite/tests]   | Doctest: genshi.core.Attrs.__getitem__ ... ok\n[Run test suite/tests]   | __getslice__ (genshi.core.Attrs)\n[Run test suite/tests]   | Doctest: genshi.core.Attrs.__getslice__ ... ok\n[Run test suite/tests]   | totuple (genshi.core.Attrs)\n[Run test suite/tests]   | Doctest: genshi.core.Attrs.totuple ... ok\n[Run test suite/tests]   | Namespace (genshi.core)\n[Run test suite/tests]   | Doctest: genshi.core.Namespace ... ok\n[Run test suite/tests]   | QName (genshi.core)\n[Run test suite/tests]   | Doctest: genshi.core.QName ... ok\n[Run test suite/tests]   | __or__ (genshi.core.Stream)\n[Run test suite/tests]   | Doctest: genshi.core.Stream.__or__ ... ok\n[Run test suite/tests]   | select (genshi.core.Stream)\n[Run test suite/tests]   | Doctest: genshi.core.Stream.select ... ok\n[Run test suite/tests]   | unescape (genshi.core)\n[Run test suite/tests]   | Doctest: genshi.core.unescape ... ok\n[Run test suite/tests]   | HTMLFormFiller (genshi.filters.html)\n[Run test suite/tests]   | Doctest: genshi.filters.html.HTMLFormFiller ... ok\n[Run test suite/tests]   | HTMLSanitizer (genshi.filters.html)\n[Run test suite/tests]   | Doctest: genshi.filters.html.HTMLSanitizer ... ok\n[Run test suite/tests]   | is_safe_uri (genshi.filters.html.HTMLSanitizer)\n[Run test suite/tests]   | Doctest: genshi.filters.html.HTMLSanitizer.is_safe_uri ... ok\n[Run test suite/tests]   | sanitize_css (genshi.filters.html.HTMLSanitizer)\n[Run test suite/tests]   | Doctest: genshi.filters.html.HTMLSanitizer.sanitize_css ... ok\n[Run test suite/tests]   | test_fill_input_checkbox_multi_value_auto (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_input_checkbox_multi_value_defined (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_input_checkbox_single_value_auto (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_input_checkbox_single_value_auto_no_value (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_input_checkbox_single_value_defined (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_input_hidden_multi_value (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_input_hidden_no_value (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_input_hidden_single_value (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_input_password_disabled (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_input_password_enabled (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_input_radio_empty_string (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_input_radio_multi_empty_string (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_input_radio_multi_value (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_input_radio_no_value (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_input_radio_single_value (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_input_text_multi_value (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_input_text_no_value (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_input_text_single_value (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_option_segmented_text (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_option_segmented_text_no_value (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_option_unicode_value (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_select_multi_value_auto (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_select_multi_value_defined (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_select_no_value_auto (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_select_no_value_defined (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_select_single_value_auto (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_select_single_value_defined (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_textarea_multi_value (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_textarea_multiple (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_textarea_no_value (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_textarea_preserve_original (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_fill_textarea_single_value (genshi.filters.tests.test_html.HTMLFormFillerTestCase) ... ok\n[Run test suite/tests]   | test_capital_expression (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_backslash_without_hex (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_capital_url_with_javascript (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_close_empty_tag (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_css_hack (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_entityref_text (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_escape_attr (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_escape_text (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_expression (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_invalid_entity (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_negative_margin (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_property_name (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_remove_comments (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_remove_input_password (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_remove_onclick_attr (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_remove_script_elem (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_remove_src_javascript (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_remove_style_phishing (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_remove_style_scripts (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_unchanged (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_unicode_escapes (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_unicode_expression (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_unicode_url (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_unsafe_props (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | test_sanitize_url_with_javascript (genshi.filters.tests.test_html.HTMLSanitizerTestCase) ... ok\n[Run test suite/tests]   | ChooseDirective (genshi.filters.i18n)\n[Run test suite/tests]   | Doctest: genshi.filters.i18n.ChooseDirective ... ok\n[Run test suite/tests]   | CommentDirective (genshi.filters.i18n)\n[Run test suite/tests]   | Doctest: genshi.filters.i18n.CommentDirective ... ok\n[Run test suite/tests]   | DomainDirective (genshi.filters.i18n)\n[Run test suite/tests]   | Doctest: genshi.filters.i18n.DomainDirective ... ok\n[Run test suite/tests]   | MsgDirective (genshi.filters.i18n)\n[Run test suite/tests]   | Doctest: genshi.filters.i18n.MsgDirective ... ok\n[Run test suite/tests]   | Translator (genshi.filters.i18n)\n[Run test suite/tests]   | Doctest: genshi.filters.i18n.Translator ... ok\n[Run test suite/tests]   | extract (genshi.filters.i18n.Translator)\n[Run test suite/tests]   | Doctest: genshi.filters.i18n.Translator.extract ... ok\n[Run test suite/tests]   | extract_from_code (genshi.filters.i18n)\n[Run test suite/tests]   | Doctest: genshi.filters.i18n.extract_from_code ... ok\n[Run test suite/tests]   | parse_msg (genshi.filters.i18n)\n[Run test suite/tests]   | Doctest: genshi.filters.i18n.parse_msg ... ok\n[Run test suite/tests]   | test_extract_attribute_expr (genshi.filters.tests.i18n.TranslatorTestCase) ... ok\n[Run test suite/tests]   | test_extract_funky_plural_form (genshi.filters.tests.i18n.TranslatorTestCase) ... ok\n[Run test suite/tests]   | test_extract_gettext_with_unicode_string (genshi.filters.tests.i18n.TranslatorTestCase) ... ok\n[Run test suite/tests]   | test_extract_included_attribute_text (genshi.filters.tests.i18n.TranslatorTestCase) ... ok\n[Run test suite/tests]   | test_extract_included_attribute_text_with_spaces (genshi.filters.tests.i18n.TranslatorTestCase) ... ok\n[Run test suite/tests]   | test_extract_included_empty_attribute_text (genshi.filters.tests.i18n.TranslatorTestCase) ... ok\n[Run test suite/tests]   | test_extract_non_included_attribute_interpolated (genshi.filters.tests.i18n.TranslatorTestCase) ... ok\n[Run test suite/tests]   | test_extract_plural_form (genshi.filters.tests.i18n.TranslatorTestCase) ... ok\n[Run test suite/tests]   | test_extract_tag_with_variable_xml_lang (genshi.filters.tests.i18n.TranslatorTestCase) ... ok\n[Run test suite/tests]   | test_extract_text_from_sub (genshi.filters.tests.i18n.TranslatorTestCase) ... ok\n[Run test suite/tests]   | test_extract_without_text (genshi.filters.tests.i18n.TranslatorTestCase) ... ok\n[Run test suite/tests]   | test_ignore_attribute_with_expression (genshi.filters.tests.i18n.TranslatorTestCase) ... ok\n[Run test suite/tests]   | test_ignore_tag_with_fixed_xml_lang (genshi.filters.tests.i18n.TranslatorTestCase) ... ok\n[Run test suite/tests]   | test_translate_included_attribute_text (genshi.filters.tests.i18n.TranslatorTestCase) ... ok\n[Run test suite/tests]   | test_translate_included_attribute_text_with_spaces (genshi.filters.tests.i18n.TranslatorTestCase) ... ok\n[Run test suite/tests]   | test_translate_included_empty_attribute_text (genshi.filters.tests.i18n.TranslatorTestCase) ... ok\n[Run test suite/tests]   | test_translate_with_translations_object (genshi.filters.tests.i18n.TranslatorTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_msg (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_msg_as_element_with_attributes (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_msg_elt_nonewline (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_msg_empty (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_msg_label_with_nested_input (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_msg_multiple (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_msg_multiple_empty (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_msg_nested (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_msg_nonewline (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_msg_with_attr (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_msg_with_attributes (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_msg_with_comment (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_msg_with_directive (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_msg_with_dynamic_attributes (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_msg_with_other_directives_nested (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_msg_with_param (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_msg_with_py_strip (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_msg_with_py_strip_and_comment (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_msg_with_two_params (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_i18n_msg_ticket_251_extract (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_i18n_msg_ticket_251_translate (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_i18n_msg_ticket_300_extract (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_i18n_msg_ticket_300_translate (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_i18n_msg_with_other_nested_directives_with_reordered_content (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_and_comment_with_py_strip_directives (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_and_py_strip_directives (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_as_element_with_attributes (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_elt_nonewline (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_empty (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_label_with_nested_input (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_multiple (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_multiple_empty (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_nested (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_nonewline (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_ticket_404 (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_ticket_404_regression (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_with_attr (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_with_attribute_param (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_with_attributes (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_with_comment (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_with_directive (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_with_dynamic_attributes (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_with_other_directives_nested (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_with_param (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_with_param_reordered (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_msg_with_two_params (genshi.filters.tests.i18n.MsgDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_choose_as_attribute (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_choose_as_attribute_and_py_strip (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_choose_as_attribute_with_params (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_choose_as_attribute_with_params_and_comment (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_choose_as_attribute_with_params_and_domain_as_param (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_choose_as_directive (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_choose_as_directive_with_params (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_choose_as_directive_with_params_and_comment (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_choose_as_directive_with_params_and_domain_as_directive (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_choose_as_element_with_attributes (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_i18n_choose_with_attributes (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_choose_and_domain_and_py_strip (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_choose_and_plural_with_py_strip (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_choose_and_py_strip (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_choose_and_singular_with_py_strip (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_choose_as_attribute (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_choose_as_attribute_with_params (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_choose_as_attribute_with_params_and_domain_as_param (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_choose_as_directive (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_choose_as_directive_singular_and_plural_with_strip (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_choose_as_directive_with_params (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_choose_as_directive_with_params_and_domain_as_directive (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_choose_as_element_with_attributes (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_choose_plural_singular_as_directive (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_choose_with_attributes (genshi.filters.tests.i18n.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_domain_as_directive_not_attribute (genshi.filters.tests.i18n.DomainDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_domain_nested_directives (genshi.filters.tests.i18n.DomainDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_domain_with_empty_nested_domain_directive (genshi.filters.tests.i18n.DomainDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_domain_with_inline_directive_on_START_NS (genshi.filters.tests.i18n.DomainDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_domain_with_inline_directive_on_START_NS_with_py_strip (genshi.filters.tests.i18n.DomainDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_domain_with_inline_directives (genshi.filters.tests.i18n.DomainDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_domain_with_msg_directives (genshi.filters.tests.i18n.DomainDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_domain_with_nested_includes (genshi.filters.tests.i18n.DomainDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_domain_with_nested_includes_with_translatable_attrs (genshi.filters.tests.i18n.DomainDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_i18n_domain_without_msg_directives (genshi.filters.tests.i18n.DomainDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_extract_py_def_directive_with_py_strip (genshi.filters.tests.i18n.ExtractTestCase) ... ok\n[Run test suite/tests]   | test_extraction_inside_ignored_tags (genshi.filters.tests.i18n.ExtractTestCase) ... ok\n[Run test suite/tests]   | test_extraction_inside_ignored_tags_with_directives (genshi.filters.tests.i18n.ExtractTestCase) ... ok\n[Run test suite/tests]   | test_extraction_with_keyword_arg (genshi.filters.tests.i18n.ExtractTestCase) ... ok\n[Run test suite/tests]   | test_extraction_with_nonstring_arg (genshi.filters.tests.i18n.ExtractTestCase) ... ok\n[Run test suite/tests]   | test_extraction_without_text (genshi.filters.tests.i18n.ExtractTestCase) ... ok\n[Run test suite/tests]   | test_markup_template_extraction (genshi.filters.tests.i18n.ExtractTestCase) ... ok\n[Run test suite/tests]   | test_text_template_extraction (genshi.filters.tests.i18n.ExtractTestCase) ... ok\n[Run test suite/tests]   | test_extract_msgcontext (genshi.filters.tests.i18n.ContextDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_context_with_msg (genshi.filters.tests.i18n.ContextDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_msgcontext (genshi.filters.tests.i18n.ContextDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_msgcontext_with_domain (genshi.filters.tests.i18n.ContextDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_translate_msgcontext_with_plurals (genshi.filters.tests.i18n.ContextDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_select_attr (genshi.filters.tests.transform.SelectTest) ... ok\n[Run test suite/tests]   | test_select_context (genshi.filters.tests.transform.SelectTest) ... ok\n[Run test suite/tests]   | test_select_inside_select (genshi.filters.tests.transform.SelectTest) ... ok\n[Run test suite/tests]   | test_select_single_element (genshi.filters.tests.transform.SelectTest) ... ok\n[Run test suite/tests]   | test_select_text (genshi.filters.tests.transform.SelectTest) ... ok\n[Run test suite/tests]   | test_select_text_context (genshi.filters.tests.transform.SelectTest) ... ok\n[Run test suite/tests]   | test_invert_attribute (genshi.filters.tests.transform.InvertTest) ... ok\n[Run test suite/tests]   | test_invert_context (genshi.filters.tests.transform.InvertTest) ... ok\n[Run test suite/tests]   | test_invert_element (genshi.filters.tests.transform.InvertTest) ... ok\n[Run test suite/tests]   | test_invert_inverted_element (genshi.filters.tests.transform.InvertTest) ... ok\n[Run test suite/tests]   | test_invert_text (genshi.filters.tests.transform.InvertTest) ... ok\n[Run test suite/tests]   | test_invert_text_context (genshi.filters.tests.transform.InvertTest) ... ok\n[Run test suite/tests]   | test_end (genshi.filters.tests.transform.EndTest) ... ok\n[Run test suite/tests]   | test_empty_attr (genshi.filters.tests.transform.EmptyTest) ... ok\n[Run test suite/tests]   | test_empty_context (genshi.filters.tests.transform.EmptyTest) ... ok\n[Run test suite/tests]   | test_empty_element (genshi.filters.tests.transform.EmptyTest) ... ok\n[Run test suite/tests]   | test_empty_text (genshi.filters.tests.transform.EmptyTest) ... ok\n[Run test suite/tests]   | test_empty_text_context (genshi.filters.tests.transform.EmptyTest) ... ok\n[Run test suite/tests]   | test_remove_attr (genshi.filters.tests.transform.RemoveTest) ... ok\n[Run test suite/tests]   | test_remove_context (genshi.filters.tests.transform.RemoveTest) ... ok\n[Run test suite/tests]   | test_remove_element (genshi.filters.tests.transform.RemoveTest) ... ok\n[Run test suite/tests]   | test_remove_text (genshi.filters.tests.transform.RemoveTest) ... ok\n[Run test suite/tests]   | test_remove_text_context (genshi.filters.tests.transform.RemoveTest) ... ok\n[Run test suite/tests]   | test_unwrap_adjacent (genshi.filters.tests.transform.UnwrapText) ... ok\n[Run test suite/tests]   | test_unwrap_attr (genshi.filters.tests.transform.UnwrapText) ... ok\n[Run test suite/tests]   | test_unwrap_element (genshi.filters.tests.transform.UnwrapText) ... ok\n[Run test suite/tests]   | test_unwrap_root (genshi.filters.tests.transform.UnwrapText) ... ok\n[Run test suite/tests]   | test_unwrap_text (genshi.filters.tests.transform.UnwrapText) ... ok\n[Run test suite/tests]   | test_unwrap_text_root (genshi.filters.tests.transform.UnwrapText) ... ok\n[Run test suite/tests]   | test_wrap_adjacent_elements (genshi.filters.tests.transform.WrapTest) ... ok\n[Run test suite/tests]   | test_wrap_element (genshi.filters.tests.transform.WrapTest) ... ok\n[Run test suite/tests]   | test_wrap_root (genshi.filters.tests.transform.WrapTest) ... ok\n[Run test suite/tests]   | test_wrap_text (genshi.filters.tests.transform.WrapTest) ... ok\n[Run test suite/tests]   | test_wrap_text_root (genshi.filters.tests.transform.WrapTest) ... ok\n[Run test suite/tests]   | test_wrap_with_element (genshi.filters.tests.transform.WrapTest) ... ok\n[Run test suite/tests]   | test_filter_adjacent_elements (genshi.filters.tests.transform.FilterTest) ... ok\n[Run test suite/tests]   | test_filter_after_outside (genshi.filters.tests.transform.FilterTest) ... ok\n[Run test suite/tests]   | test_filter_element (genshi.filters.tests.transform.FilterTest) ... ok\n[Run test suite/tests]   | test_filter_root (genshi.filters.tests.transform.FilterTest) ... ok\n[Run test suite/tests]   | test_filter_text (genshi.filters.tests.transform.FilterTest) ... ok\n[Run test suite/tests]   | test_filter_text_root (genshi.filters.tests.transform.FilterTest) ... ok\n[Run test suite/tests]   | test_map_element (genshi.filters.tests.transform.MapTest) ... ok\n[Run test suite/tests]   | test_map_with_attribute (genshi.filters.tests.transform.MapTest) ... ok\n[Run test suite/tests]   | test_map_with_root_and_end_kind (genshi.filters.tests.transform.MapTest) ... ok\n[Run test suite/tests]   | test_map_with_text_kind (genshi.filters.tests.transform.MapTest) ... ok\n[Run test suite/tests]   | test_substitute_foo (genshi.filters.tests.transform.SubstituteTest) ... ok\n[Run test suite/tests]   | test_substitute_foobar_with_group (genshi.filters.tests.transform.SubstituteTest) ... ok\n[Run test suite/tests]   | test_rename_element (genshi.filters.tests.transform.RenameTest) ... ok\n[Run test suite/tests]   | test_rename_root (genshi.filters.tests.transform.RenameTest) ... ok\n[Run test suite/tests]   | test_rename_text (genshi.filters.tests.transform.RenameTest) ... ok\n[Run test suite/tests]   | test_replace_adjacent_elements (genshi.filters.tests.transform.ReplaceTest) ... ok\n[Run test suite/tests]   | test_replace_all (genshi.filters.tests.transform.ReplaceTest) ... ok\n[Run test suite/tests]   | test_replace_context (genshi.filters.tests.transform.ReplaceTest) ... ok\n[Run test suite/tests]   | test_replace_element (genshi.filters.tests.transform.ReplaceTest) ... ok\n[Run test suite/tests]   | test_replace_text (genshi.filters.tests.transform.ReplaceTest) ... ok\n[Run test suite/tests]   | test_replace_text_context (genshi.filters.tests.transform.ReplaceTest) ... ok\n[Run test suite/tests]   | test_replace_with_callback (genshi.filters.tests.transform.ReplaceTest) ... ok\n[Run test suite/tests]   | test_before_adjacent_elements (genshi.filters.tests.transform.BeforeTest) ... ok\n[Run test suite/tests]   | test_before_all (genshi.filters.tests.transform.BeforeTest) ... ok\n[Run test suite/tests]   | test_before_context (genshi.filters.tests.transform.BeforeTest) ... ok\n[Run test suite/tests]   | test_before_element (genshi.filters.tests.transform.BeforeTest) ... ok\n[Run test suite/tests]   | test_before_text (genshi.filters.tests.transform.BeforeTest) ... ok\n[Run test suite/tests]   | test_before_text_context (genshi.filters.tests.transform.BeforeTest) ... ok\n[Run test suite/tests]   | test_before_with_callback (genshi.filters.tests.transform.BeforeTest) ... ok\n[Run test suite/tests]   | test_after_adjacent_elements (genshi.filters.tests.transform.AfterTest) ... ok\n[Run test suite/tests]   | test_after_all (genshi.filters.tests.transform.AfterTest) ... ok\n[Run test suite/tests]   | test_after_context (genshi.filters.tests.transform.AfterTest) ... ok\n[Run test suite/tests]   | test_after_element (genshi.filters.tests.transform.AfterTest) ... ok\n[Run test suite/tests]   | test_after_text (genshi.filters.tests.transform.AfterTest) ... ok\n[Run test suite/tests]   | test_after_text_context (genshi.filters.tests.transform.AfterTest) ... ok\n[Run test suite/tests]   | test_after_with_callback (genshi.filters.tests.transform.AfterTest) ... ok\n[Run test suite/tests]   | test_prepend_adjacent_elements (genshi.filters.tests.transform.PrependTest) ... ok\n[Run test suite/tests]   | test_prepend_all (genshi.filters.tests.transform.PrependTest) ... ok\n[Run test suite/tests]   | test_prepend_context (genshi.filters.tests.transform.PrependTest) ... ok\n[Run test suite/tests]   | test_prepend_element (genshi.filters.tests.transform.PrependTest) ... ok\n[Run test suite/tests]   | test_prepend_text (genshi.filters.tests.transform.PrependTest) ... ok\n[Run test suite/tests]   | test_prepend_text_context (genshi.filters.tests.transform.PrependTest) ... ok\n[Run test suite/tests]   | test_prepend_with_callback (genshi.filters.tests.transform.PrependTest) ... ok\n[Run test suite/tests]   | test_append_adjacent_elements (genshi.filters.tests.transform.AppendTest) ... ok\n[Run test suite/tests]   | test_append_all (genshi.filters.tests.transform.AppendTest) ... ok\n[Run test suite/tests]   | test_append_context (genshi.filters.tests.transform.AppendTest) ... ok\n[Run test suite/tests]   | test_append_element (genshi.filters.tests.transform.AppendTest) ... ok\n[Run test suite/tests]   | test_append_text (genshi.filters.tests.transform.AppendTest) ... ok\n[Run test suite/tests]   | test_append_text_context (genshi.filters.tests.transform.AppendTest) ... ok\n[Run test suite/tests]   | test_append_with_callback (genshi.filters.tests.transform.AppendTest) ... ok\n[Run test suite/tests]   | test_attr_from_function (genshi.filters.tests.transform.AttrTest) ... ok\n[Run test suite/tests]   | test_remove_attr (genshi.filters.tests.transform.AttrTest) ... ok\n[Run test suite/tests]   | test_remove_attr_with_function (genshi.filters.tests.transform.AttrTest) ... ok\n[Run test suite/tests]   | test_set_existing_attr (genshi.filters.tests.transform.AttrTest) ... ok\n[Run test suite/tests]   | test_set_new_attr (genshi.filters.tests.transform.AttrTest) ... ok\n[Run test suite/tests]   | test_copy_adjacent_elements (genshi.filters.tests.transform.CopyTest) ... ok\n[Run test suite/tests]   | test_copy_all (genshi.filters.tests.transform.CopyTest) ... ok\n[Run test suite/tests]   | test_copy_attribute (genshi.filters.tests.transform.CopyTest) ... ok\n[Run test suite/tests]   | test_copy_attributes (genshi.filters.tests.transform.CopyTest) ... ok\n[Run test suite/tests]   | test_copy_context (genshi.filters.tests.transform.CopyTest) ... ok\n[Run test suite/tests]   | test_copy_element (genshi.filters.tests.transform.CopyTest) ... ok\n[Run test suite/tests]   | test_copy_text (genshi.filters.tests.transform.CopyTest) ... ok\n[Run test suite/tests]   | test_cut_adjacent_elements (genshi.filters.tests.transform.CutTest) ... ok\n[Run test suite/tests]   | test_cut_all (genshi.filters.tests.transform.CutTest) ... ok\n[Run test suite/tests]   | test_cut_attribute (genshi.filters.tests.transform.CutTest) ... ok\n[Run test suite/tests]   | test_cut_attributes (genshi.filters.tests.transform.CutTest) ... ok\n[Run test suite/tests]   | test_cut_context (genshi.filters.tests.transform.CutTest) ... ok\n[Run test suite/tests]   | test_cut_element (genshi.filters.tests.transform.CutTest) ... ok\n[Run test suite/tests]   | test_cut_text (genshi.filters.tests.transform.CutTest) ... ok\n[Run test suite/tests]   | transform (genshi.filters)\n[Run test suite/tests]   | Doctest: genshi.filters.transform ... ok\n[Run test suite/tests]   | InjectorTransformation (genshi.filters.transform)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.InjectorTransformation ... ok\n[Run test suite/tests]   | Transformer (genshi.filters.transform)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer ... ok\n[Run test suite/tests]   | after (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.after ... ok\n[Run test suite/tests]   | append (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.append ... ok\n[Run test suite/tests]   | apply (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.apply ... ok\n[Run test suite/tests]   | attr (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.attr ... ok\n[Run test suite/tests]   | before (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.before ... ok\n[Run test suite/tests]   | buffer (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.buffer ... ok\n[Run test suite/tests]   | copy (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.copy ... ok\n[Run test suite/tests]   | cut (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.cut ... ok\n[Run test suite/tests]   | empty (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.empty ... ok\n[Run test suite/tests]   | end (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.end ... ok\n[Run test suite/tests]   | filter (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.filter ... ok\n[Run test suite/tests]   | invert (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.invert ... ok\n[Run test suite/tests]   | map (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.map ... ok\n[Run test suite/tests]   | prepend (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.prepend ... ok\n[Run test suite/tests]   | remove (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.remove ... ok\n[Run test suite/tests]   | rename (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.rename ... ok\n[Run test suite/tests]   | replace (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.replace ... ok\n[Run test suite/tests]   | select (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.select ... ok\n[Run test suite/tests]   | substitute (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.substitute ... ok\n[Run test suite/tests]   | trace (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.trace ... ok\n[Run test suite/tests]   | unwrap (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.unwrap ... ok\n[Run test suite/tests]   | wrap (genshi.filters.transform.Transformer)\n[Run test suite/tests]   | Doctest: genshi.filters.transform.Transformer.wrap ... ok\n[Run test suite/tests]   | HTML (genshi.input)\n[Run test suite/tests]   | Doctest: genshi.input.HTML ... ok\n[Run test suite/tests]   | HTMLParser (genshi.input)\n[Run test suite/tests]   | Doctest: genshi.input.HTMLParser ... ok\n[Run test suite/tests]   | XML (genshi.input)\n[Run test suite/tests]   | Doctest: genshi.input.XML ... ok\n[Run test suite/tests]   | XMLParser (genshi.input)\n[Run test suite/tests]   | Doctest: genshi.input.XMLParser ... ok\n[Run test suite/tests]   | test_element_attribute_order (genshi.tests.input.XMLParserTestCase) ... ok\n[Run test suite/tests]   | test_html_entity_in_attribute (genshi.tests.input.XMLParserTestCase) ... ok\n[Run test suite/tests]   | test_html_entity_with_dtd (genshi.tests.input.XMLParserTestCase) ... ok\n[Run test suite/tests]   | test_html_entity_without_dtd (genshi.tests.input.XMLParserTestCase) ... ok\n[Run test suite/tests]   | test_latin1_encoded (genshi.tests.input.XMLParserTestCase) ... ok\n[Run test suite/tests]   | test_latin1_encoded_xmldecl (genshi.tests.input.XMLParserTestCase) ... ok\n[Run test suite/tests]   | test_text_node_pos_multi_line (genshi.tests.input.XMLParserTestCase) ... ok\n[Run test suite/tests]   | test_text_node_pos_single_line (genshi.tests.input.XMLParserTestCase) ... ok\n[Run test suite/tests]   | test_undefined_entity_with_dtd (genshi.tests.input.XMLParserTestCase) ... ok\n[Run test suite/tests]   | test_undefined_entity_without_dtd (genshi.tests.input.XMLParserTestCase) ... ok\n[Run test suite/tests]   | test_unicode_input (genshi.tests.input.XMLParserTestCase) ... ok\n[Run test suite/tests]   | test_convert_ElementTree_to_markup_stream (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_hex_charref (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_html_entity_in_attribute (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_html_entity_in_text (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_input_encoding_attribute (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_input_encoding_text (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_multibyte_character_on_chunk_boundary (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_out_of_order_tags1 (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_out_of_order_tags2 (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_out_of_order_tags3 (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_processing_instruction (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_processing_instruction_no_data_1 (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_processing_instruction_no_data_2 (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_processing_instruction_trailing_qmark (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_text_node_pos_multi_line (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_text_node_pos_single_line (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_unicode_input (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_xmldecl (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_xmldecl_encoding (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_xmldecl_standalone (genshi.tests.input.HTMLParserTestCase) ... ok\n[Run test suite/tests]   | test_atom_with_xhtml (genshi.tests.output.XMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_comment (genshi.tests.output.XMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_doctype_in_stream (genshi.tests.output.XMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_doctype_in_stream_no_pubid (genshi.tests.output.XMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_doctype_in_stream_no_pubid_or_sysid (genshi.tests.output.XMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_doctype_in_stream_no_sysid (genshi.tests.output.XMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_doctype_one_and_only (genshi.tests.output.XMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_multiple_bound_namespaces (genshi.tests.output.XMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_multiple_default_namespaces (genshi.tests.output.XMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_nested_bound_namespaces (genshi.tests.output.XMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_nested_default_namespaces (genshi.tests.output.XMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_processing_instruction (genshi.tests.output.XMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_serializer_doctype (genshi.tests.output.XMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_with_xml_decl (genshi.tests.output.XMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_cache_markup (genshi.tests.output.XHTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_embedded_svg (genshi.tests.output.XHTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_empty_script (genshi.tests.output.XHTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_html5_doctype (genshi.tests.output.XHTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_ignorable_space (genshi.tests.output.XHTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_nested_bound_namespaces (genshi.tests.output.XHTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_nested_default_namespaces (genshi.tests.output.XHTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_pre_whitespace (genshi.tests.output.XHTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_script_escaping (genshi.tests.output.XHTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_script_escaping_with_namespace (genshi.tests.output.XHTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_style_escaping (genshi.tests.output.XHTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_style_escaping_with_namespace (genshi.tests.output.XHTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_textarea_whitespace (genshi.tests.output.XHTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_xhtml_namespace_prefix (genshi.tests.output.XHTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_xml_decl_dropped (genshi.tests.output.XHTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_xml_decl_included (genshi.tests.output.XHTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_xml_lang (genshi.tests.output.XHTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_xml_lang_nodup (genshi.tests.output.XHTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_xml_space (genshi.tests.output.XHTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_empty_script (genshi.tests.output.HTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_html5_doctype (genshi.tests.output.HTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_pre_whitespace (genshi.tests.output.HTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_script_escaping (genshi.tests.output.HTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_script_escaping_with_namespace (genshi.tests.output.HTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_style_escaping (genshi.tests.output.HTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_style_escaping_with_namespace (genshi.tests.output.HTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_textarea_whitespace (genshi.tests.output.HTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_xml_lang (genshi.tests.output.HTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_xml_lang_nodup (genshi.tests.output.HTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_xml_space (genshi.tests.output.HTMLSerializerTestCase) ... ok\n[Run test suite/tests]   | test_elem_content (genshi.tests.output.EmptyTagFilterTestCase) ... ok\n[Run test suite/tests]   | test_empty (genshi.tests.output.EmptyTagFilterTestCase) ... ok\n[Run test suite/tests]   | test_text_content (genshi.tests.output.EmptyTagFilterTestCase) ... ok\n[Run test suite/tests]   | HTMLSerializer (genshi.output)\n[Run test suite/tests]   | Doctest: genshi.output.HTMLSerializer ... ok\n[Run test suite/tests]   | NamespaceFlattener (genshi.output)\n[Run test suite/tests]   | Doctest: genshi.output.NamespaceFlattener ... ok\n[Run test suite/tests]   | TextSerializer (genshi.output)\n[Run test suite/tests]   | Doctest: genshi.output.TextSerializer ... ok\n[Run test suite/tests]   | XHTMLSerializer (genshi.output)\n[Run test suite/tests]   | Doctest: genshi.output.XHTMLSerializer ... ok\n[Run test suite/tests]   | XMLSerializer (genshi.output)\n[Run test suite/tests]   | Doctest: genshi.output.XMLSerializer ... ok\n[Run test suite/tests]   | path (genshi)\n[Run test suite/tests]   | Doctest: genshi.path ... ok\n[Run test suite/tests]   | select (genshi.path.Path)\n[Run test suite/tests]   | Doctest: genshi.path.Path.select ... ok\n[Run test suite/tests]   | test (genshi.path.Path)\n[Run test suite/tests]   | Doctest: genshi.path.Path.test ... ok\n[Run test suite/tests]   | test_1step (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_1step_attribute (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_1step_self (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_1step_text (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_1step_wildcard (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_2step (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_2step_attribute (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_2step_complex (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_2step_text (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_3step (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_3step_complex (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_3step_complex_text (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_attr_selection (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_attr_selection_with_namespace (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_attrname_with_namespace (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_attrwildcard_with_namespace (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_error_no_absolute_path (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_error_unsupported_axis (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_long_simple_paths (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_name_with_namespace (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_node_type_comment (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_node_type_node (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_node_type_processing_instruction (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_node_type_text (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_advanced_position (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_attr (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_attr_and (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_attr_and_position (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_attr_equality (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_attr_greater_than (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_attr_less_than (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_attr_or (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_boolean_function (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_ceil_function (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_child_position (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_concat_function (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_contains_function (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_false_function (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_floor_function (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_localname (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_matches_function (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_name (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_namespace (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_normalize_space_function (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_not_name (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_number_function (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_position (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_position_and_attr (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_round_function (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_starts_with_function (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_string_length_function (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_substring_after_function (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_substring_before_function (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_substring_function (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_termination (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_translate_function (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_true_function (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_predicate_variable (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_self_and_descendant (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_simple_strategy_support (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_simple_union (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | test_wildcard_with_namespace (genshi.tests.path.PathTestCase) ... ok\n[Run test suite/tests]   | Context (genshi.template.base)\n[Run test suite/tests]   | Doctest: genshi.template.base.Context ... ok\n[Run test suite/tests]   | test_copy (genshi.template.tests.base.ContextTestCase) ... ok\n[Run test suite/tests]   | AttrsDirective (genshi.template.directives)\n[Run test suite/tests]   | Doctest: genshi.template.directives.AttrsDirective ... ok\n[Run test suite/tests]   | ChooseDirective (genshi.template.directives)\n[Run test suite/tests]   | Doctest: genshi.template.directives.ChooseDirective ... ok\n[Run test suite/tests]   | ContentDirective (genshi.template.directives)\n[Run test suite/tests]   | Doctest: genshi.template.directives.ContentDirective ... ok\n[Run test suite/tests]   | DefDirective (genshi.template.directives)\n[Run test suite/tests]   | Doctest: genshi.template.directives.DefDirective ... ok\n[Run test suite/tests]   | ForDirective (genshi.template.directives)\n[Run test suite/tests]   | Doctest: genshi.template.directives.ForDirective ... ok\n[Run test suite/tests]   | IfDirective (genshi.template.directives)\n[Run test suite/tests]   | Doctest: genshi.template.directives.IfDirective ... ok\n[Run test suite/tests]   | MatchDirective (genshi.template.directives)\n[Run test suite/tests]   | Doctest: genshi.template.directives.MatchDirective ... ok\n[Run test suite/tests]   | ReplaceDirective (genshi.template.directives)\n[Run test suite/tests]   | Doctest: genshi.template.directives.ReplaceDirective ... ok\n[Run test suite/tests]   | StripDirective (genshi.template.directives)\n[Run test suite/tests]   | Doctest: genshi.template.directives.StripDirective ... ok\n[Run test suite/tests]   | WithDirective (genshi.template.directives)\n[Run test suite/tests]   | Doctest: genshi.template.directives.WithDirective ... ok\n[Run test suite/tests]   | test_combined_with_loop (genshi.template.tests.directives.AttrsDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_remove_existing_attr (genshi.template.tests.directives.AttrsDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_update_existing_attr (genshi.template.tests.directives.AttrsDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_as_element (genshi.template.tests.directives.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_complex_nesting (genshi.template.tests.directives.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_complex_nesting_otherwise (genshi.template.tests.directives.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_in_text_template (genshi.template.tests.directives.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_multiple_true_whens (genshi.template.tests.directives.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_nesting (genshi.template.tests.directives.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_otherwise (genshi.template.tests.directives.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_otherwise_outside_choose (genshi.template.tests.directives.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_otherwise_without_test (genshi.template.tests.directives.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_when_outside_choose (genshi.template.tests.directives.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_when_with_strip (genshi.template.tests.directives.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_when_without_test (genshi.template.tests.directives.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_when_without_test_but_with_choose_value (genshi.template.tests.directives.ChooseDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_as_element (genshi.template.tests.directives.DefDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_def_in_matched (genshi.template.tests.directives.DefDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_exec_in_replace (genshi.template.tests.directives.DefDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_function_raising_typeerror (genshi.template.tests.directives.DefDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_function_with_default_arg (genshi.template.tests.directives.DefDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_function_with_star_args (genshi.template.tests.directives.DefDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_function_with_strip (genshi.template.tests.directives.DefDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_in_text_template (genshi.template.tests.directives.DefDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_invocation_in_attribute (genshi.template.tests.directives.DefDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_invocation_in_attribute_none (genshi.template.tests.directives.DefDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_nested_defs (genshi.template.tests.directives.DefDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_as_element (genshi.template.tests.directives.ForDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_for_with_empty_value (genshi.template.tests.directives.ForDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_loop_with_strip (genshi.template.tests.directives.ForDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_multi_assignment (genshi.template.tests.directives.ForDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_nested_assignment (genshi.template.tests.directives.ForDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_not_iterable (genshi.template.tests.directives.ForDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_as_element (genshi.template.tests.directives.IfDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_loop_with_strip (genshi.template.tests.directives.IfDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_as_element (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_cascaded_matches (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_content_directive_in_match (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_def_in_match (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_match_multiple_times1 (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_match_multiple_times2 (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_match_multiple_times3 (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_match_with_closure (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_match_with_once_attribute (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_match_with_position_predicate (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_match_with_recursive_attribute (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_match_with_xpath_variable (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_match_without_closure (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_multiple_matches (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_namespace_context (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_not_match_self (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_recursive_match_1 (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_recursive_match_2 (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_recursive_match_3 (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_select_all_attrs (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_select_all_attrs_empty (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_select_all_attrs_in_body (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_select_text_in_element (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_triple_match_produces_no_duplicate_items (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_with_strip (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_without_strip (genshi.template.tests.directives.MatchDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_as_element (genshi.template.tests.directives.ContentDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_as_element (genshi.template.tests.directives.ReplaceDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_replace_with_empty_value (genshi.template.tests.directives.ReplaceDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_strip_empty (genshi.template.tests.directives.StripDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_strip_false (genshi.template.tests.directives.StripDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_as_element (genshi.template.tests.directives.WithDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_ast_transformation (genshi.template.tests.directives.WithDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_multiple_vars_same_name (genshi.template.tests.directives.WithDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_multiple_vars_single_assignment (genshi.template.tests.directives.WithDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_multiple_vars_trailing_semicolon (genshi.template.tests.directives.WithDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_nested_vars_single_assignment (genshi.template.tests.directives.WithDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_semicolon_escape (genshi.template.tests.directives.WithDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_shadowing (genshi.template.tests.directives.WithDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_unicode_expr (genshi.template.tests.directives.WithDirectiveTestCase) ... ok\n[Run test suite/tests]   | test_with_empty_value (genshi.template.tests.directives.WithDirectiveTestCase) ... ok\n[Run test suite/tests]   | Expression (genshi.template.eval)\n[Run test suite/tests]   | Doctest: genshi.template.eval.Expression ... ok\n[Run test suite/tests]   | LenientLookup (genshi.template.eval)\n[Run test suite/tests]   | Doctest: genshi.template.eval.LenientLookup ... ok\n[Run test suite/tests]   | StrictLookup (genshi.template.eval)\n[Run test suite/tests]   | Doctest: genshi.template.eval.StrictLookup ... ok\n[Run test suite/tests]   | Suite (genshi.template.eval)\n[Run test suite/tests]   | Doctest: genshi.template.eval.Suite ... ok\n[Run test suite/tests]   | Undefined (genshi.template.eval)\n[Run test suite/tests]   | Doctest: genshi.template.eval.Undefined ... ok\n[Run test suite/tests]   | test_access_undefined (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_array_indices (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_binop_add (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_binop_and (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_binop_contains (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_binop_div (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_binop_floordiv (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_binop_is (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_binop_is_not (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_binop_mod (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_binop_mul (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_binop_not_contains (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_binop_or (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_binop_pow (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_binop_sub (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_binop_xor (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_boolop_and (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_boolop_or (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_builtins (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_call_dstar_args (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_call_function (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_call_keywords (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_call_star_args (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_compare_eq (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_compare_ge (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_compare_gt (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_compare_le (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_compare_lt (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_compare_multi (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_compare_ne (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_conditional_expression (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_dict_literal (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_eq (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_error_access_undefined (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_error_getattr_undefined (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_error_getitem_undefined_string (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_function_in_item_access (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_generator_expression (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_generator_expression_with_getattr (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_generator_expression_with_getitem (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_getattr_exception (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_getattr_undefined (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_getitem_exception (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_getitem_undefined_string (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_getitem_with_constant_string (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_getitem_with_simple_index (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_hash (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_item_access_for_attributes (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_lambda (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_lambda_tuple_arg (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_list_comprehension (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_list_comprehension_with_getattr (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_list_comprehension_with_getitem (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_list_literal (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_name_lookup (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_num_literal (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_pickle (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_slice (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_slice_attribute (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_slice_call (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_slice_constant (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_slice_copy (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_slice_name (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_slice_negative_end (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_slice_negative_start (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_slice_stride (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_slice_with_vars (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_str_literal (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_str_literal_non_ascii (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_tuple_literal (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_unaryop_inv (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_unaryop_neg (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_unaryop_not (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_unaryop_pos (genshi.template.tests.eval.ExpressionTestCase) ... ok\n[Run test suite/tests]   | test_assign (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_assign_in_list (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_assign_to_attribute (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_assign_to_dict_item (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_augmented_assign_in_def (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_augmented_assign_in_loop_in_def (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_augmented_attribute_assignment (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_class (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_class_in_def (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_class_with_methods (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_def (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_def_all_defaults (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_def_kwargs (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_def_nested (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_def_some_defaults (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_def_using_nonlocal (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_def_vararg (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_def_with_decorator (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_def_with_multiple_statements (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_delattr (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_delete (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_delitem (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_exec (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_finally (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_for (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_for_in_def (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_if (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_import (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_import_in_def (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_import_star (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_internal_shadowing (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_local_augmented_assign (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_pickle (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_raise (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_return (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_slice (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_slice_attribute (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_slice_call (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_slice_constant (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_slice_copy (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_slice_name (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_slice_negative_end (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_slice_negative_start (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_slice_stride (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_slice_with_vars (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_try_except (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_while_break (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_with_statement (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | test_yield_expression (genshi.template.tests.eval.SuiteTestCase) ... ok\n[Run test suite/tests]   | interpolate (genshi.template.interpolation)\n[Run test suite/tests]   | Doctest: genshi.template.interpolation.interpolate ... ok\n[Run test suite/tests]   | test_interpolate_dobuleescaped (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_escaped (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_full_mismatched_brackets (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_full_nested_brackets (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_mixed1 (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_mixed2 (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_quoted_brackets_1 (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_quoted_brackets_2 (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_quoted_brackets_3 (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_quoted_brackets_4 (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_quoted_brackets_5 (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_short (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_short_containing_digit (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_short_containing_dot (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_short_containing_underscore (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_short_doubleescaped (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_short_escaped (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_short_escaped_2 (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_short_starting_with_digit (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_short_starting_with_dot (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_short_starting_with_underscore (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_simple (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_string (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_triplequoted (genshi.template.tests.interpolation.InterpolateTestCase) ... ok\n[Run test suite/tests]   | TemplateLoader (genshi.template.loader)\n[Run test suite/tests]   | Doctest: genshi.template.loader.TemplateLoader ... ok\n[Run test suite/tests]   | prefixed (genshi.template.loader)\n[Run test suite/tests]   | Doctest: genshi.template.loader.prefixed ... ok\n[Run test suite/tests]   | test_absolute_include (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | test_abspath_caching (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | test_abspath_include_caching_without_search_path (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | test_load_with_callback (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | test_load_with_default_encoding (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | test_load_with_explicit_encoding (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | test_prefix_delegation_to_directories (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | test_prefix_delegation_to_directories_with_subdirs (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | test_relative_absolute_template_preferred (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | test_relative_include_from_inmemory_template (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | test_relative_include_parentdir (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | test_relative_include_samedir (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | test_relative_include_samesubdir (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | test_relative_include_subdir (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | test_relative_include_without_loader (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | test_relative_include_without_loader_relative (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | test_relative_include_without_search_path (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | test_relative_include_without_search_path_nested (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | test_search_path_as_string (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | test_search_path_empty (genshi.template.tests.loader.TemplateLoaderTestCase) ... ok\n[Run test suite/tests]   | MarkupTemplate (genshi.template.markup)\n[Run test suite/tests]   | Doctest: genshi.template.markup.MarkupTemplate ... ok\n[Run test suite/tests]   | test_allow_exec_false (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_allow_exec_true (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_attr_escape_quotes (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_bad_directive_error (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_directive_element (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_directive_single_line_with_translator (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_directive_value_syntax_error (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_dynamic_include_href (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_empty_attr (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_empty_attr_interpolated (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_error_when_include_not_found (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_exec_def (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_exec_import (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_exec_in_match (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_exec_with_trailing_space (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_expression_syntax_error (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_expression_syntax_error_multi_line (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_fallback_when_auto_reload_true (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_fallback_when_include_found (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_fallback_when_include_not_found (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_include_fallback_with_directive (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_include_in_fallback (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_include_in_loop (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_include_inline_recursive (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_include_inlined (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_include_inlined_in_loop (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_leading_trailing_space (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_list_result (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_mixed3 (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_multiline (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_interpolate_non_string_attrs (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_latin1_encoded_explicit_encoding (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_latin1_encoded_with_xmldecl (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_markup_noescape (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_match_tail_handling (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_match_without_select (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_namespace_on_removed_elem (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_nested_include_fallback (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_nested_include_in_fallback (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_nested_include_matches (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_nested_matches_without_buffering (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_normal_comment (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_parse_fileobj (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_parse_stream (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_parse_with_same_namespace_nested (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_pickle (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_select_included_elements (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_template_comment (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_text_noescape_quotes (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_with_in_match (genshi.template.tests.markup.MarkupTemplateTestCase) ... ok\n[Run test suite/tests]   | test_helper_functions (genshi.template.tests.plugin.MarkupTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_init_no_options (genshi.template.tests.plugin.MarkupTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_init_with_invalid_cache_size (genshi.template.tests.plugin.MarkupTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_init_with_invalid_doctype (genshi.template.tests.plugin.MarkupTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_init_with_invalid_output_format (genshi.template.tests.plugin.MarkupTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_init_with_loader_options (genshi.template.tests.plugin.MarkupTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_init_with_output_options (genshi.template.tests.plugin.MarkupTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_load_template_from_file (genshi.template.tests.plugin.MarkupTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_load_template_from_string (genshi.template.tests.plugin.MarkupTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_render (genshi.template.tests.plugin.MarkupTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_render_fragment_with_doctype (genshi.template.tests.plugin.MarkupTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_render_with_doctype (genshi.template.tests.plugin.MarkupTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_render_with_format (genshi.template.tests.plugin.MarkupTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_transform_with_load (genshi.template.tests.plugin.MarkupTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_transform_without_load (genshi.template.tests.plugin.MarkupTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_helper_functions (genshi.template.tests.plugin.TextTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_init_no_options (genshi.template.tests.plugin.TextTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_init_with_loader_options (genshi.template.tests.plugin.TextTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_init_with_new_syntax (genshi.template.tests.plugin.TextTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_init_with_output_options (genshi.template.tests.plugin.TextTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_load_template_from_file (genshi.template.tests.plugin.TextTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_load_template_from_string (genshi.template.tests.plugin.TextTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_render (genshi.template.tests.plugin.TextTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_transform_with_load (genshi.template.tests.plugin.TextTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | test_transform_without_load (genshi.template.tests.plugin.TextTemplateEnginePluginTestCase) ... ok\n[Run test suite/tests]   | NewTextTemplate (genshi.template.text)\n[Run test suite/tests]   | Doctest: genshi.template.text.NewTextTemplate ... ok\n[Run test suite/tests]   | OldTextTemplate (genshi.template.text)\n[Run test suite/tests]   | Doctest: genshi.template.text.OldTextTemplate ... ok\n[Run test suite/tests]   | test_comment (genshi.template.tests.text.OldTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_comment_escaping (genshi.template.tests.text.OldTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_empty_lines1 (genshi.template.tests.text.OldTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_empty_lines2 (genshi.template.tests.text.OldTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_end_with_args (genshi.template.tests.text.OldTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_escaping (genshi.template.tests.text.OldTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_include (genshi.template.tests.text.OldTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_latin1_encoded (genshi.template.tests.text.OldTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_unicode_input (genshi.template.tests.text.OldTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_comment (genshi.template.tests.text.NewTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_comment_escaping (genshi.template.tests.text.NewTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_empty_lines1 (genshi.template.tests.text.NewTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_empty_lines1_with_crlf (genshi.template.tests.text.NewTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_empty_lines2 (genshi.template.tests.text.NewTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_empty_lines2_with_crlf (genshi.template.tests.text.NewTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_end_with_args (genshi.template.tests.text.NewTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_escaping (genshi.template.tests.text.NewTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_exec_def (genshi.template.tests.text.NewTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_exec_import (genshi.template.tests.text.NewTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_exec_with_trailing_space (genshi.template.tests.text.NewTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_include (genshi.template.tests.text.NewTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_include_expr (genshi.template.tests.text.NewTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_latin1_encoded (genshi.template.tests.text.NewTextTemplateTestCase) ... ok\n[Run test suite/tests]   | test_unicode_input (genshi.template.tests.text.NewTextTemplateTestCase) ... ok\n[Run test suite/tests]   | LRUCache (genshi.util)\n[Run test suite/tests]   | Doctest: genshi.util.LRUCache ... ok\n[Run test suite/tests]   | flatten (genshi.util)\n[Run test suite/tests]   | Doctest: genshi.util.flatten ... ok\n[Run test suite/tests]   | plaintext (genshi.util)\n[Run test suite/tests]   | Doctest: genshi.util.plaintext ... ok\n[Run test suite/tests]   | stripentities (genshi.util)\n[Run test suite/tests]   | Doctest: genshi.util.stripentities ... ok\n[Run test suite/tests]   | striptags (genshi.util)\n[Run test suite/tests]   | Doctest: genshi.util.striptags ... ok\n[Run test suite/tests]   | test_getitem (genshi.tests.util.LRUCacheTestCase) ... ok\n[Run test suite/tests]   | test_setitem (genshi.tests.util.LRUCacheTestCase) ... ok\n[Run test suite/tests]   | \n[Run test suite/tests]   | ----------------------------------------------------------------------\n[Run test suite/tests]   | Ran 891 tests in 1.389s\n[Run test suite/tests]   | \n[Run test suite/tests]   | OK\n[Run test suite/tests]   \u2705  Success - Main Run test suite\n[Run test suite/tests] \u2b50 Run Post Set up Python 2.7\n[Run test suite/tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[Run test suite/tests]   \u2705  Success - Post Set up Python 2.7\n[Run test suite/tests] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}