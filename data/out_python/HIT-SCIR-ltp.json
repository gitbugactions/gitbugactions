{
    "repository": "HIT-SCIR/ltp",
    "clone_url": "https://github.com/HIT-SCIR/ltp.git",
    "timestamp": "2023-05-29T14:12:15.761339Z",
    "clone_success": true,
    "number of actions": 6,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Tests/code-coverage] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests/run_tests    ] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests/run_tests    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests/code-coverage]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests/run_tests    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/code-coverage]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/run_tests    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/code-coverage]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/run_tests    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/HIT-SCIR-ltp] user=0 workdir=\n[Tests/run_tests    ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v3\n[Tests/code-coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/HIT-SCIR-ltp] user=0 workdir=\n[Tests/run_tests    ] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.7]\n[Tests/run_tests    ] \u2b50 Run Main Checkout\n[Tests/run_tests    ]   \u2705  Success - Main Checkout\n[Tests/run_tests    ] \u2b50 Run Main Set up Python 3.7\n[Tests/run_tests    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v3/ dst=/var/run/act/actions/actions-setup-python@v3/\n[Tests/run_tests    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v3/] user=0 workdir=\n[Tests/code-coverage]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[Tests/run_tests    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/setup/index.js] user= workdir=\n[Tests/code-coverage]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[Tests/run_tests    ]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[Tests/run_tests    ]   \ud83d\udcac  ::debug::isExplicit: \n[Tests/run_tests    ]   \ud83d\udcac  ::debug::explicit? false\n[Tests/run_tests    ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Tests/run_tests    ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/run_tests    ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Tests/run_tests    ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/run_tests    ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Tests/run_tests    ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/run_tests    ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Tests/run_tests    ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/run_tests    ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Tests/run_tests    ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/run_tests    ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Tests/run_tests    ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/run_tests    ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Tests/run_tests    ]   \ud83d\udcac  ::debug::matched: 3.7.11\n[Tests/run_tests    ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[Tests/run_tests    ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[Tests/run_tests    ]   | Successfully setup CPython (3.7.11)\n[Tests/run_tests    ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v3/.github/python.json\n[Tests/run_tests    ]   \u2705  Success - Main Set up Python 3.7\n[Tests/run_tests    ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[Tests/run_tests    ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[Tests/code-coverage] \u2b50 Run Main Checkout\n[Tests/code-coverage]   \u2705  Success - Main Checkout\n[Tests/run_tests    ]   \u2699  ::set-output:: python-version=3.7.11\n[Tests/run_tests    ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[Tests/run_tests    ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[Tests/run_tests    ] \u2b50 Run Main Install dependencies\n[Tests/code-coverage] \u2b50 Run Main Set up Python 3.10\n[Tests/code-coverage]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[Tests/run_tests    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Tests/code-coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[Tests/code-coverage]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[Tests/code-coverage]   \ud83d\udcac  ::debug::Semantic version spec of 3.10 is 3.10\n[Tests/code-coverage]   \ud83d\udcac  ::debug::isExplicit: \n[Tests/code-coverage]   \ud83d\udcac  ::debug::explicit? false\n[Tests/code-coverage]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Tests/code-coverage]   \ud83d\udcac  ::debug::explicit? true\n[Tests/code-coverage]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Tests/code-coverage]   \ud83d\udcac  ::debug::explicit? true\n[Tests/code-coverage]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Tests/code-coverage]   \ud83d\udcac  ::debug::explicit? true\n[Tests/code-coverage]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Tests/code-coverage]   \ud83d\udcac  ::debug::explicit? true\n[Tests/code-coverage]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Tests/code-coverage]   \ud83d\udcac  ::debug::explicit? true\n[Tests/code-coverage]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Tests/code-coverage]   \ud83d\udcac  ::debug::explicit? true\n[Tests/code-coverage]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Tests/code-coverage]   \ud83d\udcac  ::debug::match not found\n[Tests/code-coverage]   | Version 3.10 was not found in the local cache\n[Tests/code-coverage]   \u2757  ::error::API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Tests/code-coverage]   \u274c  Failure - Main Set up Python 3.10\n[Tests/run_tests    ]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (21.2.4)\n[Tests/run_tests    ]   | Collecting pip\n[Tests/run_tests    ]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[Tests/run_tests    ]   | Installing collected packages: pip\n[Tests/run_tests    ]   |   Attempting uninstall: pip\n[Tests/run_tests    ]   |     Found existing installation: pip 21.2.4\n[Tests/run_tests    ]   |     Uninstalling pip-21.2.4:\n[Tests/code-coverage] exitcode '1': failure\n[Tests/run_tests    ]   |       Successfully uninstalled pip-21.2.4\n[Tests/run_tests    ]   | Successfully installed pip-23.1.2\n[Tests/run_tests    ]   | ERROR: Could not open requirements file: [Errno 2] No such file or directory: 'requirements.txt'\n[Tests/run_tests    ]   | \n[Tests/run_tests    ]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[Tests/run_tests    ]   | [notice] To update, run: pip install --upgrade pip\n[Tests/run_tests    ]   \u274c  Failure - Main Install dependencies\n[Tests/run_tests    ] exitcode '1': failure\n[Tests/code-coverage] \ud83c\udfc1  Job failed\n[Tests/run_tests    ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'code-coverage' failed\n"
}