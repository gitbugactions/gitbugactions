{"repository": "jgroups-extras/jgroups-kubernetes", "clone_url": "https://github.com/jgroups-extras/jgroups-kubernetes.git", "timestamp": "2023-05-31T19:02:57.524002Z", "commit_hash": "2566982dfe871932b745d38285c8411cd8044714", "commit_message": "Fix splitting cluster on Rolling Update\n\nfixes #75\n", "related_issues": "", "bug_patch": "diff --git a/README.adoc b/README.adoc\nindex 127e145..58b25ce 100644\n--- a/README.adoc\n+++ b/README.adoc\n@@ -169,7 +169,7 @@ namespace `\"default\"` will be returned.\n \n | dump_requests || Dumps all discovery requests and responses to the Kubernetes server to stdout when true\n \n-| split_clusters_during_rolling_update || During the Rolling Update, prevents from putting all Pods into a single cluster\n+| split_clusters_during_rolling_update | KUBERNETES_SPLIT_CLUSTERS_DURING_ROLLING_UPDATE | During the Rolling Update, prevents from putting all Pods into a single cluster\n \n |===============\n \ndiff --git a/src/main/java/org/jgroups/protocols/kubernetes/Client.java b/src/main/java/org/jgroups/protocols/kubernetes/Client.java\nindex e0a2e3d..e1cb5da 100644\n--- a/src/main/java/org/jgroups/protocols/kubernetes/Client.java\n+++ b/src/main/java/org/jgroups/protocols/kubernetes/Client.java\n@@ -91,7 +91,7 @@ public class Client {\n \n \n     public List<Pod> getPods(String namespace, String labels, boolean dump_requests) throws Exception {\n-        String result=fetchFromKubernetes(\"pods\", namespace, labels, dump_requests);\n+        String result = fetchFromKubernetes(\"pods\", namespace, labels, dump_requests);\n         if(result == null)\n             return Collections.emptyList();\n         return parseJsonResult(result, namespace, labels);\n@@ -107,20 +107,29 @@ public class Client {\n         Json labels = Optional.ofNullable(meta)\n                 .map(podMetadata -> podMetadata.at(\"labels\"))\n                 .orElse(null);\n+\n+        // This works for Deployment Config\n         String group = Optional.ofNullable(labels)\n                 .map(l -> l.at(\"pod-template-hash\"))\n                 .map(Json::asString)\n                 .orElse(null);\n \n         if (group == null) {\n-            log.warn(\"metadata.labels.pod-template-hash not found in pod json. Impossible to reliably determine pod group during Rolling Update\");\n-            // keep backward-compatible behavior\n+            // Ok, maybe, it's a Deployment and has a valid deployment flag?\n             group = Optional.ofNullable(labels)\n                     .map(l -> l.at(\"deployment\"))\n                     .map(Json::asString)\n                     .orElse(null);\n         }\n \n+        if (group == null) {\n+            // Final check, maybe it's a StatefulSet?\n+            group = Optional.ofNullable(labels)\n+                    .map(l -> l.at(\"controller-revision-hash\"))\n+                    .map(Json::asString)\n+                    .orElse(null);\n+        }\n+\n         log.debug(\"pod %s, group %s\", Optional.ofNullable(meta)\n                 .map(m -> m.at(\"name\"))\n                 .map(Json::asString)\n@@ -146,7 +155,6 @@ public class Client {\n         List<Pod> pods=new ArrayList<>();\n         for(Json obj: items) {\n             String parentDeployment = getPodGroup(obj);\n-\n             String name = Optional.ofNullable(obj.at(\"metadata\"))\n                   .map(podMetadata -> podMetadata.at(\"name\"))\n                   .map(Json::asString)\ndiff --git a/src/main/java/org/jgroups/protocols/kubernetes/KUBE_PING.java b/src/main/java/org/jgroups/protocols/kubernetes/KUBE_PING.java\nindex 179db69..591f644 100644\n--- a/src/main/java/org/jgroups/protocols/kubernetes/KUBE_PING.java\n+++ b/src/main/java/org/jgroups/protocols/kubernetes/KUBE_PING.java\n@@ -105,7 +105,7 @@ public class KUBE_PING extends Discovery {\n \n     @Property(description=\"The standard behavior during Rolling Update is to put all Pods in the same cluster. In\" +\n           \" cases (application level incompatibility) this causes problems. One might decide to split clusters to\" +\n-          \" 'old' and 'new' during that process\")\n+          \" 'old' and 'new' during that process\", systemProperty=\"SPLIT_CLUSTERS_DURING_ROLLING_UPDATE\")\n     protected boolean split_clusters_during_rolling_update;\n \n \n@@ -243,7 +243,11 @@ public class KUBE_PING extends Discovery {\n             if(physical_addr != null) {\n                 String senderIp = ((IpAddress)physical_addr).getIpAddress().getHostAddress();\n                 // Please note we search for sender parent group through all pods, ever not ready. It's because JGroup discovery is performed\n-                // before Wildfly can respond to http liveness probe.\n+                // before Wildfly can respond to http readiness probe.\n+                hosts.stream()\n+                        .filter(p -> p.getPodGroup() == null)\n+                        .forEach(p -> log.warn(\"Pod %s doesn't have group assigned. Impossible to reliably determine pod group during Rolling Update.\"));\n+\n                 String senderPodGroup = hosts.stream()\n                       .filter(pod -> senderIp.contains(pod.getIp()))\n                       .map(Pod::getPodGroup)\ndiff --git a/src/main/java/org/jgroups/protocols/kubernetes/Pod.java b/src/main/java/org/jgroups/protocols/kubernetes/Pod.java\nindex e33b379..fe91468 100644\n--- a/src/main/java/org/jgroups/protocols/kubernetes/Pod.java\n+++ b/src/main/java/org/jgroups/protocols/kubernetes/Pod.java\n@@ -1,5 +1,7 @@\n package org.jgroups.protocols.kubernetes;\n \n+import java.util.Objects;\n+\n public class Pod {\n \n    private final String name;\n@@ -15,10 +17,6 @@ public class Pod {\n       this.isReady = isReady;\n    }\n \n-   public Pod(String name, String ip, String podGroup) {\n-      this(name, ip, podGroup, false);\n-   }\n-\n    public String getName() {\n       return name;\n    }\n@@ -51,9 +49,9 @@ public class Pod {\n \n       Pod pod = (Pod) o;\n \n-      if (name != null ? !name.equals(pod.name) : pod.name != null) return false;\n-      if (ip != null ? !ip.equals(pod.ip) : pod.ip != null) return false;\n-      return podGroup != null ? podGroup.equals(pod.podGroup) : pod.podGroup == null;\n+      if (!Objects.equals(name, pod.name)) return false;\n+      if (!Objects.equals(ip, pod.ip)) return false;\n+      return Objects.equals(podGroup, pod.podGroup);\n    }\n \n    @Override\ndiff --git a/src/test/resources/statefulset_rolling_update.json b/src/test/resources/statefulset_rolling_update.json\nnew file mode 100644\nindex 0000000..8df1c7d\n--- /dev/null\n+++ b/src/test/resources/statefulset_rolling_update.json\n@@ -0,0 +1,1091 @@\n+{\n+  \"apiVersion\": \"v1\",\n+  \"items\": [\n+    {\n+      \"apiVersion\": \"v1\",\n+      \"kind\": \"Pod\",\n+      \"metadata\": {\n+        \"annotations\": {\n+          \"k8s.v1.cni.cncf.io/networks-status\": \"[{\\n    \\\"name\\\": \\\"openshift-sdn\\\",\\n    \\\"interface\\\": \\\"eth0\\\",\\n    \\\"ips\\\": [\\n        \\\"10.128.0.221\\\"\\n    ],\\n    \\\"default\\\": true,\\n    \\\"dns\\\": {}\\n}]\",\n+          \"openshift.io/scc\": \"restricted\"\n+        },\n+        \"creationTimestamp\": \"2019-10-10T08:33:38Z\",\n+        \"generateName\": \"keycloak-\",\n+        \"labels\": {\n+          \"application\": \"keycloak\",\n+          \"component\": \"keycloak\",\n+          \"controller-revision-hash\": \"keycloak-5f6594785b\",\n+          \"statefulset.kubernetes.io/pod-name\": \"keycloak-0\"\n+        },\n+        \"name\": \"keycloak-0\",\n+        \"namespace\": \"keycloak\",\n+        \"ownerReferences\": [\n+          {\n+            \"apiVersion\": \"apps/v1\",\n+            \"blockOwnerDeletion\": true,\n+            \"controller\": true,\n+            \"kind\": \"StatefulSet\",\n+            \"name\": \"keycloak\",\n+            \"uid\": \"d6e308ff-eb37-11e9-ba11-52fdfc072182\"\n+          }\n+        ],\n+        \"resourceVersion\": \"239934\",\n+        \"selfLink\": \"/api/v1/namespaces/keycloak/pods/keycloak-0\",\n+        \"uid\": \"a8111f90-eb38-11e9-ba11-52fdfc072182\"\n+      },\n+      \"spec\": {\n+        \"containers\": [\n+          {\n+            \"env\": [\n+              {\n+                \"name\": \"DB_SERVICE_PREFIX_MAPPING\",\n+                \"value\": \"keycloak-postgresql=DB\"\n+              },\n+              {\n+                \"name\": \"TX_DATABASE_PREFIX_MAPPING\",\n+                \"value\": \"keycloak-postgresql=DB\"\n+              },\n+              {\n+                \"name\": \"DB_JNDI\",\n+                \"value\": \"java:jboss/datasources/KeycloakDS\"\n+              },\n+              {\n+                \"name\": \"DB_SCHEMA\",\n+                \"value\": \"public\"\n+              },\n+              {\n+                \"name\": \"DB_USERNAME\",\n+                \"valueFrom\": {\n+                  \"secretKeyRef\": {\n+                    \"key\": \"user\",\n+                    \"name\": \"keycloak-db-secret\"\n+                  }\n+                }\n+              },\n+              {\n+                \"name\": \"DB_PASSWORD\",\n+                \"valueFrom\": {\n+                  \"secretKeyRef\": {\n+                    \"key\": \"password\",\n+                    \"name\": \"keycloak-db-secret\"\n+                  }\n+                }\n+              },\n+              {\n+                \"name\": \"DB_DATABASE\",\n+                \"value\": \"root\"\n+              },\n+              {\n+                \"name\": \"JGROUPS_PING_PROTOCOL\",\n+                \"value\": \"dns.DNS_PING\"\n+              },\n+              {\n+                \"name\": \"OPENSHIFT_DNS_PING_SERVICE_NAME\",\n+                \"value\": \"keycloak-discovery.keycloak.svc.cluster.local\"\n+              },\n+              {\n+                \"name\": \"SSO_ADMIN_USERNAME\",\n+                \"valueFrom\": {\n+                  \"secretKeyRef\": {\n+                    \"key\": \"ADMIN_USERNAME\",\n+                    \"name\": \"credential-example-keycloak\"\n+                  }\n+                }\n+              },\n+              {\n+                \"name\": \"SSO_ADMIN_PASSWORD\",\n+                \"valueFrom\": {\n+                  \"secretKeyRef\": {\n+                    \"key\": \"ADMIN_PASSWORD\",\n+                    \"name\": \"credential-example-keycloak\"\n+                  }\n+                }\n+              }\n+            ],\n+            \"image\": \"registry.access.redhat.com/redhat-sso-7/sso73-openshift:1.0\",\n+            \"imagePullPolicy\": \"IfNotPresent\",\n+            \"livenessProbe\": {\n+              \"failureThreshold\": 3,\n+              \"httpGet\": {\n+                \"path\": \"/auth/realms/master\",\n+                \"port\": 8080,\n+                \"scheme\": \"HTTP\"\n+              },\n+              \"initialDelaySeconds\": 60,\n+              \"periodSeconds\": 10,\n+              \"successThreshold\": 1,\n+              \"timeoutSeconds\": 1\n+            },\n+            \"name\": \"keycloak\",\n+            \"ports\": [\n+              {\n+                \"containerPort\": 8443,\n+                \"protocol\": \"TCP\"\n+              },\n+              {\n+                \"containerPort\": 8080,\n+                \"protocol\": \"TCP\"\n+              },\n+              {\n+                \"containerPort\": 9990,\n+                \"protocol\": \"TCP\"\n+              },\n+              {\n+                \"containerPort\": 8778,\n+                \"protocol\": \"TCP\"\n+              }\n+            ],\n+            \"readinessProbe\": {\n+              \"failureThreshold\": 3,\n+              \"httpGet\": {\n+                \"path\": \"/auth/realms/master\",\n+                \"port\": 8080,\n+                \"scheme\": \"HTTP\"\n+              },\n+              \"initialDelaySeconds\": 10,\n+              \"periodSeconds\": 10,\n+              \"successThreshold\": 1,\n+              \"timeoutSeconds\": 1\n+            },\n+            \"resources\": {},\n+            \"securityContext\": {\n+              \"capabilities\": {\n+                \"drop\": [\n+                  \"KILL\",\n+                  \"MKNOD\",\n+                  \"SETGID\",\n+                  \"SETUID\"\n+                ]\n+              },\n+              \"runAsUser\": 1000470000\n+            },\n+            \"terminationMessagePath\": \"/dev/termination-log\",\n+            \"terminationMessagePolicy\": \"File\",\n+            \"volumeMounts\": [\n+              {\n+                \"mountPath\": \"/etc/x509/https\",\n+                \"name\": \"sso-x509-https-secret\"\n+              },\n+              {\n+                \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n+                \"name\": \"default-token-kv98v\",\n+                \"readOnly\": true\n+              }\n+            ]\n+          }\n+        ],\n+        \"dnsPolicy\": \"ClusterFirst\",\n+        \"enableServiceLinks\": true,\n+        \"hostname\": \"keycloak-0\",\n+        \"imagePullSecrets\": [\n+          {\n+            \"name\": \"default-dockercfg-gm7sc\"\n+          }\n+        ],\n+        \"nodeName\": \"crc-vsqrt-master-0\",\n+        \"priority\": 0,\n+        \"restartPolicy\": \"Always\",\n+        \"schedulerName\": \"default-scheduler\",\n+        \"securityContext\": {\n+          \"fsGroup\": 1000470000,\n+          \"seLinuxOptions\": {\n+            \"level\": \"s0:c22,c4\"\n+          }\n+        },\n+        \"serviceAccount\": \"default\",\n+        \"serviceAccountName\": \"default\",\n+        \"terminationGracePeriodSeconds\": 30,\n+        \"tolerations\": [\n+          {\n+            \"effect\": \"NoExecute\",\n+            \"key\": \"node.kubernetes.io/not-ready\",\n+            \"operator\": \"Exists\",\n+            \"tolerationSeconds\": 300\n+          },\n+          {\n+            \"effect\": \"NoExecute\",\n+            \"key\": \"node.kubernetes.io/unreachable\",\n+            \"operator\": \"Exists\",\n+            \"tolerationSeconds\": 300\n+          }\n+        ],\n+        \"volumes\": [\n+          {\n+            \"name\": \"sso-x509-https-secret\",\n+            \"secret\": {\n+              \"defaultMode\": 420,\n+              \"optional\": true,\n+              \"secretName\": \"sso-x509-https-secret\"\n+            }\n+          },\n+          {\n+            \"name\": \"default-token-kv98v\",\n+            \"secret\": {\n+              \"defaultMode\": 420,\n+              \"secretName\": \"default-token-kv98v\"\n+            }\n+          }\n+        ]\n+      },\n+      \"status\": {\n+        \"conditions\": [\n+          {\n+            \"lastProbeTime\": null,\n+            \"lastTransitionTime\": \"2019-10-10T08:35:44Z\",\n+            \"status\": \"True\",\n+            \"type\": \"Initialized\"\n+          },\n+          {\n+            \"lastProbeTime\": null,\n+            \"lastTransitionTime\": \"2019-10-11T06:05:00Z\",\n+            \"status\": \"True\",\n+            \"type\": \"Ready\"\n+          },\n+          {\n+            \"lastProbeTime\": null,\n+            \"lastTransitionTime\": \"2019-10-11T06:05:00Z\",\n+            \"status\": \"True\",\n+            \"type\": \"ContainersReady\"\n+          },\n+          {\n+            \"lastProbeTime\": null,\n+            \"lastTransitionTime\": \"2019-10-10T08:35:44Z\",\n+            \"status\": \"True\",\n+            \"type\": \"PodScheduled\"\n+          }\n+        ],\n+        \"containerStatuses\": [\n+          {\n+            \"containerID\": \"cri-o://54d7258086f50cbbfa16ef98cf78aa76f9b56c3f1529320d49740c79c79d314a\",\n+            \"image\": \"registry.access.redhat.com/redhat-sso-7/sso73-openshift:1.0\",\n+            \"imageID\": \"registry.access.redhat.com/redhat-sso-7/sso73-openshift@sha256:35740d1dbebbb4dc39ea9ce4736d5cc54675a984b1ec0f9bef67eb48e93ffe2d\",\n+            \"lastState\": {\n+              \"terminated\": {\n+                \"containerID\": \"cri-o://44739a5e5056958f79b7241451715e8463a2cdf84c88616e4a94c779d6846022\",\n+                \"exitCode\": 127,\n+                \"finishedAt\": \"2019-10-11T06:04:05Z\",\n+                \"reason\": \"Error\",\n+                \"startedAt\": \"2019-10-11T06:02:21Z\"\n+              }\n+            },\n+            \"name\": \"keycloak\",\n+            \"ready\": true,\n+            \"restartCount\": 2,\n+            \"state\": {\n+              \"running\": {\n+                \"startedAt\": \"2019-10-11T06:04:05Z\"\n+              }\n+            }\n+          }\n+        ],\n+        \"hostIP\": \"192.168.130.11\",\n+        \"phase\": \"Running\",\n+        \"podIP\": \"127.0.0.1\",\n+        \"qosClass\": \"BestEffort\",\n+        \"startTime\": \"2019-10-10T08:35:44Z\"\n+      }\n+    },\n+    {\n+      \"apiVersion\": \"v1\",\n+      \"kind\": \"Pod\",\n+      \"metadata\": {\n+        \"annotations\": {\n+          \"k8s.v1.cni.cncf.io/networks-status\": \"[{\\n    \\\"name\\\": \\\"openshift-sdn\\\",\\n    \\\"interface\\\": \\\"eth0\\\",\\n    \\\"ips\\\": [\\n        \\\"10.128.0.234\\\"\\n    ],\\n    \\\"default\\\": true,\\n    \\\"dns\\\": {}\\n}]\",\n+          \"openshift.io/scc\": \"restricted\"\n+        },\n+        \"creationTimestamp\": \"2019-10-11T06:26:03Z\",\n+        \"deletionGracePeriodSeconds\": 30,\n+        \"deletionTimestamp\": \"2019-10-11T06:53:17Z\",\n+        \"generateName\": \"keycloak-\",\n+        \"labels\": {\n+          \"application\": \"keycloak\",\n+          \"component\": \"keycloak\",\n+          \"controller-revision-hash\": \"keycloak-5f6594785b\",\n+          \"statefulset.kubernetes.io/pod-name\": \"keycloak-1\"\n+        },\n+        \"name\": \"keycloak-1\",\n+        \"namespace\": \"keycloak\",\n+        \"ownerReferences\": [\n+          {\n+            \"apiVersion\": \"apps/v1\",\n+            \"blockOwnerDeletion\": true,\n+            \"controller\": true,\n+            \"kind\": \"StatefulSet\",\n+            \"name\": \"keycloak\",\n+            \"uid\": \"d6e308ff-eb37-11e9-ba11-52fdfc072182\"\n+          }\n+        ],\n+        \"resourceVersion\": \"249940\",\n+        \"selfLink\": \"/api/v1/namespaces/keycloak/pods/keycloak-1\",\n+        \"uid\": \"0037cefc-ebf0-11e9-8261-52fdfc072182\"\n+      },\n+      \"spec\": {\n+        \"containers\": [\n+          {\n+            \"env\": [\n+              {\n+                \"name\": \"DB_SERVICE_PREFIX_MAPPING\",\n+                \"value\": \"keycloak-postgresql=DB\"\n+              },\n+              {\n+                \"name\": \"TX_DATABASE_PREFIX_MAPPING\",\n+                \"value\": \"keycloak-postgresql=DB\"\n+              },\n+              {\n+                \"name\": \"DB_JNDI\",\n+                \"value\": \"java:jboss/datasources/KeycloakDS\"\n+              },\n+              {\n+                \"name\": \"DB_SCHEMA\",\n+                \"value\": \"public\"\n+              },\n+              {\n+                \"name\": \"DB_USERNAME\",\n+                \"valueFrom\": {\n+                  \"secretKeyRef\": {\n+                    \"key\": \"user\",\n+                    \"name\": \"keycloak-db-secret\"\n+                  }\n+                }\n+              },\n+              {\n+                \"name\": \"DB_PASSWORD\",\n+                \"valueFrom\": {\n+                  \"secretKeyRef\": {\n+                    \"key\": \"password\",\n+                    \"name\": \"keycloak-db-secret\"\n+                  }\n+                }\n+              },\n+              {\n+                \"name\": \"DB_DATABASE\",\n+                \"value\": \"root\"\n+              },\n+              {\n+                \"name\": \"JGROUPS_PING_PROTOCOL\",\n+                \"value\": \"dns.DNS_PING\"\n+              },\n+              {\n+                \"name\": \"OPENSHIFT_DNS_PING_SERVICE_NAME\",\n+                \"value\": \"keycloak-discovery.keycloak.svc.cluster.local\"\n+              },\n+              {\n+                \"name\": \"SSO_ADMIN_USERNAME\",\n+                \"valueFrom\": {\n+                  \"secretKeyRef\": {\n+                    \"key\": \"ADMIN_USERNAME\",\n+                    \"name\": \"credential-example-keycloak\"\n+                  }\n+                }\n+              },\n+              {\n+                \"name\": \"SSO_ADMIN_PASSWORD\",\n+                \"valueFrom\": {\n+                  \"secretKeyRef\": {\n+                    \"key\": \"ADMIN_PASSWORD\",\n+                    \"name\": \"credential-example-keycloak\"\n+                  }\n+                }\n+              }\n+            ],\n+            \"image\": \"registry.access.redhat.com/redhat-sso-7/sso73-openshift:1.0\",\n+            \"imagePullPolicy\": \"IfNotPresent\",\n+            \"livenessProbe\": {\n+              \"failureThreshold\": 3,\n+              \"httpGet\": {\n+                \"path\": \"/auth/realms/master\",\n+                \"port\": 8080,\n+                \"scheme\": \"HTTP\"\n+              },\n+              \"initialDelaySeconds\": 60,\n+              \"periodSeconds\": 10,\n+              \"successThreshold\": 1,\n+              \"timeoutSeconds\": 1\n+            },\n+            \"name\": \"keycloak\",\n+            \"ports\": [\n+              {\n+                \"containerPort\": 8443,\n+                \"protocol\": \"TCP\"\n+              },\n+              {\n+                \"containerPort\": 8080,\n+                \"protocol\": \"TCP\"\n+              },\n+              {\n+                \"containerPort\": 9990,\n+                \"protocol\": \"TCP\"\n+              },\n+              {\n+                \"containerPort\": 8778,\n+                \"protocol\": \"TCP\"\n+              }\n+            ],\n+            \"readinessProbe\": {\n+              \"failureThreshold\": 3,\n+              \"httpGet\": {\n+                \"path\": \"/auth/realms/master\",\n+                \"port\": 8080,\n+                \"scheme\": \"HTTP\"\n+              },\n+              \"initialDelaySeconds\": 10,\n+              \"periodSeconds\": 10,\n+              \"successThreshold\": 1,\n+              \"timeoutSeconds\": 1\n+            },\n+            \"resources\": {},\n+            \"securityContext\": {\n+              \"capabilities\": {\n+                \"drop\": [\n+                  \"KILL\",\n+                  \"MKNOD\",\n+                  \"SETGID\",\n+                  \"SETUID\"\n+                ]\n+              },\n+              \"runAsUser\": 1000470000\n+            },\n+            \"terminationMessagePath\": \"/dev/termination-log\",\n+            \"terminationMessagePolicy\": \"File\",\n+            \"volumeMounts\": [\n+              {\n+                \"mountPath\": \"/etc/x509/https\",\n+                \"name\": \"sso-x509-https-secret\"\n+              },\n+              {\n+                \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n+                \"name\": \"default-token-kv98v\",\n+                \"readOnly\": true\n+              }\n+            ]\n+          }\n+        ],\n+        \"dnsPolicy\": \"ClusterFirst\",\n+        \"enableServiceLinks\": true,\n+        \"hostname\": \"keycloak-1\",\n+        \"imagePullSecrets\": [\n+          {\n+            \"name\": \"default-dockercfg-gm7sc\"\n+          }\n+        ],\n+        \"nodeName\": \"crc-vsqrt-master-0\",\n+        \"priority\": 0,\n+        \"restartPolicy\": \"Always\",\n+        \"schedulerName\": \"default-scheduler\",\n+        \"securityContext\": {\n+          \"fsGroup\": 1000470000,\n+          \"seLinuxOptions\": {\n+            \"level\": \"s0:c22,c4\"\n+          }\n+        },\n+        \"serviceAccount\": \"default\",\n+        \"serviceAccountName\": \"default\",\n+        \"terminationGracePeriodSeconds\": 30,\n+        \"tolerations\": [\n+          {\n+            \"effect\": \"NoExecute\",\n+            \"key\": \"node.kubernetes.io/unreachable\",\n+            \"operator\": \"Exists\",\n+            \"tolerationSeconds\": 300\n+          },\n+          {\n+            \"effect\": \"NoExecute\",\n+            \"key\": \"node.kubernetes.io/not-ready\",\n+            \"operator\": \"Exists\",\n+            \"tolerationSeconds\": 300\n+          }\n+        ],\n+        \"volumes\": [\n+          {\n+            \"name\": \"sso-x509-https-secret\",\n+            \"secret\": {\n+              \"defaultMode\": 420,\n+              \"optional\": true,\n+              \"secretName\": \"sso-x509-https-secret\"\n+            }\n+          },\n+          {\n+            \"name\": \"default-token-kv98v\",\n+            \"secret\": {\n+              \"defaultMode\": 420,\n+              \"secretName\": \"default-token-kv98v\"\n+            }\n+          }\n+        ]\n+      },\n+      \"status\": {\n+        \"conditions\": [\n+          {\n+            \"lastProbeTime\": null,\n+            \"lastTransitionTime\": \"2019-10-11T06:26:04Z\",\n+            \"status\": \"True\",\n+            \"type\": \"Initialized\"\n+          },\n+          {\n+            \"lastProbeTime\": null,\n+            \"lastTransitionTime\": \"2019-10-11T06:26:51Z\",\n+            \"status\": \"True\",\n+            \"type\": \"Ready\"\n+          },\n+          {\n+            \"lastProbeTime\": null,\n+            \"lastTransitionTime\": \"2019-10-11T06:26:51Z\",\n+            \"status\": \"True\",\n+            \"type\": \"ContainersReady\"\n+          },\n+          {\n+            \"lastProbeTime\": null,\n+            \"lastTransitionTime\": \"2019-10-11T06:26:03Z\",\n+            \"status\": \"True\",\n+            \"type\": \"PodScheduled\"\n+          }\n+        ],\n+        \"containerStatuses\": [\n+          {\n+            \"containerID\": \"cri-o://90c1daf447b9373e52ebf401f892b529a0fd740508a5ba9ec8d365267ece311f\",\n+            \"image\": \"registry.access.redhat.com/redhat-sso-7/sso73-openshift:1.0\",\n+            \"imageID\": \"registry.access.redhat.com/redhat-sso-7/sso73-openshift@sha256:35740d1dbebbb4dc39ea9ce4736d5cc54675a984b1ec0f9bef67eb48e93ffe2d\",\n+            \"lastState\": {},\n+            \"name\": \"keycloak\",\n+            \"ready\": true,\n+            \"restartCount\": 0,\n+            \"state\": {\n+              \"running\": {\n+                \"startedAt\": \"2019-10-11T06:26:12Z\"\n+              }\n+            }\n+          }\n+        ],\n+        \"hostIP\": \"192.168.130.11\",\n+        \"phase\": \"Running\",\n+        \"podIP\": \"10.128.0.234\",\n+        \"qosClass\": \"BestEffort\",\n+        \"startTime\": \"2019-10-11T06:26:04Z\"\n+      }\n+    },\n+    {\n+      \"apiVersion\": \"v1\",\n+      \"kind\": \"Pod\",\n+      \"metadata\": {\n+        \"annotations\": {\n+          \"k8s.v1.cni.cncf.io/networks-status\": \"[{\\n    \\\"name\\\": \\\"openshift-sdn\\\",\\n    \\\"interface\\\": \\\"eth0\\\",\\n    \\\"ips\\\": [\\n        \\\"10.128.0.237\\\"\\n    ],\\n    \\\"default\\\": true,\\n    \\\"dns\\\": {}\\n}]\",\n+          \"openshift.io/scc\": \"restricted\"\n+        },\n+        \"creationTimestamp\": \"2019-10-11T06:51:40Z\",\n+        \"generateName\": \"keycloak-\",\n+        \"labels\": {\n+          \"application\": \"keycloak\",\n+          \"component\": \"keycloak\",\n+          \"controller-revision-hash\": \"keycloak-86d5dbd654\",\n+          \"statefulset.kubernetes.io/pod-name\": \"keycloak-2\"\n+        },\n+        \"name\": \"keycloak-2\",\n+        \"namespace\": \"keycloak\",\n+        \"ownerReferences\": [\n+          {\n+            \"apiVersion\": \"apps/v1\",\n+            \"blockOwnerDeletion\": true,\n+            \"controller\": true,\n+            \"kind\": \"StatefulSet\",\n+            \"name\": \"keycloak\",\n+            \"uid\": \"d6e308ff-eb37-11e9-ba11-52fdfc072182\"\n+          }\n+        ],\n+        \"resourceVersion\": \"249935\",\n+        \"selfLink\": \"/api/v1/namespaces/keycloak/pods/keycloak-2\",\n+        \"uid\": \"941c535c-ebf3-11e9-8261-52fdfc072182\"\n+      },\n+      \"spec\": {\n+        \"containers\": [\n+          {\n+            \"env\": [\n+              {\n+                \"name\": \"DB_SERVICE_PREFIX_MAPPING\",\n+                \"value\": \"keycloak-postgresql=DB\"\n+              },\n+              {\n+                \"name\": \"TEST\",\n+                \"value\": \"test\"\n+              },\n+              {\n+                \"name\": \"TX_DATABASE_PREFIX_MAPPING\",\n+                \"value\": \"keycloak-postgresql=DB\"\n+              },\n+              {\n+                \"name\": \"DB_JNDI\",\n+                \"value\": \"java:jboss/datasources/KeycloakDS\"\n+              },\n+              {\n+                \"name\": \"DB_SCHEMA\",\n+                \"value\": \"public\"\n+              },\n+              {\n+                \"name\": \"DB_USERNAME\",\n+                \"valueFrom\": {\n+                  \"secretKeyRef\": {\n+                    \"key\": \"user\",\n+                    \"name\": \"keycloak-db-secret\"\n+                  }\n+                }\n+              },\n+              {\n+                \"name\": \"DB_PASSWORD\",\n+                \"valueFrom\": {\n+                  \"secretKeyRef\": {\n+                    \"key\": \"password\",\n+                    \"name\": \"keycloak-db-secret\"\n+                  }\n+                }\n+              },\n+              {\n+                \"name\": \"DB_DATABASE\",\n+                \"value\": \"root\"\n+              },\n+              {\n+                \"name\": \"JGROUPS_PING_PROTOCOL\",\n+                \"value\": \"dns.DNS_PING\"\n+              },\n+              {\n+                \"name\": \"OPENSHIFT_DNS_PING_SERVICE_NAME\",\n+                \"value\": \"keycloak-discovery.keycloak.svc.cluster.local\"\n+              },\n+              {\n+                \"name\": \"SSO_ADMIN_USERNAME\",\n+                \"valueFrom\": {\n+                  \"secretKeyRef\": {\n+                    \"key\": \"ADMIN_USERNAME\",\n+                    \"name\": \"credential-example-keycloak\"\n+                  }\n+                }\n+              },\n+              {\n+                \"name\": \"SSO_ADMIN_PASSWORD\",\n+                \"valueFrom\": {\n+                  \"secretKeyRef\": {\n+                    \"key\": \"ADMIN_PASSWORD\",\n+                    \"name\": \"credential-example-keycloak\"\n+                  }\n+                }\n+              }\n+            ],\n+            \"image\": \"registry.access.redhat.com/redhat-sso-7/sso73-openshift:1.0\",\n+            \"imagePullPolicy\": \"IfNotPresent\",\n+            \"livenessProbe\": {\n+              \"failureThreshold\": 3,\n+              \"httpGet\": {\n+                \"path\": \"/auth/realms/master\",\n+                \"port\": 8080,\n+                \"scheme\": \"HTTP\"\n+              },\n+              \"initialDelaySeconds\": 60,\n+              \"periodSeconds\": 10,\n+              \"successThreshold\": 1,\n+              \"timeoutSeconds\": 1\n+            },\n+            \"name\": \"keycloak\",\n+            \"ports\": [\n+              {\n+                \"containerPort\": 8443,\n+                \"protocol\": \"TCP\"\n+              },\n+              {\n+                \"containerPort\": 8080,\n+                \"protocol\": \"TCP\"\n+              },\n+              {\n+                \"containerPort\": 9990,\n+                \"protocol\": \"TCP\"\n+              },\n+              {\n+                \"containerPort\": 8778,\n+                \"protocol\": \"TCP\"\n+              }\n+            ],\n+            \"readinessProbe\": {\n+              \"failureThreshold\": 3,\n+              \"httpGet\": {\n+                \"path\": \"/auth/realms/master\",\n+                \"port\": 8080,\n+                \"scheme\": \"HTTP\"\n+              },\n+              \"initialDelaySeconds\": 10,\n+              \"periodSeconds\": 10,\n+              \"successThreshold\": 1,\n+              \"timeoutSeconds\": 1\n+            },\n+            \"resources\": {},\n+            \"securityContext\": {\n+              \"capabilities\": {\n+                \"drop\": [\n+                  \"KILL\",\n+                  \"MKNOD\",\n+                  \"SETGID\",\n+                  \"SETUID\"\n+                ]\n+              },\n+              \"runAsUser\": 1000470000\n+            },\n+            \"terminationMessagePath\": \"/dev/termination-log\",\n+            \"terminationMessagePolicy\": \"File\",\n+            \"volumeMounts\": [\n+              {\n+                \"mountPath\": \"/etc/x509/https\",\n+                \"name\": \"sso-x509-https-secret\"\n+              },\n+              {\n+                \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n+                \"name\": \"default-token-kv98v\",\n+                \"readOnly\": true\n+              }\n+            ]\n+          }\n+        ],\n+        \"dnsPolicy\": \"ClusterFirst\",\n+        \"enableServiceLinks\": true,\n+        \"hostname\": \"keycloak-2\",\n+        \"imagePullSecrets\": [\n+          {\n+            \"name\": \"default-dockercfg-gm7sc\"\n+          }\n+        ],\n+        \"nodeName\": \"crc-vsqrt-master-0\",\n+        \"priority\": 0,\n+        \"restartPolicy\": \"Always\",\n+        \"schedulerName\": \"default-scheduler\",\n+        \"securityContext\": {\n+          \"fsGroup\": 1000470000,\n+          \"seLinuxOptions\": {\n+            \"level\": \"s0:c22,c4\"\n+          }\n+        },\n+        \"serviceAccount\": \"default\",\n+        \"serviceAccountName\": \"default\",\n+        \"terminationGracePeriodSeconds\": 30,\n+        \"tolerations\": [\n+          {\n+            \"effect\": \"NoExecute\",\n+            \"key\": \"node.kubernetes.io/not-ready\",\n+            \"operator\": \"Exists\",\n+            \"tolerationSeconds\": 300\n+          },\n+          {\n+            \"effect\": \"NoExecute\",\n+            \"key\": \"node.kubernetes.io/unreachable\",\n+            \"operator\": \"Exists\",\n+            \"tolerationSeconds\": 300\n+          }\n+        ],\n+        \"volumes\": [\n+          {\n+            \"name\": \"sso-x509-https-secret\",\n+            \"secret\": {\n+              \"defaultMode\": 420,\n+              \"optional\": true,\n+              \"secretName\": \"sso-x509-https-secret\"\n+            }\n+          },\n+          {\n+            \"name\": \"default-token-kv98v\",\n+            \"secret\": {\n+              \"defaultMode\": 420,\n+              \"secretName\": \"default-token-kv98v\"\n+            }\n+          }\n+        ]\n+      },\n+      \"status\": {\n+        \"conditions\": [\n+          {\n+            \"lastProbeTime\": null,\n+            \"lastTransitionTime\": \"2019-10-11T06:51:40Z\",\n+            \"status\": \"True\",\n+            \"type\": \"Initialized\"\n+          },\n+          {\n+            \"lastProbeTime\": null,\n+            \"lastTransitionTime\": \"2019-10-11T06:52:47Z\",\n+            \"status\": \"True\",\n+            \"type\": \"Ready\"\n+          },\n+          {\n+            \"lastProbeTime\": null,\n+            \"lastTransitionTime\": \"2019-10-11T06:52:47Z\",\n+            \"status\": \"True\",\n+            \"type\": \"ContainersReady\"\n+          },\n+          {\n+            \"lastProbeTime\": null,\n+            \"lastTransitionTime\": \"2019-10-11T06:51:40Z\",\n+            \"status\": \"True\",\n+            \"type\": \"PodScheduled\"\n+          }\n+        ],\n+        \"containerStatuses\": [\n+          {\n+            \"containerID\": \"cri-o://b2a41f7f247d5b8eafdf0540df8c501b38cdafc27e136738788406dbf1f2d6c5\",\n+            \"image\": \"registry.access.redhat.com/redhat-sso-7/sso73-openshift:1.0\",\n+            \"imageID\": \"registry.access.redhat.com/redhat-sso-7/sso73-openshift@sha256:35740d1dbebbb4dc39ea9ce4736d5cc54675a984b1ec0f9bef67eb48e93ffe2d\",\n+            \"lastState\": {},\n+            \"name\": \"keycloak\",\n+            \"ready\": true,\n+            \"restartCount\": 0,\n+            \"state\": {\n+              \"running\": {\n+                \"startedAt\": \"2019-10-11T06:51:48Z\"\n+              }\n+            }\n+          }\n+        ],\n+        \"hostIP\": \"192.168.130.11\",\n+        \"phase\": \"Running\",\n+        \"podIP\": \"10.128.0.237\",\n+        \"qosClass\": \"BestEffort\",\n+        \"startTime\": \"2019-10-11T06:51:40Z\"\n+      }\n+    },\n+    {\n+      \"apiVersion\": \"v1\",\n+      \"kind\": \"Pod\",\n+      \"metadata\": {\n+        \"annotations\": {\n+          \"k8s.v1.cni.cncf.io/networks-status\": \"[{\\n    \\\"name\\\": \\\"openshift-sdn\\\",\\n    \\\"interface\\\": \\\"eth0\\\",\\n    \\\"ips\\\": [\\n        \\\"10.128.0.220\\\"\\n    ],\\n    \\\"default\\\": true,\\n    \\\"dns\\\": {}\\n}]\",\n+          \"openshift.io/scc\": \"restricted\"\n+        },\n+        \"creationTimestamp\": \"2019-10-10T08:27:47Z\",\n+        \"generateName\": \"keycloak-postgresql-666b764458-\",\n+        \"labels\": {\n+          \"application\": \"keycloak\",\n+          \"component\": \"database\",\n+          \"pod-template-hash\": \"666b764458\"\n+        },\n+        \"name\": \"keycloak-postgresql-666b764458-tv6pk\",\n+        \"namespace\": \"keycloak\",\n+        \"ownerReferences\": [\n+          {\n+            \"apiVersion\": \"apps/v1\",\n+            \"blockOwnerDeletion\": true,\n+            \"controller\": true,\n+            \"kind\": \"ReplicaSet\",\n+            \"name\": \"keycloak-postgresql-666b764458\",\n+            \"uid\": \"d6cf7e74-eb37-11e9-ba11-52fdfc072182\"\n+          }\n+        ],\n+        \"resourceVersion\": \"239070\",\n+        \"selfLink\": \"/api/v1/namespaces/keycloak/pods/keycloak-postgresql-666b764458-tv6pk\",\n+        \"uid\": \"d6d53608-eb37-11e9-ba11-52fdfc072182\"\n+      },\n+      \"spec\": {\n+        \"containers\": [\n+          {\n+            \"env\": [\n+              {\n+                \"name\": \"POSTGRES_USER\",\n+                \"valueFrom\": {\n+                  \"secretKeyRef\": {\n+                    \"key\": \"user\",\n+                    \"name\": \"keycloak-db-secret\"\n+                  }\n+                }\n+              },\n+              {\n+                \"name\": \"PGUSER\",\n+                \"valueFrom\": {\n+                  \"secretKeyRef\": {\n+                    \"key\": \"user\",\n+                    \"name\": \"keycloak-db-secret\"\n+                  }\n+                }\n+              },\n+              {\n+                \"name\": \"POSTGRES_PASSWORD\",\n+                \"valueFrom\": {\n+                  \"secretKeyRef\": {\n+                    \"key\": \"password\",\n+                    \"name\": \"keycloak-db-secret\"\n+                  }\n+                }\n+              },\n+              {\n+                \"name\": \"POSTGRES_DB\",\n+                \"value\": \"root\"\n+              },\n+              {\n+                \"name\": \"PGDATA\",\n+                \"value\": \"/var/lib/postgresql/data/pgdata\"\n+              }\n+            ],\n+            \"image\": \"postgres:9.5\",\n+            \"imagePullPolicy\": \"IfNotPresent\",\n+            \"livenessProbe\": {\n+              \"failureThreshold\": 3,\n+              \"initialDelaySeconds\": 30,\n+              \"periodSeconds\": 10,\n+              \"successThreshold\": 1,\n+              \"tcpSocket\": {\n+                \"port\": 5432\n+              },\n+              \"timeoutSeconds\": 1\n+            },\n+            \"name\": \"keycloak-postgresql\",\n+            \"ports\": [\n+              {\n+                \"containerPort\": 5432,\n+                \"protocol\": \"TCP\"\n+              }\n+            ],\n+            \"readinessProbe\": {\n+              \"exec\": {\n+                \"command\": [\n+                  \"/bin/sh\",\n+                  \"-c\",\n+                  \"psql -h 127.0.0.1 -U $POSTGRES_USER -q -d $POSTGRES_DB -c 'SELECT 1'\"\n+                ]\n+              },\n+              \"failureThreshold\": 3,\n+              \"initialDelaySeconds\": 5,\n+              \"periodSeconds\": 10,\n+              \"successThreshold\": 1,\n+              \"timeoutSeconds\": 1\n+            },\n+            \"resources\": {},\n+            \"securityContext\": {\n+              \"capabilities\": {\n+                \"drop\": [\n+                  \"KILL\",\n+                  \"MKNOD\",\n+                  \"SETGID\",\n+                  \"SETUID\"\n+                ]\n+              },\n+              \"runAsUser\": 1000470000\n+            },\n+            \"terminationMessagePath\": \"/dev/termination-log\",\n+            \"terminationMessagePolicy\": \"File\",\n+            \"volumeMounts\": [\n+              {\n+                \"mountPath\": \"/var/lib/pgsql/data\",\n+                \"name\": \"keycloak-postgresql-claim\"\n+              },\n+              {\n+                \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n+                \"name\": \"default-token-kv98v\",\n+                \"readOnly\": true\n+              }\n+            ]\n+          }\n+        ],\n+        \"dnsPolicy\": \"ClusterFirst\",\n+        \"enableServiceLinks\": true,\n+        \"imagePullSecrets\": [\n+          {\n+            \"name\": \"default-dockercfg-gm7sc\"\n+          }\n+        ],\n+        \"nodeName\": \"crc-vsqrt-master-0\",\n+        \"priority\": 0,\n+        \"restartPolicy\": \"Always\",\n+        \"schedulerName\": \"default-scheduler\",\n+        \"securityContext\": {\n+          \"fsGroup\": 1000470000,\n+          \"seLinuxOptions\": {\n+            \"level\": \"s0:c22,c4\"\n+          }\n+        },\n+        \"serviceAccount\": \"default\",\n+        \"serviceAccountName\": \"default\",\n+        \"terminationGracePeriodSeconds\": 30,\n+        \"tolerations\": [\n+          {\n+            \"effect\": \"NoExecute\",\n+            \"key\": \"node.kubernetes.io/not-ready\",\n+            \"operator\": \"Exists\",\n+            \"tolerationSeconds\": 300\n+          },\n+          {\n+            \"effect\": \"NoExecute\",\n+            \"key\": \"node.kubernetes.io/unreachable\",\n+            \"operator\": \"Exists\",\n+            \"tolerationSeconds\": 300\n+          }\n+        ],\n+        \"volumes\": [\n+          {\n+            \"name\": \"keycloak-postgresql-claim\",\n+            \"persistentVolumeClaim\": {\n+              \"claimName\": \"keycloak-postgresql-claim\"\n+            }\n+          },\n+          {\n+            \"name\": \"default-token-kv98v\",\n+            \"secret\": {\n+              \"defaultMode\": 420,\n+              \"secretName\": \"default-token-kv98v\"\n+            }\n+          }\n+        ]\n+      },\n+      \"status\": {\n+        \"conditions\": [\n+          {\n+            \"lastProbeTime\": null,\n+            \"lastTransitionTime\": \"2019-10-10T08:27:47Z\",\n+            \"status\": \"True\",\n+            \"type\": \"Initialized\"\n+          },\n+          {\n+            \"lastProbeTime\": null,\n+            \"lastTransitionTime\": \"2019-10-11T06:02:48Z\",\n+            \"status\": \"True\",\n+            \"type\": \"Ready\"\n+          },\n+          {\n+            \"lastProbeTime\": null,\n+            \"lastTransitionTime\": \"2019-10-11T06:02:48Z\",\n+            \"status\": \"True\",\n+            \"type\": \"ContainersReady\"\n+          },\n+          {\n+            \"lastProbeTime\": null,\n+            \"lastTransitionTime\": \"2019-10-10T08:27:47Z\",\n+            \"status\": \"True\",\n+            \"type\": \"PodScheduled\"\n+          }\n+        ],\n+        \"containerStatuses\": [\n+          {\n+            \"containerID\": \"cri-o://81a311d85b6f408cbae534e90c6fa12d074ea1cd742e0a59c4ca1cdf897ec6e7\",\n+            \"image\": \"docker.io/library/postgres:9.5\",\n+            \"imageID\": \"docker.io/library/postgres@sha256:57b963715ad4ca28481c5e9ab9acb769cc3e3868a9d4389681ebc7260a45e68c\",\n+            \"lastState\": {\n+              \"terminated\": {\n+                \"containerID\": \"cri-o://1c7cf65c299a7a048c4501df40cfcb9b810f81e30dddd8bcab92ce6163fa6f2b\",\n+                \"exitCode\": 255,\n+                \"finishedAt\": \"2019-10-11T06:01:43Z\",\n+                \"reason\": \"Error\",\n+                \"startedAt\": \"2019-10-10T08:28:44Z\"\n+              }\n+            },\n+            \"name\": \"keycloak-postgresql\",\n+            \"ready\": true,\n+            \"restartCount\": 1,\n+            \"state\": {\n+              \"running\": {\n+                \"startedAt\": \"2019-10-11T06:02:18Z\"\n+              }\n+            }\n+          }\n+        ],\n+        \"hostIP\": \"192.168.130.11\",\n+        \"phase\": \"Running\",\n+        \"podIP\": \"10.128.0.220\",\n+        \"qosClass\": \"BestEffort\",\n+        \"startTime\": \"2019-10-10T08:27:47Z\"\n+      }\n+    }\n+  ],\n+  \"kind\": \"List\",\n+  \"metadata\": {\n+    \"resourceVersion\": \"\",\n+    \"selfLink\": \"\"\n+  }\n+}\n", "test_patch": "diff --git a/src/test/java/org/jgroups/ping/kube/test/RollingUpdateTest.java b/src/test/java/org/jgroups/ping/kube/test/RollingUpdateTest.java\nindex e386b4c..5d9f16d 100644\n--- a/src/test/java/org/jgroups/ping/kube/test/RollingUpdateTest.java\n+++ b/src/test/java/org/jgroups/ping/kube/test/RollingUpdateTest.java\n@@ -53,6 +53,7 @@ public class RollingUpdateTest {\n       KUBE_PING_FOR_TESTING testedProtocol = new KUBE_PING_FOR_TESTING(\"/openshift_rolling_update.json\");\n       testedProtocol.setValue(\"split_clusters_during_rolling_update\", true);\n \n+      //when //then\n       testPutOnlyNodesWithTheSameParentDuringRollingUpdate(testedProtocol);\n    }\n \n@@ -61,6 +62,18 @@ public class RollingUpdateTest {\n       //given\n       KUBE_PING_FOR_TESTING testedProtocol = new KUBE_PING_FOR_TESTING(\"/replicaset_rolling_update.json\");\n       testedProtocol.setValue(\"split_clusters_during_rolling_update\", true);\n+\n+      //when //then\n+      testPutOnlyNodesWithTheSameParentDuringRollingUpdate(testedProtocol);\n+   }\n+\n+   @Test\n+   public void testPutOnlyNodesWithTheSameParentDuringRollingUpdateStatefulSet() throws Exception {\n+      //given\n+      KUBE_PING_FOR_TESTING testedProtocol = new KUBE_PING_FOR_TESTING(\"/statefulset_rolling_update.json\");\n+      testedProtocol.setValue(\"split_clusters_during_rolling_update\", true);\n+\n+      //when //then\n       testPutOnlyNodesWithTheSameParentDuringRollingUpdate(testedProtocol);\n    }\n \n"}
