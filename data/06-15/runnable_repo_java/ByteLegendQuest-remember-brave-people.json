{
    "repository": "ByteLegendQuest/remember-brave-people",
    "stars": 58,
    "language": "java",
    "size": 41731,
    "clone_url": "https://github.com/ByteLegendQuest/remember-brave-people.git",
    "timestamp": "2023-06-15T18:04:06.812898Z",
    "clone_success": true,
    "number of actions": 0,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "number_of_actions": 3,
    "actions_build_tools": [
        "gradle",
        "unknown",
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_data": {
        "failed": true,
        "tests": [],
        "stdout": "[check and docker build push/check] \ud83d\ude80  Start image=crawlergpt:latest\n[check and docker build push/check]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[check and docker build push/check]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[check and docker build push/check]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[check and docker build push/check]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/ByteLegendQuest-remember-brave-people] user=0 workdir=\n[check and docker build push/check]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[check and docker build push/check] Non-terminating error while running 'git clone': some refs were not updated\n[check and docker build push/check]   \u2601  git clone 'https://github.com/actions/cache' # ref=v1\n[check and docker build push/check] \ud83e\uddea  Matrix: map[includeDockerTest:true java:8 os:ubuntu-latest]\n[check and docker build push/check] \u2b50 Run Main Configure git\n[check and docker build push/check]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/0] user= workdir=\n[check and docker build push/check]   \u2705  Success - Main Configure git\n[check and docker build push/check] \u2b50 Run Main actions/checkout@v2\n[check and docker build push/check]   \u2705  Success - Main actions/checkout@v2\n[check and docker build push/check] \u2b50 Run Main Set up JDK 8\n[check and docker build push/check]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[check and docker build push/check]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[check and docker build push/check]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[check and docker build push/check]   \ud83d\udcac  ::debug::isExplicit: \n[check and docker build push/check]   \ud83d\udcac  ::debug::explicit? false\n[check and docker build push/check]   \ud83d\udcac  ::debug::evaluating 0 versions\n[check and docker build push/check]   \ud83d\udcac  ::debug::match not found\n[check and docker build push/check]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[check and docker build push/check]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[check and docker build push/check]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu8.70.0.23-ca-jdk8.0.372-linux_x64.tar.gz\n[check and docker build push/check]   \ud83d\udcac  ::debug::Downloading /tmp/52b99c4b-b9d2-4828-bd23-cbd5c9bb4095\n[check and docker build push/check]   \ud83d\udcac  ::debug::download complete\n[check and docker build push/check]   | [command]/usr/bin/tar --version\n[check and docker build push/check]   | tar (GNU tar) 1.30\n[check and docker build push/check]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[check and docker build push/check]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[check and docker build push/check]   | This is free software: you are free to change and redistribute it.\n[check and docker build push/check]   | There is NO WARRANTY, to the extent permitted by law.\n[check and docker build push/check]   | \n[check and docker build push/check]   | Written by John Gilmore and Jay Fenlason.\n[check and docker build push/check]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_589772755 -f /tmp/52b99c4b-b9d2-4828-bd23-cbd5c9bb4095\n[check and docker build push/check]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_589772755/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[check and docker build push/check]   \ud83d\udcac  ::debug::Caching tool jdk 8.0.372 x64\n[check and docker build push/check]   \ud83d\udcac  ::debug::source dir: /tmp/temp_589772755/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[check and docker build push/check]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/8.0.372/x64\n[check and docker build push/check]   \ud83d\udcac  ::debug::finished caching tool\n[check and docker build push/check]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[check and docker build push/check]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[check and docker build push/check]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[check and docker build push/check]   | writing /home/runneradmin/.m2/settings.xml\n[check and docker build push/check]   \u2705  Success - Main Set up JDK 8\n[check and docker build push/check]   \u2699  ::set-env:: JAVA_HOME_8.0.372_x64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[check and docker build push/check]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/8.0.372/x64\n[check and docker build push/check]   \u2699  ::set-env:: JAVA_HOME_8_0_372_X64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[check and docker build push/check]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/8.0.372/x64\n[check and docker build push/check]   \u2699  ::set-output:: version=8.0.372\n[check and docker build push/check]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/8.0.372/x64/bin\n[check and docker build push/check] \u2b50 Run Main Cache node modules\n[check and docker build push/check]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v1/ dst=/var/run/act/actions/actions-cache@v1/\n[check and docker build push/check]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v1/] user=0 workdir=\n[check and docker build push/check]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v1/dist/restore/index.js] user= workdir=\n[check and docker build push/check]   \ud83d\udcac  ::debug::Cache Path: /home/runneradmin/.gradle\n[check and docker build push/check]   \ud83d\udcac  ::debug::Resolved Keys:\n[check and docker build push/check]   \ud83d\udcac  ::debug::[\"Linux-9db0f42c245cc757b877a446b9110923dd2ffc5d9c12f46aef76171e46ca8595\",\"Linux-\"]\n[check and docker build push/check]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[check and docker build push/check]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[check and docker build push/check]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[check and docker build push/check]   \u2705  Success - Main Cache node modules\n[check and docker build push/check]   \u2699  ::set-output:: cache-hit=false\n[check and docker build push/check] \u2b50 Run Main Show Gradle version\n[check and docker build push/check]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[check and docker build push/check]   | Downloading https://services.gradle.org/distributions/gradle-6.9.1-bin.zip\n[check and docker build push/check]   | ..........10%..........20%..........30%...........40%..........50%..........60%..........70%...........80%..........90%..........100%\n[check and docker build push/check]   | \n[check and docker build push/check]   | Welcome to Gradle 6.9.1!\n[check and docker build push/check]   | \n[check and docker build push/check]   | Here are the highlights of this release:\n[check and docker build push/check]   |  - This is a small backport release.\n[check and docker build push/check]   |  - Java 16 can be used to compile when used with Java toolchains\n[check and docker build push/check]   |  - Dynamic versions can be used within plugin declarations\n[check and docker build push/check]   |  - Native support for Apple Silicon processors\n[check and docker build push/check]   | \n[check and docker build push/check]   | For more details see https://docs.gradle.org/6.9.1/release-notes.html\n[check and docker build push/check]   | \n[check and docker build push/check]   | \n[check and docker build push/check]   | ------------------------------------------------------------\n[check and docker build push/check]   | Gradle 6.9.1\n[check and docker build push/check]   | ------------------------------------------------------------\n[check and docker build push/check]   | \n[check and docker build push/check]   | Build time:   2021-08-20 11:15:18 UTC\n[check and docker build push/check]   | Revision:     f0ddb54aaae0e44f0a7209c3c0274d506ea742a0\n[check and docker build push/check]   | \n[check and docker build push/check]   | Kotlin:       1.4.20\n[check and docker build push/check]   | Groovy:       2.5.12\n[check and docker build push/check]   | Ant:          Apache Ant(TM) version 1.10.9 compiled on September 27 2020\n[check and docker build push/check]   | JVM:          1.8.0_372 (Azul Systems, Inc. 25.372-b07)\n[check and docker build push/check]   | OS:           Linux 5.4.0-146-generic amd64\n[check and docker build push/check]   | \n[check and docker build push/check]   \u2705  Success - Main Show Gradle version\n[check and docker build push/check] \u2b50 Run Main Build with Gradle\n[check and docker build push/check]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[check and docker build push/check]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[check and docker build push/check]   | > Task :compileJava\n[check and docker build push/check]   | > Task :processResources NO-SOURCE\n[check and docker build push/check]   | > Task :classes\n[check and docker build push/check]   | > Task :checkstyleMain\n[check and docker build push/check]   | > Task :compileTestJava\n[check and docker build push/check]   | > Task :processTestResources NO-SOURCE\n[check and docker build push/check]   | > Task :testClasses\n[check and docker build push/check]   | > Task :checkstyleTest\n[check and docker build push/check]   | > Task :jar\n[check and docker build push/check]   | > Task :startScripts\n[check and docker build push/check]   | > Task :installDist\n[check and docker build push/check]   | \n[check and docker build push/check]   | > Task :dockerBuild FAILED\n[check and docker build push/check]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/build?buildargs=%7B%7D&cachefrom=%5B%5D&cgroupparent=&cpuperiod=0&cpuquota=0&cpusetcpus=&cpusetmems=&cpushares=0&dockerfile=Dockerfile&labels=%7B%7D&memory=0&memswap=0&networkmode=default&rm=1&shmsize=0&t=blindpirate%2Fremember-brave-people&target=&ulimits=null&version=1\": dial unix /var/run/docker.sock: connect: permission denied\n[check and docker build push/check]   | \n[check and docker build push/check]   | FAILURE: Build failed with an exception.\n[check and docker build push/check]   | \n[check and docker build push/check]   | * What went wrong:\n[check and docker build push/check]   | Execution failed for task ':dockerBuild'.\n[check and docker build push/check]   | > Process 'command 'docker'' finished with non-zero exit value 1\n[check and docker build push/check]   | \n[check and docker build push/check]   | * Try:\n[check and docker build push/check]   | Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.\n[check and docker build push/check]   | \n[check and docker build push/check]   | * Get more help at https://help.gradle.org\n[check and docker build push/check]   | \n[check and docker build push/check]   | BUILD FAILED in 1m 10s\n[check and docker build push/check]   | 8 actionable tasks: 8 executed\n[check and docker build push/check]   | \n[check and docker build push/check]   | Publishing build scan...\n[check and docker build push/check]   | https://gradle.com/s/l5i2s25lfqzha\n[check and docker build push/check]   | \n[check and docker build push/check]   \u274c  Failure - Main Build with Gradle\n[check and docker build push/check] exitcode '1': failure\n[check and docker build push/check] \u2b50 Run Post Set up JDK 8\n[check and docker build push/check]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[check and docker build push/check]   \u2705  Success - Post Set up JDK 8\n[check and docker build push/check] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'check' failed\n",
        "workflow": "/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/ByteLegendQuest-remember-brave-people/.github/workflows/check-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 145.6250298023224
    }
}