{
    "repository": "raeleus/skin-composer",
    "stars": 379,
    "language": "java",
    "size": 97889,
    "clone_url": "https://github.com/raeleus/skin-composer.git",
    "timestamp": "2023-06-15T16:08:11.734391Z",
    "clone_success": true,
    "number of actions": 0,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "number_of_actions": 1,
    "actions_build_tools": [
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_data": {
        "failed": true,
        "tests": [],
        "stdout": "[Build skin-composer and create a draft release/jar        ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build skin-composer and create a draft release/linux-tar  ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build skin-composer and create a draft release/windows-zip] \ud83d\ude80  Start image=crawlergpt:latest\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/raeleus-skin-composer] user=0 workdir=\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/raeleus-skin-composer] user=0 workdir=\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/raeleus-skin-composer] user=0 workdir=\n[Build skin-composer and create a draft release/linux-tar  ]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[Build skin-composer and create a draft release/jar        ]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[Build skin-composer and create a draft release/windows-zip]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[Build skin-composer and create a draft release/linux-tar  ] Non-terminating error while running 'git clone': some refs were not updated\n[Build skin-composer and create a draft release/linux-tar  ]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v2\n[Build skin-composer and create a draft release/linux-tar  ] \u2b50 Run Main actions/checkout@v2\n[Build skin-composer and create a draft release/jar        ] Non-terminating error while running 'git clone': some refs were not updated\n[Build skin-composer and create a draft release/jar        ]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v2\n[Build skin-composer and create a draft release/linux-tar  ]   \u2705  Success - Main actions/checkout@v2\n[Build skin-composer and create a draft release/windows-zip] Non-terminating error while running 'git clone': some refs were not updated\n[Build skin-composer and create a draft release/windows-zip]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v2\n[Build skin-composer and create a draft release/jar        ] \u2b50 Run Main actions/checkout@v2\n[Build skin-composer and create a draft release/jar        ]   \u2705  Success - Main actions/checkout@v2\n[Build skin-composer and create a draft release/linux-tar  ] \u2b50 Run Main Set up JDK 14\n[Build skin-composer and create a draft release/windows-zip] \u2b50 Run Main actions/checkout@v2\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[Build skin-composer and create a draft release/windows-zip]   \u2705  Success - Main actions/checkout@v2\n[Build skin-composer and create a draft release/jar        ] \u2b50 Run Main Set up JDK 14\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::isExplicit: \n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::explicit? false\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::evaluating 0 versions\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::match not found\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[Build skin-composer and create a draft release/windows-zip] \u2b50 Run Main Set up JDK 14\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::isExplicit: \n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::explicit? false\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::evaluating 0 versions\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::match not found\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu14.29.23-ca-jdk14.0.2-linux_x64.tar.gz\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::Downloading /tmp/5d19af77-94c5-4b17-a585-644a61632a82\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udcac  ::debug::isExplicit: \n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udcac  ::debug::explicit? false\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udcac  ::debug::evaluating 0 versions\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udcac  ::debug::match not found\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu14.29.23-ca-jdk14.0.2-linux_x64.tar.gz\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udcac  ::debug::Downloading /tmp/fc87105e-ff48-4301-99ae-92602c9e5ded\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::download complete\n[Build skin-composer and create a draft release/jar        ]   | [command]/usr/bin/tar --version\n[Build skin-composer and create a draft release/jar        ]   | tar (GNU tar) 1.30\n[Build skin-composer and create a draft release/jar        ]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[Build skin-composer and create a draft release/jar        ]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[Build skin-composer and create a draft release/jar        ]   | This is free software: you are free to change and redistribute it.\n[Build skin-composer and create a draft release/jar        ]   | There is NO WARRANTY, to the extent permitted by law.\n[Build skin-composer and create a draft release/jar        ]   | \n[Build skin-composer and create a draft release/jar        ]   | Written by John Gilmore and Jay Fenlason.\n[Build skin-composer and create a draft release/jar        ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_1344034718 -f /tmp/5d19af77-94c5-4b17-a585-644a61632a82\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu14.29.23-ca-jdk14.0.2-linux_x64.tar.gz\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::Downloading /tmp/79da0d42-f601-4fa8-8c7f-e6dfe5a3e55b\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udcac  ::debug::download complete\n[Build skin-composer and create a draft release/windows-zip]   | [command]/usr/bin/tar --version\n[Build skin-composer and create a draft release/windows-zip]   | tar (GNU tar) 1.30\n[Build skin-composer and create a draft release/windows-zip]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[Build skin-composer and create a draft release/windows-zip]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[Build skin-composer and create a draft release/windows-zip]   | This is free software: you are free to change and redistribute it.\n[Build skin-composer and create a draft release/windows-zip]   | There is NO WARRANTY, to the extent permitted by law.\n[Build skin-composer and create a draft release/windows-zip]   | \n[Build skin-composer and create a draft release/windows-zip]   | Written by John Gilmore and Jay Fenlason.\n[Build skin-composer and create a draft release/windows-zip]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_1192928137 -f /tmp/fc87105e-ff48-4301-99ae-92602c9e5ded\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::download complete\n[Build skin-composer and create a draft release/linux-tar  ]   | [command]/usr/bin/tar --version\n[Build skin-composer and create a draft release/linux-tar  ]   | tar (GNU tar) 1.30\n[Build skin-composer and create a draft release/linux-tar  ]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[Build skin-composer and create a draft release/linux-tar  ]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[Build skin-composer and create a draft release/linux-tar  ]   | This is free software: you are free to change and redistribute it.\n[Build skin-composer and create a draft release/linux-tar  ]   | There is NO WARRANTY, to the extent permitted by law.\n[Build skin-composer and create a draft release/linux-tar  ]   | \n[Build skin-composer and create a draft release/linux-tar  ]   | Written by John Gilmore and Jay Fenlason.\n[Build skin-composer and create a draft release/linux-tar  ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_608418033 -f /tmp/79da0d42-f601-4fa8-8c7f-e6dfe5a3e55b\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_1344034718/zulu14.29.23-ca-jdk14.0.2-linux_x64\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::Caching tool jdk 14.0.2 x64\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::source dir: /tmp/temp_1344034718/zulu14.29.23-ca-jdk14.0.2-linux_x64\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/14.0.2/x64\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_1192928137/zulu14.29.23-ca-jdk14.0.2-linux_x64\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udcac  ::debug::Caching tool jdk 14.0.2 x64\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udcac  ::debug::source dir: /tmp/temp_1192928137/zulu14.29.23-ca-jdk14.0.2-linux_x64\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/14.0.2/x64\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::finished caching tool\n[Build skin-composer and create a draft release/jar        ]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[Build skin-composer and create a draft release/jar        ]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[Build skin-composer and create a draft release/jar        ]   | writing /home/runneradmin/.m2/settings.xml\n[Build skin-composer and create a draft release/jar        ]   \u2705  Success - Main Set up JDK 14\n[Build skin-composer and create a draft release/jar        ]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/14.0.2/x64\n[Build skin-composer and create a draft release/jar        ]   \u2699  ::set-env:: JAVA_HOME_14_0_2_X64=/opt/hostedtoolcache/jdk/14.0.2/x64\n[Build skin-composer and create a draft release/jar        ]   \u2699  ::set-env:: JAVA_HOME_14.0.2_x64=/opt/hostedtoolcache/jdk/14.0.2/x64\n[Build skin-composer and create a draft release/jar        ]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/14.0.2/x64\n[Build skin-composer and create a draft release/jar        ]   \u2699  ::set-output:: version=14.0.2\n[Build skin-composer and create a draft release/jar        ]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/14.0.2/x64/bin\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udcac  ::debug::finished caching tool\n[Build skin-composer and create a draft release/windows-zip]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[Build skin-composer and create a draft release/windows-zip]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[Build skin-composer and create a draft release/windows-zip]   | writing /home/runneradmin/.m2/settings.xml\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_608418033/zulu14.29.23-ca-jdk14.0.2-linux_x64\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::Caching tool jdk 14.0.2 x64\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::source dir: /tmp/temp_608418033/zulu14.29.23-ca-jdk14.0.2-linux_x64\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/14.0.2/x64\n[Build skin-composer and create a draft release/jar        ] \u2b50 Run Main Fix gradlew file permissions\n[Build skin-composer and create a draft release/windows-zip]   \u2705  Success - Main Set up JDK 14\n[Build skin-composer and create a draft release/windows-zip]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/14.0.2/x64\n[Build skin-composer and create a draft release/windows-zip]   \u2699  ::set-env:: JAVA_HOME_14_0_2_X64=/opt/hostedtoolcache/jdk/14.0.2/x64\n[Build skin-composer and create a draft release/windows-zip]   \u2699  ::set-env:: JAVA_HOME_14.0.2_x64=/opt/hostedtoolcache/jdk/14.0.2/x64\n[Build skin-composer and create a draft release/windows-zip]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/14.0.2/x64\n[Build skin-composer and create a draft release/windows-zip]   \u2699  ::set-output:: version=14.0.2\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Build skin-composer and create a draft release/windows-zip]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/14.0.2/x64/bin\n[Build skin-composer and create a draft release/jar        ]   \u2705  Success - Main Fix gradlew file permissions\n[Build skin-composer and create a draft release/windows-zip] \u2b50 Run Main Install dependencies\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::finished caching tool\n[Build skin-composer and create a draft release/linux-tar  ]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[Build skin-composer and create a draft release/linux-tar  ]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[Build skin-composer and create a draft release/linux-tar  ]   | writing /home/runneradmin/.m2/settings.xml\n[Build skin-composer and create a draft release/linux-tar  ]   \u2705  Success - Main Set up JDK 14\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Build skin-composer and create a draft release/linux-tar  ]   \u2699  ::set-env:: JAVA_HOME_14.0.2_x64=/opt/hostedtoolcache/jdk/14.0.2/x64\n[Build skin-composer and create a draft release/linux-tar  ]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/14.0.2/x64\n[Build skin-composer and create a draft release/linux-tar  ]   \u2699  ::set-env:: JAVA_HOME_14_0_2_X64=/opt/hostedtoolcache/jdk/14.0.2/x64\n[Build skin-composer and create a draft release/jar        ] \u2b50 Run Main Build jar\n[Build skin-composer and create a draft release/windows-zip]   | /var/run/act/workflow/2: line 2: choco: command not found\n[Build skin-composer and create a draft release/windows-zip]   | /var/run/act/workflow/2: line 2: choco: command not found\n[Build skin-composer and create a draft release/windows-zip]   \u274c  Failure - Main Install dependencies\n[Build skin-composer and create a draft release/linux-tar  ]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/14.0.2/x64\n[Build skin-composer and create a draft release/linux-tar  ]   \u2699  ::set-output:: version=14.0.2\n[Build skin-composer and create a draft release/linux-tar  ]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/14.0.2/x64/bin\n[Build skin-composer and create a draft release/linux-tar  ] \u2b50 Run Main Fix gradlew file permissions\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Build skin-composer and create a draft release/windows-zip] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Build skin-composer and create a draft release/jar        ]   | Downloading https://services.gradle.org/distributions/gradle-7.6-all.zip\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Build skin-composer and create a draft release/windows-zip] \u2b50 Run Post Set up JDK 14\n[Build skin-composer and create a draft release/linux-tar  ]   \u2705  Success - Main Fix gradlew file permissions\n[Build skin-composer and create a draft release/windows-zip]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[Build skin-composer and create a draft release/windows-zip]   \u2705  Success - Post Set up JDK 14\n[Build skin-composer and create a draft release/linux-tar  ] \u2b50 Run Main Build tar.gz\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Build skin-composer and create a draft release/linux-tar  ]   | Downloading https://services.gradle.org/distributions/gradle-7.6-all.zip\n[Build skin-composer and create a draft release/jar        ]   | ...............10%................20%................30%................40%...............50%................60%................70%................80%...............90%................100%\n[Build skin-composer and create a draft release/linux-tar  ]   | ...............10%................20%................30%................40%...............50%................60%................70%................80%...............90%................100%\n[Build skin-composer and create a draft release/jar        ]   | \n[Build skin-composer and create a draft release/jar        ]   | Welcome to Gradle 7.6!\n[Build skin-composer and create a draft release/jar        ]   | \n[Build skin-composer and create a draft release/jar        ]   | Here are the highlights of this release:\n[Build skin-composer and create a draft release/jar        ]   |  - Added support for Java 19.\n[Build skin-composer and create a draft release/jar        ]   |  - Introduced `--rerun` flag for individual task rerun.\n[Build skin-composer and create a draft release/jar        ]   |  - Improved dependency block for test suites to be strongly typed.\n[Build skin-composer and create a draft release/jar        ]   |  - Added a pluggable system for Java toolchains provisioning.\n[Build skin-composer and create a draft release/jar        ]   | \n[Build skin-composer and create a draft release/jar        ]   | For more details see https://docs.gradle.org/7.6/release-notes.html\n[Build skin-composer and create a draft release/jar        ]   | \n[Build skin-composer and create a draft release/jar        ]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[Build skin-composer and create a draft release/windows-zip] \ud83c\udfc1  Job failed\n[Build skin-composer and create a draft release/linux-tar  ]   | \n[Build skin-composer and create a draft release/linux-tar  ]   | Welcome to Gradle 7.6!\n[Build skin-composer and create a draft release/linux-tar  ]   | \n[Build skin-composer and create a draft release/linux-tar  ]   | Here are the highlights of this release:\n[Build skin-composer and create a draft release/linux-tar  ]   |  - Added support for Java 19.\n[Build skin-composer and create a draft release/linux-tar  ]   |  - Introduced `--rerun` flag for individual task rerun.\n[Build skin-composer and create a draft release/linux-tar  ]   |  - Improved dependency block for test suites to be strongly typed.\n[Build skin-composer and create a draft release/linux-tar  ]   |  - Added a pluggable system for Java toolchains provisioning.\n[Build skin-composer and create a draft release/linux-tar  ]   | \n[Build skin-composer and create a draft release/linux-tar  ]   | For more details see https://docs.gradle.org/7.6/release-notes.html\n[Build skin-composer and create a draft release/linux-tar  ]   | \n[Build skin-composer and create a draft release/linux-tar  ]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[Build skin-composer and create a draft release/jar        ]   | \n[Build skin-composer and create a draft release/jar        ]   | > Task :core:compileJava\n[Build skin-composer and create a draft release/jar        ]   | Note: Some input files use unchecked or unsafe operations.\n[Build skin-composer and create a draft release/jar        ]   | Note: Recompile with -Xlint:unchecked for details.\n[Build skin-composer and create a draft release/jar        ]   | \n[Build skin-composer and create a draft release/jar        ]   | > Task :core:processResources\n[Build skin-composer and create a draft release/jar        ]   | > Task :core:classes\n[Build skin-composer and create a draft release/jar        ]   | > Task :core:dist\n[Build skin-composer and create a draft release/jar        ]   | \n[Build skin-composer and create a draft release/jar        ]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.\n[Build skin-composer and create a draft release/jar        ]   | \n[Build skin-composer and create a draft release/jar        ]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[Build skin-composer and create a draft release/jar        ]   | \n[Build skin-composer and create a draft release/jar        ]   | See https://docs.gradle.org/7.6/userguide/command_line_interface.html#sec:command_line_warnings\n[Build skin-composer and create a draft release/jar        ]   | \n[Build skin-composer and create a draft release/jar        ]   | BUILD SUCCESSFUL in 59s\n[Build skin-composer and create a draft release/jar        ]   | 3 actionable tasks: 3 executed\n[Build skin-composer and create a draft release/jar        ]   \u2705  Success - Main Build jar\n[Build skin-composer and create a draft release/jar        ] \u2b50 Run Main Upload jar artifact\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-upload-artifact@v2/ dst=/var/run/act/actions/actions-upload-artifact@v2/\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-upload-artifact@v2/] user=0 workdir=\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-upload-artifact@v2/dist/index.js] user= workdir=\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::Search path '/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/raeleus-skin-composer/core/build/lib/SkinComposer.jar'\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::File:/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/raeleus-skin-composer/core/build/lib/SkinComposer.jar was found using the provided searchPath\n[Build skin-composer and create a draft release/jar        ]   | With the provided path, there will be 1 file uploaded\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udcac  ::debug::Root artifact directory is /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/raeleus-skin-composer/core/build/lib\n[Build skin-composer and create a draft release/jar        ]   | Starting artifact upload\n[Build skin-composer and create a draft release/jar        ]   | For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging\n[Build skin-composer and create a draft release/jar        ]   | Artifact name is valid!\n[Build skin-composer and create a draft release/jar        ]   \u2757  ::error::Unable to get ACTIONS_RUNTIME_TOKEN env variable\n[Build skin-composer and create a draft release/jar        ]   \u274c  Failure - Main Upload jar artifact\n[Build skin-composer and create a draft release/jar        ] exitcode '1': failure\n[Build skin-composer and create a draft release/jar        ] \u2b50 Run Post Set up JDK 14\n[Build skin-composer and create a draft release/jar        ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[Build skin-composer and create a draft release/jar        ]   \u2705  Success - Post Set up JDK 14\n[Build skin-composer and create a draft release/jar        ] \ud83c\udfc1  Job failed\n[Build skin-composer and create a draft release/linux-tar  ]   | > Task :core:compileJava UP-TO-DATE\n[Build skin-composer and create a draft release/linux-tar  ]   | > Task :core:processResources UP-TO-DATE\n[Build skin-composer and create a draft release/linux-tar  ]   | > Task :core:classes UP-TO-DATE\n[Build skin-composer and create a draft release/linux-tar  ]   | > Task :core:dist UP-TO-DATE\n[Build skin-composer and create a draft release/linux-tar  ]   | > Task :core:jar\n[Build skin-composer and create a draft release/linux-tar  ]   | > Task :core:startScripts\n[Build skin-composer and create a draft release/linux-tar  ]   | > Task :core:installDist\n[Build skin-composer and create a draft release/linux-tar  ]   | > Task :core:jre\n[Build skin-composer and create a draft release/linux-tar  ]   | \n[Build skin-composer and create a draft release/linux-tar  ]   | > Task :core:jpackageImage\n[Build skin-composer and create a draft release/linux-tar  ]   | The jpackage task is experimental. Use it at your own risk.\n[Build skin-composer and create a draft release/linux-tar  ]   | WARNING: Using incubator modules: jdk.incubator.jpackage\n[Build skin-composer and create a draft release/linux-tar  ]   | \n[Build skin-composer and create a draft release/linux-tar  ]   | > Task :core:jpackageTar\n[Build skin-composer and create a draft release/linux-tar  ]   | \n[Build skin-composer and create a draft release/linux-tar  ]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.\n[Build skin-composer and create a draft release/linux-tar  ]   | \n[Build skin-composer and create a draft release/linux-tar  ]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[Build skin-composer and create a draft release/linux-tar  ]   | \n[Build skin-composer and create a draft release/linux-tar  ]   | See https://docs.gradle.org/7.6/userguide/command_line_interface.html#sec:command_line_warnings\n[Build skin-composer and create a draft release/linux-tar  ]   | \n[Build skin-composer and create a draft release/linux-tar  ]   | BUILD SUCCESSFUL in 1m 36s\n[Build skin-composer and create a draft release/linux-tar  ]   | 9 actionable tasks: 6 executed, 3 up-to-date\n[Build skin-composer and create a draft release/linux-tar  ]   \u2705  Success - Main Build tar.gz\n[Build skin-composer and create a draft release/linux-tar  ] \u2b50 Run Main Upload deb artifact\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-upload-artifact@v2/ dst=/var/run/act/actions/actions-upload-artifact@v2/\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-upload-artifact@v2/] user=0 workdir=\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-upload-artifact@v2/dist/index.js] user= workdir=\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::Search path '/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/raeleus-skin-composer/core/build/jpackage/skin-composer-linux.tar.gz'\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::File:/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/raeleus-skin-composer/core/build/jpackage/skin-composer-linux.tar.gz was found using the provided searchPath\n[Build skin-composer and create a draft release/linux-tar  ]   | With the provided path, there will be 1 file uploaded\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udcac  ::debug::Root artifact directory is /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/raeleus-skin-composer/core/build/jpackage\n[Build skin-composer and create a draft release/linux-tar  ]   | Starting artifact upload\n[Build skin-composer and create a draft release/linux-tar  ]   | For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging\n[Build skin-composer and create a draft release/linux-tar  ]   | Artifact name is valid!\n[Build skin-composer and create a draft release/linux-tar  ]   \u2757  ::error::Unable to get ACTIONS_RUNTIME_TOKEN env variable\n[Build skin-composer and create a draft release/linux-tar  ]   \u274c  Failure - Main Upload deb artifact\n[Build skin-composer and create a draft release/linux-tar  ] exitcode '1': failure\n[Build skin-composer and create a draft release/linux-tar  ] \u2b50 Run Post Set up JDK 14\n[Build skin-composer and create a draft release/linux-tar  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[Build skin-composer and create a draft release/linux-tar  ]   \u2705  Success - Post Set up JDK 14\n[Build skin-composer and create a draft release/linux-tar  ] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'jar' failed\n",
        "workflow": "/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/raeleus-skin-composer/.github/workflows/release-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 130.12374186515808
    }
}