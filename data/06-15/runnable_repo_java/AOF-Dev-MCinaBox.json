{
    "repository": "AOF-Dev/MCinaBox",
    "stars": 1228,
    "language": "java",
    "size": 16210,
    "clone_url": "https://github.com/AOF-Dev/MCinaBox.git",
    "timestamp": "2023-06-15T17:42:57.759463Z",
    "clone_success": true,
    "number of actions": 0,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "number_of_actions": 1,
    "actions_build_tools": [
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_data": {
        "failed": true,
        "tests": [],
        "stdout": "[APK Debug/Build on Windows] \ud83d\ude80  Start image=crawlergpt:latest\n[APK Debug/Build on Ubuntu ] \ud83d\ude80  Start image=crawlergpt:latest\n[APK Debug/Build on MacOS  ] \ud83d\ude80  Start image=crawlergpt:latest\n[APK Debug/Build on Ubuntu ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[APK Debug/Build on Windows]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[APK Debug/Build on MacOS  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[APK Debug/Build on MacOS  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[APK Debug/Build on Windows]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[APK Debug/Build on Ubuntu ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[APK Debug/Build on Windows]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[APK Debug/Build on MacOS  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[APK Debug/Build on Ubuntu ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[APK Debug/Build on MacOS  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/AOF-Dev-MCinaBox] user=0 workdir=\n[APK Debug/Build on Ubuntu ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/AOF-Dev-MCinaBox] user=0 workdir=\n[APK Debug/Build on Windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/AOF-Dev-MCinaBox] user=0 workdir=\n[APK Debug/Build on Windows]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1.4.3\n[APK Debug/Build on MacOS  ]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1.4.3\n[APK Debug/Build on Ubuntu ]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1.4.3\n[APK Debug/Build on Windows] Non-terminating error while running 'git clone': some refs were not updated\n[APK Debug/Build on Windows]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[APK Debug/Build on Windows]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v2\n[APK Debug/Build on MacOS  ] Non-terminating error while running 'git clone': some refs were not updated\n[APK Debug/Build on MacOS  ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[APK Debug/Build on Ubuntu ] Non-terminating error while running 'git clone': some refs were not updated\n[APK Debug/Build on Ubuntu ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[APK Debug/Build on Windows]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v2\n[APK Debug/Build on MacOS  ]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v2\n[APK Debug/Build on Ubuntu ]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v2\n[APK Debug/Build on Windows] \u2b50 Run Main actions/checkout@v2\n[APK Debug/Build on Windows]   \u2705  Success - Main actions/checkout@v2\n[APK Debug/Build on MacOS  ]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v2\n[APK Debug/Build on Ubuntu ]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v2\n[APK Debug/Build on Windows] \u2b50 Run Main Set up JDK 11.0.5\n[APK Debug/Build on Windows]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v1.4.3/ dst=/var/run/act/actions/actions-setup-java@v1.4.3/\n[APK Debug/Build on MacOS  ] \u2b50 Run Main actions/checkout@v2\n[APK Debug/Build on MacOS  ]   \u2705  Success - Main actions/checkout@v2\n[APK Debug/Build on Windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v1.4.3/] user=0 workdir=\n[APK Debug/Build on Ubuntu ] \u2b50 Run Main actions/checkout@v2\n[APK Debug/Build on Windows]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1.4.3/dist/setup/index.js] user= workdir=\n[APK Debug/Build on MacOS  ] \u2b50 Run Main Set up JDK 11.0.5\n[APK Debug/Build on Ubuntu ]   \u2705  Success - Main actions/checkout@v2\n[APK Debug/Build on MacOS  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v1.4.3/ dst=/var/run/act/actions/actions-setup-java@v1.4.3/\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::isExplicit: 11.0.15\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::explicit? true\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/jdk/11.0.15/x64\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::not found\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[APK Debug/Build on Ubuntu ] \u2b50 Run Main Set up JDK 11.0.5\n[APK Debug/Build on MacOS  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v1.4.3/] user=0 workdir=\n[APK Debug/Build on MacOS  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1.4.3/dist/setup/index.js] user= workdir=\n[APK Debug/Build on Ubuntu ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v1.4.3/ dst=/var/run/act/actions/actions-setup-java@v1.4.3/\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::isExplicit: 11.0.15\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::explicit? true\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/jdk/11.0.15/x64\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::not found\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[APK Debug/Build on Ubuntu ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v1.4.3/] user=0 workdir=\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu11.56.19-ca-jdk11.0.15-linux_x64.tar.gz\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::Downloading /tmp/bb9b0a19-2a66-4166-b7c7-7870b7de98fa\n[APK Debug/Build on Ubuntu ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1.4.3/dist/setup/index.js] user= workdir=\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu11.56.19-ca-jdk11.0.15-linux_x64.tar.gz\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::Downloading /tmp/6ff4c4b9-712f-440e-bdb1-1ac740a87059\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::isExplicit: 11.0.15\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::explicit? true\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/jdk/11.0.15/x64\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::not found\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::download complete\n[APK Debug/Build on Windows]   | [command]/usr/bin/tar --version\n[APK Debug/Build on Windows]   | tar (GNU tar) 1.30\n[APK Debug/Build on Windows]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[APK Debug/Build on Windows]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[APK Debug/Build on Windows]   | This is free software: you are free to change and redistribute it.\n[APK Debug/Build on Windows]   | There is NO WARRANTY, to the extent permitted by law.\n[APK Debug/Build on Windows]   | \n[APK Debug/Build on Windows]   | Written by John Gilmore and Jay Fenlason.\n[APK Debug/Build on Windows]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_1810841518 -f /tmp/bb9b0a19-2a66-4166-b7c7-7870b7de98fa\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::download complete\n[APK Debug/Build on MacOS  ]   | [command]/usr/bin/tar --version\n[APK Debug/Build on MacOS  ]   | tar (GNU tar) 1.30\n[APK Debug/Build on MacOS  ]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[APK Debug/Build on MacOS  ]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[APK Debug/Build on MacOS  ]   | This is free software: you are free to change and redistribute it.\n[APK Debug/Build on MacOS  ]   | There is NO WARRANTY, to the extent permitted by law.\n[APK Debug/Build on MacOS  ]   | \n[APK Debug/Build on MacOS  ]   | Written by John Gilmore and Jay Fenlason.\n[APK Debug/Build on MacOS  ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_1911397401 -f /tmp/6ff4c4b9-712f-440e-bdb1-1ac740a87059\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu11.56.19-ca-jdk11.0.15-linux_x64.tar.gz\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::Downloading /tmp/621978b9-1ec6-4e26-b49c-95ac879beaee\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_1810841518/zulu11.56.19-ca-jdk11.0.15-linux_x64\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::Caching tool jdk 11.0.15 x64\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::source dir: /tmp/temp_1810841518/zulu11.56.19-ca-jdk11.0.15-linux_x64\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/11.0.15/x64\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_1911397401/zulu11.56.19-ca-jdk11.0.15-linux_x64\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::Caching tool jdk 11.0.15 x64\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::source dir: /tmp/temp_1911397401/zulu11.56.19-ca-jdk11.0.15-linux_x64\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/11.0.15/x64\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::download complete\n[APK Debug/Build on Ubuntu ]   | [command]/usr/bin/tar --version\n[APK Debug/Build on Ubuntu ]   | tar (GNU tar) 1.30\n[APK Debug/Build on Ubuntu ]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[APK Debug/Build on Ubuntu ]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[APK Debug/Build on Ubuntu ]   | This is free software: you are free to change and redistribute it.\n[APK Debug/Build on Ubuntu ]   | There is NO WARRANTY, to the extent permitted by law.\n[APK Debug/Build on Ubuntu ]   | \n[APK Debug/Build on Ubuntu ]   | Written by John Gilmore and Jay Fenlason.\n[APK Debug/Build on Ubuntu ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_149562289 -f /tmp/621978b9-1ec6-4e26-b49c-95ac879beaee\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::finished caching tool\n[APK Debug/Build on Windows]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/11.0.15/x64\n[APK Debug/Build on Windows]   \u2699  ::set-output:: version=11.0.15\n[APK Debug/Build on Windows]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1.4.3/.github/java.json\n[APK Debug/Build on Windows]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[APK Debug/Build on Windows]   | writing /home/runneradmin/.m2/settings.xml\n[APK Debug/Build on Windows]   \u2705  Success - Main Set up JDK 11.0.5\n[APK Debug/Build on Windows]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/11.0.15/x64\n[APK Debug/Build on Windows]   \u2699  ::set-env:: JAVA_HOME_11_0_15_X64=/opt/hostedtoolcache/jdk/11.0.15/x64\n[APK Debug/Build on Windows]   \u2699  ::set-env:: JAVA_HOME_11.0.15_x64=/opt/hostedtoolcache/jdk/11.0.15/x64\n[APK Debug/Build on Windows]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/11.0.15/x64/bin\n[APK Debug/Build on Windows] \u2b50 Run Main actions/cache@v2\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::finished caching tool\n[APK Debug/Build on MacOS  ]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/11.0.15/x64\n[APK Debug/Build on MacOS  ]   \u2699  ::set-output:: version=11.0.15\n[APK Debug/Build on MacOS  ]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1.4.3/.github/java.json\n[APK Debug/Build on MacOS  ]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[APK Debug/Build on MacOS  ]   | writing /home/runneradmin/.m2/settings.xml\n[APK Debug/Build on MacOS  ]   \u2705  Success - Main Set up JDK 11.0.5\n[APK Debug/Build on Windows]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[APK Debug/Build on MacOS  ]   \u2699  ::set-env:: JAVA_HOME_11.0.15_x64=/opt/hostedtoolcache/jdk/11.0.15/x64\n[APK Debug/Build on MacOS  ]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/11.0.15/x64\n[APK Debug/Build on MacOS  ]   \u2699  ::set-env:: JAVA_HOME_11_0_15_X64=/opt/hostedtoolcache/jdk/11.0.15/x64\n[APK Debug/Build on MacOS  ]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/11.0.15/x64/bin\n[APK Debug/Build on Windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[APK Debug/Build on MacOS  ] \u2b50 Run Main actions/cache@v2\n[APK Debug/Build on MacOS  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_149562289/zulu11.56.19-ca-jdk11.0.15-linux_x64\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::Caching tool jdk 11.0.15 x64\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::source dir: /tmp/temp_149562289/zulu11.56.19-ca-jdk11.0.15-linux_x64\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/11.0.15/x64\n[APK Debug/Build on MacOS  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::finished caching tool\n[APK Debug/Build on Ubuntu ]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/11.0.15/x64\n[APK Debug/Build on Ubuntu ]   \u2699  ::set-output:: version=11.0.15\n[APK Debug/Build on Ubuntu ]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1.4.3/.github/java.json\n[APK Debug/Build on Ubuntu ]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[APK Debug/Build on Ubuntu ]   | writing /home/runneradmin/.m2/settings.xml\n[APK Debug/Build on Ubuntu ]   \u2705  Success - Main Set up JDK 11.0.5\n[APK Debug/Build on Ubuntu ]   \u2699  ::set-env:: JAVA_HOME_11.0.15_x64=/opt/hostedtoolcache/jdk/11.0.15/x64\n[APK Debug/Build on Ubuntu ]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/11.0.15/x64\n[APK Debug/Build on Ubuntu ]   \u2699  ::set-env:: JAVA_HOME_11_0_15_X64=/opt/hostedtoolcache/jdk/11.0.15/x64\n[APK Debug/Build on Ubuntu ]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/11.0.15/x64/bin\n[APK Debug/Build on Ubuntu ] \u2b50 Run Main actions/cache@v2\n[APK Debug/Build on Ubuntu ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[APK Debug/Build on Ubuntu ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[APK Debug/Build on MacOS  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[APK Debug/Build on Ubuntu ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[APK Debug/Build on Windows]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::Resolved Keys:\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::Resolved Keys:\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::[\"Linux-gradle-0a9097f9e6189c8ce0e03e2c5b223c4bab1981465e34f5dca13f56d0d4678855\",\"Linux-gradle-\"]\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::Checking zstd --version\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::[\"Linux-gradle-0a9097f9e6189c8ce0e03e2c5b223c4bab1981465e34f5dca13f56d0d4678855\",\"Linux-gradle-\"]\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::Checking zstd --version\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::Resolved Keys:\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::[\"Linux-gradle-0a9097f9e6189c8ce0e03e2c5b223c4bab1981465e34f5dca13f56d0d4678855\",\"Linux-gradle-\"]\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::Checking zstd --version\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[APK Debug/Build on MacOS  ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[APK Debug/Build on Ubuntu ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[APK Debug/Build on Windows]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[APK Debug/Build on MacOS  ]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[APK Debug/Build on MacOS  ]   \u2705  Success - Main actions/cache@v2\n[APK Debug/Build on Ubuntu ]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[APK Debug/Build on Windows]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[APK Debug/Build on Windows]   \u2705  Success - Main actions/cache@v2\n[APK Debug/Build on Ubuntu ]   \u2705  Success - Main actions/cache@v2\n[APK Debug/Build on MacOS  ]   \u2699  ::set-output:: cache-hit=false\n[APK Debug/Build on Windows]   \u2699  ::set-output:: cache-hit=false\n[APK Debug/Build on Ubuntu ]   \u2699  ::set-output:: cache-hit=false\n[APK Debug/Build on Windows] \u2b50 Run Main Build MCinaBox Debug (with gradle)\n[APK Debug/Build on MacOS  ] \u2b50 Run Main Build MCinaBox Debug (with gradle)\n[APK Debug/Build on Ubuntu ] \u2b50 Run Main Build MCinaBox Debug (with gradle)\n[APK Debug/Build on Windows]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[APK Debug/Build on MacOS  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[APK Debug/Build on Ubuntu ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[APK Debug/Build on Ubuntu ]   | Downloading https://services.gradle.org/distributions/gradle-7.5-bin.zip\n[APK Debug/Build on MacOS  ]   | Downloading https://services.gradle.org/distributions/gradle-7.5-bin.zip\n[APK Debug/Build on Windows]   | Downloading https://services.gradle.org/distributions/gradle-7.5-bin.zip\n[APK Debug/Build on Ubuntu ]   | ...................................................................................................................\n[APK Debug/Build on Ubuntu ]   | Unzipping /home/runneradmin/.gradle/wrapper/dists/gradle-7.5-bin/f1w0cc9nuo0eivz97x2xlu9sv/gradle-7.5-bin.zip to /home/runneradmin/.gradle/wrapper/dists/gradle-7.5-bin/f1w0cc9nuo0eivz97x2xlu9sv\n[APK Debug/Build on MacOS  ]   | ...................................................................................................................\n[APK Debug/Build on MacOS  ]   | Unzipping /home/runneradmin/.gradle/wrapper/dists/gradle-7.5-bin/f1w0cc9nuo0eivz97x2xlu9sv/gradle-7.5-bin.zip to /home/runneradmin/.gradle/wrapper/dists/gradle-7.5-bin/f1w0cc9nuo0eivz97x2xlu9sv\n[APK Debug/Build on Windows]   | ...................................................................................................................\n[APK Debug/Build on Windows]   | Unzipping /home/runneradmin/.gradle/wrapper/dists/gradle-7.5-bin/f1w0cc9nuo0eivz97x2xlu9sv/gradle-7.5-bin.zip to /home/runneradmin/.gradle/wrapper/dists/gradle-7.5-bin/f1w0cc9nuo0eivz97x2xlu9sv\n[APK Debug/Build on Ubuntu ]   | Set executable permissions for: /home/runneradmin/.gradle/wrapper/dists/gradle-7.5-bin/f1w0cc9nuo0eivz97x2xlu9sv/gradle-7.5/bin/gradle\n[APK Debug/Build on MacOS  ]   | Set executable permissions for: /home/runneradmin/.gradle/wrapper/dists/gradle-7.5-bin/f1w0cc9nuo0eivz97x2xlu9sv/gradle-7.5/bin/gradle\n[APK Debug/Build on Ubuntu ]   | \n[APK Debug/Build on Ubuntu ]   | Welcome to Gradle 7.5!\n[APK Debug/Build on Ubuntu ]   | \n[APK Debug/Build on Ubuntu ]   | Here are the highlights of this release:\n[APK Debug/Build on Ubuntu ]   |  - Support for Java 18\n[APK Debug/Build on Ubuntu ]   |  - Support for building with Groovy 4\n[APK Debug/Build on Ubuntu ]   |  - Much more responsive continuous builds\n[APK Debug/Build on Ubuntu ]   |  - Improved diagnostics for dependency resolution\n[APK Debug/Build on Ubuntu ]   | \n[APK Debug/Build on Ubuntu ]   | For more details see https://docs.gradle.org/7.5/release-notes.html\n[APK Debug/Build on Ubuntu ]   | \n[APK Debug/Build on Windows]   | Set executable permissions for: /home/runneradmin/.gradle/wrapper/dists/gradle-7.5-bin/f1w0cc9nuo0eivz97x2xlu9sv/gradle-7.5/bin/gradle\n[APK Debug/Build on Ubuntu ]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[APK Debug/Build on MacOS  ]   | \n[APK Debug/Build on MacOS  ]   | Welcome to Gradle 7.5!\n[APK Debug/Build on MacOS  ]   | \n[APK Debug/Build on MacOS  ]   | Here are the highlights of this release:\n[APK Debug/Build on MacOS  ]   |  - Support for Java 18\n[APK Debug/Build on MacOS  ]   |  - Support for building with Groovy 4\n[APK Debug/Build on MacOS  ]   |  - Much more responsive continuous builds\n[APK Debug/Build on MacOS  ]   |  - Improved diagnostics for dependency resolution\n[APK Debug/Build on MacOS  ]   | \n[APK Debug/Build on MacOS  ]   | For more details see https://docs.gradle.org/7.5/release-notes.html\n[APK Debug/Build on MacOS  ]   | \n[APK Debug/Build on MacOS  ]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[APK Debug/Build on Windows]   | \n[APK Debug/Build on Windows]   | Welcome to Gradle 7.5!\n[APK Debug/Build on Windows]   | \n[APK Debug/Build on Windows]   | Here are the highlights of this release:\n[APK Debug/Build on Windows]   |  - Support for Java 18\n[APK Debug/Build on Windows]   |  - Support for building with Groovy 4\n[APK Debug/Build on Windows]   |  - Much more responsive continuous builds\n[APK Debug/Build on Windows]   |  - Improved diagnostics for dependency resolution\n[APK Debug/Build on Windows]   | \n[APK Debug/Build on Windows]   | For more details see https://docs.gradle.org/7.5/release-notes.html\n[APK Debug/Build on Windows]   | \n[APK Debug/Build on Windows]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[APK Debug/Build on Ubuntu ]   | Configuration cache is an incubating feature.\n[APK Debug/Build on MacOS  ]   | Configuration cache is an incubating feature.\n[APK Debug/Build on Windows]   | Configuration cache is an incubating feature.\n[APK Debug/Build on Ubuntu ]   | Calculating task graph as no configuration cache is available for tasks: clean :app:assembleDebug\n[APK Debug/Build on Ubuntu ]   | \n[APK Debug/Build on Ubuntu ]   | 0 problems were found storing the configuration cache.\n[APK Debug/Build on Ubuntu ]   | \n[APK Debug/Build on Ubuntu ]   | See the complete report at file:///tmp/569e0364-0b80-11ee-a890-af2cc187fc11/AOF-Dev-MCinaBox/build/reports/configuration-cache/8m1vff08qeb35fhapir5xy97k/f3ku2ra3uahp8iifbevm89nlp/configuration-cache-report.html\n[APK Debug/Build on Ubuntu ]   | \n[APK Debug/Build on Ubuntu ]   | FAILURE: Build failed with an exception.\n[APK Debug/Build on Ubuntu ]   | \n[APK Debug/Build on Ubuntu ]   | * What went wrong:\n[APK Debug/Build on Ubuntu ]   | A problem occurred configuring project ':boat'.\n[APK Debug/Build on Ubuntu ]   | > SDK location not found. Define a valid SDK location with an ANDROID_HOME environment variable or by setting the sdk.dir path in your project's local properties file at '/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/AOF-Dev-MCinaBox/local.properties'.\n[APK Debug/Build on Ubuntu ]   | \n[APK Debug/Build on Ubuntu ]   | * Try:\n[APK Debug/Build on Ubuntu ]   | > Run with --stacktrace option to get the stack trace.\n[APK Debug/Build on Ubuntu ]   | > Run with --info or --debug option to get more log output.\n[APK Debug/Build on Ubuntu ]   | > Run with --scan to get full insights.\n[APK Debug/Build on Ubuntu ]   | \n[APK Debug/Build on Ubuntu ]   | * Get more help at https://help.gradle.org\n[APK Debug/Build on Ubuntu ]   | \n[APK Debug/Build on Ubuntu ]   | BUILD FAILED in 45s\n[APK Debug/Build on Ubuntu ]   | Configuration cache entry stored.\n[APK Debug/Build on Ubuntu ]   \u274c  Failure - Main Build MCinaBox Debug (with gradle)\n[APK Debug/Build on Ubuntu ] exitcode '1': failure\n[APK Debug/Build on MacOS  ]   | Calculating task graph as no configuration cache is available for tasks: clean :app:assembleDebug\n[APK Debug/Build on Ubuntu ] \u2b50 Run Post Set up JDK 11.0.5\n[APK Debug/Build on Ubuntu ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1.4.3/dist/cleanup/index.js] user= workdir=\n[APK Debug/Build on Ubuntu ]   \u2705  Success - Post Set up JDK 11.0.5\n[APK Debug/Build on Ubuntu ] \ud83c\udfc1  Job failed\n[APK Debug/Build on MacOS  ]   | \n[APK Debug/Build on MacOS  ]   | 0 problems were found storing the configuration cache.\n[APK Debug/Build on MacOS  ]   | \n[APK Debug/Build on MacOS  ]   | See the complete report at file:///tmp/569e0364-0b80-11ee-a890-af2cc187fc11/AOF-Dev-MCinaBox/build/reports/configuration-cache/8m1vff08qeb35fhapir5xy97k/f3ku2ra3uahp8iifbevm89nlp/configuration-cache-report.html\n[APK Debug/Build on MacOS  ]   | \n[APK Debug/Build on MacOS  ]   | FAILURE: Build failed with an exception.\n[APK Debug/Build on MacOS  ]   | \n[APK Debug/Build on MacOS  ]   | * What went wrong:\n[APK Debug/Build on MacOS  ]   | A problem occurred configuring project ':boat'.\n[APK Debug/Build on MacOS  ]   | > SDK location not found. Define a valid SDK location with an ANDROID_HOME environment variable or by setting the sdk.dir path in your project's local properties file at '/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/AOF-Dev-MCinaBox/local.properties'.\n[APK Debug/Build on MacOS  ]   | \n[APK Debug/Build on MacOS  ]   | * Try:\n[APK Debug/Build on MacOS  ]   | > Run with --stacktrace option to get the stack trace.\n[APK Debug/Build on MacOS  ]   | > Run with --info or --debug option to get more log output.\n[APK Debug/Build on MacOS  ]   | > Run with --scan to get full insights.\n[APK Debug/Build on MacOS  ]   | \n[APK Debug/Build on MacOS  ]   | * Get more help at https://help.gradle.org\n[APK Debug/Build on MacOS  ]   | \n[APK Debug/Build on MacOS  ]   | BUILD FAILED in 1m 15s\n[APK Debug/Build on MacOS  ]   | Configuration cache entry stored.\n[APK Debug/Build on MacOS  ]   \u274c  Failure - Main Build MCinaBox Debug (with gradle)\n[APK Debug/Build on MacOS  ] exitcode '1': failure\n[APK Debug/Build on Windows]   | Calculating task graph as no configuration cache is available for tasks: clean :app:assembleDebug\n[APK Debug/Build on MacOS  ] \u2b50 Run Post Set up JDK 11.0.5\n[APK Debug/Build on MacOS  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1.4.3/dist/cleanup/index.js] user= workdir=\n[APK Debug/Build on MacOS  ]   \u2705  Success - Post Set up JDK 11.0.5\n[APK Debug/Build on MacOS  ] \ud83c\udfc1  Job failed\n[APK Debug/Build on Windows]   | \n[APK Debug/Build on Windows]   | 0 problems were found storing the configuration cache.\n[APK Debug/Build on Windows]   | \n[APK Debug/Build on Windows]   | See the complete report at file:///tmp/569e0364-0b80-11ee-a890-af2cc187fc11/AOF-Dev-MCinaBox/build/reports/configuration-cache/8m1vff08qeb35fhapir5xy97k/f3ku2ra3uahp8iifbevm89nlp/configuration-cache-report.html\n[APK Debug/Build on Windows]   | \n[APK Debug/Build on Windows]   | FAILURE: Build failed with an exception.\n[APK Debug/Build on Windows]   | \n[APK Debug/Build on Windows]   | * What went wrong:\n[APK Debug/Build on Windows]   | A problem occurred configuring project ':boat'.\n[APK Debug/Build on Windows]   | > SDK location not found. Define a valid SDK location with an ANDROID_HOME environment variable or by setting the sdk.dir path in your project's local properties file at '/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/AOF-Dev-MCinaBox/local.properties'.\n[APK Debug/Build on Windows]   | \n[APK Debug/Build on Windows]   | * Try:\n[APK Debug/Build on Windows]   | > Run with --stacktrace option to get the stack trace.\n[APK Debug/Build on Windows]   | > Run with --info or --debug option to get more log output.\n[APK Debug/Build on Windows]   | > Run with --scan to get full insights.\n[APK Debug/Build on Windows]   | \n[APK Debug/Build on Windows]   | * Get more help at https://help.gradle.org\n[APK Debug/Build on Windows]   | \n[APK Debug/Build on Windows]   | BUILD FAILED in 1m 49s\n[APK Debug/Build on Windows]   | Configuration cache entry stored.\n[APK Debug/Build on Windows]   \u274c  Failure - Main Build MCinaBox Debug (with gradle)\n[APK Debug/Build on Windows] exitcode '1': failure\n[APK Debug/Build on Windows] \u2b50 Run Post Set up JDK 11.0.5\n[APK Debug/Build on Windows]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1.4.3/dist/cleanup/index.js] user= workdir=\n[APK Debug/Build on Windows]   \u2705  Success - Post Set up JDK 11.0.5\n[APK Debug/Build on Windows] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'Build on Windows' failed\n",
        "workflow": "/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/AOF-Dev-MCinaBox/.github/workflows/APK_Debug-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 194.6193425655365
    }
}