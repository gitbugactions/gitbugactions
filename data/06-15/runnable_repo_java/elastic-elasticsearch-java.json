{
    "repository": "elastic/elasticsearch-java",
    "stars": 285,
    "language": "java",
    "size": 23362,
    "clone_url": "https://github.com/elastic/elasticsearch-java.git",
    "timestamp": "2023-06-15T18:06:59.587173Z",
    "clone_success": true,
    "number of actions": 0,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "number_of_actions": 3,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_data": {
        "failed": false,
        "tests": [],
        "stdout": "[Code style and license headers/build] \ud83d\ude80  Start image=crawlergpt:latest\n[Code style and license headers/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Code style and license headers/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Code style and license headers/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Code style and license headers/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/elastic-elasticsearch-java] user=0 workdir=\n[Code style and license headers/build]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v2\n[Code style and license headers/build] Non-terminating error while running 'git clone': some refs were not updated\n[Code style and license headers/build] \ud83e\uddea  Matrix: map[java-version:17]\n[Code style and license headers/build] \u2b50 Run Main actions/checkout@v2\n[Code style and license headers/build]   \u2705  Success - Main actions/checkout@v2\n[Code style and license headers/build] \u2b50 Run Main Set up JDK 17\n[Code style and license headers/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v2/ dst=/var/run/act/actions/actions-setup-java@v2/\n[Code style and license headers/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v2/] user=0 workdir=\n[Code style and license headers/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v2/dist/setup/index.js] user= workdir=\n[Code style and license headers/build]   | Trying to resolve the latest version from remote\n[Code style and license headers/build]   | Resolved latest version as 17.0.7+7\n[Code style and license headers/build]   | Trying to download...\n[Code style and license headers/build]   | Downloading Java 17.0.7+7 (Temurin-Hotspot) from https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.7%2B7/OpenJDK17U-jdk_x64_linux_hotspot_17.0.7_7.tar.gz ...\n[Code style and license headers/build]   \ud83d\udcac  ::debug::Downloading https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.7%252B7/OpenJDK17U-jdk_x64_linux_hotspot_17.0.7_7.tar.gz\n[Code style and license headers/build]   \ud83d\udcac  ::debug::Destination /tmp/c9d4cc2f-0abe-4896-aacc-0a4a9569aea9\n[Code style and license headers/build]   \ud83d\udcac  ::debug::download complete\n[Code style and license headers/build]   | Extracting Java archive...\n[Code style and license headers/build]   \ud83d\udcac  ::debug::Checking tar --version\n[Code style and license headers/build]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Code style and license headers/build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/4a12f8ff-0a08-4d53-84c5-b0a221915f53 -f /tmp/c9d4cc2f-0abe-4896-aacc-0a4a9569aea9\n[Code style and license headers/build]   \ud83d\udcac  ::debug::Caching tool Java_Temurin-Hotspot_jdk 17.0.7-7 x64\n[Code style and license headers/build]   \ud83d\udcac  ::debug::source dir: /tmp/4a12f8ff-0a08-4d53-84c5-b0a221915f53/jdk-17.0.7+7\n[Code style and license headers/build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.7-7/x64\n[Code style and license headers/build]   \ud83d\udcac  ::debug::finished caching tool\n[Code style and license headers/build]   | Java 17.0.7+7 was downloaded\n[Code style and license headers/build]   | Setting Java 17.0.7+7 as the default\n[Code style and license headers/build]   | \n[Code style and license headers/build]   | Java configuration:\n[Code style and license headers/build]   |   Distribution: temurin\n[Code style and license headers/build]   |   Version: 17.0.7+7\n[Code style and license headers/build]   |   Path: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.7-7/x64\n[Code style and license headers/build]   | \n[Code style and license headers/build]   \u2753 add-matcher /run/act/actions/actions-setup-java@v2/.github/java.json\n[Code style and license headers/build]   | Creating settings.xml with server-id: github\n[Code style and license headers/build]   | Writing to /home/runneradmin/.m2/settings.xml\n[Code style and license headers/build]   \u2705  Success - Main Set up JDK 17\n[Code style and license headers/build]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.7-7/x64\n[Code style and license headers/build]   \u2699  ::set-output:: distribution=Temurin-Hotspot\n[Code style and license headers/build]   \u2699  ::set-output:: path=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.7-7/x64\n[Code style and license headers/build]   \u2699  ::set-output:: version=17.0.7+7\n[Code style and license headers/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.7-7/x64/bin\n[Code style and license headers/build] \u2b50 Run Main Check style and license headers\n[Code style and license headers/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Code style and license headers/build]   | Downloading https://services.gradle.org/distributions/gradle-7.5.1-bin.zip\n[Code style and license headers/build]   | ...........10%............20%...........30%............40%...........50%............60%...........70%............80%...........90%............100%\n[Code style and license headers/build]   | \n[Code style and license headers/build]   | Welcome to Gradle 7.5.1!\n[Code style and license headers/build]   | \n[Code style and license headers/build]   | Here are the highlights of this release:\n[Code style and license headers/build]   |  - Support for Java 18\n[Code style and license headers/build]   |  - Support for building with Groovy 4\n[Code style and license headers/build]   |  - Much more responsive continuous builds\n[Code style and license headers/build]   |  - Improved diagnostics for dependency resolution\n[Code style and license headers/build]   | \n[Code style and license headers/build]   | For more details see https://docs.gradle.org/7.5.1/release-notes.html\n[Code style and license headers/build]   | \n[Code style and license headers/build]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[Code style and license headers/build]   | > Task :buildSrc:compileJava NO-SOURCE\n[Code style and license headers/build]   | > Task :buildSrc:compileGroovy NO-SOURCE\n[Code style and license headers/build]   | > Task :buildSrc:processResources NO-SOURCE\n[Code style and license headers/build]   | > Task :buildSrc:classes UP-TO-DATE\n[Code style and license headers/build]   | > Task :buildSrc:jar\n[Code style and license headers/build]   | > Task :buildSrc:assemble\n[Code style and license headers/build]   | > Task :buildSrc:compileTestJava NO-SOURCE\n[Code style and license headers/build]   | > Task :buildSrc:compileTestGroovy NO-SOURCE\n[Code style and license headers/build]   | > Task :buildSrc:processTestResources NO-SOURCE\n[Code style and license headers/build]   | > Task :buildSrc:testClasses UP-TO-DATE\n[Code style and license headers/build]   | > Task :buildSrc:test NO-SOURCE\n[Code style and license headers/build]   | > Task :buildSrc:check UP-TO-DATE\n[Code style and license headers/build]   | > Task :buildSrc:build\n[Code style and license headers/build]   | > Task :java-client:compileJava\n[Code style and license headers/build]   | Note: Some input files use or override a deprecated API.\n[Code style and license headers/build]   | Note: Recompile with -Xlint:deprecation for details.\n[Code style and license headers/build]   | Note: Some input files use unchecked or unsafe operations.\n[Code style and license headers/build]   | Note: Recompile with -Xlint:unchecked for details.\n[Code style and license headers/build]   | \n[Code style and license headers/build]   | > Task :example-transports:compileJava\n[Code style and license headers/build]   | > Task :example-transports:processResources NO-SOURCE\n[Code style and license headers/build]   | > Task :example-transports:classes\n[Code style and license headers/build]   | > Task :java-client:processResources\n[Code style and license headers/build]   | > Task :java-client:classes\n[Code style and license headers/build]   | > Task :example-transports:compileTestFixturesJava NO-SOURCE\n[Code style and license headers/build]   | > Task :example-transports:compileTestJava\n[Code style and license headers/build]   | > Task :example-transports:processTestResources NO-SOURCE\n[Code style and license headers/build]   | > Task :example-transports:testClasses\n[Code style and license headers/build]   | > Task :example-transports:checkstyleMain\n[Code style and license headers/build]   | > Task :example-transports:checkstyleTest\n[Code style and license headers/build]   | > Task :java-client:checkstyleMain\n[Code style and license headers/build]   | \n[Code style and license headers/build]   | > Task :java-client:compileTestJava\n[Code style and license headers/build]   | Note: Some input files use unchecked or unsafe operations.\n[Code style and license headers/build]   | Note: Recompile with -Xlint:unchecked for details.\n[Code style and license headers/build]   | \n[Code style and license headers/build]   | > Task :java-client:processTestResources\n[Code style and license headers/build]   | > Task :java-client:testClasses\n[Code style and license headers/build]   | > Task :java-client:checkstyleTest\n[Code style and license headers/build]   | \n[Code style and license headers/build]   | BUILD SUCCESSFUL in 2m 21s\n[Code style and license headers/build]   | 11 actionable tasks: 11 executed\n[Code style and license headers/build]   \u2705  Success - Main Check style and license headers\n[Code style and license headers/build] \u2b50 Run Post Set up JDK 17\n[Code style and license headers/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v2/dist/cleanup/index.js] user= workdir=\n[Code style and license headers/build]   \u2705  Success - Post Set up JDK 17\n[Code style and license headers/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/elastic-elasticsearch-java/.github/workflows/checkstyle-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 222.22319722175598
    }
}