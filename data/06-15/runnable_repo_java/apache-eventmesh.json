{
    "repository": "apache/eventmesh",
    "stars": 1379,
    "language": "java",
    "size": 61749,
    "clone_url": "https://github.com/apache/eventmesh.git",
    "timestamp": "2023-06-15T17:33:43.681235Z",
    "clone_success": true,
    "number of actions": 0,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "number_of_actions": 3,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_data": {
        "failed": true,
        "tests": [],
        "stdout": "[Continuous Integration/Build        ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous Integration/License Check] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous Integration/Build        ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous Integration/License Check]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous Integration/Build        ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/License Check]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/License Check]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/Build        ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/Build        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/apache-eventmesh] user=0 workdir=\n[Continuous Integration/License Check]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/apache-eventmesh] user=0 workdir=\n[Continuous Integration/Build        ]   \u2601  git clone 'https://github.com/github/codeql-action' # ref=v2\n[Continuous Integration/License Check]   \u2601  git clone 'https://github.com/apache/skywalking-eyes' # ref=main\n[Continuous Integration/Build        ]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v3\n[Continuous Integration/License Check] \u2b50 Run Pre Check license header\n[Continuous Integration/License Check]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v4\n[Continuous Integration/Build        ] Non-terminating error while running 'git clone': some refs were not updated\n[Continuous Integration/Build        ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[Continuous Integration/License Check]   \u2705  Success - Pre Check license header\n[Continuous Integration/Build        ] Unable to checkout 88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8: invalid checksum\n[Continuous Integration/License Check] \u2b50 Run Main Checkout repository\n[Continuous Integration/License Check]   \u2705  Success - Main Checkout repository\n[Continuous Integration/License Check] \u2b50 Run Main Check license header\n[Continuous Integration/License Check]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/apache-skywalking-eyes@main/ dst=/var/run/act/actions/apache-skywalking-eyes@main/\n[Continuous Integration/License Check]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/apache-skywalking-eyes@main/] user=0 workdir=\n[Continuous Integration/Build        ] \ud83c\udfc1  Job succeeded\n[Continuous Integration/License Check] \u2b50 Run Main Set up Go 1.18\n[Continuous Integration/License Check]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v4/ dst=/var/run/act/actions/actions-setup-go@v4/\n[Continuous Integration/License Check]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v4/] user=0 workdir=\n[Continuous Integration/License Check]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v4/dist/setup/index.js] user= workdir=\n[Continuous Integration/License Check]   | Setup go version spec 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::isExplicit: \n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::explicit? false\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::explicit? true\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::explicit? true\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::explicit? true\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::match not found\n[Continuous Integration/License Check]   | Attempting to download 1.18...\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::No manifest cached\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::set auth\n[Continuous Integration/License Check]   | matching 1.18...\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::check 1.20.5 satisfies 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::check 1.19.10 satisfies 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::check 1.19.8 satisfies 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::check 1.19.7 satisfies 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::check 1.19.6 satisfies 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::check 1.19.5 satisfies 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::check 1.19.4 satisfies 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::check 1.19.3 satisfies 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::check 1.19.2 satisfies 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::check 1.19.1 satisfies 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::check 1.19.0 satisfies 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::check 1.18.10 satisfies 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::matched 1.18.10\n[Continuous Integration/License Check]   | Acquiring 1.18.10 from https://github.com/actions/go-versions/releases/download/1.18.10-3890634278/go-1.18.10-linux-x64.tar.gz\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/go-versions/releases/download/1.18.10-3890634278/go-1.18.10-linux-x64.tar.gz\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::Destination /tmp/60c60f13-0cd4-49fb-949b-8f8eebcd5c8d\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::set auth\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::download complete\n[Continuous Integration/License Check]   | Extracting Go...\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::Checking tar --version\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Continuous Integration/License Check]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/39f03430-ab5d-4b12-bb62-bf901174269a -f /tmp/60c60f13-0cd4-49fb-949b-8f8eebcd5c8d\n[Continuous Integration/License Check]   | Successfully extracted go to /tmp/39f03430-ab5d-4b12-bb62-bf901174269a\n[Continuous Integration/License Check]   | Adding to the cache ...\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::Caching tool go 1.18.10 x64\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::source dir: /tmp/39f03430-ab5d-4b12-bb62-bf901174269a\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.18.10/x64\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::finished caching tool\n[Continuous Integration/License Check]   | Successfully cached go to /opt/hostedtoolcache/go/1.18.10/x64\n[Continuous Integration/License Check]   | Added go to the path\n[Continuous Integration/License Check]   | Successfully set up Go version 1.18\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.18.10/x64/bin/go:\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Continuous Integration/License Check]   \ud83d\udcac  ::debug::add bin true\n[Continuous Integration/License Check]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[Continuous Integration/License Check]   \u2753 add-matcher /run/act/actions/actions-setup-go@v4/matchers.json\n[Continuous Integration/License Check]   | go version go1.18.10 linux/amd64\n[Continuous Integration/License Check]   | \n[Continuous Integration/License Check]   \u2753  ::group::go env\n[Continuous Integration/License Check]   | GO111MODULE=\"\"\n[Continuous Integration/License Check]   | GOARCH=\"amd64\"\n[Continuous Integration/License Check]   | GOBIN=\"\"\n[Continuous Integration/License Check]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Continuous Integration/License Check]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Continuous Integration/License Check]   | GOEXE=\"\"\n[Continuous Integration/License Check]   | GOEXPERIMENT=\"\"\n[Continuous Integration/License Check]   | GOFLAGS=\"\"\n[Continuous Integration/License Check]   | GOHOSTARCH=\"amd64\"\n[Continuous Integration/License Check]   | GOHOSTOS=\"linux\"\n[Continuous Integration/License Check]   | GOINSECURE=\"\"\n[Continuous Integration/License Check]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Continuous Integration/License Check]   | GONOPROXY=\"\"\n[Continuous Integration/License Check]   | GONOSUMDB=\"\"\n[Continuous Integration/License Check]   | GOOS=\"linux\"\n[Continuous Integration/License Check]   | GOPATH=\"/home/runneradmin/go\"\n[Continuous Integration/License Check]   | GOPRIVATE=\"\"\n[Continuous Integration/License Check]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Continuous Integration/License Check]   | GOROOT=\"/opt/hostedtoolcache/go/1.18.10/x64\"\n[Continuous Integration/License Check]   | GOSUMDB=\"sum.golang.org\"\n[Continuous Integration/License Check]   | GOTMPDIR=\"\"\n[Continuous Integration/License Check]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.18.10/x64/pkg/tool/linux_amd64\"\n[Continuous Integration/License Check]   | GOVCS=\"\"\n[Continuous Integration/License Check]   | GOVERSION=\"go1.18.10\"\n[Continuous Integration/License Check]   | GCCGO=\"gccgo\"\n[Continuous Integration/License Check]   | GOAMD64=\"v1\"\n[Continuous Integration/License Check]   | AR=\"ar\"\n[Continuous Integration/License Check]   | CC=\"gcc\"\n[Continuous Integration/License Check]   | CXX=\"g++\"\n[Continuous Integration/License Check]   | CGO_ENABLED=\"1\"\n[Continuous Integration/License Check]   | GOMOD=\"/dev/null\"\n[Continuous Integration/License Check]   | GOWORK=\"\"\n[Continuous Integration/License Check]   | CGO_CFLAGS=\"-g -O2\"\n[Continuous Integration/License Check]   | CGO_CPPFLAGS=\"\"\n[Continuous Integration/License Check]   | CGO_CXXFLAGS=\"-g -O2\"\n[Continuous Integration/License Check]   | CGO_FFLAGS=\"-g -O2\"\n[Continuous Integration/License Check]   | CGO_LDFLAGS=\"-g -O2\"\n[Continuous Integration/License Check]   | PKG_CONFIG=\"pkg-config\"\n[Continuous Integration/License Check]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2143291483=/tmp/go-build -gno-record-gcc-switches\"\n[Continuous Integration/License Check]   | \n[Continuous Integration/License Check]   \u2753  ::endgroup::\n[Continuous Integration/License Check]   \u2705  Success - Main Set up Go 1.18\n[Continuous Integration/License Check]   \u2699  ::set-output:: go-version=1.18.10\n[Continuous Integration/License Check]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.18.10/x64/bin\n[Continuous Integration/License Check]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Continuous Integration/License Check] \u2b50 Run Main make -C $GITHUB_ACTION_PATH install\n[Continuous Integration/License Check]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-1.sh] user= workdir=\n[Continuous Integration/License Check]   | make: Entering directory '/run/act/actions/apache-skywalking-eyes@main'\n[Continuous Integration/License Check]   | mkdir -p bin\n[Continuous Integration/License Check]   | GOOS=linux GOARCH=amd64 GO111MODULE=on go build  -ldflags \"-X github.com/apache/skywalking-eyes/commands.version=latest\" -o bin/linux/license-eye cmd/license-eye/main.go\n[Continuous Integration/License Check]   | go: downloading github.com/sirupsen/logrus v1.9.0\n[Continuous Integration/License Check]   | go: downloading github.com/spf13/cobra v1.6.1\n[Continuous Integration/License Check]   | go: downloading gopkg.in/yaml.v3 v3.0.1\n[Continuous Integration/License Check]   | go: downloading golang.org/x/oauth2 v0.5.0\n[Continuous Integration/License Check]   | go: downloading github.com/google/go-github/v33 v33.0.0\n[Continuous Integration/License Check]   | go: downloading golang.org/x/net v0.7.0\n[Continuous Integration/License Check]   | go: downloading github.com/Masterminds/sprig/v3 v3.2.3\n[Continuous Integration/License Check]   | go: downloading golang.org/x/tools v0.6.0\n[Continuous Integration/License Check]   | go: downloading github.com/bmatcuk/doublestar/v2 v2.0.4\n[Continuous Integration/License Check]   | go: downloading github.com/google/licensecheck v0.3.1\n[Continuous Integration/License Check]   | go: downloading github.com/go-git/go-git/v5 v5.6.0\n[Continuous Integration/License Check]   | go: downloading github.com/go-git/go-billy/v5 v5.4.1\n[Continuous Integration/License Check]   | go: downloading golang.org/x/sys v0.5.0\n[Continuous Integration/License Check]   | go: downloading github.com/imdario/mergo v0.3.13\n[Continuous Integration/License Check]   | go: downloading github.com/google/uuid v1.3.0\n[Continuous Integration/License Check]   | go: downloading github.com/Masterminds/goutils v1.1.1\n[Continuous Integration/License Check]   | go: downloading github.com/spf13/cast v1.5.0\n[Continuous Integration/License Check]   | go: downloading golang.org/x/crypto v0.6.0\n[Continuous Integration/License Check]   | go: downloading github.com/mitchellh/copystructure v1.2.0\n[Continuous Integration/License Check]   | go: downloading github.com/huandu/xstrings v1.4.0\n[Continuous Integration/License Check]   | go: downloading github.com/shopspring/decimal v1.3.1\n[Continuous Integration/License Check]   | go: downloading github.com/Masterminds/semver/v3 v3.2.0\n[Continuous Integration/License Check]   | go: downloading github.com/spf13/pflag v1.0.5\n[Continuous Integration/License Check]   | go: downloading github.com/mitchellh/reflectwalk v1.0.2\n[Continuous Integration/License Check]   | go: downloading golang.org/x/text v0.7.0\n[Continuous Integration/License Check]   | go: downloading github.com/google/go-querystring v1.1.0\n[Continuous Integration/License Check]   | go: downloading github.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99\n[Continuous Integration/License Check]   | go: downloading github.com/go-git/gcfg v1.5.0\n[Continuous Integration/License Check]   | go: downloading github.com/ProtonMail/go-crypto v0.0.0-20230217124315-7d5c6f04bbb8\n[Continuous Integration/License Check]   | go: downloading github.com/sergi/go-diff v1.3.1\n[Continuous Integration/License Check]   | go: downloading github.com/emirpasic/gods v1.18.1\n[Continuous Integration/License Check]   | go: downloading github.com/kevinburke/ssh_config v1.2.0\n[Continuous Integration/License Check]   | go: downloading github.com/xanzy/ssh-agent v0.3.3\n[Continuous Integration/License Check]   | go: downloading github.com/pjbgf/sha1cd v0.3.0\n[Continuous Integration/License Check]   | go: downloading github.com/skeema/knownhosts v1.1.0\n[Continuous Integration/License Check]   | go: downloading golang.org/x/mod v0.8.0\n[Continuous Integration/License Check]   | go: downloading gopkg.in/warnings.v0 v0.1.2\n[Continuous Integration/License Check]   | go: downloading github.com/cloudflare/circl v1.3.2\n[Continuous Integration/License Check]   | cp bin/linux/license-eye /usr/local/bin\n[Continuous Integration/License Check]   | make: Leaving directory '/run/act/actions/apache-skywalking-eyes@main'\n[Continuous Integration/License Check]   \u2705  Success - Main make -C $GITHUB_ACTION_PATH install\n[Continuous Integration/License Check] \u2b50 Run Main license-eye -v info -c .licenserc.yaml header check\n[Continuous Integration/License Check]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[Continuous Integration/License Check]   | \u001b[36mINFO\u001b[0m Loading configuration from file: .licenserc.yaml \n[Continuous Integration/License Check]   | \u001b[36mINFO\u001b[0m Totally checked 1665 files, valid: 1310, invalid: 1, ignored: 354, fixed: 0 \n[Continuous Integration/License Check]   | \u001b[31mERROR\u001b[0m the following files don't have a valid license header: \n[Continuous Integration/License Check]   | .github/workflows/ci-crawler.yml \n[Continuous Integration/License Check]   | \u001b[31mERROR\u001b[0m one or more files does not have a valid license header \n[Continuous Integration/License Check]   \u274c  Failure - Main license-eye -v info -c .licenserc.yaml header check\n[Continuous Integration/License Check] exitcode '1': failure\n[Continuous Integration/License Check]   \u274c  Failure - Main Check license header\n[Continuous Integration/License Check] exitcode '1': failure\n[Continuous Integration/License Check] \u2b50 Run Post Check license header\n[Continuous Integration/License Check]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/apache-skywalking-eyes@main/ dst=/var/run/act/actions/apache-skywalking-eyes@main/\n[Continuous Integration/License Check]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/apache-skywalking-eyes@main/] user=0 workdir=\n[Continuous Integration/License Check]   \u2705  Success - Post Check license header\n[Continuous Integration/License Check] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: invalid checksum\n",
        "workflow": "/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/apache-eventmesh/.github/workflows/ci-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 111.48375654220581
    }
}