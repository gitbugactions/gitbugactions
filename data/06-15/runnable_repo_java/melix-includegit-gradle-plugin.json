{
    "repository": "melix/includegit-gradle-plugin",
    "stars": 91,
    "language": "java",
    "size": 235,
    "clone_url": "https://github.com/melix/includegit-gradle-plugin.git",
    "timestamp": "2023-06-15T18:12:53.107948Z",
    "clone_success": true,
    "number of actions": 0,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "number_of_actions": 2,
    "actions_build_tools": [
        "gradle",
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_data": {
        "failed": true,
        "tests": [],
        "stdout": "[Run Gradle on PRs/Unit tests] \ud83d\ude80  Start image=crawlergpt:latest\n[Run Gradle on PRs/Unit tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Run Gradle on PRs/Unit tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run Gradle on PRs/Unit tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run Gradle on PRs/Unit tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/melix-includegit-gradle-plugin] user=0 workdir=\n[Run Gradle on PRs/Unit tests]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[Run Gradle on PRs/Unit tests] Non-terminating error while running 'git clone': some refs were not updated\n[Run Gradle on PRs/Unit tests]   \u2601  git clone 'https://github.com/gradle/gradle-build-action' # ref=v2\n[Run Gradle on PRs/Unit tests] Non-terminating error while running 'git clone': some refs were not updated\n[Run Gradle on PRs/Unit tests] \ud83e\uddea  Matrix: map[os:ubuntu-latest]\n[Run Gradle on PRs/Unit tests] \u2b50 Run Main actions/checkout@v2\n[Run Gradle on PRs/Unit tests]   \u2705  Success - Main actions/checkout@v2\n[Run Gradle on PRs/Unit tests] \u2b50 Run Main actions/setup-java@v1\n[Run Gradle on PRs/Unit tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[Run Gradle on PRs/Unit tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[Run Gradle on PRs/Unit tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[Run Gradle on PRs/Unit tests]   \ud83d\udcac  ::debug::isExplicit: \n[Run Gradle on PRs/Unit tests]   \ud83d\udcac  ::debug::explicit? false\n[Run Gradle on PRs/Unit tests]   \ud83d\udcac  ::debug::evaluating 0 versions\n[Run Gradle on PRs/Unit tests]   \ud83d\udcac  ::debug::match not found\n[Run Gradle on PRs/Unit tests]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[Run Gradle on PRs/Unit tests]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[Run Gradle on PRs/Unit tests]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu11.64.19-ca-jdk11.0.19-linux_x64.tar.gz\n[Run Gradle on PRs/Unit tests]   \ud83d\udcac  ::debug::Downloading /tmp/ff035307-0470-4bcc-8fe4-f666d2517b26\n[Run Gradle on PRs/Unit tests]   \ud83d\udcac  ::debug::download complete\n[Run Gradle on PRs/Unit tests]   | [command]/usr/bin/tar --version\n[Run Gradle on PRs/Unit tests]   | tar (GNU tar) 1.30\n[Run Gradle on PRs/Unit tests]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[Run Gradle on PRs/Unit tests]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[Run Gradle on PRs/Unit tests]   | This is free software: you are free to change and redistribute it.\n[Run Gradle on PRs/Unit tests]   | There is NO WARRANTY, to the extent permitted by law.\n[Run Gradle on PRs/Unit tests]   | \n[Run Gradle on PRs/Unit tests]   | Written by John Gilmore and Jay Fenlason.\n[Run Gradle on PRs/Unit tests]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_829853789 -f /tmp/ff035307-0470-4bcc-8fe4-f666d2517b26\n[Run Gradle on PRs/Unit tests]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_829853789/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[Run Gradle on PRs/Unit tests]   \ud83d\udcac  ::debug::Caching tool jdk 11.0.19 x64\n[Run Gradle on PRs/Unit tests]   \ud83d\udcac  ::debug::source dir: /tmp/temp_829853789/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[Run Gradle on PRs/Unit tests]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/11.0.19/x64\n[Run Gradle on PRs/Unit tests]   \ud83d\udcac  ::debug::finished caching tool\n[Run Gradle on PRs/Unit tests]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[Run Gradle on PRs/Unit tests]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[Run Gradle on PRs/Unit tests]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[Run Gradle on PRs/Unit tests]   | writing /home/runneradmin/.m2/settings.xml\n[Run Gradle on PRs/Unit tests]   \u2705  Success - Main actions/setup-java@v1\n[Run Gradle on PRs/Unit tests]   \u2699  ::set-env:: JAVA_HOME_11.0.19_x64=/opt/hostedtoolcache/jdk/11.0.19/x64\n[Run Gradle on PRs/Unit tests]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/11.0.19/x64\n[Run Gradle on PRs/Unit tests]   \u2699  ::set-env:: JAVA_HOME_11_0_19_X64=/opt/hostedtoolcache/jdk/11.0.19/x64\n[Run Gradle on PRs/Unit tests]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/11.0.19/x64\n[Run Gradle on PRs/Unit tests]   \u2699  ::set-output:: version=11.0.19\n[Run Gradle on PRs/Unit tests]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/11.0.19/x64/bin\n[Run Gradle on PRs/Unit tests] \u2b50 Run Main gradle/gradle-build-action@v2\n[Run Gradle on PRs/Unit tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/gradle-gradle-build-action@v2/ dst=/var/run/act/actions/gradle-gradle-build-action@v2/\n[Run Gradle on PRs/Unit tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/gradle-gradle-build-action@v2/] user=0 workdir=\n[Run Gradle on PRs/Unit tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/gradle-gradle-build-action@v2/dist/main/index.js] user= workdir=\n[Run Gradle on PRs/Unit tests]   \ud83d\udcac  ::debug::Determined user.home from java -version output: '/home/runneradmin'\n[Run Gradle on PRs/Unit tests]   | Cache is disabled: will not restore state from previous builds.\n[Run Gradle on PRs/Unit tests]   | [command]/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/melix-includegit-gradle-plugin/gradlew test\n[Run Gradle on PRs/Unit tests]   | Downloading https://services.gradle.org/distributions/gradle-7.2-bin.zip\n[Run Gradle on PRs/Unit tests]   | ..........10%...........20%...........30%...........40%...........50%...........60%...........70%...........80%...........90%...........100%\n[Run Gradle on PRs/Unit tests]   | \n[Run Gradle on PRs/Unit tests]   | Welcome to Gradle 7.2!\n[Run Gradle on PRs/Unit tests]   | \n[Run Gradle on PRs/Unit tests]   | Here are the highlights of this release:\n[Run Gradle on PRs/Unit tests]   |  - Toolchain support for Scala\n[Run Gradle on PRs/Unit tests]   |  - More cache hits when Java source files have platform-specific line endings\n[Run Gradle on PRs/Unit tests]   |  - More resilient remote HTTP build cache behavior\n[Run Gradle on PRs/Unit tests]   | \n[Run Gradle on PRs/Unit tests]   | For more details see https://docs.gradle.org/7.2/release-notes.html\n[Run Gradle on PRs/Unit tests]   | \n[Run Gradle on PRs/Unit tests]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[Run Gradle on PRs/Unit tests]   | Type-safe dependency accessors is an incubating feature.\n[Run Gradle on PRs/Unit tests]   | > Task :includegit-buildlogic:extractPrecompiledScriptPluginPlugins\n[Run Gradle on PRs/Unit tests]   | > Task :includegit-buildlogic:generateExternalPluginSpecBuilders\n[Run Gradle on PRs/Unit tests]   | > Task :includegit-buildlogic:compilePluginsBlocks\n[Run Gradle on PRs/Unit tests]   | > Task :includegit-buildlogic:generateScriptPluginAdapters\n[Run Gradle on PRs/Unit tests]   | > Task :includegit-buildlogic:pluginDescriptors\n[Run Gradle on PRs/Unit tests]   | > Task :includegit-buildlogic:processResources\n[Run Gradle on PRs/Unit tests]   | > Task :includegit-buildlogic:generatePrecompiledScriptPluginAccessors\n[Run Gradle on PRs/Unit tests]   | > Task :includegit-buildlogic:configurePrecompiledScriptDependenciesResolver\n[Run Gradle on PRs/Unit tests]   | > Task :includegit-buildlogic:compileKotlin\n[Run Gradle on PRs/Unit tests]   | > Task :includegit-buildlogic:compileJava NO-SOURCE\n[Run Gradle on PRs/Unit tests]   | > Task :includegit-buildlogic:classes\n[Run Gradle on PRs/Unit tests]   | > Task :includegit-buildlogic:inspectClassesForKotlinIC\n[Run Gradle on PRs/Unit tests]   | > Task :includegit-buildlogic:jar\n[Run Gradle on PRs/Unit tests]   | > Task :plugin:compileKotlin\n[Run Gradle on PRs/Unit tests]   | \n[Run Gradle on PRs/Unit tests]   | > Task :plugin:compileJava\n[Run Gradle on PRs/Unit tests]   | Note: /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/melix-includegit-gradle-plugin/plugin/src/main/java/me/champeau/gradle/igp/internal/DefaultIncludedGitRepo.java uses unchecked or unsafe operations.\n[Run Gradle on PRs/Unit tests]   | Note: Recompile with -Xlint:unchecked for details.\n[Run Gradle on PRs/Unit tests]   | \n[Run Gradle on PRs/Unit tests]   | > Task :plugin:compileGroovy NO-SOURCE\n[Run Gradle on PRs/Unit tests]   | > Task :plugin:pluginDescriptors\n[Run Gradle on PRs/Unit tests]   | > Task :plugin:processResources\n[Run Gradle on PRs/Unit tests]   | > Task :plugin:classes\n[Run Gradle on PRs/Unit tests]   | > Task :plugin:inspectClassesForKotlinIC\n[Run Gradle on PRs/Unit tests]   | > Task :plugin:jar\n[Run Gradle on PRs/Unit tests]   | > Task :plugin:compileTestFixturesKotlin NO-SOURCE\n[Run Gradle on PRs/Unit tests]   | > Task :plugin:compileTestFixturesJava NO-SOURCE\n[Run Gradle on PRs/Unit tests]   | > Task :plugin:compileTestFixturesGroovy\n[Run Gradle on PRs/Unit tests]   | > Task :plugin:processTestFixturesResources NO-SOURCE\n[Run Gradle on PRs/Unit tests]   | > Task :plugin:testFixturesClasses\n[Run Gradle on PRs/Unit tests]   | > Task :plugin:testFixturesJar\n[Run Gradle on PRs/Unit tests]   | > Task :plugin:compileTestKotlin NO-SOURCE\n[Run Gradle on PRs/Unit tests]   | > Task :plugin:compileTestJava NO-SOURCE\n[Run Gradle on PRs/Unit tests]   | > Task :plugin:compileTestGroovy NO-SOURCE\n[Run Gradle on PRs/Unit tests]   | > Task :plugin:processTestResources NO-SOURCE\n[Run Gradle on PRs/Unit tests]   | > Task :plugin:testClasses UP-TO-DATE\n[Run Gradle on PRs/Unit tests]   | > Task :plugin:test NO-SOURCE\n[Run Gradle on PRs/Unit tests]   | \n[Run Gradle on PRs/Unit tests]   | BUILD SUCCESSFUL in 2m 25s\n[Run Gradle on PRs/Unit tests]   | 19 actionable tasks: 19 executed\n[Run Gradle on PRs/Unit tests]   \u2705  Success - Main gradle/gradle-build-action@v2\n[Run Gradle on PRs/Unit tests]   \u2699  ::set-env:: GRADLE_BUILD_ACTION_SETUP_COMPLETED=true\n[Run Gradle on PRs/Unit tests]   \u2699  ::set-env:: GRADLE_BUILD_ACTION_CACHE_RESTORED=true\n[Run Gradle on PRs/Unit tests] \u2b50 Run Post gradle/gradle-build-action@v2\n[Run Gradle on PRs/Unit tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/gradle-gradle-build-action@v2/dist/post/index.js] user= workdir=\n[Run Gradle on PRs/Unit tests]   | In final post-action step, saving state and writing summary\n[Run Gradle on PRs/Unit tests]   | Cache is disabled: will not save state for later builds.\n[Run Gradle on PRs/Unit tests]   | Writing job summary\n[Run Gradle on PRs/Unit tests]   \u2705  Success - Post gradle/gradle-build-action@v2\n[Run Gradle on PRs/Unit tests] \u2b50 Run Post actions/setup-java@v1\n[Run Gradle on PRs/Unit tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[Run Gradle on PRs/Unit tests]   \u2705  Success - Post actions/setup-java@v1\n[Run Gradle on PRs/Unit tests] \ud83c\udfc1  Job succeeded\n[Run Gradle on PRs/Groovy functional tests] \ud83d\ude80  Start image=crawlergpt:latest\n[Run Gradle on PRs/Kotlin functional tests] \ud83d\ude80  Start image=crawlergpt:latest\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/melix-includegit-gradle-plugin] user=0 workdir=\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/melix-includegit-gradle-plugin] user=0 workdir=\n[Run Gradle on PRs/Groovy functional tests]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[Run Gradle on PRs/Kotlin functional tests]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[Run Gradle on PRs/Groovy functional tests] Non-terminating error while running 'git clone': some refs were not updated\n[Run Gradle on PRs/Groovy functional tests]   \u2601  git clone 'https://github.com/gradle/gradle-build-action' # ref=v2\n[Run Gradle on PRs/Kotlin functional tests] Non-terminating error while running 'git clone': some refs were not updated\n[Run Gradle on PRs/Kotlin functional tests]   \u2601  git clone 'https://github.com/gradle/gradle-build-action' # ref=v2\n[Run Gradle on PRs/Groovy functional tests] Non-terminating error while running 'git clone': some refs were not updated\n[Run Gradle on PRs/Groovy functional tests] \ud83e\uddea  Matrix: map[os:ubuntu-latest]\n[Run Gradle on PRs/Groovy functional tests] \u2b50 Run Main actions/checkout@v2\n[Run Gradle on PRs/Groovy functional tests]   \u2705  Success - Main actions/checkout@v2\n[Run Gradle on PRs/Kotlin functional tests] Non-terminating error while running 'git clone': some refs were not updated\n[Run Gradle on PRs/Kotlin functional tests] \ud83e\uddea  Matrix: map[os:ubuntu-latest]\n[Run Gradle on PRs/Kotlin functional tests] \u2b50 Run Main actions/checkout@v2\n[Run Gradle on PRs/Kotlin functional tests]   \u2705  Success - Main actions/checkout@v2\n[Run Gradle on PRs/Groovy functional tests] \u2b50 Run Main actions/setup-java@v1\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[Run Gradle on PRs/Kotlin functional tests] \u2b50 Run Main actions/setup-java@v1\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udcac  ::debug::isExplicit: \n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udcac  ::debug::explicit? false\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udcac  ::debug::evaluating 0 versions\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udcac  ::debug::match not found\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu11.64.19-ca-jdk11.0.19-linux_x64.tar.gz\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udcac  ::debug::Downloading /tmp/0e5a2798-8ae0-4578-a712-eecec0375ff7\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udcac  ::debug::isExplicit: \n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udcac  ::debug::explicit? false\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udcac  ::debug::evaluating 0 versions\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udcac  ::debug::match not found\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu11.64.19-ca-jdk11.0.19-linux_x64.tar.gz\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udcac  ::debug::Downloading /tmp/f1a33436-834f-4b97-8f8c-975577d65d17\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udcac  ::debug::download complete\n[Run Gradle on PRs/Groovy functional tests]   | [command]/usr/bin/tar --version\n[Run Gradle on PRs/Groovy functional tests]   | tar (GNU tar) 1.30\n[Run Gradle on PRs/Groovy functional tests]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[Run Gradle on PRs/Groovy functional tests]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[Run Gradle on PRs/Groovy functional tests]   | This is free software: you are free to change and redistribute it.\n[Run Gradle on PRs/Groovy functional tests]   | There is NO WARRANTY, to the extent permitted by law.\n[Run Gradle on PRs/Groovy functional tests]   | \n[Run Gradle on PRs/Groovy functional tests]   | Written by John Gilmore and Jay Fenlason.\n[Run Gradle on PRs/Groovy functional tests]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_584147608 -f /tmp/0e5a2798-8ae0-4578-a712-eecec0375ff7\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udcac  ::debug::download complete\n[Run Gradle on PRs/Kotlin functional tests]   | [command]/usr/bin/tar --version\n[Run Gradle on PRs/Kotlin functional tests]   | tar (GNU tar) 1.30\n[Run Gradle on PRs/Kotlin functional tests]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[Run Gradle on PRs/Kotlin functional tests]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[Run Gradle on PRs/Kotlin functional tests]   | This is free software: you are free to change and redistribute it.\n[Run Gradle on PRs/Kotlin functional tests]   | There is NO WARRANTY, to the extent permitted by law.\n[Run Gradle on PRs/Kotlin functional tests]   | \n[Run Gradle on PRs/Kotlin functional tests]   | Written by John Gilmore and Jay Fenlason.\n[Run Gradle on PRs/Kotlin functional tests]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_1370620276 -f /tmp/f1a33436-834f-4b97-8f8c-975577d65d17\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_584147608/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udcac  ::debug::Caching tool jdk 11.0.19 x64\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udcac  ::debug::source dir: /tmp/temp_584147608/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/11.0.19/x64\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_1370620276/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udcac  ::debug::Caching tool jdk 11.0.19 x64\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udcac  ::debug::source dir: /tmp/temp_1370620276/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/11.0.19/x64\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udcac  ::debug::finished caching tool\n[Run Gradle on PRs/Groovy functional tests]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[Run Gradle on PRs/Groovy functional tests]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[Run Gradle on PRs/Groovy functional tests]   | writing /home/runneradmin/.m2/settings.xml\n[Run Gradle on PRs/Groovy functional tests]   \u2705  Success - Main actions/setup-java@v1\n[Run Gradle on PRs/Groovy functional tests]   \u2699  ::set-env:: JAVA_HOME_11.0.19_x64=/opt/hostedtoolcache/jdk/11.0.19/x64\n[Run Gradle on PRs/Groovy functional tests]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/11.0.19/x64\n[Run Gradle on PRs/Groovy functional tests]   \u2699  ::set-env:: JAVA_HOME_11_0_19_X64=/opt/hostedtoolcache/jdk/11.0.19/x64\n[Run Gradle on PRs/Groovy functional tests]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/11.0.19/x64\n[Run Gradle on PRs/Groovy functional tests]   \u2699  ::set-output:: version=11.0.19\n[Run Gradle on PRs/Groovy functional tests]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/11.0.19/x64/bin\n[Run Gradle on PRs/Groovy functional tests] \u2b50 Run Main gradle/gradle-build-action@v2\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udcac  ::debug::finished caching tool\n[Run Gradle on PRs/Kotlin functional tests]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[Run Gradle on PRs/Kotlin functional tests]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[Run Gradle on PRs/Kotlin functional tests]   | writing /home/runneradmin/.m2/settings.xml\n[Run Gradle on PRs/Kotlin functional tests]   \u2705  Success - Main actions/setup-java@v1\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/gradle-gradle-build-action@v2/ dst=/var/run/act/actions/gradle-gradle-build-action@v2/\n[Run Gradle on PRs/Kotlin functional tests]   \u2699  ::set-env:: JAVA_HOME_11_0_19_X64=/opt/hostedtoolcache/jdk/11.0.19/x64\n[Run Gradle on PRs/Kotlin functional tests]   \u2699  ::set-env:: JAVA_HOME_11.0.19_x64=/opt/hostedtoolcache/jdk/11.0.19/x64\n[Run Gradle on PRs/Kotlin functional tests]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/11.0.19/x64\n[Run Gradle on PRs/Kotlin functional tests]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/11.0.19/x64\n[Run Gradle on PRs/Kotlin functional tests]   \u2699  ::set-output:: version=11.0.19\n[Run Gradle on PRs/Kotlin functional tests]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/11.0.19/x64/bin\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/gradle-gradle-build-action@v2/] user=0 workdir=\n[Run Gradle on PRs/Kotlin functional tests] \u2b50 Run Main gradle/gradle-build-action@v2\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/gradle-gradle-build-action@v2/ dst=/var/run/act/actions/gradle-gradle-build-action@v2/\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/gradle-gradle-build-action@v2/] user=0 workdir=\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/gradle-gradle-build-action@v2/dist/main/index.js] user= workdir=\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/gradle-gradle-build-action@v2/dist/main/index.js] user= workdir=\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udcac  ::debug::Determined user.home from java -version output: '/home/runneradmin'\n[Run Gradle on PRs/Kotlin functional tests]   | Cache is disabled: will not restore state from previous builds.\n[Run Gradle on PRs/Kotlin functional tests]   | [command]/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/melix-includegit-gradle-plugin/gradlew kotlinDslFunctionalTests\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udcac  ::debug::Determined user.home from java -version output: '/home/runneradmin'\n[Run Gradle on PRs/Groovy functional tests]   | Cache is disabled: will not restore state from previous builds.\n[Run Gradle on PRs/Groovy functional tests]   | [command]/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/melix-includegit-gradle-plugin/gradlew groovyDslFunctionalTests\n[Run Gradle on PRs/Kotlin functional tests]   | Downloading https://services.gradle.org/distributions/gradle-7.2-bin.zip\n[Run Gradle on PRs/Groovy functional tests]   | Downloading https://services.gradle.org/distributions/gradle-7.2-bin.zip\n[Run Gradle on PRs/Groovy functional tests]   | ..........10%...........20%...........30%...........40%...........50%...........60%...........70%...........80%...........90%...........100%\n[Run Gradle on PRs/Kotlin functional tests]   | ..........10%...........20%...........30%...........40%...........50%...........60%...........70%...........80%...........90%...........100%\n[Run Gradle on PRs/Groovy functional tests]   | \n[Run Gradle on PRs/Groovy functional tests]   | Welcome to Gradle 7.2!\n[Run Gradle on PRs/Groovy functional tests]   | \n[Run Gradle on PRs/Groovy functional tests]   | Here are the highlights of this release:\n[Run Gradle on PRs/Groovy functional tests]   |  - Toolchain support for Scala\n[Run Gradle on PRs/Groovy functional tests]   |  - More cache hits when Java source files have platform-specific line endings\n[Run Gradle on PRs/Groovy functional tests]   |  - More resilient remote HTTP build cache behavior\n[Run Gradle on PRs/Groovy functional tests]   | \n[Run Gradle on PRs/Groovy functional tests]   | For more details see https://docs.gradle.org/7.2/release-notes.html\n[Run Gradle on PRs/Groovy functional tests]   | \n[Run Gradle on PRs/Groovy functional tests]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[Run Gradle on PRs/Kotlin functional tests]   | \n[Run Gradle on PRs/Kotlin functional tests]   | Welcome to Gradle 7.2!\n[Run Gradle on PRs/Kotlin functional tests]   | \n[Run Gradle on PRs/Kotlin functional tests]   | Here are the highlights of this release:\n[Run Gradle on PRs/Kotlin functional tests]   |  - Toolchain support for Scala\n[Run Gradle on PRs/Kotlin functional tests]   |  - More cache hits when Java source files have platform-specific line endings\n[Run Gradle on PRs/Kotlin functional tests]   |  - More resilient remote HTTP build cache behavior\n[Run Gradle on PRs/Kotlin functional tests]   | \n[Run Gradle on PRs/Kotlin functional tests]   | For more details see https://docs.gradle.org/7.2/release-notes.html\n[Run Gradle on PRs/Kotlin functional tests]   | \n[Run Gradle on PRs/Kotlin functional tests]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[Run Gradle on PRs/Groovy functional tests]   | Type-safe dependency accessors is an incubating feature.\n[Run Gradle on PRs/Groovy functional tests]   | > Task :includegit-buildlogic:extractPrecompiledScriptPluginPlugins UP-TO-DATE\n[Run Gradle on PRs/Kotlin functional tests]   | \n[Run Gradle on PRs/Kotlin functional tests]   | FAILURE: Build failed with an exception.\n[Run Gradle on PRs/Kotlin functional tests]   | \n[Run Gradle on PRs/Kotlin functional tests]   | * What went wrong:\n[Run Gradle on PRs/Kotlin functional tests]   | Gradle could not start your build.\n[Run Gradle on PRs/Kotlin functional tests]   | > Could not create service of type FileHasher using BuildSessionServices.createFileHasher().\n[Run Gradle on PRs/Kotlin functional tests]   |    > Timeout waiting to lock file hash cache (/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/melix-includegit-gradle-plugin/.gradle/7.2/fileHashes). It is currently in use by another Gradle instance.\n[Run Gradle on PRs/Kotlin functional tests]   |      Owner PID: 166\n[Run Gradle on PRs/Kotlin functional tests]   |      Our PID: 169\n[Run Gradle on PRs/Kotlin functional tests]   |      Owner Operation: \n[Run Gradle on PRs/Kotlin functional tests]   |      Our operation: \n[Run Gradle on PRs/Kotlin functional tests]   |      Lock file: /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/melix-includegit-gradle-plugin/.gradle/7.2/fileHashes/fileHashes.lock\n[Run Gradle on PRs/Kotlin functional tests]   | \n[Run Gradle on PRs/Kotlin functional tests]   | * Try:\n[Run Gradle on PRs/Kotlin functional tests]   | Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.\n[Run Gradle on PRs/Kotlin functional tests]   | \n[Run Gradle on PRs/Kotlin functional tests]   | * Get more help at https://help.gradle.org\n[Run Gradle on PRs/Kotlin functional tests]   | \n[Run Gradle on PRs/Kotlin functional tests]   | BUILD FAILED in 1m 9s\n[Run Gradle on PRs/Kotlin functional tests]   \u2757  ::error::Gradle build failed: see console output for details\n[Run Gradle on PRs/Groovy functional tests]   | > Task :includegit-buildlogic:generateExternalPluginSpecBuilders UP-TO-DATE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :includegit-buildlogic:compilePluginsBlocks UP-TO-DATE\n[Run Gradle on PRs/Kotlin functional tests]   \u274c  Failure - Main gradle/gradle-build-action@v2\n[Run Gradle on PRs/Kotlin functional tests]   \u2699  ::set-env:: GRADLE_BUILD_ACTION_CACHE_RESTORED=true\n[Run Gradle on PRs/Kotlin functional tests]   \u2699  ::set-env:: GRADLE_BUILD_ACTION_SETUP_COMPLETED=true\n[Run Gradle on PRs/Groovy functional tests]   | > Task :includegit-buildlogic:generatePrecompiledScriptPluginAccessors UP-TO-DATE\n[Run Gradle on PRs/Kotlin functional tests] exitcode '1': failure\n[Run Gradle on PRs/Kotlin functional tests] \u2b50 Run Post gradle/gradle-build-action@v2\n[Run Gradle on PRs/Groovy functional tests]   | > Task :includegit-buildlogic:configurePrecompiledScriptDependenciesResolver\n[Run Gradle on PRs/Groovy functional tests]   | > Task :includegit-buildlogic:generateScriptPluginAdapters UP-TO-DATE\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/gradle-gradle-build-action@v2/dist/post/index.js] user= workdir=\n[Run Gradle on PRs/Kotlin functional tests]   | In final post-action step, saving state and writing summary\n[Run Gradle on PRs/Kotlin functional tests]   | Cache is disabled: will not save state for later builds.\n[Run Gradle on PRs/Kotlin functional tests]   | Writing job summary\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udcac  ::debug::No Gradle build results found. Summary table will not be generated.\n[Run Gradle on PRs/Kotlin functional tests]   \u2705  Success - Post gradle/gradle-build-action@v2\n[Run Gradle on PRs/Kotlin functional tests] \u2b50 Run Post actions/setup-java@v1\n[Run Gradle on PRs/Kotlin functional tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[Run Gradle on PRs/Kotlin functional tests]   \u2705  Success - Post actions/setup-java@v1\n[Run Gradle on PRs/Groovy functional tests]   | > Task :includegit-buildlogic:compileKotlin UP-TO-DATE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :includegit-buildlogic:compileJava NO-SOURCE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :includegit-buildlogic:pluginDescriptors UP-TO-DATE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :includegit-buildlogic:processResources UP-TO-DATE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :includegit-buildlogic:classes UP-TO-DATE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :includegit-buildlogic:inspectClassesForKotlinIC UP-TO-DATE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :includegit-buildlogic:jar UP-TO-DATE\n[Run Gradle on PRs/Kotlin functional tests] \ud83c\udfc1  Job failed\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:compileKotlin UP-TO-DATE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:compileJava UP-TO-DATE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:compileGroovy NO-SOURCE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:pluginDescriptors UP-TO-DATE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:processResources UP-TO-DATE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:classes UP-TO-DATE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:inspectClassesForKotlinIC UP-TO-DATE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:jar UP-TO-DATE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:compileTestFixturesKotlin NO-SOURCE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:compileTestFixturesJava NO-SOURCE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:compileTestFixturesGroovy UP-TO-DATE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:processTestFixturesResources NO-SOURCE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:testFixturesClasses UP-TO-DATE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:testFixturesJar UP-TO-DATE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:compileFunctionalTestKotlin NO-SOURCE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:compileFunctionalTestJava NO-SOURCE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:compileFunctionalTestGroovy\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:processFunctionalTestResources NO-SOURCE\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:functionalTestClasses\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:pluginUnderTestMetadata\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:functionalTest\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:gradle6_2FunctionalTest\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:gradle6_3FunctionalTest\n[Run Gradle on PRs/Groovy functional tests]   | > Task :plugin:gradle6_4FunctionalTest\n[Run Gradle on PRs/Groovy functional tests]   \u274c  Failure - Main gradle/gradle-build-action@v2\n[Run Gradle on PRs/Groovy functional tests] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/16ef167e3043853dfed6c03f5fa094b04d37ae777b6758b600398023f02ca1d7/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Run Gradle on PRs/Groovy functional tests] \u2b50 Run Post gradle/gradle-build-action@v2\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/gradle-gradle-build-action@v2/dist/post/index.js] user= workdir=\n[Run Gradle on PRs/Groovy functional tests]   | Gradle setup post-action only performed for first gradle-build-action step in workflow.\n[Run Gradle on PRs/Groovy functional tests]   \u2705  Success - Post gradle/gradle-build-action@v2\n[Run Gradle on PRs/Groovy functional tests] \u2b50 Run Post actions/setup-java@v1\n[Run Gradle on PRs/Groovy functional tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[Run Gradle on PRs/Groovy functional tests]   \u2705  Success - Post actions/setup-java@v1\n[Run Gradle on PRs/Groovy functional tests] \ud83c\udfc1  Job succeeded\n",
        "stderr": "Error: context canceled\n",
        "workflow": "/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/melix-includegit-gradle-plugin/.github/workflows/build-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 610.9547457695007
    }
}