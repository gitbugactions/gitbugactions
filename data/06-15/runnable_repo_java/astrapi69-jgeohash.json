{
    "repository": "astrapi69/jgeohash",
    "stars": 64,
    "language": "java",
    "size": 1066,
    "clone_url": "https://github.com/astrapi69/jgeohash.git",
    "timestamp": "2023-06-15T14:21:31.678223Z",
    "clone_success": true,
    "number of actions": 0,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "number_of_actions": 1,
    "actions_build_tools": [
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_data": {
        "failed": false,
        "tests": [],
        "stdout": "[Java CI build and test/Test JDK 8, ubuntu-latest] \ud83d\ude80  Start image=crawlergpt:latest\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/astrapi69-jgeohash] user=0 workdir=\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[Java CI build and test/Test JDK 8, ubuntu-latest] Non-terminating error while running 'git clone': some refs were not updated\n[Java CI build and test/Test JDK 8, ubuntu-latest] \ud83e\uddea  Matrix: map[java:8 os:ubuntu-latest]\n[Java CI build and test/Test JDK 8, ubuntu-latest] \u2b50 Run Main actions/checkout@v2\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \u2705  Success - Main actions/checkout@v2\n[Java CI build and test/Test JDK 8, ubuntu-latest] \u2b50 Run Main Set up JDK 8\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: \n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::explicit? false\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::evaluating 0 versions\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::match not found\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu8.70.0.23-ca-jdk8.0.372-linux_x64.tar.gz\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Downloading /tmp/04282abd-eb80-4289-935f-dec22511fe78\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::download complete\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | [command]/usr/bin/tar --version\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | tar (GNU tar) 1.30\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | This is free software: you are free to change and redistribute it.\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | There is NO WARRANTY, to the extent permitted by law.\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | \n[Java CI build and test/Test JDK 8, ubuntu-latest]   | Written by John Gilmore and Jay Fenlason.\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_66326340 -f /tmp/04282abd-eb80-4289-935f-dec22511fe78\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_66326340/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::Caching tool jdk 8.0.372 x64\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::source dir: /tmp/temp_66326340/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/8.0.372/x64\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::finished caching tool\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | writing /home/runneradmin/.m2/settings.xml\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \u2705  Success - Main Set up JDK 8\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \u2699  ::set-env:: JAVA_HOME_8.0.372_x64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/8.0.372/x64\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \u2699  ::set-env:: JAVA_HOME_8_0_372_X64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/8.0.372/x64\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \u2699  ::set-output:: version=8.0.372\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/8.0.372/x64/bin\n[Java CI build and test/Test JDK 8, ubuntu-latest] \u2b50 Run Main Verify with Gradle\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | Downloading https://services.gradle.org/distributions/gradle-6.9-all.zip\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | ...............................................................................................................................................\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | \n[Java CI build and test/Test JDK 8, ubuntu-latest]   | Welcome to Gradle 6.9!\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | \n[Java CI build and test/Test JDK 8, ubuntu-latest]   | Here are the highlights of this release:\n[Java CI build and test/Test JDK 8, ubuntu-latest]   |  - This is a small backport release.\n[Java CI build and test/Test JDK 8, ubuntu-latest]   |  - Java 16 can be used to compile when used with Java toolchains\n[Java CI build and test/Test JDK 8, ubuntu-latest]   |  - Dynamic versions can be used within plugin declarations\n[Java CI build and test/Test JDK 8, ubuntu-latest]   |  - Native support for Apple Silicon processors\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | \n[Java CI build and test/Test JDK 8, ubuntu-latest]   | For more details see https://docs.gradle.org/6.9/release-notes.html\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | \n[Java CI build and test/Test JDK 8, ubuntu-latest]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | Configuration on demand is an incubating feature.\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-geoip:processResources\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-geoip:processTestResources\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-geoip:license\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-core:compileJava\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-core:processResources\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-core:classes\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-core:jar\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-core:assemble\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-geoip:compileJava\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-geoip:classes\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-geoip:jar\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-geoip:assemble\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-geoip:compileTestJava\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-geoip:testClasses\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-core:compileTestJava\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-core:processTestResources\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-core:testClasses\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-geoip:test\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-core:test\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-geoip:jacocoTestReport\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-geoip:check\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-geoip:build\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-core:jacocoTestReport\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-core:license\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-core:check\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | > Task :jgeohash-core:build\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | \n[Java CI build and test/Test JDK 8, ubuntu-latest]   | BUILD SUCCESSFUL in 40s\n[Java CI build and test/Test JDK 8, ubuntu-latest]   | 14 actionable tasks: 14 executed\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \u2705  Success - Main Verify with Gradle\n[Java CI build and test/Test JDK 8, ubuntu-latest] \u2b50 Run Post Set up JDK 8\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[Java CI build and test/Test JDK 8, ubuntu-latest]   \u2705  Success - Post Set up JDK 8\n[Java CI build and test/Test JDK 8, ubuntu-latest] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/astrapi69-jgeohash/.github/workflows/build-test-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 60.73419380187988
    }
}