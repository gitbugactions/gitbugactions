{
    "repository": "centrifugal/centrifuge-java",
    "stars": 56,
    "language": "java",
    "size": 653,
    "clone_url": "https://github.com/centrifugal/centrifuge-java.git",
    "timestamp": "2023-06-15T17:19:03.168317Z",
    "clone_success": true,
    "number of actions": 0,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "number_of_actions": 2,
    "actions_build_tools": [
        "gradle",
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_data": {
        "failed": true,
        "tests": [],
        "stdout": "[Test workflow/checkApiCompatibility] \ud83d\ude80  Start image=crawlergpt:latest\n[Test workflow/compileAndroidSample ] \ud83d\ude80  Start image=crawlergpt:latest\n[Test workflow/test                 ] \ud83d\ude80  Start image=crawlergpt:latest\n[Test workflow/compileJavaSample    ] \ud83d\ude80  Start image=crawlergpt:latest\n[Test workflow/compileJavaSample    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test workflow/test                 ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test workflow/compileAndroidSample ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test workflow/checkApiCompatibility]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test workflow/test                 ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test workflow/checkApiCompatibility]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test workflow/compileJavaSample    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test workflow/compileAndroidSample ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test workflow/test                 ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test workflow/checkApiCompatibility]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test workflow/compileJavaSample    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test workflow/compileAndroidSample ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test workflow/test                 ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/centrifugal-centrifuge-java] user=0 workdir=\n[Test workflow/compileAndroidSample ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/centrifugal-centrifuge-java] user=0 workdir=\n[Test workflow/checkApiCompatibility]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/centrifugal-centrifuge-java] user=0 workdir=\n[Test workflow/compileJavaSample    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/centrifugal-centrifuge-java] user=0 workdir=\n[Test workflow/test                 ]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v3\n[Test workflow/test                 ] Non-terminating error while running 'git clone': some refs were not updated\n[Test workflow/compileJavaSample    ]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v3\n[Test workflow/compileAndroidSample ]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v3\n[Test workflow/checkApiCompatibility]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v3\n[Test workflow/test                 ] \u2b50 Run Main Checkout repository\n[Test workflow/compileJavaSample    ] Non-terminating error while running 'git clone': some refs were not updated\n[Test workflow/test                 ]   \u2705  Success - Main Checkout repository\n[Test workflow/compileJavaSample    ] \u2b50 Run Main Checkout repository\n[Test workflow/compileAndroidSample ] Non-terminating error while running 'git clone': some refs were not updated\n[Test workflow/checkApiCompatibility] Non-terminating error while running 'git clone': some refs were not updated\n[Test workflow/compileAndroidSample ] \u2b50 Run Main Checkout repository\n[Test workflow/compileJavaSample    ]   \u2705  Success - Main Checkout repository\n[Test workflow/checkApiCompatibility] \u2b50 Run Main Checkout repository\n[Test workflow/compileAndroidSample ]   \u2705  Success - Main Checkout repository\n[Test workflow/checkApiCompatibility]   \u2705  Success - Main Checkout repository\n[Test workflow/test                 ] \u2b50 Run Main set up JDK 11\n[Test workflow/test                 ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v3/ dst=/var/run/act/actions/actions-setup-java@v3/\n[Test workflow/compileJavaSample    ] \u2b50 Run Main set up JDK 11\n[Test workflow/compileAndroidSample ] \u2b50 Run Main set up JDK 11\n[Test workflow/compileJavaSample    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v3/ dst=/var/run/act/actions/actions-setup-java@v3/\n[Test workflow/test                 ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v3/] user=0 workdir=\n[Test workflow/test                 ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/setup/index.js] user= workdir=\n[Test workflow/compileAndroidSample ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v3/ dst=/var/run/act/actions/actions-setup-java@v3/\n[Test workflow/checkApiCompatibility] \u2b50 Run Main set up JDK 11\n[Test workflow/checkApiCompatibility]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v3/ dst=/var/run/act/actions/actions-setup-java@v3/\n[Test workflow/test                 ]   \u2753  ::group::Installed distributions\n[Test workflow/test                 ]   | Trying to resolve the latest version from remote\n[Test workflow/compileJavaSample    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v3/] user=0 workdir=\n[Test workflow/compileJavaSample    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/setup/index.js] user= workdir=\n[Test workflow/compileAndroidSample ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v3/] user=0 workdir=\n[Test workflow/compileAndroidSample ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/setup/index.js] user= workdir=\n[Test workflow/checkApiCompatibility]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v3/] user=0 workdir=\n[Test workflow/checkApiCompatibility]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/setup/index.js] user= workdir=\n[Test workflow/compileJavaSample    ]   \u2753  ::group::Installed distributions\n[Test workflow/compileJavaSample    ]   | Trying to resolve the latest version from remote\n[Test workflow/compileAndroidSample ]   \u2753  ::group::Installed distributions\n[Test workflow/compileAndroidSample ]   | Trying to resolve the latest version from remote\n[Test workflow/checkApiCompatibility]   \u2753  ::group::Installed distributions\n[Test workflow/checkApiCompatibility]   | Trying to resolve the latest version from remote\n[Test workflow/test                 ]   | Resolved latest version as 11.0.19+7\n[Test workflow/test                 ]   | Trying to download...\n[Test workflow/test                 ]   | Downloading Java 11.0.19+7 (Temurin-Hotspot) from https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.19%2B7/OpenJDK11U-jdk_x64_linux_hotspot_11.0.19_7.tar.gz ...\n[Test workflow/test                 ]   \ud83d\udcac  ::debug::Downloading https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.19%252B7/OpenJDK11U-jdk_x64_linux_hotspot_11.0.19_7.tar.gz\n[Test workflow/test                 ]   \ud83d\udcac  ::debug::Destination /tmp/b141732a-aba8-4286-aebf-926433617789\n[Test workflow/checkApiCompatibility]   | Resolved latest version as 11.0.19+7\n[Test workflow/checkApiCompatibility]   | Trying to download...\n[Test workflow/checkApiCompatibility]   | Downloading Java 11.0.19+7 (Temurin-Hotspot) from https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.19%2B7/OpenJDK11U-jdk_x64_linux_hotspot_11.0.19_7.tar.gz ...\n[Test workflow/checkApiCompatibility]   \ud83d\udcac  ::debug::Downloading https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.19%252B7/OpenJDK11U-jdk_x64_linux_hotspot_11.0.19_7.tar.gz\n[Test workflow/checkApiCompatibility]   \ud83d\udcac  ::debug::Destination /tmp/72669680-7331-4007-b83f-4efc65e02ef6\n[Test workflow/compileJavaSample    ]   | Resolved latest version as 11.0.19+7\n[Test workflow/compileJavaSample    ]   | Trying to download...\n[Test workflow/compileJavaSample    ]   | Downloading Java 11.0.19+7 (Temurin-Hotspot) from https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.19%2B7/OpenJDK11U-jdk_x64_linux_hotspot_11.0.19_7.tar.gz ...\n[Test workflow/compileJavaSample    ]   \ud83d\udcac  ::debug::Downloading https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.19%252B7/OpenJDK11U-jdk_x64_linux_hotspot_11.0.19_7.tar.gz\n[Test workflow/compileJavaSample    ]   \ud83d\udcac  ::debug::Destination /tmp/e35b6f63-d179-49b8-be73-9842782e3b60\n[Test workflow/compileAndroidSample ]   | Resolved latest version as 11.0.19+7\n[Test workflow/compileAndroidSample ]   | Trying to download...\n[Test workflow/compileAndroidSample ]   | Downloading Java 11.0.19+7 (Temurin-Hotspot) from https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.19%2B7/OpenJDK11U-jdk_x64_linux_hotspot_11.0.19_7.tar.gz ...\n[Test workflow/compileAndroidSample ]   \ud83d\udcac  ::debug::Downloading https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.19%252B7/OpenJDK11U-jdk_x64_linux_hotspot_11.0.19_7.tar.gz\n[Test workflow/compileAndroidSample ]   \ud83d\udcac  ::debug::Destination /tmp/3d351d0c-4547-46e7-bc27-d41550141f75\n[Test workflow/test                 ]   \ud83d\udcac  ::debug::download complete\n[Test workflow/test                 ]   | Extracting Java archive...\n[Test workflow/test                 ]   \ud83d\udcac  ::debug::Checking tar --version\n[Test workflow/test                 ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Test workflow/test                 ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/1241f8bb-3117-45a6-8b0a-432dd01e79af -f /tmp/b141732a-aba8-4286-aebf-926433617789\n[Test workflow/test                 ]   \ud83d\udcac  ::debug::Caching tool Java_Temurin-Hotspot_jdk 11.0.19-7 x64\n[Test workflow/test                 ]   \ud83d\udcac  ::debug::source dir: /tmp/1241f8bb-3117-45a6-8b0a-432dd01e79af/jdk-11.0.19+7\n[Test workflow/test                 ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/compileJavaSample    ]   \ud83d\udcac  ::debug::download complete\n[Test workflow/compileJavaSample    ]   | Extracting Java archive...\n[Test workflow/compileJavaSample    ]   \ud83d\udcac  ::debug::Checking tar --version\n[Test workflow/compileJavaSample    ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Test workflow/compileJavaSample    ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/05a19ffb-7587-460c-948b-f7c5a5ac3063 -f /tmp/e35b6f63-d179-49b8-be73-9842782e3b60\n[Test workflow/checkApiCompatibility]   \ud83d\udcac  ::debug::download complete\n[Test workflow/checkApiCompatibility]   | Extracting Java archive...\n[Test workflow/checkApiCompatibility]   \ud83d\udcac  ::debug::Checking tar --version\n[Test workflow/checkApiCompatibility]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Test workflow/checkApiCompatibility]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/41dc407a-5010-43d3-b783-29d06366e83a -f /tmp/72669680-7331-4007-b83f-4efc65e02ef6\n[Test workflow/test                 ]   \ud83d\udcac  ::debug::finished caching tool\n[Test workflow/test                 ]   | Java 11.0.19+7 was downloaded\n[Test workflow/test                 ]   | Setting Java 11.0.19+7 as the default\n[Test workflow/test                 ]   | Creating toolchains.xml for JDK version 11 from temurin\n[Test workflow/test                 ]   | Writing to /home/runneradmin/.m2/toolchains.xml\n[Test workflow/test                 ]   | \n[Test workflow/test                 ]   | Java configuration:\n[Test workflow/test                 ]   |   Distribution: temurin\n[Test workflow/test                 ]   |   Version: 11.0.19+7\n[Test workflow/test                 ]   |   Path: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/test                 ]   | \n[Test workflow/test                 ]   \u2753  ::endgroup::\n[Test workflow/test                 ]   \u2753 add-matcher /run/act/actions/actions-setup-java@v3/.github/java.json\n[Test workflow/test                 ]   | Creating settings.xml with server-id: github\n[Test workflow/test                 ]   | Writing to /home/runneradmin/.m2/settings.xml\n[Test workflow/test                 ]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[Test workflow/test                 ]   \u2705  Success - Main set up JDK 11\n[Test workflow/test                 ]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/test                 ]   \u2699  ::set-env:: JAVA_HOME_11_X64=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/compileJavaSample    ]   \ud83d\udcac  ::debug::Caching tool Java_Temurin-Hotspot_jdk 11.0.19-7 x64\n[Test workflow/compileJavaSample    ]   \ud83d\udcac  ::debug::source dir: /tmp/05a19ffb-7587-460c-948b-f7c5a5ac3063/jdk-11.0.19+7\n[Test workflow/compileJavaSample    ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/test                 ]   \u2699  ::set-output:: distribution=Temurin-Hotspot\n[Test workflow/test                 ]   \u2699  ::set-output:: path=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/test                 ]   \u2699  ::set-output:: version=11.0.19+7\n[Test workflow/test                 ]   \u2699  ::add-path:: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64/bin\n[Test workflow/test                 ] \u2b50 Run Main Compile library\n[Test workflow/compileAndroidSample ]   \ud83d\udcac  ::debug::download complete\n[Test workflow/compileAndroidSample ]   | Extracting Java archive...\n[Test workflow/compileAndroidSample ]   \ud83d\udcac  ::debug::Checking tar --version\n[Test workflow/test                 ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test workflow/compileAndroidSample ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Test workflow/compileAndroidSample ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/6f47c998-6cd4-40f4-a0b1-300036528f14 -f /tmp/3d351d0c-4547-46e7-bc27-d41550141f75\n[Test workflow/checkApiCompatibility]   \ud83d\udcac  ::debug::Caching tool Java_Temurin-Hotspot_jdk 11.0.19-7 x64\n[Test workflow/checkApiCompatibility]   \ud83d\udcac  ::debug::source dir: /tmp/41dc407a-5010-43d3-b783-29d06366e83a/jdk-11.0.19+7\n[Test workflow/checkApiCompatibility]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/compileJavaSample    ]   \ud83d\udcac  ::debug::finished caching tool\n[Test workflow/compileJavaSample    ]   | Java 11.0.19+7 was downloaded\n[Test workflow/compileJavaSample    ]   | Setting Java 11.0.19+7 as the default\n[Test workflow/compileJavaSample    ]   | Creating toolchains.xml for JDK version 11 from temurin\n[Test workflow/compileJavaSample    ]   | Writing to /home/runneradmin/.m2/toolchains.xml\n[Test workflow/compileJavaSample    ]   | \n[Test workflow/compileJavaSample    ]   | Java configuration:\n[Test workflow/compileJavaSample    ]   |   Distribution: temurin\n[Test workflow/compileJavaSample    ]   |   Version: 11.0.19+7\n[Test workflow/compileJavaSample    ]   |   Path: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/compileJavaSample    ]   | \n[Test workflow/compileJavaSample    ]   \u2753  ::endgroup::\n[Test workflow/compileJavaSample    ]   \u2753 add-matcher /run/act/actions/actions-setup-java@v3/.github/java.json\n[Test workflow/compileJavaSample    ]   | Creating settings.xml with server-id: github\n[Test workflow/compileJavaSample    ]   | Writing to /home/runneradmin/.m2/settings.xml\n[Test workflow/compileJavaSample    ]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[Test workflow/compileJavaSample    ]   \u2705  Success - Main set up JDK 11\n[Test workflow/compileJavaSample    ]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/compileJavaSample    ]   \u2699  ::set-env:: JAVA_HOME_11_X64=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/compileAndroidSample ]   \ud83d\udcac  ::debug::Caching tool Java_Temurin-Hotspot_jdk 11.0.19-7 x64\n[Test workflow/compileAndroidSample ]   \ud83d\udcac  ::debug::source dir: /tmp/6f47c998-6cd4-40f4-a0b1-300036528f14/jdk-11.0.19+7\n[Test workflow/compileAndroidSample ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/compileJavaSample    ]   \u2699  ::set-output:: distribution=Temurin-Hotspot\n[Test workflow/compileJavaSample    ]   \u2699  ::set-output:: path=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/compileJavaSample    ]   \u2699  ::set-output:: version=11.0.19+7\n[Test workflow/compileJavaSample    ]   \u2699  ::add-path:: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64/bin\n[Test workflow/compileJavaSample    ] \u2b50 Run Main Compile Java Example app\n[Test workflow/compileJavaSample    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test workflow/checkApiCompatibility]   \ud83d\udcac  ::debug::finished caching tool\n[Test workflow/checkApiCompatibility]   | Java 11.0.19+7 was downloaded\n[Test workflow/checkApiCompatibility]   | Setting Java 11.0.19+7 as the default\n[Test workflow/checkApiCompatibility]   | Creating toolchains.xml for JDK version 11 from temurin\n[Test workflow/checkApiCompatibility]   | Writing to /home/runneradmin/.m2/toolchains.xml\n[Test workflow/checkApiCompatibility]   | \n[Test workflow/checkApiCompatibility]   | Java configuration:\n[Test workflow/checkApiCompatibility]   |   Distribution: temurin\n[Test workflow/checkApiCompatibility]   |   Version: 11.0.19+7\n[Test workflow/checkApiCompatibility]   |   Path: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/checkApiCompatibility]   | \n[Test workflow/checkApiCompatibility]   \u2753  ::endgroup::\n[Test workflow/checkApiCompatibility]   \u2753 add-matcher /run/act/actions/actions-setup-java@v3/.github/java.json\n[Test workflow/checkApiCompatibility]   | Creating settings.xml with server-id: github\n[Test workflow/checkApiCompatibility]   | Writing to /home/runneradmin/.m2/settings.xml\n[Test workflow/checkApiCompatibility]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[Test workflow/checkApiCompatibility]   \u2705  Success - Main set up JDK 11\n[Test workflow/checkApiCompatibility]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/checkApiCompatibility]   \u2699  ::set-env:: JAVA_HOME_11_X64=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/checkApiCompatibility]   \u2699  ::set-output:: version=11.0.19+7\n[Test workflow/checkApiCompatibility]   \u2699  ::set-output:: distribution=Temurin-Hotspot\n[Test workflow/checkApiCompatibility]   \u2699  ::set-output:: path=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/checkApiCompatibility]   \u2699  ::add-path:: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64/bin\n[Test workflow/checkApiCompatibility] \u2b50 Run Main Generate current API signatures\n[Test workflow/checkApiCompatibility]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test workflow/compileAndroidSample ]   \ud83d\udcac  ::debug::finished caching tool\n[Test workflow/compileAndroidSample ]   | Java 11.0.19+7 was downloaded\n[Test workflow/compileAndroidSample ]   | Setting Java 11.0.19+7 as the default\n[Test workflow/compileAndroidSample ]   | Creating toolchains.xml for JDK version 11 from temurin\n[Test workflow/compileAndroidSample ]   | Writing to /home/runneradmin/.m2/toolchains.xml\n[Test workflow/compileAndroidSample ]   | \n[Test workflow/compileAndroidSample ]   | Java configuration:\n[Test workflow/compileAndroidSample ]   |   Distribution: temurin\n[Test workflow/compileAndroidSample ]   |   Version: 11.0.19+7\n[Test workflow/compileAndroidSample ]   |   Path: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/compileAndroidSample ]   | \n[Test workflow/compileAndroidSample ]   \u2753  ::endgroup::\n[Test workflow/compileAndroidSample ]   \u2753 add-matcher /run/act/actions/actions-setup-java@v3/.github/java.json\n[Test workflow/compileAndroidSample ]   | Creating settings.xml with server-id: github\n[Test workflow/compileAndroidSample ]   | Writing to /home/runneradmin/.m2/settings.xml\n[Test workflow/compileAndroidSample ]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[Test workflow/compileAndroidSample ]   \u2705  Success - Main set up JDK 11\n[Test workflow/compileAndroidSample ]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/compileAndroidSample ]   \u2699  ::set-env:: JAVA_HOME_11_X64=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/compileAndroidSample ]   \u2699  ::set-output:: distribution=Temurin-Hotspot\n[Test workflow/compileAndroidSample ]   \u2699  ::set-output:: path=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64\n[Test workflow/compileAndroidSample ]   \u2699  ::set-output:: version=11.0.19+7\n[Test workflow/compileAndroidSample ]   \u2699  ::add-path:: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.19-7/x64/bin\n[Test workflow/compileAndroidSample ] \u2b50 Run Main Compile Android Demo app\n[Test workflow/compileAndroidSample ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test workflow/test                 ]   | Downloading https://services.gradle.org/distributions/gradle-7.5.1-bin.zip\n[Test workflow/checkApiCompatibility]   | Downloading https://services.gradle.org/distributions/gradle-7.5.1-bin.zip\n[Test workflow/compileJavaSample    ]   | Downloading https://services.gradle.org/distributions/gradle-7.5.1-bin.zip\n[Test workflow/compileAndroidSample ]   | Downloading https://services.gradle.org/distributions/gradle-7.5.1-bin.zip\n[Test workflow/compileJavaSample    ]   | ...........10%............20%...........30%............40%...........50%............60%...........70%............80%...........90%............100%\n[Test workflow/checkApiCompatibility]   | ...........10%............20%...........30%............40%...........50%............60%...........70%............80%...........90%............100%\n[Test workflow/compileJavaSample    ]   | \n[Test workflow/compileJavaSample    ]   | Welcome to Gradle 7.5.1!\n[Test workflow/compileJavaSample    ]   | \n[Test workflow/compileJavaSample    ]   | Here are the highlights of this release:\n[Test workflow/compileJavaSample    ]   |  - Support for Java 18\n[Test workflow/compileJavaSample    ]   |  - Support for building with Groovy 4\n[Test workflow/compileJavaSample    ]   |  - Much more responsive continuous builds\n[Test workflow/compileJavaSample    ]   |  - Improved diagnostics for dependency resolution\n[Test workflow/compileJavaSample    ]   | \n[Test workflow/compileJavaSample    ]   | For more details see https://docs.gradle.org/7.5.1/release-notes.html\n[Test workflow/compileJavaSample    ]   | \n[Test workflow/compileJavaSample    ]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[Test workflow/test                 ]   | ...........10%............20%...........30%............40%...........50%............60%...........70%............80%...........90%............100%\n[Test workflow/compileAndroidSample ]   | ...........10%............20%...........30%............40%...........50%............60%...........70%............80%...........90%............100%\n[Test workflow/checkApiCompatibility]   | \n[Test workflow/checkApiCompatibility]   | Welcome to Gradle 7.5.1!\n[Test workflow/checkApiCompatibility]   | \n[Test workflow/checkApiCompatibility]   | Here are the highlights of this release:\n[Test workflow/checkApiCompatibility]   |  - Support for Java 18\n[Test workflow/checkApiCompatibility]   |  - Support for building with Groovy 4\n[Test workflow/checkApiCompatibility]   |  - Much more responsive continuous builds\n[Test workflow/checkApiCompatibility]   |  - Improved diagnostics for dependency resolution\n[Test workflow/checkApiCompatibility]   | \n[Test workflow/checkApiCompatibility]   | For more details see https://docs.gradle.org/7.5.1/release-notes.html\n[Test workflow/checkApiCompatibility]   | \n[Test workflow/checkApiCompatibility]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[Test workflow/test                 ]   | \n[Test workflow/test                 ]   | Welcome to Gradle 7.5.1!\n[Test workflow/test                 ]   | \n[Test workflow/test                 ]   | Here are the highlights of this release:\n[Test workflow/test                 ]   |  - Support for Java 18\n[Test workflow/test                 ]   |  - Support for building with Groovy 4\n[Test workflow/test                 ]   |  - Much more responsive continuous builds\n[Test workflow/test                 ]   |  - Improved diagnostics for dependency resolution\n[Test workflow/test                 ]   | \n[Test workflow/test                 ]   | For more details see https://docs.gradle.org/7.5.1/release-notes.html\n[Test workflow/test                 ]   | \n[Test workflow/test                 ]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[Test workflow/compileAndroidSample ]   | \n[Test workflow/compileAndroidSample ]   | Welcome to Gradle 7.5.1!\n[Test workflow/compileAndroidSample ]   | \n[Test workflow/compileAndroidSample ]   | Here are the highlights of this release:\n[Test workflow/compileAndroidSample ]   |  - Support for Java 18\n[Test workflow/compileAndroidSample ]   |  - Support for building with Groovy 4\n[Test workflow/compileAndroidSample ]   |  - Much more responsive continuous builds\n[Test workflow/compileAndroidSample ]   |  - Improved diagnostics for dependency resolution\n[Test workflow/compileAndroidSample ]   | \n[Test workflow/compileAndroidSample ]   | For more details see https://docs.gradle.org/7.5.1/release-notes.html\n[Test workflow/compileAndroidSample ]   | \n[Test workflow/compileAndroidSample ]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[Test workflow/compileJavaSample    ]   | > Task :centrifuge:extractIncludeProto\n[Test workflow/compileJavaSample    ]   | > Task :centrifuge:extractProto\n[Test workflow/compileJavaSample    ]   | > Task :centrifuge:generateProto\n[Test workflow/compileJavaSample    ]   | > Task :centrifuge:compileJava\n[Test workflow/compileJavaSample    ]   | > Task :example:compileJava\n[Test workflow/compileJavaSample    ]   | > Task :example:processResources\n[Test workflow/compileJavaSample    ]   | > Task :example:classes\n[Test workflow/compileJavaSample    ]   | > Task :example:jar\n[Test workflow/compileJavaSample    ]   | > Task :example:assemble\n[Test workflow/compileJavaSample    ]   | \n[Test workflow/compileJavaSample    ]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.\n[Test workflow/compileJavaSample    ]   | \n[Test workflow/compileJavaSample    ]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[Test workflow/compileJavaSample    ]   | \n[Test workflow/compileJavaSample    ]   | See https://docs.gradle.org/7.5.1/userguide/command_line_interface.html#sec:command_line_warnings\n[Test workflow/compileJavaSample    ]   | \n[Test workflow/compileJavaSample    ]   | BUILD SUCCESSFUL in 48s\n[Test workflow/compileJavaSample    ]   | 7 actionable tasks: 7 executed\n[Test workflow/compileJavaSample    ]   \u2705  Success - Main Compile Java Example app\n[Test workflow/compileJavaSample    ] \u2b50 Run Post set up JDK 11\n[Test workflow/compileJavaSample    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/cleanup/index.js] user= workdir=\n[Test workflow/compileJavaSample    ]   \ud83d\udea7  ::warning::Error retrieving key from state.\n[Test workflow/compileJavaSample    ]   \u2705  Success - Post set up JDK 11\n[Test workflow/compileJavaSample    ] \ud83c\udfc1  Job succeeded\n[Test workflow/checkApiCompatibility]   | \n[Test workflow/checkApiCompatibility]   | > Task :centrifuge:metalavaGenerateTempSignature\n[Test workflow/checkApiCompatibility]   | \n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Client.java:3: \u001b[36minfo: \u001b[0mUnresolved import: `java.io.ByteArrayInputStream` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Client.java:4: \u001b[36minfo: \u001b[0mUnresolved import: `java.io.ByteArrayOutputStream` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Client.java:5: \u001b[36minfo: \u001b[0mUnresolved import: `java.io.IOException` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Client.java:6: \u001b[36minfo: \u001b[0mUnresolved import: `java.io.InputStream` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Client.java:7: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.ArrayList` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Client.java:8: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.HashMap` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Client.java:9: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.Iterator` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Client.java:10: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.List` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Client.java:11: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.Map` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Client.java:12: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.concurrent.ConcurrentHashMap` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Client.java:13: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.concurrent.ExecutorService` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Client.java:14: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.concurrent.Executors` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Client.java:15: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.concurrent.RejectedExecutionException` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Client.java:16: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.concurrent.ScheduledExecutorService` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Client.java:17: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.concurrent.ScheduledFuture` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Client.java:18: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.concurrent.TimeUnit` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Client.java:21: \u001b[36minfo: \u001b[0mUnresolved import: `io.github.centrifugal.centrifuge.internal.protocol.Protocol` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/ClientInfo.java:3: \u001b[36minfo: \u001b[0mUnresolved import: `io.github.centrifugal.centrifuge.internal.protocol.Protocol` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/test/java/io/github/centrifugal/centrifuge/ClientTest.java:3: \u001b[36minfo: \u001b[0mUnresolved import: `org.junit.Test` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Dns.java:3: \u001b[36minfo: \u001b[0mUnresolved import: `java.net.InetAddress` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Dns.java:4: \u001b[36minfo: \u001b[0mUnresolved import: `java.net.UnknownHostException` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Dns.java:5: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.List` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/HistoryResult.java:3: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.List` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Options.java:3: \u001b[36minfo: \u001b[0mUnresolved import: `java.net.Proxy` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Options.java:4: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.Map` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/PresenceResult.java:3: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.Map` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/PublicationEvent.java:3: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.Map` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/ServerPublicationEvent.java:3: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.Map` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/StreamPosition.java:3: \u001b[36minfo: \u001b[0mUnresolved import: `io.github.centrifugal.centrifuge.internal.protocol.Protocol` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Subscription.java:3: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.Map` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Subscription.java:4: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.UUID` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Subscription.java:5: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.concurrent.ConcurrentHashMap` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Subscription.java:6: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.concurrent.ScheduledFuture` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Subscription.java:7: \u001b[36minfo: \u001b[0mUnresolved import: `java.util.concurrent.TimeUnit` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | \u001b[1msrc/main/java/io/github/centrifugal/centrifuge/Subscription.java:10: \u001b[36minfo: \u001b[0mUnresolved import: `io.github.centrifugal.centrifuge.internal.protocol.Protocol` [UnresolvedImport]\n[Test workflow/checkApiCompatibility]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.\n[Test workflow/checkApiCompatibility]   | \n[Test workflow/checkApiCompatibility]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[Test workflow/checkApiCompatibility]   | \n[Test workflow/checkApiCompatibility]   | See https://docs.gradle.org/7.5.1/userguide/command_line_interface.html#sec:command_line_warnings\n[Test workflow/checkApiCompatibility]   | \n[Test workflow/checkApiCompatibility]   | BUILD SUCCESSFUL in 1m 31s\n[Test workflow/checkApiCompatibility]   | 1 actionable task: 1 executed\n[Test workflow/checkApiCompatibility]   \u2705  Success - Main Generate current API signatures\n[Test workflow/checkApiCompatibility] \u2b50 Run Main Calculate API diff\n[Test workflow/checkApiCompatibility]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Test workflow/checkApiCompatibility]   | diff --git a/centrifuge/api.txt b/centrifuge/build/metalava/current.txt\n[Test workflow/checkApiCompatibility]   | index bf8adaf..e1f5c4c 100644\n[Test workflow/checkApiCompatibility]   | --- a/centrifuge/api.txt\n[Test workflow/checkApiCompatibility]   | +++ b/centrifuge/build/metalava/current.txt\n[Test workflow/checkApiCompatibility]   | @@ -9,6 +9,7 @@ package io.github.centrifugal.centrifuge {\n[Test workflow/checkApiCompatibility]   |      method public io.github.centrifugal.centrifuge.ClientState! getState();\n[Test workflow/checkApiCompatibility]   |      method public io.github.centrifugal.centrifuge.Subscription! getSubscription(String);\n[Test workflow/checkApiCompatibility]   |      method public void history(String, io.github.centrifugal.centrifuge.HistoryOptions!, io.github.centrifugal.centrifuge.ResultCallback<io.github.centrifugal.centrifuge.HistoryResult!>!);\n[Test workflow/checkApiCompatibility]   | +    method public io.github.centrifugal.centrifuge.Subscription! newSubscription(String, io.github.centrifugal.centrifuge.SubscriptionOptions!, io.github.centrifugal.centrifuge.SubscriptionEventListener!) throws io.github.centrifugal.centrifuge.DuplicateSubscriptionException;\n[Test workflow/checkApiCompatibility]   |      method public io.github.centrifugal.centrifuge.Subscription! newSubscription(String, io.github.centrifugal.centrifuge.SubscriptionEventListener!) throws io.github.centrifugal.centrifuge.DuplicateSubscriptionException;\n[Test workflow/checkApiCompatibility]   |      method public void presence(String, io.github.centrifugal.centrifuge.ResultCallback<io.github.centrifugal.centrifuge.PresenceResult!>!);\n[Test workflow/checkApiCompatibility]   |      method public void presenceStats(String, io.github.centrifugal.centrifuge.ResultCallback<io.github.centrifugal.centrifuge.PresenceStatsResult!>!);\n[Test workflow/checkApiCompatibility]   | @@ -46,6 +47,10 @@ package io.github.centrifugal.centrifuge {\n[Test workflow/checkApiCompatibility]   |      method public void onDone(Throwable);\n[Test workflow/checkApiCompatibility]   |    }\n[Test workflow/checkApiCompatibility]   |  \n[Test workflow/checkApiCompatibility]   | +  public class ConfigurationError {\n[Test workflow/checkApiCompatibility]   | +    method public Throwable getError();\n[Test workflow/checkApiCompatibility]   | +  }\n[Test workflow/checkApiCompatibility]   | +\n[Test workflow/checkApiCompatibility]   |    public class ConnectedEvent {\n[Test workflow/checkApiCompatibility]   |      ctor public ConnectedEvent();\n[Test workflow/checkApiCompatibility]   |      method public String getClient();\n[Test workflow/checkApiCompatibility]   | @@ -369,6 +374,10 @@ package io.github.centrifugal.centrifuge {\n[Test workflow/checkApiCompatibility]   |      method public Throwable getError();\n[Test workflow/checkApiCompatibility]   |    }\n[Test workflow/checkApiCompatibility]   |  \n[Test workflow/checkApiCompatibility]   | +  public class UnclassifiedError {\n[Test workflow/checkApiCompatibility]   | +    method public Throwable getError();\n[Test workflow/checkApiCompatibility]   | +  }\n[Test workflow/checkApiCompatibility]   | +\n[Test workflow/checkApiCompatibility]   |    public class UnsubscribedEvent {\n[Test workflow/checkApiCompatibility]   |      ctor public UnsubscribedEvent(int, String);\n[Test workflow/checkApiCompatibility]   |      method public int getCode();\n[Test workflow/checkApiCompatibility]   \u2705  Success - Main Calculate API diff\n[Test workflow/checkApiCompatibility] \u2b50 Run Main Check API compatibility\n[Test workflow/checkApiCompatibility]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Test workflow/compileAndroidSample ]   | \n[Test workflow/compileAndroidSample ]   | FAILURE: Build failed with an exception.\n[Test workflow/compileAndroidSample ]   | \n[Test workflow/compileAndroidSample ]   | * What went wrong:\n[Test workflow/compileAndroidSample ]   | Could not determine the dependencies of task ':demo:compileDebugJavaWithJavac'.\n[Test workflow/compileAndroidSample ]   | > SDK location not found. Define a valid SDK location with an ANDROID_HOME environment variable or by setting the sdk.dir path in your project's local properties file at '/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/centrifugal-centrifuge-java/local.properties'.\n[Test workflow/compileAndroidSample ]   | \n[Test workflow/compileAndroidSample ]   | * Try:\n[Test workflow/compileAndroidSample ]   | > Run with --stacktrace option to get the stack trace.\n[Test workflow/compileAndroidSample ]   | > Run with --info or --debug option to get more log output.\n[Test workflow/compileAndroidSample ]   | > Run with --scan to get full insights.\n[Test workflow/compileAndroidSample ]   | \n[Test workflow/compileAndroidSample ]   | * Get more help at https://help.gradle.org\n[Test workflow/compileAndroidSample ]   | \n[Test workflow/compileAndroidSample ]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.\n[Test workflow/compileAndroidSample ]   | \n[Test workflow/compileAndroidSample ]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[Test workflow/compileAndroidSample ]   | \n[Test workflow/compileAndroidSample ]   | See https://docs.gradle.org/7.5.1/userguide/command_line_interface.html#sec:command_line_warnings\n[Test workflow/compileAndroidSample ]   | \n[Test workflow/compileAndroidSample ]   | BUILD FAILED in 2m 9s\n[Test workflow/compileAndroidSample ]   \u274c  Failure - Main Compile Android Demo app\n[Test workflow/compileAndroidSample ] exitcode '1': failure\n[Test workflow/compileAndroidSample ] \u2b50 Run Post set up JDK 11\n[Test workflow/checkApiCompatibility]   | > Task :centrifuge:metalavaGenerateTempSignature UP-TO-DATE\n[Test workflow/compileAndroidSample ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/cleanup/index.js] user= workdir=\n[Test workflow/compileAndroidSample ]   \ud83d\udea7  ::warning::Error retrieving key from state.\n[Test workflow/compileAndroidSample ]   \u2705  Success - Post set up JDK 11\n[Test workflow/checkApiCompatibility]   | > Task :centrifuge:metalavaCheckCompatibility\n[Test workflow/checkApiCompatibility]   | \n[Test workflow/checkApiCompatibility]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.\n[Test workflow/checkApiCompatibility]   | \n[Test workflow/checkApiCompatibility]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[Test workflow/checkApiCompatibility]   | \n[Test workflow/checkApiCompatibility]   | See https://docs.gradle.org/7.5.1/userguide/command_line_interface.html#sec:command_line_warnings\n[Test workflow/checkApiCompatibility]   | \n[Test workflow/checkApiCompatibility]   | BUILD SUCCESSFUL in 36s\n[Test workflow/checkApiCompatibility]   | 2 actionable tasks: 1 executed, 1 up-to-date\n[Test workflow/checkApiCompatibility]   \u2705  Success - Main Check API compatibility\n[Test workflow/checkApiCompatibility] \u2b50 Run Post set up JDK 11\n[Test workflow/checkApiCompatibility]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/cleanup/index.js] user= workdir=\n[Test workflow/checkApiCompatibility]   \ud83d\udea7  ::warning::Error retrieving key from state.\n[Test workflow/checkApiCompatibility]   \u2705  Success - Post set up JDK 11\n[Test workflow/compileAndroidSample ] \ud83c\udfc1  Job failed\n[Test workflow/checkApiCompatibility] \ud83c\udfc1  Job succeeded\n[Test workflow/test                 ]   | > Task :centrifuge:extractIncludeProto UP-TO-DATE\n[Test workflow/test                 ]   | > Task :centrifuge:extractProto UP-TO-DATE\n[Test workflow/test                 ]   | > Task :centrifuge:generateProto UP-TO-DATE\n[Test workflow/test                 ]   | > Task :centrifuge:compileJava UP-TO-DATE\n[Test workflow/test                 ]   | > Task :centrifuge:processResources\n[Test workflow/test                 ]   | > Task :centrifuge:classes\n[Test workflow/test                 ]   | > Task :centrifuge:jar\n[Test workflow/test                 ]   | \n[Test workflow/test                 ]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.\n[Test workflow/test                 ]   | \n[Test workflow/test                 ]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[Test workflow/test                 ]   | \n[Test workflow/test                 ]   | See https://docs.gradle.org/7.5.1/userguide/command_line_interface.html#sec:command_line_warnings\n[Test workflow/test                 ]   | \n[Test workflow/test                 ]   | BUILD SUCCESSFUL in 2m 51s\n[Test workflow/test                 ]   | 6 actionable tasks: 2 executed, 4 up-to-date\n[Test workflow/test                 ]   \u2705  Success - Main Compile library\n[Test workflow/test                 ] \u2b50 Run Main Run unit tests\n[Test workflow/test                 ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Test workflow/test                 ]   | > Task :centrifuge:extractIncludeProto UP-TO-DATE\n[Test workflow/test                 ]   | > Task :centrifuge:extractProto UP-TO-DATE\n[Test workflow/test                 ]   | > Task :centrifuge:generateProto UP-TO-DATE\n[Test workflow/test                 ]   | > Task :centrifuge:compileJava UP-TO-DATE\n[Test workflow/test                 ]   | > Task :centrifuge:processResources UP-TO-DATE\n[Test workflow/test                 ]   | > Task :centrifuge:classes UP-TO-DATE\n[Test workflow/test                 ]   | > Task :centrifuge:extractIncludeTestProto\n[Test workflow/test                 ]   | > Task :centrifuge:extractTestProto\n[Test workflow/test                 ]   | > Task :centrifuge:generateTestProto NO-SOURCE\n[Test workflow/test                 ]   | > Task :centrifuge:compileTestJava\n[Test workflow/test                 ]   | > Task :centrifuge:processTestResources NO-SOURCE\n[Test workflow/test                 ]   | > Task :centrifuge:testClasses\n[Test workflow/test                 ]   | > Task :centrifuge:test\n[Test workflow/test                 ]   | \n[Test workflow/test                 ]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.\n[Test workflow/test                 ]   | \n[Test workflow/test                 ]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[Test workflow/test                 ]   | \n[Test workflow/test                 ]   | See https://docs.gradle.org/7.5.1/userguide/command_line_interface.html#sec:command_line_warnings\n[Test workflow/test                 ]   | \n[Test workflow/test                 ]   | BUILD SUCCESSFUL in 4s\n[Test workflow/test                 ]   | 9 actionable tasks: 4 executed, 5 up-to-date\n[Test workflow/test                 ]   \u2705  Success - Main Run unit tests\n[Test workflow/test                 ] \u2b50 Run Post set up JDK 11\n[Test workflow/test                 ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/cleanup/index.js] user= workdir=\n[Test workflow/test                 ]   \ud83d\udea7  ::warning::Error retrieving key from state.\n[Test workflow/test                 ]   \u2705  Success - Post set up JDK 11\n[Test workflow/test                 ] \ud83c\udfc1  Job succeeded\n",
        "stderr": "Error: Job 'compileAndroidSample' failed\n",
        "workflow": "/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/centrifugal-centrifuge-java/.github/workflows/ci-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 249.91096568107605
    }
}