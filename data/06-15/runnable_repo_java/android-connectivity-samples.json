{
    "repository": "android/connectivity-samples",
    "stars": 1421,
    "language": "java",
    "size": 5760,
    "clone_url": "https://github.com/android/connectivity-samples.git",
    "timestamp": "2023-06-15T17:33:38.689144Z",
    "clone_success": true,
    "number of actions": 0,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "number_of_actions": 2,
    "actions_build_tools": [
        "unknown",
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_data": {
        "failed": true,
        "tests": [],
        "stdout": "[Android CI/Build] \ud83d\ude80  Start image=crawlergpt:latest\n[Android CI/Build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Android CI/Build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Android CI/Build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Android CI/Build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/569e0364-0b80-11ee-a890-af2cc187fc11/android-connectivity-samples] user=0 workdir=\n[Android CI/Build]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[Android CI/Build] Non-terminating error while running 'git clone': some refs were not updated\n[Android CI/Build]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v1\n[Android CI/Build] \u2b50 Run Main actions/checkout@v1\n[Android CI/Build]   \u2705  Success - Main actions/checkout@v1\n[Android CI/Build] \u2b50 Run Main set up JDK 1.8\n[Android CI/Build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[Android CI/Build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[Android CI/Build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[Android CI/Build]   \ud83d\udcac  ::debug::isExplicit: \n[Android CI/Build]   \ud83d\udcac  ::debug::explicit? false\n[Android CI/Build]   \ud83d\udcac  ::debug::evaluating 0 versions\n[Android CI/Build]   \ud83d\udcac  ::debug::match not found\n[Android CI/Build]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[Android CI/Build]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[Android CI/Build]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu8.70.0.23-ca-jdk8.0.372-linux_x64.tar.gz\n[Android CI/Build]   \ud83d\udcac  ::debug::Downloading /tmp/cbc62215-c22e-42e3-ab6a-df3de7ad0819\n[Android CI/Build]   \ud83d\udcac  ::debug::download complete\n[Android CI/Build]   | [command]/usr/bin/tar --version\n[Android CI/Build]   | tar (GNU tar) 1.30\n[Android CI/Build]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[Android CI/Build]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[Android CI/Build]   | This is free software: you are free to change and redistribute it.\n[Android CI/Build]   | There is NO WARRANTY, to the extent permitted by law.\n[Android CI/Build]   | \n[Android CI/Build]   | Written by John Gilmore and Jay Fenlason.\n[Android CI/Build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_1062424661 -f /tmp/cbc62215-c22e-42e3-ab6a-df3de7ad0819\n[Android CI/Build]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_1062424661/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[Android CI/Build]   \ud83d\udcac  ::debug::Caching tool jdk 8.0.372 x64\n[Android CI/Build]   \ud83d\udcac  ::debug::source dir: /tmp/temp_1062424661/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[Android CI/Build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/8.0.372/x64\n[Android CI/Build]   \ud83d\udcac  ::debug::finished caching tool\n[Android CI/Build]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[Android CI/Build]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[Android CI/Build]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[Android CI/Build]   | writing /home/runneradmin/.m2/settings.xml\n[Android CI/Build]   \u2705  Success - Main set up JDK 1.8\n[Android CI/Build]   \u2699  ::set-env:: JAVA_HOME_8.0.372_x64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[Android CI/Build]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/8.0.372/x64\n[Android CI/Build]   \u2699  ::set-env:: JAVA_HOME_8_0_372_X64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[Android CI/Build]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/8.0.372/x64\n[Android CI/Build]   \u2699  ::set-output:: version=8.0.372\n[Android CI/Build]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/8.0.372/x64/bin\n[Android CI/Build] \u2b50 Run Main Build project\n[Android CI/Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Android CI/Build]   | + GRADLE_OPTS=' -Xms4g -Xmx4g'\n[Android CI/Build]   | + GRADLE_OPTS=' -Xms4g -Xmx4g -XX:+HeapDumpOnOutOfMemoryError'\n[Android CI/Build]   | + GRADLE_OPTS=' -Xms4g -Xmx4g -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.daemon=false'\n[Android CI/Build]   | + GRADLE_OPTS=' -Xms4g -Xmx4g -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2'\n[Android CI/Build]   | + GRADLE_OPTS=' -Xms4g -Xmx4g -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false'\n[Android CI/Build]   | + GRADLE_OPTS=' -Xms4g -Xmx4g -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false -Dkotlin.compiler.execution.strategy=in-process'\n[Android CI/Build]   | + GRADLE_OPTS=' -Xms4g -Xmx4g -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false -Dkotlin.compiler.execution.strategy=in-process -Dfile.encoding=UTF-8'\n[Android CI/Build]   | + export GRADLE_OPTS\n[Android CI/Build]   | ++ find . -name gradlew\n[Android CI/Build]   | + for GRADLEW in `find . -name \"gradlew\"`\n[Android CI/Build]   | ++ dirname ./CrossDeviceRockPaperScissorsKotlin/gradlew\n[Android CI/Build]   | + SAMPLE=./CrossDeviceRockPaperScissorsKotlin\n[Android CI/Build]   | + bash ./CrossDeviceRockPaperScissorsKotlin/gradlew -p ./CrossDeviceRockPaperScissorsKotlin -Pci --no-parallel --stacktrace assembleDebug\n[Android CI/Build]   | Downloading https://services.gradle.org/distributions/gradle-7.3.3-bin.zip\n[Android CI/Build]   \u274c  Failure - Main Build project\n[Android CI/Build] Error response from daemon: Could not find the file /var/run/act/workflow/pathcmd.txt in container 442af76d8b6810d237686b343447fa85675933be33c7f20697f9dd93e7ea0965\n[Android CI/Build] \u2b50 Run Post set up JDK 1.8\n[Android CI/Build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[Android CI/Build]   \u274c  Failure - Post set up JDK 1.8\n[Android CI/Build] failed to remove container: Error response from daemon: No such container: 442af76d8b6810d237686b343447fa85675933be33c7f20697f9dd93e7ea0965\n[Android CI/Build] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Error occurred running finally: Error occurred running finally: Error occurred running finally: Error occurred running finally: Error response from daemon: No such container: 442af76d8b6810d237686b343447fa85675933be33c7f20697f9dd93e7ea0965 (original error: <nil>) (original error: <nil>) (original error: <nil>) (original error: <nil>)\n",
        "workflow": "/tmp/569e0364-0b80-11ee-a890-af2cc187fc11/android-connectivity-samples/.github/workflows/android-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 35.253952980041504
    }
}