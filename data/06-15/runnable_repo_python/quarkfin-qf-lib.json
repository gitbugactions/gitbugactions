{
    "repository": "quarkfin/qf-lib",
    "stars": 327,
    "language": "python",
    "size": 136289,
    "clone_url": "https://github.com/quarkfin/qf-lib.git",
    "timestamp": "2023-06-16T13:44:46.669452Z",
    "clone_success": true,
    "number of actions": 0,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "number_of_actions": 2,
    "actions_build_tools": [
        "pytest",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_tests": [
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.test_backtester.TestBacktester",
            "name": "test_backtester_with_buy_and_hold_strategy",
            "time": 6.053,
            "results": [
                {
                    "result": "Skipped",
                    "message": "No Bloomberg connection",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.test_initial_risk_stats.TestInitialRiskStatsFactory",
            "name": "test_make_scenarios",
            "time": 0.081,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.test_scenarios_generator.TestScenariosGenerator",
            "name": "test_make_exposure_scenarios__daily",
            "time": 0.02,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.test_scenarios_generator.TestScenariosGenerator",
            "name": "test_make_exposure_scenarios__daily_2",
            "time": 0.004,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.test_scenarios_generator.TestScenariosGenerator",
            "name": "test_make_exposure_scenarios__intraday",
            "time": 0.004,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.test_scenarios_generator.TestScenariosGenerator",
            "name": "test_make_exposure_scenarios__no_time_in_the_market",
            "time": 0.003,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.test_scenarios_generator.TestScenariosGenerator",
            "name": "test_make_exposure_scenarios__no_time_out_of_the_market",
            "time": 0.003,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.test_scenarios_generator.TestScenariosGenerator",
            "name": "test_make_exposure_scenarios_with_trades_reduction__daily",
            "time": 0.004,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.test_scenarios_generator.TestScenariosGenerator",
            "name": "test_make_scenarios",
            "time": 0.03,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.alpha_model_strategy_testers.test_alpha_model_for_limiting_open_positions.TestAlphaModelPositionsLimit",
            "name": "test_limiting_open_positions_1_position",
            "time": 0.55,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.alpha_model_strategy_testers.test_alpha_model_for_limiting_open_positions.TestAlphaModelPositionsLimit",
            "name": "test_limiting_open_positions_2_position",
            "time": 0.548,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.alpha_model_strategy_testers.test_alpha_model_strategy_for_stop_losses.TestAlphaModelStrategy",
            "name": "test_stop_losses",
            "time": 2.667,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.alpha_model_strategy_testers.test_alpha_model_strategy_for_stop_losses_intraday.TestAlphaModelStrategy",
            "name": "test_stop_losses",
            "time": 2.877,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.alpha_model_strategy_testers.test_alpha_model_strategy_for_stop_losses_intraday.TestAlphaModelIntradayStrategy",
            "name": "test_stop_losses",
            "time": 212.812,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.alpha_model_strategy_testers.test_fast_alpha_models_tester.TestFastAlphaModelsTester",
            "name": "test_alpha_models_tester",
            "time": 0.206,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.data_handler.test_data_handler.TestDataHandler",
            "name": "test_get_history_when_end_date_is_in_the_past",
            "time": 6.094,
            "results": [
                {
                    "result": "Skipped",
                    "message": "No Bloomberg connection",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.data_handler.test_data_handler.TestDataHandler",
            "name": "test_get_history_when_end_date_is_today_after_market_close",
            "time": 6.025,
            "results": [
                {
                    "result": "Skipped",
                    "message": "No Bloomberg connection",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.data_handler.test_data_handler.TestDataHandler",
            "name": "test_get_history_when_end_date_is_today_before_market_close",
            "time": 6.032,
            "results": [
                {
                    "result": "Skipped",
                    "message": "No Bloomberg connection",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.data_handler.test_data_handler.TestDataHandler",
            "name": "test_get_history_when_end_date_is_tomorrow",
            "time": 6.02,
            "results": [
                {
                    "result": "Skipped",
                    "message": "No Bloomberg connection",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.data_handler.test_data_handler.TestDataHandler",
            "name": "test_get_history_with_multiple_tickers",
            "time": 6.026,
            "results": [
                {
                    "result": "Skipped",
                    "message": "No Bloomberg connection",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.data_handler.test_data_handler.TestDataHandler",
            "name": "test_get_last_price_single_ticker",
            "time": 6.107,
            "results": [
                {
                    "result": "Skipped",
                    "message": "No Bloomberg connection",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.data_handler.test_data_handler.TestDataHandler",
            "name": "test_get_last_price_with_empty_tickers_list",
            "time": 6.094,
            "results": [
                {
                    "result": "Skipped",
                    "message": "No Bloomberg connection",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.data_handler.test_data_handler.TestDataHandler",
            "name": "test_get_last_price_with_multiple_tickers_when_current_data_is_unavailable",
            "time": 6.043,
            "results": [
                {
                    "result": "Skipped",
                    "message": "No Bloomberg connection",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.data_handler.test_data_handler.TestDataHandler",
            "name": "test_get_open_price_when_end_date_is_today_before_market_close__multiple_tickers",
            "time": 6.223,
            "results": [
                {
                    "result": "Skipped",
                    "message": "No Bloomberg connection",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.data_handler.test_data_handler.TestDataHandler",
            "name": "test_get_open_price_when_end_date_is_today_before_market_close__single_ticker",
            "time": 6.009,
            "results": [
                {
                    "result": "Skipped",
                    "message": "No Bloomberg connection",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.data_handler.test_data_handler.TestDataHandler",
            "name": "test_get_price_when_end_date_is_in_the_past",
            "time": 6.058,
            "results": [
                {
                    "result": "Skipped",
                    "message": "No Bloomberg connection",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.data_handler.test_data_handler.TestDataHandler",
            "name": "test_get_price_when_end_date_is_today_after_market_close",
            "time": 6.051,
            "results": [
                {
                    "result": "Skipped",
                    "message": "No Bloomberg connection",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.data_handler.test_data_handler.TestDataHandler",
            "name": "test_get_price_when_end_date_is_today_before_market_close",
            "time": 6.009,
            "results": [
                {
                    "result": "Skipped",
                    "message": "No Bloomberg connection",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.data_handler.test_data_handler.TestDataHandler",
            "name": "test_get_price_when_end_date_is_tomorrow",
            "time": 6.028,
            "results": [
                {
                    "result": "Skipped",
                    "message": "No Bloomberg connection",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.data_handler.test_data_handler.TestDataHandler",
            "name": "test_historical_price_many_tickers_many_fields",
            "time": 6.013,
            "results": [
                {
                    "result": "Skipped",
                    "message": "No Bloomberg connection",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.data_handler.test_data_handler.TestDataHandler",
            "name": "test_historical_price_many_tickers_one_field",
            "time": 6.011,
            "results": [
                {
                    "result": "Skipped",
                    "message": "No Bloomberg connection",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "qf_lib.tests.integration_tests.backtesting.events.test_event_management.TestEventManagement",
            "name": "test_event_management",
            "time": 0.008,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        }
    ]
}