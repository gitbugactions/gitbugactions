{
    "repository": "nchammas/flintrock",
    "stars": 626,
    "language": "python",
    "size": 771,
    "clone_url": "https://github.com/nchammas/flintrock.git",
    "timestamp": "2023-06-16T11:32:58.782458Z",
    "clone_success": true,
    "number of actions": 0,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "number_of_actions": 2,
    "actions_build_tools": [
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_tests": [
        {
            "classname": "tests.test_acceptance",
            "name": "test_describe_stopped_cluster",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_stop_stopped_cluster",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_try_launching_duplicate_stopped_cluster",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_start_running_cluster[OrderedDict([('instance_type', 't3.small'), ('restarted', False), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_try_launching_duplicate_cluster[OrderedDict([('instance_type', 't3.small'), ('restarted', False), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_describe_running_cluster[OrderedDict([('instance_type', 't3.small'), ('restarted', False), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_run_command_on_running_cluster[OrderedDict([('instance_type', 't3.small'), ('restarted', False), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_copy_file_on_running_cluster[OrderedDict([('instance_type', 't3.small'), ('restarted', False), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_hdfs_on_running_cluster[OrderedDict([('instance_type', 't3.small'), ('restarted', False), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_spark_on_running_cluster[OrderedDict([('instance_type', 't3.small'), ('restarted', False), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_start_running_cluster[OrderedDict([('instance_type', 't3.small'), ('restarted', True), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_try_launching_duplicate_cluster[OrderedDict([('instance_type', 't3.small'), ('restarted', True), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_describe_running_cluster[OrderedDict([('instance_type', 't3.small'), ('restarted', True), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_run_command_on_running_cluster[OrderedDict([('instance_type', 't3.small'), ('restarted', True), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_copy_file_on_running_cluster[OrderedDict([('instance_type', 't3.small'), ('restarted', True), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_hdfs_on_running_cluster[OrderedDict([('instance_type', 't3.small'), ('restarted', True), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_spark_on_running_cluster[OrderedDict([('instance_type', 't3.small'), ('restarted', True), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_start_running_cluster[OrderedDict([('instance_type', 'm5.large'), ('restarted', False), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_try_launching_duplicate_cluster[OrderedDict([('instance_type', 'm5.large'), ('restarted', False), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_describe_running_cluster[OrderedDict([('instance_type', 'm5.large'), ('restarted', False), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_run_command_on_running_cluster[OrderedDict([('instance_type', 'm5.large'), ('restarted', False), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_copy_file_on_running_cluster[OrderedDict([('instance_type', 'm5.large'), ('restarted', False), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_hdfs_on_running_cluster[OrderedDict([('instance_type', 'm5.large'), ('restarted', False), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_spark_on_running_cluster[OrderedDict([('instance_type', 'm5.large'), ('restarted', False), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_start_running_cluster[OrderedDict([('instance_type', 'm5.large'), ('restarted', True), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_try_launching_duplicate_cluster[OrderedDict([('instance_type', 'm5.large'), ('restarted', True), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_describe_running_cluster[OrderedDict([('instance_type', 'm5.large'), ('restarted', True), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_run_command_on_running_cluster[OrderedDict([('instance_type', 'm5.large'), ('restarted', True), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_copy_file_on_running_cluster[OrderedDict([('instance_type', 'm5.large'), ('restarted', True), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_hdfs_on_running_cluster[OrderedDict([('instance_type', 'm5.large'), ('restarted', True), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_spark_on_running_cluster[OrderedDict([('instance_type', 'm5.large'), ('restarted', True), ('spark_git_commit', ''), ('spark_version', '3.3.0')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_start_running_cluster[OrderedDict([('instance_type', 'm5.xlarge'), ('restarted', True), ('spark_git_commit', 'de351e30a90dd988b133b3d00fa6218bfcaba8b8'), ('spark_version', '')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_try_launching_duplicate_cluster[OrderedDict([('instance_type', 'm5.xlarge'), ('restarted', True), ('spark_git_commit', 'de351e30a90dd988b133b3d00fa6218bfcaba8b8'), ('spark_version', '')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_describe_running_cluster[OrderedDict([('instance_type', 'm5.xlarge'), ('restarted', True), ('spark_git_commit', 'de351e30a90dd988b133b3d00fa6218bfcaba8b8'), ('spark_version', '')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_run_command_on_running_cluster[OrderedDict([('instance_type', 'm5.xlarge'), ('restarted', True), ('spark_git_commit', 'de351e30a90dd988b133b3d00fa6218bfcaba8b8'), ('spark_version', '')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_copy_file_on_running_cluster[OrderedDict([('instance_type', 'm5.xlarge'), ('restarted', True), ('spark_git_commit', 'de351e30a90dd988b133b3d00fa6218bfcaba8b8'), ('spark_version', '')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_hdfs_on_running_cluster[OrderedDict([('instance_type', 'm5.xlarge'), ('restarted', True), ('spark_git_commit', 'de351e30a90dd988b133b3d00fa6218bfcaba8b8'), ('spark_version', '')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_spark_on_running_cluster[OrderedDict([('instance_type', 'm5.xlarge'), ('restarted', True), ('spark_git_commit', 'de351e30a90dd988b133b3d00fa6218bfcaba8b8'), ('spark_version', '')])]",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_operations_against_non_existent_cluster",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_operations_against_stopped_cluster",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_acceptance",
            "name": "test_launch_with_bad_ami",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_core",
            "name": "test_templates[]",
            "time": 0.003,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_core",
            "name": "test_templates[3.3.0]",
            "time": 0.002,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_core",
            "name": "test_templates[a28880f3b9c63d86368bcd6cbbaa6a9af7075409]",
            "time": 0.002,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_ec2",
            "name": "test_validate_tags",
            "time": 0.002,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_flintrock",
            "name": "test_option_name_to_variable_name_conversions",
            "time": 0.001,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_flintrock",
            "name": "test_option_requires",
            "time": 0.001,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_flintrock",
            "name": "test_option_requires_conditional_value",
            "time": 0.001,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_flintrock",
            "name": "test_mutually_exclusive",
            "time": 0.001,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_flintrock",
            "name": "test_get_latest_commit",
            "time": 0.655,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_flintrock",
            "name": "test_validate_valid_download_source",
            "time": 2.025,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_flintrock",
            "name": "test_validate_invalid_download_source",
            "time": 0.136,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_pyinstaller_packaging",
            "name": "test_pyinstaller_flintrock_help",
            "time": 44.675,
            "results": [
                {
                    "result": "Failure",
                    "message": "AssertionError: assert 1 == 0\n +  where 1 = CompletedProcess(args='\\n        export LANG=en_US.UTF-8\\n        ./dist/flintrock/flintrock\\n        ', returncode=1).returncode",
                    "type": null
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_pyinstaller_packaging",
            "name": "test_pyinstaller_flintrock_describe",
            "time": 0.001,
            "results": [
                {
                    "result": "Skipped",
                    "message": "USE_AWS_CREDENTIALS not set",
                    "type": "pytest.skip"
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_scripts",
            "name": "test_download_package",
            "time": 0.293,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_static",
            "name": "test_code_compiles",
            "time": 0.016,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_static",
            "name": "test_flake8",
            "time": 1.73,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_static",
            "name": "test_config_template_is_valid",
            "time": 0.028,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_util",
            "name": "test_duration_to_timedelta",
            "time": 0.002,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_util",
            "name": "test_duration_to_expiration",
            "time": 0.116,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "tests.test_util",
            "name": "test_spark_hadoop_build_version",
            "time": 0.001,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        }
    ]
}