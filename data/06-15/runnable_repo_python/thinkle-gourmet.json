{
    "repository": "thinkle/gourmet",
    "stars": 341,
    "language": "python",
    "size": 146766,
    "clone_url": "https://github.com/thinkle/gourmet.git",
    "timestamp": "2023-06-16T10:37:28.500410Z",
    "clone_success": true,
    "number of actions": 0,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "number_of_actions": 3,
    "actions_build_tools": [
        "pytest",
        "unknown",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_tests": [
        {
            "classname": "gourmet.tests.test_allrecipes_com_plugin.TestAllRecipesPlugin",
            "name": "test_parse",
            "time": 1.143,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_allrecipes_com_plugin.TestAllRecipesPlugin",
            "name": "test_url",
            "time": 0.002,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_convert.ConvertTest",
            "name": "testAdjustments",
            "time": 0.029,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_convert.ConvertTest",
            "name": "testDensity",
            "time": 0.0,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_convert.ConvertTest",
            "name": "testEqual",
            "time": 0.0,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_convert.ConvertTest",
            "name": "testFractToFloat",
            "time": 0.001,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_convert.ConvertTest",
            "name": "testFractionGenerator",
            "time": 0.001,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_convert.ConvertTest",
            "name": "testIntegerRounding",
            "time": 0.0,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_convert.ConvertTest",
            "name": "testReadability",
            "time": 0.001,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_convert.ConvertTest",
            "name": "test_ingmatcher",
            "time": 0.001,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_db.testRecBasics",
            "name": "runTest",
            "time": 0.315,
            "results": [
                {
                    "result": "Failure",
                    "message": "sqlalchemy.exc.ArgumentError: expected schema argument to be a string, got <class 'sqlalchemy.engine.base.Engine'>.",
                    "type": null
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_db.testIngBasics",
            "name": "testAddIngs",
            "time": 0.004,
            "results": [
                {
                    "result": "Failure",
                    "message": "sqlalchemy.exc.ArgumentError: expected schema argument to be a string, got <class 'sqlalchemy.engine.base.Engine'>.",
                    "type": null
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_db.testIngBasics",
            "name": "testUnique",
            "time": 0.003,
            "results": [
                {
                    "result": "Failure",
                    "message": "sqlalchemy.exc.ArgumentError: expected schema argument to be a string, got <class 'sqlalchemy.engine.base.Engine'>.",
                    "type": null
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_db.testSearch",
            "name": "runTest",
            "time": 0.003,
            "results": [
                {
                    "result": "Failure",
                    "message": "sqlalchemy.exc.ArgumentError: expected schema argument to be a string, got <class 'sqlalchemy.engine.base.Engine'>.",
                    "type": null
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_db.testUnicode",
            "name": "runTest",
            "time": 0.003,
            "results": [
                {
                    "result": "Failure",
                    "message": "sqlalchemy.exc.ArgumentError: expected schema argument to be a string, got <class 'sqlalchemy.engine.base.Engine'>.",
                    "type": null
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_db.testIDReservation",
            "name": "runTest",
            "time": 0.002,
            "results": [
                {
                    "result": "Failure",
                    "message": "sqlalchemy.exc.ArgumentError: expected schema argument to be a string, got <class 'sqlalchemy.engine.base.Engine'>.",
                    "type": null
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_db.TestMoreDataStuff",
            "name": "test_image_data",
            "time": 0.002,
            "results": [
                {
                    "result": "Failure",
                    "message": "sqlalchemy.exc.ArgumentError: expected schema argument to be a string, got <class 'sqlalchemy.engine.base.Engine'>.",
                    "type": null
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_db.TestMoreDataStuff",
            "name": "test_modify_ing",
            "time": 0.002,
            "results": [
                {
                    "result": "Failure",
                    "message": "sqlalchemy.exc.ArgumentError: expected schema argument to be a string, got <class 'sqlalchemy.engine.base.Engine'>.",
                    "type": null
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_db.TestMoreDataStuff",
            "name": "test_modify_rec",
            "time": 0.002,
            "results": [
                {
                    "result": "Failure",
                    "message": "sqlalchemy.exc.ArgumentError: expected schema argument to be a string, got <class 'sqlalchemy.engine.base.Engine'>.",
                    "type": null
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_db.TestMoreDataStuff",
            "name": "test_update",
            "time": 0.002,
            "results": [
                {
                    "result": "Failure",
                    "message": "sqlalchemy.exc.ArgumentError: expected schema argument to be a string, got <class 'sqlalchemy.engine.base.Engine'>.",
                    "type": null
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_epicurious_plugin.TestEpicuriousPlugin",
            "name": "test_parse",
            "time": 0.032,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_epicurious_plugin.TestEpicuriousPlugin",
            "name": "test_url",
            "time": 0.001,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_foodnetwork_plugin.TestFoodnetworkPlugin",
            "name": "test_parse",
            "time": 0.057,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_foodnetwork_plugin.TestFoodnetworkPlugin",
            "name": "test_url",
            "time": 0.001,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_ica_se_plugin.TestIcaPlugin",
            "name": "test_parse",
            "time": 0.089,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_ica_se_plugin.TestIcaPlugin",
            "name": "test_url",
            "time": 0.001,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_image_utils",
            "name": "test_make_thumbnail",
            "time": 0.026,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_image_utils",
            "name": "test_image_utils",
            "time": 0.001,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_image_utils",
            "name": "test_bytes_to_pixbuf",
            "time": 0.004,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_image_utils",
            "name": "test_pixbuf_to_image",
            "time": 0.001,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_image_utils",
            "name": "test_image_to_pixbuf",
            "time": 0.001,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_importer.TestImporter",
            "name": "testIngredientImport",
            "time": 0.002,
            "results": [
                {
                    "result": "Failure",
                    "message": "sqlalchemy.exc.ArgumentError: expected schema argument to be a string, got <class 'sqlalchemy.engine.base.Engine'>.",
                    "type": null
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_importer.TestImporter",
            "name": "testRecImport",
            "time": 0.002,
            "results": [
                {
                    "result": "Failure",
                    "message": "sqlalchemy.exc.ArgumentError: expected schema argument to be a string, got <class 'sqlalchemy.engine.base.Engine'>.",
                    "type": null
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_nytimes_plugin.TestNytimesPlugin",
            "name": "test_parse",
            "time": 0.079,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_nytimes_plugin.TestNytimesPlugin",
            "name": "test_url",
            "time": 0.001,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_pango_html",
            "name": "test_convert_colors_to_html",
            "time": 0.0,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_pango_html",
            "name": "test_pango_markup_to_html",
            "time": 0.004,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_pango_html",
            "name": "test_unsupported_pango_attributes",
            "time": 0.001,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_prefs",
            "name": "test_singleton",
            "time": 0.0,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_prefs",
            "name": "test_get_sets_default",
            "time": 0.0,
            "results": [
                {
                    "result": "Passed",
                    "message": "",
                    "type": ""
                }
            ],
            "stdout": null,
            "stderr": null
        },
        {
            "classname": "gourmet.tests.test_reccard",
            "name": "test_reccard",
            "time": 0.158,
            "results": [
                {
                    "result": "Failure",
                    "message": "sqlalchemy.exc.ArgumentError: expected schema argument to be a string, got <class 'sqlalchemy.engine.base.Engine'>.",
                    "type": null
                }
            ],
            "stdout": null,
            "stderr": null
        }
    ]
}