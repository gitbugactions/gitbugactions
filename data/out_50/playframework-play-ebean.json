{
    "repository": "playframework/play-ebean",
    "clone_url": "https://github.com/playframework/play-ebean.git",
    "timestamp": "2023-05-28T18:29:22.003406Z",
    "clone_success": true,
    "number of actions": 4,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Check/Docs                ]   \u2601  git clone 'https://github.com/playframework/.github' # ref=v3\n[Check/Binary Compatibility]   \u2601  git clone 'https://github.com/playframework/.github' # ref=v3\n[check-docs/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix] \ud83d\ude80  Start image=node:16-buster-slim\n[check-docs/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix]   \ud83d\udc33  docker pull image=node:16-buster-slim platform= username= forcePull=false\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11] \ud83d\ude80  Start image=node:16-buster-slim\n[check-code-style/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix] \ud83d\ude80  Start image=node:16-buster-slim\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \ud83d\udc33  docker pull image=node:16-buster-slim platform= username= forcePull=false\n[check-code-style/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix]   \ud83d\udc33  docker pull image=node:16-buster-slim platform= username= forcePull=false\n[check-docs/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix]   \ud83d\udc33  docker create image=node:16-buster-slim platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[check-code-style/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix]   \ud83d\udc33  docker create image=node:16-buster-slim platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \ud83d\udc33  docker create image=node:16-buster-slim platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \ud83d\udc33  docker run image=node:16-buster-slim platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[check-code-style/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix]   \ud83d\udc33  docker run image=node:16-buster-slim platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[check-docs/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix]   \ud83d\udc33  docker run image=node:16-buster-slim platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \ud83d\udc33  docker exec cmd=[chown -R 1012:0 /tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/playframework-play-ebean] user=0 workdir=\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \u2601  git clone 'https://github.com/actions/checkout' # ref=v3\n[check-docs/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix]   \ud83d\udc33  docker exec cmd=[chown -R 1012:0 /tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/playframework-play-ebean] user=0 workdir=\n[check-code-style/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix]   \ud83d\udc33  docker exec cmd=[chown -R 1012:0 /tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/playframework-play-ebean] user=0 workdir=\n[check-code-style/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix] \u2b50 Run Main add_dimensions=$(echo -n '{}' | sed 's/^.*{//;s/}.*$//') # Remove leading { and trailing }\n# input java/scala | replace whitespaces/commas/quotes by newline | drop empty | quotation | join by comma\njava=$(echo -n '11' | sed 's/[[:blank:],\"]\\+/\\n/g' | awk NF | sed 's/^..*$/\"&\"/' | sed ':a; N; $!ba; s/\\n/,/g')\nscala=$(echo -n '' | sed 's/[[:blank:],\"]\\+/\\n/g' | awk NF | sed 's/^..*$/\"&\"/' | sed ':a; N; $!ba; s/\\n/,/g')\nmatrix=\"{\"\nmatrix+=\"\\\"java\\\": [$java],\"\n[[ ! -z \"$scala\" ]] && matrix+=\"\\\"scala\\\": [$scala],\"\nmatrix+=\"$(echo ${add_dimensions:+$add_dimensions,})\"\nmatrix+=\"\\\"include\\\":$(echo -n '[]'),\"\nmatrix+=\"\\\"exclude\\\":$(echo -n '[]')\"\nmatrix+=\"}\"\n# Cleanup JSON (no unnecessary whitespaces, etc.)\nmatrix=$(jq -n -c \"$matrix\")\necho $matrix\necho \"matrix=$matrix\" >> $GITHUB_OUTPUT\n[check-docs/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix] \u2b50 Run Main add_dimensions=$(echo -n '{}' | sed 's/^.*{//;s/}.*$//') # Remove leading { and trailing }\n# input java/scala | replace whitespaces/commas/quotes by newline | drop empty | quotation | join by comma\njava=$(echo -n '17, 11' | sed 's/[[:blank:],\"]\\+/\\n/g' | awk NF | sed 's/^..*$/\"&\"/' | sed ':a; N; $!ba; s/\\n/,/g')\nscala=$(echo -n '2.13.x, 3.x' | sed 's/[[:blank:],\"]\\+/\\n/g' | awk NF | sed 's/^..*$/\"&\"/' | sed ':a; N; $!ba; s/\\n/,/g')\nmatrix=\"{\"\nmatrix+=\"\\\"java\\\": [$java],\"\n[[ ! -z \"$scala\" ]] && matrix+=\"\\\"scala\\\": [$scala],\"\nmatrix+=\"$(echo ${add_dimensions:+$add_dimensions,})\"\nmatrix+=\"\\\"include\\\":$(echo -n '[]'),\"\nmatrix+=\"\\\"exclude\\\":$(echo -n '[]')\"\nmatrix+=\"}\"\n# Cleanup JSON (no unnecessary whitespaces, etc.)\nmatrix=$(jq -n -c \"$matrix\")\necho $matrix\necho \"matrix=$matrix\" >> $GITHUB_OUTPUT\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \u2601  git clone 'https://github.com/coursier/cache-action' # ref=v6\n[check-code-style/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/prepare-matrix] user= workdir=\n[check-docs/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/prepare-matrix] user= workdir=\n[check-code-style/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix]   | /var/run/act/workflow/prepare-matrix: line 14: jq: command not found\n[check-code-style/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix]   \u274c  Failure - Main add_dimensions=$(echo -n '{}' | sed 's/^.*{//;s/}.*$//') # Remove leading { and trailing }\n# input java/scala | replace whitespaces/commas/quotes by newline | drop empty | quotation | join by comma\njava=$(echo -n '11' | sed 's/[[:blank:],\"]\\+/\\n/g' | awk NF | sed 's/^..*$/\"&\"/' | sed ':a; N; $!ba; s/\\n/,/g')\nscala=$(echo -n '' | sed 's/[[:blank:],\"]\\+/\\n/g' | awk NF | sed 's/^..*$/\"&\"/' | sed ':a; N; $!ba; s/\\n/,/g')\nmatrix=\"{\"\nmatrix+=\"\\\"java\\\": [$java],\"\n[[ ! -z \"$scala\" ]] && matrix+=\"\\\"scala\\\": [$scala],\"\nmatrix+=\"$(echo ${add_dimensions:+$add_dimensions,})\"\nmatrix+=\"\\\"include\\\":$(echo -n '[]'),\"\nmatrix+=\"\\\"exclude\\\":$(echo -n '[]')\"\nmatrix+=\"}\"\n# Cleanup JSON (no unnecessary whitespaces, etc.)\nmatrix=$(jq -n -c \"$matrix\")\necho $matrix\necho \"matrix=$matrix\" >> $GITHUB_OUTPUT\n[check-docs/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix]   | /var/run/act/workflow/prepare-matrix: line 14: jq: command not found\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \u2601  git clone 'https://github.com/coursier/setup-action' # ref=v1\n[check-docs/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix]   \u274c  Failure - Main add_dimensions=$(echo -n '{}' | sed 's/^.*{//;s/}.*$//') # Remove leading { and trailing }\n# input java/scala | replace whitespaces/commas/quotes by newline | drop empty | quotation | join by comma\njava=$(echo -n '17, 11' | sed 's/[[:blank:],\"]\\+/\\n/g' | awk NF | sed 's/^..*$/\"&\"/' | sed ':a; N; $!ba; s/\\n/,/g')\nscala=$(echo -n '2.13.x, 3.x' | sed 's/[[:blank:],\"]\\+/\\n/g' | awk NF | sed 's/^..*$/\"&\"/' | sed ':a; N; $!ba; s/\\n/,/g')\nmatrix=\"{\"\nmatrix+=\"\\\"java\\\": [$java],\"\n[[ ! -z \"$scala\" ]] && matrix+=\"\\\"scala\\\": [$scala],\"\nmatrix+=\"$(echo ${add_dimensions:+$add_dimensions,})\"\nmatrix+=\"\\\"include\\\":$(echo -n '[]'),\"\nmatrix+=\"\\\"exclude\\\":$(echo -n '[]')\"\nmatrix+=\"}\"\n# Cleanup JSON (no unnecessary whitespaces, etc.)\nmatrix=$(jq -n -c \"$matrix\")\necho $matrix\necho \"matrix=$matrix\" >> $GITHUB_OUTPUT\n[check-docs/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[check-code-style/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[check-docs/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix] \ud83c\udfc1  Job failed\n[check-code-style/Command with a default JVM, coursier caching and an optional matrix/Prepare Matrix] \ud83c\udfc1  Job failed\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11] \u2b50 Run Main Checkout\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-checkout@v3/ dst=/var/run/act/actions/actions-checkout@v3/\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \ud83d\udc33  docker exec cmd=[chown -R 1012:0 /var/run/act/actions/actions-checkout@v3/] user=0 workdir=\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-checkout@v3/dist/index.js] user= workdir=\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \ud83d\udcac  ::debug::GITHUB_WORKSPACE = '/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/playframework-play-ebean'\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \ud83d\udcac  ::debug::qualified repository = 'playframework/play-ebean'\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \ud83d\udcac  ::debug::ref = 'refs/heads/main'\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \ud83d\udcac  ::debug::commit = 'cb5070850d28a126596b033f3a9b9b67096c9672'\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \ud83d\udcac  ::debug::clean = true\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \ud83d\udcac  ::debug::fetch depth = 0\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \ud83d\udcac  ::debug::lfs = false\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \ud83d\udcac  ::debug::submodules = false\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \ud83d\udcac  ::debug::recursive submodules = false\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \u2757  ::error::Input required and not supplied: token\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \u274c  Failure - Main Checkout\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11] exitcode '1': failure\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11] \u2b50 Run Post Checkout\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-checkout@v3/dist/index.js] user= workdir=\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11]   \u2705  Success - Post Checkout\n[check-binary-compatibility/Validate Binary Compatibility/JDK 11] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "time=\"2023-05-28T20:29:41+02:00\" level=error msg=\"Error while evaluating matrix: Invalid JSON: unexpected end of JSON input\"\ntime=\"2023-05-28T20:29:41+02:00\" level=error msg=\"Error while evaluating matrix: Invalid JSON: unexpected end of JSON input\"\nError: Job 'Prepare Matrix' failed\n"
}