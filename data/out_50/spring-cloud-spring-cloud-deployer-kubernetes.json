{
    "repository": "spring-cloud/spring-cloud-deployer-kubernetes",
    "clone_url": "https://github.com/spring-cloud/spring-cloud-deployer-kubernetes.git",
    "timestamp": "2023-05-28T19:13:06.780399Z",
    "clone_success": true,
    "number of actions": 9,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/build] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/spring-cloud-spring-cloud-deployer-kubernetes] user=0 workdir=\n[CI/build]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[CI/build]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[CI/build] Non-terminating error while running 'git clone': some refs were not updated\n[CI/build]   \u2601  git clone 'https://github.com/jvalkeal/setup-maven' # ref=v1\n[CI/build]   \u2601  git clone 'https://github.com/jfrog/setup-jfrog-cli' # ref=v1\n[CI/build]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v3\n[CI/build] \u2b50 Run Main actions/checkout@v2\n[CI/build]   \u2705  Success - Main actions/checkout@v2\n[CI/build] \u2b50 Run Main actions/cache@v2\n[CI/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[CI/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[CI/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[CI/build]   \ud83d\udcac  ::debug::Resolved Keys:\n[CI/build]   \ud83d\udcac  ::debug::[\"Linux-m2-446979a2425f923d2567098cea95c79ab1f578bc8ee7debdfb52d2a1a2983c0f\",\"Linux-m2-\"]\n[CI/build]   \ud83d\udcac  ::debug::Checking zstd --version\n[CI/build]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[CI/build]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/build]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/build]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[CI/build]   \u2705  Success - Main actions/cache@v2\n[CI/build]   \u2699  ::set-output:: cache-hit=false\n[CI/build] \u2b50 Run Main actions/setup-java@v1\n[CI/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[CI/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[CI/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[CI/build]   \ud83d\udcac  ::debug::isExplicit: \n[CI/build]   \ud83d\udcac  ::debug::explicit? false\n[CI/build]   \ud83d\udcac  ::debug::evaluating 0 versions\n[CI/build]   \ud83d\udcac  ::debug::match not found\n[CI/build]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[CI/build]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[CI/build]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu8.70.0.23-ca-jdk8.0.372-linux_x64.tar.gz\n[CI/build]   \ud83d\udcac  ::debug::Downloading /tmp/91396ff1-88da-4bd9-9985-c638e8929ea9\n[CI/build]   \ud83d\udcac  ::debug::download complete\n[CI/build]   | [command]/usr/bin/tar --version\n[CI/build]   | tar (GNU tar) 1.30\n[CI/build]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[CI/build]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[CI/build]   | This is free software: you are free to change and redistribute it.\n[CI/build]   | There is NO WARRANTY, to the extent permitted by law.\n[CI/build]   | \n[CI/build]   | Written by John Gilmore and Jay Fenlason.\n[CI/build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_535464977 -f /tmp/91396ff1-88da-4bd9-9985-c638e8929ea9\n[CI/build]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_535464977/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[CI/build]   \ud83d\udcac  ::debug::Caching tool jdk 8.0.372 x64\n[CI/build]   \ud83d\udcac  ::debug::source dir: /tmp/temp_535464977/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[CI/build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/8.0.372/x64\n[CI/build]   \ud83d\udcac  ::debug::finished caching tool\n[CI/build]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[CI/build]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[CI/build]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[CI/build]   | writing /home/runneradmin/.m2/settings.xml\n[CI/build]   \u2705  Success - Main actions/setup-java@v1\n[CI/build]   \u2699  ::set-env:: JAVA_HOME_8.0.372_x64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[CI/build]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/8.0.372/x64\n[CI/build]   \u2699  ::set-env:: JAVA_HOME_8_0_372_X64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[CI/build]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/8.0.372/x64\n[CI/build]   \u2699  ::set-output:: version=8.0.372\n[CI/build]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/8.0.372/x64/bin\n[CI/build] \u2b50 Run Main jvalkeal/setup-maven@v1\n[CI/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/jvalkeal-setup-maven@v1/ dst=/var/run/act/actions/jvalkeal-setup-maven@v1/\n[CI/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/jvalkeal-setup-maven@v1/] user=0 workdir=\n[CI/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/jvalkeal-setup-maven@v1/dist/index.js] user= workdir=\n[CI/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.2\n[CI/build]   \ud83d\udcac  ::debug::explicit? true\n[CI/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/maven/3.6.2/x64\n[CI/build]   \ud83d\udcac  ::debug::not found\n[CI/build]   \ud83d\udcac  ::debug::Downloading Maven from Apache Mirror\n[CI/build]   \ud83d\udcac  ::debug::Found refs 3.0.4,3.0.5,3.1.0,3.1.1,3.2.1,3.2.2,3.2.3,3.2.5,3.3.1,3.3.3,3.3.9,3.5.0,3.5.2,3.5.3,3.5.4,3.6.0,3.6.1,3.6.2,3.6.3,3.8.1,3.8.2,3.8.3,3.8.4,3.8.5,3.8.6,3.8.7,3.8.8,3.9.0,3.9.1,3.9.2\n[CI/build]   \ud83d\udcac  ::debug::VersionMap add  3.6.2 3.6.2\n[CI/build]   \ud83d\udcac  ::debug::VersionMap Entry 3.6.2 https://archive.apache.org/dist/maven/maven-3/3.6.2/binaries/apache-maven-3.6.2-bin.tar.gz\n[CI/build]   \ud83d\udcac  ::debug::VersionMap semver gt 3.6.2 https://archive.apache.org/dist/maven/maven-3/3.6.2/binaries/apache-maven-3.6.2-bin.tar.gz\n[CI/build]   \ud83d\udcac  ::debug::Downloading https://archive.apache.org/dist/maven/maven-3/3.6.2/binaries/apache-maven-3.6.2-bin.tar.gz\n[CI/build]   \ud83d\udcac  ::debug::Destination /tmp/65cd74f4-b335-4ee4-8236-eebaefd05b76\n[CI/build]   \ud83d\udcac  ::debug::download complete\n[CI/build]   \ud83d\udcac  ::debug::Checking tar --version\n[CI/build]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[CI/build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_603686907 -f /tmp/65cd74f4-b335-4ee4-8236-eebaefd05b76\n[CI/build]   \ud83d\udcac  ::debug::maven extracted to /tmp/temp_603686907/apache-maven-3.6.2\n[CI/build]   \ud83d\udcac  ::debug::Caching tool maven 3.6.2 x64\n[CI/build]   \ud83d\udcac  ::debug::source dir: /tmp/temp_603686907/apache-maven-3.6.2\n[CI/build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/maven/3.6.2/x64\n[CI/build]   \ud83d\udcac  ::debug::finished caching tool\n[CI/build]   \u2705  Success - Main jvalkeal/setup-maven@v1\n[CI/build]   \u2699  ::set-env:: M2_HOME=/opt/hostedtoolcache/maven/3.6.2/x64\n[CI/build]   \u2699  ::add-path:: /opt/hostedtoolcache/maven/3.6.2/x64/bin\n[CI/build] \u2b50 Run Main jfrog/setup-jfrog-cli@v1\n[CI/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/jfrog-setup-jfrog-cli@v1/ dst=/var/run/act/actions/jfrog-setup-jfrog-cli@v1/\n[CI/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/jfrog-setup-jfrog-cli@v1/] user=0 workdir=\n[CI/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/jfrog-setup-jfrog-cli@v1/lib/main.js] user= workdir=\n[CI/build]   \u2753  ::group::Setup JFrog CLI\n[CI/build]   \ud83d\udcac  ::debug::isExplicit: 1.46.4\n[CI/build]   \ud83d\udcac  ::debug::explicit? true\n[CI/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/jfrog/1.46.4/x64\n[CI/build]   \ud83d\udcac  ::debug::not found\n[CI/build]   \ud83d\udcac  ::debug::Downloading JFrog CLI from https://releases.jfrog.io/artifactory/jfrog-cli/v1/1.46.4/jfrog-cli-linux-amd64/jfrog\n[CI/build]   \ud83d\udcac  ::debug::Downloading https://releases.jfrog.io/artifactory/jfrog-cli/v1/1.46.4/jfrog-cli-linux-amd64/jfrog\n[CI/build]   \ud83d\udcac  ::debug::Destination /tmp/81e3ee11-1dd4-4f95-8ac2-b9844ed5ca94\n[CI/build]   \ud83d\udcac  ::debug::download complete\n[CI/build]   \ud83d\udcac  ::debug::Caching tool jfrog 1.46.4 x64\n[CI/build]   \ud83d\udcac  ::debug::source file: /tmp/81e3ee11-1dd4-4f95-8ac2-b9844ed5ca94\n[CI/build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jfrog/1.46.4/x64\n[CI/build]   \ud83d\udcac  ::debug::destination file /opt/hostedtoolcache/jfrog/1.46.4/x64/jfrog\n[CI/build]   \ud83d\udcac  ::debug::finished caching tool\n[CI/build]   | [command]/opt/hostedtoolcache/jfrog/1.46.4/x64/jfrog c import \n[CI/build]   | [Error] unexpected end of JSON input\n[CI/build]   \u2757  ::error::The process '/opt/hostedtoolcache/jfrog/1.46.4/x64/jfrog' failed with exit code 1\n[CI/build]   \u2753  ::endgroup::\n[CI/build]   \u274c  Failure - Main jfrog/setup-jfrog-cli@v1\n[CI/build]   \u2699  ::set-env:: JFROG_CLI_OFFER_CONFIG=false\n[CI/build]   \u2699  ::set-env:: JFROG_CLI_BUILD_NAME=CI\n[CI/build]   \u2699  ::set-env:: JFROG_CLI_BUILD_NUMBER=1\n[CI/build]   \u2699  ::set-env:: JFROG_CLI_BUILD_URL=https://github.com/spring-cloud/spring-cloud-deployer-kubernetes/actions/runs/1\n[CI/build]   \u2699  ::set-env:: JFROG_CLI_USER_AGENT=setup-jfrog-cli-github-action/1.2.1\n[CI/build]   \u2699  ::set-env:: JFROG_CLI_ENV_EXCLUDE=*password*;*secret*;*key*;*token*;JF_ARTIFACTORY_*\n[CI/build]   \u2699  ::add-path:: /opt/hostedtoolcache/jfrog/1.46.4/x64\n[CI/build] exitcode '1': failure\n[CI/build] \u2b50 Run Main Capture Test Results\n[CI/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-upload-artifact@v3/ dst=/var/run/act/actions/actions-upload-artifact@v3/\n[CI/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-upload-artifact@v3/] user=0 workdir=\n[CI/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-upload-artifact@v3/dist/index.js] user= workdir=\n[CI/build]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[CI/build]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[CI/build]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[CI/build]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[CI/build]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[CI/build]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[CI/build]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[CI/build]   \ud83d\udcac  ::debug::Search path '/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/spring-cloud-spring-cloud-deployer-kubernetes'\n[CI/build]   | No files were found with the provided path: **/target/surefire-reports/**/*.*. No artifacts will be uploaded.\n[CI/build]   \u2705  Success - Main Capture Test Results\n[CI/build] \u2b50 Run Post jfrog/setup-jfrog-cli@v1\n[CI/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/jfrog-setup-jfrog-cli@v1/lib/cleanup.js] user= workdir=\n[CI/build]   \u2753  ::group::Cleanup JFrog CLI servers configuration\n[CI/build]   \ud83d\udcac  ::debug::isExplicit: 1.46.4\n[CI/build]   \ud83d\udcac  ::debug::explicit? true\n[CI/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/jfrog/1.46.4/x64\n[CI/build]   \ud83d\udcac  ::debug::Found tool in cache jfrog 1.46.4 x64\n[CI/build]   | [command]/opt/hostedtoolcache/jfrog/1.46.4/x64/jfrog c rm --quiet\n[CI/build]   \u2753  ::endgroup::\n[CI/build]   \u2705  Success - Post jfrog/setup-jfrog-cli@v1\n[CI/build]   \u2699  ::add-path:: /opt/hostedtoolcache/jfrog/1.46.4/x64\n[CI/build] \u2b50 Run Post actions/setup-java@v1\n[CI/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[CI/build]   \u2705  Success - Post actions/setup-java@v1\n[CI/build] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'build' failed\n"
}