{
    "repository": "jason-lang/jason",
    "clone_url": "https://github.com/jason-lang/jason.git",
    "timestamp": "2023-05-28T19:17:48.076917Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Java CI/build] \ud83d\ude80  Start image=crawlergpt:latest\n[Java CI/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Java CI/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Java CI/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Java CI/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason] user=0 workdir=\n[Java CI/build]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[Java CI/build] Non-terminating error while running 'git clone': some refs were not updated\n[Java CI/build] \u2b50 Run Main actions/checkout@v2\n[Java CI/build]   \u2705  Success - Main actions/checkout@v2\n[Java CI/build] \u2b50 Run Main Set up JDK 17\n[Java CI/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[Java CI/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[Java CI/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[Java CI/build]   \ud83d\udcac  ::debug::isExplicit: \n[Java CI/build]   \ud83d\udcac  ::debug::explicit? false\n[Java CI/build]   \ud83d\udcac  ::debug::evaluating 0 versions\n[Java CI/build]   \ud83d\udcac  ::debug::match not found\n[Java CI/build]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[Java CI/build]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[Java CI/build]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu17.42.21-ca-crac-jdk17.0.7-linux_x64.tar.gz\n[Java CI/build]   \ud83d\udcac  ::debug::Downloading /tmp/58dcfb50-3165-4ec8-8b30-3728da4fec57\n[Java CI/build]   \ud83d\udcac  ::debug::download complete\n[Java CI/build]   | [command]/usr/bin/tar --version\n[Java CI/build]   | tar (GNU tar) 1.30\n[Java CI/build]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[Java CI/build]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[Java CI/build]   | This is free software: you are free to change and redistribute it.\n[Java CI/build]   | There is NO WARRANTY, to the extent permitted by law.\n[Java CI/build]   | \n[Java CI/build]   | Written by John Gilmore and Jay Fenlason.\n[Java CI/build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_1224865871 -f /tmp/58dcfb50-3165-4ec8-8b30-3728da4fec57\n[Java CI/build]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_1224865871/zulu17.42.21-ca-crac-jdk17.0.7-linux_x64\n[Java CI/build]   \ud83d\udcac  ::debug::Caching tool jdk 17.0.7 x64\n[Java CI/build]   \ud83d\udcac  ::debug::source dir: /tmp/temp_1224865871/zulu17.42.21-ca-crac-jdk17.0.7-linux_x64\n[Java CI/build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/17.0.7/x64\n[Java CI/build]   \ud83d\udcac  ::debug::finished caching tool\n[Java CI/build]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[Java CI/build]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[Java CI/build]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[Java CI/build]   | writing /home/runneradmin/.m2/settings.xml\n[Java CI/build]   \u2705  Success - Main Set up JDK 17\n[Java CI/build]   \u2699  ::set-env:: JAVA_HOME_17.0.7_x64=/opt/hostedtoolcache/jdk/17.0.7/x64\n[Java CI/build]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/17.0.7/x64\n[Java CI/build]   \u2699  ::set-env:: JAVA_HOME_17_0_7_X64=/opt/hostedtoolcache/jdk/17.0.7/x64\n[Java CI/build]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/17.0.7/x64\n[Java CI/build]   \u2699  ::set-output:: version=17.0.7\n[Java CI/build]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/17.0.7/x64/bin\n[Java CI/build] \u2b50 Run Main Grant execute permission for gradlew\n[Java CI/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Java CI/build]   \u2705  Success - Main Grant execute permission for gradlew\n[Java CI/build] \u2b50 Run Main Test java\n[Java CI/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Java CI/build]   | Downloading https://services.gradle.org/distributions/gradle-8.0.2-bin.zip\n[Java CI/build]   | ...........10%............20%............30%............40%............50%............60%...........70%............80%............90%............100%\n[Java CI/build]   | \n[Java CI/build]   | Welcome to Gradle 8.0.2!\n[Java CI/build]   | \n[Java CI/build]   | Here are the highlights of this release:\n[Java CI/build]   |  - Improvements to the Kotlin DSL\n[Java CI/build]   |  - Fine-grained parallelism from the first build with configuration cache\n[Java CI/build]   |  - Configurable Gradle user home cache cleanup\n[Java CI/build]   | \n[Java CI/build]   | For more details see https://docs.gradle.org/8.0.2/release-notes.html\n[Java CI/build]   | \n[Java CI/build]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[Java CI/build]   | \n[Java CI/build]   | > Task :jason-interpreter:compileJavacc\n[Java CI/build]   | Java Compiler Compiler Version 6.1_2 (Parser Generator)\n[Java CI/build]   | (type \"javacc\" with no arguments for help)\n[Java CI/build]   | Reading from file /tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/src/main/javacc/jason/mas2j/parser/MAS2JavaParser.jj . . .\n[Java CI/build]   | Warning: Output directory \"/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/generated/javacc/tmp/jason/mas2j/parser\" does not exist. Creating the directory.\n[Java CI/build]   | Note: UNICODE_INPUT option is specified. Please make sure you create the parser/lexer using a Reader with the correct character encoding.\n[Java CI/build]   | File \"TokenMgrError.java\" does not exist.  Will create one.\n[Java CI/build]   | File \"ParseException.java\" does not exist.  Will create one.\n[Java CI/build]   | File \"Token.java\" does not exist.  Will create one.\n[Java CI/build]   | File \"SimpleCharStream.java\" does not exist.  Will create one.\n[Java CI/build]   | Parser generated with 0 errors and 1 warnings.\n[Java CI/build]   | Java Compiler Compiler Version 6.1_2 (Parser Generator)\n[Java CI/build]   | (type \"javacc\" with no arguments for help)\n[Java CI/build]   | Reading from file /tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/src/main/javacc/jason/asSyntax/parser/AS2JavaParser.jj . . .\n[Java CI/build]   | Warning: Output directory \"/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/generated/javacc/tmp/jason/asSyntax/parser\" does not exist. Creating the directory.\n[Java CI/build]   | Note: UNICODE_INPUT option is specified. Please make sure you create the parser/lexer using a Reader with the correct character encoding.\n[Java CI/build]   | Warning: Choice conflict in (...)* construct at line 263, column 9.\n[Java CI/build]   |          Expansion nested within construct and expansion following construct\n[Java CI/build]   |          have common prefixes, one of which is: \"{\"\n[Java CI/build]   |          Consider using a lookahead of 2 or more for nested expansion.\n[Java CI/build]   | Warning: Choice conflict in [...] construct at line 367, column 3.\n[Java CI/build]   |          Expansion nested within construct and expansion following construct\n[Java CI/build]   |          have common prefixes, one of which is: \"{\"\n[Java CI/build]   |          Consider using a lookahead of 2 or more for nested expansion.\n[Java CI/build]   | Warning: Choice conflict in [...] construct at line 645, column 9.\n[Java CI/build]   |          Expansion nested within construct and expansion following construct\n[Java CI/build]   |          have common prefixes, one of which is: \"+\"\n[Java CI/build]   |          Consider using a lookahead of 2 or more for nested expansion.\n[Java CI/build]   | Warning: Choice conflict in [...] construct at line 649, column 13.\n[Java CI/build]   |          Expansion nested within construct and expansion following construct\n[Java CI/build]   |          have common prefixes, one of which is: \"+\"\n[Java CI/build]   |          Consider using a lookahead of 2 or more for nested expansion.\n[Java CI/build]   | Warning: Choice conflict in [...] construct at line 656, column 13.\n[Java CI/build]   |          Expansion nested within construct and expansion following construct\n[Java CI/build]   |          have common prefixes, one of which is: \"+\"\n[Java CI/build]   |          Consider using a lookahead of 2 or more for nested expansion.\n[Java CI/build]   | Warning: Choice conflict involving two expansions at\n[Java CI/build]   |          line 663, column 11 and line 666, column 11 respectively.\n[Java CI/build]   |          A common prefix is: \"(\" \"not\"\n[Java CI/build]   |          Consider using a lookahead of 3 or more for earlier expansion.\n[Java CI/build]   | Warning: Choice conflict involving two expansions at\n[Java CI/build]   |          line 726, column 7 and line 737, column 9 respectively.\n[Java CI/build]   |          A common prefix is: \"+\" <ATOM>\n[Java CI/build]   |          Consider using a lookahead of 3 or more for earlier expansion.\n[Java CI/build]   | Warning: Choice conflict in [...] construct at line 816, column 5.\n[Java CI/build]   |          Expansion nested within construct and expansion following construct\n[Java CI/build]   |          have common prefixes, one of which is: <ATOM>\n[Java CI/build]   |          Consider using a lookahead of 2 or more for nested expansion.\n[Java CI/build]   | File \"TokenMgrError.java\" does not exist.  Will create one.\n[Java CI/build]   | File \"ParseException.java\" does not exist.  Will create one.\n[Java CI/build]   | File \"Token.java\" does not exist.  Will create one.\n[Java CI/build]   | File \"SimpleCharStream.java\" does not exist.  Will create one.\n[Java CI/build]   | Parser generated with 0 errors and 9 warnings.\n[Java CI/build]   | \n[Java CI/build]   | > Task :jason-interpreter:compileJava\n[Java CI/build]   | Note: Some input files use or override a deprecated API.\n[Java CI/build]   | Note: Recompile with -Xlint:deprecation for details.\n[Java CI/build]   | Note: Some input files use unchecked or unsafe operations.\n[Java CI/build]   | Note: Recompile with -Xlint:unchecked for details.\n[Java CI/build]   | \n[Java CI/build]   | > Task :jason-interpreter:processResources\n[Java CI/build]   | > Task :jason-interpreter:classes\n[Java CI/build]   | \n[Java CI/build]   | Note: Some input files use unchecked or unsafe operations.\n[Java CI/build]   | Note: Recompile with -Xlint:unchecked for details.\n[Java CI/build]   | > Task :jason-interpreter:compileTestJava\n[Java CI/build]   | \n[Java CI/build]   | > Task :jason-interpreter:processTestResources NO-SOURCE\n[Java CI/build]   | > Task :jason-interpreter:testClasses\n[Java CI/build]   | > Task :jason-interpreter:test\n[Java CI/build]   | \n[Java CI/build]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.\n[Java CI/build]   | \n[Java CI/build]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[Java CI/build]   | \n[Java CI/build]   | See https://docs.gradle.org/8.0.2/userguide/command_line_interface.html#sec:command_line_warnings\n[Java CI/build]   | \n[Java CI/build]   | BUILD SUCCESSFUL in 45s\n[Java CI/build]   | 5 actionable tasks: 5 executed\n[Java CI/build]   \u2705  Success - Main Test java\n[Java CI/build] \u2b50 Run Main Test jason\n[Java CI/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Java CI/build]   | > Task :jason-interpreter:compileJavacc UP-TO-DATE\n[Java CI/build]   | > Task :jason-interpreter:compileJava UP-TO-DATE\n[Java CI/build]   | > Task :jason-interpreter:processResources UP-TO-DATE\n[Java CI/build]   | > Task :jason-interpreter:classes UP-TO-DATE\n[Java CI/build]   | > Task :jason-interpreter:jar\n[Java CI/build]   | \n[Java CI/build]   | > Task :jason-interpreter:testJason\n[Java CI/build]   | Runtime Services (RTS) is running at 172.17.0.12:36169\n[Java CI/build]   | Agent mind inspector is running at http://172.17.0.12:3272\n[Java CI/build]   | [self_tester] >>> starting self tests...\n[Java CI/build]   | [self_tester] >>> notice it generates expected failures\n[Java CI/build]   | [self_tester] >>> notice the results are not counted for general statistics\n[Java CI/build]   | [self_tester] assert_equals on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '1' (number) but had '2' (number)\n[Java CI/build]   | [self_tester] assert_equals on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '2' (number) but had '2.0000000001' (number)\n[Java CI/build]   | [self_tester] assert_equals on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '[1,2]' (list) but had '[1,2,3]' (list)\n[Java CI/build]   | [self_tester] assert_equals on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '1+/-0' (number), but had '2' (number)\n[Java CI/build]   | [self_tester] assert_true on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected 'this_is_NOT_a_belief'\n[Java CI/build]   | [self_tester] assert_false on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected 'not this_is_a_belief'\n[Java CI/build]   | [self_tester] force_failure on event 'self_test_asserts' forcedly \u001b[31mFAILED\u001b[0m! Msg: 'msg'\n[Java CI/build]   | [self_tester] assert_contains on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '3' in '[1,2]'\n[Java CI/build]   | [self_tester] assert_greater_than on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '-1.01 > 1'\n[Java CI/build]   | [self_tester] assert_greater_than_equals on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '-1 >= 1'\n[Java CI/build]   | [self_tester] assert_between on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '1 <= 0.99 <= 1'\n[Java CI/build]   | [self_tester] assert_between on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '1 <= 1.01 <= 1'\n[Java CI/build]   | [self_tester] assert_between on event 'self_test_asserts' starting at line 56 \u001b[31mFAILED\u001b[0m! Expected '-1 <= 1 <= 0'\n[Java CI/build]   | [self_tester] >>> asserting if self tests went right\n[Java CI/build]   | [self_tester] >>> notice that no fails are expected from now on\n[Java CI/build]   | [self_tester] >>> end of self tests.\n[Java CI/build]   | [current_intention] .current_intention( intention(I,S) ) was replaced by .intention(I,_,S,current)\n[Java CI/build]   | [broadcast] \u001b[35mTODO\u001b[0m: sometimes !assert_equals(jomi,A1) is not being performed properly.\n[Java CI/build]   | [plan_label] \u001b[35mTODO\u001b[0m: It is expected a way to get an unknown label of a known plan, no?\n[Java CI/build]   | [set_random_seed] \u001b[35mTODO\u001b[0m: Use of lists in .random seems to be producing undeterministic responses.\n[Java CI/build]   | [add_plan] \u001b[35mTODO\u001b[0m: Assert if the source of the plan is rafa.\n[Java CI/build]   | [list_rules] \u001b[35mTODO\u001b[0m: Can't assert whether .list_rules is working properly\n[Java CI/build]   | [structure] \u001b[35mTODO\u001b[0m: .structure(b) is supposed to be true!\n[Java CI/build]   | [list_plans] \u001b[35mTODO\u001b[0m: Can't assert whether .list_plans is working properly\n[Java CI/build]   | [test_rules] \u001b[35mTODO\u001b[0m: Unexpected behaviour when unifying a bb from a rule new_bb2(20) - 20\n[Java CI/build]   | [ArithFunctionTerm] Error in 'math.median([1,1,3,a])' (file:./src/test/jason/asl/functions/median.asl:27) -- math.median needs '[1,1,3,a]' made of numeric elements. -- error while evaluating function, unifier = {LL=[assert_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2195[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2196[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_equals_tolerant[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2198[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_not_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2200[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_true[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2202[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_false[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2204[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],force_pass[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2206[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],force_failure[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2208[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_contains[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2210[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2211[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_not_contains[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2213[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2214[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_greater_than[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2216[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_greater_than_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2218[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_between[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2220[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],check_performance[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_performance.asl\")],p__2223[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2224[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2225[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2226[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2230[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2231[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2232[source(self),test,url(\"file:./src/test/jason/asl/functions/median.asl\")],p__2233[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")],p__2236[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")],kqmlReceivedTellStructure[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList1[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList3[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnTell[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieve[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList1[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnAchieve[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskOne1d[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskOne1c[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskAll2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnTellHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedSignal[source(self),url(\"kqmlPlans.asl\")]], LP=[{ @assert_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336460,_336461) : (intention_test_goal(_336462,_336463,_336464,_336465,_336466) & (not (.list(_336460)) & not (.list(_336461)))) <- .if_then_else((_336460 \\== _336461),.type(_336460,_336467); .type(_336461,_336468); .log(severe,\"assert_equals on event '\",_336462,\"' starting at line \",_336465,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336460,\"' (\",_336467,\") but had '\",_336461,\"' (\",_336468,\")\"); .fail,+test(_336463,passed,_336466,_336465)[assert_equals(_336460,_336461)]; .log(info,\"assert_equals on event '\",_336462,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2195[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336469,_336470) : intention_test_goal(_336471,_336472,_336473,_336474,_336475) <- .type(_336469,_336476); .type(_336470,_336477); .foreach(.member(_336478,_336469),.if_then_else(not (.member(_336478,_336470)),.log(severe,\"assert_equals on event '\",_336471,\"' starting at line \",_336474,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336469,\"' (\",_336476,\") but had '\",_336470,\"' (\",_336477,\")\"); .fail)); .foreach(.member(_336479,_336470),.if_then_else(not (.member(_336479,_336469)),.log(severe,\"assert_equals on event '\",_336471,\"' starting at line \",_336474,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336469,\"' (\",_336476,\") but had '\",_336470,\"' (\",_336477,\")\"); .fail)); +test(_336472,passed,_336475,_336474)[assert_equals(_336469,_336470)]; .log(info,\"assert_equals on event '\",_336471,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2196[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336480,_336481) <- .type(_336480,_336482); .type(_336481,_336483); .log(severe,\"assert_equals expecting '\",_336480,\"' (\",_336482,\") and having '\",_336481,\"' (\",_336483,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_equals_tolerant[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336484,_336485,_336486) : intention_test_goal(_336487,_336488,_336489,_336491,_336492) <- .type(_336484,_336493); .type(_336485,_336494); .if_then_else(not (((_336485 >= (_336484-_336486)) & (_336485 <= (_336484+_336486)))),.log(severe,\"assert_equals on event '\",_336487,\"' starting at line \",_336491,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336484,\"+/-\",_336486,\"' (\",_336493,\"), but had '\",_336485,\"' (\",_336494,\")\"); .fail,+test(_336488,passed,_336492,_336491)[assert_equals(_336484,_336485,_336486)]; .log(info,\"assert_equals on event '\",_336487,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2198[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336496,_336497,_336498) <- .type(_336496,_336499); .type(_336497,_336500); .log(severe,\"assert_equals expecting '\",_336496,\"+/-\",_336498,\"' (\",_336499,\") and having '\",_336497,\"' (\",_336500,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_not_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_equals(_336502,_336503) : (intention_test_goal(_336505,_336506,_336507,_336508,_336509) & (not (.list(_336502)) & not (.list(_336503)))) <- .type(_336502,_336510); .type(_336503,_336511); .if_then_else((_336502 == _336503),.log(severe,\"assert_not_equals on event '\",_336505,\"' starting at line \",_336508,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336502,\"' (\",_336510,\") different than '\",_336503,\"' (\",_336511,\")\"); .fail,+test(_336506,passed,_336509,_336508)[assert_equals(_336502,_336503)]; .log(info,\"assert_not_equals on event '\",_336505,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2200[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_equals(_336512,_336513) <- .type(_336512,_336514); .type(_336513,_336515); .log(severe,\"assert_not_equals expecting '\",_336512,\"' (\",_336514,\") and having '\",_336513,\"' (\",_336515,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_true[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_true(_336516) : intention_test_goal(_336517,_336518,_336519,_336521,_336522) <- .if_then_else(not (_336516),.log(severe,\"assert_true on event '\",_336517,\"' starting at line \",_336521,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336516,\"'\"); .fail,.log(info,\"assert_true on event '\",_336517,\"' \u001b[32mPASSED\u001b[0m\"); +test(_336518,passed,_336522,_336521)[assert_true(_336516)]) },{ @p__2202[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_true(_336523) <- .log(severe,\"assert_true expecting '\",_336523,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_false[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_false(_336524) : intention_test_goal(_336525,_336526,_336527,_336528,_336529) <- .if_then_else(_336524,.log(severe,\"assert_false on event '\",_336525,\"' starting at line \",_336528,\" \u001b[31mFAILED\u001b[0m! Expected 'not \",_336524,\"'\"); .fail,+test(_336526,passed,_336529,_336528)[assert_false(_336524)]; .log(info,\"assert_false on event '\",_336525,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2204[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_false(_336535) <- .log(severe,\"assert_false expecting 'not \",_336535,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @force_pass[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!force_pass : intention_test_goal(_336540,_336541,_336542,_336543,_336544) <- +test(_336541,passed,_336544,_336543)[force_pass]; .log(info,\"force_pass on event '\",_336540,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2206[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!force_pass <- .log(severe,\"force_pass could not be performed properly! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @force_failure[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!force_failure(_336545) : intention_test_goal(_336546,_336547,_336548,_336549,_336550) <- .log(severe,\"force_failure on event '\",_336546,\"' forcedly \u001b[31mFAILED\u001b[0m! Msg: '\",_336545,\"'\"); .fail },{ @p__2208[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!force_failure(_336553) <- .log(severe,\"force_failure could not be performed properly! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_contains[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_336562,_336564) : (intention_test_goal(_336565,_336566,_336567,_336568,_336569) & (.findall(_336570,.type(_336562,_336570),_336571) & (not (.member(list,_336571)) & not (.member(set,_336571))))) <- .log(severe,\"assert_contains expecting '\",_336564,\"' in '\",_336562,\"' could not be performed since '\",_336562,\"' must be a list or a set. \u001b[31mFAILED\u001b[0m!\"); .fail },{ @p__2210[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_336576,_336577) : intention_test_goal(_336578,_336580,_336581,_336582,_336583) <- .if_then_else(not (.member(_336577,_336576)),.log(severe,\"assert_contains on event '\",_336578,\"' starting at line \",_336582,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336577,\"' in '\",_336576,\"'\"); .fail); +test(_336580,passed,_336583,_336582)[assert_contains(_336576,_336577)]; .log(info,\"assert_contains on event '\",_336578,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2211[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_336584,_336585) <- .log(severe,\"assert_contains expecting '\",_336585,\"' in '\",_336584,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_not_contains[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_336586,_336587) : (intention_test_goal(_336588,_336589,_336590,_336591,_336592) & (.findall(_336593,.type(_336586,_336593),_336594) & (not (.member(list,_336594)) & not (.member(set,_336594))))) <- .log(severe,\"assert_not_contains expecting '\",_336587,\"' NOT in '\",_336586,\"' could not be performed since '\",_336586,\"' must be a list or a set. \u001b[31mFAILED\u001b[0m!\"); .fail },{ @p__2213[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_336595,_336596) : intention_test_goal(_336597,_336598,_336599,_336600,_336601) <- .if_then_else(.member(_336596,_336595),.log(severe,\"assert_not_contains on event '\",_336597,\"' starting at line \",_336600,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336596,\"' NOT in '\",_336595,\"'\"); .fail); +test(_336598,passed,_336601,_336600)[assert_not_contains(_336595,_336596)]; .log(info,\"assert_not_contains on event '\",_336597,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2214[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_336602,_336603) <- .log(severe,\"assert_not_contains expecting '\",_336603,\"' NOT in '\",_336602,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_greater_than[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than(_336610,_336611) : (intention_test_goal(_336612,_336613,_336614,_336615,_336616) & (.number(_336610) & .number(_336611))) <- .if_then_else((_336610 <= _336611),.log(severe,\"assert_greater_than on event '\",_336612,\"' starting at line \",_336615,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336610,\" > \",_336611,\"'\"); .fail,+test(_336613,passed,_336616,_336615)[assert_greater_than(_336610,_336611)]; .log(info,\"assert_greater_than on event '\",_336612,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2216[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than(_336617,_336618) <- .log(severe,\"assert_greater_than expecting '\",_336617,\" > \",_336618,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_greater_than_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than_equals(_336624,_336625) : (intention_test_goal(_336626,_336627,_336628,_336629,_336630) & (.number(_336624) & .number(_336625))) <- .if_then_else((_336624 < _336625),.log(severe,\"assert_greater_than_equals on event '\",_336626,\"' starting at line \",_336629,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336624,\" >= \",_336625,\"'\"); .fail,+test(_336627,passed,_336630,_336629)[assert_greater_than_equals(_336624,_336625)]; .log(info,\"assert_greater_than_equals on event '\",_336626,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2218[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than_equals(_336632,_336633) <- .log(severe,\"assert_greater_than_equals expecting '\",_336632,\" >= \",_336633,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_between[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_between(_336645,_336647,_336648) : (intention_test_goal(_336649,_336650,_336651,_336652,_336654) & (.number(_336645) & (.number(_336647) & .number(_336648)))) <- .if_then_else(((_336645 < _336647) | (_336645 > _336648)),.log(severe,\"assert_between on event '\",_336649,\"' starting at line \",_336652,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336647,\" <= \",_336645,\" <= \",_336648,\"'\"); .fail,+test(_336650,passed,_336654,_336652)[assert_between(_336645,_336647,_336648)]; .log(info,\"assert_between on event '\",_336649,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2220[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_between(_336660,_336661,_336662) <- .log(severe,\"assert_between expecting '\",_336661,\" <= \",_336660,\" <= \",_336662,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @check_performance[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_performance.asl\")] +!check_performance(_336663,_336664,_336665) : (.intention(_336667,_336668,[im(_336669,{ +!_336670[_336671] },{ _336672; _336673 },_336674)|_336675],current) & (_336676[code_line(_336677),code_src(_336678)] = _336669)) <- -+mean(_336663,0); .foreach(.range(_336679,1,_336664),.nano_time(_336680); !_336663; .nano_time(_336681); ?mean(_336663,_336682); -+mean(_336663,(_336682+((_336681-_336680)/_336664)))); ?mean(_336663,_336665); .log(info,\"check_performance on event '\",_336670[_336671],\"' starting at line \",_336677,\": \",math.round((_336665/1000)),\" microseconds\") },{ @p__2223[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!execute_test_plans : (.relevant_plans({ +!_336683 },_336684,_336685) & .my_name(_336686)) <- !create_default_fail_plan; .send(test_manager,tell,launching_test_set(_336686)); .foreach(.member(_336687[test],_336685),.findall(_336688,(.member(_336689,_336684) & ((_336689 = { @_336690 +!_336688 : _336691 <- _336692 }) & (_336687[test] = _336690))),_336693); .member(_336694,_336693); .send(test_manager,achieve,count_plans(launched,_336694,_336686)); !execute_test_plan(_336694)); .send(test_manager,tell,launched_test_set(_336686)) },{ @p__2224[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_default_fail_plan : auto_create_fail_plan <- .add_plan({ -!_336695[code(_336696),code_line(_336697),code_src(_336698),error(_336699),error_msg(_336700)] <- .log(severe,\"Error '\",_336699,\"' in '\",_336698,\"' on event '\",_336696,\"' at line \",_336697,\" \u001b[31mFAILED\u001b[0m! Message: '\",_336700); .send(test_manager,tell,fatal_error) },self,end) },{ @p__2225[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_default_fail_plan },{ @p__2226[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!execute_test_plan(_336701) : .intention(_336702,_336703,_336704,current) <- .log(fine,\"\u001b[33mTESTING\u001b[0m \",_336702,\" (main plan: \",_336701,\")\"); !_336701 },{ @p__2230[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_mock_agent(_336705) : .my_name(_336706) <- .create_agent(_336705,\"mock_agent.asl\"); .send(_336705,tell,mock_owner(_336706)) },{ @p__2231[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!wait_idle(_336707) <- .wait(not (sleeping(_336707)),300,_336708); .wait(sleeping(_336707)) },{ @p__2232[source(self),test,url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median <- !assert_equals(2,math.median([1,3])); !assert_equals(1,math.median([1,1,3])); !test_median_non_numeric; .wait(100); !assert_true(state(test_median_non_numeric,failed)); !test_median_empty_set; .wait(100); !assert_true(state(test_median_empty_set,failed)) },{ @p__2233[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_non_numeric <- .log(warning,\"\u001b[35mTODO\u001b[0m: Although there is a -! plan, log is still printing many error messages\"); math.median([1,1,3,a]) },{ @p__2236[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_empty_set <- math.median([]) },{ @kqmlReceivedTellStructure[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336709,tell,_336710::_336711,_336712) : (.literal(_336711) & (.ground(_336711) & (not (.list(_336711)) & .add_nested_source(_336711,_336709,_336713)))) <- ++_336710::_336713 },{ @kqmlReceivedTellList[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336714,tell,_336715,_336716) : .list(_336715) <- !add_all_kqml_received(_336714,_336715) },{ @kqmlReceivedTellList1[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_336717,[]) },{ @kqmlReceivedTellList2[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_336718,[_336719::_336720|_336721]) : (.literal(_336720) & .ground(_336720)) <- .add_nested_source(_336720,_336718,_336722); ++_336719::_336722; !add_all_kqml_received(_336718,_336721) },{ @kqmlReceivedTellList3[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_336723,[_336724|_336725]) <- !add_all_kqml_received(_336723,_336725) },{ @kqmlReceivedUnTell[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336726,untell,_336727::_336728,_336729) : .add_nested_source(_336728,_336726,_336733) <- --_336727::_336733 },{ @kqmlReceivedAchieve[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336738,achieve,_336740::_336742,_336744) : (not (.list(_336742)) & .add_nested_source(_336742,_336738,_336747)) <- !!_336740::_336747 },{ @kqmlReceivedAchieveList[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336753,achieve,_336755,_336756) : .list(_336755) <- !add_all_kqml_achieve(_336753,_336755) },{ @kqmlReceivedAchieveList1[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_achieve(_336765,[]) },{ @kqmlReceivedAchieveList2[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_achieve(_336773,[_336774::_336775|_336776]) <- .add_nested_source(_336775,_336773,_336779); !!_336774::_336779; !add_all_kqml_achieve(_336773,_336776) },{ @kqmlReceivedUnAchieve[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336785,unachieve,_336786::_336787,_336788) <- .drop_desire(_336786::_336787) },{ @kqmlReceivedAskOne1d[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336790,askOne,_336791::_336792,_336793) : kqml::bel_no_source_self(_336791,_336792,_336794) <- .send(_336790,tell,_336791::_336794,_336793) },{ @kqmlReceivedAskOne1c[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336809,askOne,_336810::_336811,_336812) <- .add_nested_source(_336811,_336809,_336815); ?_336810::_336815; .remove_source_annot(_336815,_336816); .send(_336809,tell,_336810::_336816,_336812) },{ @kqmlReceivedAskAll2[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336835,askAll,_336836::_336837,_336838) <- .findall(_336836::_336839,kqml::bel_no_source_self(_336836,_336837,_336839),_336843); .send(_336835,tell,_336843,_336838) },{ @kqmlReceivedTellHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336853,tellHow,_336856,_336857) <- .remove_source_annot(_336856,_336859); .add_plan(_336859,_336853) },{ @kqmlReceivedUnTellHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336869,untellHow,_336877,_336878) <- .remove_plan(_336877,_336869) },{ @kqmlReceivedAskHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336884,askHow,_336887,_336889) <- .relevant_plans(_336887,_336891); .remove_source_annot(_336891,_336893); .send(_336884,tellHow,_336893,_336889) },{ @kqmlReceivedSignal[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336907,signal,_336909::_336910,_336912) : (not (.list(_336910)) & .add_nested_source(_336910,_336907,_336915)) <- .signal({ +_336909::_336915 },type_signal) }], ME=median, Label[test]=p__2232}\n[Java CI/build]   | [ArithFunctionTerm] Error in 'math.median([])' (file:./src/test/jason/asl/functions/median.asl:38) -- math.median could not define a median for the empty set '[]'. -- error while evaluating function, unifier = {LL=[assert_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2195[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2196[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_equals_tolerant[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2198[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_not_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2200[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_true[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2202[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_false[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2204[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],force_pass[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2206[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],force_failure[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2208[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_contains[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2210[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2211[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_not_contains[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2213[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2214[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_greater_than[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2216[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_greater_than_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2218[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_between[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2220[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],check_performance[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_performance.asl\")],p__2223[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2224[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2225[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2226[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2230[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2231[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2232[source(self),test,url(\"file:./src/test/jason/asl/functions/median.asl\")],p__2233[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")],p__2236[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")],kqmlReceivedTellStructure[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList1[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList3[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnTell[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieve[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList1[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnAchieve[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskOne1d[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskOne1c[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskAll2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnTellHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedSignal[source(self),url(\"kqmlPlans.asl\")]], LP=[{ @assert_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336460,_336461) : (intention_test_goal(_336462,_336463,_336464,_336465,_336466) & (not (.list(_336460)) & not (.list(_336461)))) <- .if_then_else((_336460 \\== _336461),.type(_336460,_336467); .type(_336461,_336468); .log(severe,\"assert_equals on event '\",_336462,\"' starting at line \",_336465,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336460,\"' (\",_336467,\") but had '\",_336461,\"' (\",_336468,\")\"); .fail,+test(_336463,passed,_336466,_336465)[assert_equals(_336460,_336461)]; .log(info,\"assert_equals on event '\",_336462,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2195[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336469,_336470) : intention_test_goal(_336471,_336472,_336473,_336474,_336475) <- .type(_336469,_336476); .type(_336470,_336477); .foreach(.member(_336478,_336469),.if_then_else(not (.member(_336478,_336470)),.log(severe,\"assert_equals on event '\",_336471,\"' starting at line \",_336474,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336469,\"' (\",_336476,\") but had '\",_336470,\"' (\",_336477,\")\"); .fail)); .foreach(.member(_336479,_336470),.if_then_else(not (.member(_336479,_336469)),.log(severe,\"assert_equals on event '\",_336471,\"' starting at line \",_336474,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336469,\"' (\",_336476,\") but had '\",_336470,\"' (\",_336477,\")\"); .fail)); +test(_336472,passed,_336475,_336474)[assert_equals(_336469,_336470)]; .log(info,\"assert_equals on event '\",_336471,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2196[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336480,_336481) <- .type(_336480,_336482); .type(_336481,_336483); .log(severe,\"assert_equals expecting '\",_336480,\"' (\",_336482,\") and having '\",_336481,\"' (\",_336483,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_equals_tolerant[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336484,_336485,_336486) : intention_test_goal(_336487,_336488,_336489,_336491,_336492) <- .type(_336484,_336493); .type(_336485,_336494); .if_then_else(not (((_336485 >= (_336484-_336486)) & (_336485 <= (_336484+_336486)))),.log(severe,\"assert_equals on event '\",_336487,\"' starting at line \",_336491,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336484,\"+/-\",_336486,\"' (\",_336493,\"), but had '\",_336485,\"' (\",_336494,\")\"); .fail,+test(_336488,passed,_336492,_336491)[assert_equals(_336484,_336485,_336486)]; .log(info,\"assert_equals on event '\",_336487,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2198[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336496,_336497,_336498) <- .type(_336496,_336499); .type(_336497,_336500); .log(severe,\"assert_equals expecting '\",_336496,\"+/-\",_336498,\"' (\",_336499,\") and having '\",_336497,\"' (\",_336500,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_not_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_equals(_336502,_336503) : (intention_test_goal(_336505,_336506,_336507,_336508,_336509) & (not (.list(_336502)) & not (.list(_336503)))) <- .type(_336502,_336510); .type(_336503,_336511); .if_then_else((_336502 == _336503),.log(severe,\"assert_not_equals on event '\",_336505,\"' starting at line \",_336508,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336502,\"' (\",_336510,\") different than '\",_336503,\"' (\",_336511,\")\"); .fail,+test(_336506,passed,_336509,_336508)[assert_equals(_336502,_336503)]; .log(info,\"assert_not_equals on event '\",_336505,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2200[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_equals(_336512,_336513) <- .type(_336512,_336514); .type(_336513,_336515); .log(severe,\"assert_not_equals expecting '\",_336512,\"' (\",_336514,\") and having '\",_336513,\"' (\",_336515,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_true[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_true(_336516) : intention_test_goal(_336517,_336518,_336519,_336521,_336522) <- .if_then_else(not (_336516),.log(severe,\"assert_true on event '\",_336517,\"' starting at line \",_336521,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336516,\"'\"); .fail,.log(info,\"assert_true on event '\",_336517,\"' \u001b[32mPASSED\u001b[0m\"); +test(_336518,passed,_336522,_336521)[assert_true(_336516)]) },{ @p__2202[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_true(_336523) <- .log(severe,\"assert_true expecting '\",_336523,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_false[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_false(_336524) : intention_test_goal(_336525,_336526,_336527,_336528,_336529) <- .if_then_else(_336524,.log(severe,\"assert_false on event '\",_336525,\"' starting at line \",_336528,\" \u001b[31mFAILED\u001b[0m! Expected 'not \",_336524,\"'\"); .fail,+test(_336526,passed,_336529,_336528)[assert_false(_336524)]; .log(info,\"assert_false on event '\",_336525,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2204[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_false(_336535) <- .log(severe,\"assert_false expecting 'not \",_336535,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @force_pass[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!force_pass : intention_test_goal(_336540,_336541,_336542,_336543,_336544) <- +test(_336541,passed,_336544,_336543)[force_pass]; .log(info,\"force_pass on event '\",_336540,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2206[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!force_pass <- .log(severe,\"force_pass could not be performed properly! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @force_failure[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!force_failure(_336545) : intention_test_goal(_336546,_336547,_336548,_336549,_336550) <- .log(severe,\"force_failure on event '\",_336546,\"' forcedly \u001b[31mFAILED\u001b[0m! Msg: '\",_336545,\"'\"); .fail },{ @p__2208[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!force_failure(_336553) <- .log(severe,\"force_failure could not be performed properly! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_contains[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_336562,_336564) : (intention_test_goal(_336565,_336566,_336567,_336568,_336569) & (.findall(_336570,.type(_336562,_336570),_336571) & (not (.member(list,_336571)) & not (.member(set,_336571))))) <- .log(severe,\"assert_contains expecting '\",_336564,\"' in '\",_336562,\"' could not be performed since '\",_336562,\"' must be a list or a set. \u001b[31mFAILED\u001b[0m!\"); .fail },{ @p__2210[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_336576,_336577) : intention_test_goal(_336578,_336580,_336581,_336582,_336583) <- .if_then_else(not (.member(_336577,_336576)),.log(severe,\"assert_contains on event '\",_336578,\"' starting at line \",_336582,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336577,\"' in '\",_336576,\"'\"); .fail); +test(_336580,passed,_336583,_336582)[assert_contains(_336576,_336577)]; .log(info,\"assert_contains on event '\",_336578,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2211[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_336584,_336585) <- .log(severe,\"assert_contains expecting '\",_336585,\"' in '\",_336584,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_not_contains[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_336586,_336587) : (intention_test_goal(_336588,_336589,_336590,_336591,_336592) & (.findall(_336593,.type(_336586,_336593),_336594) & (not (.member(list,_336594)) & not (.member(set,_336594))))) <- .log(severe,\"assert_not_contains expecting '\",_336587,\"' NOT in '\",_336586,\"' could not be performed since '\",_336586,\"' must be a list or a set. \u001b[31mFAILED\u001b[0m!\"); .fail },{ @p__2213[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_336595,_336596) : intention_test_goal(_336597,_336598,_336599,_336600,_336601) <- .if_then_else(.member(_336596,_336595),.log(severe,\"assert_not_contains on event '\",_336597,\"' starting at line \",_336600,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336596,\"' NOT in '\",_336595,\"'\"); .fail); +test(_336598,passed,_336601,_336600)[assert_not_contains(_336595,_336596)]; .log(info,\"assert_not_contains on event '\",_336597,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2214[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_336602,_336603) <- .log(severe,\"assert_not_contains expecting '\",_336603,\"' NOT in '\",_336602,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_greater_than[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than(_336610,_336611) : (intention_test_goal(_336612,_336613,_336614,_336615,_336616) & (.number(_336610) & .number(_336611))) <- .if_then_else((_336610 <= _336611),.log(severe,\"assert_greater_than on event '\",_336612,\"' starting at line \",_336615,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336610,\" > \",_336611,\"'\"); .fail,+test(_336613,passed,_336616,_336615)[assert_greater_than(_336610,_336611)]; .log(info,\"assert_greater_than on event '\",_336612,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2216[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than(_336617,_336618) <- .log(severe,\"assert_greater_than expecting '\",_336617,\" > \",_336618,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_greater_than_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than_equals(_336624,_336625) : (intention_test_goal(_336626,_336627,_336628,_336629,_336630) & (.number(_336624) & .number(_336625))) <- .if_then_else((_336624 < _336625),.log(severe,\"assert_greater_than_equals on event '\",_336626,\"' starting at line \",_336629,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336624,\" >= \",_336625,\"'\"); .fail,+test(_336627,passed,_336630,_336629)[assert_greater_than_equals(_336624,_336625)]; .log(info,\"assert_greater_than_equals on event '\",_336626,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2218[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than_equals(_336632,_336633) <- .log(severe,\"assert_greater_than_equals expecting '\",_336632,\" >= \",_336633,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_between[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_between(_336645,_336647,_336648) : (intention_test_goal(_336649,_336650,_336651,_336652,_336654) & (.number(_336645) & (.number(_336647) & .number(_336648)))) <- .if_then_else(((_336645 < _336647) | (_336645 > _336648)),.log(severe,\"assert_between on event '\",_336649,\"' starting at line \",_336652,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336647,\" <= \",_336645,\" <= \",_336648,\"'\"); .fail,+test(_336650,passed,_336654,_336652)[assert_between(_336645,_336647,_336648)]; .log(info,\"assert_between on event '\",_336649,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2220[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_between(_336660,_336661,_336662) <- .log(severe,\"assert_between expecting '\",_336661,\" <= \",_336660,\" <= \",_336662,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @check_performance[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_performance.asl\")] +!check_performance(_336663,_336664,_336665) : (.intention(_336667,_336668,[im(_336669,{ +!_336670[_336671] },{ _336672; _336673 },_336674)|_336675],current) & (_336676[code_line(_336677),code_src(_336678)] = _336669)) <- -+mean(_336663,0); .foreach(.range(_336679,1,_336664),.nano_time(_336680); !_336663; .nano_time(_336681); ?mean(_336663,_336682); -+mean(_336663,(_336682+((_336681-_336680)/_336664)))); ?mean(_336663,_336665); .log(info,\"check_performance on event '\",_336670[_336671],\"' starting at line \",_336677,\": \",math.round((_336665/1000)),\" microseconds\") },{ @p__2223[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!execute_test_plans : (.relevant_plans({ +!_336683 },_336684,_336685) & .my_name(_336686)) <- !create_default_fail_plan; .send(test_manager,tell,launching_test_set(_336686)); .foreach(.member(_336687[test],_336685),.findall(_336688,(.member(_336689,_336684) & ((_336689 = { @_336690 +!_336688 : _336691 <- _336692 }) & (_336687[test] = _336690))),_336693); .member(_336694,_336693); .send(test_manager,achieve,count_plans(launched,_336694,_336686)); !execute_test_plan(_336694)); .send(test_manager,tell,launched_test_set(_336686)) },{ @p__2224[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_default_fail_plan : auto_create_fail_plan <- .add_plan({ -!_336695[code(_336696),code_line(_336697),code_src(_336698),error(_336699),error_msg(_336700)] <- .log(severe,\"Error '\",_336699,\"' in '\",_336698,\"' on event '\",_336696,\"' at line \",_336697,\" \u001b[31mFAILED\u001b[0m! Message: '\",_336700); .send(test_manager,tell,fatal_error) },self,end) },{ @p__2225[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_default_fail_plan },{ @p__2226[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!execute_test_plan(_336701) : .intention(_336702,_336703,_336704,current) <- .log(fine,\"\u001b[33mTESTING\u001b[0m \",_336702,\" (main plan: \",_336701,\")\"); !_336701 },{ @p__2230[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_mock_agent(_336705) : .my_name(_336706) <- .create_agent(_336705,\"mock_agent.asl\"); .send(_336705,tell,mock_owner(_336706)) },{ @p__2231[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!wait_idle(_336707) <- .wait(not (sleeping(_336707)),300,_336708); .wait(sleeping(_336707)) },{ @p__2232[source(self),test,url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median <- !assert_equals(2,math.median([1,3])); !assert_equals(1,math.median([1,1,3])); !test_median_non_numeric; .wait(100); !assert_true(state(test_median_non_numeric,failed)); !test_median_empty_set; .wait(100); !assert_true(state(test_median_empty_set,failed)) },{ @p__2233[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_non_numeric <- .log(warning,\"\u001b[35mTODO\u001b[0m: Although there is a -! plan, log is still printing many error messages\"); math.median([1,1,3,a]) },{ @p__2236[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_empty_set <- math.median([]) },{ @kqmlReceivedTellStructure[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336709,tell,_336710::_336711,_336712) : (.literal(_336711) & (.ground(_336711) & (not (.list(_336711)) & .add_nested_source(_336711,_336709,_336713)))) <- ++_336710::_336713 },{ @kqmlReceivedTellList[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336714,tell,_336715,_336716) : .list(_336715) <- !add_all_kqml_received(_336714,_336715) },{ @kqmlReceivedTellList1[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_336717,[]) },{ @kqmlReceivedTellList2[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_336718,[_336719::_336720|_336721]) : (.literal(_336720) & .ground(_336720)) <- .add_nested_source(_336720,_336718,_336722); ++_336719::_336722; !add_all_kqml_received(_336718,_336721) },{ @kqmlReceivedTellList3[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_336723,[_336724|_336725]) <- !add_all_kqml_received(_336723,_336725) },{ @kqmlReceivedUnTell[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336726,untell,_336727::_336728,_336729) : .add_nested_source(_336728,_336726,_336733) <- --_336727::_336733 },{ @kqmlReceivedAchieve[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336738,achieve,_336740::_336742,_336744) : (not (.list(_336742)) & .add_nested_source(_336742,_336738,_336747)) <- !!_336740::_336747 },{ @kqmlReceivedAchieveList[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336753,achieve,_336755,_336756) : .list(_336755) <- !add_all_kqml_achieve(_336753,_336755) },{ @kqmlReceivedAchieveList1[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_achieve(_336765,[]) },{ @kqmlReceivedAchieveList2[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_achieve(_336773,[_336774::_336775|_336776]) <- .add_nested_source(_336775,_336773,_336779); !!_336774::_336779; !add_all_kqml_achieve(_336773,_336776) },{ @kqmlReceivedUnAchieve[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336785,unachieve,_336786::_336787,_336788) <- .drop_desire(_336786::_336787) },{ @kqmlReceivedAskOne1d[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336790,askOne,_336791::_336792,_336793) : kqml::bel_no_source_self(_336791,_336792,_336794) <- .send(_336790,tell,_336791::_336794,_336793) },{ @kqmlReceivedAskOne1c[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336809,askOne,_336810::_336811,_336812) <- .add_nested_source(_336811,_336809,_336815); ?_336810::_336815; .remove_source_annot(_336815,_336816); .send(_336809,tell,_336810::_336816,_336812) },{ @kqmlReceivedAskAll2[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336835,askAll,_336836::_336837,_336838) <- .findall(_336836::_336839,kqml::bel_no_source_self(_336836,_336837,_336839),_336843); .send(_336835,tell,_336843,_336838) },{ @kqmlReceivedTellHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336853,tellHow,_336856,_336857) <- .remove_source_annot(_336856,_336859); .add_plan(_336859,_336853) },{ @kqmlReceivedUnTellHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336869,untellHow,_336877,_336878) <- .remove_plan(_336877,_336869) },{ @kqmlReceivedAskHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336884,askHow,_336887,_336889) <- .relevant_plans(_336887,_336891); .remove_source_annot(_336891,_336893); .send(_336884,tellHow,_336893,_336889) },{ @kqmlReceivedSignal[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336907,signal,_336909::_336910,_336912) : (not (.list(_336910)) & .add_nested_source(_336910,_336907,_336915)) <- .signal({ +_336909::_336915 },type_signal) }], ME=median, Label[test]=p__2232}\n[Java CI/build]   | [ArithFunctionTerm] Error in 'math.median([1,1,3,a])' (file:./src/test/jason/asl/functions/median.asl:27) -- math.median needs '[1,1,3,a]' made of numeric elements. -- error while evaluating function, unifier = {LL=[assert_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2195[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2196[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_equals_tolerant[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2198[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_not_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2200[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_true[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2202[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_false[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2204[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],force_pass[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2206[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],force_failure[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2208[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_contains[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2210[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2211[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_not_contains[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2213[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2214[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_greater_than[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2216[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_greater_than_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2218[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_between[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2220[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],check_performance[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_performance.asl\")],p__2223[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2224[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2225[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2226[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2230[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2231[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2232[source(self),test,url(\"file:./src/test/jason/asl/functions/median.asl\")],p__2233[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")],p__2236[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")],kqmlReceivedTellStructure[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList1[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList3[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnTell[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieve[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList1[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnAchieve[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskOne1d[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskOne1c[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskAll2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnTellHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedSignal[source(self),url(\"kqmlPlans.asl\")]], ME=median, Label[test]=p__2232, P={ @p__2233[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_non_numeric <- .log(warning,\"\u001b[35mTODO\u001b[0m: Although there is a -! plan, log is still printing many error messages\"); math.median([1,1,3,a]) }, LP=[{ @assert_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336460,_336461) : (intention_test_goal(_336462,_336463,_336464,_336465,_336466) & (not (.list(_336460)) & not (.list(_336461)))) <- .if_then_else((_336460 \\== _336461),.type(_336460,_336467); .type(_336461,_336468); .log(severe,\"assert_equals on event '\",_336462,\"' starting at line \",_336465,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336460,\"' (\",_336467,\") but had '\",_336461,\"' (\",_336468,\")\"); .fail,+test(_336463,passed,_336466,_336465)[assert_equals(_336460,_336461)]; .log(info,\"assert_equals on event '\",_336462,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2195[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336469,_336470) : intention_test_goal(_336471,_336472,_336473,_336474,_336475) <- .type(_336469,_336476); .type(_336470,_336477); .foreach(.member(_336478,_336469),.if_then_else(not (.member(_336478,_336470)),.log(severe,\"assert_equals on event '\",_336471,\"' starting at line \",_336474,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336469,\"' (\",_336476,\") but had '\",_336470,\"' (\",_336477,\")\"); .fail)); .foreach(.member(_336479,_336470),.if_then_else(not (.member(_336479,_336469)),.log(severe,\"assert_equals on event '\",_336471,\"' starting at line \",_336474,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336469,\"' (\",_336476,\") but had '\",_336470,\"' (\",_336477,\")\"); .fail)); +test(_336472,passed,_336475,_336474)[assert_equals(_336469,_336470)]; .log(info,\"assert_equals on event '\",_336471,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2196[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336480,_336481) <- .type(_336480,_336482); .type(_336481,_336483); .log(severe,\"assert_equals expecting '\",_336480,\"' (\",_336482,\") and having '\",_336481,\"' (\",_336483,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_equals_tolerant[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336484,_336485,_336486) : intention_test_goal(_336487,_336488,_336489,_336491,_336492) <- .type(_336484,_336493); .type(_336485,_336494); .if_then_else(not (((_336485 >= (_336484-_336486)) & (_336485 <= (_336484+_336486)))),.log(severe,\"assert_equals on event '\",_336487,\"' starting at line \",_336491,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336484,\"+/-\",_336486,\"' (\",_336493,\"), but had '\",_336485,\"' (\",_336494,\")\"); .fail,+test(_336488,passed,_336492,_336491)[assert_equals(_336484,_336485,_336486)]; .log(info,\"assert_equals on event '\",_336487,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2198[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336496,_336497,_336498) <- .type(_336496,_336499); .type(_336497,_336500); .log(severe,\"assert_equals expecting '\",_336496,\"+/-\",_336498,\"' (\",_336499,\") and having '\",_336497,\"' (\",_336500,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_not_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_equals(_336502,_336503) : (intention_test_goal(_336505,_336506,_336507,_336508,_336509) & (not (.list(_336502)) & not (.list(_336503)))) <- .type(_336502,_336510); .type(_336503,_336511); .if_then_else((_336502 == _336503),.log(severe,\"assert_not_equals on event '\",_336505,\"' starting at line \",_336508,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336502,\"' (\",_336510,\") different than '\",_336503,\"' (\",_336511,\")\"); .fail,+test(_336506,passed,_336509,_336508)[assert_equals(_336502,_336503)]; .log(info,\"assert_not_equals on event '\",_336505,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2200[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_equals(_336512,_336513) <- .type(_336512,_336514); .type(_336513,_336515); .log(severe,\"assert_not_equals expecting '\",_336512,\"' (\",_336514,\") and having '\",_336513,\"' (\",_336515,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_true[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_true(_336516) : intention_test_goal(_336517,_336518,_336519,_336521,_336522) <- .if_then_else(not (_336516),.log(severe,\"assert_true on event '\",_336517,\"' starting at line \",_336521,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336516,\"'\"); .fail,.log(info,\"assert_true on event '\",_336517,\"' \u001b[32mPASSED\u001b[0m\"); +test(_336518,passed,_336522,_336521)[assert_true(_336516)]) },{ @p__2202[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_true(_336523) <- .log(severe,\"assert_true expecting '\",_336523,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_false[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_false(_336524) : intention_test_goal(_336525,_336526,_336527,_336528,_336529) <- .if_then_else(_336524,.log(severe,\"assert_false on event '\",_336525,\"' starting at line \",_336528,\" \u001b[31mFAILED\u001b[0m! Expected 'not \",_336524,\"'\"); .fail,+test(_336526,passed,_336529,_336528)[assert_false(_336524)]; .log(info,\"assert_false on event '\",_336525,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2204[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_false(_336535) <- .log(severe,\"assert_false expecting 'not \",_336535,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @force_pass[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!force_pass : intention_test_goal(_336540,_336541,_336542,_336543,_336544) <- +test(_336541,passed,_336544,_336543)[force_pass]; .log(info,\"force_pass on event '\",_336540,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2206[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!force_pass <- .log(severe,\"force_pass could not be performed properly! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @force_failure[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!force_failure(_336545) : intention_test_goal(_336546,_336547,_336548,_336549,_336550) <- .log(severe,\"force_failure on event '\",_336546,\"' forcedly \u001b[31mFAILED\u001b[0m! Msg: '\",_336545,\"'\"); .fail },{ @p__2208[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!force_failure(_336553) <- .log(severe,\"force_failure could not be performed properly! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_contains[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_336562,_336564) : (intention_test_goal(_336565,_336566,_336567,_336568,_336569) & (.findall(_336570,.type(_336562,_336570),_336571) & (not (.member(list,_336571)) & not (.member(set,_336571))))) <- .log(severe,\"assert_contains expecting '\",_336564,\"' in '\",_336562,\"' could not be performed since '\",_336562,\"' must be a list or a set. \u001b[31mFAILED\u001b[0m!\"); .fail },{ @p__2210[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_336576,_336577) : intention_test_goal(_336578,_336580,_336581,_336582,_336583) <- .if_then_else(not (.member(_336577,_336576)),.log(severe,\"assert_contains on event '\",_336578,\"' starting at line \",_336582,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336577,\"' in '\",_336576,\"'\"); .fail); +test(_336580,passed,_336583,_336582)[assert_contains(_336576,_336577)]; .log(info,\"assert_contains on event '\",_336578,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2211[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_336584,_336585) <- .log(severe,\"assert_contains expecting '\",_336585,\"' in '\",_336584,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_not_contains[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_336586,_336587) : (intention_test_goal(_336588,_336589,_336590,_336591,_336592) & (.findall(_336593,.type(_336586,_336593),_336594) & (not (.member(list,_336594)) & not (.member(set,_336594))))) <- .log(severe,\"assert_not_contains expecting '\",_336587,\"' NOT in '\",_336586,\"' could not be performed since '\",_336586,\"' must be a list or a set. \u001b[31mFAILED\u001b[0m!\"); .fail },{ @p__2213[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_336595,_336596) : intention_test_goal(_336597,_336598,_336599,_336600,_336601) <- .if_then_else(.member(_336596,_336595),.log(severe,\"assert_not_contains on event '\",_336597,\"' starting at line \",_336600,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336596,\"' NOT in '\",_336595,\"'\"); .fail); +test(_336598,passed,_336601,_336600)[assert_not_contains(_336595,_336596)]; .log(info,\"assert_not_contains on event '\",_336597,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2214[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_336602,_336603) <- .log(severe,\"assert_not_contains expecting '\",_336603,\"' NOT in '\",_336602,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_greater_than[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than(_336610,_336611) : (intention_test_goal(_336612,_336613,_336614,_336615,_336616) & (.number(_336610) & .number(_336611))) <- .if_then_else((_336610 <= _336611),.log(severe,\"assert_greater_than on event '\",_336612,\"' starting at line \",_336615,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336610,\" > \",_336611,\"'\"); .fail,+test(_336613,passed,_336616,_336615)[assert_greater_than(_336610,_336611)]; .log(info,\"assert_greater_than on event '\",_336612,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2216[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than(_336617,_336618) <- .log(severe,\"assert_greater_than expecting '\",_336617,\" > \",_336618,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_greater_than_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than_equals(_336624,_336625) : (intention_test_goal(_336626,_336627,_336628,_336629,_336630) & (.number(_336624) & .number(_336625))) <- .if_then_else((_336624 < _336625),.log(severe,\"assert_greater_than_equals on event '\",_336626,\"' starting at line \",_336629,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336624,\" >= \",_336625,\"'\"); .fail,+test(_336627,passed,_336630,_336629)[assert_greater_than_equals(_336624,_336625)]; .log(info,\"assert_greater_than_equals on event '\",_336626,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2218[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than_equals(_336632,_336633) <- .log(severe,\"assert_greater_than_equals expecting '\",_336632,\" >= \",_336633,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_between[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_between(_336645,_336647,_336648) : (intention_test_goal(_336649,_336650,_336651,_336652,_336654) & (.number(_336645) & (.number(_336647) & .number(_336648)))) <- .if_then_else(((_336645 < _336647) | (_336645 > _336648)),.log(severe,\"assert_between on event '\",_336649,\"' starting at line \",_336652,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336647,\" <= \",_336645,\" <= \",_336648,\"'\"); .fail,+test(_336650,passed,_336654,_336652)[assert_between(_336645,_336647,_336648)]; .log(info,\"assert_between on event '\",_336649,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2220[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_between(_336660,_336661,_336662) <- .log(severe,\"assert_between expecting '\",_336661,\" <= \",_336660,\" <= \",_336662,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @check_performance[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_performance.asl\")] +!check_performance(_336663,_336664,_336665) : (.intention(_336667,_336668,[im(_336669,{ +!_336670[_336671] },{ _336672; _336673 },_336674)|_336675],current) & (_336676[code_line(_336677),code_src(_336678)] = _336669)) <- -+mean(_336663,0); .foreach(.range(_336679,1,_336664),.nano_time(_336680); !_336663; .nano_time(_336681); ?mean(_336663,_336682); -+mean(_336663,(_336682+((_336681-_336680)/_336664)))); ?mean(_336663,_336665); .log(info,\"check_performance on event '\",_336670[_336671],\"' starting at line \",_336677,\": \",math.round((_336665/1000)),\" microseconds\") },{ @p__2223[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!execute_test_plans : (.relevant_plans({ +!_336683 },_336684,_336685) & .my_name(_336686)) <- !create_default_fail_plan; .send(test_manager,tell,launching_test_set(_336686)); .foreach(.member(_336687[test],_336685),.findall(_336688,(.member(_336689,_336684) & ((_336689 = { @_336690 +!_336688 : _336691 <- _336692 }) & (_336687[test] = _336690))),_336693); .member(_336694,_336693); .send(test_manager,achieve,count_plans(launched,_336694,_336686)); !execute_test_plan(_336694)); .send(test_manager,tell,launched_test_set(_336686)) },{ @p__2224[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_default_fail_plan : auto_create_fail_plan <- .add_plan({ -!_336695[code(_336696),code_line(_336697),code_src(_336698),error(_336699),error_msg(_336700)] <- .log(severe,\"Error '\",_336699,\"' in '\",_336698,\"' on event '\",_336696,\"' at line \",_336697,\" \u001b[31mFAILED\u001b[0m! Message: '\",_336700); .send(test_manager,tell,fatal_error) },self,end) },{ @p__2225[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_default_fail_plan },{ @p__2226[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!execute_test_plan(_336701) : .intention(_336702,_336703,_336704,current) <- .log(fine,\"\u001b[33mTESTING\u001b[0m \",_336702,\" (main plan: \",_336701,\")\"); !_336701 },{ @p__2230[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_mock_agent(_336705) : .my_name(_336706) <- .create_agent(_336705,\"mock_agent.asl\"); .send(_336705,tell,mock_owner(_336706)) },{ @p__2231[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!wait_idle(_336707) <- .wait(not (sleeping(_336707)),300,_336708); .wait(sleeping(_336707)) },{ @p__2232[source(self),test,url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median <- !assert_equals(2,math.median([1,3])); !assert_equals(1,math.median([1,1,3])); !test_median_non_numeric; .wait(100); !assert_true(state(test_median_non_numeric,failed)); !test_median_empty_set; .wait(100); !assert_true(state(test_median_empty_set,failed)) },{ @p__2233[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_non_numeric <- .log(warning,\"\u001b[35mTODO\u001b[0m: Although there is a -! plan, log is still printing many error messages\"); math.median([1,1,3,a]) },{ @p__2236[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_empty_set <- math.median([]) },{ @kqmlReceivedTellStructure[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336709,tell,_336710::_336711,_336712) : (.literal(_336711) & (.ground(_336711) & (not (.list(_336711)) & .add_nested_source(_336711,_336709,_336713)))) <- ++_336710::_336713 },{ @kqmlReceivedTellList[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336714,tell,_336715,_336716) : .list(_336715) <- !add_all_kqml_received(_336714,_336715) },{ @kqmlReceivedTellList1[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_336717,[]) },{ @kqmlReceivedTellList2[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_336718,[_336719::_336720|_336721]) : (.literal(_336720) & .ground(_336720)) <- .add_nested_source(_336720,_336718,_336722); ++_336719::_336722; !add_all_kqml_received(_336718,_336721) },{ @kqmlReceivedTellList3[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_336723,[_336724|_336725]) <- !add_all_kqml_received(_336723,_336725) },{ @kqmlReceivedUnTell[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336726,untell,_336727::_336728,_336729) : .add_nested_source(_336728,_336726,_336733) <- --_336727::_336733 },{ @kqmlReceivedAchieve[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336738,achieve,_336740::_336742,_336744) : (not (.list(_336742)) & .add_nested_source(_336742,_336738,_336747)) <- !!_336740::_336747 },{ @kqmlReceivedAchieveList[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336753,achieve,_336755,_336756) : .list(_336755) <- !add_all_kqml_achieve(_336753,_336755) },{ @kqmlReceivedAchieveList1[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_achieve(_336765,[]) },{ @kqmlReceivedAchieveList2[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_achieve(_336773,[_336774::_336775|_336776]) <- .add_nested_source(_336775,_336773,_336779); !!_336774::_336779; !add_all_kqml_achieve(_336773,_336776) },{ @kqmlReceivedUnAchieve[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336785,unachieve,_336786::_336787,_336788) <- .drop_desire(_336786::_336787) },{ @kqmlReceivedAskOne1d[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336790,askOne,_336791::_336792,_336793) : kqml::bel_no_source_self(_336791,_336792,_336794) <- .send(_336790,tell,_336791::_336794,_336793) },{ @kqmlReceivedAskOne1c[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336809,askOne,_336810::_336811,_336812) <- .add_nested_source(_336811,_336809,_336815); ?_336810::_336815; .remove_source_annot(_336815,_336816); .send(_336809,tell,_336810::_336816,_336812) },{ @kqmlReceivedAskAll2[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336835,askAll,_336836::_336837,_336838) <- .findall(_336836::_336839,kqml::bel_no_source_self(_336836,_336837,_336839),_336843); .send(_336835,tell,_336843,_336838) },{ @kqmlReceivedTellHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336853,tellHow,_336856,_336857) <- .remove_source_annot(_336856,_336859); .add_plan(_336859,_336853) },{ @kqmlReceivedUnTellHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336869,untellHow,_336877,_336878) <- .remove_plan(_336877,_336869) },{ @kqmlReceivedAskHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336884,askHow,_336887,_336889) <- .relevant_plans(_336887,_336891); .remove_source_annot(_336891,_336893); .send(_336884,tellHow,_336893,_336889) },{ @kqmlReceivedSignal[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336907,signal,_336909::_336910,_336912) : (not (.list(_336910)) & .add_nested_source(_336910,_336907,_336915)) <- .signal({ +_336909::_336915 },type_signal) }]}\n[Java CI/build]   | [ArithFunctionTerm] Error in 'math.median([])' (file:./src/test/jason/asl/functions/median.asl:38) -- math.median could not define a median for the empty set '[]'. -- error while evaluating function, unifier = {LL=[assert_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2195[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2196[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_equals_tolerant[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2198[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_not_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2200[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_true[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2202[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_false[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2204[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],force_pass[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2206[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],force_failure[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2208[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_contains[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2210[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2211[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_not_contains[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2213[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2214[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_greater_than[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2216[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_greater_than_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2218[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],assert_between[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],p__2220[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")],check_performance[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_performance.asl\")],p__2223[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2224[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2225[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2226[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2230[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2231[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")],p__2232[source(self),test,url(\"file:./src/test/jason/asl/functions/median.asl\")],p__2233[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")],p__2236[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")],kqmlReceivedTellStructure[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList1[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellList3[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnTell[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieve[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList1[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAchieveList2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnAchieve[atomic,source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskOne1d[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskOne1c[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskAll2[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedTellHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedUnTellHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedAskHow[source(self),url(\"kqmlPlans.asl\")],kqmlReceivedSignal[source(self),url(\"kqmlPlans.asl\")]], ME=median, Label[test]=p__2232, P={ @p__2236[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_empty_set <- math.median([]) }, LP=[{ @assert_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336460,_336461) : (intention_test_goal(_336462,_336463,_336464,_336465,_336466) & (not (.list(_336460)) & not (.list(_336461)))) <- .if_then_else((_336460 \\== _336461),.type(_336460,_336467); .type(_336461,_336468); .log(severe,\"assert_equals on event '\",_336462,\"' starting at line \",_336465,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336460,\"' (\",_336467,\") but had '\",_336461,\"' (\",_336468,\")\"); .fail,+test(_336463,passed,_336466,_336465)[assert_equals(_336460,_336461)]; .log(info,\"assert_equals on event '\",_336462,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2195[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336469,_336470) : intention_test_goal(_336471,_336472,_336473,_336474,_336475) <- .type(_336469,_336476); .type(_336470,_336477); .foreach(.member(_336478,_336469),.if_then_else(not (.member(_336478,_336470)),.log(severe,\"assert_equals on event '\",_336471,\"' starting at line \",_336474,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336469,\"' (\",_336476,\") but had '\",_336470,\"' (\",_336477,\")\"); .fail)); .foreach(.member(_336479,_336470),.if_then_else(not (.member(_336479,_336469)),.log(severe,\"assert_equals on event '\",_336471,\"' starting at line \",_336474,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336469,\"' (\",_336476,\") but had '\",_336470,\"' (\",_336477,\")\"); .fail)); +test(_336472,passed,_336475,_336474)[assert_equals(_336469,_336470)]; .log(info,\"assert_equals on event '\",_336471,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2196[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336480,_336481) <- .type(_336480,_336482); .type(_336481,_336483); .log(severe,\"assert_equals expecting '\",_336480,\"' (\",_336482,\") and having '\",_336481,\"' (\",_336483,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_equals_tolerant[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336484,_336485,_336486) : intention_test_goal(_336487,_336488,_336489,_336491,_336492) <- .type(_336484,_336493); .type(_336485,_336494); .if_then_else(not (((_336485 >= (_336484-_336486)) & (_336485 <= (_336484+_336486)))),.log(severe,\"assert_equals on event '\",_336487,\"' starting at line \",_336491,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336484,\"+/-\",_336486,\"' (\",_336493,\"), but had '\",_336485,\"' (\",_336494,\")\"); .fail,+test(_336488,passed,_336492,_336491)[assert_equals(_336484,_336485,_336486)]; .log(info,\"assert_equals on event '\",_336487,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2198[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_equals(_336496,_336497,_336498) <- .type(_336496,_336499); .type(_336497,_336500); .log(severe,\"assert_equals expecting '\",_336496,\"+/-\",_336498,\"' (\",_336499,\") and having '\",_336497,\"' (\",_336500,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_not_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_equals(_336502,_336503) : (intention_test_goal(_336505,_336506,_336507,_336508,_336509) & (not (.list(_336502)) & not (.list(_336503)))) <- .type(_336502,_336510); .type(_336503,_336511); .if_then_else((_336502 == _336503),.log(severe,\"assert_not_equals on event '\",_336505,\"' starting at line \",_336508,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336502,\"' (\",_336510,\") different than '\",_336503,\"' (\",_336511,\")\"); .fail,+test(_336506,passed,_336509,_336508)[assert_equals(_336502,_336503)]; .log(info,\"assert_not_equals on event '\",_336505,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2200[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_equals(_336512,_336513) <- .type(_336512,_336514); .type(_336513,_336515); .log(severe,\"assert_not_equals expecting '\",_336512,\"' (\",_336514,\") and having '\",_336513,\"' (\",_336515,\") could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_true[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_true(_336516) : intention_test_goal(_336517,_336518,_336519,_336521,_336522) <- .if_then_else(not (_336516),.log(severe,\"assert_true on event '\",_336517,\"' starting at line \",_336521,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336516,\"'\"); .fail,.log(info,\"assert_true on event '\",_336517,\"' \u001b[32mPASSED\u001b[0m\"); +test(_336518,passed,_336522,_336521)[assert_true(_336516)]) },{ @p__2202[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_true(_336523) <- .log(severe,\"assert_true expecting '\",_336523,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_false[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_false(_336524) : intention_test_goal(_336525,_336526,_336527,_336528,_336529) <- .if_then_else(_336524,.log(severe,\"assert_false on event '\",_336525,\"' starting at line \",_336528,\" \u001b[31mFAILED\u001b[0m! Expected 'not \",_336524,\"'\"); .fail,+test(_336526,passed,_336529,_336528)[assert_false(_336524)]; .log(info,\"assert_false on event '\",_336525,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2204[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_false(_336535) <- .log(severe,\"assert_false expecting 'not \",_336535,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @force_pass[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!force_pass : intention_test_goal(_336540,_336541,_336542,_336543,_336544) <- +test(_336541,passed,_336544,_336543)[force_pass]; .log(info,\"force_pass on event '\",_336540,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2206[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!force_pass <- .log(severe,\"force_pass could not be performed properly! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @force_failure[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!force_failure(_336545) : intention_test_goal(_336546,_336547,_336548,_336549,_336550) <- .log(severe,\"force_failure on event '\",_336546,\"' forcedly \u001b[31mFAILED\u001b[0m! Msg: '\",_336545,\"'\"); .fail },{ @p__2208[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!force_failure(_336553) <- .log(severe,\"force_failure could not be performed properly! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_contains[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_336562,_336564) : (intention_test_goal(_336565,_336566,_336567,_336568,_336569) & (.findall(_336570,.type(_336562,_336570),_336571) & (not (.member(list,_336571)) & not (.member(set,_336571))))) <- .log(severe,\"assert_contains expecting '\",_336564,\"' in '\",_336562,\"' could not be performed since '\",_336562,\"' must be a list or a set. \u001b[31mFAILED\u001b[0m!\"); .fail },{ @p__2210[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_336576,_336577) : intention_test_goal(_336578,_336580,_336581,_336582,_336583) <- .if_then_else(not (.member(_336577,_336576)),.log(severe,\"assert_contains on event '\",_336578,\"' starting at line \",_336582,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336577,\"' in '\",_336576,\"'\"); .fail); +test(_336580,passed,_336583,_336582)[assert_contains(_336576,_336577)]; .log(info,\"assert_contains on event '\",_336578,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2211[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_contains(_336584,_336585) <- .log(severe,\"assert_contains expecting '\",_336585,\"' in '\",_336584,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_not_contains[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_336586,_336587) : (intention_test_goal(_336588,_336589,_336590,_336591,_336592) & (.findall(_336593,.type(_336586,_336593),_336594) & (not (.member(list,_336594)) & not (.member(set,_336594))))) <- .log(severe,\"assert_not_contains expecting '\",_336587,\"' NOT in '\",_336586,\"' could not be performed since '\",_336586,\"' must be a list or a set. \u001b[31mFAILED\u001b[0m!\"); .fail },{ @p__2213[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_336595,_336596) : intention_test_goal(_336597,_336598,_336599,_336600,_336601) <- .if_then_else(.member(_336596,_336595),.log(severe,\"assert_not_contains on event '\",_336597,\"' starting at line \",_336600,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336596,\"' NOT in '\",_336595,\"'\"); .fail); +test(_336598,passed,_336601,_336600)[assert_not_contains(_336595,_336596)]; .log(info,\"assert_not_contains on event '\",_336597,\"' \u001b[32mPASSED\u001b[0m\") },{ @p__2214[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_not_contains(_336602,_336603) <- .log(severe,\"assert_not_contains expecting '\",_336603,\"' NOT in '\",_336602,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_greater_than[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than(_336610,_336611) : (intention_test_goal(_336612,_336613,_336614,_336615,_336616) & (.number(_336610) & .number(_336611))) <- .if_then_else((_336610 <= _336611),.log(severe,\"assert_greater_than on event '\",_336612,\"' starting at line \",_336615,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336610,\" > \",_336611,\"'\"); .fail,+test(_336613,passed,_336616,_336615)[assert_greater_than(_336610,_336611)]; .log(info,\"assert_greater_than on event '\",_336612,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2216[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than(_336617,_336618) <- .log(severe,\"assert_greater_than expecting '\",_336617,\" > \",_336618,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_greater_than_equals[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than_equals(_336624,_336625) : (intention_test_goal(_336626,_336627,_336628,_336629,_336630) & (.number(_336624) & .number(_336625))) <- .if_then_else((_336624 < _336625),.log(severe,\"assert_greater_than_equals on event '\",_336626,\"' starting at line \",_336629,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336624,\" >= \",_336625,\"'\"); .fail,+test(_336627,passed,_336630,_336629)[assert_greater_than_equals(_336624,_336625)]; .log(info,\"assert_greater_than_equals on event '\",_336626,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2218[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_greater_than_equals(_336632,_336633) <- .log(severe,\"assert_greater_than_equals expecting '\",_336632,\" >= \",_336633,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @assert_between[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_between(_336645,_336647,_336648) : (intention_test_goal(_336649,_336650,_336651,_336652,_336654) & (.number(_336645) & (.number(_336647) & .number(_336648)))) <- .if_then_else(((_336645 < _336647) | (_336645 > _336648)),.log(severe,\"assert_between on event '\",_336649,\"' starting at line \",_336652,\" \u001b[31mFAILED\u001b[0m! Expected '\",_336647,\" <= \",_336645,\" <= \",_336648,\"'\"); .fail,+test(_336650,passed,_336654,_336652)[assert_between(_336645,_336647,_336648)]; .log(info,\"assert_between on event '\",_336649,\"' \u001b[32mPASSED\u001b[0m\")) },{ @p__2220[source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_assert.asl\")] +!assert_between(_336660,_336661,_336662) <- .log(severe,\"assert_between expecting '\",_336661,\" <= \",_336660,\" <= \",_336662,\"' could not be performed! \u001b[31mFAILED\u001b[0m!\"); .fail },{ @check_performance[atomic,source(self),url(\"jar:file:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/jason-lang-jason/jason-interpreter/build/libs/jason-interpreter-3.2.1.jar!/test/jason/inc/test_performance.asl\")] +!check_performance(_336663,_336664,_336665) : (.intention(_336667,_336668,[im(_336669,{ +!_336670[_336671] },{ _336672; _336673 },_336674)|_336675],current) & (_336676[code_line(_336677),code_src(_336678)] = _336669)) <- -+mean(_336663,0); .foreach(.range(_336679,1,_336664),.nano_time(_336680); !_336663; .nano_time(_336681); ?mean(_336663,_336682); -+mean(_336663,(_336682+((_336681-_336680)/_336664)))); ?mean(_336663,_336665); .log(info,\"check_performance on event '\",_336670[_336671],\"' starting at line \",_336677,\": \",math.round((_336665/1000)),\" microseconds\") },{ @p__2223[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!execute_test_plans : (.relevant_plans({ +!_336683 },_336684,_336685) & .my_name(_336686)) <- !create_default_fail_plan; .send(test_manager,tell,launching_test_set(_336686)); .foreach(.member(_336687[test],_336685),.findall(_336688,(.member(_336689,_336684) & ((_336689 = { @_336690 +!_336688 : _336691 <- _336692 }) & (_336687[test] = _336690))),_336693); .member(_336694,_336693); .send(test_manager,achieve,count_plans(launched,_336694,_336686)); !execute_test_plan(_336694)); .send(test_manager,tell,launched_test_set(_336686)) },{ @p__2224[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_default_fail_plan : auto_create_fail_plan <- .add_plan({ -!_336695[code(_336696),code_line(_336697),code_src(_336698),error(_336699),error_msg(_336700)] <- .log(severe,\"Error '\",_336699,\"' in '\",_336698,\"' on event '\",_336696,\"' at line \",_336697,\" \u001b[31mFAILED\u001b[0m! Message: '\",_336700); .send(test_manager,tell,fatal_error) },self,end) },{ @p__2225[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_default_fail_plan },{ @p__2226[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!execute_test_plan(_336701) : .intention(_336702,_336703,_336704,current) <- .log(fine,\"\u001b[33mTESTING\u001b[0m \",_336702,\" (main plan: \",_336701,\")\"); !_336701 },{ @p__2230[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!create_mock_agent(_336705) : .my_name(_336706) <- .create_agent(_336705,\"mock_agent.asl\"); .send(_336705,tell,mock_owner(_336706)) },{ @p__2231[source(self),url(\"file:src/test/jason/inc/tester_agent.asl\")] +!wait_idle(_336707) <- .wait(not (sleeping(_336707)),300,_336708); .wait(sleeping(_336707)) },{ @p__2232[source(self),test,url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median <- !assert_equals(2,math.median([1,3])); !assert_equals(1,math.median([1,1,3])); !test_median_non_numeric; .wait(100); !assert_true(state(test_median_non_numeric,failed)); !test_median_empty_set; .wait(100); !assert_true(state(test_median_empty_set,failed)) },{ @p__2233[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_non_numeric <- .log(warning,\"\u001b[35mTODO\u001b[0m: Although there is a -! plan, log is still printing many error messages\"); math.median([1,1,3,a]) },{ @p__2236[source(self),url(\"file:./src/test/jason/asl/functions/median.asl\")] +!test_median_empty_set <- math.median([]) },{ @kqmlReceivedTellStructure[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336709,tell,_336710::_336711,_336712) : (.literal(_336711) & (.ground(_336711) & (not (.list(_336711)) & .add_nested_source(_336711,_336709,_336713)))) <- ++_336710::_336713 },{ @kqmlReceivedTellList[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336714,tell,_336715,_336716) : .list(_336715) <- !add_all_kqml_received(_336714,_336715) },{ @kqmlReceivedTellList1[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_336717,[]) },{ @kqmlReceivedTellList2[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_336718,[_336719::_336720|_336721]) : (.literal(_336720) & .ground(_336720)) <- .add_nested_source(_336720,_336718,_336722); ++_336719::_336722; !add_all_kqml_received(_336718,_336721) },{ @kqmlReceivedTellList3[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_received(_336723,[_336724|_336725]) <- !add_all_kqml_received(_336723,_336725) },{ @kqmlReceivedUnTell[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336726,untell,_336727::_336728,_336729) : .add_nested_source(_336728,_336726,_336733) <- --_336727::_336733 },{ @kqmlReceivedAchieve[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336738,achieve,_336740::_336742,_336744) : (not (.list(_336742)) & .add_nested_source(_336742,_336738,_336747)) <- !!_336740::_336747 },{ @kqmlReceivedAchieveList[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336753,achieve,_336755,_336756) : .list(_336755) <- !add_all_kqml_achieve(_336753,_336755) },{ @kqmlReceivedAchieveList1[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_achieve(_336765,[]) },{ @kqmlReceivedAchieveList2[source(self),url(\"kqmlPlans.asl\")] +!add_all_kqml_achieve(_336773,[_336774::_336775|_336776]) <- .add_nested_source(_336775,_336773,_336779); !!_336774::_336779; !add_all_kqml_achieve(_336773,_336776) },{ @kqmlReceivedUnAchieve[atomic,source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336785,unachieve,_336786::_336787,_336788) <- .drop_desire(_336786::_336787) },{ @kqmlReceivedAskOne1d[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336790,askOne,_336791::_336792,_336793) : kqml::bel_no_source_self(_336791,_336792,_336794) <- .send(_336790,tell,_336791::_336794,_336793) },{ @kqmlReceivedAskOne1c[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336809,askOne,_336810::_336811,_336812) <- .add_nested_source(_336811,_336809,_336815); ?_336810::_336815; .remove_source_annot(_336815,_336816); .send(_336809,tell,_336810::_336816,_336812) },{ @kqmlReceivedAskAll2[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336835,askAll,_336836::_336837,_336838) <- .findall(_336836::_336839,kqml::bel_no_source_self(_336836,_336837,_336839),_336843); .send(_336835,tell,_336843,_336838) },{ @kqmlReceivedTellHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336853,tellHow,_336856,_336857) <- .remove_source_annot(_336856,_336859); .add_plan(_336859,_336853) },{ @kqmlReceivedUnTellHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336869,untellHow,_336877,_336878) <- .remove_plan(_336877,_336869) },{ @kqmlReceivedAskHow[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336884,askHow,_336887,_336889) <- .relevant_plans(_336887,_336891); .remove_source_annot(_336891,_336893); .send(_336884,tellHow,_336893,_336889) },{ @kqmlReceivedSignal[source(self),url(\"kqmlPlans.asl\")] +!kqml_received(_336907,signal,_336909::_336910,_336912) : (not (.list(_336910)) & .add_nested_source(_336910,_336907,_336915)) <- .signal({ +_336909::_336915 },type_signal) }]}\n[Java CI/build]   | [median] \u001b[35mTODO\u001b[0m: Although there is a -! plan, log is still printing many error messages\n[Java CI/build]   | [ArithFunctionTerm] Error in 'math.median([1,1,3,a])' (file:./src/test/jason/asl/functions/median.asl:27) -- math.median needs '[1,1,3,a]' made of numeric elements. -- error while evaluating function, unifier = {}\n[Java CI/build]   | [ArithFunctionTerm] Error in 'math.median([1,1,3,a])' (file:./src/test/jason/asl/functions/median.asl:27) -- math.median needs '[1,1,3,a]' made of numeric elements. -- error while evaluating function, unifier = {S=waiting}\n[Java CI/build]   | [ArithFunctionTerm] Error in 'math.median([1,1,3,a])' (file:./src/test/jason/asl/functions/median.asl:27) -- math.median needs '[1,1,3,a]' made of numeric elements. -- error while evaluating function, unifier = {}\n[Java CI/build]   | [ArithFunctionTerm] Error in 'math.median([1,1,3,a])' (file:./src/test/jason/asl/functions/median.asl:27) -- math.median needs '[1,1,3,a]' made of numeric elements. -- error while evaluating function, unifier = {}\n[Java CI/build]   | [median] state(pending)\n[Java CI/build]   | [median] state(executing)\n[Java CI/build]   | [ArithFunctionTerm] Error in 'math.median([1,1,3,a])' (file:./src/test/jason/asl/functions/median.asl:27) -- math.median needs '[1,1,3,a]' made of numeric elements. -- error while evaluating function, unifier = {}\n[Java CI/build]   | [ArithFunctionTerm] Error in 'math.median([1,1,3,a])' (file:./src/test/jason/asl/functions/median.asl:27) -- math.median needs '[1,1,3,a]' made of numeric elements. -- error while evaluating function, unifier = {S=achieved}\n[Java CI/build]   | [median] state(executing)\n[Java CI/build]   | [ArithFunctionTerm] Error in 'math.median([1,1,3,a])' (file:./src/test/jason/asl/functions/median.asl:27) -- math.median needs '[1,1,3,a]' made of numeric elements. -- error while evaluating function, unifier = {S=finished}\n[Java CI/build]   | [median] state(waiting)\n[Java CI/build]   | [median] state(failed)\n[Java CI/build]   | [median] state(achieved)\n[Java CI/build]   | [median] state(finished)\n[Java CI/build]   | [test_lists] \u001b[35mTODO\u001b[0m: Adding two rules statements are generating error. Uncomment line below and comment the statement member(Item, [Item|Tail]) on the top of this file.\n[Java CI/build]   | [ArithFunctionTerm] Error in 'math.median([])' (file:./src/test/jason/asl/functions/median.asl:38) -- math.median could not define a median for the empty set '[]'. -- error while evaluating function, unifier = {}\n[Java CI/build]   | [ArithFunctionTerm] Error in 'math.median([])' (file:./src/test/jason/asl/functions/median.asl:38) -- math.median could not define a median for the empty set '[]'. -- error while evaluating function, unifier = {}\n[Java CI/build]   | [ArithFunctionTerm] Error in 'math.median([])' (file:./src/test/jason/asl/functions/median.asl:38) -- math.median could not define a median for the empty set '[]'. -- error while evaluating function, unifier = {S=waiting}\n[Java CI/build]   | [median] state(executing)\n[Java CI/build]   | [ArithFunctionTerm] Error in 'math.median([])' (file:./src/test/jason/asl/functions/median.asl:38) -- math.median could not define a median for the empty set '[]'. -- error while evaluating function, unifier = {}\n[Java CI/build]   | [median] state(pending)\n[Java CI/build]   | [ArithFunctionTerm] Error in 'math.median([])' (file:./src/test/jason/asl/functions/median.asl:38) -- math.median could not define a median for the empty set '[]'. -- error while evaluating function, unifier = {}\n[Java CI/build]   | [ArithFunctionTerm] Error in 'math.median([])' (file:./src/test/jason/asl/functions/median.asl:38) -- math.median could not define a median for the empty set '[]'. -- error while evaluating function, unifier = {S=achieved}\n[Java CI/build]   | [median] state(executing)\n[Java CI/build]   | [ArithFunctionTerm] Error in 'math.median([])' (file:./src/test/jason/asl/functions/median.asl:38) -- math.median could not define a median for the empty set '[]'. -- error while evaluating function, unifier = {S=finished}\n[Java CI/build]   | [median] state(waiting)\n[Java CI/build]   | [median] state(failed)\n[Java CI/build]   | [median] state(achieved)\n[Java CI/build]   | [median] state(finished)\n[Java CI/build]   | \n[Java CI/build]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.\n[Java CI/build]   | \n[Java CI/build]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[Java CI/build]   | \n[Java CI/build]   | See https://docs.gradle.org/8.0.2/userguide/command_line_interface.html#sec:command_line_warnings\n[Java CI/build]   | \n[Java CI/build]   | BUILD SUCCESSFUL in 5s\n[Java CI/build]   | 5 actionable tasks: 2 executed, 3 up-to-date\n[Java CI/build]   \u2705  Success - Main Test jason\n[Java CI/build] \u2b50 Run Post Set up JDK 17\n[Java CI/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[Java CI/build]   \u2705  Success - Post Set up JDK 17\n[Java CI/build] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}