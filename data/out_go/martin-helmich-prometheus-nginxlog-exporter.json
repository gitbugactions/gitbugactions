{
    "repository": "martin-helmich/prometheus-nginxlog-exporter",
    "clone_url": "https://github.com/martin-helmich/prometheus-nginxlog-exporter.git",
    "timestamp": "2023-05-30T11:43:43.737717Z",
    "clone_success": true,
    "number of actions": 4,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Compile & Test/Test release  ] \ud83d\ude80  Start image=crawlergpt:latest\n[Compile & Test/Run unit tests] \ud83d\ude80  Start image=crawlergpt:latest\n[Compile & Test/Compile binary] \ud83d\ude80  Start image=crawlergpt:latest\n[Compile & Test/Compile binary]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Compile & Test/Test release  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Compile & Test/Run unit tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Compile & Test/Test release  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Compile & Test/Run unit tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Compile & Test/Compile binary]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Compile & Test/Test release  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Compile & Test/Run unit tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Compile & Test/Compile binary]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Compile & Test/Test release  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/martin-helmich-prometheus-nginxlog-exporter] user=0 workdir=\n[Compile & Test/Run unit tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/martin-helmich-prometheus-nginxlog-exporter] user=0 workdir=\n[Compile & Test/Compile binary]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/martin-helmich-prometheus-nginxlog-exporter] user=0 workdir=\n[Compile & Test/Test release  ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v4\n[Compile & Test/Test release  ]   \u2601  git clone 'https://github.com/goreleaser/goreleaser-action' # ref=v4\n[Compile & Test/Test release  ]   \u2601  git clone 'https://github.com/goreleaser/goreleaser-action' # ref=v4\n[Compile & Test/Run unit tests]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v4\n[Compile & Test/Compile binary]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v4\n[Compile & Test/Compile binary]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v3\n[Compile & Test/Run unit tests] \u2b50 Run Main actions/checkout@v3\n[Compile & Test/Test release  ] \u2b50 Run Main Checkout\n[Compile & Test/Compile binary] \u2b50 Run Main actions/checkout@v3\n[Compile & Test/Compile binary]   \u2705  Success - Main actions/checkout@v3\n[Compile & Test/Run unit tests]   \u2705  Success - Main actions/checkout@v3\n[Compile & Test/Test release  ]   \u2705  Success - Main Checkout\n[Compile & Test/Compile binary] \u2b50 Run Main Set up Go\n[Compile & Test/Run unit tests] \u2b50 Run Main Set up Go\n[Compile & Test/Test release  ] \u2b50 Run Main Unshallow\n[Compile & Test/Compile binary]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v4/ dst=/var/run/act/actions/actions-setup-go@v4/\n[Compile & Test/Run unit tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v4/ dst=/var/run/act/actions/actions-setup-go@v4/\n[Compile & Test/Compile binary]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v4/] user=0 workdir=\n[Compile & Test/Run unit tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v4/] user=0 workdir=\n[Compile & Test/Test release  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Compile & Test/Compile binary]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v4/dist/setup/index.js] user= workdir=\n[Compile & Test/Test release  ]   | fatal: --unshallow on a complete repository does not make sense\n[Compile & Test/Test release  ]   \u274c  Failure - Main Unshallow\n[Compile & Test/Run unit tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v4/dist/setup/index.js] user= workdir=\n[Compile & Test/Test release  ] exitcode '128': failure\n[Compile & Test/Compile binary]   | Setup go version spec 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::isExplicit: \n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::explicit? false\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::explicit? true\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::explicit? true\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::explicit? true\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::match not found\n[Compile & Test/Compile binary]   | Attempting to download 1.18.x...\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::No manifest cached\n[Compile & Test/Run unit tests]   | Setup go version spec 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::isExplicit: \n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::explicit? false\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::explicit? true\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::explicit? true\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::explicit? true\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::match not found\n[Compile & Test/Run unit tests]   | Attempting to download 1.18.x...\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::No manifest cached\n[Compile & Test/Compile binary]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::HttpClientError: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v4/dist/setup/index.js:8907:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Compile & Test/Compile binary]   | Falling back to download directly from Go\n[Compile & Test/Run unit tests]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::HttpClientError: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v4/dist/setup/index.js:8907:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Compile & Test/Run unit tests]   | Falling back to download directly from Go\n[Compile & Test/Test release  ] \ud83c\udfc1  Job failed\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.20.0-rc.3 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.20.0-rc.2 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.20.0-rc.1 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.19.8 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.19.7 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.19.6 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.19.5 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.19.4 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.19.3 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.19.2 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.19.1 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.19.0 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.19.0-rc.2 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.19.0-rc.1 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.19.0-beta.1 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::check 1.18.10 satisfies 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::matched go1.18.10\n[Compile & Test/Compile binary]   | Install from dist\n[Compile & Test/Compile binary]   | Acquiring go1.18.10 from https://storage.googleapis.com/golang/go1.18.10.linux-amd64.tar.gz\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.18.10.linux-amd64.tar.gz\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::Destination /tmp/c8fc4800-3e59-499f-bbd3-fdf313aee7d8\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.20.0-rc.3 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.20.0-rc.2 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.20.0-rc.1 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.19.8 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.19.7 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.19.6 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.19.5 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.19.4 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.19.3 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.19.2 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.19.1 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.19.0 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.19.0-rc.2 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.19.0-rc.1 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.19.0-beta.1 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::check 1.18.10 satisfies 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::matched go1.18.10\n[Compile & Test/Run unit tests]   | Install from dist\n[Compile & Test/Run unit tests]   | Acquiring go1.18.10 from https://storage.googleapis.com/golang/go1.18.10.linux-amd64.tar.gz\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.18.10.linux-amd64.tar.gz\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::Destination /tmp/abf3530f-7aa1-4fb1-90f6-a74a3da0da08\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::download complete\n[Compile & Test/Compile binary]   | Extracting Go...\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::Checking tar --version\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Compile & Test/Compile binary]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/f0246ba8-1962-4b2c-abd9-b4dea3f880e0 -f /tmp/c8fc4800-3e59-499f-bbd3-fdf313aee7d8\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::download complete\n[Compile & Test/Run unit tests]   | Extracting Go...\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::Checking tar --version\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Compile & Test/Run unit tests]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/4eb08df5-0595-49da-94a2-c336b7365a2f -f /tmp/abf3530f-7aa1-4fb1-90f6-a74a3da0da08\n[Compile & Test/Compile binary]   | Successfully extracted go to /tmp/f0246ba8-1962-4b2c-abd9-b4dea3f880e0\n[Compile & Test/Compile binary]   | Adding to the cache ...\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::Caching tool go 1.18.10 x64\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::source dir: /tmp/f0246ba8-1962-4b2c-abd9-b4dea3f880e0/go\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.18.10/x64\n[Compile & Test/Run unit tests]   | Successfully extracted go to /tmp/4eb08df5-0595-49da-94a2-c336b7365a2f\n[Compile & Test/Run unit tests]   | Adding to the cache ...\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::Caching tool go 1.18.10 x64\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::source dir: /tmp/4eb08df5-0595-49da-94a2-c336b7365a2f/go\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.18.10/x64\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::finished caching tool\n[Compile & Test/Compile binary]   | Successfully cached go to /opt/hostedtoolcache/go/1.18.10/x64\n[Compile & Test/Compile binary]   | Added go to the path\n[Compile & Test/Compile binary]   | Successfully set up Go version 1.18.x\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.18.10/x64/bin/go:\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::add bin true\n[Compile & Test/Compile binary]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[Compile & Test/Compile binary]   \u2753 add-matcher /run/act/actions/actions-setup-go@v4/matchers.json\n[Compile & Test/Compile binary]   | go version go1.18.10 linux/amd64\n[Compile & Test/Compile binary]   | \n[Compile & Test/Compile binary]   \u2753  ::group::go env\n[Compile & Test/Compile binary]   | GO111MODULE=\"\"\n[Compile & Test/Compile binary]   | GOARCH=\"amd64\"\n[Compile & Test/Compile binary]   | GOBIN=\"\"\n[Compile & Test/Compile binary]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Compile & Test/Compile binary]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Compile & Test/Compile binary]   | GOEXE=\"\"\n[Compile & Test/Compile binary]   | GOEXPERIMENT=\"\"\n[Compile & Test/Compile binary]   | GOFLAGS=\"\"\n[Compile & Test/Compile binary]   | GOHOSTARCH=\"amd64\"\n[Compile & Test/Compile binary]   | GOHOSTOS=\"linux\"\n[Compile & Test/Compile binary]   | GOINSECURE=\"\"\n[Compile & Test/Compile binary]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Compile & Test/Compile binary]   | GONOPROXY=\"\"\n[Compile & Test/Compile binary]   | GONOSUMDB=\"\"\n[Compile & Test/Compile binary]   | GOOS=\"linux\"\n[Compile & Test/Compile binary]   | GOPATH=\"/home/runneradmin/go\"\n[Compile & Test/Compile binary]   | GOPRIVATE=\"\"\n[Compile & Test/Compile binary]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Compile & Test/Compile binary]   | GOROOT=\"/opt/hostedtoolcache/go/1.18.10/x64\"\n[Compile & Test/Compile binary]   | GOSUMDB=\"sum.golang.org\"\n[Compile & Test/Compile binary]   | GOTMPDIR=\"\"\n[Compile & Test/Compile binary]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.18.10/x64/pkg/tool/linux_amd64\"\n[Compile & Test/Compile binary]   | GOVCS=\"\"\n[Compile & Test/Compile binary]   | GOVERSION=\"go1.18.10\"\n[Compile & Test/Compile binary]   | GCCGO=\"gccgo\"\n[Compile & Test/Compile binary]   | GOAMD64=\"v1\"\n[Compile & Test/Compile binary]   | AR=\"ar\"\n[Compile & Test/Compile binary]   | CC=\"gcc\"\n[Compile & Test/Compile binary]   | CXX=\"g++\"\n[Compile & Test/Compile binary]   | CGO_ENABLED=\"1\"\n[Compile & Test/Compile binary]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/martin-helmich-prometheus-nginxlog-exporter/go.mod\"\n[Compile & Test/Compile binary]   | GOWORK=\"\"\n[Compile & Test/Compile binary]   | CGO_CFLAGS=\"-g -O2\"\n[Compile & Test/Compile binary]   | CGO_CPPFLAGS=\"\"\n[Compile & Test/Compile binary]   | CGO_CXXFLAGS=\"-g -O2\"\n[Compile & Test/Compile binary]   | CGO_FFLAGS=\"-g -O2\"\n[Compile & Test/Compile binary]   | CGO_LDFLAGS=\"-g -O2\"\n[Compile & Test/Compile binary]   | PKG_CONFIG=\"pkg-config\"\n[Compile & Test/Compile binary]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2080883919=/tmp/go-build -gno-record-gcc-switches\"\n[Compile & Test/Compile binary]   | \n[Compile & Test/Compile binary]   \u2753  ::endgroup::\n[Compile & Test/Compile binary]   \u2705  Success - Main Set up Go\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::finished caching tool\n[Compile & Test/Run unit tests]   | Successfully cached go to /opt/hostedtoolcache/go/1.18.10/x64\n[Compile & Test/Run unit tests]   | Added go to the path\n[Compile & Test/Run unit tests]   | Successfully set up Go version 1.18.x\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.18.10/x64/bin/go:\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Compile & Test/Compile binary]   \u2699  ::set-output:: go-version=1.18.10\n[Compile & Test/Run unit tests]   \ud83d\udcac  ::debug::add bin true\n[Compile & Test/Run unit tests]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[Compile & Test/Run unit tests]   \u2753 add-matcher /run/act/actions/actions-setup-go@v4/matchers.json\n[Compile & Test/Run unit tests]   | go version go1.18.10 linux/amd64\n[Compile & Test/Run unit tests]   | \n[Compile & Test/Run unit tests]   \u2753  ::group::go env\n[Compile & Test/Compile binary]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.18.10/x64/bin\n[Compile & Test/Compile binary]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Compile & Test/Run unit tests]   | GO111MODULE=\"\"\n[Compile & Test/Run unit tests]   | GOARCH=\"amd64\"\n[Compile & Test/Run unit tests]   | GOBIN=\"\"\n[Compile & Test/Run unit tests]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Compile & Test/Run unit tests]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Compile & Test/Run unit tests]   | GOEXE=\"\"\n[Compile & Test/Run unit tests]   | GOEXPERIMENT=\"\"\n[Compile & Test/Run unit tests]   | GOFLAGS=\"\"\n[Compile & Test/Run unit tests]   | GOHOSTARCH=\"amd64\"\n[Compile & Test/Run unit tests]   | GOHOSTOS=\"linux\"\n[Compile & Test/Run unit tests]   | GOINSECURE=\"\"\n[Compile & Test/Run unit tests]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Compile & Test/Run unit tests]   | GONOPROXY=\"\"\n[Compile & Test/Run unit tests]   | GONOSUMDB=\"\"\n[Compile & Test/Run unit tests]   | GOOS=\"linux\"\n[Compile & Test/Run unit tests]   | GOPATH=\"/home/runneradmin/go\"\n[Compile & Test/Run unit tests]   | GOPRIVATE=\"\"\n[Compile & Test/Run unit tests]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Compile & Test/Run unit tests]   | GOROOT=\"/opt/hostedtoolcache/go/1.18.10/x64\"\n[Compile & Test/Run unit tests]   | GOSUMDB=\"sum.golang.org\"\n[Compile & Test/Run unit tests]   | GOTMPDIR=\"\"\n[Compile & Test/Run unit tests]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.18.10/x64/pkg/tool/linux_amd64\"\n[Compile & Test/Run unit tests]   | GOVCS=\"\"\n[Compile & Test/Run unit tests]   | GOVERSION=\"go1.18.10\"\n[Compile & Test/Run unit tests]   | GCCGO=\"gccgo\"\n[Compile & Test/Run unit tests]   | GOAMD64=\"v1\"\n[Compile & Test/Run unit tests]   | AR=\"ar\"\n[Compile & Test/Run unit tests]   | CC=\"gcc\"\n[Compile & Test/Run unit tests]   | CXX=\"g++\"\n[Compile & Test/Run unit tests]   | CGO_ENABLED=\"1\"\n[Compile & Test/Run unit tests]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/martin-helmich-prometheus-nginxlog-exporter/go.mod\"\n[Compile & Test/Run unit tests]   | GOWORK=\"\"\n[Compile & Test/Run unit tests]   | CGO_CFLAGS=\"-g -O2\"\n[Compile & Test/Run unit tests]   | CGO_CPPFLAGS=\"\"\n[Compile & Test/Run unit tests]   | CGO_CXXFLAGS=\"-g -O2\"\n[Compile & Test/Run unit tests]   | CGO_FFLAGS=\"-g -O2\"\n[Compile & Test/Run unit tests]   | CGO_LDFLAGS=\"-g -O2\"\n[Compile & Test/Run unit tests]   | PKG_CONFIG=\"pkg-config\"\n[Compile & Test/Run unit tests]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2768277893=/tmp/go-build -gno-record-gcc-switches\"\n[Compile & Test/Run unit tests]   | \n[Compile & Test/Run unit tests]   \u2753  ::endgroup::\n[Compile & Test/Compile binary] \u2b50 Run Main Compile\n[Compile & Test/Run unit tests]   \u2705  Success - Main Set up Go\n[Compile & Test/Run unit tests]   \u2699  ::set-output:: go-version=1.18.10\n[Compile & Test/Compile binary]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Compile & Test/Run unit tests]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.18.10/x64/bin\n[Compile & Test/Run unit tests]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Compile & Test/Run unit tests] \u2b50 Run Main Run unit tests\n[Compile & Test/Run unit tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Compile & Test/Compile binary]   | go: downloading gopkg.in/yaml.v2 v2.4.0\n[Compile & Test/Compile binary]   | go: downloading github.com/prometheus/common v0.42.0\n[Compile & Test/Compile binary]   | go: downloading github.com/hashicorp/hcl v1.0.0\n[Compile & Test/Compile binary]   | go: downloading github.com/hashicorp/consul/api v1.20.0\n[Compile & Test/Compile binary]   | go: downloading github.com/pkg/errors v0.9.1\n[Compile & Test/Compile binary]   | go: downloading github.com/satyrius/gonx v1.3.1-0.20180709120835-47c52b995fe5\n[Compile & Test/Compile binary]   | go: downloading github.com/prometheus/client_golang v1.15.0\n[Compile & Test/Compile binary]   | go: downloading gopkg.in/mcuadros/go-syslog.v2 v2.3.0\n[Compile & Test/Compile binary]   | go: downloading github.com/nxadm/tail v1.4.8\n[Compile & Test/Run unit tests]   | go: downloading github.com/hashicorp/consul/api v1.20.0\n[Compile & Test/Run unit tests]   | go: downloading github.com/prometheus/client_golang v1.15.0\n[Compile & Test/Run unit tests]   | go: downloading github.com/prometheus/common v0.42.0\n[Compile & Test/Run unit tests]   | go: downloading github.com/stretchr/testify v1.8.1\n[Compile & Test/Run unit tests]   | go: downloading github.com/hashicorp/hcl v1.0.0\n[Compile & Test/Run unit tests]   | go: downloading github.com/nxadm/tail v1.4.8\n[Compile & Test/Run unit tests]   | go: downloading gopkg.in/yaml.v2 v2.4.0\n[Compile & Test/Run unit tests]   | go: downloading gopkg.in/mcuadros/go-syslog.v2 v2.3.0\n[Compile & Test/Run unit tests]   | go: downloading github.com/pkg/errors v0.9.1\n[Compile & Test/Run unit tests]   | go: downloading github.com/satyrius/gonx v1.3.1-0.20180709120835-47c52b995fe5\n[Compile & Test/Compile binary]   | go: downloading gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7\n[Compile & Test/Compile binary]   | go: downloading github.com/fsnotify/fsnotify v1.4.9\n[Compile & Test/Compile binary]   | go: downloading github.com/mitchellh/mapstructure v1.4.1\n[Compile & Test/Compile binary]   | go: downloading github.com/hashicorp/go-rootcerts v1.0.2\n[Compile & Test/Compile binary]   | go: downloading github.com/hashicorp/go-hclog v0.14.1\n[Compile & Test/Compile binary]   | go: downloading github.com/hashicorp/serf v0.10.1\n[Compile & Test/Compile binary]   | go: downloading golang.org/x/sys v0.6.0\n[Compile & Test/Compile binary]   | go: downloading github.com/hashicorp/go-cleanhttp v0.5.1\n[Compile & Test/Compile binary]   | go: downloading github.com/prometheus/client_model v0.3.0\n[Compile & Test/Compile binary]   | go: downloading github.com/mattn/go-isatty v0.0.12\n[Compile & Test/Compile binary]   | go: downloading github.com/fatih/color v1.9.0\n[Compile & Test/Compile binary]   | go: downloading github.com/golang/protobuf v1.5.3\n[Compile & Test/Compile binary]   | go: downloading github.com/matttproud/golang_protobuf_extensions v1.0.4\n[Compile & Test/Compile binary]   | go: downloading github.com/beorn7/perks v1.0.1\n[Compile & Test/Compile binary]   | go: downloading google.golang.org/protobuf v1.30.0\n[Compile & Test/Compile binary]   | go: downloading github.com/prometheus/procfs v0.9.0\n[Compile & Test/Compile binary]   | go: downloading github.com/cespare/xxhash/v2 v2.2.0\n[Compile & Test/Run unit tests]   | go: downloading gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7\n[Compile & Test/Run unit tests]   | go: downloading github.com/fsnotify/fsnotify v1.4.9\n[Compile & Test/Run unit tests]   | go: downloading github.com/davecgh/go-spew v1.1.1\n[Compile & Test/Run unit tests]   | go: downloading gopkg.in/yaml.v3 v3.0.1\n[Compile & Test/Run unit tests]   | go: downloading github.com/pmezard/go-difflib v1.0.0\n[Compile & Test/Run unit tests]   | go: downloading golang.org/x/sys v0.6.0\n[Compile & Test/Compile binary]   | go: downloading github.com/mattn/go-colorable v0.1.6\n[Compile & Test/Run unit tests]   | go: downloading github.com/hashicorp/go-cleanhttp v0.5.1\n[Compile & Test/Run unit tests]   | go: downloading github.com/mitchellh/mapstructure v1.4.1\n[Compile & Test/Run unit tests]   | go: downloading github.com/hashicorp/go-rootcerts v1.0.2\n[Compile & Test/Run unit tests]   | go: downloading github.com/hashicorp/go-hclog v0.14.1\n[Compile & Test/Run unit tests]   | go: downloading github.com/hashicorp/serf v0.10.1\n[Compile & Test/Compile binary]   | go: downloading github.com/armon/go-metrics v0.3.10\n[Compile & Test/Run unit tests]   | go: downloading github.com/prometheus/client_model v0.3.0\n[Compile & Test/Run unit tests]   | go: downloading github.com/golang/protobuf v1.5.3\n[Compile & Test/Run unit tests]   | go: downloading github.com/matttproud/golang_protobuf_extensions v1.0.4\n[Compile & Test/Run unit tests]   | go: downloading github.com/beorn7/perks v1.0.1\n[Compile & Test/Run unit tests]   | go: downloading github.com/prometheus/procfs v0.9.0\n[Compile & Test/Run unit tests]   | go: downloading github.com/cespare/xxhash/v2 v2.2.0\n[Compile & Test/Run unit tests]   | go: downloading google.golang.org/protobuf v1.30.0\n[Compile & Test/Compile binary]   | go: downloading github.com/hashicorp/go-immutable-radix v1.3.0\n[Compile & Test/Compile binary]   | go: downloading github.com/hashicorp/golang-lru v0.5.4\n[Compile & Test/Run unit tests]   | go: downloading github.com/mattn/go-isatty v0.0.12\n[Compile & Test/Run unit tests]   | go: downloading github.com/fatih/color v1.9.0\n[Compile & Test/Run unit tests]   | go: downloading github.com/armon/go-metrics v0.3.10\n[Compile & Test/Run unit tests]   | go: downloading github.com/mattn/go-colorable v0.1.6\n[Compile & Test/Run unit tests]   | go: downloading github.com/hashicorp/go-immutable-radix v1.3.0\n[Compile & Test/Run unit tests]   | go: downloading github.com/hashicorp/golang-lru v0.5.4\n[Compile & Test/Run unit tests]   | ?   \tgithub.com/martin-helmich/prometheus-nginxlog-exporter\t[no test files]\n[Compile & Test/Run unit tests]   | ok  \tgithub.com/martin-helmich/prometheus-nginxlog-exporter/pkg/config\t0.253s\n[Compile & Test/Run unit tests]   | ?   \tgithub.com/martin-helmich/prometheus-nginxlog-exporter/pkg/discovery\t[no test files]\n[Compile & Test/Run unit tests]   | ?   \tgithub.com/martin-helmich/prometheus-nginxlog-exporter/pkg/metrics\t[no test files]\n[Compile & Test/Run unit tests]   | ?   \tgithub.com/martin-helmich/prometheus-nginxlog-exporter/pkg/parser\t[no test files]\n[Compile & Test/Run unit tests]   | ok  \tgithub.com/martin-helmich/prometheus-nginxlog-exporter/pkg/parser/jsonparser\t0.233s\n[Compile & Test/Run unit tests]   | ok  \tgithub.com/martin-helmich/prometheus-nginxlog-exporter/pkg/parser/textparser\t0.164s\n[Compile & Test/Run unit tests]   | ?   \tgithub.com/martin-helmich/prometheus-nginxlog-exporter/pkg/prof\t[no test files]\n[Compile & Test/Run unit tests]   | ok  \tgithub.com/martin-helmich/prometheus-nginxlog-exporter/pkg/relabeling\t0.127s\n[Compile & Test/Run unit tests]   | ?   \tgithub.com/martin-helmich/prometheus-nginxlog-exporter/pkg/syslog\t[no test files]\n[Compile & Test/Run unit tests]   | ?   \tgithub.com/martin-helmich/prometheus-nginxlog-exporter/pkg/tail\t[no test files]\n[Compile & Test/Run unit tests]   \u2705  Success - Main Run unit tests\n[Compile & Test/Run unit tests] \u2b50 Run Post Set up Go\n[Compile & Test/Run unit tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v4/dist/cache-save/index.js] user= workdir=\n[Compile & Test/Compile binary]   \u2705  Success - Main Compile\n[Compile & Test/Compile binary] \u2b50 Run Main Upload build artifact\n[Compile & Test/Compile binary]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-upload-artifact@v3/ dst=/var/run/act/actions/actions-upload-artifact@v3/\n[Compile & Test/Compile binary]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-upload-artifact@v3/] user=0 workdir=\n[Compile & Test/Compile binary]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-upload-artifact@v3/dist/index.js] user= workdir=\n[Compile & Test/Run unit tests]   | [command]/opt/hostedtoolcache/go/1.18.10/x64/bin/go env GOMODCACHE\n[Compile & Test/Run unit tests]   | [command]/opt/hostedtoolcache/go/1.18.10/x64/bin/go env GOCACHE\n[Compile & Test/Run unit tests]   | /home/runneradmin/go/pkg/mod\n[Compile & Test/Run unit tests]   | /home/runneradmin/.cache/go-build\n[Compile & Test/Run unit tests]   | Primary key was not generated. Please check the log messages above for more errors or information\n[Compile & Test/Run unit tests]   \u2705  Success - Post Set up Go\n[Compile & Test/Run unit tests] \ud83c\udfc1  Job succeeded\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::Search path '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/martin-helmich-prometheus-nginxlog-exporter/prometheus-nginxlog-exporter'\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::File:/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/martin-helmich-prometheus-nginxlog-exporter/prometheus-nginxlog-exporter was found using the provided searchPath\n[Compile & Test/Compile binary]   | With the provided path, there will be 1 file uploaded\n[Compile & Test/Compile binary]   \ud83d\udcac  ::debug::Root artifact directory is /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/martin-helmich-prometheus-nginxlog-exporter\n[Compile & Test/Compile binary]   | Starting artifact upload\n[Compile & Test/Compile binary]   | For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging\n[Compile & Test/Compile binary]   | Artifact name is valid!\n[Compile & Test/Compile binary]   \u2757  ::error::Unable to get ACTIONS_RUNTIME_TOKEN env variable\n[Compile & Test/Compile binary]   \u274c  Failure - Main Upload build artifact\n[Compile & Test/Compile binary] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/dbed15c87e9e2f0f24d136156725d29628ccdc1dd0e6a15f90dcc6128be02454/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Compile & Test/Compile binary] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}