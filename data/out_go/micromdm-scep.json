{
    "repository": "micromdm/scep",
    "clone_url": "https://github.com/micromdm/scep.git",
    "timestamp": "2023-05-30T11:43:00.735507Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[CI/Build, test & format] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Build, test & format]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Build, test & format]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Build, test & format]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Build, test & format]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/micromdm-scep] user=0 workdir=\n[CI/Build, test & format]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[CI/Build, test & format] \ud83e\uddea  Matrix: map[go-version:1.15.x platform:ubuntu-latest]\n[CI/Build, test & format] \u2b50 Run Main actions/checkout@v2\n[CI/Build, test & format]   \u2705  Success - Main actions/checkout@v2\n[CI/Build, test & format] \u2b50 Run Main setup go\n[CI/Build, test & format]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[CI/Build, test & format]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[CI/Build, test & format]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[CI/Build, test & format]   | Setup go stable version spec 1.15.x\n[CI/Build, test & format]   \ud83d\udcac  ::debug::isExplicit: \n[CI/Build, test & format]   \ud83d\udcac  ::debug::explicit? false\n[CI/Build, test & format]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[CI/Build, test & format]   \ud83d\udcac  ::debug::explicit? true\n[CI/Build, test & format]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[CI/Build, test & format]   \ud83d\udcac  ::debug::explicit? true\n[CI/Build, test & format]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[CI/Build, test & format]   \ud83d\udcac  ::debug::explicit? true\n[CI/Build, test & format]   \ud83d\udcac  ::debug::evaluating 3 versions\n[CI/Build, test & format]   \ud83d\udcac  ::debug::matched: 1.15.15\n[CI/Build, test & format]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.15.15/x64\n[CI/Build, test & format]   \ud83d\udcac  ::debug::Found tool in cache go 1.15.15 x64\n[CI/Build, test & format]   | Found in cache @ /opt/hostedtoolcache/go/1.15.15/x64\n[CI/Build, test & format]   | Added go to the path\n[CI/Build, test & format]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.15.15/x64/bin/go:\n[CI/Build, test & format]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[CI/Build, test & format]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[CI/Build, test & format]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[CI/Build, test & format]   \ud83d\udcac  ::debug::add bin true\n[CI/Build, test & format]   | Successfully setup go version 1.15.x\n[CI/Build, test & format]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[CI/Build, test & format]   | go version go1.15.15 linux/amd64\n[CI/Build, test & format]   | \n[CI/Build, test & format]   \u2753  ::group::go env\n[CI/Build, test & format]   | GO111MODULE=\"\"\n[CI/Build, test & format]   | GOARCH=\"amd64\"\n[CI/Build, test & format]   | GOBIN=\"\"\n[CI/Build, test & format]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[CI/Build, test & format]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[CI/Build, test & format]   | GOEXE=\"\"\n[CI/Build, test & format]   | GOFLAGS=\"\"\n[CI/Build, test & format]   | GOHOSTARCH=\"amd64\"\n[CI/Build, test & format]   | GOHOSTOS=\"linux\"\n[CI/Build, test & format]   | GOINSECURE=\"\"\n[CI/Build, test & format]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[CI/Build, test & format]   | GONOPROXY=\"\"\n[CI/Build, test & format]   | GONOSUMDB=\"\"\n[CI/Build, test & format]   | GOOS=\"linux\"\n[CI/Build, test & format]   | GOPATH=\"/home/runneradmin/go\"\n[CI/Build, test & format]   | GOPRIVATE=\"\"\n[CI/Build, test & format]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[CI/Build, test & format]   | GOROOT=\"/opt/hostedtoolcache/go/1.15.15/x64\"\n[CI/Build, test & format]   | GOSUMDB=\"sum.golang.org\"\n[CI/Build, test & format]   | GOTMPDIR=\"\"\n[CI/Build, test & format]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.15.15/x64/pkg/tool/linux_amd64\"\n[CI/Build, test & format]   | GCCGO=\"gccgo\"\n[CI/Build, test & format]   | AR=\"ar\"\n[CI/Build, test & format]   | CC=\"gcc\"\n[CI/Build, test & format]   | CXX=\"g++\"\n[CI/Build, test & format]   | CGO_ENABLED=\"1\"\n[CI/Build, test & format]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/micromdm-scep/go.mod\"\n[CI/Build, test & format]   | CGO_CFLAGS=\"-g -O2\"\n[CI/Build, test & format]   | CGO_CPPFLAGS=\"\"\n[CI/Build, test & format]   | CGO_CXXFLAGS=\"-g -O2\"\n[CI/Build, test & format]   | CGO_FFLAGS=\"-g -O2\"\n[CI/Build, test & format]   | CGO_LDFLAGS=\"-g -O2\"\n[CI/Build, test & format]   | PKG_CONFIG=\"pkg-config\"\n[CI/Build, test & format]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build532555003=/tmp/go-build -gno-record-gcc-switches\"\n[CI/Build, test & format]   | \n[CI/Build, test & format]   \u2753  ::endgroup::\n[CI/Build, test & format]   \u2705  Success - Main setup go\n[CI/Build, test & format]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.15.15/x64\n[CI/Build, test & format]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.15.15/x64/bin\n[CI/Build, test & format]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[CI/Build, test & format] \u2b50 Run Main Build\n[CI/Build, test & format]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/Build, test & format]   | go: downloading github.com/go-kit/kit v0.4.0\n[CI/Build, test & format]   | go: downloading go.mozilla.org/pkcs7 v0.0.0-20210826202110-33d05740a352\n[CI/Build, test & format]   | go: downloading github.com/gorilla/mux v1.4.0\n[CI/Build, test & format]   | go: downloading github.com/boltdb/bolt v1.3.1\n[CI/Build, test & format]   | go: downloading github.com/pkg/errors v0.8.0\n[CI/Build, test & format]   | go: downloading github.com/groob/finalizer v0.0.0-20170707115354-4c2ed49aabda\n[CI/Build, test & format]   | go: downloading golang.org/x/net v0.0.0-20170726083632-f5079bd7f6f7\n[CI/Build, test & format]   | go: downloading github.com/go-logfmt/logfmt v0.3.0\n[CI/Build, test & format]   | go: downloading github.com/go-stack/stack v1.6.0\n[CI/Build, test & format]   | github.com/go-kit/kit/endpoint\n[CI/Build, test & format]   | golang.org/x/net/context\n[CI/Build, test & format]   | github.com/go-stack/stack\n[CI/Build, test & format]   | github.com/pkg/errors\n[CI/Build, test & format]   | github.com/go-logfmt/logfmt\n[CI/Build, test & format]   | github.com/boltdb/bolt\n[CI/Build, test & format]   | github.com/micromdm/scep/v2/cryptoutil/x509util\n[CI/Build, test & format]   | github.com/micromdm/scep/v2/depot/file\n[CI/Build, test & format]   | go.mozilla.org/pkcs7\n[CI/Build, test & format]   | github.com/gorilla/mux\n[CI/Build, test & format]   | golang.org/x/net/context/ctxhttp\n[CI/Build, test & format]   | github.com/micromdm/scep/v2/cryptoutil\n[CI/Build, test & format]   | github.com/go-kit/kit/log\n[CI/Build, test & format]   | github.com/micromdm/scep/v2/challenge/bolt\n[CI/Build, test & format]   | github.com/micromdm/scep/v2/csrverifier/executable\n[CI/Build, test & format]   | github.com/go-kit/kit/log/level\n[CI/Build, test & format]   | github.com/go-kit/kit/transport/http\n[CI/Build, test & format]   | github.com/micromdm/scep/v2/scep\n[CI/Build, test & format]   | github.com/groob/finalizer\n[CI/Build, test & format]   | github.com/micromdm/scep/v2/depot\n[CI/Build, test & format]   | github.com/groob/finalizer/logutil\n[CI/Build, test & format]   | github.com/micromdm/scep/v2/server\n[CI/Build, test & format]   | github.com/micromdm/scep/v2/depot/bolt\n[CI/Build, test & format]   | github.com/micromdm/scep/v2/challenge\n[CI/Build, test & format]   | github.com/micromdm/scep/v2/csrverifier\n[CI/Build, test & format]   | github.com/micromdm/scep/v2/client\n[CI/Build, test & format]   | github.com/micromdm/scep/v2/cmd/scepserver\n[CI/Build, test & format]   | github.com/micromdm/scep/v2/cmd/scepclient\n[CI/Build, test & format]   \u2705  Success - Main Build\n[CI/Build, test & format] \u2b50 Run Main Test\n[CI/Build, test & format]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/Build, test & format]   | === RUN   TestDynamicChallenge\n[CI/Build, test & format]   | --- PASS: TestDynamicChallenge (0.77s)\n[CI/Build, test & format]   | PASS\n[CI/Build, test & format]   | ok  \tgithub.com/micromdm/scep/v2/challenge\t1.237s\n[CI/Build, test & format]   | ?   \tgithub.com/micromdm/scep/v2/challenge/bolt\t[no test files]\n[CI/Build, test & format]   | ?   \tgithub.com/micromdm/scep/v2/client\t[no test files]\n[CI/Build, test & format]   | ?   \tgithub.com/micromdm/scep/v2/cmd/scepclient\t[no test files]\n[CI/Build, test & format]   | ?   \tgithub.com/micromdm/scep/v2/cmd/scepserver\t[no test files]\n[CI/Build, test & format]   | === RUN   TestGenerateSubjectKeyID\n[CI/Build, test & format]   | === RUN   TestGenerateSubjectKeyID/RSA\n[CI/Build, test & format]   | === PAUSE TestGenerateSubjectKeyID/RSA\n[CI/Build, test & format]   | === RUN   TestGenerateSubjectKeyID/ECDSA\n[CI/Build, test & format]   | === PAUSE TestGenerateSubjectKeyID/ECDSA\n[CI/Build, test & format]   | === CONT  TestGenerateSubjectKeyID/RSA\n[CI/Build, test & format]   | === CONT  TestGenerateSubjectKeyID/ECDSA\n[CI/Build, test & format]   | --- PASS: TestGenerateSubjectKeyID (0.00s)\n[CI/Build, test & format]   |     --- PASS: TestGenerateSubjectKeyID/RSA (0.00s)\n[CI/Build, test & format]   |     --- PASS: TestGenerateSubjectKeyID/ECDSA (0.00s)\n[CI/Build, test & format]   | PASS\n[CI/Build, test & format]   | ok  \tgithub.com/micromdm/scep/v2/cryptoutil\t0.188s\n[CI/Build, test & format]   | === RUN   TestCreateCertificateRequest\n[CI/Build, test & format]   | --- PASS: TestCreateCertificateRequest (0.02s)\n[CI/Build, test & format]   | PASS\n[CI/Build, test & format]   | ok  \tgithub.com/micromdm/scep/v2/cryptoutil/x509util\t0.199s\n[CI/Build, test & format]   | ?   \tgithub.com/micromdm/scep/v2/csrverifier\t[no test files]\n[CI/Build, test & format]   | ?   \tgithub.com/micromdm/scep/v2/csrverifier/executable\t[no test files]\n[CI/Build, test & format]   | ?   \tgithub.com/micromdm/scep/v2/depot\t[no test files]\n[CI/Build, test & format]   | === RUN   TestDepot_Serial\n[CI/Build, test & format]   | --- PASS: TestDepot_Serial (0.15s)\n[CI/Build, test & format]   | === RUN   TestDepot_writeSerial\n[CI/Build, test & format]   | --- PASS: TestDepot_writeSerial (0.08s)\n[CI/Build, test & format]   | === RUN   TestDepot_incrementSerial\n[CI/Build, test & format]   | --- PASS: TestDepot_incrementSerial (0.31s)\n[CI/Build, test & format]   | === RUN   TestDepot_CreateOrLoadKey\n[CI/Build, test & format]   | --- PASS: TestDepot_CreateOrLoadKey (0.08s)\n[CI/Build, test & format]   | === RUN   TestDepot_CreateOrLoadCA\n[CI/Build, test & format]   | --- PASS: TestDepot_CreateOrLoadCA (0.26s)\n[CI/Build, test & format]   | PASS\n[CI/Build, test & format]   | ok  \tgithub.com/micromdm/scep/v2/depot/bolt\t1.143s\n[CI/Build, test & format]   | ?   \tgithub.com/micromdm/scep/v2/depot/file\t[no test files]\n[CI/Build, test & format]   | === RUN   TestFingerprintCertsSelector\n[CI/Build, test & format]   | === RUN   TestFingerprintCertsSelector/null_SHA-256_hash\n[CI/Build, test & format]   | === PAUSE TestFingerprintCertsSelector/null_SHA-256_hash\n[CI/Build, test & format]   | === RUN   TestFingerprintCertsSelector/3_byte_SHA-256_hash\n[CI/Build, test & format]   | === PAUSE TestFingerprintCertsSelector/3_byte_SHA-256_hash\n[CI/Build, test & format]   | === RUN   TestFingerprintCertsSelector/mismatched_hash\n[CI/Build, test & format]   | === PAUSE TestFingerprintCertsSelector/mismatched_hash\n[CI/Build, test & format]   | === CONT  TestFingerprintCertsSelector/null_SHA-256_hash\n[CI/Build, test & format]   | === CONT  TestFingerprintCertsSelector/mismatched_hash\n[CI/Build, test & format]   | === CONT  TestFingerprintCertsSelector/3_byte_SHA-256_hash\n[CI/Build, test & format]   | --- PASS: TestFingerprintCertsSelector (0.00s)\n[CI/Build, test & format]   |     --- PASS: TestFingerprintCertsSelector/null_SHA-256_hash (0.00s)\n[CI/Build, test & format]   |     --- PASS: TestFingerprintCertsSelector/mismatched_hash (0.00s)\n[CI/Build, test & format]   |     --- PASS: TestFingerprintCertsSelector/3_byte_SHA-256_hash (0.00s)\n[CI/Build, test & format]   | === RUN   TestEnciphermentCertsSelector\n[CI/Build, test & format]   | === RUN   TestEnciphermentCertsSelector/empty_certificates_list\n[CI/Build, test & format]   | === PAUSE TestEnciphermentCertsSelector/empty_certificates_list\n[CI/Build, test & format]   | === RUN   TestEnciphermentCertsSelector/non-empty_certificates_list\n[CI/Build, test & format]   | === PAUSE TestEnciphermentCertsSelector/non-empty_certificates_list\n[CI/Build, test & format]   | === CONT  TestEnciphermentCertsSelector/empty_certificates_list\n[CI/Build, test & format]   | === CONT  TestEnciphermentCertsSelector/non-empty_certificates_list\n[CI/Build, test & format]   | --- PASS: TestEnciphermentCertsSelector (0.00s)\n[CI/Build, test & format]   |     --- PASS: TestEnciphermentCertsSelector/empty_certificates_list (0.00s)\n[CI/Build, test & format]   |     --- PASS: TestEnciphermentCertsSelector/non-empty_certificates_list (0.00s)\n[CI/Build, test & format]   | === RUN   TestNopCertsSelector\n[CI/Build, test & format]   | === RUN   TestNopCertsSelector/empty_certificates_list\n[CI/Build, test & format]   | === PAUSE TestNopCertsSelector/empty_certificates_list\n[CI/Build, test & format]   | === RUN   TestNopCertsSelector/non-empty_certificates_list\n[CI/Build, test & format]   | === PAUSE TestNopCertsSelector/non-empty_certificates_list\n[CI/Build, test & format]   | === CONT  TestNopCertsSelector/empty_certificates_list\n[CI/Build, test & format]   | === CONT  TestNopCertsSelector/non-empty_certificates_list\n[CI/Build, test & format]   | --- PASS: TestNopCertsSelector (0.00s)\n[CI/Build, test & format]   |     --- PASS: TestNopCertsSelector/empty_certificates_list (0.00s)\n[CI/Build, test & format]   |     --- PASS: TestNopCertsSelector/non-empty_certificates_list (0.00s)\n[CI/Build, test & format]   | === RUN   TestParsePKIEnvelopeCert_MissingCertificatesForSigners\n[CI/Build, test & format]   | --- PASS: TestParsePKIEnvelopeCert_MissingCertificatesForSigners (0.00s)\n[CI/Build, test & format]   | === RUN   TestDecryptPKIEnvelopeCSR\n[CI/Build, test & format]   | --- PASS: TestDecryptPKIEnvelopeCSR (0.01s)\n[CI/Build, test & format]   | === RUN   TestDecryptPKIEnvelopeCert\n[CI/Build, test & format]   | --- PASS: TestDecryptPKIEnvelopeCert (0.00s)\n[CI/Build, test & format]   | === RUN   TestSignCSR\n[CI/Build, test & format]   | --- PASS: TestSignCSR (0.03s)\n[CI/Build, test & format]   | === RUN   TestNewCSRRequest\n[CI/Build, test & format]   | === RUN   TestNewCSRRequest/KeyEncipherment_not_set_with_NOP_certificates_selector\n[CI/Build, test & format]   | === PAUSE TestNewCSRRequest/KeyEncipherment_not_set_with_NOP_certificates_selector\n[CI/Build, test & format]   | === RUN   TestNewCSRRequest/KeyEncipherment_is_set_with_NOP_certificates_selector\n[CI/Build, test & format]   | === PAUSE TestNewCSRRequest/KeyEncipherment_is_set_with_NOP_certificates_selector\n[CI/Build, test & format]   | === RUN   TestNewCSRRequest/KeyEncipherment_not_set_with_Encipherment_certificates_selector\n[CI/Build, test & format]   | === PAUSE TestNewCSRRequest/KeyEncipherment_not_set_with_Encipherment_certificates_selector\n[CI/Build, test & format]   | === RUN   TestNewCSRRequest/KeyEncipherment_is_set_with_Encipherment_certificates_selector\n[CI/Build, test & format]   | === PAUSE TestNewCSRRequest/KeyEncipherment_is_set_with_Encipherment_certificates_selector\n[CI/Build, test & format]   | === CONT  TestNewCSRRequest/KeyEncipherment_not_set_with_NOP_certificates_selector\n[CI/Build, test & format]   | === CONT  TestNewCSRRequest/KeyEncipherment_not_set_with_Encipherment_certificates_selector\n[CI/Build, test & format]   | === CONT  TestNewCSRRequest/KeyEncipherment_is_set_with_NOP_certificates_selector\n[CI/Build, test & format]   | === CONT  TestNewCSRRequest/KeyEncipherment_is_set_with_Encipherment_certificates_selector\n[CI/Build, test & format]   | --- PASS: TestNewCSRRequest (0.00s)\n[CI/Build, test & format]   |     --- PASS: TestNewCSRRequest/KeyEncipherment_not_set_with_Encipherment_certificates_selector (0.48s)\n[CI/Build, test & format]   |     --- PASS: TestNewCSRRequest/KeyEncipherment_is_set_with_NOP_certificates_selector (1.00s)\n[CI/Build, test & format]   |     --- PASS: TestNewCSRRequest/KeyEncipherment_is_set_with_Encipherment_certificates_selector (0.99s)\n[CI/Build, test & format]   |     --- PASS: TestNewCSRRequest/KeyEncipherment_not_set_with_NOP_certificates_selector (1.03s)\n[CI/Build, test & format]   | PASS\n[CI/Build, test & format]   | ok  \tgithub.com/micromdm/scep/v2/scep\t1.341s\n[CI/Build, test & format]   | === RUN   TestChallengeMiddleware\n[CI/Build, test & format]   | --- PASS: TestChallengeMiddleware (0.00s)\n[CI/Build, test & format]   | === RUN   TestCaCert\n[CI/Build, test & format]   | --- PASS: TestCaCert (2.94s)\n[CI/Build, test & format]   | === RUN   TestCACaps\n[CI/Build, test & format]   | --- PASS: TestCACaps (0.00s)\n[CI/Build, test & format]   | === RUN   TestEncodePKCSReq_Request\n[CI/Build, test & format]   | === RUN   TestEncodePKCSReq_Request/POST\n[CI/Build, test & format]   | === RUN   TestEncodePKCSReq_Request/GET\n[CI/Build, test & format]   | --- PASS: TestEncodePKCSReq_Request (0.00s)\n[CI/Build, test & format]   |     --- PASS: TestEncodePKCSReq_Request/POST (0.00s)\n[CI/Build, test & format]   |     --- PASS: TestEncodePKCSReq_Request/GET (0.00s)\n[CI/Build, test & format]   | === RUN   TestGetCACertMessage\n[CI/Build, test & format]   | --- PASS: TestGetCACertMessage (0.00s)\n[CI/Build, test & format]   | === RUN   TestPKIOperation\n[CI/Build, test & format]   | --- PASS: TestPKIOperation (0.03s)\n[CI/Build, test & format]   | === RUN   TestPKIOperationGET\n[CI/Build, test & format]   | --- PASS: TestPKIOperationGET (0.05s)\n[CI/Build, test & format]   | PASS\n[CI/Build, test & format]   | ok  \tgithub.com/micromdm/scep/v2/server\t3.347s\n[CI/Build, test & format]   \u2705  Success - Main Test\n[CI/Build, test & format] \u2b50 Run Main Format\n[CI/Build, test & format]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[CI/Build, test & format]   \u2705  Success - Main Format\n[CI/Build, test & format] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}