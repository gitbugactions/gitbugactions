{
    "repository": "google/pprof",
    "clone_url": "https://github.com/google/pprof.git",
    "timestamp": "2023-05-30T11:30:00.863889Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[ci/test-windows] \ud83d\ude80  Start image=crawlergpt:latest\n[ci/test-linux  ] \ud83d\ude80  Start image=crawlergpt:latest\n[ci/test-mac    ] \ud83d\ude80  Start image=crawlergpt:latest\n[ci/test-mac    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci/test-windows]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci/test-linux  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci/test-windows]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/test-mac    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/test-linux  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/test-mac    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/test-windows]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/test-linux  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/test-windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/google-pprof] user=0 workdir=\n[ci/test-mac    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/google-pprof] user=0 workdir=\n[ci/test-linux  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/google-pprof] user=0 workdir=\n[ci/test-mac    ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v4\n[ci/test-windows]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v4\n[ci/test-mac    ]   \u2601  git clone 'https://github.com/maxim-lobanov/setup-xcode' # ref=v1\n[ci/test-windows]   \u2601  git clone 'https://github.com/crazy-max/ghaction-chocolatey' # ref=v1\n[ci/test-mac    ]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[ci/test-linux  ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v4\n[ci/test-windows] \ud83e\uddea  Matrix: map[go:1.19]\n[ci/test-mac    ] \ud83e\uddea  Matrix: map[go:1.19 os:ubuntu-latest xcode-version:14.2]\n[ci/test-windows] \u2b50 Run Main Update Go version using setup-go\n[ci/test-linux  ]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[ci/test-mac    ] \u2b50 Run Main Update Go version using setup-go\n[ci/test-linux  ] \ud83e\uddea  Matrix: map[go:1.19 os:ubuntu-latest]\n[ci/test-mac    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v4/ dst=/var/run/act/actions/actions-setup-go@v4/\n[ci/test-windows]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v4/ dst=/var/run/act/actions/actions-setup-go@v4/\n[ci/test-linux  ] \u2b50 Run Main Update Go version using setup-go\n[ci/test-windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v4/] user=0 workdir=\n[ci/test-mac    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v4/] user=0 workdir=\n[ci/test-linux  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v4/ dst=/var/run/act/actions/actions-setup-go@v4/\n[ci/test-linux  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v4/] user=0 workdir=\n[ci/test-mac    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v4/dist/setup/index.js] user= workdir=\n[ci/test-linux  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v4/dist/setup/index.js] user= workdir=\n[ci/test-windows]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v4/dist/setup/index.js] user= workdir=\n[ci/test-windows]   | Setup go version spec 1.19\n[ci/test-windows]   \ud83d\udcac  ::debug::isExplicit: \n[ci/test-windows]   \ud83d\udcac  ::debug::explicit? false\n[ci/test-windows]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[ci/test-windows]   \ud83d\udcac  ::debug::explicit? true\n[ci/test-windows]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[ci/test-windows]   \ud83d\udcac  ::debug::explicit? true\n[ci/test-windows]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[ci/test-windows]   \ud83d\udcac  ::debug::explicit? true\n[ci/test-windows]   \ud83d\udcac  ::debug::evaluating 3 versions\n[ci/test-windows]   \ud83d\udcac  ::debug::match not found\n[ci/test-windows]   | Attempting to download 1.19...\n[ci/test-windows]   \ud83d\udcac  ::debug::No manifest cached\n[ci/test-mac    ]   | Setup go version spec 1.19\n[ci/test-mac    ]   \ud83d\udcac  ::debug::isExplicit: \n[ci/test-mac    ]   \ud83d\udcac  ::debug::explicit? false\n[ci/test-mac    ]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[ci/test-mac    ]   \ud83d\udcac  ::debug::explicit? true\n[ci/test-mac    ]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[ci/test-mac    ]   \ud83d\udcac  ::debug::explicit? true\n[ci/test-mac    ]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[ci/test-mac    ]   \ud83d\udcac  ::debug::explicit? true\n[ci/test-mac    ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[ci/test-mac    ]   \ud83d\udcac  ::debug::match not found\n[ci/test-mac    ]   | Attempting to download 1.19...\n[ci/test-mac    ]   \ud83d\udcac  ::debug::No manifest cached\n[ci/test-linux  ]   | Setup go version spec 1.19\n[ci/test-linux  ]   \ud83d\udcac  ::debug::isExplicit: \n[ci/test-linux  ]   \ud83d\udcac  ::debug::explicit? false\n[ci/test-linux  ]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[ci/test-linux  ]   \ud83d\udcac  ::debug::explicit? true\n[ci/test-linux  ]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[ci/test-linux  ]   \ud83d\udcac  ::debug::explicit? true\n[ci/test-linux  ]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[ci/test-linux  ]   \ud83d\udcac  ::debug::explicit? true\n[ci/test-linux  ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[ci/test-linux  ]   \ud83d\udcac  ::debug::match not found\n[ci/test-linux  ]   | Attempting to download 1.19...\n[ci/test-linux  ]   \ud83d\udcac  ::debug::No manifest cached\n[ci/test-windows]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[ci/test-windows]   \ud83d\udcac  ::debug::HttpClientError: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v4/dist/setup/index.js:8907:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[ci/test-windows]   | Falling back to download directly from Go\n[ci/test-linux  ]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[ci/test-mac    ]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[ci/test-linux  ]   \ud83d\udcac  ::debug::HttpClientError: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v4/dist/setup/index.js:8907:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[ci/test-linux  ]   | Falling back to download directly from Go\n[ci/test-mac    ]   \ud83d\udcac  ::debug::HttpClientError: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v4/dist/setup/index.js:8907:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[ci/test-mac    ]   | Falling back to download directly from Go\n[ci/test-mac    ]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.19\n[ci/test-mac    ]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.19\n[ci/test-mac    ]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.19\n[ci/test-mac    ]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.19\n[ci/test-mac    ]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.19\n[ci/test-mac    ]   \ud83d\udcac  ::debug::check 1.20.0-rc.3 satisfies 1.19\n[ci/test-mac    ]   \ud83d\udcac  ::debug::check 1.20.0-rc.2 satisfies 1.19\n[ci/test-mac    ]   \ud83d\udcac  ::debug::check 1.20.0-rc.1 satisfies 1.19\n[ci/test-mac    ]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.19\n[ci/test-mac    ]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[ci/test-mac    ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[ci/test-mac    ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[ci/test-mac    ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[ci/test-mac    ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[ci/test-mac    ]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[ci/test-mac    ]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[ci/test-mac    ]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[ci/test-mac    ]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[ci/test-mac    ]   \ud83d\udcac  ::debug::matched go1.19.9\n[ci/test-mac    ]   | Install from dist\n[ci/test-mac    ]   | Acquiring go1.19.9 from https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[ci/test-mac    ]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[ci/test-mac    ]   \ud83d\udcac  ::debug::Destination /tmp/26b8149a-4450-4ded-99d5-0508524f5c64\n[ci/test-windows]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.19\n[ci/test-windows]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.19\n[ci/test-windows]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.19\n[ci/test-windows]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.19\n[ci/test-windows]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.19\n[ci/test-windows]   \ud83d\udcac  ::debug::check 1.20.0-rc.3 satisfies 1.19\n[ci/test-windows]   \ud83d\udcac  ::debug::check 1.20.0-rc.2 satisfies 1.19\n[ci/test-windows]   \ud83d\udcac  ::debug::check 1.20.0-rc.1 satisfies 1.19\n[ci/test-windows]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.19\n[ci/test-windows]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[ci/test-windows]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[ci/test-windows]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[ci/test-windows]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[ci/test-windows]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[ci/test-windows]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[ci/test-windows]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[ci/test-windows]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[ci/test-windows]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[ci/test-windows]   \ud83d\udcac  ::debug::matched go1.19.9\n[ci/test-windows]   | Install from dist\n[ci/test-windows]   | Acquiring go1.19.9 from https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[ci/test-windows]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[ci/test-windows]   \ud83d\udcac  ::debug::Destination /tmp/e359b8cb-bfa7-4455-8196-7d0937e87f91\n[ci/test-linux  ]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.19\n[ci/test-linux  ]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.19\n[ci/test-linux  ]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.19\n[ci/test-linux  ]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.19\n[ci/test-linux  ]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.19\n[ci/test-linux  ]   \ud83d\udcac  ::debug::check 1.20.0-rc.3 satisfies 1.19\n[ci/test-linux  ]   \ud83d\udcac  ::debug::check 1.20.0-rc.2 satisfies 1.19\n[ci/test-linux  ]   \ud83d\udcac  ::debug::check 1.20.0-rc.1 satisfies 1.19\n[ci/test-linux  ]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.19\n[ci/test-linux  ]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[ci/test-linux  ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[ci/test-linux  ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[ci/test-linux  ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[ci/test-linux  ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[ci/test-linux  ]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[ci/test-linux  ]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[ci/test-linux  ]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[ci/test-linux  ]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[ci/test-linux  ]   \ud83d\udcac  ::debug::matched go1.19.9\n[ci/test-linux  ]   | Install from dist\n[ci/test-linux  ]   | Acquiring go1.19.9 from https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[ci/test-linux  ]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[ci/test-linux  ]   \ud83d\udcac  ::debug::Destination /tmp/f7cad3bd-269d-4330-9aeb-234ea8ab31f1\n[ci/test-mac    ]   \ud83d\udcac  ::debug::download complete\n[ci/test-mac    ]   | Extracting Go...\n[ci/test-mac    ]   \ud83d\udcac  ::debug::Checking tar --version\n[ci/test-mac    ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[ci/test-mac    ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/96bf2628-07eb-4a33-9946-8f6289581078 -f /tmp/26b8149a-4450-4ded-99d5-0508524f5c64\n[ci/test-linux  ]   \ud83d\udcac  ::debug::download complete\n[ci/test-linux  ]   | Extracting Go...\n[ci/test-linux  ]   \ud83d\udcac  ::debug::Checking tar --version\n[ci/test-linux  ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[ci/test-linux  ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/4cf3795a-75c7-4497-bc1a-8fed6e3fade5 -f /tmp/f7cad3bd-269d-4330-9aeb-234ea8ab31f1\n[ci/test-mac    ]   | Successfully extracted go to /tmp/96bf2628-07eb-4a33-9946-8f6289581078\n[ci/test-mac    ]   | Adding to the cache ...\n[ci/test-mac    ]   \ud83d\udcac  ::debug::Caching tool go 1.19.9 x64\n[ci/test-mac    ]   \ud83d\udcac  ::debug::source dir: /tmp/96bf2628-07eb-4a33-9946-8f6289581078/go\n[ci/test-mac    ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.19.9/x64\n[ci/test-linux  ]   | Successfully extracted go to /tmp/4cf3795a-75c7-4497-bc1a-8fed6e3fade5\n[ci/test-linux  ]   | Adding to the cache ...\n[ci/test-linux  ]   \ud83d\udcac  ::debug::Caching tool go 1.19.9 x64\n[ci/test-linux  ]   \ud83d\udcac  ::debug::source dir: /tmp/4cf3795a-75c7-4497-bc1a-8fed6e3fade5/go\n[ci/test-linux  ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.19.9/x64\n[ci/test-windows]   \ud83d\udcac  ::debug::download complete\n[ci/test-windows]   | Extracting Go...\n[ci/test-windows]   \ud83d\udcac  ::debug::Checking tar --version\n[ci/test-windows]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[ci/test-windows]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/d71666fe-b1c7-41a6-9b9c-a1a8ecf9849e -f /tmp/e359b8cb-bfa7-4455-8196-7d0937e87f91\n[ci/test-windows]   | Successfully extracted go to /tmp/d71666fe-b1c7-41a6-9b9c-a1a8ecf9849e\n[ci/test-windows]   | Adding to the cache ...\n[ci/test-windows]   \ud83d\udcac  ::debug::Caching tool go 1.19.9 x64\n[ci/test-windows]   \ud83d\udcac  ::debug::source dir: /tmp/d71666fe-b1c7-41a6-9b9c-a1a8ecf9849e/go\n[ci/test-windows]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.19.9/x64\n[ci/test-mac    ]   \ud83d\udcac  ::debug::finished caching tool\n[ci/test-mac    ]   | Successfully cached go to /opt/hostedtoolcache/go/1.19.9/x64\n[ci/test-mac    ]   | Added go to the path\n[ci/test-mac    ]   | Successfully set up Go version 1.19\n[ci/test-mac    ]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.19.9/x64/bin/go:\n[ci/test-mac    ]   | $GOPATH/go.mod exists but should not\n[ci/test-mac    ]   \u2757  ::error::Command failed: go env GOPATH%0A$GOPATH/go.mod exists but should not%0A\n[ci/test-mac    ]   \u274c  Failure - Main Update Go version using setup-go\n[ci/test-mac    ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.19.9/x64/bin\n[ci/test-mac    ] exitcode '1': failure\n[ci/test-linux  ]   \ud83d\udcac  ::debug::finished caching tool\n[ci/test-linux  ]   | Successfully cached go to /opt/hostedtoolcache/go/1.19.9/x64\n[ci/test-linux  ]   | Added go to the path\n[ci/test-linux  ]   | Successfully set up Go version 1.19\n[ci/test-linux  ]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.19.9/x64/bin/go:\n[ci/test-linux  ]   | $GOPATH/go.mod exists but should not\n[ci/test-linux  ]   \u2757  ::error::Command failed: go env GOPATH%0A$GOPATH/go.mod exists but should not%0A\n[ci/test-linux  ]   \u274c  Failure - Main Update Go version using setup-go\n[ci/test-linux  ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.19.9/x64/bin\n[ci/test-linux  ] exitcode '1': failure\n[ci/test-mac    ] \ud83c\udfc1  Job failed\n[ci/test-linux  ] \ud83c\udfc1  Job failed\n[ci/test-windows]   \ud83d\udcac  ::debug::finished caching tool\n[ci/test-windows]   | Successfully cached go to /opt/hostedtoolcache/go/1.19.9/x64\n[ci/test-windows]   | Added go to the path\n[ci/test-windows]   | Successfully set up Go version 1.19\n[ci/test-windows]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.19.9/x64/bin/go:\n[ci/test-windows]   | $GOPATH/go.mod exists but should not\n[ci/test-windows]   \u2757  ::error::Command failed: go env GOPATH%0A$GOPATH/go.mod exists but should not%0A\n[ci/test-windows]   \u274c  Failure - Main Update Go version using setup-go\n[ci/test-windows]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.19.9/x64/bin\n[ci/test-windows] exitcode '1': failure\n[ci/test-windows] \ud83c\udfc1  Job failed\n[ci/check       ] \ud83d\ude80  Start image=crawlergpt:latest\n[ci/check       ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci/check       ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/check       ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/check       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/google-pprof] user=0 workdir=\n[ci/check       ]   \u2601  git clone 'https://github.com/re-actors/alls-green' # ref=release/v1\n[ci/check       ] \u2b50 Run Pre Decide whether the needed jobs succeeded or failed\n[ci/check       ]   \u2705  Success - Pre Decide whether the needed jobs succeeded or failed\n[ci/check       ] \u2b50 Run Main Decide whether the needed jobs succeeded or failed\n[ci/check       ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/re-actors-alls-green@release-v1/ dst=/var/run/act/actions/re-actors-alls-green@release-v1/\n[ci/check       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/re-actors-alls-green@release-v1/] user=0 workdir=\n[ci/check       ] \u2b50 Run Main Decide whether the input jobs succeeded or failed\n[ci/check       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/0-composite-outcome.sh] user= workdir=\n[ci/check       ]   | # \u274c Some of the required to succeed jobs failed \ud83d\ude22\ud83d\ude22\ud83d\ude22\n[ci/check       ]   | \n[ci/check       ]   | \ud83d\udcdd Job statuses:\n[ci/check       ]   | \ud83d\udcdd test-linux \u2192 \u274c failure [required to succeed]\n[ci/check       ]   | \ud83d\udcdd test-mac \u2192 \u274c failure [required to succeed]\n[ci/check       ]   | \ud83d\udcdd test-windows \u2192 \u274c failure [required to succeed]\n[ci/check       ]   \u274c  Failure - Main Decide whether the input jobs succeeded or failed\n[ci/check       ]   \u2699  ::set-output:: failure=true\n[ci/check       ]   \u2699  ::set-output:: result=failure\n[ci/check       ]   \u2699  ::set-output:: success=false\n[ci/check       ] exitcode '1': failure\n[ci/check       ]   \u2699  ::set-output:: success=false\n[ci/check       ]   \u2699  ::set-output:: failure=true\n[ci/check       ]   \u2699  ::set-output:: result=failure\n[ci/check       ]   \u274c  Failure - Main Decide whether the needed jobs succeeded or failed\n[ci/check       ]   \u2699  ::set-output:: failure=true\n[ci/check       ]   \u2699  ::set-output:: result=failure\n[ci/check       ]   \u2699  ::set-output:: success=false\n[ci/check       ] exitcode '1': failure\n[ci/check       ] \u2b50 Run Post Decide whether the needed jobs succeeded or failed\n[ci/check       ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/re-actors-alls-green@release-v1/ dst=/var/run/act/actions/re-actors-alls-green@release-v1/\n[ci/check       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/re-actors-alls-green@release-v1/] user=0 workdir=\n[ci/check       ] context canceled\n[ci/check       ]   \u2705  Success - Post Decide whether the needed jobs succeeded or failed\n[ci/check       ] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/bb1560521afd9cc25e21c46a3df49295ffe3a77552e79a2dfd3db1b165ee7df8?force=1&v=1\": context deadline exceeded\n[ci/check       ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: context canceled\n"
}