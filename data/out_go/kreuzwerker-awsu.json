{
    "repository": "kreuzwerker/awsu",
    "clone_url": "https://github.com/kreuzwerker/awsu.git",
    "timestamp": "2023-05-30T11:51:47.418582Z",
    "clone_success": true,
    "number of actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[tests/unit] \ud83d\ude80  Start image=crawlergpt:latest\n[tests/unit]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[tests/unit]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/unit]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/unit]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/kreuzwerker-awsu] user=0 workdir=\n[tests/unit]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v3\n[tests/unit] \u2b50 Run Main Checkout\n[tests/unit]   \u2705  Success - Main Checkout\n[tests/unit] \u2b50 Run Main Set up Go\n[tests/unit]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v3/ dst=/var/run/act/actions/actions-setup-go@v3/\n[tests/unit]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v3/] user=0 workdir=\n[tests/unit]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/setup/index.js] user= workdir=\n[tests/unit]   | Setup go version spec 1.19\n[tests/unit]   \ud83d\udcac  ::debug::isExplicit: \n[tests/unit]   \ud83d\udcac  ::debug::explicit? false\n[tests/unit]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[tests/unit]   \ud83d\udcac  ::debug::explicit? true\n[tests/unit]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[tests/unit]   \ud83d\udcac  ::debug::explicit? true\n[tests/unit]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[tests/unit]   \ud83d\udcac  ::debug::explicit? true\n[tests/unit]   \ud83d\udcac  ::debug::evaluating 3 versions\n[tests/unit]   \ud83d\udcac  ::debug::match not found\n[tests/unit]   | Attempting to download 1.19...\n[tests/unit]   \ud83d\udcac  ::debug::No manifest cached\n[tests/unit]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[tests/unit]   \ud83d\udcac  ::debug::HttpClientError: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v3/dist/setup/index.js:8612:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[tests/unit]   | Falling back to download directly from Go\n[tests/unit]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.19\n[tests/unit]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.19\n[tests/unit]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.19\n[tests/unit]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.19\n[tests/unit]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.19\n[tests/unit]   \ud83d\udcac  ::debug::check 1.20.0-rc.3 satisfies 1.19\n[tests/unit]   \ud83d\udcac  ::debug::check 1.20.0-rc.2 satisfies 1.19\n[tests/unit]   \ud83d\udcac  ::debug::check 1.20.0-rc.1 satisfies 1.19\n[tests/unit]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.19\n[tests/unit]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[tests/unit]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[tests/unit]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[tests/unit]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[tests/unit]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[tests/unit]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[tests/unit]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[tests/unit]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[tests/unit]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[tests/unit]   \ud83d\udcac  ::debug::matched go1.19.9\n[tests/unit]   | Install from dist\n[tests/unit]   | Acquiring go1.19.9 from https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[tests/unit]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[tests/unit]   \ud83d\udcac  ::debug::Destination /tmp/6016d350-08e4-4888-9f09-0c88e0ca4445\n[tests/unit]   \ud83d\udcac  ::debug::download complete\n[tests/unit]   | Extracting Go...\n[tests/unit]   \ud83d\udcac  ::debug::Checking tar --version\n[tests/unit]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[tests/unit]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/dcb0f3ac-f674-45ab-8c91-16a33277523f -f /tmp/6016d350-08e4-4888-9f09-0c88e0ca4445\n[tests/unit]   | Successfully extracted go to /tmp/dcb0f3ac-f674-45ab-8c91-16a33277523f\n[tests/unit]   | Adding to the cache ...\n[tests/unit]   \ud83d\udcac  ::debug::Caching tool go 1.19.9 x64\n[tests/unit]   \ud83d\udcac  ::debug::source dir: /tmp/dcb0f3ac-f674-45ab-8c91-16a33277523f/go\n[tests/unit]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.19.9/x64\n[tests/unit]   \ud83d\udcac  ::debug::finished caching tool\n[tests/unit]   | Successfully cached go to /opt/hostedtoolcache/go/1.19.9/x64\n[tests/unit]   | Added go to the path\n[tests/unit]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.19.9/x64/bin/go:\n[tests/unit]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[tests/unit]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[tests/unit]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[tests/unit]   \ud83d\udcac  ::debug::add bin true\n[tests/unit]   | Successfully set up Go version 1.19\n[tests/unit]   \u2753 add-matcher /run/act/actions/actions-setup-go@v3/matchers.json\n[tests/unit]   | go version go1.19.9 linux/amd64\n[tests/unit]   | \n[tests/unit]   \u2753  ::group::go env\n[tests/unit]   | GO111MODULE=\"\"\n[tests/unit]   | GOARCH=\"amd64\"\n[tests/unit]   | GOBIN=\"\"\n[tests/unit]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[tests/unit]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[tests/unit]   | GOEXE=\"\"\n[tests/unit]   | GOEXPERIMENT=\"\"\n[tests/unit]   | GOFLAGS=\"\"\n[tests/unit]   | GOHOSTARCH=\"amd64\"\n[tests/unit]   | GOHOSTOS=\"linux\"\n[tests/unit]   | GOINSECURE=\"\"\n[tests/unit]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[tests/unit]   | GONOPROXY=\"\"\n[tests/unit]   | GONOSUMDB=\"\"\n[tests/unit]   | GOOS=\"linux\"\n[tests/unit]   | GOPATH=\"/home/runneradmin/go\"\n[tests/unit]   | GOPRIVATE=\"\"\n[tests/unit]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[tests/unit]   | GOROOT=\"/opt/hostedtoolcache/go/1.19.9/x64\"\n[tests/unit]   | GOSUMDB=\"sum.golang.org\"\n[tests/unit]   | GOTMPDIR=\"\"\n[tests/unit]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.19.9/x64/pkg/tool/linux_amd64\"\n[tests/unit]   | GOVCS=\"\"\n[tests/unit]   | GOVERSION=\"go1.19.9\"\n[tests/unit]   | GCCGO=\"gccgo\"\n[tests/unit]   | GOAMD64=\"v1\"\n[tests/unit]   | AR=\"ar\"\n[tests/unit]   | CC=\"gcc\"\n[tests/unit]   | CXX=\"g++\"\n[tests/unit]   | CGO_ENABLED=\"1\"\n[tests/unit]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/kreuzwerker-awsu/go.mod\"\n[tests/unit]   | GOWORK=\"\"\n[tests/unit]   | CGO_CFLAGS=\"-g -O2\"\n[tests/unit]   | CGO_CPPFLAGS=\"\"\n[tests/unit]   | CGO_CXXFLAGS=\"-g -O2\"\n[tests/unit]   | CGO_FFLAGS=\"-g -O2\"\n[tests/unit]   | CGO_LDFLAGS=\"-g -O2\"\n[tests/unit]   | PKG_CONFIG=\"pkg-config\"\n[tests/unit]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build824895868=/tmp/go-build -gno-record-gcc-switches\"\n[tests/unit]   | \n[tests/unit]   \u2753  ::endgroup::\n[tests/unit]   \u2705  Success - Main Set up Go\n[tests/unit]   \u2699  ::set-output:: go-version=1.19.9\n[tests/unit]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.19.9/x64/bin\n[tests/unit]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[tests/unit] \u2b50 Run Main Setup Dependencies\n[tests/unit]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[tests/unit]   | Get:1 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ InRelease [3622 B]\n[tests/unit]   | Get:2 https://dl.hhvm.com/ubuntu focal InRelease [3137 B]\n[tests/unit]   | Hit:3 http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu focal InRelease\n[tests/unit]   | Get:4 http://dl.google.com/linux/chrome/deb stable InRelease [1825 B]\n[tests/unit]   | Get:5 https://packages.microsoft.com/ubuntu/20.04/prod focal InRelease [3611 B]\n[tests/unit]   | Hit:6 http://archive.ubuntu.com/ubuntu focal InRelease\n[tests/unit]   | Get:7 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]\n[tests/unit]   | Get:8 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]\n[tests/unit]   | Get:9 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ Packages [77.6 kB]\n[tests/unit]   | Hit:10 https://adoptopenjdk.jfrog.io/adoptopenjdk/deb focal InRelease\n[tests/unit]   | Get:11 https://dl.hhvm.com/ubuntu focal/main amd64 Packages [1880 B]\n[tests/unit]   | Get:12 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]\n[tests/unit]   | Err:4 http://dl.google.com/linux/chrome/deb stable InRelease\n[tests/unit]   |   The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[tests/unit]   | Get:13 https://packages.microsoft.com/ubuntu/20.04/prod focal/main amd64 Packages [201 kB]\n[tests/unit]   | Get:14 https://packages.microsoft.com/ubuntu/20.04/prod focal/main all Packages [2521 B]\n[tests/unit]   | Get:15 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [2274 kB]\n[tests/unit]   | Get:16 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [31.2 kB]\n[tests/unit]   | Get:17 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [3207 kB]\n[tests/unit]   | Get:18 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [2412 kB]\n[tests/unit]   | Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1348 kB]\n[tests/unit]   | Get:20 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [28.6 kB]\n[tests/unit]   | Get:21 http://archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [55.2 kB]\n[tests/unit]   | Get:22 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [28.5 kB]\n[tests/unit]   | Get:23 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [742 kB]\n[tests/unit]   | Get:24 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [1053 kB]\n[tests/unit]   | Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted i386 Packages [36.9 kB]\n[tests/unit]   | Get:26 http://security.ubuntu.com/ubuntu focal-security/multiverse i386 Packages [8141 B]\n[tests/unit]   | Get:27 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [2731 kB]\n[tests/unit]   | Get:28 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [740 kB]\n[tests/unit]   | Fetched 15.3 MB in 9s (1657 kB/s)\n[tests/unit]   | Reading package lists...\n[tests/unit]   | W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: http://dl.google.com/linux/chrome/deb stable InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[tests/unit]   | W: Failed to fetch http://dl.google.com/linux/chrome/deb/dists/stable/InRelease  The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[tests/unit]   | W: Some index files failed to download. They have been ignored, or old ones used instead.\n[tests/unit]   | Selecting previously unselected package libpcsclite1:amd64.\r\n[tests/unit]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[tests/unit]   | Preparing to unpack .../libpcsclite1_1.8.26-3_amd64.deb ...\r\n[tests/unit]   | Unpacking libpcsclite1:amd64 (1.8.26-3) ...\r\n[tests/unit]   | Selecting previously unselected package libpcsclite-dev.\r\n[tests/unit]   | Preparing to unpack .../libpcsclite-dev_1.8.26-3_amd64.deb ...\r\n[tests/unit]   | Unpacking libpcsclite-dev (1.8.26-3) ...\r\n[tests/unit]   | Setting up libpcsclite1:amd64 (1.8.26-3) ...\r\n[tests/unit]   | Setting up libpcsclite-dev (1.8.26-3) ...\r\n[tests/unit]   | Processing triggers for libc-bin (2.31-0ubuntu9.2) ...\r\n[tests/unit]   \u2705  Success - Main Setup Dependencies\n[tests/unit] \u2b50 Run Main Run tests\n[tests/unit]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[tests/unit]   | go list ./... | grep -v exp | xargs go test -cover\n[tests/unit]   | go: downloading github.com/spf13/pflag v1.0.2\n[tests/unit]   | go: downloading github.com/spf13/viper v1.2.0\n[tests/unit]   | go: downloading github.com/yawn/doubledash v0.0.0-20151212175516-fd8a81db93af\n[tests/unit]   | go: downloading github.com/aws/aws-sdk-go v1.34.0\n[tests/unit]   | go: downloading github.com/mdp/qrterminal v1.0.0\n[tests/unit]   | go: downloading github.com/skratchdot/open-golang v0.0.0-20160302144031-75fb7ed4208c\n[tests/unit]   | go: downloading github.com/spf13/cobra v0.0.3\n[tests/unit]   | go: downloading github.com/yawn/ykoath v1.0.3\n[tests/unit]   | go: downloading gopkg.in/ini.v1 v1.38.2\n[tests/unit]   | go: downloading github.com/dustin/go-humanize v0.0.0-20180713052910-9f541cc9db5d\n[tests/unit]   | go: downloading github.com/pkg/errors v0.9.1\n[tests/unit]   | go: downloading github.com/yawn/envmap v0.0.0-20160813152305-a78254303070\n[tests/unit]   | go: downloading github.com/mitchellh/go-homedir v1.0.0\n[tests/unit]   | go: downloading github.com/rsc/qr v0.1.0\n[tests/unit]   | go: downloading github.com/ebfe/scard v0.0.0-20190212122703-c3d1b1916a95\n[tests/unit]   | go: downloading github.com/fsnotify/fsnotify v1.4.7\n[tests/unit]   | go: downloading github.com/spf13/afero v1.1.2\n[tests/unit]   | go: downloading github.com/magiconair/properties v1.8.0\n[tests/unit]   | go: downloading github.com/mitchellh/mapstructure v1.0.0\n[tests/unit]   | go: downloading github.com/hashicorp/hcl v1.0.0\n[tests/unit]   | go: downloading github.com/pelletier/go-toml v1.2.0\n[tests/unit]   | go: downloading github.com/spf13/cast v1.2.0\n[tests/unit]   | go: downloading gopkg.in/yaml.v2 v2.2.2\n[tests/unit]   | go: downloading github.com/spf13/jwalterweatherman v1.0.0\n[tests/unit]   | go: downloading rsc.io/qr v0.2.0\n[tests/unit]   | go: downloading golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f\n[tests/unit]   | go: downloading golang.org/x/text v0.3.8\n[tests/unit]   | go: downloading github.com/jmespath/go-jmespath v0.3.0\n[tests/unit]   | go: downloading github.com/stretchr/testify v1.5.1\n[tests/unit]   | go: downloading github.com/davecgh/go-spew v1.1.1\n[tests/unit]   | go: downloading github.com/pmezard/go-difflib v1.0.0\n[tests/unit]   | ?   \tgithub.com/kreuzwerker/awsu\t[no test files]\n[tests/unit]   | ?   \tgithub.com/kreuzwerker/awsu/command\t[no test files]\n[tests/unit]   | ok  \tgithub.com/kreuzwerker/awsu/config\t0.015s\tcoverage: 77.1% of statements\n[tests/unit]   | ?   \tgithub.com/kreuzwerker/awsu/console\t[no test files]\n[tests/unit]   | ok  \tgithub.com/kreuzwerker/awsu/log\t0.015s\tcoverage: 100.0% of statements\n[tests/unit]   | ?   \tgithub.com/kreuzwerker/awsu/source\t[no test files]\n[tests/unit]   | ?   \tgithub.com/kreuzwerker/awsu/source/manual\t[no test files]\n[tests/unit]   | ?   \tgithub.com/kreuzwerker/awsu/source/yubikey\t[no test files]\n[tests/unit]   | ?   \tgithub.com/kreuzwerker/awsu/strategy\t[no test files]\n[tests/unit]   | ?   \tgithub.com/kreuzwerker/awsu/strategy/credentials\t[no test files]\n[tests/unit]   | ok  \tgithub.com/kreuzwerker/awsu/target/mfa\t0.017s\tcoverage: 13.8% of statements\n[tests/unit]   \u2705  Success - Main Run tests\n[tests/unit] \u2b50 Run Post Set up Go\n[tests/unit]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/cache-save/index.js] user= workdir=\n[tests/unit]   \u2705  Success - Post Set up Go\n[tests/unit] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}