{
    "repository": "cloudflare/gokeyless",
    "clone_url": "https://github.com/cloudflare/gokeyless.git",
    "timestamp": "2023-05-30T11:12:09.959111Z",
    "clone_success": true,
    "number of actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Go Test/test-hsm] \ud83d\ude80  Start image=crawlergpt:latest\n[Go Test/lint    ] \ud83d\ude80  Start image=crawlergpt:latest\n[Go Test/test    ] \ud83d\ude80  Start image=crawlergpt:latest\n[Go Test/test-hsm]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go Test/lint    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go Test/test    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go Test/test    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go Test/lint    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go Test/test-hsm]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go Test/test-hsm]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go Test/test    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go Test/lint    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go Test/lint    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/cloudflare-gokeyless] user=0 workdir=\n[Go Test/test-hsm]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/cloudflare-gokeyless] user=0 workdir=\n[Go Test/test    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/cloudflare-gokeyless] user=0 workdir=\n[Go Test/test-hsm]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v4\n[Go Test/test    ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v4\n[Go Test/lint    ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v4\n[Go Test/test-hsm]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[Go Test/test    ]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[Go Test/lint    ] \u2b50 Run Main actions/checkout@v3\n[Go Test/lint    ]   \u2705  Success - Main actions/checkout@v3\n[Go Test/test-hsm] \u2b50 Run Main actions/checkout@v3\n[Go Test/test-hsm]   \u2705  Success - Main actions/checkout@v3\n[Go Test/lint    ] \u2b50 Run Main Set up Go\n[Go Test/test    ] \ud83e\uddea  Matrix: map[go:stable]\n[Go Test/test    ] \u2b50 Run Main actions/checkout@v3\n[Go Test/lint    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v4/ dst=/var/run/act/actions/actions-setup-go@v4/\n[Go Test/test    ]   \u2705  Success - Main actions/checkout@v3\n[Go Test/test-hsm] \u2b50 Run Main Set up Go\n[Go Test/lint    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v4/] user=0 workdir=\n[Go Test/test-hsm]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v4/ dst=/var/run/act/actions/actions-setup-go@v4/\n[Go Test/test-hsm]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v4/] user=0 workdir=\n[Go Test/test    ] \u2b50 Run Main Set up Go\n[Go Test/test    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v4/ dst=/var/run/act/actions/actions-setup-go@v4/\n[Go Test/test    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v4/] user=0 workdir=\n[Go Test/lint    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v4/dist/setup/index.js] user= workdir=\n[Go Test/test-hsm]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v4/dist/setup/index.js] user= workdir=\n[Go Test/test    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v4/dist/setup/index.js] user= workdir=\n[Go Test/test    ]   | Setup go version spec stable\n[Go Test/test-hsm]   | Setup go version spec stable\n[Go Test/lint    ]   | Setup go version spec \n[Go Test/lint    ]   | [warning]go-version input was not specified. The action will try to use pre-installed version.\n[Go Test/lint    ]   \ud83d\udcac  ::debug::which go :/usr/bin/go:\n[Go Test/lint    ]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Go Test/lint    ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Go Test/lint    ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Go Test/lint    ]   \ud83d\udcac  ::debug::add bin true\n[Go Test/test-hsm]   \u2757  ::error::API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Go Test/test    ]   \u2757  ::error::API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Go Test/lint    ]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[Go Test/lint    ]   \u2753 add-matcher /run/act/actions/actions-setup-go@v4/matchers.json\n[Go Test/lint    ]   | go version go1.15.15 linux/amd64\n[Go Test/lint    ]   | \n[Go Test/lint    ]   \u2753  ::group::go env\n[Go Test/test-hsm]   \u274c  Failure - Main Set up Go\n[Go Test/test    ]   \u274c  Failure - Main Set up Go\n[Go Test/lint    ]   | GO111MODULE=\"\"\n[Go Test/lint    ]   | GOARCH=\"amd64\"\n[Go Test/lint    ]   | GOBIN=\"\"\n[Go Test/lint    ]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Go Test/lint    ]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Go Test/lint    ]   | GOEXE=\"\"\n[Go Test/lint    ]   | GOFLAGS=\"\"\n[Go Test/lint    ]   | GOHOSTARCH=\"amd64\"\n[Go Test/lint    ]   | GOHOSTOS=\"linux\"\n[Go Test/lint    ]   | GOINSECURE=\"\"\n[Go Test/lint    ]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Go Test/lint    ]   | GONOPROXY=\"\"\n[Go Test/lint    ]   | GONOSUMDB=\"\"\n[Go Test/lint    ]   | GOOS=\"linux\"\n[Go Test/lint    ]   | GOPATH=\"/home/runneradmin/go\"\n[Go Test/lint    ]   | GOPRIVATE=\"\"\n[Go Test/lint    ]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Go Test/lint    ]   | GOROOT=\"/opt/hostedtoolcache/go/1.15.15/x64\"\n[Go Test/lint    ]   | GOSUMDB=\"sum.golang.org\"\n[Go Test/lint    ]   | GOTMPDIR=\"\"\n[Go Test/lint    ]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.15.15/x64/pkg/tool/linux_amd64\"\n[Go Test/lint    ]   | GCCGO=\"gccgo\"\n[Go Test/lint    ]   | AR=\"ar\"\n[Go Test/lint    ]   | CC=\"gcc\"\n[Go Test/lint    ]   | CXX=\"g++\"\n[Go Test/lint    ]   | CGO_ENABLED=\"1\"\n[Go Test/lint    ]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/cloudflare-gokeyless/go.mod\"\n[Go Test/lint    ]   | CGO_CFLAGS=\"-g -O2\"\n[Go Test/lint    ]   | CGO_CPPFLAGS=\"\"\n[Go Test/lint    ]   | CGO_CXXFLAGS=\"-g -O2\"\n[Go Test/lint    ]   | CGO_FFLAGS=\"-g -O2\"\n[Go Test/lint    ]   | CGO_LDFLAGS=\"-g -O2\"\n[Go Test/lint    ]   | PKG_CONFIG=\"pkg-config\"\n[Go Test/lint    ]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build297373376=/tmp/go-build -gno-record-gcc-switches\"\n[Go Test/lint    ]   | \n[Go Test/lint    ]   \u2753  ::endgroup::\n[Go Test/lint    ]   \u2705  Success - Main Set up Go\n[Go Test/test    ] exitcode '1': failure\n[Go Test/lint    ]   \u2699  ::set-output:: go-version=1.15.15\n[Go Test/test-hsm] exitcode '1': failure\n[Go Test/lint    ]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Go Test/lint    ] \u2b50 Run Main Install golint\n[Go Test/lint    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Go Test/test-hsm] \ud83c\udfc1  Job failed\n[Go Test/test    ] \ud83c\udfc1  Job failed\n[Go Test/lint    ]   | # golang.org/x/tools/go/gcexportdata\n[Go Test/lint    ]   | vendor/golang.org/x/tools/go/gcexportdata/gcexportdata.go:97:9: undefined: io.ReadAll\n[Go Test/lint    ]   \u274c  Failure - Main Install golint\n[Go Test/lint    ] exitcode '2': failure\n[Go Test/lint    ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'test-hsm' failed\n"
}