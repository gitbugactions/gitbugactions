{
    "repository": "xorpaul/g10k",
    "clone_url": "https://github.com/xorpaul/g10k.git",
    "timestamp": "2023-05-30T11:14:46.073262Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/Test on go version  and ubuntu-latest] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/xorpaul-g10k] user=0 workdir=\n[CI/Test on go version  and ubuntu-latest]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v3\n[CI/Test on go version  and ubuntu-latest] \ud83e\uddea  Matrix: map[os:ubuntu-latest]\n[CI/Test on go version  and ubuntu-latest] \u2b50 Run Main actions/checkout@v3\n[CI/Test on go version  and ubuntu-latest]   \u2705  Success - Main actions/checkout@v3\n[CI/Test on go version  and ubuntu-latest] \u2b50 Run Main setup go environment 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v3/ dst=/var/run/act/actions/actions-setup-go@v3/\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v3/] user=0 workdir=\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/setup/index.js] user= workdir=\n[CI/Test on go version  and ubuntu-latest]   | Setup go version spec 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.19.3/x64\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::not found\n[CI/Test on go version  and ubuntu-latest]   | Attempting to download 1.19.3...\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::No manifest cached\n[CI/Test on go version  and ubuntu-latest]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::HttpClientError: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v3/dist/setup/index.js:8612:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[CI/Test on go version  and ubuntu-latest]   | Falling back to download directly from Go\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::check 1.20.0-rc.3 satisfies 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::check 1.20.0-rc.2 satisfies 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::check 1.20.0-rc.1 satisfies 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::check 1.19.8 satisfies 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::check 1.19.7 satisfies 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::check 1.19.6 satisfies 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::check 1.19.5 satisfies 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::check 1.19.4 satisfies 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::check 1.19.3 satisfies 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::matched go1.19.3\n[CI/Test on go version  and ubuntu-latest]   | Install from dist\n[CI/Test on go version  and ubuntu-latest]   | Acquiring go1.19.3 from https://storage.googleapis.com/golang/go1.19.3.linux-amd64.tar.gz\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.19.3.linux-amd64.tar.gz\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::Destination /tmp/e668d6fc-642b-4da3-bdf9-00694ae06a81\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::download complete\n[CI/Test on go version  and ubuntu-latest]   | Extracting Go...\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::Checking tar --version\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[CI/Test on go version  and ubuntu-latest]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/a7c08d5c-6c6c-4414-a709-382db32aa387 -f /tmp/e668d6fc-642b-4da3-bdf9-00694ae06a81\n[CI/Test on go version  and ubuntu-latest]   | Successfully extracted go to /tmp/a7c08d5c-6c6c-4414-a709-382db32aa387\n[CI/Test on go version  and ubuntu-latest]   | Adding to the cache ...\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::Caching tool go 1.19.3 x64\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::source dir: /tmp/a7c08d5c-6c6c-4414-a709-382db32aa387/go\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.19.3/x64\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::finished caching tool\n[CI/Test on go version  and ubuntu-latest]   | Successfully cached go to /opt/hostedtoolcache/go/1.19.3/x64\n[CI/Test on go version  and ubuntu-latest]   | Added go to the path\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.19.3/x64/bin/go:\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udcac  ::debug::add bin true\n[CI/Test on go version  and ubuntu-latest]   | Successfully set up Go version 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[CI/Test on go version  and ubuntu-latest]   \u2753 add-matcher /run/act/actions/actions-setup-go@v3/matchers.json\n[CI/Test on go version  and ubuntu-latest]   | go version go1.19.3 linux/amd64\n[CI/Test on go version  and ubuntu-latest]   | \n[CI/Test on go version  and ubuntu-latest]   \u2753  ::group::go env\n[CI/Test on go version  and ubuntu-latest]   | GO111MODULE=\"\"\n[CI/Test on go version  and ubuntu-latest]   | GOARCH=\"amd64\"\n[CI/Test on go version  and ubuntu-latest]   | GOBIN=\"\"\n[CI/Test on go version  and ubuntu-latest]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[CI/Test on go version  and ubuntu-latest]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[CI/Test on go version  and ubuntu-latest]   | GOEXE=\"\"\n[CI/Test on go version  and ubuntu-latest]   | GOEXPERIMENT=\"\"\n[CI/Test on go version  and ubuntu-latest]   | GOFLAGS=\"\"\n[CI/Test on go version  and ubuntu-latest]   | GOHOSTARCH=\"amd64\"\n[CI/Test on go version  and ubuntu-latest]   | GOHOSTOS=\"linux\"\n[CI/Test on go version  and ubuntu-latest]   | GOINSECURE=\"\"\n[CI/Test on go version  and ubuntu-latest]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[CI/Test on go version  and ubuntu-latest]   | GONOPROXY=\"\"\n[CI/Test on go version  and ubuntu-latest]   | GONOSUMDB=\"\"\n[CI/Test on go version  and ubuntu-latest]   | GOOS=\"linux\"\n[CI/Test on go version  and ubuntu-latest]   | GOPATH=\"/home/runneradmin/go\"\n[CI/Test on go version  and ubuntu-latest]   | GOPRIVATE=\"\"\n[CI/Test on go version  and ubuntu-latest]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[CI/Test on go version  and ubuntu-latest]   | GOROOT=\"/opt/hostedtoolcache/go/1.19.3/x64\"\n[CI/Test on go version  and ubuntu-latest]   | GOSUMDB=\"sum.golang.org\"\n[CI/Test on go version  and ubuntu-latest]   | GOTMPDIR=\"\"\n[CI/Test on go version  and ubuntu-latest]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.19.3/x64/pkg/tool/linux_amd64\"\n[CI/Test on go version  and ubuntu-latest]   | GOVCS=\"\"\n[CI/Test on go version  and ubuntu-latest]   | GOVERSION=\"go1.19.3\"\n[CI/Test on go version  and ubuntu-latest]   | GCCGO=\"gccgo\"\n[CI/Test on go version  and ubuntu-latest]   | GOAMD64=\"v1\"\n[CI/Test on go version  and ubuntu-latest]   | AR=\"ar\"\n[CI/Test on go version  and ubuntu-latest]   | CC=\"gcc\"\n[CI/Test on go version  and ubuntu-latest]   | CXX=\"g++\"\n[CI/Test on go version  and ubuntu-latest]   | CGO_ENABLED=\"1\"\n[CI/Test on go version  and ubuntu-latest]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/xorpaul-g10k/go.mod\"\n[CI/Test on go version  and ubuntu-latest]   | GOWORK=\"\"\n[CI/Test on go version  and ubuntu-latest]   | CGO_CFLAGS=\"-g -O2\"\n[CI/Test on go version  and ubuntu-latest]   | CGO_CPPFLAGS=\"\"\n[CI/Test on go version  and ubuntu-latest]   | CGO_CXXFLAGS=\"-g -O2\"\n[CI/Test on go version  and ubuntu-latest]   | CGO_FFLAGS=\"-g -O2\"\n[CI/Test on go version  and ubuntu-latest]   | CGO_LDFLAGS=\"-g -O2\"\n[CI/Test on go version  and ubuntu-latest]   | PKG_CONFIG=\"pkg-config\"\n[CI/Test on go version  and ubuntu-latest]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build479555881=/tmp/go-build -gno-record-gcc-switches\"\n[CI/Test on go version  and ubuntu-latest]   | \n[CI/Test on go version  and ubuntu-latest]   \u2753  ::endgroup::\n[CI/Test on go version  and ubuntu-latest]   \u2705  Success - Main setup go environment 1.19.3\n[CI/Test on go version  and ubuntu-latest]   \u2699  ::set-output:: go-version=1.19.3\n[CI/Test on go version  and ubuntu-latest]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.19.3/x64/bin\n[CI/Test on go version  and ubuntu-latest]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[CI/Test on go version  and ubuntu-latest] \u2b50 Run Main Install additional Packages on ubuntu-latest\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2.sh] user= workdir=\n[CI/Test on go version  and ubuntu-latest]   | Get:1 https://dl.hhvm.com/ubuntu focal InRelease [3137 B]\n[CI/Test on go version  and ubuntu-latest]   | Hit:2 https://adoptopenjdk.jfrog.io/adoptopenjdk/deb focal InRelease\n[CI/Test on go version  and ubuntu-latest]   | Get:3 https://packages.microsoft.com/ubuntu/20.04/prod focal InRelease [3611 B]\n[CI/Test on go version  and ubuntu-latest]   | Get:4 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]\n[CI/Test on go version  and ubuntu-latest]   | Hit:5 http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu focal InRelease\n[CI/Test on go version  and ubuntu-latest]   | Get:6 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ InRelease [3622 B]\n[CI/Test on go version  and ubuntu-latest]   | Hit:7 http://archive.ubuntu.com/ubuntu focal InRelease\n[CI/Test on go version  and ubuntu-latest]   | Get:8 http://dl.google.com/linux/chrome/deb stable InRelease [1825 B]\n[CI/Test on go version  and ubuntu-latest]   | Get:9 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]\n[CI/Test on go version  and ubuntu-latest]   | Get:10 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]\n[CI/Test on go version  and ubuntu-latest]   | Get:11 https://dl.hhvm.com/ubuntu focal/main amd64 Packages [1880 B]\n[CI/Test on go version  and ubuntu-latest]   | Get:12 https://packages.microsoft.com/ubuntu/20.04/prod focal/main all Packages [2521 B]\n[CI/Test on go version  and ubuntu-latest]   | Get:13 https://packages.microsoft.com/ubuntu/20.04/prod focal/main amd64 Packages [201 kB]\n[CI/Test on go version  and ubuntu-latest]   | Get:14 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ Packages [77.6 kB]\n[CI/Test on go version  and ubuntu-latest]   | Err:8 http://dl.google.com/linux/chrome/deb stable InRelease\n[CI/Test on go version  and ubuntu-latest]   |   The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[CI/Test on go version  and ubuntu-latest]   | Get:15 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [28.5 kB]\n[CI/Test on go version  and ubuntu-latest]   | Get:16 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [2270 kB]\n[CI/Test on go version  and ubuntu-latest]   | Get:17 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [2412 kB]\n[CI/Test on go version  and ubuntu-latest]   | Get:18 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [740 kB]\n[CI/Test on go version  and ubuntu-latest]   | Get:19 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [1053 kB]\n[CI/Test on go version  and ubuntu-latest]   | Get:20 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [741 kB]\n[CI/Test on go version  and ubuntu-latest]   | Get:21 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [3204 kB]\n[CI/Test on go version  and ubuntu-latest]   | Get:22 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [2729 kB]\n[CI/Test on go version  and ubuntu-latest]   | Get:23 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [31.2 kB]\n[CI/Test on go version  and ubuntu-latest]   | Get:24 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1347 kB]\n[CI/Test on go version  and ubuntu-latest]   | Get:25 http://security.ubuntu.com/ubuntu focal-security/multiverse i386 Packages [8141 B]\n[CI/Test on go version  and ubuntu-latest]   | Get:26 http://security.ubuntu.com/ubuntu focal-security/restricted i386 Packages [36.9 kB]\n[CI/Test on go version  and ubuntu-latest]   | Get:27 http://archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [55.2 kB]\n[CI/Test on go version  and ubuntu-latest]   | Get:28 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [28.6 kB]\n[CI/Test on go version  and ubuntu-latest]   | Fetched 15.3 MB in 33s (464 kB/s)\n[CI/Test on go version  and ubuntu-latest]   | Reading package lists...\n[CI/Test on go version  and ubuntu-latest]   | W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: http://dl.google.com/linux/chrome/deb stable InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[CI/Test on go version  and ubuntu-latest]   | W: Failed to fetch http://dl.google.com/linux/chrome/deb/dists/stable/InRelease  The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[CI/Test on go version  and ubuntu-latest]   | W: Some index files failed to download. They have been ignored, or old ones used instead.\n[CI/Test on go version  and ubuntu-latest]   | Reading package lists...\n[CI/Test on go version  and ubuntu-latest]   | Building dependency tree...\n[CI/Test on go version  and ubuntu-latest]   | Reading state information...\n[CI/Test on go version  and ubuntu-latest]   | The following NEW packages will be installed:\n[CI/Test on go version  and ubuntu-latest]   |   hashdeep\n[CI/Test on go version  and ubuntu-latest]   | 0 upgraded, 1 newly installed, 0 to remove and 388 not upgraded.\n[CI/Test on go version  and ubuntu-latest]   | Need to get 122 kB of archives.\n[CI/Test on go version  and ubuntu-latest]   | After this operation, 1508 kB of additional disk space will be used.\n[CI/Test on go version  and ubuntu-latest]   | Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 hashdeep amd64 4.4-6build1 [122 kB]\n[CI/Test on go version  and ubuntu-latest]   | Fetched 122 kB in 1s (197 kB/s)\n[CI/Test on go version  and ubuntu-latest]   | Selecting previously unselected package hashdeep.\r\n[CI/Test on go version  and ubuntu-latest]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[CI/Test on go version  and ubuntu-latest]   | Preparing to unpack .../hashdeep_4.4-6build1_amd64.deb ...\r\n[CI/Test on go version  and ubuntu-latest]   | Unpacking hashdeep (4.4-6build1) ...\r\n[CI/Test on go version  and ubuntu-latest]   | Setting up hashdeep (4.4-6build1) ...\r\n[CI/Test on go version  and ubuntu-latest]   \u2705  Success - Main Install additional Packages on ubuntu-latest\n[CI/Test on go version  and ubuntu-latest] \u2b50 Run Main Run a one-line script\n[CI/Test on go version  and ubuntu-latest]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/Test on go version  and ubuntu-latest]   | GO111MODULE=on go install golang.org/x/lint/golint@latest && \\\n[CI/Test on go version  and ubuntu-latest]   | golint *.go\n[CI/Test on go version  and ubuntu-latest]   | go: downloading golang.org/x/lint v0.0.0-20210508222113-6edffad5e616\n[CI/Test on go version  and ubuntu-latest]   | go: downloading golang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7\n[CI/Test on go version  and ubuntu-latest]   | git.go:128:2: var disableHttpProxy should be disableHTTPProxy\n[CI/Test on go version  and ubuntu-latest]   | helper.go:173:85: func parameter disableHttpProxy should be disableHTTPProxy\n[CI/Test on go version  and ubuntu-latest]   | helper.go:344:9: if block ends with a return statement, so drop this else and outdent its block\n[CI/Test on go version  and ubuntu-latest]   | GO111MODULE=on go vet\n[CI/Test on go version  and ubuntu-latest]   | GO111MODULE=on go install golang.org/x/tools/cmd/goimports@latest && \\\n[CI/Test on go version  and ubuntu-latest]   | goimports -d *.go tests/\n[CI/Test on go version  and ubuntu-latest]   | go: downloading golang.org/x/tools v0.9.1\n[CI/Test on go version  and ubuntu-latest]   | go: downloading golang.org/x/sys v0.8.0\n[CI/Test on go version  and ubuntu-latest]   | go: downloading golang.org/x/mod v0.10.0\n[CI/Test on go version  and ubuntu-latest]   | GO111MODULE=on go test -race -coverprofile=coverage.txt -covermode=atomic -v\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestPreparePuppetfile\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestPreparePuppetfile (0.00s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestCommentPuppetfile\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestCommentPuppetfile (0.00s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfile\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfile (0.01s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestFallbackPuppetfile\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestFallbackPuppetfile (0.02s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestForgeCacheTTLPuppetfile\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestForgeCacheTTLPuppetfile (0.00s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestForceForgeVersionsPuppetfile\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestForceForgeVersionsPuppetfile (0.13s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestForceForgeVersionsPuppetfileCorrect\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestForceForgeVersionsPuppetfileCorrect (0.16s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileDuplicateGitAttribute\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileDuplicateGitAttribute (0.11s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileTrailingComma\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileTrailingComma (0.07s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileInvalidForgeModuleName\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileInvalidForgeModuleName (0.12s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileDuplicateForgeModule\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileDuplicateForgeModule (0.20s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileMissingGitAttribute\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileMissingGitAttribute (0.13s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileTooManyGitAttributes\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileTooManyGitAttributes (0.12s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileConflictingGitAttributesTag\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileConflictingGitAttributesTag (0.05s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileConflictingGitAttributesBranch\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileConflictingGitAttributesBranch (0.10s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileConflictingGitAttributesCommit\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileConflictingGitAttributesCommit (0.16s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileConflictingGitAttributesRef\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileConflictingGitAttributesRef (0.11s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileIgnoreUnreachable\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileIgnoreUnreachable (0.08s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileForgeCacheTTL\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileForgeCacheTTL (0.11s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileLink\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileLink (0.04s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileDuplicateForgeGitModule\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileDuplicateForgeGitModule (0.05s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileChecksumAttribute\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileChecksumAttribute (0.00s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileForgeSlashNotation\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileForgeSlashNotation (0.00s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileForgeDash\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileForgeDash (0.00s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileInstallPath\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileInstallPath (0.00s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileLocalModule\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileLocalModule (0.01s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileMissingTrailingComma\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileMissingTrailingComma (0.04s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileMissingTrailingComma2\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileMissingTrailingComma2 (0.09s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileForgeNotationGitModule\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileForgeNotationGitModule (0.00s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileGitSlashNotation\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileGitSlashNotation (0.01s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileGitDashNotation\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileGitDashNotation (0.01s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileGitDashNSlashNotation\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileGitDashNSlashNotation (0.01s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileSSHKeyAlreadyLoaded\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileSSHKeyAlreadyLoaded (0.00s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestForgeChecksum\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestForgeChecksum (2.21s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestConfigPrefix\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestConfigPrefix (0.00s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestConfigForceForgeVersions\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestConfigForceForgeVersions (0.00s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestConfigAddWarning\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestConfigAddWarning (0.00s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestConfigSimplePostrunCommand\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestConfigSimplePostrunCommand (0.00s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestConfigPostrunCommand\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestConfigPostrunCommand (0.00s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestConfigDeploy\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestConfigDeploy (0.02s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestResolveConfigAddWarning\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestResolveConfigAddWarning (1.33s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestResolveConfigAddError\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestResolveConfigAddError (0.58s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestResolveStatic\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestResolveStatic (14.32s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestResolveStaticSkiplist\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestResolveStaticSkiplist (8.09s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestConfigGlobalAllowFail\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestConfigGlobalAllowFail (3.89s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestInvalidFilesizeForgemodule\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestInvalidFilesizeForgemodule (0.08s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestInvalidMd5sumForgemodule\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestInvalidMd5sumForgemodule (0.08s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestInvalidSha256sumForgemodule\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestInvalidSha256sumForgemodule (0.08s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestModuleDirOverride\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestModuleDirOverride (0.01s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestResolveConfigExitIfUnreachable\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestResolveConfigExitIfUnreachable (0.48s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestResolveConfigExitIfUnreachableFalse\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestResolveConfigExitIfUnreachableFalse (0.50s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestConfigUseCacheFallback\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestConfigUseCacheFallback (2.62s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestEnvFullSyncIfModuleWasTemporarilyNotAvailable\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestEnvFullSyncIfModuleWasTemporarilyNotAvailable (3.70s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestConfigUseCacheFallbackFalse\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestConfigUseCacheFallbackFalse (1.18s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileUseCacheFallback\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileUseCacheFallback (4.39s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestReadPuppetfileUseCacheFallbackFalse\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestReadPuppetfileUseCacheFallbackFalse (0.52s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestResolvePuppetfileInstallPath\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestResolvePuppetfileInstallPath (2.36s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestResolvePuppetfileInstallPathTwice\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestResolvePuppetfileInstallPathTwice (2.42s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestResolvePuppetfileSingleModuleForge\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestResolvePuppetfileSingleModuleForge (2.71s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestResolvePuppetfileSingleModuleGit\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestResolvePuppetfileSingleModuleGit (2.43s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestResolvePuppetfileFallback\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestResolvePuppetfileFallback (2.79s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestResolvePuppetfileDefaultBranch\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestResolvePuppetfileDefaultBranch (13.12s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestResolvePuppetfileControlBranch\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestResolvePuppetfileControlBranch (7.05s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestResolvePuppetfileControlBranchDefault\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestResolvePuppetfileControlBranchDefault (8.35s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestConfigRetryGitCommands\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestConfigRetryGitCommands (8.27s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestConfigRetryGitCommandsFail\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestConfigRetryGitCommandsFail (3.02s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestResolvePuppetfileLocalModules\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestResolvePuppetfileLocalModules (2.91s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestResolvePuppetfileInvalidGitObject\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestResolvePuppetfileInvalidGitObject (3.22s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestUnTarPreserveTimestamp\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestUnTarPreserveTimestamp (5.34s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestSupportOldGitWithoutObjectSyntax\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestSupportOldGitWithoutObjectSyntax (5.24s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestSupportOldGitWithoutObjectSyntaxParameter\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestSupportOldGitWithoutObjectSyntaxParameter (9.64s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestAutoCorrectEnvironmentNamesDefault\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestAutoCorrectEnvironmentNamesDefault (10.99s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestAutoCorrectEnvironmentNamesWarn\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestAutoCorrectEnvironmentNamesWarn (3.52s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestAutoCorrectEnvironmentNamesError\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestAutoCorrectEnvironmentNamesError (1.07s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestLastCheckedFile\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestLastCheckedFile (2.84s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestSimplePostrunCommand\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestSimplePostrunCommand (3.13s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestPostrunCommand\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestPostrunCommand (6.91s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestPostrunCommandDirs\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestPostrunCommandDirs (3.11s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestMultipleModuledirs\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestMultipleModuledirs (5.28s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestFailedGit\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestFailedGit (2.60s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestCheckDirPermissions\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestCheckDirPermissions (0.15s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestPurgeStalePuppetfileOnly\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestPurgeStalePuppetfileOnly (5.06s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestPurgeStaleDeploymentOnly\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestPurgeStaleDeploymentOnly (4.90s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestPurgeStaleDeploymentOnlyWithAllowList\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestPurgeStaleDeploymentOnlyWithAllowList (4.82s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestEnvironmentParameter\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestEnvironmentParameter (2.78s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestSkipPurgingWithMultipleSources\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestSkipPurgingWithMultipleSources (9.79s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestSymlink\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestSymlink (6.20s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestAutoCorrectEnvironmentNamesPurge\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestAutoCorrectEnvironmentNamesPurge (1.57s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestUnresolveableModuleReferenceOutputGit\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestUnresolveableModuleReferenceOutputGit (1.40s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestUnresolveableModuleReferenceOutputForge\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestUnresolveableModuleReferenceOutputForge (3.51s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestCloneGitModules\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestCloneGitModules (8.59s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestPrivateGithubRepository\n[CI/Test on go version  and ubuntu-latest]   |     g10k_test.go:2701: Skipping TestPrivateGithubRepository test, because the test SSH key 'tests/github-test-private/github-test-private' is missing\n[CI/Test on go version  and ubuntu-latest]   | --- SKIP: TestPrivateGithubRepository (0.00s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestBranchFilterCommand\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestBranchFilterCommand (1.41s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestBranchFilterRegex\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestBranchFilterRegex (1.20s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestResolvePuppetfileUseSSHAgent\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestResolvePuppetfileUseSSHAgent (1.53s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestResolvePuppetfileAutoDetectDefaultBranch\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestResolvePuppetfileAutoDetectDefaultBranch (3.86s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestPrecedenceConfig\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestPrecedenceConfig (0.52s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestPrecedencePuppetfile\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestPrecedencePuppetfile (0.58s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestPurgeControlRepoExceptModuledir\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestPurgeControlRepoExceptModuledir (1.53s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestStripComponentString\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestStripComponentString (1.05s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestStripComponentRegex\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestStripComponentRegex (0.88s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestStripComponentConflict\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestStripComponentConflict (0.74s)\n[CI/Test on go version  and ubuntu-latest]   | === RUN   TestNoProxy\n[CI/Test on go version  and ubuntu-latest]   | --- PASS: TestNoProxy (0.60s)\n[CI/Test on go version  and ubuntu-latest]   | PASS\n[CI/Test on go version  and ubuntu-latest]   | coverage: 63.7% of statements\n[CI/Test on go version  and ubuntu-latest]   \u274c  Failure - Main Run a one-line script\n[CI/Test on go version  and ubuntu-latest] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/f44ff33aeb4a93963686f7d7971fe478922335c28eec8481cec6e28989ebf3b2/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Test on go version  and ubuntu-latest] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}