{
    "repository": "tsenart/vegeta",
    "clone_url": "https://github.com/tsenart/vegeta.git",
    "timestamp": "2023-05-30T10:29:15.628789Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/ci] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/ci]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/ci]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/ci]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/ci]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsenart-vegeta] user=0 workdir=\n[CI/ci]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v1\n[CI/ci] \ud83e\uddea  Matrix: map[go-version:1.13.x platform:ubuntu-latest]\n[CI/ci] \u2b50 Run Main Install Go\n[CI/ci]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v1/ dst=/var/run/act/actions/actions-setup-go@v1/\n[CI/ci]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v1/] user=0 workdir=\n[CI/ci]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v1/lib/setup-go.js] user= workdir=\n[CI/ci]   \ud83d\udcac  ::debug::evaluating 19 versions\n[CI/ci]   \ud83d\udcac  ::debug::matched: 1.13.15\n[CI/ci]   \ud83d\udcac  ::debug::isExplicit: 1.13.15\n[CI/ci]   \ud83d\udcac  ::debug::explicit? true\n[CI/ci]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.13.15/x64\n[CI/ci]   \ud83d\udcac  ::debug::not found\n[CI/ci]   \ud83d\udcac  ::debug::Downloading Go from: https://storage.googleapis.com/golang/go1.13.15.linux-amd64.tar.gz\n[CI/ci]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.13.15.linux-amd64.tar.gz\n[CI/ci]   \ud83d\udcac  ::debug::Downloading /tmp/9ade23b9-f6d6-4ea3-b0a0-a4083d8e7b09\n[CI/ci]   \ud83d\udcac  ::debug::download complete\n[CI/ci]   | [command]/usr/bin/tar xzC /tmp/14bfe023-f9b9-41e6-9f3b-f6459fb9af5b -f /tmp/9ade23b9-f6d6-4ea3-b0a0-a4083d8e7b09\n[CI/ci]   \ud83d\udcac  ::debug::Caching tool go 1.13.15 x64\n[CI/ci]   \ud83d\udcac  ::debug::source dir: /tmp/14bfe023-f9b9-41e6-9f3b-f6459fb9af5b/go\n[CI/ci]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.13.15/x64\n[CI/ci]   \ud83d\udcac  ::debug::finished caching tool\n[CI/ci]   \ud83d\udcac  ::debug::Go tool is cached under /opt/hostedtoolcache/go/1.13.15/x64\n[CI/ci]   \u2753 add-matcher /run/act/actions/actions-setup-go@v1/.github/go.json\n[CI/ci]   \u2705  Success - Main Install Go\n[CI/ci]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.13.15/x64\n[CI/ci]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.13.15/x64/bin\n[CI/ci] \u2b50 Run Main Checkout code\n[CI/ci]   \u2705  Success - Main Checkout code\n[CI/ci] \u2b50 Run Main Vet\n[CI/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/ci]   | go: downloading github.com/alecthomas/jsonschema v0.0.0-20180308105923-f2c93856175a\n[CI/ci]   | go: downloading github.com/mailru/easyjson v0.7.0\n[CI/ci]   | go: downloading golang.org/x/net v0.0.0-20190827160401-ba9fcec4b297\n[CI/ci]   | go: downloading github.com/influxdata/tdigest v0.0.0-20180711151920-a7d76c6f093a\n[CI/ci]   | go: downloading github.com/miekg/dns v1.1.17\n[CI/ci]   | go: downloading github.com/streadway/quantile v0.0.0-20220407130108-4246515d968d\n[CI/ci]   | go: downloading github.com/c2h5oh/datasize v0.0.0-20171227191756-4eba002a5eae\n[CI/ci]   | go: downloading github.com/dgryski/go-lttb v0.0.0-20180810165845-318fcdf10a77\n[CI/ci]   | go: extracting github.com/alecthomas/jsonschema v0.0.0-20180308105923-f2c93856175a\n[CI/ci]   | go: extracting github.com/mailru/easyjson v0.7.0\n[CI/ci]   | go: extracting github.com/streadway/quantile v0.0.0-20220407130108-4246515d968d\n[CI/ci]   | go: extracting github.com/influxdata/tdigest v0.0.0-20180711151920-a7d76c6f093a\n[CI/ci]   | go: downloading github.com/tsenart/go-tsz v0.0.0-20180814232043-cdeb9e1e981e\n[CI/ci]   | go: downloading github.com/bmizerany/perks v0.0.0-20141205001514-d9a9656a3a4b\n[CI/ci]   | go: downloading github.com/google/go-cmp v0.2.0\n[CI/ci]   | go: downloading github.com/dgryski/go-gk v0.0.0-20140819190930-201884a44051\n[CI/ci]   | go: downloading pgregory.net/rapid v0.3.3\n[CI/ci]   | go: extracting github.com/c2h5oh/datasize v0.0.0-20171227191756-4eba002a5eae\n[CI/ci]   | go: extracting github.com/bmizerany/perks v0.0.0-20141205001514-d9a9656a3a4b\n[CI/ci]   | go: extracting github.com/dgryski/go-gk v0.0.0-20140819190930-201884a44051\n[CI/ci]   | go: extracting github.com/dgryski/go-lttb v0.0.0-20180810165845-318fcdf10a77\n[CI/ci]   | go: extracting github.com/miekg/dns v1.1.17\n[CI/ci]   | go: extracting github.com/google/go-cmp v0.2.0\n[CI/ci]   | go: extracting github.com/tsenart/go-tsz v0.0.0-20180814232043-cdeb9e1e981e\n[CI/ci]   | go: extracting pgregory.net/rapid v0.3.3\n[CI/ci]   | go: extracting golang.org/x/net v0.0.0-20190827160401-ba9fcec4b297\n[CI/ci]   | go: downloading golang.org/x/crypto v0.0.0-20190829043050-9756ffdc2472\n[CI/ci]   | go: downloading golang.org/x/sys v0.0.0-20190904154756-749cb33beabd\n[CI/ci]   | go: downloading golang.org/x/text v0.3.2\n[CI/ci]   | go: extracting golang.org/x/crypto v0.0.0-20190829043050-9756ffdc2472\n[CI/ci]   | go: extracting golang.org/x/sys v0.0.0-20190904154756-749cb33beabd\n[CI/ci]   | go: extracting golang.org/x/text v0.3.2\n[CI/ci]   | go: finding github.com/alecthomas/jsonschema v0.0.0-20180308105923-f2c93856175a\n[CI/ci]   | go: finding github.com/tsenart/go-tsz v0.0.0-20180814232043-cdeb9e1e981e\n[CI/ci]   | go: finding github.com/c2h5oh/datasize v0.0.0-20171227191756-4eba002a5eae\n[CI/ci]   | go: finding github.com/mailru/easyjson v0.7.0\n[CI/ci]   | go: finding github.com/influxdata/tdigest v0.0.0-20180711151920-a7d76c6f093a\n[CI/ci]   | go: finding golang.org/x/net v0.0.0-20190827160401-ba9fcec4b297\n[CI/ci]   | go: finding golang.org/x/text v0.3.2\n[CI/ci]   | go: finding github.com/miekg/dns v1.1.17\n[CI/ci]   | go: finding golang.org/x/crypto v0.0.0-20190829043050-9756ffdc2472\n[CI/ci]   | go: finding golang.org/x/sys v0.0.0-20190904154756-749cb33beabd\n[CI/ci]   | go: finding github.com/bmizerany/perks v0.0.0-20141205001514-d9a9656a3a4b\n[CI/ci]   | go: finding github.com/streadway/quantile v0.0.0-20220407130108-4246515d968d\n[CI/ci]   | go: finding github.com/dgryski/go-gk v0.0.0-20140819190930-201884a44051\n[CI/ci]   | go: finding pgregory.net/rapid v0.3.3\n[CI/ci]   | go: finding github.com/dgryski/go-lttb v0.0.0-20180810165845-318fcdf10a77\n[CI/ci]   | go: finding github.com/google/go-cmp v0.2.0\n[CI/ci]   \u2705  Success - Main Vet\n[CI/ci] \u2b50 Run Main Test\n[CI/ci]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/ci]   | === RUN   TestHeadersSet\n[CI/ci]   | --- PASS: TestHeadersSet (0.00s)\n[CI/ci]   | PASS\n[CI/ci]   | ok  \tgithub.com/tsenart/vegeta/v12\t1.277s\n[CI/ci]   | ?   \tgithub.com/tsenart/vegeta/v12/internal/cmd/echosrv\t[no test files]\n[CI/ci]   | ?   \tgithub.com/tsenart/vegeta/v12/internal/cmd/jsonschema\t[no test files]\n[CI/ci]   | === RUN   TestResolver\n[CI/ci]   | --- PASS: TestResolver (0.06s)\n[CI/ci]   | === RUN   TestNormalizeAddrs\n[CI/ci]   | === RUN   TestNormalizeAddrs/default_port_53\n[CI/ci]   | === PAUSE TestNormalizeAddrs/default_port_53\n[CI/ci]   | === RUN   TestNormalizeAddrs/invalid_host_port\n[CI/ci]   | === PAUSE TestNormalizeAddrs/invalid_host_port\n[CI/ci]   | === RUN   TestNormalizeAddrs/invalid_port\n[CI/ci]   | === PAUSE TestNormalizeAddrs/invalid_port\n[CI/ci]   | === RUN   TestNormalizeAddrs/invalid_IP\n[CI/ci]   | === PAUSE TestNormalizeAddrs/invalid_IP\n[CI/ci]   | === RUN   TestNormalizeAddrs/normalized\n[CI/ci]   | === PAUSE TestNormalizeAddrs/normalized\n[CI/ci]   | === CONT  TestNormalizeAddrs/default_port_53\n[CI/ci]   | === CONT  TestNormalizeAddrs/normalized\n[CI/ci]   | === CONT  TestNormalizeAddrs/invalid_IP\n[CI/ci]   | === CONT  TestNormalizeAddrs/invalid_host_port\n[CI/ci]   | === CONT  TestNormalizeAddrs/invalid_port\n[CI/ci]   | --- PASS: TestNormalizeAddrs (0.00s)\n[CI/ci]   |     --- PASS: TestNormalizeAddrs/default_port_53 (0.00s)\n[CI/ci]   |     --- PASS: TestNormalizeAddrs/normalized (0.00s)\n[CI/ci]   |     --- PASS: TestNormalizeAddrs/invalid_IP (0.00s)\n[CI/ci]   |     --- PASS: TestNormalizeAddrs/invalid_host_port (0.00s)\n[CI/ci]   |     --- PASS: TestNormalizeAddrs/invalid_port (0.00s)\n[CI/ci]   | PASS\n[CI/ci]   | ok  \tgithub.com/tsenart/vegeta/v12/internal/resolver\t1.304s\n[CI/ci]   | === RUN   TestAttackRate\n[CI/ci]   | === PAUSE TestAttackRate\n[CI/ci]   | === RUN   TestAttackDuration\n[CI/ci]   | === PAUSE TestAttackDuration\n[CI/ci]   | === RUN   TestTLSConfig\n[CI/ci]   | === PAUSE TestTLSConfig\n[CI/ci]   | === RUN   TestRedirects\n[CI/ci]   | === PAUSE TestRedirects\n[CI/ci]   | === RUN   TestNoFollow\n[CI/ci]   | === PAUSE TestNoFollow\n[CI/ci]   | === RUN   TestTimeout\n[CI/ci]   | === PAUSE TestTimeout\n[CI/ci]   | === RUN   TestLocalAddr\n[CI/ci]   | === PAUSE TestLocalAddr\n[CI/ci]   | === RUN   TestKeepAlive\n[CI/ci]   | === PAUSE TestKeepAlive\n[CI/ci]   | === RUN   TestConnections\n[CI/ci]   | === PAUSE TestConnections\n[CI/ci]   | === RUN   TestStatusCodeErrors\n[CI/ci]   | === PAUSE TestStatusCodeErrors\n[CI/ci]   | === RUN   TestBadTargeterError\n[CI/ci]   | === PAUSE TestBadTargeterError\n[CI/ci]   | === RUN   TestResponseBodyCapture\n[CI/ci]   | === PAUSE TestResponseBodyCapture\n[CI/ci]   | === RUN   TestProxyOption\n[CI/ci]   | === PAUSE TestProxyOption\n[CI/ci]   | === RUN   TestMaxBody\n[CI/ci]   | === PAUSE TestMaxBody\n[CI/ci]   | === RUN   TestUnixSocket\n[CI/ci]   | === PAUSE TestUnixSocket\n[CI/ci]   | === RUN   TestClient\n[CI/ci]   | === PAUSE TestClient\n[CI/ci]   | === RUN   TestVegetaHeaders\n[CI/ci]   | === PAUSE TestVegetaHeaders\n[CI/ci]   | === RUN   TestHistogram_Add\n[CI/ci]   | === PAUSE TestHistogram_Add\n[CI/ci]   | === RUN   TestBuckets_UnmarshalText\n[CI/ci]   | === PAUSE TestBuckets_UnmarshalText\n[CI/ci]   | === RUN   TestMetrics_Add\n[CI/ci]   | === PAUSE TestMetrics_Add\n[CI/ci]   | === RUN   TestMetrics_NoInfiniteRate\n[CI/ci]   | === PAUSE TestMetrics_NoInfiniteRate\n[CI/ci]   | === RUN   TestMetrics_NonNilErrorsOnClose\n[CI/ci]   | === PAUSE TestMetrics_NonNilErrorsOnClose\n[CI/ci]   | === RUN   TestMetrics_EmptyMetricsCanBeReported\n[CI/ci]   | === PAUSE TestMetrics_EmptyMetricsCanBeReported\n[CI/ci]   | === RUN   TestConstantPacer\n[CI/ci]   | === PAUSE TestConstantPacer\n[CI/ci]   | === RUN   TestConstantPacer_Rate\n[CI/ci]   | === PAUSE TestConstantPacer_Rate\n[CI/ci]   | === RUN   TestSinePacerHits\n[CI/ci]   | --- PASS: TestSinePacerHits (0.00s)\n[CI/ci]   | === RUN   TestSinePacerInvalid\n[CI/ci]   | --- PASS: TestSinePacerInvalid (0.00s)\n[CI/ci]   | === RUN   TestSinePacerPace_Flat\n[CI/ci]   | --- PASS: TestSinePacerPace_Flat (0.00s)\n[CI/ci]   | === RUN   TestSincePacer_Rate\n[CI/ci]   | === PAUSE TestSincePacer_Rate\n[CI/ci]   | === RUN   TestLinearPacer\n[CI/ci]   | === PAUSE TestLinearPacer\n[CI/ci]   | === RUN   TestLinearPacer_hits\n[CI/ci]   | --- PASS: TestLinearPacer_hits (0.00s)\n[CI/ci]   | === RUN   TestLinearPacer_Rate\n[CI/ci]   | --- PASS: TestLinearPacer_Rate (6.55s)\n[CI/ci]   | === RUN   TestResultDecoding\n[CI/ci]   | === PAUSE TestResultDecoding\n[CI/ci]   | === RUN   TestResultEncoding\n[CI/ci]   | === PAUSE TestResultEncoding\n[CI/ci]   | === RUN   TestTargetRequest\n[CI/ci]   | === PAUSE TestTargetRequest\n[CI/ci]   | === RUN   TestJSONTargeter\n[CI/ci]   | === RUN   TestJSONTargeter/nil_target\n[CI/ci]   | === PAUSE TestJSONTargeter/nil_target\n[CI/ci]   | === RUN   TestJSONTargeter/empty_buffer\n[CI/ci]   | === PAUSE TestJSONTargeter/empty_buffer\n[CI/ci]   | === RUN   TestJSONTargeter/no_new_line\n[CI/ci]   | === PAUSE TestJSONTargeter/no_new_line\n[CI/ci]   | === RUN   TestJSONTargeter/empty_object\n[CI/ci]   | === PAUSE TestJSONTargeter/empty_object\n[CI/ci]   | === RUN   TestJSONTargeter/empty_method\n[CI/ci]   | === PAUSE TestJSONTargeter/empty_method\n[CI/ci]   | === RUN   TestJSONTargeter/empty_url\n[CI/ci]   | === PAUSE TestJSONTargeter/empty_url\n[CI/ci]   | === RUN   TestJSONTargeter/bad_body_encoding\n[CI/ci]   | === PAUSE TestJSONTargeter/bad_body_encoding\n[CI/ci]   | === RUN   TestJSONTargeter/default_body\n[CI/ci]   | === PAUSE TestJSONTargeter/default_body\n[CI/ci]   | === RUN   TestJSONTargeter/headers_merge\n[CI/ci]   | === PAUSE TestJSONTargeter/headers_merge\n[CI/ci]   | === RUN   TestJSONTargeter/no_defaults\n[CI/ci]   | === PAUSE TestJSONTargeter/no_defaults\n[CI/ci]   | === RUN   TestJSONTargeter/skips_empty_lines_and_surrounding_whitespace\n[CI/ci]   | === PAUSE TestJSONTargeter/skips_empty_lines_and_surrounding_whitespace\n[CI/ci]   | === CONT  TestJSONTargeter/empty_buffer\n[CI/ci]   | === CONT  TestJSONTargeter/skips_empty_lines_and_surrounding_whitespace\n[CI/ci]   | === CONT  TestJSONTargeter/bad_body_encoding\n[CI/ci]   | === CONT  TestJSONTargeter/no_defaults\n[CI/ci]   | === CONT  TestJSONTargeter/empty_method\n[CI/ci]   | === CONT  TestJSONTargeter/headers_merge\n[CI/ci]   | === CONT  TestJSONTargeter/empty_object\n[CI/ci]   | === CONT  TestJSONTargeter/default_body\n[CI/ci]   | === CONT  TestJSONTargeter/no_new_line\n[CI/ci]   | === CONT  TestJSONTargeter/empty_url\n[CI/ci]   | === CONT  TestJSONTargeter/nil_target\n[CI/ci]   | --- PASS: TestJSONTargeter (0.00s)\n[CI/ci]   |     --- PASS: TestJSONTargeter/empty_buffer (0.00s)\n[CI/ci]   |     --- PASS: TestJSONTargeter/skips_empty_lines_and_surrounding_whitespace (0.00s)\n[CI/ci]   |     --- PASS: TestJSONTargeter/bad_body_encoding (0.00s)\n[CI/ci]   |     --- PASS: TestJSONTargeter/no_defaults (0.00s)\n[CI/ci]   |     --- PASS: TestJSONTargeter/empty_method (0.00s)\n[CI/ci]   |     --- PASS: TestJSONTargeter/headers_merge (0.00s)\n[CI/ci]   |     --- PASS: TestJSONTargeter/empty_object (0.00s)\n[CI/ci]   |     --- PASS: TestJSONTargeter/default_body (0.00s)\n[CI/ci]   |     --- PASS: TestJSONTargeter/no_new_line (0.00s)\n[CI/ci]   |     --- PASS: TestJSONTargeter/empty_url (0.00s)\n[CI/ci]   |     --- PASS: TestJSONTargeter/nil_target (0.00s)\n[CI/ci]   | === RUN   TestReadAllTargets\n[CI/ci]   | === RUN   TestReadAllTargets/HTTPTargeter/single\n[CI/ci]   | === PAUSE TestReadAllTargets/HTTPTargeter/single\n[CI/ci]   | === RUN   TestReadAllTargets/HTTPTargeter/many\n[CI/ci]   | === PAUSE TestReadAllTargets/HTTPTargeter/many\n[CI/ci]   | === RUN   TestReadAllTargets/JSONTargeter/single\n[CI/ci]   | === PAUSE TestReadAllTargets/JSONTargeter/single\n[CI/ci]   | === RUN   TestReadAllTargets/JSONTargeter/many\n[CI/ci]   | === PAUSE TestReadAllTargets/JSONTargeter/many\n[CI/ci]   | === RUN   TestReadAllTargets/no_targets\n[CI/ci]   | === PAUSE TestReadAllTargets/no_targets\n[CI/ci]   | === RUN   TestReadAllTargets/unexpected_error\n[CI/ci]   | === PAUSE TestReadAllTargets/unexpected_error\n[CI/ci]   | === CONT  TestReadAllTargets/HTTPTargeter/single\n[CI/ci]   | === CONT  TestReadAllTargets/unexpected_error\n[CI/ci]   | === CONT  TestReadAllTargets/no_targets\n[CI/ci]   | === CONT  TestReadAllTargets/HTTPTargeter/many\n[CI/ci]   | === CONT  TestReadAllTargets/JSONTargeter/many\n[CI/ci]   | === CONT  TestReadAllTargets/JSONTargeter/single\n[CI/ci]   | --- PASS: TestReadAllTargets (0.00s)\n[CI/ci]   |     --- PASS: TestReadAllTargets/unexpected_error (0.00s)\n[CI/ci]   |     --- PASS: TestReadAllTargets/HTTPTargeter/single (0.00s)\n[CI/ci]   |     --- PASS: TestReadAllTargets/no_targets (0.00s)\n[CI/ci]   |     --- PASS: TestReadAllTargets/JSONTargeter/many (0.00s)\n[CI/ci]   |     --- PASS: TestReadAllTargets/HTTPTargeter/many (0.00s)\n[CI/ci]   |     --- PASS: TestReadAllTargets/JSONTargeter/single (0.00s)\n[CI/ci]   | === RUN   TestNewHTTPTargeter\n[CI/ci]   | === PAUSE TestNewHTTPTargeter\n[CI/ci]   | === RUN   TestErrNilTarget\n[CI/ci]   | === PAUSE TestErrNilTarget\n[CI/ci]   | === CONT  TestAttackRate\n[CI/ci]   | === CONT  TestErrNilTarget\n[CI/ci]   | --- PASS: TestErrNilTarget (0.00s)\n[CI/ci]   | === CONT  TestNewHTTPTargeter\n[CI/ci]   | --- PASS: TestNewHTTPTargeter (0.00s)\n[CI/ci]   | === CONT  TestTargetRequest\n[CI/ci]   | === CONT  TestConnections\n[CI/ci]   | --- PASS: TestConnections (0.00s)\n[CI/ci]   | === CONT  TestBuckets_UnmarshalText\n[CI/ci]   | === CONT  TestBadTargeterError\n[CI/ci]   | --- PASS: TestBadTargeterError (0.00s)\n[CI/ci]   | === CONT  TestLocalAddr\n[CI/ci]   | === CONT  TestTimeout\n[CI/ci]   | === CONT  TestKeepAlive\n[CI/ci]   | --- PASS: TestKeepAlive (0.00s)\n[CI/ci]   | === CONT  TestRedirects\n[CI/ci]   | === CONT  TestTLSConfig\n[CI/ci]   | --- PASS: TestTLSConfig (0.00s)\n[CI/ci]   | === CONT  TestAttackDuration\n[CI/ci]   | === CONT  TestSincePacer_Rate\n[CI/ci]   | --- PASS: TestTimeout (0.24s)\n[CI/ci]   | --- PASS: TestSincePacer_Rate (0.00s)\n[CI/ci]   | === CONT  TestMetrics_NonNilErrorsOnClose\n[CI/ci]   | --- PASS: TestMetrics_NonNilErrorsOnClose (0.00s)\n[CI/ci]   | === CONT  TestMetrics_NoInfiniteRate\n[CI/ci]   | === CONT  TestMetrics_Add\n[CI/ci]   | --- PASS: TestMetrics_NoInfiniteRate (0.02s)\n[CI/ci]   | --- PASS: TestBuckets_UnmarshalText (0.01s)\n[CI/ci]   | === CONT  TestUnixSocket\n[CI/ci]   | === CONT  TestMetrics_EmptyMetricsCanBeReported\n[CI/ci]   | === CONT  TestResultDecoding\n[CI/ci]   | === CONT  TestLinearPacer\n[CI/ci]   | === RUN   TestLinearPacer/0\n[CI/ci]   | --- PASS: TestUnixSocket (0.17s)\n[CI/ci]   | === CONT  TestNoFollow\n[CI/ci]   | === CONT  TestConstantPacer\n[CI/ci]   | --- PASS: TestConstantPacer (0.00s)\n[CI/ci]   | === CONT  TestHistogram_Add\n[CI/ci]   | === CONT  TestMaxBody\n[CI/ci]   | === CONT  TestResultEncoding\n[CI/ci]   | === CONT  TestVegetaHeaders\n[CI/ci]   | === CONT  TestConstantPacer_Rate\n[CI/ci]   | === CONT  TestProxyOption\n[CI/ci]   | === CONT  TestClient\n[CI/ci]   | === CONT  TestResponseBodyCapture\n[CI/ci]   | === CONT  TestStatusCodeErrors\n[CI/ci]   | --- PASS: TestMetrics_EmptyMetricsCanBeReported (0.02s)\n[CI/ci]   | --- PASS: TestResultDecoding (0.02s)\n[CI/ci]   | --- PASS: TestMetrics_Add (0.29s)\n[CI/ci]   | --- PASS: TestTargetRequest (1.31s)\n[CI/ci]   | --- PASS: TestRedirects (1.34s)\n[CI/ci]   | --- PASS: TestNoFollow (0.21s)\n[CI/ci]   | --- PASS: TestLocalAddr (1.51s)\n[CI/ci]   | --- PASS: TestHistogram_Add (0.00s)\n[CI/ci]   | === RUN   TestResultEncoding/auto-gob\n[CI/ci]   | === RUN   TestMaxBody/-1\n[CI/ci]   | --- PASS: TestConstantPacer_Rate (0.00s)\n[CI/ci]   | --- PASS: TestProxyOption (0.02s)\n[CI/ci]   | --- PASS: TestClient (0.01s)\n[CI/ci]   | === RUN   TestLinearPacer/1\n[CI/ci]   | === RUN   TestLinearPacer/2\n[CI/ci]   | === RUN   TestLinearPacer/3\n[CI/ci]   | --- PASS: TestStatusCodeErrors (0.02s)\n[CI/ci]   | === RUN   TestLinearPacer/4\n[CI/ci]   | === RUN   TestLinearPacer/5\n[CI/ci]   | --- PASS: TestResponseBodyCapture (0.03s)\n[CI/ci]   | === RUN   TestLinearPacer/6\n[CI/ci]   | === RUN   TestMaxBody/0\n[CI/ci]   | === RUN   TestLinearPacer/7\n[CI/ci]   | === RUN   TestLinearPacer/8\n[CI/ci]   | --- PASS: TestVegetaHeaders (0.44s)\n[CI/ci]   | === RUN   TestLinearPacer/9\n[CI/ci]   | --- FAIL: TestAttackDuration (1.95s)\n[CI/ci]   |     attack_test.go:59: got 76 hits, want: 100\n[CI/ci]   | --- FAIL: TestAttackRate (1.97s)\n[CI/ci]   |     attack_test.go:37: got: 92, want: 100\n[CI/ci]   | === RUN   TestLinearPacer/10\n[CI/ci]   | === RUN   TestLinearPacer/11\n[CI/ci]   | === RUN   TestLinearPacer/12\n[CI/ci]   | === RUN   TestLinearPacer/13\n[CI/ci]   | === RUN   TestLinearPacer/14\n[CI/ci]   | === RUN   TestMaxBody/1\n[CI/ci]   | === RUN   TestLinearPacer/15\n[CI/ci]   | === RUN   TestLinearPacer/16\n[CI/ci]   | === RUN   TestLinearPacer/17\n[CI/ci]   | === RUN   TestLinearPacer/18\n[CI/ci]   | === RUN   TestLinearPacer/19\n[CI/ci]   | === RUN   TestLinearPacer/20\n[CI/ci]   | === RUN   TestMaxBody/2\n[CI/ci]   | === RUN   TestLinearPacer/21\n[CI/ci]   | === RUN   TestLinearPacer/22\n[CI/ci]   | --- PASS: TestLinearPacer (1.30s)\n[CI/ci]   |     --- PASS: TestLinearPacer/0 (0.06s)\n[CI/ci]   |     --- PASS: TestLinearPacer/1 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/2 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/3 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/4 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/5 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/6 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/7 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/8 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/9 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/10 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/11 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/12 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/13 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/14 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/15 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/16 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/17 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/18 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/19 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/20 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/21 (0.00s)\n[CI/ci]   |     --- PASS: TestLinearPacer/22 (0.00s)\n[CI/ci]   | === RUN   TestMaxBody/3\n[CI/ci]   | === RUN   TestMaxBody/4\n[CI/ci]   | === RUN   TestMaxBody/5\n[CI/ci]   | --- PASS: TestMaxBody (0.48s)\n[CI/ci]   |     --- PASS: TestMaxBody/-1 (0.01s)\n[CI/ci]   |     --- PASS: TestMaxBody/0 (0.23s)\n[CI/ci]   |     --- PASS: TestMaxBody/1 (0.01s)\n[CI/ci]   |     --- PASS: TestMaxBody/2 (0.00s)\n[CI/ci]   |     --- PASS: TestMaxBody/3 (0.00s)\n[CI/ci]   |     --- PASS: TestMaxBody/4 (0.00s)\n[CI/ci]   |     --- PASS: TestMaxBody/5 (0.00s)\n[CI/ci]   | === RUN   TestResultEncoding/auto-json\n[CI/ci]   | === RUN   TestResultEncoding/auto-csv\n[CI/ci]   | === RUN   TestResultEncoding/gob\n[CI/ci]   | === RUN   TestResultEncoding/csv\n[CI/ci]   | === RUN   TestResultEncoding/json\n[CI/ci]   | === RUN   TestResultEncoding/json-dec-compat\n[CI/ci]   | === RUN   TestResultEncoding/json-enc-compat\n[CI/ci]   | --- PASS: TestResultEncoding (2.32s)\n[CI/ci]   |     --- PASS: TestResultEncoding/auto-gob (0.66s)\n[CI/ci]   |         results_test.go:84: [rapid] OK, passed 100 tests (656.589377ms)\n[CI/ci]   |     --- PASS: TestResultEncoding/auto-json (0.20s)\n[CI/ci]   |         results_test.go:84: [rapid] OK, passed 100 tests (200.10102ms)\n[CI/ci]   |     --- PASS: TestResultEncoding/auto-csv (0.27s)\n[CI/ci]   |         results_test.go:84: [rapid] OK, passed 100 tests (266.858086ms)\n[CI/ci]   |     --- PASS: TestResultEncoding/gob (0.19s)\n[CI/ci]   |         results_test.go:84: [rapid] OK, passed 100 tests (189.031086ms)\n[CI/ci]   |     --- PASS: TestResultEncoding/csv (0.21s)\n[CI/ci]   |         results_test.go:84: [rapid] OK, passed 100 tests (208.809097ms)\n[CI/ci]   |     --- PASS: TestResultEncoding/json (0.20s)\n[CI/ci]   |         results_test.go:84: [rapid] OK, passed 100 tests (203.160683ms)\n[CI/ci]   |     --- PASS: TestResultEncoding/json-dec-compat (0.19s)\n[CI/ci]   |         results_test.go:84: [rapid] OK, passed 100 tests (193.693463ms)\n[CI/ci]   |     --- PASS: TestResultEncoding/json-enc-compat (0.18s)\n[CI/ci]   |         results_test.go:84: [rapid] OK, passed 100 tests (184.065625ms)\n[CI/ci]   | FAIL\n[CI/ci]   | FAIL\tgithub.com/tsenart/vegeta/v12/lib\t10.805s\n[CI/ci]   | === RUN   TestDownsample\n[CI/ci]   | === PAUSE TestDownsample\n[CI/ci]   | === CONT  TestDownsample\n[CI/ci]   | --- PASS: TestDownsample (38.68s)\n[CI/ci]   | PASS\n[CI/ci]   | ok  \tgithub.com/tsenart/vegeta/v12/lib/lttb\t40.141s\n[CI/ci]   | === RUN   TestPlot\n[CI/ci]   | --- PASS: TestPlot (1.89s)\n[CI/ci]   | === RUN   TestLabeledSeries\n[CI/ci]   | === PAUSE TestLabeledSeries\n[CI/ci]   | === CONT  TestLabeledSeries\n[CI/ci]   | --- PASS: TestLabeledSeries (8.01s)\n[CI/ci]   |     plot_test.go:106: series \"OK\" has 250000 points\n[CI/ci]   |     plot_test.go:106: series \"ERROR\" has 250000 points\n[CI/ci]   | PASS\n[CI/ci]   | ok  \tgithub.com/tsenart/vegeta/v12/lib/plot\t11.329s\n[CI/ci]   | FAIL\n[CI/ci]   \u274c  Failure - Main Test\n[CI/ci] exitcode '1': failure\n[CI/ci] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'ci' failed\n"
}