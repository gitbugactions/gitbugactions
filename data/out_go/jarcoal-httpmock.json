{
    "repository": "jarcoal/httpmock",
    "clone_url": "https://github.com/jarcoal/httpmock.git",
    "timestamp": "2023-05-30T10:37:49.505075Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Build/test-1] \ud83d\ude80  Start image=crawlergpt:latest\n[Build/test-2] \ud83d\ude80  Start image=crawlergpt:latest\n[Build/test-1]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build/test-2]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build/test-1]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/test-2]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/test-2]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/test-1]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/test-2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/jarcoal-httpmock] user=0 workdir=\n[Build/test-1]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/jarcoal-httpmock] user=0 workdir=\n[Build/test-2] \ud83e\uddea  Matrix: map[full-tests:true go-version:1.20.x]\n[Build/test-1] \ud83e\uddea  Matrix: map[full-tests:false go-version:1.13.x]\n[Build/test-1] \u2b50 Run Main Setup go\n[Build/test-2] \u2b50 Run Main Setup go\n[Build/test-1]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/0] user= workdir=\n[Build/test-2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/0] user= workdir=\n[Build/test-1]   | Use of uninitialized value $last_minor in numeric lt (<) at - line 166.\n[Build/test-1]   | Check https://golang.org/dl/go1.13.15.linux-amd64.tar.gz\n[Build/test-1]   | > curl -L -s https\\:\\/\\/dl\\.google\\.com\\/go\\/go1\\.13\\.15\\.linux\\-amd64\\.tar\\.gz | tar zxf - go/bin go/pkg go/src\n[Build/test-2]   | Check https://golang.org/dl/go1.20.4.linux-amd64.tar.gz\n[Build/test-2]   | > curl -L -s https\\:\\/\\/dl\\.google\\.com\\/go\\/go1\\.20\\.4\\.linux\\-amd64\\.tar\\.gz | tar zxf - go/bin go/pkg go/src\n[Build/test-1]   | go 1.13.15 installed as /home/runneradmin/go/go/bin/go\n[Build/test-1]   \u2705  Success - Main Setup go\n[Build/test-1]   \u2699  ::set-env:: GOROOT=/home/runneradmin/go/go\n[Build/test-1]   \u2699  ::set-env:: GOPATH=/home/runneradmin/go/go/gopath\n[Build/test-1]   \u2699  ::add-path:: /home/runneradmin/go/go/bin\n[Build/test-1]   \u2699  ::add-path:: /home/runneradmin/go/go/gopath/bin\n[Build/test-1] \u2b50 Run Main Checkout code\n[Build/test-1]   \u2705  Success - Main Checkout code\n[Build/test-1] \u2b50 Run Main Testing\n[Build/test-1]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Build/test-2]   | go 1.20.4 installed as /home/runneradmin/go/go/bin/go\n[Build/test-2]   \u2705  Success - Main Setup go\n[Build/test-2]   \u2699  ::set-env:: GOROOT=/home/runneradmin/go/go\n[Build/test-2]   \u2699  ::set-env:: GOPATH=/home/runneradmin/go/go/gopath\n[Build/test-2]   \u2699  ::add-path:: /home/runneradmin/go/go/bin\n[Build/test-2]   \u2699  ::add-path:: /home/runneradmin/go/go/gopath/bin\n[Build/test-2] \u2b50 Run Main Checkout code\n[Build/test-2]   \u2705  Success - Main Checkout code\n[Build/test-2] \u2b50 Run Main Linting\n[Build/test-2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Build/test-1]   | go version go1.13.15 linux/amd64\n[Build/test-1]   | go: downloading github.com/maxatome/go-testdeep v1.12.0\n[Build/test-2]   | golangci/golangci-lint info checking GitHub for tag 'v1.52.2'\n[Build/test-1]   | go: extracting github.com/maxatome/go-testdeep v1.12.0\n[Build/test-1]   | go: downloading github.com/davecgh/go-spew v1.1.1\n[Build/test-1]   | go: extracting github.com/davecgh/go-spew v1.1.1\n[Build/test-2]   | golangci/golangci-lint info found version: 1.52.2 for v1.52.2/linux/amd64\n[Build/test-1]   | go: finding github.com/maxatome/go-testdeep v1.12.0\n[Build/test-1]   | go: finding github.com/davecgh/go-spew v1.1.1\n[Build/test-2]   | golangci/golangci-lint info installed /home/runneradmin/go/bin/golangci-lint\n[Build/test-2]   | level=error msg=\"Running error: context loading failed: no go files to analyze\"\n[Build/test-2]   \u274c  Failure - Main Linting\n[Build/test-2] exitcode '5': failure\n[Build/test-1]   | ok  \tgithub.com/jarcoal/httpmock\t1.592s\n[Build/test-1]   | ok  \tgithub.com/jarcoal/httpmock/internal\t1.099s\n[Build/test-1]   \u2705  Success - Main Testing\n[Build/test-2] \ud83c\udfc1  Job failed\n[Build/test-1] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/5938fd1c020426431469961f1ee5883857c265b42a86008a519ea8f68cfe4a1a?force=1&v=1\": context deadline exceeded\n[Build/test-1] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Error occurred running finally: Error occurred running finally: context deadline exceeded (original error: <nil>) (original error: <nil>)\n"
}