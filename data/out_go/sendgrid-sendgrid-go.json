{
    "repository": "sendgrid/sendgrid-go",
    "clone_url": "https://github.com/sendgrid/sendgrid-go.git",
    "timestamp": "2023-05-30T10:30:01.519946Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Test and Deploy/Build & Test] \ud83d\ude80  Start image=crawlergpt:latest\n[Test and Deploy/Build & Test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test and Deploy/Build & Test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test and Deploy/Build & Test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test and Deploy/Build & Test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/sendgrid-sendgrid-go] user=0 workdir=\n[Test and Deploy/Build & Test]   \u2601  git clone 'https://github.com/docker/login-action' # ref=v1\n[Test and Deploy/Build & Test]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[Test and Deploy/Build & Test] \ud83e\uddea  Matrix: map[go:1.14]\n[Test and Deploy/Build & Test] \u2b50 Run Main Checkout sendgrid-go\n[Test and Deploy/Build & Test]   \u2705  Success - Main Checkout sendgrid-go\n[Test and Deploy/Build & Test] \u2b50 Run Main Setup Go environment\n[Test and Deploy/Build & Test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[Test and Deploy/Build & Test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[Test and Deploy/Build & Test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[Test and Deploy/Build & Test]   | Setup go stable version spec 1.14\n[Test and Deploy/Build & Test]   \ud83d\udcac  ::debug::isExplicit: \n[Test and Deploy/Build & Test]   \ud83d\udcac  ::debug::explicit? false\n[Test and Deploy/Build & Test]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Test and Deploy/Build & Test]   \ud83d\udcac  ::debug::explicit? true\n[Test and Deploy/Build & Test]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Test and Deploy/Build & Test]   \ud83d\udcac  ::debug::explicit? true\n[Test and Deploy/Build & Test]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Test and Deploy/Build & Test]   \ud83d\udcac  ::debug::explicit? true\n[Test and Deploy/Build & Test]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Test and Deploy/Build & Test]   \ud83d\udcac  ::debug::matched: 1.14.15\n[Test and Deploy/Build & Test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.14.15/x64\n[Test and Deploy/Build & Test]   \ud83d\udcac  ::debug::Found tool in cache go 1.14.15 x64\n[Test and Deploy/Build & Test]   | Found in cache @ /opt/hostedtoolcache/go/1.14.15/x64\n[Test and Deploy/Build & Test]   | Added go to the path\n[Test and Deploy/Build & Test]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.14.15/x64/bin/go:\n[Test and Deploy/Build & Test]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Test and Deploy/Build & Test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Test and Deploy/Build & Test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Test and Deploy/Build & Test]   \ud83d\udcac  ::debug::add bin true\n[Test and Deploy/Build & Test]   | Successfully setup go version 1.14\n[Test and Deploy/Build & Test]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[Test and Deploy/Build & Test]   | go version go1.14.15 linux/amd64\n[Test and Deploy/Build & Test]   | \n[Test and Deploy/Build & Test]   \u2753  ::group::go env\n[Test and Deploy/Build & Test]   | GO111MODULE=\"\"\n[Test and Deploy/Build & Test]   | GOARCH=\"amd64\"\n[Test and Deploy/Build & Test]   | GOBIN=\"\"\n[Test and Deploy/Build & Test]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Test and Deploy/Build & Test]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Test and Deploy/Build & Test]   | GOEXE=\"\"\n[Test and Deploy/Build & Test]   | GOFLAGS=\"\"\n[Test and Deploy/Build & Test]   | GOHOSTARCH=\"amd64\"\n[Test and Deploy/Build & Test]   | GOHOSTOS=\"linux\"\n[Test and Deploy/Build & Test]   | GOINSECURE=\"\"\n[Test and Deploy/Build & Test]   | GONOPROXY=\"\"\n[Test and Deploy/Build & Test]   | GONOSUMDB=\"\"\n[Test and Deploy/Build & Test]   | GOOS=\"linux\"\n[Test and Deploy/Build & Test]   | GOPATH=\"/home/runneradmin/go\"\n[Test and Deploy/Build & Test]   | GOPRIVATE=\"\"\n[Test and Deploy/Build & Test]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Test and Deploy/Build & Test]   | GOROOT=\"/opt/hostedtoolcache/go/1.14.15/x64\"\n[Test and Deploy/Build & Test]   | GOSUMDB=\"sum.golang.org\"\n[Test and Deploy/Build & Test]   | GOTMPDIR=\"\"\n[Test and Deploy/Build & Test]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.14.15/x64/pkg/tool/linux_amd64\"\n[Test and Deploy/Build & Test]   | GCCGO=\"gccgo\"\n[Test and Deploy/Build & Test]   | AR=\"ar\"\n[Test and Deploy/Build & Test]   | CC=\"gcc\"\n[Test and Deploy/Build & Test]   | CXX=\"g++\"\n[Test and Deploy/Build & Test]   | CGO_ENABLED=\"1\"\n[Test and Deploy/Build & Test]   | GOMOD=\"\"\n[Test and Deploy/Build & Test]   | CGO_CFLAGS=\"-g -O2\"\n[Test and Deploy/Build & Test]   | CGO_CPPFLAGS=\"\"\n[Test and Deploy/Build & Test]   | CGO_CXXFLAGS=\"-g -O2\"\n[Test and Deploy/Build & Test]   | CGO_FFLAGS=\"-g -O2\"\n[Test and Deploy/Build & Test]   | CGO_LDFLAGS=\"-g -O2\"\n[Test and Deploy/Build & Test]   | PKG_CONFIG=\"pkg-config\"\n[Test and Deploy/Build & Test]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build327214939=/tmp/go-build -gno-record-gcc-switches\"\n[Test and Deploy/Build & Test]   | \n[Test and Deploy/Build & Test]   \u2753  ::endgroup::\n[Test and Deploy/Build & Test]   \u2705  Success - Main Setup Go environment\n[Test and Deploy/Build & Test]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.14.15/x64\n[Test and Deploy/Build & Test]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.14.15/x64/bin\n[Test and Deploy/Build & Test]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Test and Deploy/Build & Test] \u2b50 Run Main Set Go env vars\n[Test and Deploy/Build & Test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Test and Deploy/Build & Test]   \u2705  Success - Main Set Go env vars\n[Test and Deploy/Build & Test]   \u2699  ::set-env:: GOPATH=/home/runneradmin\n[Test and Deploy/Build & Test]   \u2699  ::set-env:: GOBIN=/home/runneradmin/bin\n[Test and Deploy/Build & Test]   \u2699  ::set-env:: GO111MODULE=off\n[Test and Deploy/Build & Test] \u2b50 Run Main Run Tests\n[Test and Deploy/Build & Test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Test and Deploy/Build & Test]   | curl -s https://raw.githubusercontent.com/sendgrid/sendgrid-oai/HEAD/prism/prism.sh -o prism.sh\n[Test and Deploy/Build & Test]   | version=latest bash ./prism.sh\n[Test and Deploy/Build & Test]   | Cloning into '.'...\n[Test and Deploy/Build & Test]   | [123] Failed to execute script docker-compose\n[Test and Deploy/Build & Test]   | Traceback (most recent call last):\n[Test and Deploy/Build & Test]   |   File \"urllib3/connectionpool.py\", line 677, in urlopen\n[Test and Deploy/Build & Test]   |   File \"urllib3/connectionpool.py\", line 392, in _make_request\n[Test and Deploy/Build & Test]   |   File \"http/client.py\", line 1277, in request\n[Test and Deploy/Build & Test]   |   File \"http/client.py\", line 1323, in _send_request\n[Test and Deploy/Build & Test]   |   File \"http/client.py\", line 1272, in endheaders\n[Test and Deploy/Build & Test]   |   File \"http/client.py\", line 1032, in _send_output\n[Test and Deploy/Build & Test]   |   File \"http/client.py\", line 972, in send\n[Test and Deploy/Build & Test]   |   File \"docker/transport/unixconn.py\", line 43, in connect\n[Test and Deploy/Build & Test]   | PermissionError: [Errno 13] Permission denied\n[Test and Deploy/Build & Test]   | \n[Test and Deploy/Build & Test]   | During handling of the above exception, another exception occurred:\n[Test and Deploy/Build & Test]   | \n[Test and Deploy/Build & Test]   | Traceback (most recent call last):\n[Test and Deploy/Build & Test]   |   File \"requests/adapters.py\", line 449, in send\n[Test and Deploy/Build & Test]   |   File \"urllib3/connectionpool.py\", line 727, in urlopen\n[Test and Deploy/Build & Test]   |   File \"urllib3/util/retry.py\", line 410, in increment\n[Test and Deploy/Build & Test]   |   File \"urllib3/packages/six.py\", line 734, in reraise\n[Test and Deploy/Build & Test]   |   File \"urllib3/connectionpool.py\", line 677, in urlopen\n[Test and Deploy/Build & Test]   |   File \"urllib3/connectionpool.py\", line 392, in _make_request\n[Test and Deploy/Build & Test]   |   File \"http/client.py\", line 1277, in request\n[Test and Deploy/Build & Test]   |   File \"http/client.py\", line 1323, in _send_request\n[Test and Deploy/Build & Test]   |   File \"http/client.py\", line 1272, in endheaders\n[Test and Deploy/Build & Test]   |   File \"http/client.py\", line 1032, in _send_output\n[Test and Deploy/Build & Test]   |   File \"http/client.py\", line 972, in send\n[Test and Deploy/Build & Test]   |   File \"docker/transport/unixconn.py\", line 43, in connect\n[Test and Deploy/Build & Test]   | urllib3.exceptions.ProtocolError: ('Connection aborted.', PermissionError(13, 'Permission denied'))\n[Test and Deploy/Build & Test]   | \n[Test and Deploy/Build & Test]   | During handling of the above exception, another exception occurred:\n[Test and Deploy/Build & Test]   | \n[Test and Deploy/Build & Test]   | Traceback (most recent call last):\n[Test and Deploy/Build & Test]   |   File \"docker/api/client.py\", line 214, in _retrieve_server_version\n[Test and Deploy/Build & Test]   |   File \"docker/api/daemon.py\", line 181, in version\n[Test and Deploy/Build & Test]   |   File \"docker/utils/decorators.py\", line 46, in inner\n[Test and Deploy/Build & Test]   |   File \"docker/api/client.py\", line 237, in _get\n[Test and Deploy/Build & Test]   |   File \"requests/sessions.py\", line 543, in get\n[Test and Deploy/Build & Test]   |   File \"requests/sessions.py\", line 530, in request\n[Test and Deploy/Build & Test]   |   File \"requests/sessions.py\", line 643, in send\n[Test and Deploy/Build & Test]   |   File \"requests/adapters.py\", line 498, in send\n[Test and Deploy/Build & Test]   | requests.exceptions.ConnectionError: ('Connection aborted.', PermissionError(13, 'Permission denied'))\n[Test and Deploy/Build & Test]   | \n[Test and Deploy/Build & Test]   | During handling of the above exception, another exception occurred:\n[Test and Deploy/Build & Test]   | \n[Test and Deploy/Build & Test]   | Traceback (most recent call last):\n[Test and Deploy/Build & Test]   |   File \"docker-compose\", line 3, in <module>\n[Test and Deploy/Build & Test]   |   File \"compose/cli/main.py\", line 81, in main\n[Test and Deploy/Build & Test]   |   File \"compose/cli/main.py\", line 200, in perform_command\n[Test and Deploy/Build & Test]   |   File \"compose/cli/command.py\", line 70, in project_from_options\n[Test and Deploy/Build & Test]   |   File \"compose/cli/command.py\", line 153, in get_project\n[Test and Deploy/Build & Test]   |   File \"compose/cli/docker_client.py\", line 43, in get_client\n[Test and Deploy/Build & Test]   |   File \"compose/cli/docker_client.py\", line 170, in docker_client\n[Test and Deploy/Build & Test]   |   File \"docker/api/client.py\", line 197, in __init__\n[Test and Deploy/Build & Test]   |   File \"docker/api/client.py\", line 222, in _retrieve_server_version\n[Test and Deploy/Build & Test]   | docker.errors.DockerException: Error while fetching server API version: ('Connection aborted.', PermissionError(13, 'Permission denied'))\n[Test and Deploy/Build & Test]   | make: *** [Makefile:15: test-docker] Error 255\n[Test and Deploy/Build & Test]   \u274c  Failure - Main Run Tests\n[Test and Deploy/Build & Test] exitcode '2': failure\n[Test and Deploy/Build & Test] \ud83c\udfc1  Job failed\n[Test and Deploy/Slack notify on failure] \ud83d\ude80  Start image=crawlergpt:latest\n[Test and Deploy/Slack notify on failure]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test and Deploy/Slack notify on failure]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test and Deploy/Slack notify on failure]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test and Deploy/Slack notify on failure]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/sendgrid-sendgrid-go] user=0 workdir=\n[Test and Deploy/Slack notify on failure]   \u2601  git clone 'https://github.com/rtCamp/action-slack-notify' # ref=v2\n[Test and Deploy/Slack notify on failure] \u2b50 Run Main rtCamp/action-slack-notify@v2\n[Test and Deploy/Slack notify on failure]   \ud83d\udc33  docker pull image=ghcr.io/rtcamp/action-slack-notify:v2.2.0 platform= username= forcePull=false\n[Test and Deploy/Slack notify on failure]   \ud83d\udc33  docker create image=ghcr.io/rtcamp/action-slack-notify:v2.2.0 platform= entrypoint=[] cmd=[]\n[Test and Deploy/Slack notify on failure]   \ud83d\udc33  docker run image=ghcr.io/rtcamp/action-slack-notify:v2.2.0 platform= entrypoint=[] cmd=[]\n[Test and Deploy/Slack notify on failure] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/f3409fb22724bfa59a4ef86f3f6f35c277c39bdb06d72012eee129b1de65255c?force=1&v=1\": context canceled\n[Test and Deploy/Slack notify on failure]   \u274c  Failure - Main rtCamp/action-slack-notify@v2\n[Test and Deploy/Slack notify on failure] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/731ea6ba855bc4ce21aaef91560b78a4aef3b323fdfe5fa86659747c217e8c3a/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Test and Deploy/Slack notify on failure]   | [\u001b[0;31mERROR\u001b[0m] Secret `SLACK_WEBHOOK` is missing. Please add it to this action for proper execution.\n[Test and Deploy/Slack notify on failure]   | Refer https://github.com/rtCamp/action-slack-notify for more information.\n[Test and Deploy/Slack notify on failure] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}