{
    "repository": "nsqio/nsq",
    "clone_url": "https://github.com/nsqio/nsq.git",
    "timestamp": "2023-05-30T10:26:15.292035Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[tests/code-coverage] \ud83d\ude80  Start image=crawlergpt:latest\n[tests/staticcheck  ] \ud83d\ude80  Start image=crawlergpt:latest\n[tests/test         ] \ud83d\ude80  Start image=crawlergpt:latest\n[tests/code-coverage]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[tests/staticcheck  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[tests/test         ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[tests/code-coverage]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/test         ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/staticcheck  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/test         ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/staticcheck  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/code-coverage]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/code-coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/nsqio-nsq] user=0 workdir=\n[tests/staticcheck  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/nsqio-nsq] user=0 workdir=\n[tests/test         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/nsqio-nsq] user=0 workdir=\n[tests/staticcheck  ]   \u2601  git clone 'https://github.com/dominikh/staticcheck-action' # ref=v1.3.0\n[tests/test         ]   \u2601  git clone 'https://github.com/WillAbides/setup-go-faster' # ref=v1.7.0\n[tests/code-coverage] \u2b50 Run Main actions/checkout@v2\n[tests/code-coverage]   \u2705  Success - Main actions/checkout@v2\n[tests/staticcheck  ] \u2b50 Run Pre dominikh/staticcheck-action@v1.3.0\n[tests/staticcheck  ]   \u2601  git clone 'https://github.com/WillAbides/setup-go-faster' # ref=v1.8.0\n[tests/test         ] \u2b50 Run Pre WillAbides/setup-go-faster@v1.7.0\n[tests/code-coverage] \u2b50 Run Main install goveralls\n[tests/test         ]   \u2705  Success - Pre WillAbides/setup-go-faster@v1.7.0\n[tests/code-coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[tests/staticcheck  ] \u2b50 Run Pre WillAbides/setup-go-faster@v1.8.0\n[tests/test         ] \ud83e\uddea  Matrix: map[arch:amd64 go:1.18.x]\n[tests/staticcheck  ]   \u2705  Success - Pre WillAbides/setup-go-faster@v1.8.0\n[tests/test         ] \u2b50 Run Main actions/checkout@v2\n[tests/test         ]   \u2705  Success - Main actions/checkout@v2\n[tests/staticcheck  ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[tests/test         ] \u2b50 Run Main WillAbides/setup-go-faster@v1.7.0\n[tests/staticcheck  ] Unable to checkout 88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8: invalid checksum\n[tests/staticcheck  ] invalid checksum\n[tests/staticcheck  ]   \u2705  Success - Pre dominikh/staticcheck-action@v1.3.0\n[tests/code-coverage]   | package github.com/mattn/goveralls@latest: can only use path@version syntax with 'go get'\n[tests/code-coverage]   \u274c  Failure - Main install goveralls\n[tests/test         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/WillAbides-setup-go-faster@v1.7.0/ dst=/var/run/act/actions/WillAbides-setup-go-faster@v1.7.0/\n[tests/test         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/WillAbides-setup-go-faster@v1.7.0/] user=0 workdir=\n[tests/code-coverage] exitcode '1': failure\n[tests/staticcheck  ] \u2b50 Run Main actions/checkout@v2\n[tests/test         ] \u2b50 Run Main src/run\n[tests/staticcheck  ]   \u2705  Success - Main actions/checkout@v2\n[tests/test         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-run.sh] user= workdir=/var/run/act/actions/WillAbides-setup-go-faster@v1.7.0\n[tests/staticcheck  ] \u2b50 Run Main dominikh/staticcheck-action@v1.3.0\n[tests/staticcheck  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dominikh-staticcheck-action@v1.3.0/ dst=/var/run/act/actions/dominikh-staticcheck-action@v1.3.0/\n[tests/staticcheck  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dominikh-staticcheck-action@v1.3.0/] user=0 workdir=\n[tests/test         ]   | mkdir: cannot create directory \u2018/setup-go-faster\u2019: Permission denied\n[tests/test         ]   \u274c  Failure - Main src/run\n[tests/test         ] exitcode '1': failure\n[tests/test         ]   \u2699  ::set-output:: GOCACHE=\n[tests/test         ]   \u2699  ::set-output:: GOMODCACHE=\n[tests/test         ]   \u2699  ::set-output:: GOPATH=\n[tests/test         ]   \u2699  ::set-output:: GOROOT=\n[tests/test         ]   \u2699  ::set-output:: GOTOOLDIR=\n[tests/test         ]   \u274c  Failure - Main WillAbides/setup-go-faster@v1.7.0\n[tests/test         ] exitcode '1': failure\n[tests/test         ] \u2b50 Run Post WillAbides/setup-go-faster@v1.7.0\n[tests/test         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/WillAbides-setup-go-faster@v1.7.0/ dst=/var/run/act/actions/WillAbides-setup-go-faster@v1.7.0/\n[tests/test         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/WillAbides-setup-go-faster@v1.7.0/] user=0 workdir=\n[tests/code-coverage] \ud83c\udfc1  Job failed\n[tests/staticcheck  ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[tests/test         ]   \u2705  Success - Post WillAbides/setup-go-faster@v1.7.0\n[tests/staticcheck  ] Unable to checkout 88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8: invalid checksum\n[tests/staticcheck  ] invalid checksum\n[tests/staticcheck  ] \u2b50 Run Main export STATICCHECK_CACHE=\"/tmp/staticcheck\"\ngo install \"honnef.co/go/tools/cmd/staticcheck@${version}\"\necho \"::add-matcher::$GITHUB_ACTION_PATH/matchers.json\"\nwrite_output() {\n  if [ -z \"${file}\" ]; then\n    cat\n  else\n    cat >\"${file}\"\n  fi\n}\nif [ -z \"${merge}\" ]; then\n  $(go env GOPATH)/bin/staticcheck -tags \"${buildTags}\" -checks \"${checks}\" -f \"${format}\" -go \"${minGoVersion}\" ./... | write_output\nelse\n  IFS=$'\\n'\n  $(go env GOPATH)/bin/staticcheck -checks \"${checks}\" -f \"${format}\" -merge ${merge} | write_output\nfi\n[tests/staticcheck  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=.\n[tests/staticcheck  ]   | package honnef.co/go/tools/cmd/staticcheck@2023.1.3: can only use path@version syntax with 'go get'\n[tests/test         ] \ud83c\udfc1  Job failed\n[tests/staticcheck  ]   \u274c  Failure - Main export STATICCHECK_CACHE=\"/tmp/staticcheck\"\ngo install \"honnef.co/go/tools/cmd/staticcheck@${version}\"\necho \"::add-matcher::$GITHUB_ACTION_PATH/matchers.json\"\nwrite_output() {\n  if [ -z \"${file}\" ]; then\n    cat\n  else\n    cat >\"${file}\"\n  fi\n}\nif [ -z \"${merge}\" ]; then\n  $(go env GOPATH)/bin/staticcheck -tags \"${buildTags}\" -checks \"${checks}\" -f \"${format}\" -go \"${minGoVersion}\" ./... | write_output\nelse\n  IFS=$'\\n'\n  $(go env GOPATH)/bin/staticcheck -checks \"${checks}\" -f \"${format}\" -merge ${merge} | write_output\nfi\n[tests/staticcheck  ] exitcode '1': failure\n[tests/staticcheck  ]   \u274c  Failure - Main dominikh/staticcheck-action@v1.3.0\n[tests/staticcheck  ] exitcode '1': failure\n[tests/staticcheck  ] \u2b50 Run Post dominikh/staticcheck-action@v1.3.0\n[tests/staticcheck  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dominikh-staticcheck-action@v1.3.0/ dst=/var/run/act/actions/dominikh-staticcheck-action@v1.3.0/\n[tests/staticcheck  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dominikh-staticcheck-action@v1.3.0/] user=0 workdir=\n[tests/staticcheck  ]   \u2705  Success - Post dominikh/staticcheck-action@v1.3.0\n[tests/staticcheck  ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'code-coverage' failed\n"
}