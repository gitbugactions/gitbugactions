{
    "repository": "looplab/tarjan",
    "clone_url": "https://github.com/looplab/tarjan.git",
    "timestamp": "2023-05-30T10:30:52.791265Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Main/build] \ud83d\ude80  Start image=crawlergpt:latest\n[Main/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Main/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Main/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Main/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/looplab-tarjan] user=0 workdir=\n[Main/build]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[Main/build]   \u2601  git clone 'https://github.com/jandelgado/gcov2lcov-action' # ref=v1.0.5\n[Main/build] \u2b50 Run Pre Convert coverage\n[Main/build]   \u2705  Success - Pre Convert coverage\n[Main/build]   \u2601  git clone 'https://github.com/coverallsapp/github-action' # ref=master\n[Main/build] \u2b50 Run Main actions/checkout@v2\n[Main/build]   \u2705  Success - Main actions/checkout@v2\n[Main/build] \u2b50 Run Main Set up Go\n[Main/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[Main/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[Main/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[Main/build]   | Setup go stable version spec 1.15\n[Main/build]   \ud83d\udcac  ::debug::isExplicit: \n[Main/build]   \ud83d\udcac  ::debug::explicit? false\n[Main/build]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Main/build]   \ud83d\udcac  ::debug::explicit? true\n[Main/build]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Main/build]   \ud83d\udcac  ::debug::explicit? true\n[Main/build]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Main/build]   \ud83d\udcac  ::debug::explicit? true\n[Main/build]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Main/build]   \ud83d\udcac  ::debug::matched: 1.15.15\n[Main/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.15.15/x64\n[Main/build]   \ud83d\udcac  ::debug::Found tool in cache go 1.15.15 x64\n[Main/build]   | Found in cache @ /opt/hostedtoolcache/go/1.15.15/x64\n[Main/build]   | Added go to the path\n[Main/build]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.15.15/x64/bin/go:\n[Main/build]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Main/build]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Main/build]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Main/build]   \ud83d\udcac  ::debug::add bin true\n[Main/build]   | Successfully setup go version 1.15\n[Main/build]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[Main/build]   | go version go1.15.15 linux/amd64\n[Main/build]   | \n[Main/build]   \u2753  ::group::go env\n[Main/build]   | GO111MODULE=\"\"\n[Main/build]   | GOARCH=\"amd64\"\n[Main/build]   | GOBIN=\"\"\n[Main/build]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Main/build]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Main/build]   | GOEXE=\"\"\n[Main/build]   | GOFLAGS=\"\"\n[Main/build]   | GOHOSTARCH=\"amd64\"\n[Main/build]   | GOHOSTOS=\"linux\"\n[Main/build]   | GOINSECURE=\"\"\n[Main/build]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Main/build]   | GONOPROXY=\"\"\n[Main/build]   | GONOSUMDB=\"\"\n[Main/build]   | GOOS=\"linux\"\n[Main/build]   | GOPATH=\"/home/runneradmin/go\"\n[Main/build]   | GOPRIVATE=\"\"\n[Main/build]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Main/build]   | GOROOT=\"/opt/hostedtoolcache/go/1.15.15/x64\"\n[Main/build]   | GOSUMDB=\"sum.golang.org\"\n[Main/build]   | GOTMPDIR=\"\"\n[Main/build]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.15.15/x64/pkg/tool/linux_amd64\"\n[Main/build]   | GCCGO=\"gccgo\"\n[Main/build]   | AR=\"ar\"\n[Main/build]   | CC=\"gcc\"\n[Main/build]   | CXX=\"g++\"\n[Main/build]   | CGO_ENABLED=\"1\"\n[Main/build]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/looplab-tarjan/go.mod\"\n[Main/build]   | CGO_CFLAGS=\"-g -O2\"\n[Main/build]   | CGO_CPPFLAGS=\"\"\n[Main/build]   | CGO_CXXFLAGS=\"-g -O2\"\n[Main/build]   | CGO_FFLAGS=\"-g -O2\"\n[Main/build]   | CGO_LDFLAGS=\"-g -O2\"\n[Main/build]   | PKG_CONFIG=\"pkg-config\"\n[Main/build]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build345473978=/tmp/go-build -gno-record-gcc-switches\"\n[Main/build]   | \n[Main/build]   \u2753  ::endgroup::\n[Main/build]   \u2705  Success - Main Set up Go\n[Main/build]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.15.15/x64\n[Main/build]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.15.15/x64/bin\n[Main/build]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Main/build] \u2b50 Run Main Test\n[Main/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Main/build]   | ok  \tgithub.com/looplab/tarjan\t0.147s\tcoverage: 100.0% of statements\n[Main/build]   \u2705  Success - Main Test\n[Main/build] \u2b50 Run Main Convert coverage\n[Main/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/jandelgado-gcov2lcov-action@v1.0.5/ dst=/var/run/act/actions/jandelgado-gcov2lcov-action@v1.0.5/\n[Main/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/jandelgado-gcov2lcov-action@v1.0.5/] user=0 workdir=\n[Main/build] \u2b50 Run Main Run gcov2lcov\n[Main/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3-composite-0.sh] user= workdir=\n[Main/build]   | ++ mktemp -d -t ci-XXXXXXXXXX\n[Main/build]   | + TMP_BIN=/tmp/ci-hZY9pcjNeL\n[Main/build]   | + NAME=gcov2lcov-linux-amd64\n[Main/build]   | + tar zxf - --strip 1 --directory /tmp/ci-hZY9pcjNeL\n[Main/build]   | + wget https://github.com/jandelgado/gcov2lcov/releases/download/v1.0.4/gcov2lcov-linux-amd64.tar.gz -q -O -\n[Main/build]   | + chmod +x /tmp/ci-hZY9pcjNeL/gcov2lcov-linux-amd64\n[Main/build]   | + cd /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/looplab-tarjan/\n[Main/build]   | + exec /tmp/ci-hZY9pcjNeL/gcov2lcov-linux-amd64 -infile coverage.out -outfile coverage.lcov\n[Main/build]   \u2705  Success - Main Run gcov2lcov\n[Main/build]   \u2705  Success - Main Convert coverage\n[Main/build] \u2b50 Run Main Upload coverage\n[Main/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/coverallsapp-github-action@master/ dst=/var/run/act/actions/coverallsapp-github-action@master/\n[Main/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/coverallsapp-github-action@master/] user=0 workdir=\n[Main/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/coverallsapp-github-action@master/dist/index.js] user= workdir=\n[Main/build]   \u2757  ::error::'github-token' input missing, please include it in your workflow settings 'with' section as 'github-token: ${{ secrets.github_token }}'\n[Main/build]   \u274c  Failure - Main Upload coverage\n[Main/build] exitcode '1': failure\n[Main/build] \u2b50 Run Post Convert coverage\n[Main/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/jandelgado-gcov2lcov-action@v1.0.5/ dst=/var/run/act/actions/jandelgado-gcov2lcov-action@v1.0.5/\n[Main/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/jandelgado-gcov2lcov-action@v1.0.5/] user=0 workdir=\n[Main/build]   \u2705  Success - Post Convert coverage\n[Main/build] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'build' failed\n"
}