{
    "repository": "snowflakedb/gosnowflake",
    "clone_url": "https://github.com/snowflakedb/gosnowflake.git",
    "timestamp": "2023-05-30T11:55:52.600546Z",
    "clone_success": true,
    "number of actions": 8,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Build and Test/AWS Go 1.20 on Mac    ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build and Test/AWS Go 1.20 on Windows] \ud83d\ude80  Start image=crawlergpt:latest\n[Build and Test/AWS Go 1.20 on Ubuntu ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake] user=0 workdir=\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake] user=0 workdir=\n[Build and Test/AWS Go 1.20 on Mac    ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[Build and Test/AWS Go 1.20 on Windows]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[Build and Test/AWS Go 1.20 on Mac    ] \ud83e\uddea  Matrix: map[cloud:AWS go:1.20]\n[Build and Test/AWS Go 1.20 on Mac    ] \u2b50 Run Main actions/checkout@v1\n[Build and Test/AWS Go 1.20 on Windows]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v1\n[Build and Test/AWS Go 1.20 on Mac    ]   \u2705  Success - Main actions/checkout@v1\n[Build and Test/AWS Go 1.20 on Windows] \ud83e\uddea  Matrix: map[cloud:AWS go:1.20]\n[Build and Test/AWS Go 1.20 on Windows] \u2b50 Run Main actions/checkout@v1\n[Build and Test/AWS Go 1.20 on Windows]   \u2705  Success - Main actions/checkout@v1\n[Build and Test/AWS Go 1.20 on Mac    ] \u2b50 Run Main Setup go\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[Build and Test/AWS Go 1.20 on Windows] \u2b50 Run Main Setup go\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake] user=0 workdir=\n[Build and Test/AWS Go 1.20 on Mac    ]   | Setup go stable version spec 1.20\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::isExplicit: \n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::explicit? false\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::explicit? true\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::explicit? true\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::explicit? true\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::match not found\n[Build and Test/AWS Go 1.20 on Mac    ]   | Attempting to download 1.20...\n[Build and Test/AWS Go 1.20 on Windows]   | Setup go stable version spec 1.20\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::isExplicit: \n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::explicit? false\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::explicit? true\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::explicit? true\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::explicit? true\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::match not found\n[Build and Test/AWS Go 1.20 on Windows]   | Attempting to download 1.20...\n[Build and Test/AWS Go 1.20 on Mac    ]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::Error: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v2/dist/index.js:5294:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Build and Test/AWS Go 1.20 on Mac    ]   | Falling back to download directly from Go\n[Build and Test/AWS Go 1.20 on Windows]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::Error: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v2/dist/index.js:5294:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Build and Test/AWS Go 1.20 on Windows]   | Falling back to download directly from Go\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.20\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::matched go1.20.4\n[Build and Test/AWS Go 1.20 on Mac    ]   | Install from dist\n[Build and Test/AWS Go 1.20 on Mac    ]   | Acquiring go1.20.4 from https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::Destination /tmp/e38a3c52-e642-4bae-b7fa-c3812b33685f\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.20\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::matched go1.20.4\n[Build and Test/AWS Go 1.20 on Windows]   | Install from dist\n[Build and Test/AWS Go 1.20 on Windows]   | Acquiring go1.20.4 from https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::Destination /tmp/76111ae5-5c0d-49f1-ba3a-811226d0aaab\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::download complete\n[Build and Test/AWS Go 1.20 on Mac    ]   | Extracting Go...\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::Checking tar --version\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Build and Test/AWS Go 1.20 on Mac    ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/41e8a37c-12a0-401c-bec4-23701d9a09d1 -f /tmp/e38a3c52-e642-4bae-b7fa-c3812b33685f\n[Build and Test/AWS Go 1.20 on Ubuntu ] \ud83e\uddea  Matrix: map[cloud:AWS go:1.20]\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::download complete\n[Build and Test/AWS Go 1.20 on Windows]   | Extracting Go...\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::Checking tar --version\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Build and Test/AWS Go 1.20 on Windows]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/c301209f-ccd0-436b-9bd0-35026f1b611c -f /tmp/76111ae5-5c0d-49f1-ba3a-811226d0aaab\n[Build and Test/AWS Go 1.20 on Ubuntu ] \u2b50 Run Main actions/checkout@v1\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \u2705  Success - Main actions/checkout@v1\n[Build and Test/AWS Go 1.20 on Mac    ]   | Successfully extracted go to /tmp/41e8a37c-12a0-401c-bec4-23701d9a09d1\n[Build and Test/AWS Go 1.20 on Mac    ]   | Adding to the cache ...\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::Caching tool go 1.20.4 x64\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::source dir: /tmp/41e8a37c-12a0-401c-bec4-23701d9a09d1/go\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.4/x64\n[Build and Test/AWS Go 1.20 on Windows]   | Successfully extracted go to /tmp/c301209f-ccd0-436b-9bd0-35026f1b611c\n[Build and Test/AWS Go 1.20 on Windows]   | Adding to the cache ...\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::Caching tool go 1.20.4 x64\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::source dir: /tmp/c301209f-ccd0-436b-9bd0-35026f1b611c/go\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.4/x64\n[Build and Test/AWS Go 1.20 on Ubuntu ] \u2b50 Run Main Setup go\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::finished caching tool\n[Build and Test/AWS Go 1.20 on Mac    ]   | Successfully cached go to /opt/hostedtoolcache/go/1.20.4/x64\n[Build and Test/AWS Go 1.20 on Mac    ]   | Added go to the path\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.20.4/x64/bin/go:\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udcac  ::debug::add bin true\n[Build and Test/AWS Go 1.20 on Mac    ]   | Successfully setup go version 1.20\n[Build and Test/AWS Go 1.20 on Mac    ]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[Build and Test/AWS Go 1.20 on Mac    ]   | go version go1.20.4 linux/amd64\n[Build and Test/AWS Go 1.20 on Mac    ]   | \n[Build and Test/AWS Go 1.20 on Mac    ]   \u2753  ::group::go env\n[Build and Test/AWS Go 1.20 on Mac    ]   | GO111MODULE=\"\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOARCH=\"amd64\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOBIN=\"\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOEXE=\"\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOEXPERIMENT=\"\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOFLAGS=\"\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOHOSTARCH=\"amd64\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOHOSTOS=\"linux\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOINSECURE=\"\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GONOPROXY=\"\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GONOSUMDB=\"\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOOS=\"linux\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOPATH=\"/home/runneradmin/go\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOPRIVATE=\"\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOROOT=\"/opt/hostedtoolcache/go/1.20.4/x64\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOSUMDB=\"sum.golang.org\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOTMPDIR=\"\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.20.4/x64/pkg/tool/linux_amd64\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOVCS=\"\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOVERSION=\"go1.20.4\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GCCGO=\"gccgo\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOAMD64=\"v1\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | AR=\"ar\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | CC=\"gcc\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | CXX=\"g++\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | CGO_ENABLED=\"1\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/go.mod\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOWORK=\"\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | CGO_CFLAGS=\"-O2 -g\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | CGO_CPPFLAGS=\"\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | CGO_CXXFLAGS=\"-O2 -g\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | CGO_FFLAGS=\"-O2 -g\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | CGO_LDFLAGS=\"-O2 -g\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | PKG_CONFIG=\"pkg-config\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build747193090=/tmp/go-build -gno-record-gcc-switches\"\n[Build and Test/AWS Go 1.20 on Mac    ]   | \n[Build and Test/AWS Go 1.20 on Mac    ]   \u2753  ::endgroup::\n[Build and Test/AWS Go 1.20 on Mac    ]   \u2705  Success - Main Setup go\n[Build and Test/AWS Go 1.20 on Mac    ]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.20.4/x64\n[Build and Test/AWS Go 1.20 on Mac    ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.20.4/x64/bin\n[Build and Test/AWS Go 1.20 on Mac    ]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Build and Test/AWS Go 1.20 on Mac    ] \u2b50 Run Main Format, Lint\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::finished caching tool\n[Build and Test/AWS Go 1.20 on Windows]   | Successfully cached go to /opt/hostedtoolcache/go/1.20.4/x64\n[Build and Test/AWS Go 1.20 on Windows]   | Added go to the path\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.20.4/x64/bin/go:\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udcac  ::debug::add bin true\n[Build and Test/AWS Go 1.20 on Windows]   | Successfully setup go version 1.20\n[Build and Test/AWS Go 1.20 on Windows]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[Build and Test/AWS Go 1.20 on Windows]   | go version go1.20.4 linux/amd64\n[Build and Test/AWS Go 1.20 on Windows]   | \n[Build and Test/AWS Go 1.20 on Windows]   \u2753  ::group::go env\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2.sh] user= workdir=\n[Build and Test/AWS Go 1.20 on Windows]   | GO111MODULE=\"\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOARCH=\"amd64\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOBIN=\"\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOEXE=\"\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOEXPERIMENT=\"\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOFLAGS=\"\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOHOSTARCH=\"amd64\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOHOSTOS=\"linux\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOINSECURE=\"\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Build and Test/AWS Go 1.20 on Windows]   | GONOPROXY=\"\"\n[Build and Test/AWS Go 1.20 on Windows]   | GONOSUMDB=\"\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOOS=\"linux\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOPATH=\"/home/runneradmin/go\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOPRIVATE=\"\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOROOT=\"/opt/hostedtoolcache/go/1.20.4/x64\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOSUMDB=\"sum.golang.org\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOTMPDIR=\"\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.20.4/x64/pkg/tool/linux_amd64\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOVCS=\"\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOVERSION=\"go1.20.4\"\n[Build and Test/AWS Go 1.20 on Windows]   | GCCGO=\"gccgo\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOAMD64=\"v1\"\n[Build and Test/AWS Go 1.20 on Windows]   | AR=\"ar\"\n[Build and Test/AWS Go 1.20 on Windows]   | CC=\"gcc\"\n[Build and Test/AWS Go 1.20 on Windows]   | CXX=\"g++\"\n[Build and Test/AWS Go 1.20 on Windows]   | CGO_ENABLED=\"1\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/go.mod\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOWORK=\"\"\n[Build and Test/AWS Go 1.20 on Windows]   | CGO_CFLAGS=\"-O2 -g\"\n[Build and Test/AWS Go 1.20 on Windows]   | CGO_CPPFLAGS=\"\"\n[Build and Test/AWS Go 1.20 on Windows]   | CGO_CXXFLAGS=\"-O2 -g\"\n[Build and Test/AWS Go 1.20 on Windows]   | CGO_FFLAGS=\"-O2 -g\"\n[Build and Test/AWS Go 1.20 on Windows]   | CGO_LDFLAGS=\"-O2 -g\"\n[Build and Test/AWS Go 1.20 on Windows]   | PKG_CONFIG=\"pkg-config\"\n[Build and Test/AWS Go 1.20 on Windows]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build231699261=/tmp/go-build -gno-record-gcc-switches\"\n[Build and Test/AWS Go 1.20 on Windows]   | \n[Build and Test/AWS Go 1.20 on Windows]   \u2753  ::endgroup::\n[Build and Test/AWS Go 1.20 on Windows]   \u2705  Success - Main Setup go\n[Build and Test/AWS Go 1.20 on Windows]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.20.4/x64\n[Build and Test/AWS Go 1.20 on Windows]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.20.4/x64/bin\n[Build and Test/AWS Go 1.20 on Windows]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Build and Test/AWS Go 1.20 on Windows] \u2b50 Run Main Format, Lint\n[Build and Test/AWS Go 1.20 on Windows]   \ud83d\udc33  docker exec cmd=[%ComSpec% /D /E:ON /V:OFF /S /C CALL /var/run/act/workflow/2.cmd] user= workdir=\n[Build and Test/AWS Go 1.20 on Windows]   | OCI runtime exec failed: exec failed: unable to start container process: exec: \"%ComSpec%\": executable file not found in $PATH: unknown\r\n[Build and Test/AWS Go 1.20 on Windows]   \u274c  Failure - Main Format, Lint\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading golang.org/x/lint v0.0.0-20210508222113-6edffad5e616\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading golang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7\n[Build and Test/AWS Go 1.20 on Windows] exitcode '126': failure\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Setup go stable version spec 1.20\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::isExplicit: \n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::explicit? false\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::explicit? true\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::explicit? true\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::explicit? true\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::match not found\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Attempting to download 1.20...\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::Error: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v2/dist/index.js:5294:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Falling back to download directly from Go\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.20\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::matched go1.20.4\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Install from dist\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Acquiring go1.20.4 from https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::Destination /tmp/6e48b6f9-0639-4df8-81a7-f74046955d3b\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/Songmu/make2help v0.2.1\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/mgutz/ansi v0.0.0-20200706080929-d51e80ef957d\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading golang.org/x/xerrors v0.0.0-20220609144429-65e65417b02f\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/mattn/go-colorable v0.1.12\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/mattn/go-isatty v0.0.14\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading golang.org/x/sys v0.0.0-20220712014510-0a85c31ab51e\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::download complete\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Extracting Go...\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::Checking tar --version\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/29372b7b-fb92-4f80-82c5-ef7698dd5bc8 -f /tmp/6e48b6f9-0639-4df8-81a7-f74046955d3b\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Successfully extracted go to /tmp/29372b7b-fb92-4f80-82c5-ef7698dd5bc8\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Adding to the cache ...\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::Caching tool go 1.20.4 x64\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::source dir: /tmp/29372b7b-fb92-4f80-82c5-ef7698dd5bc8/go\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.4/x64\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading honnef.co/go/tools v0.4.3\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading golang.org/x/exp/typeparams v0.0.0-20221208152030-732eee02a75a\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading golang.org/x/tools v0.4.1-0.20221208213631-3f74d914ae6d\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/BurntSushi/toml v1.2.1\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading golang.org/x/sys v0.3.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading golang.org/x/mod v0.7.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/externalbrowser'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/externalbrowser'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/keepalive'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/keepalive'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/keypair'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/keypair'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/logger'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/logger'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: *** No rule to make target 'fmt'.  Stop.\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: *** No rule to make target 'fmt'.  Stop.\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/mfa'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/mfa'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/noconnpool'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/noconnpool'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/oauth'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/oauth'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/select1'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/select1'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/selectmany'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/selectmany'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/showparam'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/showparam'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/verifycert'\n[Build and Test/AWS Go 1.20 on Mac    ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/verifycert'\n[Build and Test/AWS Go 1.20 on Mac    ]   | go mod tidy\t\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/aws/aws-sdk-go-v2/feature/s3/manager v1.11.59\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/aws/aws-sdk-go-v2/service/s3 v1.31.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/aws/smithy-go v1.13.5\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/99designs/keyring v1.2.2\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/Azure/azure-sdk-for-go/sdk/azcore v1.4.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/Azure/azure-sdk-for-go/sdk/storage/azblob v1.0.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/apache/arrow/go/v12 v12.0.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/form3tech-oss/jwt-go v3.2.5+incompatible\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/gabriel-vasile/mimetype v1.4.2\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/pkg/browser v0.0.0-20210911075715-681adbf594b8\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/sirupsen/logrus v1.9.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading golang.org/x/crypto v0.7.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/aws/aws-sdk-go-v2 v1.17.7\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/aws/aws-sdk-go-v2/credentials v1.13.18\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading golang.org/x/sys v0.6.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/99designs/go-keychain v0.0.0-20191008050251-8e49817e8af4\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/gsterjov/go-libsecret v0.0.0-20161001094733-a6f4afe4910c\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/godbus/dbus v0.0.0-20190726142602-4481cbc300e2\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading golang.org/x/term v0.6.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/stretchr/testify v1.8.1\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/dvsekhvalnov/jose2go v1.5.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/mtibben/percent v0.2.1\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/danieljoos/wincred v1.1.2\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/Azure/azure-sdk-for-go/sdk/internal v1.1.2\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading golang.org/x/net v0.8.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/google/go-cmp v0.5.9\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/jmespath/go-jmespath v0.4.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.4.10\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/aws/aws-sdk-go-v2/internal/configsources v1.1.31\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/aws/aws-sdk-go-v2/service/internal/checksum v1.1.26\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/aws/aws-sdk-go-v2/internal/v4a v1.0.23\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.9.25\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.14.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.9.11\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.4.25\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/davecgh/go-spew v1.1.1\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading gopkg.in/yaml.v3 v3.0.1\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/stretchr/objx v0.5.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/pmezard/go-difflib v1.0.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/Azure/azure-sdk-for-go/sdk/azidentity v1.1.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/aws/aws-sdk-go-v2/config v1.18.19\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading gopkg.in/yaml.v2 v2.4.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/dnaeon/go-vcr v1.1.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/kr/pretty v0.3.1\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/aws/aws-sdk-go-v2/service/sts v1.18.7\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/aws/aws-sdk-go-v2/internal/ini v1.3.32\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.13.1\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/aws/aws-sdk-go-v2/service/ssooidc v1.14.6\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/aws/aws-sdk-go-v2/service/sso v1.12.6\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/AzureAD/microsoft-authentication-library-for-go v0.5.1\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/rogpeppe/go-internal v1.9.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/kr/text v0.2.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/jmespath/go-jmespath/internal/testify v1.5.1\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/kylelemons/godebug v1.1.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/google/uuid v1.3.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/golang-jwt/jwt v3.2.1+incompatible\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading golang.org/x/text v0.8.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading golang.org/x/xerrors v0.0.0-20220907171357-04be3eba64a2\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading golang.org/x/exp v0.0.0-20230206171751-46f607a40771\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/google/flatbuffers v23.1.21+incompatible\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/klauspost/compress v1.15.15\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/pierrec/lz4/v4 v4.1.17\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/goccy/go-json v0.10.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading golang.org/x/tools v0.6.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/klauspost/cpuid/v2 v2.2.3\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/zeebo/xxh3 v1.0.2\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading gonum.org/v1/gonum v0.11.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/JohnCGriffin/overflow v0.0.0-20211019200055-46fa312c352c\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading golang.org/x/sync v0.1.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/apache/thrift v0.16.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/andybalholm/brotli v1.0.4\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/klauspost/asmfmt v1.3.2\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/golang/snappy v0.0.4\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/minio/asm2plan9s v0.0.0-20200509001527-cdd76441f9d8\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/minio/c2goasm v0.0.0-20190812172519-36a3d3bbc4f3\n[Build and Test/AWS Go 1.20 on Windows] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/4ad21faf532dcd05934a507502288c50c2466ca68838c6af8433a750289d7c75?force=1&v=1\": context deadline exceeded\n[Build and Test/AWS Go 1.20 on Windows] \ud83c\udfc1  Job failed\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading github.com/zeebo/assert v1.3.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | go: downloading golang.org/x/mod v0.8.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | Running staticcheck\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::finished caching tool\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Successfully cached go to /opt/hostedtoolcache/go/1.20.4/x64\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Added go to the path\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.20.4/x64/bin/go:\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udcac  ::debug::add bin true\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Successfully setup go version 1.20\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go version go1.20.4 linux/amd64\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | \n[Build and Test/AWS Go 1.20 on Ubuntu ]   \u2753  ::group::go env\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GO111MODULE=\"\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOARCH=\"amd64\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOBIN=\"\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOEXE=\"\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOEXPERIMENT=\"\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOFLAGS=\"\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOHOSTARCH=\"amd64\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOHOSTOS=\"linux\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOINSECURE=\"\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GONOPROXY=\"\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GONOSUMDB=\"\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOOS=\"linux\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOPATH=\"/home/runneradmin/go\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOPRIVATE=\"\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOROOT=\"/opt/hostedtoolcache/go/1.20.4/x64\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOSUMDB=\"sum.golang.org\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOTMPDIR=\"\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.20.4/x64/pkg/tool/linux_amd64\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOVCS=\"\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOVERSION=\"go1.20.4\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GCCGO=\"gccgo\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOAMD64=\"v1\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | AR=\"ar\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | CC=\"gcc\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | CXX=\"g++\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | CGO_ENABLED=\"1\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/go.mod\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOWORK=\"\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | CGO_CFLAGS=\"-O2 -g\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | CGO_CPPFLAGS=\"\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | CGO_CXXFLAGS=\"-O2 -g\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | CGO_FFLAGS=\"-O2 -g\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | CGO_LDFLAGS=\"-O2 -g\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | PKG_CONFIG=\"pkg-config\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build1015344017=/tmp/go-build -gno-record-gcc-switches\"\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | \n[Build and Test/AWS Go 1.20 on Ubuntu ]   \u2753  ::endgroup::\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \u2705  Success - Main Setup go\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.20.4/x64\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.20.4/x64/bin\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Build and Test/AWS Go 1.20 on Ubuntu ] \u2b50 Run Main Format, Lint\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2.sh] user= workdir=\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading golang.org/x/lint v0.0.0-20210508222113-6edffad5e616\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading golang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7\n[Build and Test/AWS Go 1.20 on Mac    ]   | Running go vet and lint\n[Build and Test/AWS Go 1.20 on Mac    ]   | Verifying github.com/snowflakedb/gosnowflake\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/Songmu/make2help v0.2.1\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading golang.org/x/xerrors v0.0.0-20220609144429-65e65417b02f\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/mattn/go-isatty v0.0.14\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/mgutz/ansi v0.0.0-20200706080929-d51e80ef957d\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/mattn/go-colorable v0.1.12\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading golang.org/x/sys v0.0.0-20220712014510-0a85c31ab51e\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading honnef.co/go/tools v0.4.3\n[Build and Test/AWS Go 1.20 on Mac    ]   | Verifying github.com/snowflakedb/gosnowflake/benchmark/jsonresultset\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading golang.org/x/tools v0.4.1-0.20221208213631-3f74d914ae6d\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading golang.org/x/exp/typeparams v0.0.0-20221208152030-732eee02a75a\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/BurntSushi/toml v1.2.1\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading golang.org/x/mod v0.7.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading golang.org/x/sys v0.3.0\n[Build and Test/AWS Go 1.20 on Mac    ]   | Verifying github.com/snowflakedb/gosnowflake/benchmark/largesetresult\n[Build and Test/AWS Go 1.20 on Mac    ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/externalbrowser\n[Build and Test/AWS Go 1.20 on Mac    ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/keepalive\n[Build and Test/AWS Go 1.20 on Mac    ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/keypair\n[Build and Test/AWS Go 1.20 on Mac    ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/logger\n[Build and Test/AWS Go 1.20 on Mac    ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/mfa\n[Build and Test/AWS Go 1.20 on Mac    ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/noconnpool\n[Build and Test/AWS Go 1.20 on Mac    ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/oauth\n[Build and Test/AWS Go 1.20 on Mac    ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/select1\n[Build and Test/AWS Go 1.20 on Mac    ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/selectmany\n[Build and Test/AWS Go 1.20 on Mac    ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/showparam\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/externalbrowser'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/externalbrowser'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/keepalive'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/keepalive'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/keypair'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/keypair'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/logger'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/logger'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: *** No rule to make target 'fmt'.  Stop.\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/mfa'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/mfa'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: *** No rule to make target 'fmt'.  Stop.\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/noconnpool'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/noconnpool'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/oauth'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/oauth'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/select1'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/select1'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/selectmany'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/selectmany'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/showparam'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/showparam'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/verifycert'\n[Build and Test/AWS Go 1.20 on Mac    ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/verifycert\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/snowflakedb-gosnowflake/cmd/verifycert'\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go mod tidy\t\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/sirupsen/logrus v1.9.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/Azure/azure-sdk-for-go/sdk/storage/azblob v1.0.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/apache/arrow/go/v12 v12.0.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/aws/aws-sdk-go-v2/credentials v1.13.18\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/gabriel-vasile/mimetype v1.4.2\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/pkg/browser v0.0.0-20210911075715-681adbf594b8\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/form3tech-oss/jwt-go v3.2.5+incompatible\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading golang.org/x/crypto v0.7.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/Azure/azure-sdk-for-go/sdk/azcore v1.4.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/99designs/keyring v1.2.2\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/aws/aws-sdk-go-v2 v1.17.7\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/aws/aws-sdk-go-v2/feature/s3/manager v1.11.59\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/aws/smithy-go v1.13.5\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/aws/aws-sdk-go-v2/service/s3 v1.31.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading golang.org/x/sys v0.6.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/stretchr/testify v1.8.1\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/99designs/go-keychain v0.0.0-20191008050251-8e49817e8af4\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/dvsekhvalnov/jose2go v1.5.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/gsterjov/go-libsecret v0.0.0-20161001094733-a6f4afe4910c\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading golang.org/x/term v0.6.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/mtibben/percent v0.2.1\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/danieljoos/wincred v1.1.2\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/godbus/dbus v0.0.0-20190726142602-4481cbc300e2\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/Azure/azure-sdk-for-go/sdk/internal v1.1.2\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading golang.org/x/net v0.8.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading gopkg.in/yaml.v3 v3.0.1\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/pmezard/go-difflib v1.0.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/davecgh/go-spew v1.1.1\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/stretchr/objx v0.5.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/Azure/azure-sdk-for-go/sdk/azidentity v1.1.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/dnaeon/go-vcr v1.1.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading gopkg.in/yaml.v2 v2.4.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/google/go-cmp v0.5.9\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/aws/aws-sdk-go-v2/config v1.18.19\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/jmespath/go-jmespath v0.4.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/kr/pretty v0.3.1\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/aws/aws-sdk-go-v2/internal/configsources v1.1.31\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.9.25\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.4.10\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/aws/aws-sdk-go-v2/internal/v4a v1.0.23\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.9.11\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.14.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.4.25\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/aws/aws-sdk-go-v2/service/internal/checksum v1.1.26\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/kr/text v0.2.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/rogpeppe/go-internal v1.9.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/aws/aws-sdk-go-v2/service/sso v1.12.6\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/aws/aws-sdk-go-v2/internal/ini v1.3.32\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/aws/aws-sdk-go-v2/service/ssooidc v1.14.6\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/aws/aws-sdk-go-v2/service/sts v1.18.7\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.13.1\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/AzureAD/microsoft-authentication-library-for-go v0.5.1\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/kylelemons/godebug v1.1.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/google/uuid v1.3.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/golang-jwt/jwt v3.2.1+incompatible\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/jmespath/go-jmespath/internal/testify v1.5.1\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading golang.org/x/text v0.8.0\n[Build and Test/AWS Go 1.20 on Mac    ]   \u2705  Success - Main Format, Lint\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/goccy/go-json v0.10.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading golang.org/x/tools v0.6.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/pierrec/lz4/v4 v4.1.17\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/klauspost/compress v1.15.15\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading golang.org/x/xerrors v0.0.0-20220907171357-04be3eba64a2\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading golang.org/x/exp v0.0.0-20230206171751-46f607a40771\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/google/flatbuffers v23.1.21+incompatible\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/klauspost/cpuid/v2 v2.2.3\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/zeebo/xxh3 v1.0.2\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading golang.org/x/sync v0.1.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading gonum.org/v1/gonum v0.11.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/JohnCGriffin/overflow v0.0.0-20211019200055-46fa312c352c\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/klauspost/asmfmt v1.3.2\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/minio/asm2plan9s v0.0.0-20200509001527-cdd76441f9d8\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/minio/c2goasm v0.0.0-20190812172519-36a3d3bbc4f3\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/apache/thrift v0.16.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/andybalholm/brotli v1.0.4\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/golang/snappy v0.0.4\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading github.com/zeebo/assert v1.3.0\n[Build and Test/AWS Go 1.20 on Mac    ] \u2b50 Run Main Test\n[Build and Test/AWS Go 1.20 on Mac    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | go: downloading golang.org/x/mod v0.8.0\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Running staticcheck\n[Build and Test/AWS Go 1.20 on Mac    ]   | gpg: gcry_kdf_derive failed: Invalid data\n[Build and Test/AWS Go 1.20 on Mac    ]   | gpg: decryption failed: No secret key\n[Build and Test/AWS Go 1.20 on Mac    ]   \u274c  Failure - Main Test\n[Build and Test/AWS Go 1.20 on Mac    ] exitcode '2': failure\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Running go vet and lint\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Verifying github.com/snowflakedb/gosnowflake\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Verifying github.com/snowflakedb/gosnowflake/benchmark/jsonresultset\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Verifying github.com/snowflakedb/gosnowflake/benchmark/largesetresult\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/externalbrowser\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/keepalive\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/keypair\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/logger\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/mfa\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/noconnpool\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/oauth\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/select1\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/selectmany\n[Build and Test/AWS Go 1.20 on Mac    ] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/00995a5d02b0e1c71db1bae01f90719cffe9b59a7ed02d704062d61c75440215?force=1&v=1\": context deadline exceeded\n[Build and Test/AWS Go 1.20 on Mac    ] \ud83c\udfc1  Job failed\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/showparam\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | Verifying github.com/snowflakedb/gosnowflake/cmd/verifycert\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \u2705  Success - Main Format, Lint\n[Build and Test/AWS Go 1.20 on Ubuntu ] \u2b50 Run Main Test\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | gpg: gcry_kdf_derive failed: Invalid data\n[Build and Test/AWS Go 1.20 on Ubuntu ]   | gpg: decryption failed: No secret key\n[Build and Test/AWS Go 1.20 on Ubuntu ]   \u274c  Failure - Main Test\n[Build and Test/AWS Go 1.20 on Ubuntu ] exitcode '2': failure\n[Build and Test/AWS Go 1.20 on Ubuntu ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Error occurred running finally: Error occurred running finally: context deadline exceeded (original error: <nil>) (original error: <nil>)\n"
}