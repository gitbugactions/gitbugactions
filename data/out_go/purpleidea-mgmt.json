{
    "repository": "purpleidea/mgmt",
    "clone_url": "https://github.com/purpleidea/mgmt.git",
    "timestamp": "2023-05-30T11:16:28.168094Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18] \ud83d\ude80  Start image=crawlergpt:latest\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/purpleidea-mgmt] user=0 workdir=\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \u2601  git clone 'https://github.com/ruby/setup-ruby' # ref=v1\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18] \ud83e\uddea  Matrix: map[golang_version:1.18 os:ubuntu-latest test_block:basic]\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18] \u2b50 Run Main Clone mgmt\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \u2705  Success - Main Clone mgmt\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18] \u2b50 Run Main Install Go 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | Setup go stable version spec 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::isExplicit: \n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::explicit? false\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::explicit? true\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::explicit? true\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::explicit? true\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::evaluating 3 versions\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::match not found\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | Attempting to download 1.18...\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::Error: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v2/dist/index.js:5294:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | Falling back to download directly from Go\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.20.0-rc3 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.20.0-rc2 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.20.0-rc1 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.19.8 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.19.7 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.19.6 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.19.5 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.19.4 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.19.3 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.19.2 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.19.1 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.19.0 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.19.0-rc2 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.19.0-rc1 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.19.0-beta1 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::check 1.18.10 satisfies 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::matched go1.18.10\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | Install from dist\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | Acquiring go1.18.10 from https://storage.googleapis.com/golang/go1.18.10.linux-amd64.tar.gz\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.18.10.linux-amd64.tar.gz\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::Destination /tmp/576b8e06-5431-4ef2-9496-9c463aa7c92a\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::download complete\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | Extracting Go...\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::Checking tar --version\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/2af10b58-44be-40ee-976b-dbbbbd4c6b6c -f /tmp/576b8e06-5431-4ef2-9496-9c463aa7c92a\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | Successfully extracted go to /tmp/2af10b58-44be-40ee-976b-dbbbbd4c6b6c\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | Adding to the cache ...\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::Caching tool go 1.18.10 x64\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::source dir: /tmp/2af10b58-44be-40ee-976b-dbbbbd4c6b6c/go\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.18.10/x64\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::finished caching tool\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | Successfully cached go to /opt/hostedtoolcache/go/1.18.10/x64\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | Added go to the path\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.18.10/x64/bin/go:\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::go env GOPATH :/home/runner/work/mgmt/mgmt/go:\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::creating /home/runner/work/mgmt/mgmt/go\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::creating /home/runner/work/mgmt/mgmt/go/bin\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udcac  ::debug::add bin true\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | Successfully setup go version 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | go version go1.18.10 linux/amd64\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | \n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \u2753  ::group::go env\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GO111MODULE=\"\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOARCH=\"amd64\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOBIN=\"\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOEXE=\"\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOEXPERIMENT=\"\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOFLAGS=\"\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOHOSTARCH=\"amd64\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOHOSTOS=\"linux\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOINSECURE=\"\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOMODCACHE=\"/home/runner/work/mgmt/mgmt/go/pkg/mod\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GONOPROXY=\"\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GONOSUMDB=\"\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOOS=\"linux\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOPATH=\"/home/runner/work/mgmt/mgmt/go\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOPRIVATE=\"\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOROOT=\"/opt/hostedtoolcache/go/1.18.10/x64\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOSUMDB=\"sum.golang.org\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOTMPDIR=\"\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.18.10/x64/pkg/tool/linux_amd64\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOVCS=\"\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOVERSION=\"go1.18.10\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GCCGO=\"gccgo\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOAMD64=\"v1\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | AR=\"ar\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | CC=\"gcc\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | CXX=\"g++\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | CGO_ENABLED=\"1\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/purpleidea-mgmt/go.mod\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOWORK=\"\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | CGO_CFLAGS=\"-g -O2\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | CGO_CPPFLAGS=\"\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | CGO_CXXFLAGS=\"-g -O2\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | CGO_FFLAGS=\"-g -O2\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | CGO_LDFLAGS=\"-g -O2\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | PKG_CONFIG=\"pkg-config\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build1516582528=/tmp/go-build -gno-record-gcc-switches\"\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | \n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \u2753  ::endgroup::\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | (node:31) UnhandledPromiseRejectionWarning: Error: EACCES: permission denied, mkdir '/home/runner/work/mgmt'\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | (Use `node --trace-warnings ...` to show where the warning was created)\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | (node:31) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 1)\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | (node:31) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | (node:31) UnhandledPromiseRejectionWarning: Error: EACCES: permission denied, mkdir '/home/runner/work/mgmt'\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | (node:31) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \u2705  Success - Main Install Go 1.18\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.18.10/x64\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.18.10/x64/bin\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \u2699  ::add-path:: /home/runner/work/mgmt/mgmt/go/bin\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18] \u2b50 Run Main Install Ruby\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/ruby-setup-ruby@v1/ dst=/var/run/act/actions/ruby-setup-ruby@v1/\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/ruby-setup-ruby@v1/] user=0 workdir=\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/ruby-setup-ruby@v1/dist/index.js] user= workdir=\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | internal/modules/cjs/loader.js:892\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   |   throw err;\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   |   ^\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | \n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | Error: Cannot find module 'node:os'\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | Require stack:\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | - /run/act/actions/ruby-setup-ruby@v1/dist/index.js\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   |     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:889:15)\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   |     at Function.Module._load (internal/modules/cjs/loader.js:745:27)\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   |     at Module.require (internal/modules/cjs/loader.js:961:19)\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   |     at require (internal/modules/cjs/helpers.js:92:18)\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   |     at Module.3143 (/run/act/actions/ruby-setup-ruby@v1/dist/index.js:322:42)\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   |     at __nccwpck_require__ (/run/act/actions/ruby-setup-ruby@v1/dist/index.js:65136:43)\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   |     at /run/act/actions/ruby-setup-ruby@v1/dist/index.js:65194:16\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   |     at /run/act/actions/ruby-setup-ruby@v1/dist/index.js:65381:3\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   |     at Object.<anonymous> (/run/act/actions/ruby-setup-ruby@v1/dist/index.js:65384:12)\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   |     at Module._compile (internal/modules/cjs/loader.js:1072:14) {\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   |   code: 'MODULE_NOT_FOUND',\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   |   requireStack: [ '/run/act/actions/ruby-setup-ruby@v1/dist/index.js' ]\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   | }\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18]   \u274c  Failure - Main Install Ruby\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18] exitcode '1': failure\n[test-crawler.yaml/Test (basic) on ubuntu-latest with golang 1.18] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Test (${{ matrix.test_block }}) on ${{ matrix.os }} with golang ${{ matrix.golang_version }}' failed\n"
}