{
    "repository": "appleboy/drone-git-push",
    "clone_url": "https://github.com/appleboy/drone-git-push.git",
    "timestamp": "2023-05-30T11:10:56.544325Z",
    "clone_success": true,
    "number of actions": 4,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Lint and Testing/lint   ] \ud83d\ude80  Start image=crawlergpt:latest\n[Lint and Testing/testing] \ud83d\ude80  Start image=golang:1.19-alpine\n[Lint and Testing/testing]   \ud83d\udc33  docker pull image=golang:1.19-alpine platform= username= forcePull=false\n[Lint and Testing/lint   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Lint and Testing/lint   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Lint and Testing/testing]   \ud83d\udc33  docker create image=golang:1.19-alpine platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Lint and Testing/testing]   \ud83d\udc33  docker run image=golang:1.19-alpine platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Lint and Testing/lint   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Lint and Testing/testing]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[Lint and Testing/testing] \u2b50 Run Main Checkout repository\n[Lint and Testing/testing]   \u2705  Success - Main Checkout repository\n[Lint and Testing/testing] \u2b50 Run Main add git make command\n[Lint and Testing/lint   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/appleboy-drone-git-push] user=0 workdir=\n[Lint and Testing/testing]   \ud83d\udc33  docker exec cmd=[sh -e /var/run/act/workflow/1.sh] user= workdir=\n[Lint and Testing/testing]   | fetch https://dl-cdn.alpinelinux.org/alpine/v3.18/main/x86_64/APKINDEX.tar.gz\n[Lint and Testing/testing]   | fetch https://dl-cdn.alpinelinux.org/alpine/v3.18/community/x86_64/APKINDEX.tar.gz\n[Lint and Testing/testing]   | (1/43) Installing ncurses-terminfo-base (6.4_p20230506-r0)\n[Lint and Testing/testing]   | (2/43) Installing libncursesw (6.4_p20230506-r0)\n[Lint and Testing/testing]   | (3/43) Installing readline (8.2.1-r1)\n[Lint and Testing/testing]   | (4/43) Installing bash (5.2.15-r5)\n[Lint and Testing/testing]   | Executing bash-5.2.15-r5.post-install\n[Lint and Testing/testing]   | (5/43) Installing libgcc (12.2.1_git20220924-r10)\n[Lint and Testing/testing]   | (6/43) Installing libstdc++ (12.2.1_git20220924-r10)\n[Lint and Testing/testing]   | (7/43) Installing zstd-libs (1.5.5-r4)\n[Lint and Testing/testing]   | (8/43) Installing binutils (2.40-r7)\n[Lint and Testing/testing]   | (9/43) Installing libmagic (5.44-r3)\n[Lint and Testing/testing]   | (10/43) Installing file (5.44-r3)\n[Lint and Testing/testing]   | (11/43) Installing libgomp (12.2.1_git20220924-r10)\n[Lint and Testing/testing]   | (12/43) Installing libatomic (12.2.1_git20220924-r10)\n[Lint and Testing/testing]   | (13/43) Installing gmp (6.2.1-r3)\n[Lint and Testing/testing]   | (14/43) Installing isl26 (0.26-r1)\n[Lint and Testing/testing]   | (15/43) Installing mpfr4 (4.2.0-r3)\n[Lint and Testing/testing]   | (16/43) Installing mpc1 (1.3.1-r1)\n[Lint and Testing/testing]   | (17/43) Installing gcc (12.2.1_git20220924-r10)\n[Lint and Testing/testing]   | (18/43) Installing libstdc++-dev (12.2.1_git20220924-r10)\n[Lint and Testing/testing]   | (19/43) Installing musl-dev (1.2.4-r0)\n[Lint and Testing/testing]   | (20/43) Installing libc-dev (0.7.2-r5)\n[Lint and Testing/testing]   | (21/43) Installing g++ (12.2.1_git20220924-r10)\n[Lint and Testing/testing]   | (22/43) Installing make (4.4.1-r1)\n[Lint and Testing/testing]   | (23/43) Installing fortify-headers (1.1-r3)\n[Lint and Testing/testing]   | (24/43) Installing patch (2.7.6-r10)\n[Lint and Testing/testing]   | (25/43) Installing build-base (0.5-r3)\n[Lint and Testing/testing]   | (26/43) Installing brotli-libs (1.0.9-r14)\n[Lint and Testing/testing]   | (27/43) Installing libunistring (1.1-r1)\n[Lint and Testing/testing]   | (28/43) Installing libidn2 (2.3.4-r1)\n[Lint and Testing/testing]   | (29/43) Installing nghttp2-libs (1.53.0-r0)\n[Lint and Testing/testing]   | (30/43) Installing libcurl (8.1.1-r1)\n[Lint and Testing/testing]   | (31/43) Installing curl (8.1.1-r1)\n[Lint and Testing/testing]   | (32/43) Installing libexpat (2.5.0-r1)\n[Lint and Testing/testing]   | (33/43) Installing pcre2 (10.42-r1)\n[Lint and Testing/testing]   | (34/43) Installing git (2.40.1-r0)\n[Lint and Testing/testing]   | (35/43) Installing libbz2 (1.0.8-r5)\n[Lint and Testing/testing]   | (36/43) Installing perl (5.36.1-r2)\n[Lint and Testing/lint   ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v4\n[Lint and Testing/testing]   | (37/43) Installing perl-error (0.17029-r1)\n[Lint and Testing/testing]   | (38/43) Installing perl-git (2.40.1-r0)\n[Lint and Testing/testing]   | (39/43) Installing git-perl (2.40.1-r0)\n[Lint and Testing/testing]   | (40/43) Installing pkgconf (1.9.5-r0)\n[Lint and Testing/testing]   | (41/43) Installing ucl (1.03-r2)\n[Lint and Testing/testing]   | (42/43) Installing ucl-dev (1.03-r2)\n[Lint and Testing/testing]   | (43/43) Installing zlib-dev (1.2.13-r1)\n[Lint and Testing/testing]   | Executing busybox-1.36.0-r9.trigger\n[Lint and Testing/testing]   | OK: 295 MiB in 59 packages\n[Lint and Testing/testing]   \u2705  Success - Main add git make command\n[Lint and Testing/lint   ]   \u2601  git clone 'https://github.com/golangci/golangci-lint-action' # ref=v3\n[Lint and Testing/lint   ]   \u2601  git clone 'https://github.com/hadolint/hadolint-action' # ref=v3.1.0\n[Lint and Testing/lint   ] \u2b50 Run Main Setup go\n[Lint and Testing/lint   ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v4/ dst=/var/run/act/actions/actions-setup-go@v4/\n[Lint and Testing/lint   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v4/] user=0 workdir=\n[Lint and Testing/testing] \u2b50 Run Main testing\n[Lint and Testing/testing]   \ud83d\udc33  docker exec cmd=[sh -e /var/run/act/workflow/2.sh] user= workdir=\n[Lint and Testing/testing]   | Reinitialized existing Git repository in /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/appleboy-drone-git-push/.git/\n[Lint and Testing/lint   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v4/dist/setup/index.js] user= workdir=\n[Lint and Testing/testing]   | go: downloading github.com/urfave/cli/v2 v2.25.3\n[Lint and Testing/testing]   | go: downloading github.com/joho/godotenv v1.5.1\n[Lint and Testing/testing]   | go: downloading github.com/appleboy/com v0.1.7\n[Lint and Testing/testing]   | go: downloading github.com/xrash/smetrics v0.0.0-20201216005158-039620a65673\n[Lint and Testing/testing]   | go: downloading github.com/cpuguy83/go-md2man/v2 v2.0.2\n[Lint and Testing/testing]   | go: downloading github.com/russross/blackfriday/v2 v2.1.0\n[Lint and Testing/lint   ]   | Setup go version spec ^1\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::isExplicit: \n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::explicit? false\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::explicit? true\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::explicit? true\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::explicit? true\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::matched: 1.16.7\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.16.7/x64\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::Found tool in cache go 1.16.7 x64\n[Lint and Testing/lint   ]   | Found in cache @ /opt/hostedtoolcache/go/1.16.7/x64\n[Lint and Testing/lint   ]   | Added go to the path\n[Lint and Testing/lint   ]   | Successfully set up Go version ^1\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.16.7/x64/bin/go:\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::add bin true\n[Lint and Testing/lint   ]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[Lint and Testing/lint   ]   \u2753 add-matcher /run/act/actions/actions-setup-go@v4/matchers.json\n[Lint and Testing/lint   ]   | go version go1.16.7 linux/amd64\n[Lint and Testing/lint   ]   | \n[Lint and Testing/lint   ]   \u2753  ::group::go env\n[Lint and Testing/lint   ]   | GO111MODULE=\"\"\n[Lint and Testing/lint   ]   | GOARCH=\"amd64\"\n[Lint and Testing/lint   ]   | GOBIN=\"\"\n[Lint and Testing/lint   ]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Lint and Testing/lint   ]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Lint and Testing/lint   ]   | GOEXE=\"\"\n[Lint and Testing/lint   ]   | GOFLAGS=\"\"\n[Lint and Testing/lint   ]   | GOHOSTARCH=\"amd64\"\n[Lint and Testing/lint   ]   | GOHOSTOS=\"linux\"\n[Lint and Testing/lint   ]   | GOINSECURE=\"\"\n[Lint and Testing/lint   ]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Lint and Testing/lint   ]   | GONOPROXY=\"\"\n[Lint and Testing/lint   ]   | GONOSUMDB=\"\"\n[Lint and Testing/lint   ]   | GOOS=\"linux\"\n[Lint and Testing/lint   ]   | GOPATH=\"/home/runneradmin/go\"\n[Lint and Testing/lint   ]   | GOPRIVATE=\"\"\n[Lint and Testing/lint   ]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Lint and Testing/lint   ]   | GOROOT=\"/opt/hostedtoolcache/go/1.16.7/x64\"\n[Lint and Testing/lint   ]   | GOSUMDB=\"sum.golang.org\"\n[Lint and Testing/lint   ]   | GOTMPDIR=\"\"\n[Lint and Testing/lint   ]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.16.7/x64/pkg/tool/linux_amd64\"\n[Lint and Testing/lint   ]   | GOVCS=\"\"\n[Lint and Testing/lint   ]   | GOVERSION=\"go1.16.7\"\n[Lint and Testing/lint   ]   | GCCGO=\"gccgo\"\n[Lint and Testing/lint   ]   | AR=\"ar\"\n[Lint and Testing/lint   ]   | CC=\"gcc\"\n[Lint and Testing/lint   ]   | CXX=\"g++\"\n[Lint and Testing/lint   ]   | CGO_ENABLED=\"1\"\n[Lint and Testing/lint   ]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/appleboy-drone-git-push/go.mod\"\n[Lint and Testing/lint   ]   | CGO_CFLAGS=\"-g -O2\"\n[Lint and Testing/lint   ]   | CGO_CPPFLAGS=\"\"\n[Lint and Testing/lint   ]   | CGO_CXXFLAGS=\"-g -O2\"\n[Lint and Testing/lint   ]   | CGO_FFLAGS=\"-g -O2\"\n[Lint and Testing/lint   ]   | CGO_LDFLAGS=\"-g -O2\"\n[Lint and Testing/lint   ]   | PKG_CONFIG=\"pkg-config\"\n[Lint and Testing/lint   ]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build3934639411=/tmp/go-build -gno-record-gcc-switches\"\n[Lint and Testing/lint   ]   | \n[Lint and Testing/lint   ]   \u2753  ::endgroup::\n[Lint and Testing/lint   ]   \u2705  Success - Main Setup go\n[Lint and Testing/lint   ]   \u2699  ::set-output:: go-version=1.16.7\n[Lint and Testing/lint   ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.16.7/x64/bin\n[Lint and Testing/lint   ]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Lint and Testing/lint   ] \u2b50 Run Main Checkout repository\n[Lint and Testing/lint   ]   \u2705  Success - Main Checkout repository\n[Lint and Testing/testing]   | === RUN   TestPlugin_HandleRemote\n[Lint and Testing/testing]   | === RUN   TestPlugin_HandleRemote/vaild_git_URL\n[Lint and Testing/testing]   | + git remote add deploy git@github.com:appleboy/drone-git-push.git\n[Lint and Testing/testing]   | fatal: detected dubious ownership in repository at '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/appleboy-drone-git-push'\n[Lint and Testing/testing]   | To add an exception for this directory, call:\n[Lint and Testing/testing]   | \n[Lint and Testing/testing]   | \tgit config --global --add safe.directory /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/appleboy-drone-git-push\n[Lint and Testing/testing]   |     plugin_test.go:35: Plugin.HandleRemote() error = exit status 128, wantErr false\n[Lint and Testing/testing]   | --- FAIL: TestPlugin_HandleRemote (0.04s)\n[Lint and Testing/testing]   |     --- FAIL: TestPlugin_HandleRemote/vaild_git_URL (0.04s)\n[Lint and Testing/testing]   | FAIL\n[Lint and Testing/testing]   | coverage: 9.0% of statements\n[Lint and Testing/testing]   | FAIL\tgithub.com/appleboy/drone-git-push\t0.146s\n[Lint and Testing/testing]   | === RUN   TestWriteToken\n[Lint and Testing/testing]   | === RUN   TestWriteToken/don't_support_git_protocol\n[Lint and Testing/testing]   | === RUN   TestWriteToken/missing_token\n[Lint and Testing/testing]   | === RUN   TestWriteToken/add_token\n[Lint and Testing/testing]   | --- PASS: TestWriteToken (0.00s)\n[Lint and Testing/testing]   |     --- PASS: TestWriteToken/don't_support_git_protocol (0.00s)\n[Lint and Testing/testing]   |     --- PASS: TestWriteToken/missing_token (0.00s)\n[Lint and Testing/testing]   |     --- PASS: TestWriteToken/add_token (0.00s)\n[Lint and Testing/testing]   | PASS\n[Lint and Testing/testing]   | coverage: 10.0% of statements\n[Lint and Testing/testing]   | ok  \tgithub.com/appleboy/drone-git-push/repo\t0.156s\tcoverage: 10.0% of statements\n[Lint and Testing/testing]   | FAIL\n[Lint and Testing/testing]   | make: *** [Makefile:43: test] Error 1\n[Lint and Testing/testing]   \u274c  Failure - Main testing\n[Lint and Testing/lint   ] \u2b50 Run Main Setup golangci-lint\n[Lint and Testing/testing] exitcode '2': failure\n[Lint and Testing/lint   ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/golangci-golangci-lint-action@v3/ dst=/var/run/act/actions/golangci-golangci-lint-action@v3/\n[Lint and Testing/lint   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/golangci-golangci-lint-action@v3/] user=0 workdir=\n[Lint and Testing/testing] \ud83c\udfc1  Job failed\n[Lint and Testing/lint   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/golangci-golangci-lint-action@v3/dist/run/index.js] user= workdir=\n[Lint and Testing/lint   ]   \u2753  ::group::prepare environment\n[Lint and Testing/lint   ]   | Checking for go.mod: go.mod\n[Lint and Testing/lint   ]   | Finding needed golangci-lint version...\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::Resolved Keys:\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::[\"golangci-lint.cache-2786-85e18ef034a25f98e1f14467841396dc417413f2\",\"golangci-lint.cache-2786-\"]\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::Checking zstd --version\n[Lint and Testing/lint   ]   | Requested golangci-lint 'latest', using 'v1.52.2', calculation took 102ms\n[Lint and Testing/lint   ]   | Installing golangci-lint v1.52.2...\n[Lint and Testing/lint   ]   | Downloading https://github.com/golangci/golangci-lint/releases/download/v1.52.2/golangci-lint-1.52.2-linux-amd64.tar.gz ...\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::Downloading https://github.com/golangci/golangci-lint/releases/download/v1.52.2/golangci-lint-1.52.2-linux-amd64.tar.gz\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::Destination /tmp/6b4713e5-1b05-4923-a2ce-e5d2d6fbc479\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::download complete\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::Checking tar --version\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Lint and Testing/lint   ]   | [command]/usr/bin/tar xz --overwrite --warning=no-unknown-keyword --overwrite -C /home/runneradmin -f /tmp/6b4713e5-1b05-4923-a2ce-e5d2d6fbc479\n[Lint and Testing/lint   ]   | Installed golangci-lint into /home/runneradmin/golangci-lint-1.52.2-linux-amd64/golangci-lint in 1419ms\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Lint and Testing/lint   ]   \ud83d\udea7  ::warning::Failed to restore: getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[Lint and Testing/lint   ]   | Cache not found for input keys: golangci-lint.cache-2786-85e18ef034a25f98e1f14467841396dc417413f2, golangci-lint.cache-2786-\n[Lint and Testing/lint   ]   | Prepared env in 10339ms\n[Lint and Testing/lint   ]   \u2753  ::endgroup::\n[Lint and Testing/lint   ]   \u2753  ::group::run golangci-lint\n[Lint and Testing/lint   ]   | Running [/home/runneradmin/golangci-lint-1.52.2-linux-amd64/golangci-lint run --out-format=github-actions --verbose] in [] ...\n[Lint and Testing/lint   ]   | level=info msg=\"[config_reader] Config search paths: [./ /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/appleboy-drone-git-push /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11 /tmp / /home/runneradmin]\"\n[Lint and Testing/lint   ]   | level=info msg=\"[lintersdb] Active 7 linters: [errcheck gosimple govet ineffassign staticcheck typecheck unused]\"\n[Lint and Testing/lint   ]   | level=info msg=\"[loader] Go packages loading at mode 575 (compiled_files|imports|types_sizes|deps|exports_file|files|name) took 125.379652ms\"\n[Lint and Testing/lint   ]   | level=error msg=\"Running error: context loading failed: failed to load packages: failed to load with go/packages: err: exit status 1: stderr: go: github.com/urfave/cli/v2@v2.25.3 requires\\n\\tgithub.com/BurntSushi/toml@v1.2.1: missing go.sum entry; to add it:\\n\\tgo mod download github.com/BurntSushi/toml\\n\"\n[Lint and Testing/lint   ]   | level=info msg=\"Memory: 3 samples, avg is 30.9MB, max is 30.9MB\"\n[Lint and Testing/lint   ]   | level=info msg=\"Execution took 156.131651ms\"\n[Lint and Testing/lint   ]   | \n[Lint and Testing/lint   ]   \u2757  ::error::golangci-lint exit with code 3\n[Lint and Testing/lint   ]   | Ran golangci-lint in 1195ms\n[Lint and Testing/lint   ]   \u2753  ::endgroup::\n[Lint and Testing/lint   ]   \u274c  Failure - Main Setup golangci-lint\n[Lint and Testing/lint   ]   \u2699  ::set-env:: MSYS=winsymlinks:nativestrict\n[Lint and Testing/lint   ]   \u2699  ::add-path:: /home/runneradmin/golangci-lint-1.52.2-linux-amd64\n[Lint and Testing/lint   ] exitcode '1': failure\n[Lint and Testing/lint   ] \u2b50 Run Post Setup golangci-lint\n[Lint and Testing/lint   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/golangci-golangci-lint-action@v3/dist/post_run/index.js] user= workdir=\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::Checking zstd --version\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.cache/golangci-lint'\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.cache/go-build'\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/go/pkg'\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/.cache/golangci-lint\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/.cache/go-build\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/go/pkg\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::Cache Paths:\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::[\"../../../home/runneradmin/.cache/golangci-lint\",\"../../../home/runneradmin/.cache/go-build\",\"../../../home/runneradmin/go/pkg\"]\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::Archive Path: /tmp/08671f84-eeb5-4d93-82ce-582ff21de852/cache.tzst\n[Lint and Testing/lint   ]   | [command]/usr/bin/tar --posix -cf cache.tzst --exclude cache.tzst -P -C /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/appleboy-drone-git-push --files-from manifest.txt --use-compress-program zstdmt\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::File Size: 11004\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::Reserving Cache\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::reserveCache - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Lint and Testing/lint   ]   \ud83d\udcac  ::debug::reserveCache - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Lint and Testing/lint   ]   \ud83d\udea7  ::warning::Failed to save: reserveCache failed: Cache Service Url not found, unable to restore cache.\n[Lint and Testing/lint   ]   | Saved cache for golangci-lint from paths '/home/runneradmin/.cache/golangci-lint, /home/runneradmin/.cache/go-build, /home/runneradmin/go/pkg, zstd-without-long, 1.0' in 10338ms\n[Lint and Testing/lint   ]   \u2705  Success - Post Setup golangci-lint\n[Lint and Testing/lint   ]   \u2699  ::set-env:: MSYS=winsymlinks:nativestrict\n[Lint and Testing/lint   ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'lint' failed\n"
}