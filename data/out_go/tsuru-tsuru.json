{
    "repository": "tsuru/tsuru",
    "clone_url": "https://github.com/tsuru/tsuru.git",
    "timestamp": "2023-05-30T10:26:12.442274Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[ci/check-events      ] \ud83d\ude80  Start image=crawlergpt:latest\n[ci/verify-codegen    ] \ud83d\ude80  Start image=crawlergpt:latest\n[ci/check-handlers    ] \ud83d\ude80  Start image=crawlergpt:latest\n[ci/validate-api-spec ] \ud83d\ude80  Start image=crawlergpt:latest\n[ci/test              ] \ud83d\ude80  Start image=crawlergpt:latest\n[ci/check-api-doc     ] \ud83d\ude80  Start image=crawlergpt:latest\n[ci/leakdetector      ] \ud83d\ude80  Start image=crawlergpt:latest\n[ci/check-contributors] \ud83d\ude80  Start image=crawlergpt:latest\n[ci/lint              ] \ud83d\ude80  Start image=crawlergpt:latest\n[ci/validate-api-spec ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci/test              ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci/check-events      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci/check-api-doc     ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci/leakdetector      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci/verify-codegen    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci/check-contributors]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci/lint              ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci/check-handlers    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci/test              ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/validate-api-spec ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/check-api-doc     ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/check-events      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/check-contributors]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/check-handlers    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/verify-codegen    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/leakdetector      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/lint              ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/check-handlers    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/test              ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/check-contributors]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/check-api-doc     ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/check-events      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/lint              ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/leakdetector      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/validate-api-spec ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/verify-codegen    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/validate-api-spec ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru] user=0 workdir=\n[ci/check-handlers    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru] user=0 workdir=\n[ci/test              ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru] user=0 workdir=\n[ci/validate-api-spec ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[ci/check-handlers    ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[ci/test              ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[ci/validate-api-spec ] \u2b50 Run Main actions/setup-go@v2\n[ci/check-handlers    ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[ci/validate-api-spec ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[ci/test              ] Unable to reset to bfdd3570ce990073878bf10f6b2d79082de49492: EOF\n[ci/validate-api-spec ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[ci/check-handlers    ] \u2b50 Run Main actions/setup-go@v2\n[ci/check-handlers    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[ci/check-handlers    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[ci/validate-api-spec ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[ci/test              ] \ud83c\udfc1  Job succeeded\n[ci/check-handlers    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[ci/check-api-doc     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru] user=0 workdir=\n[ci/validate-api-spec ]   | Setup go stable version spec 1.19\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::isExplicit: \n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::explicit? false\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::explicit? true\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::explicit? true\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::explicit? true\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::match not found\n[ci/validate-api-spec ]   | Attempting to download 1.19...\n[ci/validate-api-spec ]   | matching 1.19...\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.19\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.19\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.19\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.19\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.19\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.19\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::matched 1.19.9\n[ci/validate-api-spec ]   | Acquiring 1.19.9 from https://github.com/actions/go-versions/releases/download/1.19.9-4868897838/go-1.19.9-linux-x64.tar.gz\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/go-versions/releases/download/1.19.9-4868897838/go-1.19.9-linux-x64.tar.gz\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::Destination /tmp/ffa6f23c-8f39-4cd6-b725-fe4e4b44325c\n[ci/check-events      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru] user=0 workdir=\n[ci/check-handlers    ]   | Setup go stable version spec 1.19\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::isExplicit: \n[ci/check-handlers    ]   \ud83d\udcac  ::debug::explicit? false\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::explicit? true\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::explicit? true\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::explicit? true\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::match not found\n[ci/check-handlers    ]   | Attempting to download 1.19...\n[ci/leakdetector      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru] user=0 workdir=\n[ci/check-contributors]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru] user=0 workdir=\n[ci/verify-codegen    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru] user=0 workdir=\n[ci/check-handlers    ]   | matching 1.19...\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.19\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.19\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.19\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.19\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.19\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.19\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::matched 1.19.9\n[ci/check-handlers    ]   | Acquiring 1.19.9 from https://github.com/actions/go-versions/releases/download/1.19.9-4868897838/go-1.19.9-linux-x64.tar.gz\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/go-versions/releases/download/1.19.9-4868897838/go-1.19.9-linux-x64.tar.gz\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::Destination /tmp/a633f0bd-157b-4242-a326-04e078f48424\n[ci/lint              ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru] user=0 workdir=\n[ci/check-events      ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[ci/check-api-doc     ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[ci/leakdetector      ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[ci/lint              ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v3\n[ci/check-contributors] \u2b50 Run Main actions/checkout@v2\n[ci/check-events      ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[ci/verify-codegen    ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[ci/check-contributors]   \u2705  Success - Main actions/checkout@v2\n[ci/check-api-doc     ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[ci/leakdetector      ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[ci/lint              ]   \u2601  git clone 'https://github.com/golangci/golangci-lint-action' # ref=v3\n[ci/check-contributors] \u2b50 Run Main ./misc/check-contributors.sh\n[ci/check-events      ] \u2b50 Run Main actions/setup-go@v2\n[ci/verify-codegen    ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[ci/check-events      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[ci/check-contributors]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[ci/check-api-doc     ] \u2b50 Run Main actions/setup-go@v2\n[ci/check-events      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[ci/check-api-doc     ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[ci/leakdetector      ] \u2b50 Run Main actions/setup-go@v2\n[ci/leakdetector      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[ci/check-api-doc     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[ci/leakdetector      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[ci/lint              ] \u2b50 Run Main actions/setup-go@v3\n[ci/lint              ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v3/ dst=/var/run/act/actions/actions-setup-go@v3/\n[ci/verify-codegen    ] \u2b50 Run Main actions/setup-go@v2\n[ci/lint              ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v3/] user=0 workdir=\n[ci/verify-codegen    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[ci/verify-codegen    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::download complete\n[ci/validate-api-spec ]   | Extracting Go...\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::Checking tar --version\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[ci/validate-api-spec ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/55ca5631-02a1-4df1-8c8d-526ff6f6725f -f /tmp/ffa6f23c-8f39-4cd6-b725-fe4e4b44325c\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::download complete\n[ci/check-handlers    ]   | Extracting Go...\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::Checking tar --version\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[ci/check-handlers    ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/369f13ea-04db-4ddb-80d7-8e3008734855 -f /tmp/a633f0bd-157b-4242-a326-04e078f48424\n[ci/validate-api-spec ]   | Successfully extracted go to /tmp/55ca5631-02a1-4df1-8c8d-526ff6f6725f\n[ci/validate-api-spec ]   | Adding to the cache ...\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::Caching tool go 1.19.9 x64\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::source dir: /tmp/55ca5631-02a1-4df1-8c8d-526ff6f6725f\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.19.9/x64\n[ci/check-handlers    ]   | Successfully extracted go to /tmp/369f13ea-04db-4ddb-80d7-8e3008734855\n[ci/check-handlers    ]   | Adding to the cache ...\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::Caching tool go 1.19.9 x64\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::source dir: /tmp/369f13ea-04db-4ddb-80d7-8e3008734855\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.19.9/x64\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::finished caching tool\n[ci/validate-api-spec ]   | Successfully cached go to /opt/hostedtoolcache/go/1.19.9/x64\n[ci/validate-api-spec ]   | Added go to the path\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.19.9/x64/bin/go:\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[ci/validate-api-spec ]   \ud83d\udcac  ::debug::add bin true\n[ci/validate-api-spec ]   | Successfully setup go version 1.19\n[ci/validate-api-spec ]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[ci/validate-api-spec ]   | go version go1.19.9 linux/amd64\n[ci/validate-api-spec ]   | \n[ci/validate-api-spec ]   \u2753  ::group::go env\n[ci/validate-api-spec ]   | GO111MODULE=\"\"\n[ci/validate-api-spec ]   | GOARCH=\"amd64\"\n[ci/validate-api-spec ]   | GOBIN=\"\"\n[ci/validate-api-spec ]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[ci/validate-api-spec ]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[ci/validate-api-spec ]   | GOEXE=\"\"\n[ci/validate-api-spec ]   | GOEXPERIMENT=\"\"\n[ci/validate-api-spec ]   | GOFLAGS=\"\"\n[ci/validate-api-spec ]   | GOHOSTARCH=\"amd64\"\n[ci/validate-api-spec ]   | GOHOSTOS=\"linux\"\n[ci/validate-api-spec ]   | GOINSECURE=\"\"\n[ci/validate-api-spec ]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[ci/validate-api-spec ]   | GONOPROXY=\"\"\n[ci/validate-api-spec ]   | GONOSUMDB=\"\"\n[ci/validate-api-spec ]   | GOOS=\"linux\"\n[ci/validate-api-spec ]   | GOPATH=\"/home/runneradmin/go\"\n[ci/validate-api-spec ]   | GOPRIVATE=\"\"\n[ci/validate-api-spec ]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[ci/validate-api-spec ]   | GOROOT=\"/opt/hostedtoolcache/go/1.19.9/x64\"\n[ci/validate-api-spec ]   | GOSUMDB=\"sum.golang.org\"\n[ci/validate-api-spec ]   | GOTMPDIR=\"\"\n[ci/validate-api-spec ]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.19.9/x64/pkg/tool/linux_amd64\"\n[ci/validate-api-spec ]   | GOVCS=\"\"\n[ci/validate-api-spec ]   | GOVERSION=\"go1.19.9\"\n[ci/validate-api-spec ]   | GCCGO=\"gccgo\"\n[ci/validate-api-spec ]   | GOAMD64=\"v1\"\n[ci/validate-api-spec ]   | AR=\"ar\"\n[ci/validate-api-spec ]   | CC=\"gcc\"\n[ci/validate-api-spec ]   | CXX=\"g++\"\n[ci/validate-api-spec ]   | CGO_ENABLED=\"1\"\n[ci/validate-api-spec ]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/go.mod\"\n[ci/validate-api-spec ]   | GOWORK=\"\"\n[ci/validate-api-spec ]   | CGO_CFLAGS=\"-g -O2\"\n[ci/validate-api-spec ]   | CGO_CPPFLAGS=\"\"\n[ci/validate-api-spec ]   | CGO_CXXFLAGS=\"-g -O2\"\n[ci/validate-api-spec ]   | CGO_FFLAGS=\"-g -O2\"\n[ci/validate-api-spec ]   | CGO_LDFLAGS=\"-g -O2\"\n[ci/validate-api-spec ]   | PKG_CONFIG=\"pkg-config\"\n[ci/validate-api-spec ]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2396158923=/tmp/go-build -gno-record-gcc-switches\"\n[ci/validate-api-spec ]   | \n[ci/validate-api-spec ]   \u2753  ::endgroup::\n[ci/validate-api-spec ]   \u2705  Success - Main actions/setup-go@v2\n[ci/validate-api-spec ]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.19.9/x64\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::finished caching tool\n[ci/check-handlers    ]   | Successfully cached go to /opt/hostedtoolcache/go/1.19.9/x64\n[ci/check-handlers    ]   | Added go to the path\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.19.9/x64/bin/go:\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::add bin true\n[ci/check-handlers    ]   | Successfully setup go version 1.19\n[ci/check-handlers    ]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[ci/check-handlers    ]   | go version go1.19.9 linux/amd64\n[ci/check-handlers    ]   | \n[ci/check-handlers    ]   \u2753  ::group::go env\n[ci/validate-api-spec ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.19.9/x64/bin\n[ci/validate-api-spec ]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[ci/check-handlers    ]   | GO111MODULE=\"\"\n[ci/check-handlers    ]   | GOARCH=\"amd64\"\n[ci/check-handlers    ]   | GOBIN=\"\"\n[ci/check-handlers    ]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[ci/check-handlers    ]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[ci/check-handlers    ]   | GOEXE=\"\"\n[ci/check-handlers    ]   | GOEXPERIMENT=\"\"\n[ci/check-handlers    ]   | GOFLAGS=\"\"\n[ci/check-handlers    ]   | GOHOSTARCH=\"amd64\"\n[ci/check-handlers    ]   | GOHOSTOS=\"linux\"\n[ci/check-handlers    ]   | GOINSECURE=\"\"\n[ci/check-handlers    ]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[ci/check-handlers    ]   | GONOPROXY=\"\"\n[ci/check-handlers    ]   | GONOSUMDB=\"\"\n[ci/check-handlers    ]   | GOOS=\"linux\"\n[ci/check-handlers    ]   | GOPATH=\"/home/runneradmin/go\"\n[ci/check-handlers    ]   | GOPRIVATE=\"\"\n[ci/check-handlers    ]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[ci/check-handlers    ]   | GOROOT=\"/opt/hostedtoolcache/go/1.19.9/x64\"\n[ci/check-handlers    ]   | GOSUMDB=\"sum.golang.org\"\n[ci/check-handlers    ]   | GOTMPDIR=\"\"\n[ci/check-handlers    ]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.19.9/x64/pkg/tool/linux_amd64\"\n[ci/check-handlers    ]   | GOVCS=\"\"\n[ci/check-handlers    ]   | GOVERSION=\"go1.19.9\"\n[ci/check-handlers    ]   | GCCGO=\"gccgo\"\n[ci/check-handlers    ]   | GOAMD64=\"v1\"\n[ci/check-handlers    ]   | AR=\"ar\"\n[ci/check-handlers    ]   | CC=\"gcc\"\n[ci/check-handlers    ]   | CXX=\"g++\"\n[ci/check-handlers    ]   | CGO_ENABLED=\"1\"\n[ci/check-handlers    ]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/go.mod\"\n[ci/check-handlers    ]   | GOWORK=\"\"\n[ci/check-handlers    ]   | CGO_CFLAGS=\"-g -O2\"\n[ci/check-handlers    ]   | CGO_CPPFLAGS=\"\"\n[ci/check-handlers    ]   | CGO_CXXFLAGS=\"-g -O2\"\n[ci/check-handlers    ]   | CGO_FFLAGS=\"-g -O2\"\n[ci/check-handlers    ]   | CGO_LDFLAGS=\"-g -O2\"\n[ci/check-handlers    ]   | PKG_CONFIG=\"pkg-config\"\n[ci/check-handlers    ]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build508835798=/tmp/go-build -gno-record-gcc-switches\"\n[ci/check-handlers    ]   | \n[ci/check-handlers    ]   \u2753  ::endgroup::\n[ci/validate-api-spec ] \u2b50 Run Main actions/checkout@v2\n[ci/check-handlers    ]   \u2705  Success - Main actions/setup-go@v2\n[ci/check-handlers    ]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.19.9/x64\n[ci/validate-api-spec ]   \u2705  Success - Main actions/checkout@v2\n[ci/check-handlers    ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.19.9/x64/bin\n[ci/check-handlers    ]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[ci/check-handlers    ] \u2b50 Run Main actions/checkout@v2\n[ci/check-handlers    ]   \u2705  Success - Main actions/checkout@v2\n[ci/validate-api-spec ] \u2b50 Run Main make validate-api-spec\n[ci/validate-api-spec ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[ci/check-handlers    ] \u2b50 Run Main actions/cache@v2\n[ci/check-handlers    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[ci/check-handlers    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[ci/lint              ]   | OCI runtime exec failed: exec failed: unable to start container process: error executing setns process: exit status 1: unknown\r\n[ci/lint              ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/setup/index.js] user= workdir=\n[ci/check-events      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[ci/verify-codegen    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[ci/check-api-doc     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[ci/leakdetector      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[ci/check-handlers    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[ci/validate-api-spec ]   | go: downloading github.com/go-swagger/go-swagger v0.30.3\n[ci/leakdetector      ]   | Setup go stable version spec 1.19\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::isExplicit: \n[ci/leakdetector      ]   \ud83d\udcac  ::debug::explicit? false\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::explicit? true\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::explicit? true\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::explicit? true\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[ci/check-api-doc     ]   | Setup go stable version spec 1.19\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::isExplicit: \n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::explicit? false\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::explicit? true\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::explicit? true\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::match not found\n[ci/leakdetector      ]   | Attempting to download 1.19...\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::explicit? true\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[ci/check-events      ]   | Setup go stable version spec 1.19\n[ci/validate-api-spec ]   | go: downloading github.com/jessevdk/go-flags v1.5.0\n[ci/validate-api-spec ]   | go: downloading github.com/go-openapi/validate v0.22.0\n[ci/validate-api-spec ]   | go: downloading github.com/go-openapi/loads v0.21.2\n[ci/verify-codegen    ]   | Setup go stable version spec 1.19\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::match not found\n[ci/check-api-doc     ]   | Attempting to download 1.19...\n[ci/check-events      ]   \ud83d\udcac  ::debug::isExplicit: \n[ci/check-events      ]   \ud83d\udcac  ::debug::explicit? false\n[ci/check-events      ]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[ci/check-events      ]   \ud83d\udcac  ::debug::explicit? true\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::isExplicit: \n[ci/check-events      ]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[ci/check-events      ]   \ud83d\udcac  ::debug::explicit? true\n[ci/check-events      ]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[ci/check-events      ]   \ud83d\udcac  ::debug::explicit? true\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::explicit? false\n[ci/check-events      ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[ci/validate-api-spec ]   | go: downloading github.com/go-openapi/spec v0.20.7\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::explicit? true\n[ci/validate-api-spec ]   | go: downloading github.com/go-openapi/swag v0.22.3\n[ci/validate-api-spec ]   | go: downloading github.com/go-openapi/analysis v0.21.4\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::explicit? true\n[ci/validate-api-spec ]   | go: downloading github.com/go-openapi/strfmt v0.21.3\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[ci/validate-api-spec ]   | go: downloading github.com/go-openapi/runtime v0.24.1\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::explicit? true\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[ci/check-events      ]   \ud83d\udcac  ::debug::match not found\n[ci/check-events      ]   | Attempting to download 1.19...\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::match not found\n[ci/verify-codegen    ]   | Attempting to download 1.19...\n[ci/validate-api-spec ]   | go: downloading github.com/gorilla/handlers v1.5.1\n[ci/validate-api-spec ]   | go: downloading github.com/go-openapi/errors v0.20.3\n[ci/validate-api-spec ]   | go: downloading github.com/Masterminds/sprig/v3 v3.2.2\n[ci/validate-api-spec ]   | go: downloading github.com/mitchellh/mapstructure v1.5.0\n[ci/validate-api-spec ]   | go: downloading gopkg.in/yaml.v2 v2.4.0\n[ci/validate-api-spec ]   | go: downloading github.com/kr/pretty v0.3.0\n[ci/validate-api-spec ]   | go: downloading github.com/go-openapi/inflect v0.19.0\n[ci/validate-api-spec ]   | go: downloading golang.org/x/tools v0.1.12\n[ci/validate-api-spec ]   | go: downloading github.com/toqueteos/webbrowser v1.2.0\n[ci/validate-api-spec ]   | go: downloading gopkg.in/yaml.v3 v3.0.1\n[ci/validate-api-spec ]   | go: downloading github.com/spf13/viper v1.12.0\n[ci/validate-api-spec ]   | go: downloading github.com/pkg/errors v0.9.1\n[ci/leakdetector      ]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::Error: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v2/dist/index.js:5294:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[ci/leakdetector      ]   | Falling back to download directly from Go\n[ci/check-api-doc     ]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::Error: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v2/dist/index.js:5294:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[ci/check-api-doc     ]   | Falling back to download directly from Go\n[ci/check-events      ]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[ci/check-events      ]   \ud83d\udcac  ::debug::Error: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v2/dist/index.js:5294:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[ci/check-events      ]   | Falling back to download directly from Go\n[ci/verify-codegen    ]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::Error: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v2/dist/index.js:5294:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[ci/verify-codegen    ]   | Falling back to download directly from Go\n[ci/validate-api-spec ]   | go: downloading github.com/kr/text v0.2.0\n[ci/validate-api-spec ]   | go: downloading github.com/rogpeppe/go-internal v1.9.0\n[ci/validate-api-spec ]   | go: downloading go.mongodb.org/mongo-driver v1.10.1\n[ci/validate-api-spec ]   | go: downloading github.com/oklog/ulid v1.3.1\n[ci/validate-api-spec ]   | go: downloading github.com/asaskevich/govalidator v0.0.0-20210307081110-f21760c49a8d\n[ci/validate-api-spec ]   | go: downloading github.com/mailru/easyjson v0.7.7\n[ci/validate-api-spec ]   | go: downloading golang.org/x/sys v0.0.0-20220829200755-d48e67d00261\n[ci/validate-api-spec ]   | go: downloading github.com/felixge/httpsnoop v1.0.3\n[ci/validate-api-spec ]   | go: downloading github.com/Masterminds/goutils v1.1.1\n[ci/validate-api-spec ]   | go: downloading github.com/Masterminds/semver/v3 v3.1.1\n[ci/validate-api-spec ]   | go: downloading github.com/google/uuid v1.1.2\n[ci/validate-api-spec ]   | go: downloading github.com/huandu/xstrings v1.3.2\n[ci/validate-api-spec ]   | go: downloading github.com/shopspring/decimal v1.2.0\n[ci/validate-api-spec ]   | go: downloading github.com/spf13/cast v1.5.0\n[ci/validate-api-spec ]   | go: downloading github.com/mitchellh/copystructure v1.2.0\n[ci/validate-api-spec ]   | go: downloading golang.org/x/crypto v0.0.0-20220829220503-c86fa9a7ed90\n[ci/validate-api-spec ]   | go: downloading github.com/imdario/mergo v0.3.12\n[ci/validate-api-spec ]   | go: downloading github.com/go-openapi/jsonpointer v0.19.5\n[ci/validate-api-spec ]   | go: downloading github.com/go-openapi/jsonreference v0.20.0\n[ci/validate-api-spec ]   | go: downloading github.com/fsnotify/fsnotify v1.5.4\n[ci/validate-api-spec ]   | go: downloading github.com/spf13/afero v1.8.2\n[ci/validate-api-spec ]   | go: downloading github.com/spf13/jwalterweatherman v1.1.0\n[ci/validate-api-spec ]   | go: downloading gopkg.in/ini.v1 v1.66.4\n[ci/validate-api-spec ]   | go: downloading github.com/pelletier/go-toml/v2 v2.0.1\n[ci/validate-api-spec ]   | go: downloading github.com/hashicorp/hcl v1.0.0\n[ci/validate-api-spec ]   | go: downloading github.com/subosito/gotenv v1.3.0\n[ci/validate-api-spec ]   | go: downloading github.com/magiconair/properties v1.8.6\n[ci/validate-api-spec ]   | go: downloading github.com/spf13/pflag v1.0.5\n[ci/validate-api-spec ]   | go: downloading github.com/josharian/intern v1.0.0\n[ci/validate-api-spec ]   | go: downloading github.com/mitchellh/reflectwalk v1.0.2\n[ci/validate-api-spec ]   | go: downloading golang.org/x/text v0.3.7\n[ci/validate-api-spec ]   | go: downloading github.com/pelletier/go-toml v1.9.5\n[ci/lint              ]   \u274c  Failure - Main actions/setup-go@v3\n[ci/lint              ] Error response from daemon: Could not find the file /var/run/act/workflow/pathcmd.txt in container 4a8a31bce9b8ba674fc38af360ee57aa825affd7aca04ca24ca47ef8ec99fb55\n[ci/check-contributors]   \u2705  Success - Main ./misc/check-contributors.sh\n[ci/validate-api-spec ]   | go: downloading golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::Resolved Keys:\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::[\"Linux-go-881f7b78d235a63dbcdb7163a3bd8c753856fd1354eaa85c22b43a75475c606a\",\"Linux-go-\"]\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::Checking zstd --version\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.19\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.19\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.19\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.19\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.19\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::check 1.20.0-rc3 satisfies 1.19\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::check 1.20.0-rc2 satisfies 1.19\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::check 1.20.0-rc1 satisfies 1.19\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.19\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::matched go1.19.9\n[ci/check-api-doc     ]   | Install from dist\n[ci/check-api-doc     ]   | Acquiring go1.19.9 from https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::Destination /tmp/540b3641-d2a8-48a5-a8da-64d00eb10180\n[ci/check-events      ]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.19\n[ci/check-events      ]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.19\n[ci/check-events      ]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.19\n[ci/check-events      ]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.19\n[ci/check-events      ]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.19\n[ci/check-events      ]   \ud83d\udcac  ::debug::check 1.20.0-rc3 satisfies 1.19\n[ci/check-events      ]   \ud83d\udcac  ::debug::check 1.20.0-rc2 satisfies 1.19\n[ci/check-events      ]   \ud83d\udcac  ::debug::check 1.20.0-rc1 satisfies 1.19\n[ci/check-events      ]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.19\n[ci/check-events      ]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[ci/check-events      ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[ci/check-events      ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[ci/check-events      ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[ci/check-events      ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[ci/check-events      ]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[ci/check-events      ]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[ci/check-events      ]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[ci/check-events      ]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[ci/check-events      ]   \ud83d\udcac  ::debug::matched go1.19.9\n[ci/check-events      ]   | Install from dist\n[ci/check-events      ]   | Acquiring go1.19.9 from https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[ci/check-events      ]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[ci/check-events      ]   \ud83d\udcac  ::debug::Destination /tmp/effe9579-3061-41b9-bfad-3673fdd950a2\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.19\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.19\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.19\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.19\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.19\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::check 1.20.0-rc3 satisfies 1.19\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::check 1.20.0-rc2 satisfies 1.19\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::check 1.20.0-rc1 satisfies 1.19\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.19\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::matched go1.19.9\n[ci/leakdetector      ]   | Install from dist\n[ci/leakdetector      ]   | Acquiring go1.19.9 from https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::Destination /tmp/2a81cf2b-383c-4a61-9201-ab2ea40dbfb1\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.19\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.19\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.19\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.19\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.19\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::check 1.20.0-rc3 satisfies 1.19\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::check 1.20.0-rc2 satisfies 1.19\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::check 1.20.0-rc1 satisfies 1.19\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.19\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::matched go1.19.9\n[ci/verify-codegen    ]   | Install from dist\n[ci/verify-codegen    ]   | Acquiring go1.19.9 from https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::Destination /tmp/b714bbc2-da0e-466b-b529-bd3585bbc7a4\n[ci/lint              ] failed to remove container: Error response from daemon: No such container: 4a8a31bce9b8ba674fc38af360ee57aa825affd7aca04ca24ca47ef8ec99fb55\n[ci/lint              ] \ud83c\udfc1  Job failed\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[ci/check-contributors] \ud83c\udfc1  Job succeeded\n[ci/check-handlers    ]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[ci/check-handlers    ]   \u2705  Success - Main actions/cache@v2\n[ci/check-handlers    ]   \u2699  ::set-output:: cache-hit=false\n[ci/check-handlers    ] \u2b50 Run Main ./misc/check-handlers.sh\n[ci/check-events      ]   \ud83d\udcac  ::debug::download complete\n[ci/check-events      ]   | Extracting Go...\n[ci/check-events      ]   \ud83d\udcac  ::debug::Checking tar --version\n[ci/check-events      ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[ci/check-events      ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/f725fc37-5cb1-420a-901b-b4b6f45c28cb -f /tmp/effe9579-3061-41b9-bfad-3673fdd950a2\n[ci/check-handlers    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::download complete\n[ci/leakdetector      ]   | Extracting Go...\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::Checking tar --version\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[ci/leakdetector      ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/a0318a26-d8b6-4a3c-821d-fd99f3008f3e -f /tmp/2a81cf2b-383c-4a61-9201-ab2ea40dbfb1\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::download complete\n[ci/verify-codegen    ]   | Extracting Go...\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::Checking tar --version\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[ci/verify-codegen    ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/5df4cffa-fd13-47ea-afac-65336d1e5595 -f /tmp/b714bbc2-da0e-466b-b529-bd3585bbc7a4\n[ci/validate-api-spec ]   | /home/runneradmin/go/bin/swagger validate ./docs/reference/api.yaml\n[ci/check-events      ]   | Successfully extracted go to /tmp/f725fc37-5cb1-420a-901b-b4b6f45c28cb\n[ci/check-events      ]   | Adding to the cache ...\n[ci/check-events      ]   \ud83d\udcac  ::debug::Caching tool go 1.19.9 x64\n[ci/check-events      ]   \ud83d\udcac  ::debug::source dir: /tmp/f725fc37-5cb1-420a-901b-b4b6f45c28cb/go\n[ci/check-events      ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.19.9/x64\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::download complete\n[ci/check-api-doc     ]   | Extracting Go...\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::Checking tar --version\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[ci/check-api-doc     ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/d9227a3b-5375-4964-8c74-76042741cbc7 -f /tmp/540b3641-d2a8-48a5-a8da-64d00eb10180\n[ci/leakdetector      ]   | Successfully extracted go to /tmp/a0318a26-d8b6-4a3c-821d-fd99f3008f3e\n[ci/leakdetector      ]   | Adding to the cache ...\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::Caching tool go 1.19.9 x64\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::source dir: /tmp/a0318a26-d8b6-4a3c-821d-fd99f3008f3e/go\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.19.9/x64\n[ci/verify-codegen    ]   | Successfully extracted go to /tmp/5df4cffa-fd13-47ea-afac-65336d1e5595\n[ci/verify-codegen    ]   | Adding to the cache ...\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::Caching tool go 1.19.9 x64\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::source dir: /tmp/5df4cffa-fd13-47ea-afac-65336d1e5595/go\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.19.9/x64\n[ci/validate-api-spec ]   | 2023/05/30 10:30:02 \n[ci/validate-api-spec ]   | The swagger spec at \"./docs/reference/api.yaml\" is valid against swagger specification 2.0\n[ci/validate-api-spec ]   \u2705  Success - Main make validate-api-spec\n[ci/check-api-doc     ]   | Successfully extracted go to /tmp/d9227a3b-5375-4964-8c74-76042741cbc7\n[ci/check-api-doc     ]   | Adding to the cache ...\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::Caching tool go 1.19.9 x64\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::source dir: /tmp/d9227a3b-5375-4964-8c74-76042741cbc7/go\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.19.9/x64\n[ci/check-events      ]   \ud83d\udcac  ::debug::finished caching tool\n[ci/check-events      ]   | Successfully cached go to /opt/hostedtoolcache/go/1.19.9/x64\n[ci/check-events      ]   | Added go to the path\n[ci/check-events      ]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.19.9/x64/bin/go:\n[ci/check-events      ]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[ci/check-events      ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[ci/check-events      ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[ci/check-events      ]   \ud83d\udcac  ::debug::add bin true\n[ci/check-events      ]   | Successfully setup go version 1.19\n[ci/check-events      ]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[ci/check-events      ]   | go version go1.19.9 linux/amd64\n[ci/check-events      ]   | \n[ci/check-events      ]   \u2753  ::group::go env\n[ci/check-events      ]   | GO111MODULE=\"\"\n[ci/check-events      ]   | GOARCH=\"amd64\"\n[ci/check-events      ]   | GOBIN=\"\"\n[ci/check-events      ]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[ci/check-events      ]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[ci/check-events      ]   | GOEXE=\"\"\n[ci/check-events      ]   | GOEXPERIMENT=\"\"\n[ci/check-events      ]   | GOFLAGS=\"\"\n[ci/check-events      ]   | GOHOSTARCH=\"amd64\"\n[ci/check-events      ]   | GOHOSTOS=\"linux\"\n[ci/check-events      ]   | GOINSECURE=\"\"\n[ci/check-events      ]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[ci/check-events      ]   | GONOPROXY=\"\"\n[ci/check-events      ]   | GONOSUMDB=\"\"\n[ci/check-events      ]   | GOOS=\"linux\"\n[ci/check-events      ]   | GOPATH=\"/home/runneradmin/go\"\n[ci/check-events      ]   | GOPRIVATE=\"\"\n[ci/check-events      ]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[ci/check-events      ]   | GOROOT=\"/opt/hostedtoolcache/go/1.19.9/x64\"\n[ci/check-events      ]   | GOSUMDB=\"sum.golang.org\"\n[ci/check-events      ]   | GOTMPDIR=\"\"\n[ci/check-events      ]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.19.9/x64/pkg/tool/linux_amd64\"\n[ci/check-events      ]   | GOVCS=\"\"\n[ci/check-events      ]   | GOVERSION=\"go1.19.9\"\n[ci/check-events      ]   | GCCGO=\"gccgo\"\n[ci/check-events      ]   | GOAMD64=\"v1\"\n[ci/check-events      ]   | AR=\"ar\"\n[ci/check-events      ]   | CC=\"gcc\"\n[ci/check-events      ]   | CXX=\"g++\"\n[ci/check-events      ]   | CGO_ENABLED=\"1\"\n[ci/check-events      ]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/go.mod\"\n[ci/check-events      ]   | GOWORK=\"\"\n[ci/check-events      ]   | CGO_CFLAGS=\"-g -O2\"\n[ci/check-events      ]   | CGO_CPPFLAGS=\"\"\n[ci/check-events      ]   | CGO_CXXFLAGS=\"-g -O2\"\n[ci/check-events      ]   | CGO_FFLAGS=\"-g -O2\"\n[ci/check-events      ]   | CGO_LDFLAGS=\"-g -O2\"\n[ci/check-events      ]   | PKG_CONFIG=\"pkg-config\"\n[ci/check-events      ]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build1133685680=/tmp/go-build -gno-record-gcc-switches\"\n[ci/check-events      ]   | \n[ci/check-events      ]   \u2753  ::endgroup::\n[ci/check-events      ]   \u2705  Success - Main actions/setup-go@v2\n[ci/check-events      ]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.19.9/x64\n[ci/check-events      ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.19.9/x64/bin\n[ci/check-events      ]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[ci/check-events      ] \u2b50 Run Main actions/checkout@v2\n[ci/check-events      ]   \u2705  Success - Main actions/checkout@v2\n[ci/check-events      ] \u2b50 Run Main actions/cache@v2\n[ci/check-events      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::finished caching tool\n[ci/verify-codegen    ]   | Successfully cached go to /opt/hostedtoolcache/go/1.19.9/x64\n[ci/verify-codegen    ]   | Added go to the path\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.19.9/x64/bin/go:\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::add bin true\n[ci/verify-codegen    ]   | Successfully setup go version 1.19\n[ci/verify-codegen    ]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[ci/verify-codegen    ]   | go version go1.19.9 linux/amd64\n[ci/verify-codegen    ]   | \n[ci/verify-codegen    ]   \u2753  ::group::go env\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::finished caching tool\n[ci/leakdetector      ]   | Successfully cached go to /opt/hostedtoolcache/go/1.19.9/x64\n[ci/leakdetector      ]   | Added go to the path\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.19.9/x64/bin/go:\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::add bin true\n[ci/leakdetector      ]   | Successfully setup go version 1.19\n[ci/leakdetector      ]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[ci/leakdetector      ]   | go version go1.19.9 linux/amd64\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   \u2753  ::group::go env\n[ci/verify-codegen    ]   | GO111MODULE=\"\"\n[ci/verify-codegen    ]   | GOARCH=\"amd64\"\n[ci/verify-codegen    ]   | GOBIN=\"\"\n[ci/verify-codegen    ]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[ci/verify-codegen    ]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[ci/verify-codegen    ]   | GOEXE=\"\"\n[ci/verify-codegen    ]   | GOEXPERIMENT=\"\"\n[ci/verify-codegen    ]   | GOFLAGS=\"\"\n[ci/verify-codegen    ]   | GOHOSTARCH=\"amd64\"\n[ci/verify-codegen    ]   | GOHOSTOS=\"linux\"\n[ci/verify-codegen    ]   | GOINSECURE=\"\"\n[ci/verify-codegen    ]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[ci/verify-codegen    ]   | GONOPROXY=\"\"\n[ci/verify-codegen    ]   | GONOSUMDB=\"\"\n[ci/verify-codegen    ]   | GOOS=\"linux\"\n[ci/verify-codegen    ]   | GOPATH=\"/home/runneradmin/go\"\n[ci/verify-codegen    ]   | GOPRIVATE=\"\"\n[ci/verify-codegen    ]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[ci/verify-codegen    ]   | GOROOT=\"/opt/hostedtoolcache/go/1.19.9/x64\"\n[ci/verify-codegen    ]   | GOSUMDB=\"sum.golang.org\"\n[ci/verify-codegen    ]   | GOTMPDIR=\"\"\n[ci/verify-codegen    ]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.19.9/x64/pkg/tool/linux_amd64\"\n[ci/verify-codegen    ]   | GOVCS=\"\"\n[ci/verify-codegen    ]   | GOVERSION=\"go1.19.9\"\n[ci/verify-codegen    ]   | GCCGO=\"gccgo\"\n[ci/verify-codegen    ]   | GOAMD64=\"v1\"\n[ci/verify-codegen    ]   | AR=\"ar\"\n[ci/verify-codegen    ]   | CC=\"gcc\"\n[ci/verify-codegen    ]   | CXX=\"g++\"\n[ci/verify-codegen    ]   | CGO_ENABLED=\"1\"\n[ci/verify-codegen    ]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/go.mod\"\n[ci/verify-codegen    ]   | GOWORK=\"\"\n[ci/verify-codegen    ]   | CGO_CFLAGS=\"-g -O2\"\n[ci/verify-codegen    ]   | CGO_CPPFLAGS=\"\"\n[ci/verify-codegen    ]   | CGO_CXXFLAGS=\"-g -O2\"\n[ci/verify-codegen    ]   | CGO_FFLAGS=\"-g -O2\"\n[ci/verify-codegen    ]   | CGO_LDFLAGS=\"-g -O2\"\n[ci/verify-codegen    ]   | PKG_CONFIG=\"pkg-config\"\n[ci/verify-codegen    ]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build1978674257=/tmp/go-build -gno-record-gcc-switches\"\n[ci/verify-codegen    ]   | \n[ci/verify-codegen    ]   \u2753  ::endgroup::\n[ci/verify-codegen    ]   \u2705  Success - Main actions/setup-go@v2\n[ci/leakdetector      ]   | GO111MODULE=\"\"\n[ci/leakdetector      ]   | GOARCH=\"amd64\"\n[ci/leakdetector      ]   | GOBIN=\"\"\n[ci/leakdetector      ]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[ci/leakdetector      ]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[ci/leakdetector      ]   | GOEXE=\"\"\n[ci/leakdetector      ]   | GOEXPERIMENT=\"\"\n[ci/leakdetector      ]   | GOFLAGS=\"\"\n[ci/leakdetector      ]   | GOHOSTARCH=\"amd64\"\n[ci/leakdetector      ]   | GOHOSTOS=\"linux\"\n[ci/leakdetector      ]   | GOINSECURE=\"\"\n[ci/leakdetector      ]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[ci/leakdetector      ]   | GONOPROXY=\"\"\n[ci/leakdetector      ]   | GONOSUMDB=\"\"\n[ci/leakdetector      ]   | GOOS=\"linux\"\n[ci/leakdetector      ]   | GOPATH=\"/home/runneradmin/go\"\n[ci/leakdetector      ]   | GOPRIVATE=\"\"\n[ci/leakdetector      ]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[ci/leakdetector      ]   | GOROOT=\"/opt/hostedtoolcache/go/1.19.9/x64\"\n[ci/leakdetector      ]   | GOSUMDB=\"sum.golang.org\"\n[ci/leakdetector      ]   | GOTMPDIR=\"\"\n[ci/leakdetector      ]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.19.9/x64/pkg/tool/linux_amd64\"\n[ci/leakdetector      ]   | GOVCS=\"\"\n[ci/leakdetector      ]   | GOVERSION=\"go1.19.9\"\n[ci/leakdetector      ]   | GCCGO=\"gccgo\"\n[ci/leakdetector      ]   | GOAMD64=\"v1\"\n[ci/leakdetector      ]   | AR=\"ar\"\n[ci/leakdetector      ]   | CC=\"gcc\"\n[ci/leakdetector      ]   | CXX=\"g++\"\n[ci/leakdetector      ]   | CGO_ENABLED=\"1\"\n[ci/leakdetector      ]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/go.mod\"\n[ci/leakdetector      ]   | GOWORK=\"\"\n[ci/leakdetector      ]   | CGO_CFLAGS=\"-g -O2\"\n[ci/leakdetector      ]   | CGO_CPPFLAGS=\"\"\n[ci/leakdetector      ]   | CGO_CXXFLAGS=\"-g -O2\"\n[ci/leakdetector      ]   | CGO_FFLAGS=\"-g -O2\"\n[ci/leakdetector      ]   | CGO_LDFLAGS=\"-g -O2\"\n[ci/leakdetector      ]   | PKG_CONFIG=\"pkg-config\"\n[ci/leakdetector      ]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build3230327465=/tmp/go-build -gno-record-gcc-switches\"\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   \u2753  ::endgroup::\n[ci/leakdetector      ]   \u2705  Success - Main actions/setup-go@v2\n[ci/check-events      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[ci/verify-codegen    ]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.19.9/x64\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::finished caching tool\n[ci/check-api-doc     ]   | Successfully cached go to /opt/hostedtoolcache/go/1.19.9/x64\n[ci/check-api-doc     ]   | Added go to the path\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.19.9/x64/bin/go:\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::add bin true\n[ci/check-api-doc     ]   | Successfully setup go version 1.19\n[ci/check-api-doc     ]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[ci/check-api-doc     ]   | go version go1.19.9 linux/amd64\n[ci/check-api-doc     ]   | \n[ci/check-api-doc     ]   \u2753  ::group::go env\n[ci/leakdetector      ]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.19.9/x64\n[ci/check-api-doc     ]   | GO111MODULE=\"\"\n[ci/check-api-doc     ]   | GOARCH=\"amd64\"\n[ci/check-api-doc     ]   | GOBIN=\"\"\n[ci/check-api-doc     ]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[ci/check-api-doc     ]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[ci/check-api-doc     ]   | GOEXE=\"\"\n[ci/check-api-doc     ]   | GOEXPERIMENT=\"\"\n[ci/check-api-doc     ]   | GOFLAGS=\"\"\n[ci/check-api-doc     ]   | GOHOSTARCH=\"amd64\"\n[ci/check-api-doc     ]   | GOHOSTOS=\"linux\"\n[ci/check-api-doc     ]   | GOINSECURE=\"\"\n[ci/check-api-doc     ]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[ci/check-api-doc     ]   | GONOPROXY=\"\"\n[ci/check-api-doc     ]   | GONOSUMDB=\"\"\n[ci/check-api-doc     ]   | GOOS=\"linux\"\n[ci/check-api-doc     ]   | GOPATH=\"/home/runneradmin/go\"\n[ci/check-api-doc     ]   | GOPRIVATE=\"\"\n[ci/check-api-doc     ]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[ci/check-api-doc     ]   | GOROOT=\"/opt/hostedtoolcache/go/1.19.9/x64\"\n[ci/check-api-doc     ]   | GOSUMDB=\"sum.golang.org\"\n[ci/check-api-doc     ]   | GOTMPDIR=\"\"\n[ci/check-api-doc     ]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.19.9/x64/pkg/tool/linux_amd64\"\n[ci/check-api-doc     ]   | GOVCS=\"\"\n[ci/check-api-doc     ]   | GOVERSION=\"go1.19.9\"\n[ci/check-api-doc     ]   | GCCGO=\"gccgo\"\n[ci/check-api-doc     ]   | GOAMD64=\"v1\"\n[ci/check-api-doc     ]   | AR=\"ar\"\n[ci/check-api-doc     ]   | CC=\"gcc\"\n[ci/check-api-doc     ]   | CXX=\"g++\"\n[ci/check-api-doc     ]   | CGO_ENABLED=\"1\"\n[ci/check-api-doc     ]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/go.mod\"\n[ci/check-api-doc     ]   | GOWORK=\"\"\n[ci/check-api-doc     ]   | CGO_CFLAGS=\"-g -O2\"\n[ci/check-api-doc     ]   | CGO_CPPFLAGS=\"\"\n[ci/check-api-doc     ]   | CGO_CXXFLAGS=\"-g -O2\"\n[ci/check-api-doc     ]   | CGO_FFLAGS=\"-g -O2\"\n[ci/check-api-doc     ]   | CGO_LDFLAGS=\"-g -O2\"\n[ci/check-api-doc     ]   | PKG_CONFIG=\"pkg-config\"\n[ci/check-api-doc     ]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build1417107673=/tmp/go-build -gno-record-gcc-switches\"\n[ci/check-api-doc     ]   | \n[ci/check-api-doc     ]   \u2753  ::endgroup::\n[ci/check-api-doc     ]   \u2705  Success - Main actions/setup-go@v2\n[ci/verify-codegen    ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.19.9/x64/bin\n[ci/verify-codegen    ]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[ci/check-api-doc     ]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.19.9/x64\n[ci/leakdetector      ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.19.9/x64/bin\n[ci/leakdetector      ]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[ci/verify-codegen    ] \u2b50 Run Main actions/checkout@v2\n[ci/leakdetector      ] \u2b50 Run Main actions/checkout@v2\n[ci/verify-codegen    ]   \u2705  Success - Main actions/checkout@v2\n[ci/check-api-doc     ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.19.9/x64/bin\n[ci/check-api-doc     ]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[ci/leakdetector      ]   \u2705  Success - Main actions/checkout@v2\n[ci/check-api-doc     ] \u2b50 Run Main actions/checkout@v2\n[ci/check-api-doc     ]   \u2705  Success - Main actions/checkout@v2\n[ci/verify-codegen    ] \u2b50 Run Main actions/cache@v2\n[ci/leakdetector      ] \u2b50 Run Main actions/cache@v2\n[ci/verify-codegen    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[ci/leakdetector      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[ci/check-api-doc     ] \u2b50 Run Main actions/cache@v2\n[ci/check-api-doc     ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[ci/verify-codegen    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[ci/leakdetector      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[ci/check-api-doc     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[ci/check-api-doc     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[ci/leakdetector      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[ci/verify-codegen    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[ci/check-events      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[ci/check-handlers    ]   | go: downloading github.com/tsuru/tsuru-api-docs v0.0.0-20230405183221-285715c9f941\n[ci/check-handlers    ]   | go: downloading golang.org/x/tools v0.0.0-20190725161231-2e34cfcb95cb\n[ci/check-handlers    ]   | go: downloading gopkg.in/yaml.v2 v2.2.2\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::Resolved Keys:\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::[\"Linux-go-881f7b78d235a63dbcdb7163a3bd8c753856fd1354eaa85c22b43a75475c606a\",\"Linux-go-\"]\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::Checking zstd --version\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::Resolved Keys:\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::[\"Linux-go-881f7b78d235a63dbcdb7163a3bd8c753856fd1354eaa85c22b43a75475c606a\",\"Linux-go-\"]\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::Checking zstd --version\n[ci/validate-api-spec ] \ud83c\udfc1  Job succeeded\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::Resolved Keys:\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::[\"Linux-goleak-881f7b78d235a63dbcdb7163a3bd8c753856fd1354eaa85c22b43a75475c606a-1\",\"Linux-goleak-881f7b78d235a63dbcdb7163a3bd8c753856fd1354eaa85c22b43a75475c606a-\",\"Linux-goleak-\"]\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::Checking zstd --version\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[ci/check-events      ]   \ud83d\udcac  ::debug::Resolved Keys:\n[ci/check-events      ]   \ud83d\udcac  ::debug::[\"Linux-go-881f7b78d235a63dbcdb7163a3bd8c753856fd1354eaa85c22b43a75475c606a\",\"Linux-go-\"]\n[ci/check-events      ]   \ud83d\udcac  ::debug::Checking zstd --version\n[ci/check-events      ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[ci/check-events      ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[ci/leakdetector      ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[ci/check-events      ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[ci/check-api-doc     ]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[ci/check-api-doc     ]   \u2705  Success - Main actions/cache@v2\n[ci/verify-codegen    ]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[ci/verify-codegen    ]   \u2705  Success - Main actions/cache@v2\n[ci/leakdetector      ]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[ci/leakdetector      ]   \u2705  Success - Main actions/cache@v2\n[ci/check-events      ]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[ci/check-events      ]   \u2705  Success - Main actions/cache@v2\n[ci/check-api-doc     ]   \u2699  ::set-output:: cache-hit=false\n[ci/verify-codegen    ]   \u2699  ::set-output:: cache-hit=false\n[ci/leakdetector      ]   \u2699  ::set-output:: cache-hit=false\n[ci/check-api-doc     ] \u2b50 Run Main make check-api-doc\n[ci/check-events      ]   \u2699  ::set-output:: cache-hit=false\n[ci/leakdetector      ] \u2b50 Run Main git ls-tree -r -t --full-name --name-only HEAD | grep -v vendor | xargs -I{} -P4 sh -c 'touch -d $(git log --pretty=format:%cI -1 HEAD -- \"{}\") \"{}\"'\n[ci/verify-codegen    ] \u2b50 Run Main go install golang.org/x/tools/cmd/goimports@latest\n[ci/check-events      ] \u2b50 Run Main ./misc/check-events.sh\n[ci/verify-codegen    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[ci/leakdetector      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[ci/check-api-doc     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[ci/check-events      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[ci/verify-codegen    ]   | go: downloading golang.org/x/tools v0.9.1\n[ci/check-events      ]   | go: downloading github.com/tsuru/tsuru-api-docs v0.0.0-20230405183221-285715c9f941\n[ci/check-api-doc     ]   | go: downloading github.com/tsuru/tsuru-api-docs v0.0.0-20230405183221-285715c9f941\n[ci/check-events      ]   | go: downloading golang.org/x/tools v0.0.0-20190725161231-2e34cfcb95cb\n[ci/check-events      ]   | go: downloading gopkg.in/yaml.v2 v2.2.2\n[ci/check-api-doc     ]   | go: downloading gopkg.in/yaml.v2 v2.2.2\n[ci/check-api-doc     ]   | go: downloading golang.org/x/tools v0.0.0-20190725161231-2e34cfcb95cb\n[ci/verify-codegen    ]   | go: downloading golang.org/x/sys v0.8.0\n[ci/verify-codegen    ]   | go: downloading golang.org/x/mod v0.10.0\n[ci/verify-codegen    ]   \u2705  Success - Main go install golang.org/x/tools/cmd/goimports@latest\n[ci/verify-codegen    ] \u2b50 Run Main ./hack/verify-codegen.sh\n[ci/check-handlers    ]   | OK handlers: 196\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.addAppRouter\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.addAutoScaleUnits\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.addDefaultRole\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.addLog\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.addNodeHandler\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.addPermissions\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.addPlan\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.addPoolHandler\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.addRole\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.addRouter\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.addTeamToPoolHandler\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.addUnits\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.appDelete\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.appInfo\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.appList\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.appLog\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.appMetricEnvs\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.appRebuildRoutes\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.appSetRoutable\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.appVersionDelete\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.assignRole\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.assignRoleToGroup\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.assignRoleToToken\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.autoScaleDeleteRule\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.autoScaleGetConfig\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.autoScaleHistoryHandler\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.autoScaleListRules\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.autoScaleRunHandler\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.autoScaleSetRule\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.autoScaleUnitsInfo\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.bindJobServiceInstance\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.bindServiceInstance\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.build\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.changeAppQuota\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.changeTeamQuota\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.changeUserQuota\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.clusterInfo\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.createApp\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.createCluster\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.createJob\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.createServiceInstance\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.createTeam\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.createUser\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.deleteCluster\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.deleteJob\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.deleteRouter\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.deploy\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.deployInfo\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.deployRebuild\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.deployRollback\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.deployRollbackUpdate\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.deploysList\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.dissociateRole\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.dissociateRoleFromGroup\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.dissociateRoleFromToken\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.dumpGoroutines\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.eventBlockAdd\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.eventBlockList\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.eventBlockRemove\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.eventCancel\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.eventInfo\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.getAppEnv\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.getAppQuota\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.getPoolHandler\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.getTeamQuota\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.getUserQuota\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.grantAppAccess\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.grantServiceAccess\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.healingHistoryHandler\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.infoNodeHandler\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.jobInfo\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.jobList\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.jobLog\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.jobTrigger\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.killUnit\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.listAppRouters\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.listCertificates\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.listClusters\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.listDefaultRoles\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.listPermissions\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.listRoles\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.listRouters\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.listUnitsByApp\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.listUnitsByNode\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.listUsers\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.machineDestroy\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.machinesList\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.nodeContainerCreate\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.nodeContainerDelete\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.nodeContainerUpdate\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.nodeContainerUpgrade\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.nodeHealingDelete\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.nodeHealingUpdate\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.platformAdd\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.platformInfo\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.platformList\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.platformRemove\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.platformRollback\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.platformUpdate\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.poolConstraintList\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.poolConstraintSet\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.poolList\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.poolUpdateHandler\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.provisionerList\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.rebalanceNodesHandler\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.regenerateAPIToken\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.registerUnit\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.remoteShellHandler\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.removeAppRouter\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.removeAutoScaleUnits\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.removeDefaultRole\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.removeNodeHandler\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.removePermissions\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.removePlan\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.removePoolHandler\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.removeRole\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.removeServiceInstance\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.removeTeam\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.removeTeamToPoolHandler\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.removeUnits\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.removeUser\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.restart\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.revokeAppAccess\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.revokeServiceAccess\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.roleInfo\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.roleUpdate\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.runCommand\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.serviceAddDoc\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.serviceBrokerAdd\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.serviceBrokerDelete\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.serviceBrokerList\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.serviceBrokerUpdate\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.serviceCreate\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.serviceDelete\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.serviceDoc\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.serviceInfo\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.serviceInstance\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.serviceInstanceGrantTeam\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.serviceInstanceProxy\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.serviceInstanceRevokeTeam\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.serviceInstanceStatus\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.serviceInstances\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.serviceList\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.servicePlans\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.serviceProxy\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.serviceUpdate\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.setAppEnv\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.setCName\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.setCertificate\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.setJobEnv\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.setUnitStatus\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.showAPIToken\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.sleep\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.start\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.stop\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.swap\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.teamInfo\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.teamList\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.templateCreate\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.templateDestroy\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.templateUpdate\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.templatesList\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.tokenCreate\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.tokenDelete\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.tokenInfo\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.tokenUpdate\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.unbindJobServiceInstance\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.unbindServiceInstance\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.unsetAppEnv\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.unsetCName\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.unsetCertificate\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.unsetJobEnv\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.updateApp\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.updateAppRouter\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.updateCluster\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.updateJob\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.updateNodeHandler\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.updateRouter\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.updateServiceInstance\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.updateTeam\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.volumeBind\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.volumeCreate\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.volumeDelete\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.volumeInfo\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.volumePlansList\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.volumeUnbind\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.volumeUpdate\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.volumesList\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.webhookCreate\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.webhookDelete\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.webhookInfo\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.webhookList\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/api.webhookUpdate\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/provision/docker.logsConfigSetHandler\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/provision/docker.moveContainerHandler\n[ci/check-handlers    ]   | github.com/tsuru/tsuru/provision/docker.moveContainersHandler\n[ci/verify-codegen    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[ci/leakdetector      ]   \u2705  Success - Main git ls-tree -r -t --full-name --name-only HEAD | grep -v vendor | xargs -I{} -P4 sh -c 'touch -d $(git log --pretty=format:%cI -1 HEAD -- \"{}\") \"{}\"'\n[ci/leakdetector      ] \u2b50 Run Main sudo apt-get update && sudo apt-get install -y xmlsec1\n[ci/leakdetector      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[ci/check-handlers    ]   \u2705  Success - Main ./misc/check-handlers.sh\n[ci/check-handlers    ] \u2b50 Run Post actions/cache@v2\n[ci/check-handlers    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/save/index.js] user= workdir=\n[ci/check-api-doc     ]   \u2705  Success - Main make check-api-doc\n[ci/check-events      ]   \u2705  Success - Main ./misc/check-events.sh\n[ci/check-api-doc     ] \u2b50 Run Post actions/cache@v2\n[ci/check-api-doc     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/save/index.js] user= workdir=\n[ci/check-events      ] \u2b50 Run Post actions/cache@v2\n[ci/check-events      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/save/index.js] user= workdir=\n[ci/verify-codegen    ]   | k8s.io/code-generator version is v0.20.6\n[ci/check-events      ]   \ud83d\udcac  ::debug::Checking zstd --version\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::Checking zstd --version\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::Checking zstd --version\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::Reserving Cache\n[ci/check-events      ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::Reserving Cache\n[ci/check-events      ]   \ud83d\udcac  ::debug::Reserving Cache\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::reserveCache - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::reserveCache - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[ci/check-events      ]   \ud83d\udcac  ::debug::reserveCache - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[ci/leakdetector      ]   | Get:1 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ InRelease [3622 B]\n[ci/leakdetector      ]   | Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease\n[ci/leakdetector      ]   | Get:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]\n[ci/leakdetector      ]   | Get:4 https://dl.hhvm.com/ubuntu focal InRelease [3137 B]\n[ci/leakdetector      ]   | Get:5 http://dl.google.com/linux/chrome/deb stable InRelease [1825 B]\n[ci/leakdetector      ]   | Hit:6 http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu focal InRelease\n[ci/leakdetector      ]   | Get:7 https://packages.microsoft.com/ubuntu/20.04/prod focal InRelease [3611 B]\n[ci/leakdetector      ]   | Get:8 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]\n[ci/leakdetector      ]   | Get:9 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]\n[ci/leakdetector      ]   | Hit:10 https://adoptopenjdk.jfrog.io/adoptopenjdk/deb focal InRelease\n[ci/check-api-doc     ]   \ud83d\udcac  ::debug::reserveCache - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[ci/check-handlers    ]   \ud83d\udcac  ::debug::reserveCache - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[ci/check-events      ]   \ud83d\udcac  ::debug::reserveCache - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[ci/leakdetector      ]   | Get:11 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ Packages [77.6 kB]\n[ci/check-events      ]   | [warning]reserveCache failed: Cache Service Url not found, unable to restore cache.\n[ci/check-handlers    ]   | [warning]reserveCache failed: Cache Service Url not found, unable to restore cache.\n[ci/check-api-doc     ]   | [warning]reserveCache failed: Cache Service Url not found, unable to restore cache.\n[ci/check-events      ]   \u2705  Success - Post actions/cache@v2\n[ci/check-api-doc     ]   \u2705  Success - Post actions/cache@v2\n[ci/check-handlers    ]   \u2705  Success - Post actions/cache@v2\n[ci/leakdetector      ]   | Get:12 https://dl.hhvm.com/ubuntu focal/main amd64 Packages [1880 B]\n[ci/leakdetector      ]   | Err:5 http://dl.google.com/linux/chrome/deb stable InRelease\n[ci/leakdetector      ]   |   The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[ci/verify-codegen    ]   | go: downloading k8s.io/klog/v2 v2.4.0\n[ci/verify-codegen    ]   | go: downloading golang.org/x/tools v0.0.0-20210106214847-113979e3529a\n[ci/verify-codegen    ]   | go: downloading github.com/go-logr/logr v0.2.0\n[ci/verify-codegen    ]   | go: downloading golang.org/x/mod v0.3.0\n[ci/verify-codegen    ]   | go: downloading golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1\n[ci/leakdetector      ]   | Get:13 https://packages.microsoft.com/ubuntu/20.04/prod focal/main all Packages [2521 B]\n[ci/leakdetector      ]   | Get:14 https://packages.microsoft.com/ubuntu/20.04/prod focal/main amd64 Packages [201 kB]\n[ci/leakdetector      ]   | Get:15 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [31.2 kB]\n[ci/leakdetector      ]   | Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [2412 kB]\n[ci/leakdetector      ]   | Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1346 kB]\n[ci/leakdetector      ]   | Get:18 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [3204 kB]\n[ci/verify-codegen    ]   | Generating deepcopy funcs\n[ci/check-handlers    ] \ud83c\udfc1  Job succeeded\n[ci/check-api-doc     ] \ud83c\udfc1  Job succeeded\n[ci/leakdetector      ]   | Get:19 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [28.6 kB]\n[ci/leakdetector      ]   | Get:20 http://archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [55.2 kB]\n[ci/leakdetector      ]   | Get:21 http://security.ubuntu.com/ubuntu focal-security/multiverse i386 Packages [8141 B]\n[ci/leakdetector      ]   | Get:22 http://security.ubuntu.com/ubuntu focal-security/restricted i386 Packages [36.9 kB]\n[ci/leakdetector      ]   | Get:23 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [28.5 kB]\n[ci/leakdetector      ]   | Get:24 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [1052 kB]\n[ci/check-events      ] \ud83c\udfc1  Job succeeded\n[ci/leakdetector      ]   | Get:25 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [739 kB]\n[ci/leakdetector      ]   | Get:26 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [2270 kB]\n[ci/leakdetector      ]   | Get:27 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [2726 kB]\n[ci/leakdetector      ]   | Get:28 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [739 kB]\n[ci/leakdetector      ]   | Fetched 15.3 MB in 28s (546 kB/s)\n[ci/leakdetector      ]   | Reading package lists...\n[ci/verify-codegen    ]   | Generating clientset for tsuru:v1 at github.com/tsuru/tsuru/provision/kubernetes/pkg/client/clientset\n[ci/leakdetector      ]   | W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: http://dl.google.com/linux/chrome/deb stable InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[ci/leakdetector      ]   | W: Failed to fetch http://dl.google.com/linux/chrome/deb/dists/stable/InRelease  The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[ci/leakdetector      ]   | W: Some index files failed to download. They have been ignored, or old ones used instead.\n[ci/leakdetector      ]   | Reading package lists...\n[ci/leakdetector      ]   | Building dependency tree...\n[ci/leakdetector      ]   | Reading state information...\n[ci/leakdetector      ]   | The following additional packages will be installed:\n[ci/leakdetector      ]   |   libxmlsec1 libxmlsec1-openssl\n[ci/leakdetector      ]   | The following NEW packages will be installed:\n[ci/leakdetector      ]   |   libxmlsec1 libxmlsec1-openssl xmlsec1\n[ci/leakdetector      ]   | 0 upgraded, 3 newly installed, 0 to remove and 388 not upgraded.\n[ci/leakdetector      ]   | Need to get 228 kB of archives.\n[ci/leakdetector      ]   | After this operation, 850 kB of additional disk space will be used.\n[ci/leakdetector      ]   | Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libxmlsec1 amd64 1.2.28-2 [127 kB]\n[ci/leakdetector      ]   | Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 libxmlsec1-openssl amd64 1.2.28-2 [75.9 kB]\n[ci/leakdetector      ]   | Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 xmlsec1 amd64 1.2.28-2 [25.0 kB]\n[ci/leakdetector      ]   | Fetched 228 kB in 0s (720 kB/s)\n[ci/leakdetector      ]   | Selecting previously unselected package libxmlsec1:amd64.\r\n[ci/leakdetector      ]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[ci/leakdetector      ]   | Preparing to unpack .../libxmlsec1_1.2.28-2_amd64.deb ...\r\n[ci/leakdetector      ]   | Unpacking libxmlsec1:amd64 (1.2.28-2) ...\r\n[ci/leakdetector      ]   | Selecting previously unselected package libxmlsec1-openssl:amd64.\r\n[ci/leakdetector      ]   | Preparing to unpack .../libxmlsec1-openssl_1.2.28-2_amd64.deb ...\r\n[ci/leakdetector      ]   | Unpacking libxmlsec1-openssl:amd64 (1.2.28-2) ...\r\n[ci/leakdetector      ]   | Selecting previously unselected package xmlsec1.\r\n[ci/leakdetector      ]   | Preparing to unpack .../xmlsec1_1.2.28-2_amd64.deb ...\r\n[ci/leakdetector      ]   | Unpacking xmlsec1 (1.2.28-2) ...\r\n[ci/leakdetector      ]   | Setting up libxmlsec1:amd64 (1.2.28-2) ...\r\n[ci/leakdetector      ]   | Setting up libxmlsec1-openssl:amd64 (1.2.28-2) ...\r\n[ci/leakdetector      ]   | Setting up xmlsec1 (1.2.28-2) ...\r\n[ci/leakdetector      ]   | Processing triggers for libc-bin (2.31-0ubuntu9.2) ...\r\n[ci/leakdetector      ]   \u2705  Success - Main sudo apt-get update && sudo apt-get install -y xmlsec1\n[ci/leakdetector      ] \u2b50 Run Main make leakdetector\n[ci/leakdetector      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[ci/verify-codegen    ]   | Generating listers for tsuru:v1 at github.com/tsuru/tsuru/provision/kubernetes/pkg/client/listers\n[ci/verify-codegen    ]   | Generating informers for tsuru:v1 at github.com/tsuru/tsuru/provision/kubernetes/pkg/client/informers\n[ci/verify-codegen    ]   | diffing ./hack/../provision/kubernetes/pkg against freshly generated codegen\n[ci/verify-codegen    ]   | ./hack/../provision/kubernetes/pkg up to date.\n[ci/verify-codegen    ]   \u2705  Success - Main ./hack/verify-codegen.sh\n[ci/verify-codegen    ] \u2b50 Run Post actions/cache@v2\n[ci/verify-codegen    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/save/index.js] user= workdir=\n[ci/leakdetector      ]   | go test -test.v --tags leakdetector ./... | tee /tmp/leaktest.log\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::Checking zstd --version\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::Reserving Cache\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::reserveCache - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[ci/leakdetector      ]   | go: downloading github.com/pkg/errors v0.9.1\n[ci/leakdetector      ]   | go: downloading gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c\n[ci/leakdetector      ]   | go: downloading github.com/tsuru/config v0.0.0-20201023175036-375aaee8b560\n[ci/leakdetector      ]   | go: downloading github.com/kr/pretty v0.3.0\n[ci/leakdetector      ]   | go: downloading github.com/globalsign/mgo v0.0.0-20181015135952-eeefdecb41b8\n[ci/leakdetector      ]   | go: downloading github.com/prometheus/client_golang v1.11.1\n[ci/leakdetector      ]   | go: downloading github.com/gorilla/mux v1.8.0\n[ci/leakdetector      ]   | go: downloading github.com/fsouza/go-dockerclient v1.7.4\n[ci/leakdetector      ]   | go: downloading github.com/tsuru/commandmocker v0.0.0-20160909010208-e1d28f4f616a\n[ci/leakdetector      ]   | go: downloading github.com/opentracing/opentracing-go v1.2.0\n[ci/leakdetector      ]   | go: downloading golang.org/x/oauth2 v0.1.0\n[ci/leakdetector      ]   | go: downloading github.com/diego-araujo/go-saml v0.0.0-20151211102911-81203d242537\n[ci/leakdetector      ]   | go: downloading github.com/bradfitz/go-smtpd v0.0.0-20130623174436-5b56f4f917c7\n[ci/leakdetector      ]   | go: downloading github.com/docker/cli v20.10.20+incompatible\n[ci/leakdetector      ]   | go: downloading github.com/ghodss/yaml v1.0.0\n[ci/leakdetector      ]   | go: downloading github.com/nu7hatch/gouuid v0.0.0-20131221200532-179d4d0c4d8d\n[ci/leakdetector      ]   | go: downloading github.com/tsuru/deploy-agent v0.0.0-20221212211719-2bb1afb965c5\n[ci/leakdetector      ]   | go: downloading github.com/ugorji/go/codec v1.1.7\n[ci/leakdetector      ]   | go: downloading google.golang.org/grpc v1.45.0\n[ci/leakdetector      ]   | go: downloading k8s.io/api v0.22.5\n[ci/leakdetector      ]   | go: downloading k8s.io/apimachinery v0.22.5\n[ci/leakdetector      ]   | go: downloading k8s.io/autoscaler/vertical-pod-autoscaler v0.9.2\n[ci/leakdetector      ]   | go: downloading k8s.io/client-go v0.22.5\n[ci/leakdetector      ]   | go: downloading k8s.io/ingress-gce v1.20.1\n[ci/leakdetector      ]   | go: downloading k8s.io/apiextensions-apiserver v0.20.6\n[ci/leakdetector      ]   | go: downloading github.com/elazarl/goproxy v0.0.0-20190711103511-473e67f1d7d2\n[ci/leakdetector      ]   | go: downloading k8s.io/metrics v0.20.6\n[ci/leakdetector      ]   | go: downloading github.com/adhocore/gronx v1.1.2\n[ci/leakdetector      ]   | go: downloading github.com/google/uuid v1.2.0\n[ci/leakdetector      ]   | go: downloading github.com/imdario/mergo v0.3.12\n[ci/leakdetector      ]   | go: downloading gopkg.in/mgo.v2 v2.0.0-20180705113604-9856a29383ce\n[ci/leakdetector      ]   | go: downloading gopkg.in/yaml.v2 v2.4.0\n[ci/leakdetector      ]   | go: downloading github.com/docker/docker v20.10.20+incompatible\n[ci/leakdetector      ]   | go: downloading github.com/hashicorp/go-version v0.0.0-20180716215031-270f2f71b1ee\n[ci/leakdetector      ]   | go: downloading github.com/sajari/fuzzy v1.0.0\n[ci/leakdetector      ]   | go: downloading github.com/tsuru/gnuflag v0.0.0-20151217162021-86b8c1b864aa\n[ci/leakdetector      ]   | go: downloading github.com/tsuru/tablecli v0.0.0-20190131152944-7ded8a3383c6\n[ci/leakdetector      ]   | go: downloading golang.org/x/net v0.1.0\n[ci/leakdetector      ]   | go: downloading golang.org/x/sys v0.1.0\n[ci/leakdetector      ]   | go: downloading golang.org/x/term v0.1.0\n[ci/leakdetector      ]   | go: downloading github.com/tsuru/docker-cluster v0.0.0-20190325123005-f372d8d4e354\n[ci/leakdetector      ]   | go: downloading golang.org/x/crypto v0.1.0\n[ci/leakdetector      ]   | go: downloading github.com/tsuru/monsterqueue v0.0.0-20160909010522-70e946ec66c3\n[ci/leakdetector      ]   | go: downloading github.com/docker/machine v0.7.1-0.20190902101342-b170508bf44c\n[ci/leakdetector      ]   | go: downloading github.com/google/gops v0.0.0-20180311052415-160b358b10d6\n[ci/leakdetector      ]   | go: downloading github.com/cezarsa/form v0.0.0-20210510165411-863b166467b9\n[ci/leakdetector      ]   | go: downloading github.com/pmorie/go-open-service-broker-client v0.0.0-20180330214919-dca737037ce6\n[ci/leakdetector      ]   | go: downloading github.com/codegangsta/negroni v0.0.0-20140611175843-a13766a8c257\n[ci/leakdetector      ]   | go: downloading github.com/prometheus/common v0.30.0\n[ci/leakdetector      ]   | go: downloading github.com/uber/jaeger-client-go v2.25.0+incompatible\n[ci/leakdetector      ]   | go: downloading github.com/digitalocean/godo v0.0.0-20170404195252-dfa802149cae\n[ci/leakdetector      ]   | go: downloading github.com/andrestc/docker-machine-driver-cloudstack v0.9.2\n[ci/leakdetector      ]   | go: downloading github.com/aws/aws-sdk-go v1.28.2\n[ci/leakdetector      ]   | go: downloading github.com/mattn/go-shellwords v1.0.12\n[ci/leakdetector      ]   | go: downloading gopkg.in/amz.v3 v3.0.0-20161215130849-8c3190dff075\n[ci/leakdetector      ]   | go: downloading github.com/opentracing-contrib/go-stdlib v1.0.1-0.20201028152118-adbfc141dfc2\n[ci/leakdetector      ]   | go: downloading golang.org/x/text v0.4.0\n[ci/leakdetector      ]   | go: downloading github.com/felixge/fgprof v0.9.1\n[ci/leakdetector      ]   | go: downloading github.com/gorilla/websocket v1.4.2\n[ci/leakdetector      ]   | go: downloading github.com/kr/text v0.2.0\n[ci/leakdetector      ]   | go: downloading github.com/rogpeppe/go-internal v1.6.1\n[ci/leakdetector      ]   | go: downloading github.com/howeyc/fsnotify v0.9.0\n[ci/leakdetector      ]   | go: downloading github.com/RobotsAndPencils/go-saml v0.0.0-20150922030833-aa127de49a01\n[ci/leakdetector      ]   | go: downloading github.com/kardianos/osext v0.0.0-20151124170342-10da29423eb9\n[ci/leakdetector      ]   | go: downloading google.golang.org/protobuf v1.28.1\n[ci/verify-codegen    ]   \ud83d\udcac  ::debug::reserveCache - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[ci/leakdetector      ]   | go: downloading github.com/xanzy/go-cloudstack/v2 v2.8.0\n[ci/leakdetector      ]   | go: downloading cloud.google.com/go v0.97.0\n[ci/leakdetector      ]   | go: downloading github.com/golang/glog v0.0.0-20160126235308-23def4e6c14b\n[ci/leakdetector      ]   | go: downloading github.com/google/go-querystring v0.0.0-20150414214848-547ef5ac9797\n[ci/leakdetector      ]   | go: downloading github.com/tent/http-link-go v0.0.0-20130702225549-ac974c61c2f9\n[ci/leakdetector      ]   | go: downloading github.com/beorn7/perks v1.0.1\n[ci/leakdetector      ]   | go: downloading github.com/cespare/xxhash/v2 v2.1.2\n[ci/leakdetector      ]   | go: downloading github.com/golang/protobuf v1.5.2\n[ci/leakdetector      ]   | go: downloading github.com/prometheus/client_model v0.2.0\n[ci/leakdetector      ]   | go: downloading github.com/prometheus/procfs v0.7.3\n[ci/leakdetector      ]   | go: downloading google.golang.org/genproto v0.0.0-20211208223120-3a66f561d7aa\n[ci/leakdetector      ]   | go: downloading k8s.io/kube-openapi v0.0.0-20211109043538-20434351676c\n[ci/leakdetector      ]   | go: downloading github.com/gogo/protobuf v1.3.2\n[ci/leakdetector      ]   | go: downloading github.com/matttproud/golang_protobuf_extensions v1.0.2-0.20181231171920-c182affec369\n[ci/leakdetector      ]   | go: downloading github.com/docker/go-units v0.5.0\n[ci/leakdetector      ]   | go: downloading github.com/sirupsen/logrus v1.9.0\n[ci/leakdetector      ]   | go: downloading github.com/docker/docker-credential-helpers v0.7.0\n[ci/leakdetector      ]   | go: downloading github.com/uber/jaeger-lib v2.2.0+incompatible\n[ci/leakdetector      ]   | go: downloading go.uber.org/atomic v1.4.0\n[ci/leakdetector      ]   | go: downloading k8s.io/klog/v2 v2.50.2\n[ci/leakdetector      ]   | go: downloading k8s.io/utils v0.0.0-20220210201930-3a6ce19ff2f9\n[ci/leakdetector      ]   | go: downloading github.com/spf13/pflag v1.0.5\n[ci/leakdetector      ]   | go: downloading github.com/evanphx/json-patch v4.11.0+incompatible\n[ci/leakdetector      ]   | go: downloading github.com/googleapis/gnostic v0.5.5\n[ci/leakdetector      ]   | go: downloading golang.org/x/time v0.0.0-20210723032227-1f47c861a9ac\n[ci/leakdetector      ]   | go: downloading github.com/google/pprof v0.0.0-20210720184732-4bb14d4b1be1\n[ci/leakdetector      ]   | go: downloading github.com/exoscale/egoscale v0.9.23\n[ci/leakdetector      ]   | go: downloading google.golang.org/api v0.60.0\n[ci/leakdetector      ]   | go: downloading github.com/rackspace/gophercloud v0.0.0-20160825135439-c90cb954266e\n[ci/leakdetector      ]   | go: downloading github.com/davecgh/go-spew v1.1.1\n[ci/leakdetector      ]   | go: downloading github.com/intel-go/cpuid v0.0.0-20181003105527-1a4a6f06a1c6\n[ci/leakdetector      ]   | go: downloading github.com/vmware/govcloudair v0.0.2\n[ci/leakdetector      ]   | go: downloading github.com/go-logr/logr v1.2.2\n[ci/leakdetector      ]   | go: downloading sigs.k8s.io/structured-merge-diff/v4 v4.1.2\n[ci/leakdetector      ]   | go: downloading github.com/cezarsa/dockerclient v0.0.0-20190924055524-af5052a88081\n[ci/leakdetector      ]   | go: downloading github.com/morikuni/aec v1.0.0\n[ci/leakdetector      ]   | go: downloading github.com/opencontainers/image-spec v1.1.0-rc2\n[ci/leakdetector      ]   | go: downloading github.com/moby/term v0.0.0-20221105221325-4eb28fa6025c\n[ci/leakdetector      ]   | go: downloading github.com/docker/go-connections v0.4.0\n[ci/leakdetector      ]   | go: downloading github.com/moby/sys/mount v0.2.0\n[ci/leakdetector      ]   | go: downloading github.com/containerd/containerd v1.6.3-0.20220401172941-5ff8fce1fcc6\n[ci/leakdetector      ]   | go: downloading github.com/opencontainers/runc v1.1.1\n[ci/leakdetector      ]   | go: downloading github.com/jinzhu/copier v0.0.0-20180308034124-7e38e58719c3\n[ci/leakdetector      ]   | go: downloading github.com/moby/sys/mountinfo v0.5.0\n[ci/leakdetector      ]   | go: downloading github.com/jmespath/go-jmespath v0.0.0-20180206201540-c2b33e8439af\n[ci/leakdetector      ]   | go: downloading github.com/cenkalti/backoff v0.0.0-20160904140958-8edc80b07f38\n[ci/leakdetector      ]   | go: downloading sigs.k8s.io/yaml v1.2.0\n[ci/leakdetector      ]   | go: downloading gopkg.in/inf.v0 v0.9.1\n[ci/leakdetector      ]   | go: downloading github.com/google/gofuzz v1.2.0\n[ci/leakdetector      ]   | go: downloading github.com/google/go-cmp v0.5.8\n[ci/leakdetector      ]   | go: downloading github.com/moby/spdystream v0.2.0\n[ci/leakdetector      ]   | go: downloading github.com/modern-go/reflect2 v1.0.2\n[ci/leakdetector      ]   | go: downloading github.com/json-iterator/go v1.1.12\n[ci/leakdetector      ]   | go: downloading github.com/opencontainers/go-digest v1.0.0\n[ci/leakdetector      ]   | go: downloading github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd\n[ci/leakdetector      ]   | go: downloading gopkg.in/yaml.v3 v3.0.1\n[ci/leakdetector      ]   | go: downloading github.com/emicklei/go-restful v2.9.5+incompatible\n[ci/leakdetector      ]   | go: downloading github.com/go-openapi/swag v0.19.5\n[ci/leakdetector      ]   | go: downloading github.com/go-openapi/jsonreference v0.20.0\n[ci/leakdetector      ]   | go: downloading github.com/go-openapi/jsonpointer v0.19.5\n[ci/leakdetector      ]   | go: downloading github.com/mailru/easyjson v0.7.0\n[ci/leakdetector      ]   | go: downloading github.com/mitchellh/mapstructure v1.1.2\n[ci/verify-codegen    ]   | [warning]reserveCache failed: Cache Service Url not found, unable to restore cache.\n[ci/verify-codegen    ]   \u2705  Success - Post actions/cache@v2\n[ci/leakdetector      ]   | go: downloading go.opencensus.io v0.23.0\n[ci/leakdetector      ]   | go: downloading github.com/googleapis/gax-go/v2 v2.1.1\n[ci/leakdetector      ]   | go: downloading github.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da\n[ci/verify-codegen    ] \ud83c\udfc1  Job succeeded\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | goroutine 27 [running]:\n[ci/leakdetector      ]   | runtime/debug.Stack()\n[ci/leakdetector      ]   | \t/opt/hostedtoolcache/go/1.19.9/x64/src/runtime/debug/stack.go:24 +0x65\n[ci/leakdetector      ]   | runtime/debug.PrintStack()\n[ci/leakdetector      ]   | \t/opt/hostedtoolcache/go/1.19.9/x64/src/runtime/debug/stack.go:16 +0x19\n[ci/leakdetector      ]   | github.com/tsuru/tsuru/action.(*Pipeline).Execute.func1()\n[ci/leakdetector      ]   | \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/action/action.go:156 +0x173\n[ci/leakdetector      ]   | panic({0x7a48c0, 0x8bd190})\n[ci/leakdetector      ]   | \t/opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884 +0x212\n[ci/leakdetector      ]   | github.com/tsuru/tsuru/action.glob..func5({{0x8c29e0, 0xc000225980}, {0x7a48c0, 0x8bd160}, {0xc000190380, 0x2, 0x2}})\n[ci/leakdetector      ]   | \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/action/stubs_test.go:29 +0x4a\n[ci/leakdetector      ]   | github.com/tsuru/tsuru/action.(*Pipeline).Execute(0xc0002c5728, {0x8c2970?, 0xc000236008?}, {0xc000190380, 0x2, 0x2})\n[ci/leakdetector      ]   | \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/action/action.go:174 +0x3f4\n[ci/leakdetector      ]   | github.com/tsuru/tsuru/action.(*S).TestRollbackOnPanic(0x0?, 0xc00029e690)\n[ci/leakdetector      ]   | \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/action/action_test.go:90 +0x299\n[ci/leakdetector      ]   | reflect.Value.call({0x7f9b40?, 0xb322e8?, 0x1e13?}, {0x81aaf6, 0x4}, {0xc000187f08, 0x1, 0x1?})\n[ci/leakdetector      ]   | \t/opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:584 +0x8c5\n[ci/leakdetector      ]   | reflect.Value.Call({0x7f9b40?, 0xb322e8?, 0xc00026a0f0?}, {0xc000171f08?, 0x0?, 0xc000171e96?})\n[ci/leakdetector      ]   | \t/opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368 +0xbc\n[ci/leakdetector      ]   | gopkg.in/check%2ev1.(*suiteRunner).forkTest.func1(0xc00029e690)\n[ci/leakdetector      ]   | \t/home/runneradmin/go/pkg/mod/gopkg.in/check.v1@v1.0.0-20201130134442-10cb98267c6c/check.go:775 +0x632\n[ci/leakdetector      ]   | gopkg.in/check%2ev1.(*suiteRunner).forkCall.func1()\n[ci/leakdetector      ]   | \t/home/runneradmin/go/pkg/mod/gopkg.in/check.v1@v1.0.0-20201130134442-10cb98267c6c/check.go:669 +0xa2\n[ci/leakdetector      ]   | created by gopkg.in/check%2ev1.(*suiteRunner).forkCall\n[ci/leakdetector      ]   | \t/home/runneradmin/go/pkg/mod/gopkg.in/check.v1@v1.0.0-20201130134442-10cb98267c6c/check.go:666 +0x285\n[ci/leakdetector      ]   | OK: 10 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.05s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/action\t0.800s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | Using \"mongodb\" database \"tsuru_api_auth_test\" from the server \"127.0.0.1:27017?maxPoolSize=100\".\n[ci/leakdetector      ]   | could not initialize plan service: no reachable servers\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/api\t0.049s\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/api/apitest\t[no test files]\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: context_test.go:42: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | context_test.go:44:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: context_test.go:83: S.TestAddRequestError\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: context_test.go:55: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | context_test.go:57:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 0 passed, 2 FAILED, 7 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.00s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/api/context\t0.369s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | GET /apps\n[ci/leakdetector      ]   | POST /apps\n[ci/leakdetector      ]   | PUT /apps\n[ci/leakdetector      ]   | DELETE /apps\n[ci/leakdetector      ]   | POST /node/status\n[ci/leakdetector      ]   | OK: 6 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.35s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/api/observability\t0.793s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 5 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.01s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/api/router\t0.223s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 3 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.12s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/api/shutdown\t0.379s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: tracker_test.go:40: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | tracker_test.go:42:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: tracker_test.go:47: S.Test_InstanceService\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: tracker_test.go:33: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | tracker_test.go:35:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 0 passed, 2 FAILED, 3 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.00s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/api/tracker\t0.039s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: platform_test.go:29: PlatformSuite.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | platform_test.go:34:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: platform_test.go:38: PlatformSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439811)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | platform_test.go:39\n[ci/leakdetector      ]   |   in PlatformSuite.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:98: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:111:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: suite_test.go:121: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439811)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:83\n[ci/leakdetector      ]   |   in Storage.Close\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:82\n[ci/leakdetector      ]   |   in Storage.Apps\n[ci/leakdetector      ]   | suite_test.go:123\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 0 passed, 2 FAILED, 2 FIXTURE-PANICKED, 378 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.01s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/app\t0.497s\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/app/bind\t[no test files]\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:29: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:37:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: suite_test.go:51: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439751)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:83\n[ci/leakdetector      ]   |   in Storage.Close\n[ci/leakdetector      ]   | suite_test.go:52\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 9 passed, 1 FAILED, 1 FIXTURE-PANICKED, 3 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.01s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/app/image\t1.011s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: gc_test.go:55: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | gc_test.go:65:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: gc_test.go:108: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439811)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:82\n[ci/leakdetector      ]   |   in Storage.Apps\n[ci/leakdetector      ]   | gc_test.go:109\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 1 FIXTURE-PANICKED, 10 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.01s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/app/image/gc\t0.264s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: migrate_test.go:23: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | migrate_test.go:28:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: migrate_test.go:31: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439591)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | migrate_test.go:32\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 1 FIXTURE-PANICKED, 1 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.00s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/app/image/migrate\t0.673s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: migrate_test.go:31: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | migrate_test.go:37:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: migrate_test.go:41: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439751)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:82\n[ci/leakdetector      ]   |   in Storage.Apps\n[ci/leakdetector      ]   | migrate_test.go:42\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 1 FIXTURE-PANICKED, 5 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.01s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/app/migrate\t0.176s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:25: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:33:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: suite_test.go:40: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439751)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:83\n[ci/leakdetector      ]   |   in Storage.Close\n[ci/leakdetector      ]   | suite_test.go:41\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 1 FIXTURE-PANICKED, 14 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.04s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/app/version\t1.193s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: provisioner_wrapper_test.go:85: ProvisionerWrapperSuite.Test_List_LogTypeJob\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | provisioner_wrapper_test.go:90:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: provisioner_wrapper_test.go:131: ProvisionerWrapperSuite.Test_Watch_LogTypeJob\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | provisioner_wrapper_test.go:137:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:61: ServiceSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:63:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: service_test.go:196: ServiceSuite.TestWatch\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:54: ServiceSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:56:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:37: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:39:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: aggregator_test.go:67: S.Test_Aggregator_List\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:30: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:32:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 4 passed, 6 FAILED, 31 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.01s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/applog\t0.187s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: suite_test.go:56: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439751)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:82\n[ci/leakdetector      ]   |   in Storage.Apps\n[ci/leakdetector      ]   | suite_test.go:57\n[ci/leakdetector      ]   |   in S.SetUpTest\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: suite_test.go:73: S.TearDownTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439751)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | authtest/smtp.go:65\n[ci/leakdetector      ]   |   in SMTPServer.Stop\n[ci/leakdetector      ]   | suite_test.go:74\n[ci/leakdetector      ]   |   in S.TearDownTest\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: user_test.go:368: S.TestAddRolesForEvent\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: suite_test.go:51: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439751)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:82\n[ci/leakdetector      ]   |   in Storage.Apps\n[ci/leakdetector      ]   | suite_test.go:52\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 0 passed, 3 FIXTURE-PANICKED, 56 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.04s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/auth\t1.496s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | 2023/05/30 10:35:37 mail from: \"gopher@tsuru.io\"\n[ci/leakdetector      ]   | 2023/05/30 10:35:37 mail from: \"gopher@tsuru.io\"\n[ci/leakdetector      ]   | 2023/05/30 10:35:37 Client error: read error: read tcp 127.0.0.1:45085->127.0.0.1:42124: read: connection reset by peer\n[ci/leakdetector      ]   | OK: 6 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.05s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/auth/authtest\t1.012s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:49: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:53:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.fundamental = Failed to connect to MongoDB \"127.0.0.1:27017?maxPoolSize=100\" - no reachable servers. (\"Failed to connect to MongoDB \\\"127.0.0.1:27017?maxPoolSize=100\\\" - no reachable servers.\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: suite_test.go:59: S.TearDownTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439751)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:121\n[ci/leakdetector      ]   |   in Storage.Users\n[ci/leakdetector      ]   | suite_test.go:60\n[ci/leakdetector      ]   |   in S.TearDownTest\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: native_test.go:126: S.TestChangePassword\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:67: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:70:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 0 passed, 2 FAILED, 1 FIXTURE-PANICKED, 71 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.02s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/auth/native\t1.578s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: suite_test.go:58: S.TearDownTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439751)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:121\n[ci/leakdetector      ]   |   in Storage.Users\n[ci/leakdetector      ]   | suite_test.go:59\n[ci/leakdetector      ]   |   in S.TearDownTest\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: token_test.go:58: S.TestDelete\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:64: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:67:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 1 FIXTURE-PANICKED, 25 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.00s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/auth/oauth\t1.790s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: suite_test.go:63: S.TearDownTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439751)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:121\n[ci/leakdetector      ]   |   in Storage.Users\n[ci/leakdetector      ]   | suite_test.go:64\n[ci/leakdetector      ]   |   in S.TearDownTest\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: token_test.go:13: S.TestGetToken\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | token_test.go:16:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FIXTURE-PANICKED, 20 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.02s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/auth/saml\t1.715s\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/auth/saml/errors\t[no test files]\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: autoscale_test.go:56: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | autoscale_test.go:61:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: autoscale_test.go:108: S.TearDownTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439811)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:83\n[ci/leakdetector      ]   |   in Storage.Close\n[ci/leakdetector      ]   | autoscale_test.go:110\n[ci/leakdetector      ]   |   in S.TearDownTest\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: autoscale_test.go:1123: S.TestAutoScaleCanRemoveNode\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 1 FIXTURE-PANICKED, 31 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.01s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/autoscale\t0.227s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 10 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.00s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/builder\t1.197s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:55: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:67:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: suite_test.go:74: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439811)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:82\n[ci/leakdetector      ]   |   in Storage.Apps\n[ci/leakdetector      ]   | suite_test.go:75\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 1 FIXTURE-PANICKED, 26 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.05s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/builder/docker\t0.795s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:77: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:87:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: suite_test.go:90: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x4398D1)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:83\n[ci/leakdetector      ]   |   in Storage.Close\n[ci/leakdetector      ]   | suite_test.go:91\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 1 FIXTURE-PANICKED, 34 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.00s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/builder/kubernetes\t0.050s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | 2023/05/30 10:35:41 RoundTripper returned a response & error; ignoring response\n[ci/leakdetector      ]   | OK: 184 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.26s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/cmd\t1.020s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 5 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.00s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/cmd/cmdtest\t0.587s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:24: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:27:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: api_test.go:28: S.TestAPICmdCheckOnlyWarnings\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:32: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:34:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 19 passed, 2 FAILED, 21 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.01s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/cmd/tsurud\t0.071s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 2 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.00s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/config\t0.259s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: storage_test.go:110: S.TestApps\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | storage_test.go:112:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: storage_test.go:68: S.TestHealthCheck\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | storage_test.go:70:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: storage_test.go:156: S.TestInstallHosts\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | storage_test.go:158:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: storage_test.go:92: S.TestPasswordTokens\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | storage_test.go:94:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: storage_test.go:129: S.TestPools\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | storage_test.go:131:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: storage_test.go:147: S.TestRoles\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | storage_test.go:149:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: storage_test.go:138: S.TestServiceInstances\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | storage_test.go:140:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: storage_test.go:120: S.TestServices\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | storage_test.go:122:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: storage_test.go:83: S.TestTokens\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | storage_test.go:85:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: storage_test.go:101: S.TestUserActions\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | storage_test.go:103:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: storage_test.go:73: S.TestUsers\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | storage_test.go:75:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: storage_test.go:59: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | storage_test.go:61:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 0 passed, 12 FAILED\n[ci/leakdetector      ]   | --- FAIL: Test (0.02s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/db\t0.695s\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/db/dbtest\t[no test files]\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: storage_test.go:63: S.TestClose\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | storage_test.go:69:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | storage_test.go:69:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | storage_test.go:66:\n[ci/leakdetector      ]   |     c.Check(r, check.NotNil)\n[ci/leakdetector      ]   | ... value = nil\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: storage_test.go:75: S.TestCollection\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439591)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | storage_test.go:77\n[ci/leakdetector      ]   |   in S.TestCollection\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: storage_test.go:30: S.TestOpenConnectsToTheDatabase\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | storage_test.go:32:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: storage_test.go:37: S.TestOpenCopiesConnection\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | storage_test.go:39:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: storage_test.go:47: S.TestOpenReconnects\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | storage_test.go:49:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: storage_test.go:20: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | storage_test.go:22:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 1 passed, 5 FAILED, 1 PANICKED\n[ci/leakdetector      ]   | --- FAIL: Test (0.01s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/db/storage\t0.536s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 11 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.00s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/errors\t0.621s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: event_test.go:51: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | event_test.go:56:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: block_test.go:15: S.TestAddBlock\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: eventlist_test.go:43: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | eventlist_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: eventlist_test.go:172: S.TestGetByID\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | OOPS: 0 passed, 2 FAILED, 61 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.01s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/event\t0.769s\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/event/eventtest\t[no test files]\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: migrate_test.go:43: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | migrate_test.go:47:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: migrate_test.go:127: S.TestMigrateRCEventsInvalidTarget\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 3 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.00s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/event/migrate\t0.231s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: webhook_test.go:36: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | webhook_test.go:40:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: webhook_test.go:50: S.TearDownTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439751)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | webhook.go:107\n[ci/leakdetector      ]   |   in webhookService.Shutdown\n[ci/leakdetector      ]   | webhook_test.go:51\n[ci/leakdetector      ]   |   in S.TearDownTest\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: webhook_test.go:252: S.TestWebhookServiceCreate\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 1 FIXTURE-PANICKED, 10 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.06s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/event/webhook\t1.590s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 3 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.90s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/exec\t1.230s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 23 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.00s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/exec/exectest\t0.237s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 10 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.00s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/fs\t0.297s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 52 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.03s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/fs/fstest\t0.214s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 3 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.19s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/git\t0.483s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 2 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.00s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/hc\t0.275s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:38: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:46:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: healer_node_test.go:993: S.TestCheckActiveHealing\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:52: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:54:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 0 passed, 2 FAILED, 32 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.00s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/healer\t0.841s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:21: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:29:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: hc_test.go:16: S.TestBuildHealthCheck\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:37: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:39:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 0 passed, 2 FAILED, 49 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.00s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/iaas\t0.990s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:156: cloudstackSuite.TestBuildUrlToCloudstack\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:159:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:76: cloudstackSuite.TestCreateMachine\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:97:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:114: cloudstackSuite.TestCreateMachineAsyncFailure\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:131:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:403: cloudstackSuite.TestCreateMachineTimeout\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:443:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:145: cloudstackSuite.TestCreateMachineValidateParams\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:148:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:176: cloudstackSuite.TestCreateMachineWithTags\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:201:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:40: cloudstackSuite.TestCreateMachineWithoutProjectID\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:61:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:264: cloudstackSuite.TestDeleteMachine\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:294:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:309: cloudstackSuite.TestDeleteMachineAsyncFail\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:332:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:344: cloudstackSuite.TestDeleteMachineError\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:352:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:358: cloudstackSuite.TestDeleteMachineErrorNoServer\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:362:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:219: cloudstackSuite.TestDeleteMachineWithoutProjectID\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:249:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:368: cloudstackSuite.TestHealthCheck\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:378:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:385: cloudstackSuite.TestHealthCheckFailure\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:395:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 0 passed, 14 FAILED\n[ci/leakdetector      ]   | --- FAIL: Test (0.17s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/iaas/cloudstack\t1.073s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 5 passed\n[ci/leakdetector      ]   | --- PASS: Test (1.01s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/iaas/digitalocean\t1.925s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | Trying to access option swarm-master which does not exist\n[ci/leakdetector      ]   | THIS ***WILL*** CAUSE UNEXPECTED BEHAVIOR\n[ci/leakdetector      ]   | Type assertion did not go smoothly to bool for key swarm-master\n[ci/leakdetector      ]   | Trying to access option swarm-host which does not exist\n[ci/leakdetector      ]   | THIS ***WILL*** CAUSE UNEXPECTED BEHAVIOR\n[ci/leakdetector      ]   | Type assertion did not go smoothly to string for key swarm-host\n[ci/leakdetector      ]   | Trying to access option swarm-discovery which does not exist\n[ci/leakdetector      ]   | THIS ***WILL*** CAUSE UNEXPECTED BEHAVIOR\n[ci/leakdetector      ]   | Type assertion did not go smoothly to string for key swarm-discovery\n[ci/leakdetector      ]   | Trying to access option swarm-master which does not exist\n[ci/leakdetector      ]   | THIS ***WILL*** CAUSE UNEXPECTED BEHAVIOR\n[ci/leakdetector      ]   | Type assertion did not go smoothly to bool for key swarm-master\n[ci/leakdetector      ]   | Trying to access option swarm-host which does not exist\n[ci/leakdetector      ]   | THIS ***WILL*** CAUSE UNEXPECTED BEHAVIOR\n[ci/leakdetector      ]   | Type assertion did not go smoothly to string for key swarm-host\n[ci/leakdetector      ]   | Trying to access option swarm-discovery which does not exist\n[ci/leakdetector      ]   | THIS ***WILL*** CAUSE UNEXPECTED BEHAVIOR\n[ci/leakdetector      ]   | Type assertion did not go smoothly to string for key swarm-discovery\n[ci/leakdetector      ]   | 2023/05/30 10:36:14 DEBUG: Request ec2/DescribeAccountAttributes Details:\n[ci/leakdetector      ]   | ---[ REQUEST POST-SIGN ]-----------------------------\n[ci/leakdetector      ]   | POST / HTTP/1.1\r\n[ci/leakdetector      ]   | Host: ec2.us-east-1.amazonaws.com\r\n[ci/leakdetector      ]   | User-Agent: aws-sdk-go/1.28.2 (go1.19.9; linux; amd64)\r\n[ci/leakdetector      ]   | Content-Length: 51\r\n[ci/leakdetector      ]   | Authorization: AWS4-HMAC-SHA256 Credential=abc/20230530/us-east-1/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=6a4ab24081c4a9169ce373531129df59897fd566d1913c0b5696e7808e5532dd\r\n[ci/leakdetector      ]   | Content-Type: application/x-www-form-urlencoded; charset=utf-8\r\n[ci/leakdetector      ]   | X-Amz-Date: 20230530T103614Z\r\n[ci/leakdetector      ]   | Accept-Encoding: gzip\r\n[ci/leakdetector      ]   | \r\n[ci/leakdetector      ]   | Action=DescribeAccountAttributes&Version=2016-11-15\n[ci/leakdetector      ]   | -----------------------------------------------------\n[ci/leakdetector      ]   | 2023/05/30 10:36:15 DEBUG: Response ec2/DescribeAccountAttributes Details:\n[ci/leakdetector      ]   | ---[ RESPONSE ]--------------------------------------\n[ci/leakdetector      ]   | HTTP/1.1 401 Unauthorized\r\n[ci/leakdetector      ]   | Transfer-Encoding: chunked\r\n[ci/leakdetector      ]   | Cache-Control: no-cache, no-store\r\n[ci/leakdetector      ]   | Content-Type: text/xml;charset=UTF-8\r\n[ci/leakdetector      ]   | Date: Tue, 30 May 2023 10:36:14 GMT\r\n[ci/leakdetector      ]   | Server: AmazonEC2\r\n[ci/leakdetector      ]   | Strict-Transport-Security: max-age=31536000; includeSubDomains\r\n[ci/leakdetector      ]   | Vary: accept-encoding\r\n[ci/leakdetector      ]   | X-Amzn-Requestid: 6dd62176-b376-4d9d-9a07-41d87ea3d126\r\n[ci/leakdetector      ]   | \r\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | -----------------------------------------------------\n[ci/leakdetector      ]   | 2023/05/30 10:36:15 <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n[ci/leakdetector      ]   | <Response><Errors><Error><Code>AuthFailure</Code><Message>AWS was not able to validate the provided access credentials</Message></Error></Errors><RequestID>6dd62176-b376-4d9d-9a07-41d87ea3d126</RequestID></Response>\n[ci/leakdetector      ]   | Couldn't determine your account Default VPC ID : \"AuthFailure: AWS was not able to validate the provided access credentials\\n\\tstatus code: 401, request id: 6dd62176-b376-4d9d-9a07-41d87ea3d126\"\n[ci/leakdetector      ]   | Trying to access option swarm-master which does not exist\n[ci/leakdetector      ]   | THIS ***WILL*** CAUSE UNEXPECTED BEHAVIOR\n[ci/leakdetector      ]   | Type assertion did not go smoothly to bool for key swarm-master\n[ci/leakdetector      ]   | Trying to access option swarm-host which does not exist\n[ci/leakdetector      ]   | THIS ***WILL*** CAUSE UNEXPECTED BEHAVIOR\n[ci/leakdetector      ]   | Type assertion did not go smoothly to string for key swarm-host\n[ci/leakdetector      ]   | Trying to access option swarm-discovery which does not exist\n[ci/leakdetector      ]   | THIS ***WILL*** CAUSE UNEXPECTED BEHAVIOR\n[ci/leakdetector      ]   | Type assertion did not go smoothly to string for key swarm-discovery\n[ci/leakdetector      ]   | 2023/05/30 10:36:27 DEBUG: Request ec2/DescribeAccountAttributes Details:\n[ci/leakdetector      ]   | ---[ REQUEST POST-SIGN ]-----------------------------\n[ci/leakdetector      ]   | POST / HTTP/1.1\r\n[ci/leakdetector      ]   | Host: ec2.us-east-1.amazonaws.com\r\n[ci/leakdetector      ]   | User-Agent: aws-sdk-go/1.28.2 (go1.19.9; linux; amd64)\r\n[ci/leakdetector      ]   | Content-Length: 51\r\n[ci/leakdetector      ]   | Authorization: AWS4-HMAC-SHA256 Credential=access-key/20230530/us-east-1/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=fca326af2f82556ad5f3434f9a51740a1df4ddbbfaa0a9c9e004ec2ed9439340\r\n[ci/leakdetector      ]   | Content-Type: application/x-www-form-urlencoded; charset=utf-8\r\n[ci/leakdetector      ]   | X-Amz-Date: 20230530T103627Z\r\n[ci/leakdetector      ]   | Accept-Encoding: gzip\r\n[ci/leakdetector      ]   | \r\n[ci/leakdetector      ]   | Action=DescribeAccountAttributes&Version=2016-11-15\n[ci/leakdetector      ]   | -----------------------------------------------------\n[ci/leakdetector      ]   | 2023/05/30 10:36:28 DEBUG: Response ec2/DescribeAccountAttributes Details:\n[ci/leakdetector      ]   | ---[ RESPONSE ]--------------------------------------\n[ci/leakdetector      ]   | HTTP/1.1 401 Unauthorized\r\n[ci/leakdetector      ]   | Transfer-Encoding: chunked\r\n[ci/leakdetector      ]   | Cache-Control: no-cache, no-store\r\n[ci/leakdetector      ]   | Content-Type: text/xml;charset=UTF-8\r\n[ci/leakdetector      ]   | Date: Tue, 30 May 2023 10:36:28 GMT\r\n[ci/leakdetector      ]   | Server: AmazonEC2\r\n[ci/leakdetector      ]   | Strict-Transport-Security: max-age=31536000; includeSubDomains\r\n[ci/leakdetector      ]   | Vary: accept-encoding\r\n[ci/leakdetector      ]   | X-Amzn-Requestid: 22354975-caef-4b28-9e4f-4330bd8cddae\r\n[ci/leakdetector      ]   | \r\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | -----------------------------------------------------\n[ci/leakdetector      ]   | 2023/05/30 10:36:28 <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n[ci/leakdetector      ]   | <Response><Errors><Error><Code>AuthFailure</Code><Message>AWS was not able to validate the provided access credentials</Message></Error></Errors><RequestID>22354975-caef-4b28-9e4f-4330bd8cddae</RequestID></Response>\n[ci/leakdetector      ]   | Couldn't determine your account Default VPC ID : \"AuthFailure: AWS was not able to validate the provided access credentials\\n\\tstatus code: 401, request id: 22354975-caef-4b28-9e4f-4330bd8cddae\"\n[ci/leakdetector      ]   | OK: 24 passed\n[ci/leakdetector      ]   | --- PASS: Test (33.45s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/iaas/dockermachine\t34.060s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:204: S.TestCreateMachine\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:213:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:224: S.TestCreateMachineTimeoutError\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:274:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:329: S.TestCreateMachineValidations\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:332:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:344: S.TestDeleteMachine\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:352:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:357: S.TestDeleteMachineValidations\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:361:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:281: S.TestWaitForDnsName\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:285:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: iaas_test.go:303: S.TestWaitForDnsNamePrivateDNSName\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | iaas_test.go:307:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 4 passed, 7 FAILED\n[ci/leakdetector      ]   | --- FAIL: Test (0.06s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/iaas/ec2\t0.752s\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/iaas/testing\t[no test files]\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | 2023/05/30 10:35:40 Using INTEGRATION HOME: /tmp/tsuru-integration478936855\n[ci/leakdetector      ]   | OK: 2 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.00s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/integration\t0.593s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 39 passed\n[ci/leakdetector      ]   | --- PASS: Test (2.03s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/io\t2.637s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:116: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:126:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: suite_test.go:58: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439811)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:83\n[ci/leakdetector      ]   |   in Storage.Close\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:82\n[ci/leakdetector      ]   |   in Storage.Apps\n[ci/leakdetector      ]   | suite_test.go:61\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 1 FIXTURE-PANICKED, 9 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.01s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/job\t0.843s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 23 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.01s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/log\t0.915s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: migration_test.go:28: Suite.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | migration_test.go:34:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: migration_test.go:45: Suite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439591)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:82\n[ci/leakdetector      ]   |   in Storage.Apps\n[ci/leakdetector      ]   | migration_test.go:46\n[ci/leakdetector      ]   |   in Suite.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 1 FIXTURE-PANICKED, 9 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.00s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/migration\t0.640s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | Dial15Full300Client\n[ci/leakdetector      ]   | Dial15Full300Client OK\n[ci/leakdetector      ]   | Dial15FullUnlimitedClient\n[ci/leakdetector      ]   | Dial15FullUnlimitedClient OK\n[ci/leakdetector      ]   | Dial15Full300ClientNoKeepAlive\n[ci/leakdetector      ]   | Dial15Full300ClientNoKeepAlive OK\n[ci/leakdetector      ]   | Dial15Full60ClientNoKeepAlive\n[ci/leakdetector      ]   | Dial15Full60ClientNoKeepAlive OK\n[ci/leakdetector      ]   | Dial15Full60ClientNoKeepAliveNoRedirect\n[ci/leakdetector      ]   | Dial15Full60ClientNoKeepAliveNoRedirect OK\n[ci/leakdetector      ]   | Dial15Full60ClientNoKeepAliveNoRedirectInsecure\n[ci/leakdetector      ]   | Dial15Full60ClientNoKeepAliveNoRedirectInsecure OK\n[ci/leakdetector      ]   | Dial15Full60ClientNoKeepAliveInsecure\n[ci/leakdetector      ]   | Dial15Full60ClientNoKeepAliveInsecure OK\n[ci/leakdetector      ]   | Dial15Full60ClientWithPool\n[ci/leakdetector      ]   | Dial15Full60ClientWithPool OK\n[ci/leakdetector      ]   | Dial15Full300ClientWithPool\n[ci/leakdetector      ]   | Dial15Full300ClientWithPool OK\n[ci/leakdetector      ]   | OK: 4 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.00s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/net\t0.820s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:22: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:26:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: role_test.go:243: S.TestAdd\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:31: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:33:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 0 passed, 2 FAILED, 26 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.03s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/permission\t0.787s\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/permission/generator\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/permission/permissiontest\t[no test files]\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:18: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:25:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: suite_test.go:29: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439811)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:82\n[ci/leakdetector      ]   |   in Storage.Apps\n[ci/leakdetector      ]   | suite_test.go:30\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: limiter_test.go:32: LimiterSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | Test with s.limiter: *provision.LocalLimiter\n[ci/leakdetector      ]   | limiter_test.go:39:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: limiter_test.go:53: LimiterSuite.TestLimiterAddDone\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: limiter_test.go:32: LimiterSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | Test with s.limiter: *provision.MongodbLimiter\n[ci/leakdetector      ]   | limiter_test.go:39:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: limiter_test.go:53: LimiterSuite.TestLimiterAddDone\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: env_test.go:26: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | env_test.go:30:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: env_test.go:47: S.TestEnvsForApp\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | OOPS: 14 passed, 4 FAILED, 1 FIXTURE-PANICKED, 23 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.01s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/provision\t0.674s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: cluster_test.go:31: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | cluster_test.go:38:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: cluster_test.go:47: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439811)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:83\n[ci/leakdetector      ]   |   in Storage.Close\n[ci/leakdetector      ]   | cluster_test.go:48\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 1 FIXTURE-PANICKED, 19 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.00s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/provision/cluster\t0.880s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: handlers_test.go:57: HandlersSuite.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | handlers_test.go:76:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: handlers_test.go:117: HandlersSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439811)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /home/runneradmin/go/pkg/mod/github.com/globalsign/mgo@v0.0.0-20181015135952-eeefdecb41b8/session.go:2059\n[ci/leakdetector      ]   |   in Session.Close\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:83\n[ci/leakdetector      ]   |   in Storage.Close\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | provisioner.go:696\n[ci/leakdetector      ]   |   in dockerProvisioner.Collection\n[ci/leakdetector      ]   | handlers_test.go:120\n[ci/leakdetector      ]   |   in HandlersSuite.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:78: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:110:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: suite_test.go:210: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:215:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439811)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /home/runneradmin/go/pkg/mod/github.com/globalsign/mgo@v0.0.0-20181015135952-eeefdecb41b8/session.go:2059\n[ci/leakdetector      ]   |   in Session.Close\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:83\n[ci/leakdetector      ]   |   in Storage.Close\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:522\n[ci/leakdetector      ]   |   in Goexit\n[ci/leakdetector      ]   | suite_test.go:215\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 0 passed, 2 FAILED, 2 FIXTURE-PANICKED, 247 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.01s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/provision/docker\t0.102s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: clusterclient_test.go:46: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | clusterclient_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: clusterclient_test.go:59: S.TearDownTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439811)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /home/runneradmin/go/pkg/mod/github.com/fsouza/go-dockerclient@v1.7.4/testing/server.go:326\n[ci/leakdetector      ]   |   in DockerServer.Stop\n[ci/leakdetector      ]   | clusterclient_test.go:60\n[ci/leakdetector      ]   |   in S.TearDownTest\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: clusterclient_test.go:285: S.TestSchedulerClientCreateContainerFailure\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 1 FIXTURE-PANICKED, 7 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.00s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/provision/docker/clusterclient\t0.735s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 2 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.00s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/provision/docker/cmds\t0.744s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:53: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:55:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: suite_test.go:66: S.TearDownTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439811)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /home/runneradmin/go/pkg/mod/github.com/fsouza/go-dockerclient@v1.7.4/testing/server.go:326\n[ci/leakdetector      ]   |   in DockerServer.Stop\n[ci/leakdetector      ]   | suite_test.go:67\n[ci/leakdetector      ]   |   in S.TearDownTest\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: bs_test.go:12: S.TestBsSysLogPort\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:70: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:72:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 0 passed, 2 FAILED, 1 FIXTURE-PANICKED, 49 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.01s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/provision/docker/container\t0.656s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: provisioner_test.go:45: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | provisioner_test.go:47:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: provisioner_test.go:142: S.TestAllContainers\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: provisioner_test.go:52: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | provisioner_test.go:54:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 0 passed, 2 FAILED, 28 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.01s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/provision/docker/dockertest\t0.672s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 2 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.00s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/provision/docker/fix\t0.234s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:46: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:49:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: healer_container_test.go:44: S.TestHealContainer\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:66: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:68:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 0 passed, 2 FAILED, 21 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.00s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/provision/docker/healer\t0.071s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:29: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:39:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:55: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:57:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 0 passed, 2 FAILED, 21 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.00s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/provision/docker/nodecontainer\t0.308s\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/provision/docker/types\t[no test files]\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: docker_test.go:28: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | docker_test.go:33:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: docker_test.go:142: S.TestGetNodeByHost\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: commands_test.go:34: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | commands_test.go:41:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: commands_test.go:44: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439811)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:83\n[ci/leakdetector      ]   |   in Storage.Close\n[ci/leakdetector      ]   | commands_test.go:45\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 0 passed, 2 FAILED, 1 FIXTURE-PANICKED, 20 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.01s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/provision/dockercommon\t0.743s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:82: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:95:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: suite_test.go:99: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x4398D1)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:83\n[ci/leakdetector      ]   |   in Storage.Close\n[ci/leakdetector      ]   | suite_test.go:100\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 1 FIXTURE-PANICKED, 264 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.02s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/provision/kubernetes\t0.443s\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/provision/kubernetes/authplugin/gcpwithproxy\t[no test files]\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: migrate_test.go:44: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | migrate_test.go:53:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: migrate_test.go:119: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x4398D1)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:83\n[ci/leakdetector      ]   |   in Storage.Close\n[ci/leakdetector      ]   | migrate_test.go:120\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 1 FIXTURE-PANICKED, 1 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.00s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/provision/kubernetes/migrate\t0.053s\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/provision/kubernetes/pkg/apis/tsuru/v1\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/provision/kubernetes/pkg/client/clientset/versioned\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/provision/kubernetes/pkg/client/clientset/versioned/fake\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/provision/kubernetes/pkg/client/clientset/versioned/scheme\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/provision/kubernetes/pkg/client/clientset/versioned/typed/tsuru/v1\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/provision/kubernetes/pkg/client/clientset/versioned/typed/tsuru/v1/fake\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/provision/kubernetes/pkg/client/informers/externalversions\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/provision/kubernetes/pkg/client/informers/externalversions/internalinterfaces\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/provision/kubernetes/pkg/client/informers/externalversions/tsuru\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/provision/kubernetes/pkg/client/informers/externalversions/tsuru/v1\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/provision/kubernetes/pkg/client/listers/tsuru/v1\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/provision/kubernetes/testing\t[no test files]\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: node_test.go:223: S.TestRemoveNode\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | node_test.go:238:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: node_test.go:250: S.TestRemoveNodeWithNodeInstance\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | node_test.go:259:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: node_test.go:282: S.TestRemoveNodeWithNodeInstanceRemoveIaaS\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | node_test.go:291:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 6 passed, 3 FAILED\n[ci/leakdetector      ]   | --- FAIL: Test (0.04s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/provision/node\t0.756s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:25: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:33:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:49: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:51:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 0 passed, 2 FAILED, 13 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.02s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/provision/nodecontainer\t1.707s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: pool_test.go:46: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | pool_test.go:53:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: pool_test.go:57: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439811)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:82\n[ci/leakdetector      ]   |   in Storage.Apps\n[ci/leakdetector      ]   | pool_test.go:58\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 1 FIXTURE-PANICKED, 57 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.00s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/provision/pool\t0.902s\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/provision/pool/multicluster\t[no test files]\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: fake_provisioner_test.go:46: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | fake_provisioner_test.go:49:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: fake_provisioner_test.go:515: S.TestAddUnits\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 87 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.03s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/provision/provisiontest\t0.204s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: actions_test.go:52: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | actions_test.go:54:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: actions_test.go:455: S.TestActionUpdateServicesBackward\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 20 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.00s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/provision/servicecommon\t0.088s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: queue_test.go:45: S.TestQueue\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | queue_test.go:47:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.withStack = could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers (\"could not create queue instance, please check queue:mongo-url and queue:mongo-database config entries. error: no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED\n[ci/leakdetector      ]   | --- FAIL: Test (0.01s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/queue\t0.516s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 10 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.00s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/quota\t0.236s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 14 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.24s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/registry\t1.013s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 9 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.01s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/registry/testing\t0.506s\n[ci/leakdetector      ]   | === RUN   TestDynamicSuites\n[ci/leakdetector      ]   | --- PASS: TestDynamicSuites (0.00s)\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:27: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:33:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: suite_test.go:50: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439751)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:82\n[ci/leakdetector      ]   |   in Storage.Apps\n[ci/leakdetector      ]   | suite_test.go:51\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: router_swap_test.go:32: ExternalSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | router_swap_test.go:35:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: router_swap_test.go:39: ExternalSuite.TearDownTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439751)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:83\n[ci/leakdetector      ]   |   in Storage.Close\n[ci/leakdetector      ]   | router_swap_test.go:40\n[ci/leakdetector      ]   |   in ExternalSuite.TearDownTest\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: hc_test.go:18: ExternalSuite.TestBuildHealthCheck\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: router_swap_test.go:43: ExternalSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | router_swap_test.go:45:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 10 passed, 3 FAILED, 2 FIXTURE-PANICKED, 33 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.01s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/router\t1.037s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: router_test.go:91: S.TearDownTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | router_test.go:94:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: router_test.go:112: S.TestAddBackend\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | router_test.go:114:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/router/routertest/generic_suite.go:117: RouterSuite.TearDownTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/router/routertest/generic_suite.go:119:\n[ci/leakdetector      ]   |     s.TearDownTestFunc(c)\n[ci/leakdetector      ]   | router_test.go:63:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/router/routertest/generic_suite.go:865: RouterSuite.TestAddRoutesPrefix\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | generic router test for *struct { router.Router; router.OptsRouter; router.CNameRouter; router.CustomHealthcheckRouter; router.InfoRouter; router.PrefixRouter; router.StatusRouter; router.TLSRouter; router.RouterV2 }\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/router/routertest/generic_suite.go:872:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/router/routertest/generic_suite.go:105: RouterSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/router/routertest/generic_suite.go:111:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 0 passed, 3 FAILED, 70 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.15s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/router/api\t1.172s\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/router/api/generator\t[no test files]\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:44: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:57:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: suite_test.go:61: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439811)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:82\n[ci/leakdetector      ]   |   in Storage.Apps\n[ci/leakdetector      ]   | suite_test.go:62\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 1 FIXTURE-PANICKED, 12 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.05s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/router/rebuild\t0.690s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: router_test.go:66: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | router_test.go:69:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: router_test.go:74: S.TearDownTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439751)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:83\n[ci/leakdetector      ]   |   in Storage.Close\n[ci/leakdetector      ]   | router_test.go:75\n[ci/leakdetector      ]   |   in S.TearDownTest\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: router_test.go:87: S.TestAddBackend\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: generic_suite.go:97: RouterSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | generic_suite.go:99:\n[ci/leakdetector      ]   |     s.SetUpTestFunc(c)\n[ci/leakdetector      ]   | router_test.go:69:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: generic_suite.go:117: RouterSuite.TearDownTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439751)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:83\n[ci/leakdetector      ]   |   in Storage.Close\n[ci/leakdetector      ]   | router_test.go:75\n[ci/leakdetector      ]   |   in S.TearDownTest\n[ci/leakdetector      ]   | generic_suite.go:119\n[ci/leakdetector      ]   |   in RouterSuite.TearDownTest\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: generic_suite.go:865: RouterSuite.TestAddRoutesPrefix\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: generic_suite.go:105: RouterSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | generic_suite.go:111:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: generic_suite.go:97: RouterSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | generic_suite.go:99:\n[ci/leakdetector      ]   |     s.SetUpTestFunc(c)\n[ci/leakdetector      ]   | router_test.go:69:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: generic_suite.go:117: RouterSuite.TearDownTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439751)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:83\n[ci/leakdetector      ]   |   in Storage.Close\n[ci/leakdetector      ]   | router_test.go:75\n[ci/leakdetector      ]   |   in S.TearDownTest\n[ci/leakdetector      ]   | generic_suite.go:119\n[ci/leakdetector      ]   |   in RouterSuite.TearDownTest\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: generic_suite.go:865: RouterSuite.TestAddRoutesPrefix\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: generic_suite.go:105: RouterSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | generic_suite.go:111:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 0 passed, 5 FAILED, 3 FIXTURE-PANICKED, 83 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.17s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/router/routertest\t1.876s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 32 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.05s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/safe\t0.241s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: scopedconfig_test.go:31: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | scopedconfig_test.go:37:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: scopedconfig_test.go:40: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439591)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:82\n[ci/leakdetector      ]   |   in Storage.Apps\n[ci/leakdetector      ]   | scopedconfig_test.go:41\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 0 passed, 1 FAILED, 1 FIXTURE-PANICKED, 6 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.01s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/scopedconfig\t0.648s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: broker_service_test.go:25: BrokerSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | broker_service_test.go:27:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: broker_service_test.go:34: BrokerSuite.TestServiceBrokerCreate\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: service_instance_test.go:48: InstanceSuite.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | service_instance_test.go:54:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: service_instance_test.go:77: InstanceSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439811)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:102\n[ci/leakdetector      ]   |   in Storage.ServiceInstances\n[ci/leakdetector      ]   | service_instance_test.go:78\n[ci/leakdetector      ]   |   in InstanceSuite.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: suite_test.go:61: S.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:67:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: suite_test.go:92: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439811)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:97\n[ci/leakdetector      ]   |   in Storage.Services\n[ci/leakdetector      ]   | suite_test.go:93\n[ci/leakdetector      ]   |   in S.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: bind_test.go:47: BindSuite.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | bind_test.go:54:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: bind_test.go:98: BindSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439811)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:82\n[ci/leakdetector      ]   |   in Storage.Apps\n[ci/leakdetector      ]   | bind_test.go:99\n[ci/leakdetector      ]   |   in BindSuite.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: sync_test.go:46: SyncSuite.SetUpSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | sync_test.go:53:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: sync_test.go:94: SyncSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: runtime error: invalid memory address or nil pointer dereference (PC=0x439811)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:884\n[ci/leakdetector      ]   |   in gopanic\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/panic.go:260\n[ci/leakdetector      ]   |   in panicmem\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/signal_unix.go:835\n[ci/leakdetector      ]   |   in sigpanic\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage/storage.go:98\n[ci/leakdetector      ]   |   in Storage.Collection\n[ci/leakdetector      ]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/db/storage.go:82\n[ci/leakdetector      ]   |   in Storage.Apps\n[ci/leakdetector      ]   | sync_test.go:95\n[ci/leakdetector      ]   |   in SyncSuite.TearDownSuite\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/reflect/value.go:368\n[ci/leakdetector      ]   |   in Value.Call\n[ci/leakdetector      ]   | /opt/hostedtoolcache/go/1.19.9/x64/src/runtime/asm_amd64.s:1594\n[ci/leakdetector      ]   |   in goexit\n[ci/leakdetector      ]   | OOPS: 0 passed, 5 FAILED, 4 FIXTURE-PANICKED, 212 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.11s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/service\t0.517s\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/servicemanager\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/servicemanager/mock\t[no test files]\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 3 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.00s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/set\t0.217s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 5 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.00s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/storage\t0.419s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: AppQuotaSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:40:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/storage/storagetest/app_quota_suite.go:26: AppQuotaSuite.TestGet\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: AppQuotaSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: AppVersionSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:40:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/storage/storagetest/app_version_suite.go:141: AppVersionSuite.TestAppVersionStorage_AllAppVersions\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: AppVersionSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: appVersionSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:40:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: app_version_test.go:32: appVersionSuite.TestLegacyImport\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: appVersionSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: AuthGroupSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:40:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/storage/storagetest/auth_group_suite.go:17: AuthGroupSuite.TestAddRole\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: AuthGroupSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: UserQuotaSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:40:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/storage/storagetest/auth_quota_suite.go:27: UserQuotaSuite.TestGet\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: UserQuotaSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: CacheSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:40:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/storage/storagetest/cache_suite.go:71: CacheSuite.TestCacheExpiration\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: CacheSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: ClusterSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:40:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/storage/storagetest/cluster_suite.go:150: ClusterSuite.TestDeleteCluster\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: ClusterSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: DynamicRouterSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:40:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/storage/storagetest/dynamic_router_suite.go:37: DynamicRouterSuite.TestGetNotFound\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: DynamicRouterSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: PlanSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:40:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/storage/storagetest/plan_suite.go:132: PlanSuite.TestDeletePlan\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: PlanSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: PlatformImageSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:40:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/storage/storagetest/platform_image_suite.go:70: PlatformImageSuite.TestDeletePlatform\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: PlatformImageSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: PlatformSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:40:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/storage/storagetest/platform_suite.go:99: PlatformSuite.TestDeletePlatform\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: PlatformSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: PoolSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:40:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/storage/storagetest/pool_suite.go:21: PoolSuite.TestFindAll\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: PoolSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: ServiceBrokerSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:40:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/storage/storagetest/service_broker_suite.go:99: ServiceBrokerSuite.TestDelete\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: ServiceBrokerSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: TeamSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:40:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/storage/storagetest/team_suite.go:111: TeamSuite.TestDeleteTeam\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: TeamSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: TeamTokenSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:40:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/storage/storagetest/team_token_suite.go:132: TeamTokenSuite.TestDeleteTeamToken\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: TeamTokenSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: InstanceTrackerSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:40:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/storage/storagetest/tracker_suite.go:20: InstanceTrackerSuite.Test_Notify_List\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: InstanceTrackerSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: VolumeSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:40:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/storage/storagetest/volume_suite.go:127: VolumeSuite.Test_InsertBinds\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: VolumeSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: WebhookSuite.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:40:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/tsuru-tsuru/storage/storagetest/webhook_suite.go:199: WebhookSuite.TestDelete\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: <autogenerated>:1: WebhookSuite.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | suite_test.go:48:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 0 passed, 36 FAILED, 122 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.04s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/storage/mongodb\t0.096s\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/storage/storagetest\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/test\t[no test files]\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 2 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.03s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/tsurutest\t0.506s\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/types/api\t[no test files]\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 1 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.03s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/types/app\t0.510s\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/types/app/image\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/types/auth\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/types/bind\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/types/cache\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/types/event\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/types/job\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/types/log\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/types/permission\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/types/provision\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/types/quota\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/types/router\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/types/service\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/types/tracker\t[no test files]\n[ci/leakdetector      ]   | ?   \tgithub.com/tsuru/tsuru/types/volume\t[no test files]\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | OK: 3 passed\n[ci/leakdetector      ]   | --- PASS: Test (0.01s)\n[ci/leakdetector      ]   | PASS\n[ci/leakdetector      ]   | ok  \tgithub.com/tsuru/tsuru/validation\t0.185s\n[ci/leakdetector      ]   | === RUN   Test\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: volume_test.go:96: S.SetUpTest\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | volume_test.go:98:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | PANIC: volume_test.go:542: S.TestListByApp\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ... Panic: Fixture has panicked (see related PANIC)\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | ----------------------------------------------------------------------\n[ci/leakdetector      ]   | FAIL: volume_test.go:130: S.TearDownSuite\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | volume_test.go:132:\n[ci/leakdetector      ]   |     c.Assert(err, check.IsNil)\n[ci/leakdetector      ]   | ... value *errors.errorString = &errors.errorString{s:\"no reachable servers\"} (\"no reachable servers\")\n[ci/leakdetector      ]   | \n[ci/leakdetector      ]   | OOPS: 0 passed, 2 FAILED, 15 MISSED\n[ci/leakdetector      ]   | --- FAIL: Test (0.01s)\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | FAIL\tgithub.com/tsuru/tsuru/volume\t0.738s\n[ci/leakdetector      ]   | FAIL\n[ci/leakdetector      ]   | make: *** [Makefile:33: leakdetector] Error 1\n[ci/leakdetector      ]   \u274c  Failure - Main make leakdetector\n[ci/leakdetector      ] exitcode '2': failure\n[ci/leakdetector      ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: context canceled\n"
}