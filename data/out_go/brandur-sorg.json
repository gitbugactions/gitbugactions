{
    "repository": "brandur/sorg",
    "clone_url": "https://github.com/brandur/sorg.git",
    "timestamp": "2023-05-30T11:39:10.839862Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[sorg CI/check_and_test] \ud83d\ude80  Start image=crawlergpt:latest\n[sorg CI/golangci-lint ] \ud83d\ude80  Start image=crawlergpt:latest\n[sorg CI/check_tailwind] \ud83d\ude80  Start image=crawlergpt:latest\n[sorg CI/check_and_test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[sorg CI/golangci-lint ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[sorg CI/check_tailwind]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[sorg CI/golangci-lint ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[sorg CI/check_and_test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[sorg CI/check_tailwind]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[sorg CI/check_and_test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[sorg CI/check_tailwind]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[sorg CI/golangci-lint ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[sorg CI/check_and_test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/brandur-sorg] user=0 workdir=\n[sorg CI/golangci-lint ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/brandur-sorg] user=0 workdir=\n[sorg CI/check_tailwind]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/brandur-sorg] user=0 workdir=\n[sorg CI/check_and_test]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v3\n[sorg CI/check_and_test] \u2b50 Run Main Checkout\n[sorg CI/check_and_test]   \u2705  Success - Main Checkout\n[sorg CI/golangci-lint ]   \u2601  git clone 'https://github.com/golangci/golangci-lint-action' # ref=v3\n[sorg CI/check_and_test] \u2b50 Run Main Install Go\n[sorg CI/check_tailwind] \u2b50 Run Main Checkout\n[sorg CI/check_and_test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v3/ dst=/var/run/act/actions/actions-setup-go@v3/\n[sorg CI/golangci-lint ] \u2b50 Run Main Checkout\n[sorg CI/check_tailwind]   \u2705  Success - Main Checkout\n[sorg CI/check_and_test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v3/] user=0 workdir=\n[sorg CI/golangci-lint ]   \u2705  Success - Main Checkout\n[sorg CI/check_tailwind] \u2b50 Run Main Install Tailwind\n[sorg CI/golangci-lint ] \u2b50 Run Main Check: golangci-lint\n[sorg CI/golangci-lint ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/golangci-golangci-lint-action@v3/ dst=/var/run/act/actions/golangci-golangci-lint-action@v3/\n[sorg CI/check_tailwind]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[sorg CI/golangci-lint ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/golangci-golangci-lint-action@v3/] user=0 workdir=\n[sorg CI/check_and_test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/setup/index.js] user= workdir=\n[sorg CI/golangci-lint ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/golangci-golangci-lint-action@v3/dist/run/index.js] user= workdir=\n[sorg CI/check_and_test]   | Setup go version spec 1.19\n[sorg CI/check_and_test]   | Attempting to resolve the latest version from the manifest...\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::No manifest cached\n[sorg CI/check_and_test]   | Unable to resolve a version from the manifest...\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[sorg CI/check_and_test]   | Failed to resolve version 1.19 from manifest\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::isExplicit: \n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::explicit? false\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::explicit? true\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::explicit? true\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::explicit? true\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::evaluating 3 versions\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::match not found\n[sorg CI/check_and_test]   | Attempting to download 1.19...\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::No manifest cached\n[sorg CI/check_tailwind]   \u2705  Success - Main Install Tailwind\n[sorg CI/check_and_test]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::HttpClientError: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v3/dist/setup/index.js:8612:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[sorg CI/check_and_test]   | Falling back to download directly from Go\n[sorg CI/golangci-lint ]   \u2753  ::group::prepare environment\n[sorg CI/golangci-lint ]   | Checking for go.mod: go.mod\n[sorg CI/golangci-lint ]   | Finding needed golangci-lint version...\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::Resolved Keys:\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::[\"golangci-lint.cache-2786-5a85762a042c62aeb1b5ba4b259270ed4a562c68\",\"golangci-lint.cache-2786-\"]\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::Checking zstd --version\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.19\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.19\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.19\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.19\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.19\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::check 1.20.0-rc.3 satisfies 1.19\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::check 1.20.0-rc.2 satisfies 1.19\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::check 1.20.0-rc.1 satisfies 1.19\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.19\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::matched go1.19.9\n[sorg CI/check_and_test]   | Install from dist\n[sorg CI/check_and_test]   | Acquiring go1.19.9 from https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::Destination /tmp/9ed2b07b-b3e9-4d16-8847-54dae3927241\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[sorg CI/golangci-lint ]   | Requested golangci-lint 'v1.52', using 'v1.52.2', calculation took 999ms\n[sorg CI/golangci-lint ]   | Installing golangci-lint v1.52.2...\n[sorg CI/golangci-lint ]   | Downloading https://github.com/golangci/golangci-lint/releases/download/v1.52.2/golangci-lint-1.52.2-linux-amd64.tar.gz ...\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::Downloading https://github.com/golangci/golangci-lint/releases/download/v1.52.2/golangci-lint-1.52.2-linux-amd64.tar.gz\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::Destination /tmp/ccbc8c9b-6ba9-4e59-9767-6ffb704d6dac\n[sorg CI/check_tailwind] \u2b50 Run Main Generate Tailwind\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[sorg CI/check_tailwind]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::download complete\n[sorg CI/check_and_test]   | Extracting Go...\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::Checking tar --version\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[sorg CI/check_and_test]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/c9b83367-1eb2-4268-b5fa-89b160a085cf -f /tmp/9ed2b07b-b3e9-4d16-8847-54dae3927241\n[sorg CI/golangci-lint ]   \ud83d\udea7  ::warning::Failed to restore: getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[sorg CI/golangci-lint ]   | Cache not found for input keys: golangci-lint.cache-2786-5a85762a042c62aeb1b5ba4b259270ed4a562c68, golangci-lint.cache-2786-\n[sorg CI/check_tailwind]   | Browserslist: caniuse-lite is outdated. Please run:\n[sorg CI/check_tailwind]   |   npx update-browserslist-db@latest\n[sorg CI/check_tailwind]   |   Why you should do it regularly: https://github.com/browserslist/update-db#readme\n[sorg CI/check_tailwind]   | \n[sorg CI/check_tailwind]   | Rebuilding...\n[sorg CI/check_tailwind]   | \n[sorg CI/check_tailwind]   | Done in 754ms.\n[sorg CI/check_tailwind]   | Browserslist: caniuse-lite is outdated. Please run:\n[sorg CI/check_tailwind]   |   npx update-browserslist-db@latest\n[sorg CI/check_tailwind]   |   Why you should do it regularly: https://github.com/browserslist/update-db#readme\n[sorg CI/check_tailwind]   | \n[sorg CI/check_tailwind]   | Rebuilding...\n[sorg CI/check_and_test]   | Successfully extracted go to /tmp/c9b83367-1eb2-4268-b5fa-89b160a085cf\n[sorg CI/check_and_test]   | Adding to the cache ...\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::Caching tool go 1.19.9 x64\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::source dir: /tmp/c9b83367-1eb2-4268-b5fa-89b160a085cf/go\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.19.9/x64\n[sorg CI/check_tailwind]   | \n[sorg CI/check_tailwind]   | Done in 1081ms.\n[sorg CI/check_tailwind]   \u2705  Success - Main Generate Tailwind\n[sorg CI/check_tailwind] \u2b50 Run Main Check Git diff\n[sorg CI/check_tailwind]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[sorg CI/check_tailwind]   | Please make sure that all Tailwind changes are checked in!\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::finished caching tool\n[sorg CI/check_and_test]   | Successfully cached go to /opt/hostedtoolcache/go/1.19.9/x64\n[sorg CI/check_and_test]   | Added go to the path\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.19.9/x64/bin/go:\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[sorg CI/check_and_test]   \ud83d\udcac  ::debug::add bin true\n[sorg CI/check_and_test]   | Successfully set up Go version 1.19\n[sorg CI/check_and_test]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[sorg CI/check_and_test]   \u2753 add-matcher /run/act/actions/actions-setup-go@v3/matchers.json\n[sorg CI/check_and_test]   | go version go1.19.9 linux/amd64\n[sorg CI/check_and_test]   | \n[sorg CI/check_and_test]   \u2753  ::group::go env\n[sorg CI/check_tailwind]   \u2705  Success - Main Check Git diff\n[sorg CI/check_and_test]   | GO111MODULE=\"\"\n[sorg CI/check_and_test]   | GOARCH=\"amd64\"\n[sorg CI/check_and_test]   | GOBIN=\"\"\n[sorg CI/check_and_test]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[sorg CI/check_and_test]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[sorg CI/check_and_test]   | GOEXE=\"\"\n[sorg CI/check_and_test]   | GOEXPERIMENT=\"\"\n[sorg CI/check_and_test]   | GOFLAGS=\"\"\n[sorg CI/check_and_test]   | GOHOSTARCH=\"amd64\"\n[sorg CI/check_and_test]   | GOHOSTOS=\"linux\"\n[sorg CI/check_and_test]   | GOINSECURE=\"\"\n[sorg CI/check_and_test]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[sorg CI/check_and_test]   | GONOPROXY=\"\"\n[sorg CI/check_and_test]   | GONOSUMDB=\"\"\n[sorg CI/check_and_test]   | GOOS=\"linux\"\n[sorg CI/check_and_test]   | GOPATH=\"/home/runneradmin/go\"\n[sorg CI/check_and_test]   | GOPRIVATE=\"\"\n[sorg CI/check_and_test]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[sorg CI/check_and_test]   | GOROOT=\"/opt/hostedtoolcache/go/1.19.9/x64\"\n[sorg CI/check_and_test]   | GOSUMDB=\"sum.golang.org\"\n[sorg CI/check_and_test]   | GOTMPDIR=\"\"\n[sorg CI/check_and_test]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.19.9/x64/pkg/tool/linux_amd64\"\n[sorg CI/check_and_test]   | GOVCS=\"\"\n[sorg CI/check_and_test]   | GOVERSION=\"go1.19.9\"\n[sorg CI/check_and_test]   | GCCGO=\"gccgo\"\n[sorg CI/check_and_test]   | GOAMD64=\"v1\"\n[sorg CI/check_and_test]   | AR=\"ar\"\n[sorg CI/check_and_test]   | CC=\"gcc\"\n[sorg CI/check_and_test]   | CXX=\"g++\"\n[sorg CI/check_and_test]   | CGO_ENABLED=\"1\"\n[sorg CI/check_and_test]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/brandur-sorg/go.mod\"\n[sorg CI/check_and_test]   | GOWORK=\"\"\n[sorg CI/check_and_test]   | CGO_CFLAGS=\"-g -O2\"\n[sorg CI/check_and_test]   | CGO_CPPFLAGS=\"\"\n[sorg CI/check_and_test]   | CGO_CXXFLAGS=\"-g -O2\"\n[sorg CI/check_and_test]   | CGO_FFLAGS=\"-g -O2\"\n[sorg CI/check_and_test]   | CGO_LDFLAGS=\"-g -O2\"\n[sorg CI/check_and_test]   | PKG_CONFIG=\"pkg-config\"\n[sorg CI/check_and_test]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build3901015342=/tmp/go-build -gno-record-gcc-switches\"\n[sorg CI/check_and_test]   | \n[sorg CI/check_and_test]   \u2753  ::endgroup::\n[sorg CI/check_and_test]   \u2705  Success - Main Install Go\n[sorg CI/check_and_test]   \u2699  ::set-output:: go-version=1.19.9\n[sorg CI/check_and_test]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.19.9/x64/bin\n[sorg CI/check_and_test]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[sorg CI/check_and_test] \u2b50 Run Main Install FUSE + PNGQuant + WebP\n[sorg CI/check_and_test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[sorg CI/check_tailwind] \ud83c\udfc1  Job succeeded\n[sorg CI/check_and_test]   | Reading package lists...\n[sorg CI/check_and_test]   | Building dependency tree...\n[sorg CI/check_and_test]   | Reading state information...\n[sorg CI/check_and_test]   | The following additional packages will be installed:\n[sorg CI/check_and_test]   |   freeglut3 libfuse2 libimagequant0\n[sorg CI/check_and_test]   | The following packages will be REMOVED:\n[sorg CI/check_and_test]   |   fuse-overlayfs fuse3\n[sorg CI/check_and_test]   | The following NEW packages will be installed:\n[sorg CI/check_and_test]   |   freeglut3 fuse libfuse2 libimagequant0 pngquant webp\n[sorg CI/check_and_test]   | 0 upgraded, 6 newly installed, 2 to remove and 20 not upgraded.\n[sorg CI/check_and_test]   | Need to get 311 kB of archives.\n[sorg CI/check_and_test]   | After this operation, 997 kB of additional disk space will be used.\n[sorg CI/check_and_test]   | Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libfuse2 amd64 2.9.9-3 [82.0 kB]\n[sorg CI/check_and_test]   | Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 fuse amd64 2.9.9-3 [26.0 kB]\n[sorg CI/check_and_test]   | Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 freeglut3 amd64 2.8.1-3 [73.6 kB]\n[sorg CI/check_and_test]   | Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 libimagequant0 amd64 2.12.2-1.1 [31.4 kB]\n[sorg CI/check_and_test]   | Get:5 http://archive.ubuntu.com/ubuntu focal/universe amd64 pngquant amd64 2.12.2-1 [19.2 kB]\n[sorg CI/check_and_test]   | Ign:6 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 webp amd64 0.6.1-2ubuntu0.20.04.1\n[sorg CI/check_and_test]   | Err:6 http://security.ubuntu.com/ubuntu focal-updates/universe amd64 webp amd64 0.6.1-2ubuntu0.20.04.1\n[sorg CI/check_and_test]   |   404  Not Found [IP: 185.125.190.39 80]\n[sorg CI/check_and_test]   | E: Failed to fetch http://security.ubuntu.com/ubuntu/pool/universe/libw/libwebp/webp_0.6.1-2ubuntu0.20.04.1_amd64.deb  404  Not Found [IP: 185.125.190.39 80]\n[sorg CI/check_and_test]   | E: Unable to fetch some archives, maybe run apt-get update or try with --fix-missing?\n[sorg CI/check_and_test]   | Fetched 232 kB in 2s (115 kB/s)\n[sorg CI/check_and_test]   \u274c  Failure - Main Install FUSE + PNGQuant + WebP\n[sorg CI/check_and_test] exitcode '100': failure\n[sorg CI/golangci-lint ]   | connect ETIMEDOUT 140.82.121.4:443\n[sorg CI/golangci-lint ]   | Waiting 11 seconds before trying again\n[sorg CI/check_and_test] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/5801dbad375ca3dedafb7f3563c6f55228616183d5baa04376a64c00bbe4ceef?force=1&v=1\": context deadline exceeded\n[sorg CI/check_and_test] \ud83c\udfc1  Job failed\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::download complete\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::Checking tar --version\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[sorg CI/golangci-lint ]   | [command]/usr/bin/tar xz --overwrite --warning=no-unknown-keyword --overwrite -C /home/runneradmin -f /tmp/ccbc8c9b-6ba9-4e59-9767-6ffb704d6dac\n[sorg CI/golangci-lint ]   | Installed golangci-lint into /home/runneradmin/golangci-lint-1.52.2-linux-amd64/golangci-lint in 144823ms\n[sorg CI/golangci-lint ]   | Prepared env in 145850ms\n[sorg CI/golangci-lint ]   \u2753  ::endgroup::\n[sorg CI/golangci-lint ]   \u2753  ::group::run golangci-lint\n[sorg CI/golangci-lint ]   | Running [/home/runneradmin/golangci-lint-1.52.2-linux-amd64/golangci-lint run --out-format=github-actions] in [] ...\n[sorg CI/golangci-lint ]   \u2757  ::error file=build.go,line=107,col=16::undefined: validator (typecheck)\n[sorg CI/golangci-lint ]   \u2757  ::error file=build.go,line=1854,col=36::undefined: strings.Cut (typecheck)\n[sorg CI/golangci-lint ]   \u2757  ::error file=build.go,line=2189,col=36::undefined: strings.Cut (typecheck)\n[sorg CI/golangci-lint ]   \u2757  ::error file=dependency_registry.go,line=49,col=26::undefined: os.ReadFile (typecheck)\n[sorg CI/golangci-lint ]   \u2757  ::error file=modules/sassets/sassets_test.go,line=13,col=17::undefined: os.MkdirTemp (typecheck)\n[sorg CI/golangci-lint ]   \u2757  ::error file=modules/sassets/sassets_test.go,line=23,col=11::undefined: os.WriteFile (typecheck)\n[sorg CI/golangci-lint ]   \u2757  ::error file=modules/sassets/sassets_test.go,line=26,col=11::undefined: os.WriteFile (typecheck)\n[sorg CI/golangci-lint ]   \u2757  ::error file=modules/sassets/sassets_test.go,line=29,col=11::undefined: os.WriteFile (typecheck)\n[sorg CI/golangci-lint ]   \u2757  ::error file=modules/sassets/sassets_test.go,line=38,col=20::undefined: os.ReadFile (typecheck)\n[sorg CI/golangci-lint ]   \u2757  ::error file=modules/sassets/sassets_test.go,line=70,col=17::undefined: os.MkdirTemp (typecheck)\n[sorg CI/golangci-lint ]   \u2757  ::error file=modules/sassets/sassets_test.go,line=97,col=20::undefined: os.ReadFile (typecheck)\n[sorg CI/golangci-lint ]   | \n[sorg CI/golangci-lint ]   \u2757  ::error::issues found\n[sorg CI/golangci-lint ]   | Ran golangci-lint in 22532ms\n[sorg CI/golangci-lint ]   \u2753  ::endgroup::\n[sorg CI/golangci-lint ]   \u274c  Failure - Main Check: golangci-lint\n[sorg CI/golangci-lint ]   \u2699  ::set-env:: MSYS=winsymlinks:nativestrict\n[sorg CI/golangci-lint ]   \u2699  ::add-path:: /home/runneradmin/golangci-lint-1.52.2-linux-amd64\n[sorg CI/golangci-lint ] exitcode '1': failure\n[sorg CI/golangci-lint ] \u2b50 Run Post Check: golangci-lint\n[sorg CI/golangci-lint ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/golangci-golangci-lint-action@v3/dist/post_run/index.js] user= workdir=\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::Checking zstd --version\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.cache/golangci-lint'\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.cache/go-build'\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/go/pkg'\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/.cache/golangci-lint\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/.cache/go-build\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/go/pkg\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::Cache Paths:\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::[\"../../../home/runneradmin/.cache/golangci-lint\",\"../../../home/runneradmin/.cache/go-build\",\"../../../home/runneradmin/go/pkg\"]\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::Archive Path: /tmp/d84e8e58-9e8b-4246-9848-f502b9ada1a7/cache.tzst\n[sorg CI/golangci-lint ]   | [command]/usr/bin/tar --posix -cf cache.tzst --exclude cache.tzst -P -C /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/brandur-sorg --files-from manifest.txt --use-compress-program zstdmt\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::File Size: 42506414\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::Reserving Cache\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::reserveCache - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[sorg CI/golangci-lint ]   \ud83d\udcac  ::debug::reserveCache - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[sorg CI/golangci-lint ]   \ud83d\udea7  ::warning::Failed to save: reserveCache failed: Cache Service Url not found, unable to restore cache.\n[sorg CI/golangci-lint ]   | Saved cache for golangci-lint from paths '/home/runneradmin/.cache/golangci-lint, /home/runneradmin/.cache/go-build, /home/runneradmin/go/pkg, zstd-without-long, 1.0' in 12706ms\n[sorg CI/golangci-lint ]   \u2705  Success - Post Check: golangci-lint\n[sorg CI/golangci-lint ]   \u2699  ::set-env:: MSYS=winsymlinks:nativestrict\n[sorg CI/golangci-lint ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Error occurred running finally: Error occurred running finally: context deadline exceeded (original error: <nil>) (original error: <nil>)\n"
}