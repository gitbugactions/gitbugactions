{
    "repository": "bitnami/gonit",
    "clone_url": "https://github.com/bitnami/gonit.git",
    "timestamp": "2023-05-30T11:52:42.424369Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/Build and Test] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Build and Test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Build and Test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Build and Test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Build and Test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/bitnami-gonit] user=0 workdir=\n[CI/Build and Test]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[CI/Build and Test]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v2\n[CI/Build and Test] \u2b50 Run Main actions/checkout@v2\n[CI/Build and Test]   \u2705  Success - Main actions/checkout@v2\n[CI/Build and Test] \u2b50 Run Main actions/setup-go@v2\n[CI/Build and Test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[CI/Build and Test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[CI/Build and Test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[CI/Build and Test]   | Setup go stable version spec ^1.18.8\n[CI/Build and Test]   \ud83d\udcac  ::debug::isExplicit: \n[CI/Build and Test]   \ud83d\udcac  ::debug::explicit? false\n[CI/Build and Test]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[CI/Build and Test]   \ud83d\udcac  ::debug::explicit? true\n[CI/Build and Test]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[CI/Build and Test]   \ud83d\udcac  ::debug::explicit? true\n[CI/Build and Test]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[CI/Build and Test]   \ud83d\udcac  ::debug::explicit? true\n[CI/Build and Test]   \ud83d\udcac  ::debug::evaluating 3 versions\n[CI/Build and Test]   \ud83d\udcac  ::debug::match not found\n[CI/Build and Test]   | Attempting to download ^1.18.8...\n[CI/Build and Test]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[CI/Build and Test]   \ud83d\udcac  ::debug::Error: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v2/dist/index.js:5294:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[CI/Build and Test]   | Falling back to download directly from Go\n[CI/Build and Test]   \ud83d\udcac  ::debug::check 1.20.4 satisfies ^1.18.8\n[CI/Build and Test]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[CI/Build and Test]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[CI/Build and Test]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[CI/Build and Test]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[CI/Build and Test]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[CI/Build and Test]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[CI/Build and Test]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[CI/Build and Test]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[CI/Build and Test]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[CI/Build and Test]   \ud83d\udcac  ::debug::matched go1.20.4\n[CI/Build and Test]   | Install from dist\n[CI/Build and Test]   | Acquiring go1.20.4 from https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[CI/Build and Test]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[CI/Build and Test]   \ud83d\udcac  ::debug::Destination /tmp/3dc3cc8f-87ec-4e1c-a349-082cace37260\n[CI/Build and Test]   \ud83d\udcac  ::debug::download complete\n[CI/Build and Test]   | Extracting Go...\n[CI/Build and Test]   \ud83d\udcac  ::debug::Checking tar --version\n[CI/Build and Test]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[CI/Build and Test]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/25ffe490-5175-408e-bdaa-78ac12505754 -f /tmp/3dc3cc8f-87ec-4e1c-a349-082cace37260\n[CI/Build and Test]   | Successfully extracted go to /tmp/25ffe490-5175-408e-bdaa-78ac12505754\n[CI/Build and Test]   | Adding to the cache ...\n[CI/Build and Test]   \ud83d\udcac  ::debug::Caching tool go 1.20.4 x64\n[CI/Build and Test]   \ud83d\udcac  ::debug::source dir: /tmp/25ffe490-5175-408e-bdaa-78ac12505754/go\n[CI/Build and Test]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.4/x64\n[CI/Build and Test]   \ud83d\udcac  ::debug::finished caching tool\n[CI/Build and Test]   | Successfully cached go to /opt/hostedtoolcache/go/1.20.4/x64\n[CI/Build and Test]   | Added go to the path\n[CI/Build and Test]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.20.4/x64/bin/go:\n[CI/Build and Test]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[CI/Build and Test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[CI/Build and Test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[CI/Build and Test]   \ud83d\udcac  ::debug::add bin true\n[CI/Build and Test]   | Successfully setup go version ^1.18.8\n[CI/Build and Test]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[CI/Build and Test]   | go version go1.20.4 linux/amd64\n[CI/Build and Test]   | \n[CI/Build and Test]   \u2753  ::group::go env\n[CI/Build and Test]   | GO111MODULE=\"\"\n[CI/Build and Test]   | GOARCH=\"amd64\"\n[CI/Build and Test]   | GOBIN=\"\"\n[CI/Build and Test]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[CI/Build and Test]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[CI/Build and Test]   | GOEXE=\"\"\n[CI/Build and Test]   | GOEXPERIMENT=\"\"\n[CI/Build and Test]   | GOFLAGS=\"\"\n[CI/Build and Test]   | GOHOSTARCH=\"amd64\"\n[CI/Build and Test]   | GOHOSTOS=\"linux\"\n[CI/Build and Test]   | GOINSECURE=\"\"\n[CI/Build and Test]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[CI/Build and Test]   | GONOPROXY=\"\"\n[CI/Build and Test]   | GONOSUMDB=\"\"\n[CI/Build and Test]   | GOOS=\"linux\"\n[CI/Build and Test]   | GOPATH=\"/home/runneradmin/go\"\n[CI/Build and Test]   | GOPRIVATE=\"\"\n[CI/Build and Test]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[CI/Build and Test]   | GOROOT=\"/opt/hostedtoolcache/go/1.20.4/x64\"\n[CI/Build and Test]   | GOSUMDB=\"sum.golang.org\"\n[CI/Build and Test]   | GOTMPDIR=\"\"\n[CI/Build and Test]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.20.4/x64/pkg/tool/linux_amd64\"\n[CI/Build and Test]   | GOVCS=\"\"\n[CI/Build and Test]   | GOVERSION=\"go1.20.4\"\n[CI/Build and Test]   | GCCGO=\"gccgo\"\n[CI/Build and Test]   | GOAMD64=\"v1\"\n[CI/Build and Test]   | AR=\"ar\"\n[CI/Build and Test]   | CC=\"gcc\"\n[CI/Build and Test]   | CXX=\"g++\"\n[CI/Build and Test]   | CGO_ENABLED=\"1\"\n[CI/Build and Test]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/bitnami-gonit/go.mod\"\n[CI/Build and Test]   | GOWORK=\"\"\n[CI/Build and Test]   | CGO_CFLAGS=\"-O2 -g\"\n[CI/Build and Test]   | CGO_CPPFLAGS=\"\"\n[CI/Build and Test]   | CGO_CXXFLAGS=\"-O2 -g\"\n[CI/Build and Test]   | CGO_FFLAGS=\"-O2 -g\"\n[CI/Build and Test]   | CGO_LDFLAGS=\"-O2 -g\"\n[CI/Build and Test]   | PKG_CONFIG=\"pkg-config\"\n[CI/Build and Test]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2499301655=/tmp/go-build -gno-record-gcc-switches\"\n[CI/Build and Test]   | \n[CI/Build and Test]   \u2753  ::endgroup::\n[CI/Build and Test]   \u2705  Success - Main actions/setup-go@v2\n[CI/Build and Test]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.20.4/x64\n[CI/Build and Test]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.20.4/x64/bin\n[CI/Build and Test]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[CI/Build and Test] \u2b50 Run Main Install Build Dependencies\n[CI/Build and Test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/Build and Test]   | + Downloading build dependencies\n[CI/Build and Test]   | go: downloading golang.org/x/tools v0.9.1\n[CI/Build and Test]   | go: downloading golang.org/x/mod v0.10.0\n[CI/Build and Test]   | go: downloading golang.org/x/sys v0.8.0\n[CI/Build and Test]   | go: downloading honnef.co/go/tools v0.4.3\n[CI/Build and Test]   | go: downloading golang.org/x/exp/typeparams v0.0.0-20221208152030-732eee02a75a\n[CI/Build and Test]   | go: downloading golang.org/x/tools v0.4.1-0.20221208213631-3f74d914ae6d\n[CI/Build and Test]   | go: downloading github.com/BurntSushi/toml v1.2.1\n[CI/Build and Test]   | go: downloading golang.org/x/sys v0.3.0\n[CI/Build and Test]   | go: downloading golang.org/x/mod v0.7.0\n[CI/Build and Test]   | go: downloading github.com/wadey/gocovmerge v0.0.0-20160331181800-b5bfa59ec0ad\n[CI/Build and Test]   | go: finding module for package golang.org/x/tools/cover\n[CI/Build and Test]   | go: found golang.org/x/tools/cover in golang.org/x/tools v0.9.1\n[CI/Build and Test]   \u2705  Success - Main Install Build Dependencies\n[CI/Build and Test] \u2b50 Run Main Download required modules\n[CI/Build and Test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/Build and Test]   \u2705  Success - Main Download required modules\n[CI/Build and Test] \u2b50 Run Main Vet\n[CI/Build and Test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[CI/Build and Test]   \u274c  Failure - Main Vet\n[CI/Build and Test] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/819e0d5497e8d4d985dff6cc58fb3a89f064cd5daf1d42d8eb722737ef2c78dc/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Build and Test] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}