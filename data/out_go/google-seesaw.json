{
    "repository": "google/seesaw",
    "clone_url": "https://github.com/google/seesaw.git",
    "timestamp": "2023-05-30T11:24:59.867810Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Build and Test/build] \ud83d\ude80  Start image=crawlergpt:latest\n[Build and Test/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build and Test/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and Test/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and Test/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/google-seesaw] user=0 workdir=\n[Build and Test/build]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[Build and Test/build] \ud83e\uddea  Matrix: map[go:1.19 os:ubuntu-latest]\n[Build and Test/build] \u2b50 Run Main actions/checkout@v2\n[Build and Test/build]   \u2705  Success - Main actions/checkout@v2\n[Build and Test/build] \u2b50 Run Main actions/setup-go@v2\n[Build and Test/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[Build and Test/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[Build and Test/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[Build and Test/build]   | Setup go stable version spec 1.19\n[Build and Test/build]   \ud83d\udcac  ::debug::isExplicit: \n[Build and Test/build]   \ud83d\udcac  ::debug::explicit? false\n[Build and Test/build]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Build and Test/build]   \ud83d\udcac  ::debug::explicit? true\n[Build and Test/build]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Build and Test/build]   \ud83d\udcac  ::debug::explicit? true\n[Build and Test/build]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Build and Test/build]   \ud83d\udcac  ::debug::explicit? true\n[Build and Test/build]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Build and Test/build]   \ud83d\udcac  ::debug::match not found\n[Build and Test/build]   | Attempting to download 1.19...\n[Build and Test/build]   | matching 1.19...\n[Build and Test/build]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.19\n[Build and Test/build]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.19\n[Build and Test/build]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.19\n[Build and Test/build]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.19\n[Build and Test/build]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.19\n[Build and Test/build]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.19\n[Build and Test/build]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[Build and Test/build]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[Build and Test/build]   \ud83d\udcac  ::debug::matched 1.19.9\n[Build and Test/build]   | Acquiring 1.19.9 from https://github.com/actions/go-versions/releases/download/1.19.9-4868897838/go-1.19.9-linux-x64.tar.gz\n[Build and Test/build]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/go-versions/releases/download/1.19.9-4868897838/go-1.19.9-linux-x64.tar.gz\n[Build and Test/build]   \ud83d\udcac  ::debug::Destination /tmp/9cf30187-5d57-460e-9e98-a8d43562f1c2\n[Build and Test/build]   \ud83d\udcac  ::debug::download complete\n[Build and Test/build]   | Extracting Go...\n[Build and Test/build]   \ud83d\udcac  ::debug::Checking tar --version\n[Build and Test/build]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Build and Test/build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/40109e21-0f0f-4cad-9a6d-55dcee162f1e -f /tmp/9cf30187-5d57-460e-9e98-a8d43562f1c2\n[Build and Test/build]   | Successfully extracted go to /tmp/40109e21-0f0f-4cad-9a6d-55dcee162f1e\n[Build and Test/build]   | Adding to the cache ...\n[Build and Test/build]   \ud83d\udcac  ::debug::Caching tool go 1.19.9 x64\n[Build and Test/build]   \ud83d\udcac  ::debug::source dir: /tmp/40109e21-0f0f-4cad-9a6d-55dcee162f1e\n[Build and Test/build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.19.9/x64\n[Build and Test/build]   \ud83d\udcac  ::debug::finished caching tool\n[Build and Test/build]   | Successfully cached go to /opt/hostedtoolcache/go/1.19.9/x64\n[Build and Test/build]   | Added go to the path\n[Build and Test/build]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.19.9/x64/bin/go:\n[Build and Test/build]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Build and Test/build]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Build and Test/build]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Build and Test/build]   \ud83d\udcac  ::debug::add bin true\n[Build and Test/build]   | Successfully setup go version 1.19\n[Build and Test/build]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[Build and Test/build]   | go version go1.19.9 linux/amd64\n[Build and Test/build]   | \n[Build and Test/build]   \u2753  ::group::go env\n[Build and Test/build]   | GO111MODULE=\"\"\n[Build and Test/build]   | GOARCH=\"amd64\"\n[Build and Test/build]   | GOBIN=\"\"\n[Build and Test/build]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Build and Test/build]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Build and Test/build]   | GOEXE=\"\"\n[Build and Test/build]   | GOEXPERIMENT=\"\"\n[Build and Test/build]   | GOFLAGS=\"\"\n[Build and Test/build]   | GOHOSTARCH=\"amd64\"\n[Build and Test/build]   | GOHOSTOS=\"linux\"\n[Build and Test/build]   | GOINSECURE=\"\"\n[Build and Test/build]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Build and Test/build]   | GONOPROXY=\"\"\n[Build and Test/build]   | GONOSUMDB=\"\"\n[Build and Test/build]   | GOOS=\"linux\"\n[Build and Test/build]   | GOPATH=\"/home/runneradmin/go\"\n[Build and Test/build]   | GOPRIVATE=\"\"\n[Build and Test/build]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Build and Test/build]   | GOROOT=\"/opt/hostedtoolcache/go/1.19.9/x64\"\n[Build and Test/build]   | GOSUMDB=\"sum.golang.org\"\n[Build and Test/build]   | GOTMPDIR=\"\"\n[Build and Test/build]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.19.9/x64/pkg/tool/linux_amd64\"\n[Build and Test/build]   | GOVCS=\"\"\n[Build and Test/build]   | GOVERSION=\"go1.19.9\"\n[Build and Test/build]   | GCCGO=\"gccgo\"\n[Build and Test/build]   | GOAMD64=\"v1\"\n[Build and Test/build]   | AR=\"ar\"\n[Build and Test/build]   | CC=\"gcc\"\n[Build and Test/build]   | CXX=\"g++\"\n[Build and Test/build]   | CGO_ENABLED=\"1\"\n[Build and Test/build]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/google-seesaw/go.mod\"\n[Build and Test/build]   | GOWORK=\"\"\n[Build and Test/build]   | CGO_CFLAGS=\"-g -O2\"\n[Build and Test/build]   | CGO_CPPFLAGS=\"\"\n[Build and Test/build]   | CGO_CXXFLAGS=\"-g -O2\"\n[Build and Test/build]   | CGO_FFLAGS=\"-g -O2\"\n[Build and Test/build]   | CGO_LDFLAGS=\"-g -O2\"\n[Build and Test/build]   | PKG_CONFIG=\"pkg-config\"\n[Build and Test/build]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build1282660109=/tmp/go-build -gno-record-gcc-switches\"\n[Build and Test/build]   | \n[Build and Test/build]   \u2753  ::endgroup::\n[Build and Test/build]   \u2705  Success - Main actions/setup-go@v2\n[Build and Test/build]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.19.9/x64\n[Build and Test/build]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.19.9/x64/bin\n[Build and Test/build]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Build and Test/build] \u2b50 Run Main Install Dependencies\n[Build and Test/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Build and Test/build]   | Reading package lists...\n[Build and Test/build]   | Building dependency tree...\n[Build and Test/build]   | Reading state information...\n[Build and Test/build]   | The following additional packages will be installed:\n[Build and Test/build]   |   libnl-genl-3-200\n[Build and Test/build]   | The following NEW packages will be installed:\n[Build and Test/build]   |   libnl-3-dev libnl-genl-3-200 libnl-genl-3-dev\n[Build and Test/build]   | 0 upgraded, 3 newly installed, 0 to remove and 20 not upgraded.\n[Build and Test/build]   | Need to get 114 kB of archives.\n[Build and Test/build]   | After this operation, 743 kB of additional disk space will be used.\n[Build and Test/build]   | Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libnl-3-dev amd64 3.4.0-1 [92.2 kB]\n[Build and Test/build]   | Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 libnl-genl-3-200 amd64 3.4.0-1 [11.1 kB]\n[Build and Test/build]   | Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 libnl-genl-3-dev amd64 3.4.0-1 [10.7 kB]\n[Build and Test/build]   | Fetched 114 kB in 4s (27.5 kB/s)\n[Build and Test/build]   | Selecting previously unselected package libnl-3-dev:amd64.\r\n[Build and Test/build]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[Build and Test/build]   | Preparing to unpack .../libnl-3-dev_3.4.0-1_amd64.deb ...\r\n[Build and Test/build]   | Unpacking libnl-3-dev:amd64 (3.4.0-1) ...\r\n[Build and Test/build]   | Selecting previously unselected package libnl-genl-3-200:amd64.\r\n[Build and Test/build]   | Preparing to unpack .../libnl-genl-3-200_3.4.0-1_amd64.deb ...\r\n[Build and Test/build]   | Unpacking libnl-genl-3-200:amd64 (3.4.0-1) ...\r\n[Build and Test/build]   | Selecting previously unselected package libnl-genl-3-dev:amd64.\r\n[Build and Test/build]   | Preparing to unpack .../libnl-genl-3-dev_3.4.0-1_amd64.deb ...\r\n[Build and Test/build]   | Unpacking libnl-genl-3-dev:amd64 (3.4.0-1) ...\r\n[Build and Test/build]   | Setting up libnl-3-dev:amd64 (3.4.0-1) ...\r\n[Build and Test/build]   | Setting up libnl-genl-3-200:amd64 (3.4.0-1) ...\r\n[Build and Test/build]   | Setting up libnl-genl-3-dev:amd64 (3.4.0-1) ...\r\n[Build and Test/build]   | Processing triggers for libc-bin (2.31-0ubuntu9.2) ...\r\n[Build and Test/build]   |   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n[Build and Test/build]   |                                  Dload  Upload   Total   Spent    Left  Speed\n[Build and Test/build]   | \r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n[Build and Test/build]   | \r100 1493k  100 1493k    0     0  1653k      0 --:--:-- --:--:-- --:--:-- 1653k\n[Build and Test/build]   | Archive:  protoc-3.7.1-linux-x86_64.zip\n[Build and Test/build]   |    creating: /usr/local/include/google/\n[Build and Test/build]   |    creating: /usr/local/include/google/protobuf/\n[Build and Test/build]   |   inflating: /usr/local/include/google/protobuf/wrappers.proto  \n[Build and Test/build]   |   inflating: /usr/local/include/google/protobuf/field_mask.proto  \n[Build and Test/build]   |   inflating: /usr/local/include/google/protobuf/api.proto  \n[Build and Test/build]   |   inflating: /usr/local/include/google/protobuf/struct.proto  \n[Build and Test/build]   |   inflating: /usr/local/include/google/protobuf/descriptor.proto  \n[Build and Test/build]   |   inflating: /usr/local/include/google/protobuf/timestamp.proto  \n[Build and Test/build]   |    creating: /usr/local/include/google/protobuf/compiler/\n[Build and Test/build]   |   inflating: /usr/local/include/google/protobuf/compiler/plugin.proto  \n[Build and Test/build]   |   inflating: /usr/local/include/google/protobuf/empty.proto  \n[Build and Test/build]   |   inflating: /usr/local/include/google/protobuf/any.proto  \n[Build and Test/build]   |   inflating: /usr/local/include/google/protobuf/source_context.proto  \n[Build and Test/build]   |   inflating: /usr/local/include/google/protobuf/type.proto  \n[Build and Test/build]   |   inflating: /usr/local/include/google/protobuf/duration.proto  \n[Build and Test/build]   |   inflating: /usr/local/bin/protoc   \n[Build and Test/build]   |   inflating: /usr/local/readme.txt   \n[Build and Test/build]   \u2705  Success - Main Install Dependencies\n[Build and Test/build] \u2b50 Run Main Protobuf\n[Build and Test/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Build and Test/build]   | go install google.golang.org/protobuf/cmd/protoc-gen-go\n[Build and Test/build]   | go: downloading google.golang.org/protobuf v1.23.0\n[Build and Test/build]   | cd pb/config; protoc --go_out=paths=source_relative:. config.proto\n[Build and Test/build]   | cd pb/seesaw; protoc --go_out=paths=source_relative:. seesaw.proto\n[Build and Test/build]   | ?? .github/workflows/ci-crawler.yaml\n[Build and Test/build]   \u2705  Success - Main Protobuf\n[Build and Test/build] \u2b50 Run Main Build\n[Build and Test/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Build and Test/build]   | go: downloading github.com/dlintw/goconf v0.0.0-20120228082610-dcc070983490\n[Build and Test/build]   | go: downloading github.com/golang/glog v1.0.0\n[Build and Test/build]   | go: downloading github.com/golang/protobuf v1.4.0\n[Build and Test/build]   | go: downloading github.com/fsnotify/fsnotify v1.6.0\n[Build and Test/build]   | go: downloading golang.org/x/crypto v0.6.0\n[Build and Test/build]   | go: downloading github.com/miekg/dns v1.1.51\n[Build and Test/build]   | go: downloading golang.org/x/sys v0.5.0\n[Build and Test/build]   | go: downloading golang.org/x/net v0.7.0\n[Build and Test/build]   | go: downloading golang.org/x/term v0.5.0\n[Build and Test/build]   \u2705  Success - Main Build\n[Build and Test/build] \u2b50 Run Main Test\n[Build and Test/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[Build and Test/build]   | go: downloading github.com/kylelemons/godebug v1.1.0\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/binaries/seesaw_cli\t[no test files]\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/binaries/seesaw_ecu\t[no test files]\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/binaries/seesaw_engine\t[no test files]\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/binaries/seesaw_ha\t[no test files]\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/binaries/seesaw_healthcheck\t[no test files]\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/binaries/seesaw_ncc\t[no test files]\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/binaries/seesaw_watchdog\t[no test files]\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/cli\t[no test files]\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/common/conn\t[no test files]\n[Build and Test/build]   | ok  \tgithub.com/google/seesaw/common/ipc\t0.094s\tcoverage: 50.9% of statements\n[Build and Test/build]   | ok  \tgithub.com/google/seesaw/common/seesaw\t0.072s\tcoverage: 35.6% of statements\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/common/server\t[no test files]\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/ecu\t[no test files]\n[Build and Test/build]   | ok  \tgithub.com/google/seesaw/engine\t9.579s\tcoverage: 47.8% of statements\n[Build and Test/build]   | ok  \tgithub.com/google/seesaw/engine/config\t0.180s\tcoverage: 43.9% of statements\n[Build and Test/build]   | ok  \tgithub.com/google/seesaw/ha\t0.141s\tcoverage: 18.6% of statements\n[Build and Test/build]   | --- FAIL: TestHTTPChecker (0.03s)\n[Build and Test/build]   |     healthcheck_test.go:144: Failed to get TCP listener: listen tcp6 [::1]:0: bind: cannot assign requested address\n[Build and Test/build]   | --- FAIL: TestHTTPCheckerSecure (0.28s)\n[Build and Test/build]   |     healthcheck_test.go:144: Failed to get TCP listener: listen tcp6 [::1]:0: bind: cannot assign requested address\n[Build and Test/build]   | --- FAIL: TestTCPChecker (3.10s)\n[Build and Test/build]   |     healthcheck_test.go:249: Failed to get TCP listener: listen tcp6 [::1]:0: bind: cannot assign requested address\n[Build and Test/build]   | --- FAIL: TestUDPChecker (0.00s)\n[Build and Test/build]   |     healthcheck_test.go:315: Failed to get UDPConn: listen udp6 [::1]:0: bind: cannot assign requested address\n[Build and Test/build]   | FAIL\n[Build and Test/build]   | coverage: 37.8% of statements\n[Build and Test/build]   | FAIL\tgithub.com/google/seesaw/healthcheck\t7.726s\n[Build and Test/build]   | ok  \tgithub.com/google/seesaw/ipvs\t0.059s\tcoverage: 26.0% of statements\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/ncc\t[no test files]\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/ncc/client\t[no test files]\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/ncc/types\t[no test files]\n[Build and Test/build]   | ok  \tgithub.com/google/seesaw/netlink\t0.046s\tcoverage: 56.7% of statements\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/pb/config\t[no test files]\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/pb/seesaw\t[no test files]\n[Build and Test/build]   | ok  \tgithub.com/google/seesaw/quagga\t0.086s\tcoverage: 62.1% of statements\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/test_tools/healthcheck_test_tool\t[no test files]\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/test_tools/ipvs_test_tool\t[no test files]\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/test_tools/ncc_test_tool\t[no test files]\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/test_tools/quagga_test_tool\t[no test files]\n[Build and Test/build]   | ?   \tgithub.com/google/seesaw/watchdog\t[no test files]\n[Build and Test/build]   | FAIL\n[Build and Test/build]   \u274c  Failure - Main Test\n[Build and Test/build] exitcode '1': failure\n[Build and Test/build] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'build' failed\n"
}