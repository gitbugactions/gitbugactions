{
    "repository": "stretchr/testify",
    "clone_url": "https://github.com/stretchr/testify.git",
    "timestamp": "2023-05-30T10:27:22.348265Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[All builds/build] \ud83d\ude80  Start image=crawlergpt:latest\n[All builds/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[All builds/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[All builds/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[All builds/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify] user=0 workdir=\n[All builds/build]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v3.2.0\n[All builds/build] \ud83e\uddea  Matrix: map[go_version:1.20]\n[All builds/build] \u2b50 Run Main actions/checkout@v3\n[All builds/build]   \u2705  Success - Main actions/checkout@v3\n[All builds/build] \u2b50 Run Main Setup Go\n[All builds/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v3.2.0/ dst=/var/run/act/actions/actions-setup-go@v3.2.0/\n[All builds/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v3.2.0/] user=0 workdir=\n[All builds/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3.2.0/dist/setup/index.js] user= workdir=\n[All builds/build]   | Setup go version spec 1.20\n[All builds/build]   \ud83d\udcac  ::debug::isExplicit: \n[All builds/build]   \ud83d\udcac  ::debug::explicit? false\n[All builds/build]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[All builds/build]   \ud83d\udcac  ::debug::explicit? true\n[All builds/build]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[All builds/build]   \ud83d\udcac  ::debug::explicit? true\n[All builds/build]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[All builds/build]   \ud83d\udcac  ::debug::explicit? true\n[All builds/build]   \ud83d\udcac  ::debug::evaluating 3 versions\n[All builds/build]   \ud83d\udcac  ::debug::match not found\n[All builds/build]   | Attempting to download 1.20...\n[All builds/build]   | matching 1.20...\n[All builds/build]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.20\n[All builds/build]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[All builds/build]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[All builds/build]   \ud83d\udcac  ::debug::matched 1.20.4\n[All builds/build]   | Acquiring 1.20.4 from https://github.com/actions/go-versions/releases/download/1.20.4-4868896393/go-1.20.4-linux-x64.tar.gz\n[All builds/build]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/go-versions/releases/download/1.20.4-4868896393/go-1.20.4-linux-x64.tar.gz\n[All builds/build]   \ud83d\udcac  ::debug::Destination /tmp/f2f7ef16-363b-4cca-9c1a-72a07173c7c8\n[All builds/build]   \ud83d\udcac  ::debug::download complete\n[All builds/build]   | Extracting Go...\n[All builds/build]   \ud83d\udcac  ::debug::Checking tar --version\n[All builds/build]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[All builds/build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/60676889-a79c-4fb0-8f8f-fb70bfe0c192 -f /tmp/f2f7ef16-363b-4cca-9c1a-72a07173c7c8\n[All builds/build]   | Successfully extracted go to /tmp/60676889-a79c-4fb0-8f8f-fb70bfe0c192\n[All builds/build]   | Adding to the cache ...\n[All builds/build]   \ud83d\udcac  ::debug::Caching tool go 1.20.4 x64\n[All builds/build]   \ud83d\udcac  ::debug::source dir: /tmp/60676889-a79c-4fb0-8f8f-fb70bfe0c192\n[All builds/build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.4/x64\n[All builds/build]   \ud83d\udcac  ::debug::finished caching tool\n[All builds/build]   | Successfully cached go to /opt/hostedtoolcache/go/1.20.4/x64\n[All builds/build]   | Added go to the path\n[All builds/build]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.20.4/x64/bin/go:\n[All builds/build]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[All builds/build]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[All builds/build]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[All builds/build]   \ud83d\udcac  ::debug::add bin true\n[All builds/build]   | Successfully set up Go version 1.20\n[All builds/build]   \u2753 add-matcher /run/act/actions/actions-setup-go@v3.2.0/matchers.json\n[All builds/build]   | go version go1.20.4 linux/amd64\n[All builds/build]   | \n[All builds/build]   | \n[All builds/build]   \u2699  ::set-output:: go-version=1.20.4\n[All builds/build]   \u2753  ::group::go env\n[All builds/build]   | GO111MODULE=\"\"\n[All builds/build]   | GOARCH=\"amd64\"\n[All builds/build]   | GOBIN=\"\"\n[All builds/build]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[All builds/build]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[All builds/build]   | GOEXE=\"\"\n[All builds/build]   | GOEXPERIMENT=\"\"\n[All builds/build]   | GOFLAGS=\"\"\n[All builds/build]   | GOHOSTARCH=\"amd64\"\n[All builds/build]   | GOHOSTOS=\"linux\"\n[All builds/build]   | GOINSECURE=\"\"\n[All builds/build]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[All builds/build]   | GONOPROXY=\"\"\n[All builds/build]   | GONOSUMDB=\"\"\n[All builds/build]   | GOOS=\"linux\"\n[All builds/build]   | GOPATH=\"/home/runneradmin/go\"\n[All builds/build]   | GOPRIVATE=\"\"\n[All builds/build]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[All builds/build]   | GOROOT=\"/opt/hostedtoolcache/go/1.20.4/x64\"\n[All builds/build]   | GOSUMDB=\"sum.golang.org\"\n[All builds/build]   | GOTMPDIR=\"\"\n[All builds/build]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.20.4/x64/pkg/tool/linux_amd64\"\n[All builds/build]   | GOVCS=\"\"\n[All builds/build]   | GOVERSION=\"go1.20.4\"\n[All builds/build]   | GCCGO=\"gccgo\"\n[All builds/build]   | GOAMD64=\"v1\"\n[All builds/build]   | AR=\"ar\"\n[All builds/build]   | CC=\"gcc\"\n[All builds/build]   | CXX=\"g++\"\n[All builds/build]   | CGO_ENABLED=\"1\"\n[All builds/build]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/go.mod\"\n[All builds/build]   | GOWORK=\"\"\n[All builds/build]   | CGO_CFLAGS=\"-O2 -g\"\n[All builds/build]   | CGO_CPPFLAGS=\"\"\n[All builds/build]   | CGO_CXXFLAGS=\"-O2 -g\"\n[All builds/build]   | CGO_FFLAGS=\"-O2 -g\"\n[All builds/build]   | CGO_LDFLAGS=\"-O2 -g\"\n[All builds/build]   | PKG_CONFIG=\"pkg-config\"\n[All builds/build]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build3610814369=/tmp/go-build -gno-record-gcc-switches\"\n[All builds/build]   | \n[All builds/build]   \u2753  ::endgroup::\n[All builds/build]   \u2705  Success - Main Setup Go\n[All builds/build]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.20.4/x64/bin\n[All builds/build]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[All builds/build] \u2b50 Run Main ./.ci.gogenerate.sh\n[All builds/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[All builds/build]   | go: downloading github.com/pmezard/go-difflib v1.0.0\n[All builds/build]   | go: downloading github.com/davecgh/go-spew v1.1.1\n[All builds/build]   | go: downloading gopkg.in/yaml.v3 v3.0.1\n[All builds/build]   | go: downloading github.com/stretchr/objx v0.5.0\n[All builds/build]   | go: downloading github.com/ernesto-jimenez/gogen v0.0.0-20180125220232-d7d4131e6607\n[All builds/build]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/assert\n[All builds/build]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/assert\n[All builds/build]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/require\n[All builds/build]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/require\n[All builds/build]   \u2705  Success - Main ./.ci.gogenerate.sh\n[All builds/build] \u2b50 Run Main ./.ci.gofmt.sh\n[All builds/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[All builds/build]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/assert\n[All builds/build]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/assert\n[All builds/build]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/require\n[All builds/build]   | /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/require\n[All builds/build]   \u2705  Success - Main ./.ci.gofmt.sh\n[All builds/build] \u2b50 Run Main ./.ci.govet.sh\n[All builds/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[All builds/build]   \u2705  Success - Main ./.ci.govet.sh\n[All builds/build] \u2b50 Run Main go test -v -race ./...\n[All builds/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[All builds/build]   | === RUN   TestImports\n[All builds/build]   | --- PASS: TestImports (0.00s)\n[All builds/build]   | PASS\n[All builds/build]   | ok  \tgithub.com/stretchr/testify\t0.061s\n[All builds/build]   | ?   \tgithub.com/stretchr/testify/http\t[no test files]\n[All builds/build]   | === RUN   TestCompare17\n[All builds/build]   | --- PASS: TestCompare17 (0.00s)\n[All builds/build]   | === RUN   TestGreater17\n[All builds/build]   | --- PASS: TestGreater17 (0.00s)\n[All builds/build]   | === RUN   TestGreaterOrEqual17\n[All builds/build]   | --- PASS: TestGreaterOrEqual17 (0.00s)\n[All builds/build]   | === RUN   TestLess17\n[All builds/build]   | --- PASS: TestLess17 (0.00s)\n[All builds/build]   | === RUN   TestLessOrEqual17\n[All builds/build]   | --- PASS: TestLessOrEqual17 (0.00s)\n[All builds/build]   | === RUN   TestCompare\n[All builds/build]   | --- PASS: TestCompare (0.00s)\n[All builds/build]   | === RUN   TestGreater\n[All builds/build]   | --- PASS: TestGreater (0.00s)\n[All builds/build]   | === RUN   TestGreaterOrEqual\n[All builds/build]   | --- PASS: TestGreaterOrEqual (0.00s)\n[All builds/build]   | === RUN   TestLess\n[All builds/build]   | --- PASS: TestLess (0.00s)\n[All builds/build]   | === RUN   TestLessOrEqual\n[All builds/build]   | --- PASS: TestLessOrEqual (0.00s)\n[All builds/build]   | === RUN   TestPositive\n[All builds/build]   | --- PASS: TestPositive (0.00s)\n[All builds/build]   | === RUN   TestNegative\n[All builds/build]   | --- PASS: TestNegative (0.00s)\n[All builds/build]   | === RUN   Test_compareTwoValuesDifferentValuesTypes\n[All builds/build]   | --- PASS: Test_compareTwoValuesDifferentValuesTypes (0.00s)\n[All builds/build]   | === RUN   Test_compareTwoValuesNotComparableValues\n[All builds/build]   | --- PASS: Test_compareTwoValuesNotComparableValues (0.00s)\n[All builds/build]   | === RUN   Test_compareTwoValuesCorrectCompareResult\n[All builds/build]   | --- PASS: Test_compareTwoValuesCorrectCompareResult (0.00s)\n[All builds/build]   | === RUN   Test_containsValue\n[All builds/build]   | --- PASS: Test_containsValue (0.00s)\n[All builds/build]   | === RUN   TestComparingMsgAndArgsForwarding\n[All builds/build]   | --- PASS: TestComparingMsgAndArgsForwarding (0.00s)\n[All builds/build]   | === RUN   TestIsIncreasing\n[All builds/build]   | --- PASS: TestIsIncreasing (0.00s)\n[All builds/build]   | === RUN   TestIsNonIncreasing\n[All builds/build]   | --- PASS: TestIsNonIncreasing (0.00s)\n[All builds/build]   | === RUN   TestIsDecreasing\n[All builds/build]   | --- PASS: TestIsDecreasing (0.00s)\n[All builds/build]   | === RUN   TestIsNonDecreasing\n[All builds/build]   | --- PASS: TestIsNonDecreasing (0.01s)\n[All builds/build]   | === RUN   TestOrderingMsgAndArgsForwarding\n[All builds/build]   | --- PASS: TestOrderingMsgAndArgsForwarding (0.00s)\n[All builds/build]   | === RUN   TestObjectsAreEqual\n[All builds/build]   | === RUN   TestObjectsAreEqual/ObjectsAreEqual(\"Hello_World\",_\"Hello_World\")\n[All builds/build]   | === RUN   TestObjectsAreEqual/ObjectsAreEqual(123,_123)\n[All builds/build]   | === RUN   TestObjectsAreEqual/ObjectsAreEqual(123.5,_123.5)\n[All builds/build]   | === RUN   TestObjectsAreEqual/ObjectsAreEqual([]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64},_[]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64})\n[All builds/build]   | === RUN   TestObjectsAreEqual/ObjectsAreEqual(<nil>,_<nil>)\n[All builds/build]   | === RUN   TestObjectsAreEqual/ObjectsAreEqual(map[int]int{5:10},_map[int]int{10:20})\n[All builds/build]   | === RUN   TestObjectsAreEqual/ObjectsAreEqual(120,_\"x\")\n[All builds/build]   | === RUN   TestObjectsAreEqual/ObjectsAreEqual(\"x\",_120)\n[All builds/build]   | === RUN   TestObjectsAreEqual/ObjectsAreEqual(0,_0.1)\n[All builds/build]   | === RUN   TestObjectsAreEqual/ObjectsAreEqual(0.1,_0)\n[All builds/build]   | === RUN   TestObjectsAreEqual/ObjectsAreEqual((func()_time.Time)(0x4ccb40),_(func()_time.Time)(0x4ccb40))\n[All builds/build]   | === RUN   TestObjectsAreEqual/ObjectsAreEqual((func())(0x7621a0),_(func())(0x7621c0))\n[All builds/build]   | === RUN   TestObjectsAreEqual/ObjectsAreEqual(0xa,_10)\n[All builds/build]   | --- PASS: TestObjectsAreEqual (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsAreEqual/ObjectsAreEqual(\"Hello_World\",_\"Hello_World\") (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsAreEqual/ObjectsAreEqual(123,_123) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsAreEqual/ObjectsAreEqual(123.5,_123.5) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsAreEqual/ObjectsAreEqual([]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64},_[]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsAreEqual/ObjectsAreEqual(<nil>,_<nil>) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsAreEqual/ObjectsAreEqual(map[int]int{5:10},_map[int]int{10:20}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsAreEqual/ObjectsAreEqual(120,_\"x\") (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsAreEqual/ObjectsAreEqual(\"x\",_120) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsAreEqual/ObjectsAreEqual(0,_0.1) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsAreEqual/ObjectsAreEqual(0.1,_0) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsAreEqual/ObjectsAreEqual((func()_time.Time)(0x4ccb40),_(func()_time.Time)(0x4ccb40)) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsAreEqual/ObjectsAreEqual((func())(0x7621a0),_(func())(0x7621c0)) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsAreEqual/ObjectsAreEqual(0xa,_10) (0.00s)\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}},_assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}},_assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:\"a\",_notExported2:assert.Nested{Exported:5,_notExported:6}})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}},_assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:\"a\"}})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}},_assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:\"a\",_notExported:\"a\"}})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}},_assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:\"a\"},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}},_assert.S{Exported1:\"a\",_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}},_assert.S{Exported1:1,_Exported2:assert.Nested{Exported:\"a\",_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}},_assert.S2{foo:1})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(1,_assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S3{Exported1:(*assert.Nested)(0xc000180520),_Exported2:(*assert.Nested)(0xc000180540)},_assert.S3{Exported1:(*assert.Nested)(0xc000180560),_Exported2:(*assert.Nested)(0xc000180580)})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S3{Exported1:(*assert.Nested)(nil),_Exported2:(*assert.Nested)(0xc0001805a0)},_assert.S3{Exported1:(*assert.Nested)(nil),_Exported2:(*assert.Nested)(0xc0001805c0)})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S3{Exported1:(*assert.Nested)(0xc0001805e0),_Exported2:(*assert.Nested)(0xc000180600)},_assert.S3{Exported1:(*assert.Nested)(0xc000180620),_Exported2:(*assert.Nested)(0xc000180640)})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S3{Exported1:(*assert.Nested)(0xc000180660),_Exported2:(*assert.Nested)(0xc000180680)},_assert.S3{Exported1:(*assert.Nested)(0xc0001806a0),_Exported2:(*assert.Nested)(0xc0001806c0)})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S3{Exported1:(*assert.Nested)(0xc0001806e0),_Exported2:(*assert.Nested)(0xc000180700)},_assert.S3{Exported1:(*assert.Nested)(0xc000180720),_Exported2:(*assert.Nested)(0xc000180740)})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S3{Exported1:(*assert.Nested)(0xc000180760),_Exported2:(*assert.Nested)(0xc000180780)},_assert.S3{Exported1:(*assert.Nested)(nil),_Exported2:(*assert.Nested)(nil)})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S3{Exported1:(*assert.Nested)(nil),_Exported2:(*assert.Nested)(nil)},_assert.S3{Exported1:(*assert.Nested)(nil),_Exported2:(*assert.Nested)(nil)})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S4{Exported1:[]*assert.Nested{(*assert.Nested)(0xc000180820)}},_assert.S4{Exported1:[]*assert.Nested{(*assert.Nested)(0xc000180840)}})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S4{Exported1:[]*assert.Nested{(*assert.Nested)(0xc000180860)}},_assert.S4{Exported1:[]*assert.Nested{(*assert.Nested)(0xc000180880)}})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S4{Exported1:[]*assert.Nested{(*assert.Nested)(0xc0001808a0),_(*assert.Nested)(0xc0001808c0)}},_assert.S4{Exported1:[]*assert.Nested{(*assert.Nested)(0xc0001808e0),_(*assert.Nested)(0xc000180900)}})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S4{Exported1:[]*assert.Nested{(*assert.Nested)(0xc000180920),_(*assert.Nested)(0xc000180940)}},_assert.S4{Exported1:[]*assert.Nested{(*assert.Nested)(0xc000180960),_(*assert.Nested)(0xc000180980)}})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.Nested{Exported:(*int)(0xc000564918),_notExported:2},_assert.Nested{Exported:(*int)(0xc000564918),_notExported:2})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.Nested{Exported:(*assert.Nested)(0xc0001807a0),_notExported:3},_assert.Nested{Exported:(*assert.Nested)(0xc0001807c0),_notExported:3})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.Nested{Exported:(*assert.Nested)(0xc0001807e0),_notExported:3},_assert.Nested{Exported:interface_{}(nil),_notExported:3})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.Nested{Exported:map[interface_{}]*assert.Nested{interface_{}(nil):(*assert.Nested)(nil)},_notExported:2},_assert.Nested{Exported:map[interface_{}]*assert.Nested{interface_{}(nil):(*assert.Nested)(nil)},_notExported:2})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.Nested{Exported:map[interface_{}]*assert.Nested{\"a\":(*assert.Nested)(nil)},_notExported:2},_assert.Nested{Exported:map[interface_{}]*assert.Nested{\"a\":(*assert.Nested)(nil)},_notExported:2})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.Nested{Exported:map[interface_{}]*assert.Nested{\"a\":(*assert.Nested)(nil)},_notExported:2},_assert.Nested{Exported:map[interface_{}]*assert.Nested{\"a\":(*assert.Nested)(0xc000180800)},_notExported:2})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.Nested{Exported:map[interface_{}]assert.Nested{\"a\":assert.Nested{Exported:1,_notExported:2},_\"b\":assert.Nested{Exported:3,_notExported:4}},_notExported:2},_assert.Nested{Exported:map[interface_{}]assert.Nested{\"a\":assert.Nested{Exported:1,_notExported:5},_\"b\":assert.Nested{Exported:3,_notExported:7}},_notExported:2})\n[All builds/build]   | === RUN   TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.Nested{Exported:map[interface_{}]assert.Nested{\"a\":assert.Nested{Exported:1,_notExported:2},_\"b\":assert.Nested{Exported:3,_notExported:4}},_notExported:2},_assert.Nested{Exported:map[interface_{}]assert.Nested{\"a\":assert.Nested{Exported:2,_notExported:2},_\"b\":assert.Nested{Exported:3,_notExported:4}},_notExported:2})\n[All builds/build]   | --- PASS: TestObjectsExportedFieldsAreEqual (0.01s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}},_assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}},_assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:\"a\",_notExported2:assert.Nested{Exported:5,_notExported:6}}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}},_assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:\"a\"}}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}},_assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:\"a\",_notExported:\"a\"}}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}},_assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:\"a\"},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}},_assert.S{Exported1:\"a\",_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}},_assert.S{Exported1:1,_Exported2:assert.Nested{Exported:\"a\",_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}},_assert.S2{foo:1}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(1,_assert.S{Exported1:1,_Exported2:assert.Nested{Exported:2,_notExported:3},_notExported1:4,_notExported2:assert.Nested{Exported:5,_notExported:6}}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S3{Exported1:(*assert.Nested)(0xc000180520),_Exported2:(*assert.Nested)(0xc000180540)},_assert.S3{Exported1:(*assert.Nested)(0xc000180560),_Exported2:(*assert.Nested)(0xc000180580)}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S3{Exported1:(*assert.Nested)(nil),_Exported2:(*assert.Nested)(0xc0001805a0)},_assert.S3{Exported1:(*assert.Nested)(nil),_Exported2:(*assert.Nested)(0xc0001805c0)}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S3{Exported1:(*assert.Nested)(0xc0001805e0),_Exported2:(*assert.Nested)(0xc000180600)},_assert.S3{Exported1:(*assert.Nested)(0xc000180620),_Exported2:(*assert.Nested)(0xc000180640)}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S3{Exported1:(*assert.Nested)(0xc000180660),_Exported2:(*assert.Nested)(0xc000180680)},_assert.S3{Exported1:(*assert.Nested)(0xc0001806a0),_Exported2:(*assert.Nested)(0xc0001806c0)}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S3{Exported1:(*assert.Nested)(0xc0001806e0),_Exported2:(*assert.Nested)(0xc000180700)},_assert.S3{Exported1:(*assert.Nested)(0xc000180720),_Exported2:(*assert.Nested)(0xc000180740)}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S3{Exported1:(*assert.Nested)(0xc000180760),_Exported2:(*assert.Nested)(0xc000180780)},_assert.S3{Exported1:(*assert.Nested)(nil),_Exported2:(*assert.Nested)(nil)}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S3{Exported1:(*assert.Nested)(nil),_Exported2:(*assert.Nested)(nil)},_assert.S3{Exported1:(*assert.Nested)(nil),_Exported2:(*assert.Nested)(nil)}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S4{Exported1:[]*assert.Nested{(*assert.Nested)(0xc000180820)}},_assert.S4{Exported1:[]*assert.Nested{(*assert.Nested)(0xc000180840)}}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S4{Exported1:[]*assert.Nested{(*assert.Nested)(0xc000180860)}},_assert.S4{Exported1:[]*assert.Nested{(*assert.Nested)(0xc000180880)}}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S4{Exported1:[]*assert.Nested{(*assert.Nested)(0xc0001808a0),_(*assert.Nested)(0xc0001808c0)}},_assert.S4{Exported1:[]*assert.Nested{(*assert.Nested)(0xc0001808e0),_(*assert.Nested)(0xc000180900)}}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.S4{Exported1:[]*assert.Nested{(*assert.Nested)(0xc000180920),_(*assert.Nested)(0xc000180940)}},_assert.S4{Exported1:[]*assert.Nested{(*assert.Nested)(0xc000180960),_(*assert.Nested)(0xc000180980)}}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.Nested{Exported:(*int)(0xc000564918),_notExported:2},_assert.Nested{Exported:(*int)(0xc000564918),_notExported:2}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.Nested{Exported:(*assert.Nested)(0xc0001807a0),_notExported:3},_assert.Nested{Exported:(*assert.Nested)(0xc0001807c0),_notExported:3}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.Nested{Exported:(*assert.Nested)(0xc0001807e0),_notExported:3},_assert.Nested{Exported:interface_{}(nil),_notExported:3}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.Nested{Exported:map[interface_{}]*assert.Nested{interface_{}(nil):(*assert.Nested)(nil)},_notExported:2},_assert.Nested{Exported:map[interface_{}]*assert.Nested{interface_{}(nil):(*assert.Nested)(nil)},_notExported:2}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.Nested{Exported:map[interface_{}]*assert.Nested{\"a\":(*assert.Nested)(nil)},_notExported:2},_assert.Nested{Exported:map[interface_{}]*assert.Nested{\"a\":(*assert.Nested)(nil)},_notExported:2}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.Nested{Exported:map[interface_{}]*assert.Nested{\"a\":(*assert.Nested)(nil)},_notExported:2},_assert.Nested{Exported:map[interface_{}]*assert.Nested{\"a\":(*assert.Nested)(0xc000180800)},_notExported:2}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.Nested{Exported:map[interface_{}]assert.Nested{\"a\":assert.Nested{Exported:1,_notExported:2},_\"b\":assert.Nested{Exported:3,_notExported:4}},_notExported:2},_assert.Nested{Exported:map[interface_{}]assert.Nested{\"a\":assert.Nested{Exported:1,_notExported:5},_\"b\":assert.Nested{Exported:3,_notExported:7}},_notExported:2}) (0.00s)\n[All builds/build]   |     --- PASS: TestObjectsExportedFieldsAreEqual/ObjectsExportedFieldsAreEqual(assert.Nested{Exported:map[interface_{}]assert.Nested{\"a\":assert.Nested{Exported:1,_notExported:2},_\"b\":assert.Nested{Exported:3,_notExported:4}},_notExported:2},_assert.Nested{Exported:map[interface_{}]assert.Nested{\"a\":assert.Nested{Exported:2,_notExported:2},_\"b\":assert.Nested{Exported:3,_notExported:4}},_notExported:2}) (0.00s)\n[All builds/build]   | === RUN   TestCopyExportedFields\n[All builds/build]   | === RUN   TestCopyExportedFields/#00\n[All builds/build]   | === RUN   TestCopyExportedFields/#01\n[All builds/build]   | === RUN   TestCopyExportedFields/#02\n[All builds/build]   | === RUN   TestCopyExportedFields/#03\n[All builds/build]   | === RUN   TestCopyExportedFields/#04\n[All builds/build]   | === RUN   TestCopyExportedFields/#05\n[All builds/build]   | === RUN   TestCopyExportedFields/#06\n[All builds/build]   | === RUN   TestCopyExportedFields/#07\n[All builds/build]   | === RUN   TestCopyExportedFields/#08\n[All builds/build]   | === RUN   TestCopyExportedFields/#09\n[All builds/build]   | === RUN   TestCopyExportedFields/#10\n[All builds/build]   | === RUN   TestCopyExportedFields/#11\n[All builds/build]   | --- PASS: TestCopyExportedFields (0.00s)\n[All builds/build]   |     --- PASS: TestCopyExportedFields/#00 (0.00s)\n[All builds/build]   |     --- PASS: TestCopyExportedFields/#01 (0.00s)\n[All builds/build]   |     --- PASS: TestCopyExportedFields/#02 (0.00s)\n[All builds/build]   |     --- PASS: TestCopyExportedFields/#03 (0.00s)\n[All builds/build]   |     --- PASS: TestCopyExportedFields/#04 (0.00s)\n[All builds/build]   |     --- PASS: TestCopyExportedFields/#05 (0.00s)\n[All builds/build]   |     --- PASS: TestCopyExportedFields/#06 (0.00s)\n[All builds/build]   |     --- PASS: TestCopyExportedFields/#07 (0.00s)\n[All builds/build]   |     --- PASS: TestCopyExportedFields/#08 (0.00s)\n[All builds/build]   |     --- PASS: TestCopyExportedFields/#09 (0.00s)\n[All builds/build]   |     --- PASS: TestCopyExportedFields/#10 (0.00s)\n[All builds/build]   |     --- PASS: TestCopyExportedFields/#11 (0.00s)\n[All builds/build]   | === RUN   TestEqualExportedValues\n[All builds/build]   | === RUN   TestEqualExportedValues/#00\n[All builds/build]   | === RUN   TestEqualExportedValues/#01\n[All builds/build]   | === RUN   TestEqualExportedValues/#02\n[All builds/build]   | === RUN   TestEqualExportedValues/#03\n[All builds/build]   | --- PASS: TestEqualExportedValues (0.00s)\n[All builds/build]   |     --- PASS: TestEqualExportedValues/#00 (0.00s)\n[All builds/build]   |     --- PASS: TestEqualExportedValues/#01 (0.00s)\n[All builds/build]   |     --- PASS: TestEqualExportedValues/#02 (0.00s)\n[All builds/build]   |     --- PASS: TestEqualExportedValues/#03 (0.00s)\n[All builds/build]   | === RUN   TestImplements\n[All builds/build]   | --- PASS: TestImplements (0.00s)\n[All builds/build]   | === RUN   TestIsType\n[All builds/build]   | --- PASS: TestIsType (0.00s)\n[All builds/build]   | === RUN   TestEqual\n[All builds/build]   | === RUN   TestEqual/Equal(\"Hello_World\",_\"Hello_World\")\n[All builds/build]   | === RUN   TestEqual/Equal(123,_123)\n[All builds/build]   | === RUN   TestEqual/Equal(123.5,_123.5)\n[All builds/build]   | === RUN   TestEqual/Equal([]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64},_[]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64})\n[All builds/build]   | === RUN   TestEqual/Equal(<nil>,_<nil>)\n[All builds/build]   | === RUN   TestEqual/Equal(123,_123)#01\n[All builds/build]   | === RUN   TestEqual/Equal(0x7b,_0x7b)\n[All builds/build]   | === RUN   TestEqual/Equal(\"1\",_\"1\")\n[All builds/build]   | === RUN   TestEqual/Equal(&struct_{}{},_&struct_{}{})\n[All builds/build]   | === RUN   TestEqual/Equal(<nil>,_\"something\")\n[All builds/build]   | === RUN   TestEqual/Equal(\"1\",_\"2\")\n[All builds/build]   | === RUN   TestEqual/Equal(10,_0xa)\n[All builds/build]   | --- PASS: TestEqual (0.00s)\n[All builds/build]   |     --- PASS: TestEqual/Equal(\"Hello_World\",_\"Hello_World\") (0.00s)\n[All builds/build]   |     --- PASS: TestEqual/Equal(123,_123) (0.00s)\n[All builds/build]   |     --- PASS: TestEqual/Equal(123.5,_123.5) (0.00s)\n[All builds/build]   |     --- PASS: TestEqual/Equal([]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64},_[]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64}) (0.00s)\n[All builds/build]   |     --- PASS: TestEqual/Equal(<nil>,_<nil>) (0.00s)\n[All builds/build]   |     --- PASS: TestEqual/Equal(123,_123)#01 (0.00s)\n[All builds/build]   |     --- PASS: TestEqual/Equal(0x7b,_0x7b) (0.00s)\n[All builds/build]   |     --- PASS: TestEqual/Equal(\"1\",_\"1\") (0.00s)\n[All builds/build]   |     --- PASS: TestEqual/Equal(&struct_{}{},_&struct_{}{}) (0.00s)\n[All builds/build]   |     --- PASS: TestEqual/Equal(<nil>,_\"something\") (0.00s)\n[All builds/build]   |     --- PASS: TestEqual/Equal(\"1\",_\"2\") (0.00s)\n[All builds/build]   |     --- PASS: TestEqual/Equal(10,_0xa) (0.00s)\n[All builds/build]   | === RUN   TestSame\n[All builds/build]   | --- PASS: TestSame (0.00s)\n[All builds/build]   | === RUN   TestNotSame\n[All builds/build]   | --- PASS: TestNotSame (0.00s)\n[All builds/build]   | === RUN   Test_samePointers\n[All builds/build]   | === RUN   Test_samePointers/1_!=_2\n[All builds/build]   | === RUN   Test_samePointers/1_!=_1_(not_same_ptr)\n[All builds/build]   | === RUN   Test_samePointers/ptr(1)_==_ptr(1)\n[All builds/build]   | === RUN   Test_samePointers/int(1)_!=_float32(1)\n[All builds/build]   | === RUN   Test_samePointers/array_!=_slice\n[All builds/build]   | --- PASS: Test_samePointers (0.00s)\n[All builds/build]   |     --- PASS: Test_samePointers/1_!=_2 (0.00s)\n[All builds/build]   |     --- PASS: Test_samePointers/1_!=_1_(not_same_ptr) (0.00s)\n[All builds/build]   |     --- PASS: Test_samePointers/ptr(1)_==_ptr(1) (0.00s)\n[All builds/build]   |     --- PASS: Test_samePointers/int(1)_!=_float32(1) (0.00s)\n[All builds/build]   |     --- PASS: Test_samePointers/array_!=_slice (0.00s)\n[All builds/build]   | === RUN   TestStringEqual\n[All builds/build]   | --- PASS: TestStringEqual (0.00s)\n[All builds/build]   | === RUN   TestEqualFormatting\n[All builds/build]   | --- PASS: TestEqualFormatting (0.00s)\n[All builds/build]   | === RUN   TestFormatUnequalValues\n[All builds/build]   | --- PASS: TestFormatUnequalValues (0.00s)\n[All builds/build]   | === RUN   TestNotNil\n[All builds/build]   | --- PASS: TestNotNil (0.00s)\n[All builds/build]   | === RUN   TestNil\n[All builds/build]   | --- PASS: TestNil (0.00s)\n[All builds/build]   | === RUN   TestTrue\n[All builds/build]   | --- PASS: TestTrue (0.00s)\n[All builds/build]   | === RUN   TestFalse\n[All builds/build]   | --- PASS: TestFalse (0.00s)\n[All builds/build]   | === RUN   TestExactly\n[All builds/build]   | === RUN   TestExactly/Exactly(1,_1)\n[All builds/build]   | === RUN   TestExactly/Exactly(1,_2)\n[All builds/build]   | === RUN   TestExactly/Exactly(1,_1)#01\n[All builds/build]   | === RUN   TestExactly/Exactly(<nil>,_1)\n[All builds/build]   | === RUN   TestExactly/Exactly(1,_<nil>)\n[All builds/build]   | --- PASS: TestExactly (0.00s)\n[All builds/build]   |     --- PASS: TestExactly/Exactly(1,_1) (0.00s)\n[All builds/build]   |     --- PASS: TestExactly/Exactly(1,_2) (0.00s)\n[All builds/build]   |     --- PASS: TestExactly/Exactly(1,_1)#01 (0.00s)\n[All builds/build]   |     --- PASS: TestExactly/Exactly(<nil>,_1) (0.00s)\n[All builds/build]   |     --- PASS: TestExactly/Exactly(1,_<nil>) (0.00s)\n[All builds/build]   | === RUN   TestNotEqual\n[All builds/build]   | === RUN   TestNotEqual/NotEqual(\"Hello_World\",_\"Hello_World!\")\n[All builds/build]   | === RUN   TestNotEqual/NotEqual(123,_1234)\n[All builds/build]   | === RUN   TestNotEqual/NotEqual(123.5,_123.55)\n[All builds/build]   | === RUN   TestNotEqual/NotEqual([]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64},_[]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64,_0x21})\n[All builds/build]   | === RUN   TestNotEqual/NotEqual(<nil>,_&assert.AssertionTesterConformingObject{})\n[All builds/build]   | === RUN   TestNotEqual/NotEqual(<nil>,_<nil>)\n[All builds/build]   | === RUN   TestNotEqual/NotEqual(\"Hello_World\",_\"Hello_World\")\n[All builds/build]   | === RUN   TestNotEqual/NotEqual(123,_123)\n[All builds/build]   | === RUN   TestNotEqual/NotEqual(123.5,_123.5)\n[All builds/build]   | === RUN   TestNotEqual/NotEqual([]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64},_[]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64})\n[All builds/build]   | === RUN   TestNotEqual/NotEqual(&assert.AssertionTesterConformingObject{},_&assert.AssertionTesterConformingObject{})\n[All builds/build]   | === RUN   TestNotEqual/NotEqual(&struct_{}{},_&struct_{}{})\n[All builds/build]   | === RUN   TestNotEqual/NotEqual((func()_int)(0x761d00),_(func()_int)(0x761d20))\n[All builds/build]   | === RUN   TestNotEqual/NotEqual(10,_0xa)\n[All builds/build]   | --- PASS: TestNotEqual (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqual/NotEqual(\"Hello_World\",_\"Hello_World!\") (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqual/NotEqual(123,_1234) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqual/NotEqual(123.5,_123.55) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqual/NotEqual([]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64},_[]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64,_0x21}) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqual/NotEqual(<nil>,_&assert.AssertionTesterConformingObject{}) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqual/NotEqual(<nil>,_<nil>) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqual/NotEqual(\"Hello_World\",_\"Hello_World\") (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqual/NotEqual(123,_123) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqual/NotEqual(123.5,_123.5) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqual/NotEqual([]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64},_[]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64}) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqual/NotEqual(&assert.AssertionTesterConformingObject{},_&assert.AssertionTesterConformingObject{}) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqual/NotEqual(&struct_{}{},_&struct_{}{}) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqual/NotEqual((func()_int)(0x761d00),_(func()_int)(0x761d20)) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqual/NotEqual(10,_0xa) (0.00s)\n[All builds/build]   | === RUN   TestNotEqualValues\n[All builds/build]   | === RUN   TestNotEqualValues/NotEqualValues(\"Hello_World\",_\"Hello_World!\")\n[All builds/build]   | === RUN   TestNotEqualValues/NotEqualValues(123,_1234)\n[All builds/build]   | === RUN   TestNotEqualValues/NotEqualValues(123.5,_123.55)\n[All builds/build]   | === RUN   TestNotEqualValues/NotEqualValues([]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64},_[]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64,_0x21})\n[All builds/build]   | === RUN   TestNotEqualValues/NotEqualValues(<nil>,_&assert.AssertionTesterConformingObject{})\n[All builds/build]   | === RUN   TestNotEqualValues/NotEqualValues(<nil>,_<nil>)\n[All builds/build]   | === RUN   TestNotEqualValues/NotEqualValues(\"Hello_World\",_\"Hello_World\")\n[All builds/build]   | === RUN   TestNotEqualValues/NotEqualValues(123,_123)\n[All builds/build]   | === RUN   TestNotEqualValues/NotEqualValues(123.5,_123.5)\n[All builds/build]   | === RUN   TestNotEqualValues/NotEqualValues([]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64},_[]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64})\n[All builds/build]   | === RUN   TestNotEqualValues/NotEqualValues(&assert.AssertionTesterConformingObject{},_&assert.AssertionTesterConformingObject{})\n[All builds/build]   | === RUN   TestNotEqualValues/NotEqualValues(&struct_{}{},_&struct_{}{})\n[All builds/build]   | === RUN   TestNotEqualValues/NotEqualValues((func()_int)(0x761cc0),_(func()_int)(0x761ce0))\n[All builds/build]   | === RUN   TestNotEqualValues/NotEqualValues(10,_11)\n[All builds/build]   | === RUN   TestNotEqualValues/NotEqualValues(10,_0xa)\n[All builds/build]   | === RUN   TestNotEqualValues/NotEqualValues(struct_{}{},_struct_{}{})\n[All builds/build]   | --- PASS: TestNotEqualValues (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqualValues/NotEqualValues(\"Hello_World\",_\"Hello_World!\") (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqualValues/NotEqualValues(123,_1234) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqualValues/NotEqualValues(123.5,_123.55) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqualValues/NotEqualValues([]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64},_[]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64,_0x21}) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqualValues/NotEqualValues(<nil>,_&assert.AssertionTesterConformingObject{}) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqualValues/NotEqualValues(<nil>,_<nil>) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqualValues/NotEqualValues(\"Hello_World\",_\"Hello_World\") (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqualValues/NotEqualValues(123,_123) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqualValues/NotEqualValues(123.5,_123.5) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqualValues/NotEqualValues([]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64},_[]byte{0x48,_0x65,_0x6c,_0x6c,_0x6f,_0x20,_0x57,_0x6f,_0x72,_0x6c,_0x64}) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqualValues/NotEqualValues(&assert.AssertionTesterConformingObject{},_&assert.AssertionTesterConformingObject{}) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqualValues/NotEqualValues(&struct_{}{},_&struct_{}{}) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqualValues/NotEqualValues((func()_int)(0x761cc0),_(func()_int)(0x761ce0)) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqualValues/NotEqualValues(10,_11) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqualValues/NotEqualValues(10,_0xa) (0.00s)\n[All builds/build]   |     --- PASS: TestNotEqualValues/NotEqualValues(struct_{}{},_struct_{}{}) (0.00s)\n[All builds/build]   | === RUN   TestContainsNotContains\n[All builds/build]   | === RUN   TestContainsNotContains/Contains(\"Hello_World\",_\"Hello\")\n[All builds/build]   | === RUN   TestContainsNotContains/Contains(\"Hello_World\",_\"Salut\")\n[All builds/build]   | === RUN   TestContainsNotContains/Contains([]string{\"Foo\",_\"Bar\"},_\"Bar\")\n[All builds/build]   | === RUN   TestContainsNotContains/Contains([]string{\"Foo\",_\"Bar\"},_\"Salut\")\n[All builds/build]   | === RUN   TestContainsNotContains/Contains([]*assert.A{(*assert.A)(0xc0004dc600),_(*assert.A)(0xc0004dc620),_(*assert.A)(0xc0004dc640),_(*assert.A)(0xc0004dc660)},_&assert.A{Name:\"g\",_Value:\"h\"})\n[All builds/build]   | === RUN   TestContainsNotContains/Contains([]*assert.A{(*assert.A)(0xc0004dc600),_(*assert.A)(0xc0004dc620),_(*assert.A)(0xc0004dc640),_(*assert.A)(0xc0004dc660)},_&assert.A{Name:\"g\",_Value:\"e\"})\n[All builds/build]   | === RUN   TestContainsNotContains/Contains(map[interface_{}]interface_{}{\"Foo\":\"Bar\"},_\"Foo\")\n[All builds/build]   | === RUN   TestContainsNotContains/Contains(map[interface_{}]interface_{}{\"Foo\":\"Bar\"},_\"Bar\")\n[All builds/build]   | === RUN   TestContainsNotContains/Contains(map[interface_{}]interface_{}(nil),_\"Bar\")\n[All builds/build]   | === RUN   TestContainsNotContains/NotContains(\"Hello_World\",_\"Hello\")\n[All builds/build]   | === RUN   TestContainsNotContains/NotContains(\"Hello_World\",_\"Salut\")\n[All builds/build]   | === RUN   TestContainsNotContains/NotContains([]string{\"Foo\",_\"Bar\"},_\"Bar\")\n[All builds/build]   | === RUN   TestContainsNotContains/NotContains([]string{\"Foo\",_\"Bar\"},_\"Salut\")\n[All builds/build]   | === RUN   TestContainsNotContains/NotContains([]*assert.A{(*assert.A)(0xc0004dc600),_(*assert.A)(0xc0004dc620),_(*assert.A)(0xc0004dc640),_(*assert.A)(0xc0004dc660)},_&assert.A{Name:\"g\",_Value:\"h\"})\n[All builds/build]   | === RUN   TestContainsNotContains/NotContains([]*assert.A{(*assert.A)(0xc0004dc600),_(*assert.A)(0xc0004dc620),_(*assert.A)(0xc0004dc640),_(*assert.A)(0xc0004dc660)},_&assert.A{Name:\"g\",_Value:\"e\"})\n[All builds/build]   | === RUN   TestContainsNotContains/NotContains(map[interface_{}]interface_{}{\"Foo\":\"Bar\"},_\"Foo\")\n[All builds/build]   | === RUN   TestContainsNotContains/NotContains(map[interface_{}]interface_{}{\"Foo\":\"Bar\"},_\"Bar\")\n[All builds/build]   | === RUN   TestContainsNotContains/NotContains(map[interface_{}]interface_{}(nil),_\"Bar\")\n[All builds/build]   | --- PASS: TestContainsNotContains (0.01s)\n[All builds/build]   |     --- PASS: TestContainsNotContains/Contains(\"Hello_World\",_\"Hello\") (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContains/Contains(\"Hello_World\",_\"Salut\") (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContains/Contains([]string{\"Foo\",_\"Bar\"},_\"Bar\") (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContains/Contains([]string{\"Foo\",_\"Bar\"},_\"Salut\") (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContains/Contains([]*assert.A{(*assert.A)(0xc0004dc600),_(*assert.A)(0xc0004dc620),_(*assert.A)(0xc0004dc640),_(*assert.A)(0xc0004dc660)},_&assert.A{Name:\"g\",_Value:\"h\"}) (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContains/Contains([]*assert.A{(*assert.A)(0xc0004dc600),_(*assert.A)(0xc0004dc620),_(*assert.A)(0xc0004dc640),_(*assert.A)(0xc0004dc660)},_&assert.A{Name:\"g\",_Value:\"e\"}) (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContains/Contains(map[interface_{}]interface_{}{\"Foo\":\"Bar\"},_\"Foo\") (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContains/Contains(map[interface_{}]interface_{}{\"Foo\":\"Bar\"},_\"Bar\") (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContains/Contains(map[interface_{}]interface_{}(nil),_\"Bar\") (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContains/NotContains(\"Hello_World\",_\"Hello\") (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContains/NotContains(\"Hello_World\",_\"Salut\") (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContains/NotContains([]string{\"Foo\",_\"Bar\"},_\"Bar\") (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContains/NotContains([]string{\"Foo\",_\"Bar\"},_\"Salut\") (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContains/NotContains([]*assert.A{(*assert.A)(0xc0004dc600),_(*assert.A)(0xc0004dc620),_(*assert.A)(0xc0004dc640),_(*assert.A)(0xc0004dc660)},_&assert.A{Name:\"g\",_Value:\"h\"}) (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContains/NotContains([]*assert.A{(*assert.A)(0xc0004dc600),_(*assert.A)(0xc0004dc620),_(*assert.A)(0xc0004dc640),_(*assert.A)(0xc0004dc660)},_&assert.A{Name:\"g\",_Value:\"e\"}) (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContains/NotContains(map[interface_{}]interface_{}{\"Foo\":\"Bar\"},_\"Foo\") (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContains/NotContains(map[interface_{}]interface_{}{\"Foo\":\"Bar\"},_\"Bar\") (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContains/NotContains(map[interface_{}]interface_{}(nil),_\"Bar\") (0.00s)\n[All builds/build]   | === RUN   TestContainsNotContainsFailMessage\n[All builds/build]   | === RUN   TestContainsNotContainsFailMessage/assert.Contains(string,_*errors.errorString)\n[All builds/build]   | === RUN   TestContainsNotContainsFailMessage/assert.Contains(map[string]int,_string)\n[All builds/build]   | === RUN   TestContainsNotContainsFailMessage/assert.NotContains(map[string]int,_string)\n[All builds/build]   | === RUN   TestContainsNotContainsFailMessage/assert.Contains(assert.nonContainer,_string)\n[All builds/build]   | === RUN   TestContainsNotContainsFailMessage/assert.NotContains(assert.nonContainer,_string)\n[All builds/build]   | --- PASS: TestContainsNotContainsFailMessage (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContainsFailMessage/assert.Contains(string,_*errors.errorString) (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContainsFailMessage/assert.Contains(map[string]int,_string) (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContainsFailMessage/assert.NotContains(map[string]int,_string) (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContainsFailMessage/assert.Contains(assert.nonContainer,_string) (0.00s)\n[All builds/build]   |     --- PASS: TestContainsNotContainsFailMessage/assert.NotContains(assert.nonContainer,_string) (0.00s)\n[All builds/build]   | === RUN   TestContainsNotContainsOnNilValue\n[All builds/build]   | --- PASS: TestContainsNotContainsOnNilValue (0.00s)\n[All builds/build]   | === RUN   TestSubsetNotSubset\n[All builds/build]   | === RUN   TestSubsetNotSubset/SubSet:_nil_is_the_empty_set_which_is_a_subset_of_every_set\n[All builds/build]   | === RUN   TestSubsetNotSubset/SubSet:_[]_is_a_subset_of_['\\x01'_'\\x02'_'\\x03']\n[All builds/build]   | === RUN   TestSubsetNotSubset/SubSet:_['\\x01'_'\\x02']_is_a_subset_of_['\\x01'_'\\x02'_'\\x03']\n[All builds/build]   | === RUN   TestSubsetNotSubset/SubSet:_['\\x01'_'\\x02'_'\\x03']_is_a_subset_of_['\\x01'_'\\x02'_'\\x03']\n[All builds/build]   | === RUN   TestSubsetNotSubset/SubSet:_[\"hello\"]_is_a_subset_of_[\"hello\"_\"world\"]\n[All builds/build]   | === RUN   TestSubsetNotSubset/SubSet:_map[\"a\":\"x\"_\"b\":\"y\"]_is_a_subset_of_map[\"a\":\"x\"_\"b\":\"y\"_\"c\":\"z\"]\n[All builds/build]   | === RUN   TestSubsetNotSubset/SubSet:_[]string{\"hello\",_\"world\"}_does_not_contain_\"testify\"\n[All builds/build]   | === RUN   TestSubsetNotSubset/SubSet:_[]int{1,_2,_3}_does_not_contain_4\n[All builds/build]   | === RUN   TestSubsetNotSubset/SubSet:_[]int{1,_2,_3}_does_not_contain_5\n[All builds/build]   | === RUN   TestSubsetNotSubset/SubSet:_map[string]string{\"a\":\"x\",_\"b\":\"y\",_\"c\":\"z\"}_does_not_contain_map[string]string{\"a\":\"x\",_\"b\":\"z\"}\n[All builds/build]   | === RUN   TestSubsetNotSubset/SubSet:_map[string]string{\"a\":\"x\",_\"b\":\"y\"}_does_not_contain_map[string]string{\"a\":\"x\",_\"b\":\"y\",_\"c\":\"z\"}\n[All builds/build]   | === RUN   TestSubsetNotSubset/NotSubSet:_nil_is_the_empty_set_which_is_a_subset_of_every_set\n[All builds/build]   | === RUN   TestSubsetNotSubset/NotSubSet:_[]_is_a_subset_of_['\\x01'_'\\x02'_'\\x03']\n[All builds/build]   | === RUN   TestSubsetNotSubset/NotSubSet:_['\\x01'_'\\x02']_is_a_subset_of_['\\x01'_'\\x02'_'\\x03']\n[All builds/build]   | === RUN   TestSubsetNotSubset/NotSubSet:_['\\x01'_'\\x02'_'\\x03']_is_a_subset_of_['\\x01'_'\\x02'_'\\x03']\n[All builds/build]   | === RUN   TestSubsetNotSubset/NotSubSet:_[\"hello\"]_is_a_subset_of_[\"hello\"_\"world\"]\n[All builds/build]   | === RUN   TestSubsetNotSubset/NotSubSet:_map[\"a\":\"x\"_\"b\":\"y\"]_is_a_subset_of_map[\"a\":\"x\"_\"b\":\"y\"_\"c\":\"z\"]\n[All builds/build]   | === RUN   TestSubsetNotSubset/NotSubSet:_[]string{\"hello\",_\"world\"}_does_not_contain_\"testify\"\n[All builds/build]   | === RUN   TestSubsetNotSubset/NotSubSet:_[]int{1,_2,_3}_does_not_contain_4\n[All builds/build]   | === RUN   TestSubsetNotSubset/NotSubSet:_[]int{1,_2,_3}_does_not_contain_5\n[All builds/build]   | === RUN   TestSubsetNotSubset/NotSubSet:_map[string]string{\"a\":\"x\",_\"b\":\"y\",_\"c\":\"z\"}_does_not_contain_map[string]string{\"a\":\"x\",_\"b\":\"z\"}\n[All builds/build]   | === RUN   TestSubsetNotSubset/NotSubSet:_map[string]string{\"a\":\"x\",_\"b\":\"y\"}_does_not_contain_map[string]string{\"a\":\"x\",_\"b\":\"y\",_\"c\":\"z\"}\n[All builds/build]   | --- PASS: TestSubsetNotSubset (0.01s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/SubSet:_nil_is_the_empty_set_which_is_a_subset_of_every_set (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/SubSet:_[]_is_a_subset_of_['\\x01'_'\\x02'_'\\x03'] (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/SubSet:_['\\x01'_'\\x02']_is_a_subset_of_['\\x01'_'\\x02'_'\\x03'] (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/SubSet:_['\\x01'_'\\x02'_'\\x03']_is_a_subset_of_['\\x01'_'\\x02'_'\\x03'] (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/SubSet:_[\"hello\"]_is_a_subset_of_[\"hello\"_\"world\"] (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/SubSet:_map[\"a\":\"x\"_\"b\":\"y\"]_is_a_subset_of_map[\"a\":\"x\"_\"b\":\"y\"_\"c\":\"z\"] (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/SubSet:_[]string{\"hello\",_\"world\"}_does_not_contain_\"testify\" (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/SubSet:_[]int{1,_2,_3}_does_not_contain_4 (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/SubSet:_[]int{1,_2,_3}_does_not_contain_5 (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/SubSet:_map[string]string{\"a\":\"x\",_\"b\":\"y\",_\"c\":\"z\"}_does_not_contain_map[string]string{\"a\":\"x\",_\"b\":\"z\"} (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/SubSet:_map[string]string{\"a\":\"x\",_\"b\":\"y\"}_does_not_contain_map[string]string{\"a\":\"x\",_\"b\":\"y\",_\"c\":\"z\"} (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/NotSubSet:_nil_is_the_empty_set_which_is_a_subset_of_every_set (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/NotSubSet:_[]_is_a_subset_of_['\\x01'_'\\x02'_'\\x03'] (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/NotSubSet:_['\\x01'_'\\x02']_is_a_subset_of_['\\x01'_'\\x02'_'\\x03'] (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/NotSubSet:_['\\x01'_'\\x02'_'\\x03']_is_a_subset_of_['\\x01'_'\\x02'_'\\x03'] (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/NotSubSet:_[\"hello\"]_is_a_subset_of_[\"hello\"_\"world\"] (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/NotSubSet:_map[\"a\":\"x\"_\"b\":\"y\"]_is_a_subset_of_map[\"a\":\"x\"_\"b\":\"y\"_\"c\":\"z\"] (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/NotSubSet:_[]string{\"hello\",_\"world\"}_does_not_contain_\"testify\" (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/NotSubSet:_[]int{1,_2,_3}_does_not_contain_4 (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/NotSubSet:_[]int{1,_2,_3}_does_not_contain_5 (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/NotSubSet:_map[string]string{\"a\":\"x\",_\"b\":\"y\",_\"c\":\"z\"}_does_not_contain_map[string]string{\"a\":\"x\",_\"b\":\"z\"} (0.00s)\n[All builds/build]   |     --- PASS: TestSubsetNotSubset/NotSubSet:_map[string]string{\"a\":\"x\",_\"b\":\"y\"}_does_not_contain_map[string]string{\"a\":\"x\",_\"b\":\"y\",_\"c\":\"z\"} (0.00s)\n[All builds/build]   | === RUN   TestNotSubsetNil\n[All builds/build]   | --- PASS: TestNotSubsetNil (0.00s)\n[All builds/build]   | === RUN   Test_containsElement\n[All builds/build]   | --- PASS: Test_containsElement (0.00s)\n[All builds/build]   | === RUN   TestElementsMatch\n[All builds/build]   | === RUN   TestElementsMatch/ElementsMatch(<nil>,_<nil>)\n[All builds/build]   | === RUN   TestElementsMatch/ElementsMatch(<nil>,_<nil>)#01\n[All builds/build]   | === RUN   TestElementsMatch/ElementsMatch([]int{},_[]int{})\n[All builds/build]   | === RUN   TestElementsMatch/ElementsMatch([]int{1},_[]int{1})\n[All builds/build]   | === RUN   TestElementsMatch/ElementsMatch([]int{1,_1},_[]int{1,_1})\n[All builds/build]   | === RUN   TestElementsMatch/ElementsMatch([]int{1,_2},_[]int{1,_2})\n[All builds/build]   | === RUN   TestElementsMatch/ElementsMatch([]int{1,_2},_[]int{2,_1})\n[All builds/build]   | === RUN   TestElementsMatch/ElementsMatch([2]int{1,_2},_[2]int{2,_1})\n[All builds/build]   | === RUN   TestElementsMatch/ElementsMatch([]string{\"hello\",_\"world\"},_[]string{\"world\",_\"hello\"})\n[All builds/build]   | === RUN   TestElementsMatch/ElementsMatch([]string{\"hello\",_\"hello\"},_[]string{\"hello\",_\"hello\"})\n[All builds/build]   | === RUN   TestElementsMatch/ElementsMatch([]string{\"hello\",_\"hello\",_\"world\"},_[]string{\"hello\",_\"world\",_\"hello\"})\n[All builds/build]   | === RUN   TestElementsMatch/ElementsMatch([3]string{\"hello\",_\"hello\",_\"world\"},_[3]string{\"hello\",_\"world\",_\"hello\"})\n[All builds/build]   | === RUN   TestElementsMatch/ElementsMatch([]int{},_<nil>)\n[All builds/build]   | === RUN   TestElementsMatch/ElementsMatch([]int{1},_[]int{1,_1})\n[All builds/build]   | === RUN   TestElementsMatch/ElementsMatch([]int{1,_2},_[]int{2,_2})\n[All builds/build]   | === RUN   TestElementsMatch/ElementsMatch([]string{\"hello\",_\"hello\"},_[]string{\"hello\"})\n[All builds/build]   | --- PASS: TestElementsMatch (0.00s)\n[All builds/build]   |     --- PASS: TestElementsMatch/ElementsMatch(<nil>,_<nil>) (0.00s)\n[All builds/build]   |     --- PASS: TestElementsMatch/ElementsMatch(<nil>,_<nil>)#01 (0.00s)\n[All builds/build]   |     --- PASS: TestElementsMatch/ElementsMatch([]int{},_[]int{}) (0.00s)\n[All builds/build]   |     --- PASS: TestElementsMatch/ElementsMatch([]int{1},_[]int{1}) (0.00s)\n[All builds/build]   |     --- PASS: TestElementsMatch/ElementsMatch([]int{1,_1},_[]int{1,_1}) (0.00s)\n[All builds/build]   |     --- PASS: TestElementsMatch/ElementsMatch([]int{1,_2},_[]int{1,_2}) (0.00s)\n[All builds/build]   |     --- PASS: TestElementsMatch/ElementsMatch([]int{1,_2},_[]int{2,_1}) (0.00s)\n[All builds/build]   |     --- PASS: TestElementsMatch/ElementsMatch([2]int{1,_2},_[2]int{2,_1}) (0.00s)\n[All builds/build]   |     --- PASS: TestElementsMatch/ElementsMatch([]string{\"hello\",_\"world\"},_[]string{\"world\",_\"hello\"}) (0.00s)\n[All builds/build]   |     --- PASS: TestElementsMatch/ElementsMatch([]string{\"hello\",_\"hello\"},_[]string{\"hello\",_\"hello\"}) (0.00s)\n[All builds/build]   |     --- PASS: TestElementsMatch/ElementsMatch([]string{\"hello\",_\"hello\",_\"world\"},_[]string{\"hello\",_\"world\",_\"hello\"}) (0.00s)\n[All builds/build]   |     --- PASS: TestElementsMatch/ElementsMatch([3]string{\"hello\",_\"hello\",_\"world\"},_[3]string{\"hello\",_\"world\",_\"hello\"}) (0.00s)\n[All builds/build]   |     --- PASS: TestElementsMatch/ElementsMatch([]int{},_<nil>) (0.00s)\n[All builds/build]   |     --- PASS: TestElementsMatch/ElementsMatch([]int{1},_[]int{1,_1}) (0.00s)\n[All builds/build]   |     --- PASS: TestElementsMatch/ElementsMatch([]int{1,_2},_[]int{2,_2}) (0.00s)\n[All builds/build]   |     --- PASS: TestElementsMatch/ElementsMatch([]string{\"hello\",_\"hello\"},_[]string{\"hello\"}) (0.00s)\n[All builds/build]   | === RUN   TestDiffLists\n[All builds/build]   | === RUN   TestDiffLists/equal_empty\n[All builds/build]   | === RUN   TestDiffLists/equal_same_order\n[All builds/build]   | === RUN   TestDiffLists/equal_different_order\n[All builds/build]   | === RUN   TestDiffLists/extra_A\n[All builds/build]   | === RUN   TestDiffLists/extra_A_twice\n[All builds/build]   | === RUN   TestDiffLists/extra_B\n[All builds/build]   | === RUN   TestDiffLists/extra_B_twice\n[All builds/build]   | === RUN   TestDiffLists/integers_1\n[All builds/build]   | === RUN   TestDiffLists/integers_2\n[All builds/build]   | --- PASS: TestDiffLists (0.00s)\n[All builds/build]   |     --- PASS: TestDiffLists/equal_empty (0.00s)\n[All builds/build]   |     --- PASS: TestDiffLists/equal_same_order (0.00s)\n[All builds/build]   |     --- PASS: TestDiffLists/equal_different_order (0.00s)\n[All builds/build]   |     --- PASS: TestDiffLists/extra_A (0.00s)\n[All builds/build]   |     --- PASS: TestDiffLists/extra_A_twice (0.00s)\n[All builds/build]   |     --- PASS: TestDiffLists/extra_B (0.00s)\n[All builds/build]   |     --- PASS: TestDiffLists/extra_B_twice (0.00s)\n[All builds/build]   |     --- PASS: TestDiffLists/integers_1 (0.00s)\n[All builds/build]   |     --- PASS: TestDiffLists/integers_2 (0.00s)\n[All builds/build]   | === RUN   TestCondition\n[All builds/build]   | --- PASS: TestCondition (0.00s)\n[All builds/build]   | === RUN   TestDidPanic\n[All builds/build]   | --- PASS: TestDidPanic (0.00s)\n[All builds/build]   | === RUN   TestPanics\n[All builds/build]   | --- PASS: TestPanics (0.00s)\n[All builds/build]   | === RUN   TestPanicsWithValue\n[All builds/build]   | --- PASS: TestPanicsWithValue (0.00s)\n[All builds/build]   | === RUN   TestPanicsWithError\n[All builds/build]   | --- PASS: TestPanicsWithError (0.00s)\n[All builds/build]   | === RUN   TestNotPanics\n[All builds/build]   | --- PASS: TestNotPanics (0.00s)\n[All builds/build]   | === RUN   TestNoError\n[All builds/build]   | --- PASS: TestNoError (0.00s)\n[All builds/build]   | === RUN   TestError\n[All builds/build]   | --- PASS: TestError (0.00s)\n[All builds/build]   | === RUN   TestEqualError\n[All builds/build]   | --- PASS: TestEqualError (0.00s)\n[All builds/build]   | === RUN   TestErrorContains\n[All builds/build]   | --- PASS: TestErrorContains (0.00s)\n[All builds/build]   | === RUN   Test_isEmpty\n[All builds/build]   | --- PASS: Test_isEmpty (0.00s)\n[All builds/build]   | === RUN   TestEmpty\n[All builds/build]   | --- PASS: TestEmpty (0.00s)\n[All builds/build]   | === RUN   TestNotEmpty\n[All builds/build]   | --- PASS: TestNotEmpty (0.00s)\n[All builds/build]   | === RUN   Test_getLen\n[All builds/build]   | --- PASS: Test_getLen (0.00s)\n[All builds/build]   | === RUN   TestLen\n[All builds/build]   | --- PASS: TestLen (0.00s)\n[All builds/build]   | === RUN   TestWithinDuration\n[All builds/build]   | --- PASS: TestWithinDuration (0.00s)\n[All builds/build]   | === RUN   TestWithinRange\n[All builds/build]   | --- PASS: TestWithinRange (0.00s)\n[All builds/build]   | === RUN   TestInDelta\n[All builds/build]   | --- PASS: TestInDelta (0.00s)\n[All builds/build]   | === RUN   TestInDeltaSlice\n[All builds/build]   | --- PASS: TestInDeltaSlice (0.00s)\n[All builds/build]   | === RUN   TestInDeltaMapValues\n[All builds/build]   | --- PASS: TestInDeltaMapValues (0.00s)\n[All builds/build]   | === RUN   TestInEpsilon\n[All builds/build]   | --- PASS: TestInEpsilon (0.00s)\n[All builds/build]   | === RUN   TestInEpsilonSlice\n[All builds/build]   | --- PASS: TestInEpsilonSlice (0.00s)\n[All builds/build]   | === RUN   TestRegexp\n[All builds/build]   | --- PASS: TestRegexp (0.00s)\n[All builds/build]   | === RUN   TestCallerInfoWithAutogeneratedFunctions\n[All builds/build]   | --- PASS: TestCallerInfoWithAutogeneratedFunctions (0.00s)\n[All builds/build]   | === RUN   TestZero\n[All builds/build]   | --- PASS: TestZero (0.00s)\n[All builds/build]   | === RUN   TestNotZero\n[All builds/build]   | --- PASS: TestNotZero (0.00s)\n[All builds/build]   | === RUN   TestFileExists\n[All builds/build]   | --- PASS: TestFileExists (0.00s)\n[All builds/build]   | === RUN   TestNoFileExists\n[All builds/build]   | --- PASS: TestNoFileExists (0.00s)\n[All builds/build]   | === RUN   TestDirExists\n[All builds/build]   | --- PASS: TestDirExists (0.00s)\n[All builds/build]   | === RUN   TestNoDirExists\n[All builds/build]   | --- PASS: TestNoDirExists (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_EqualSONString\n[All builds/build]   | --- PASS: TestJSONEq_EqualSONString (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_EquivalentButNotEqual\n[All builds/build]   | --- PASS: TestJSONEq_EquivalentButNotEqual (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_HashOfArraysAndHashes\n[All builds/build]   | --- PASS: TestJSONEq_HashOfArraysAndHashes (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_Array\n[All builds/build]   | --- PASS: TestJSONEq_Array (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_HashAndArrayNotEquivalent\n[All builds/build]   | --- PASS: TestJSONEq_HashAndArrayNotEquivalent (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_HashesNotEquivalent\n[All builds/build]   | --- PASS: TestJSONEq_HashesNotEquivalent (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_ActualIsNotJSON\n[All builds/build]   | --- PASS: TestJSONEq_ActualIsNotJSON (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_ExpectedIsNotJSON\n[All builds/build]   | --- PASS: TestJSONEq_ExpectedIsNotJSON (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_ExpectedAndActualNotJSON\n[All builds/build]   | --- PASS: TestJSONEq_ExpectedAndActualNotJSON (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_ArraysOfDifferentOrder\n[All builds/build]   | --- PASS: TestJSONEq_ArraysOfDifferentOrder (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_EqualYAMLString\n[All builds/build]   | --- PASS: TestYAMLEq_EqualYAMLString (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_EquivalentButNotEqual\n[All builds/build]   | --- PASS: TestYAMLEq_EquivalentButNotEqual (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_HashOfArraysAndHashes\n[All builds/build]   | --- PASS: TestYAMLEq_HashOfArraysAndHashes (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_Array\n[All builds/build]   | --- PASS: TestYAMLEq_Array (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_HashAndArrayNotEquivalent\n[All builds/build]   | --- PASS: TestYAMLEq_HashAndArrayNotEquivalent (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_HashesNotEquivalent\n[All builds/build]   | --- PASS: TestYAMLEq_HashesNotEquivalent (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_ActualIsSimpleString\n[All builds/build]   | --- PASS: TestYAMLEq_ActualIsSimpleString (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_ExpectedIsSimpleString\n[All builds/build]   | --- PASS: TestYAMLEq_ExpectedIsSimpleString (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_ExpectedAndActualSimpleString\n[All builds/build]   | --- PASS: TestYAMLEq_ExpectedAndActualSimpleString (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_ArraysOfDifferentOrder\n[All builds/build]   | --- PASS: TestYAMLEq_ArraysOfDifferentOrder (0.00s)\n[All builds/build]   | === RUN   TestDiff\n[All builds/build]   | --- PASS: TestDiff (0.00s)\n[All builds/build]   | === RUN   TestTimeEqualityErrorFormatting\n[All builds/build]   | --- PASS: TestTimeEqualityErrorFormatting (0.00s)\n[All builds/build]   | === RUN   TestDiffEmptyCases\n[All builds/build]   | --- PASS: TestDiffEmptyCases (0.00s)\n[All builds/build]   | === RUN   TestDiffRace\n[All builds/build]   | === PAUSE TestDiffRace\n[All builds/build]   | === RUN   TestFailNowWithPlainTestingT\n[All builds/build]   | --- PASS: TestFailNowWithPlainTestingT (0.00s)\n[All builds/build]   | === RUN   TestFailNowWithFullTestingT\n[All builds/build]   | --- PASS: TestFailNowWithFullTestingT (0.00s)\n[All builds/build]   | === RUN   TestBytesEqual\n[All builds/build]   | --- PASS: TestBytesEqual (0.00s)\n[All builds/build]   | === RUN   TestComparisonAssertionFunc\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/implements\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/isType\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/equal\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/equalValues\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/notEqualValues\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/exactly\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/notEqual\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/notContains\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/subset\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/notSubset\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/elementsMatch\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/regexp\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/notRegexp\n[All builds/build]   | --- PASS: TestComparisonAssertionFunc (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/implements (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/isType (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/equal (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/equalValues (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/notEqualValues (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/exactly (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/notEqual (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/notContains (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/subset (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/notSubset (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/elementsMatch (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/regexp (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/notRegexp (0.00s)\n[All builds/build]   | === RUN   TestValueAssertionFunc\n[All builds/build]   | === RUN   TestValueAssertionFunc/notNil\n[All builds/build]   | === RUN   TestValueAssertionFunc/nil\n[All builds/build]   | === RUN   TestValueAssertionFunc/empty\n[All builds/build]   | === RUN   TestValueAssertionFunc/notEmpty\n[All builds/build]   | === RUN   TestValueAssertionFunc/zero\n[All builds/build]   | === RUN   TestValueAssertionFunc/notZero\n[All builds/build]   | --- PASS: TestValueAssertionFunc (0.00s)\n[All builds/build]   |     --- PASS: TestValueAssertionFunc/notNil (0.00s)\n[All builds/build]   |     --- PASS: TestValueAssertionFunc/nil (0.00s)\n[All builds/build]   |     --- PASS: TestValueAssertionFunc/empty (0.00s)\n[All builds/build]   |     --- PASS: TestValueAssertionFunc/notEmpty (0.00s)\n[All builds/build]   |     --- PASS: TestValueAssertionFunc/zero (0.00s)\n[All builds/build]   |     --- PASS: TestValueAssertionFunc/notZero (0.00s)\n[All builds/build]   | === RUN   TestBoolAssertionFunc\n[All builds/build]   | === RUN   TestBoolAssertionFunc/true\n[All builds/build]   | === RUN   TestBoolAssertionFunc/false\n[All builds/build]   | --- PASS: TestBoolAssertionFunc (0.00s)\n[All builds/build]   |     --- PASS: TestBoolAssertionFunc/true (0.00s)\n[All builds/build]   |     --- PASS: TestBoolAssertionFunc/false (0.00s)\n[All builds/build]   | === RUN   TestErrorAssertionFunc\n[All builds/build]   | === RUN   TestErrorAssertionFunc/noError\n[All builds/build]   | === RUN   TestErrorAssertionFunc/error\n[All builds/build]   | --- PASS: TestErrorAssertionFunc (0.00s)\n[All builds/build]   |     --- PASS: TestErrorAssertionFunc/noError (0.00s)\n[All builds/build]   |     --- PASS: TestErrorAssertionFunc/error (0.00s)\n[All builds/build]   | === RUN   TestEventuallyFalse\n[All builds/build]   | --- PASS: TestEventuallyFalse (0.10s)\n[All builds/build]   | === RUN   TestEventuallyTrue\n[All builds/build]   | --- PASS: TestEventuallyTrue (0.07s)\n[All builds/build]   | === RUN   TestEventuallyWithTFalse\n[All builds/build]   |     assertions_test.go:2771: \n[All builds/build]   |         \tError Trace:\t\n[All builds/build]   |         \tError:      \t\"[\n[All builds/build]   |         \t            \t\tError Trace:\t\n[All builds/build]   |         \t            \t\tError:      \tCondition never satisfied\n[All builds/build]   |         \t            \t]\" should have 2 item(s), but has 1\n[All builds/build]   |         \tTest:       \tTestEventuallyWithTFalse\n[All builds/build]   | ==================\n[All builds/build]   | WARNING: DATA RACE\n[All builds/build]   | Write at 0x00c000234108 by goroutine 464:\n[All builds/build]   |   github.com/stretchr/testify/assert.(*CollectT).Errorf()\n[All builds/build]   |       /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/assert/assertions.go:1869 +0x137\n[All builds/build]   |   github.com/stretchr/testify/assert.Fail()\n[All builds/build]   |       /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/assert/assertions.go:333 +0x411\n[All builds/build]   |   github.com/stretchr/testify/assert.True()\n[All builds/build]   |       /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/assert/assertions.go:773 +0x97\n[All builds/build]   |   github.com/stretchr/testify/assert.TestEventuallyWithTFalse.func1()\n[All builds/build]   |       /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/assert/assertions_test.go:2767 +0x3e\n[All builds/build]   |   github.com/stretchr/testify/assert.EventuallyWithT.func1()\n[All builds/build]   |       /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/assert/assertions.go:1933 +0x47\n[All builds/build]   | \n[All builds/build]   | Previous read at 0x00c000234108 by goroutine 460:\n[All builds/build]   |   github.com/stretchr/testify/assert.(*CollectT).Copy()\n[All builds/build]   |       /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/assert/assertions.go:1887 +0x6d\n[All builds/build]   |   github.com/stretchr/testify/assert.EventuallyWithT()\n[All builds/build]   |       /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/assert/assertions.go:1927 +0x48e\n[All builds/build]   |   github.com/stretchr/testify/assert.TestEventuallyWithTFalse()\n[All builds/build]   |       /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/assert/assertions_test.go:2770 +0x64\n[All builds/build]   |   testing.tRunner()\n[All builds/build]   |       /opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1576 +0x216\n[All builds/build]   |   testing.(*T).Run.func1()\n[All builds/build]   |       /opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1629 +0x47\n[All builds/build]   | \n[All builds/build]   | Goroutine 464 (running) created at:\n[All builds/build]   |   github.com/stretchr/testify/assert.EventuallyWithT()\n[All builds/build]   |       /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/assert/assertions.go:1932 +0x435\n[All builds/build]   |   github.com/stretchr/testify/assert.TestEventuallyWithTFalse()\n[All builds/build]   |       /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/assert/assertions_test.go:2770 +0x64\n[All builds/build]   |   testing.tRunner()\n[All builds/build]   |       /opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1576 +0x216\n[All builds/build]   |   testing.(*T).Run.func1()\n[All builds/build]   |       /opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1629 +0x47\n[All builds/build]   | \n[All builds/build]   | Goroutine 460 (running) created at:\n[All builds/build]   |   testing.(*T).Run()\n[All builds/build]   |       /opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1629 +0x805\n[All builds/build]   |   testing.runTests.func1()\n[All builds/build]   |       /opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:2036 +0x8d\n[All builds/build]   |   testing.tRunner()\n[All builds/build]   |       /opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1576 +0x216\n[All builds/build]   |   testing.runTests()\n[All builds/build]   |       /opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:2034 +0x87c\n[All builds/build]   |   testing.(*M).Run()\n[All builds/build]   |       /opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1906 +0xb44\n[All builds/build]   |   main.main()\n[All builds/build]   |       _testmain.go:415 +0x2e9\n[All builds/build]   | ==================\n[All builds/build]   | --- FAIL: TestEventuallyWithTFalse (0.12s)\n[All builds/build]   | === RUN   TestEventuallyWithTTrue\n[All builds/build]   | --- PASS: TestEventuallyWithTTrue (0.06s)\n[All builds/build]   | === RUN   TestNeverFalse\n[All builds/build]   | --- PASS: TestNeverFalse (0.10s)\n[All builds/build]   | === RUN   TestNeverTrue\n[All builds/build]   | --- PASS: TestNeverTrue (0.06s)\n[All builds/build]   | === RUN   TestEventuallyIssue805\n[All builds/build]   | --- PASS: TestEventuallyIssue805 (0.00s)\n[All builds/build]   | === RUN   Test_validateEqualArgs\n[All builds/build]   | --- PASS: Test_validateEqualArgs (0.00s)\n[All builds/build]   | === RUN   Test_truncatingFormat\n[All builds/build]   | --- PASS: Test_truncatingFormat (0.08s)\n[All builds/build]   | === RUN   TestErrorIs\n[All builds/build]   | === RUN   TestErrorIs/ErrorIs(&errors.errorString{s:\"EOF\"},&errors.errorString{s:\"EOF\"})\n[All builds/build]   | === RUN   TestErrorIs/ErrorIs(&fmt.wrapError{msg:\"wrap:_EOF\",_err:(*errors.errorString)(0xc0002180f0)},&errors.errorString{s:\"EOF\"})\n[All builds/build]   | === RUN   TestErrorIs/ErrorIs(&errors.errorString{s:\"EOF\"},&errors.errorString{s:\"io:_read/write_on_closed_pipe\"})\n[All builds/build]   | === RUN   TestErrorIs/ErrorIs(<nil>,&errors.errorString{s:\"EOF\"})\n[All builds/build]   | === RUN   TestErrorIs/ErrorIs(&errors.errorString{s:\"EOF\"},<nil>)\n[All builds/build]   | === RUN   TestErrorIs/ErrorIs(<nil>,<nil>)\n[All builds/build]   | --- PASS: TestErrorIs (0.00s)\n[All builds/build]   |     --- PASS: TestErrorIs/ErrorIs(&errors.errorString{s:\"EOF\"},&errors.errorString{s:\"EOF\"}) (0.00s)\n[All builds/build]   |     --- PASS: TestErrorIs/ErrorIs(&fmt.wrapError{msg:\"wrap:_EOF\",_err:(*errors.errorString)(0xc0002180f0)},&errors.errorString{s:\"EOF\"}) (0.00s)\n[All builds/build]   |     --- PASS: TestErrorIs/ErrorIs(&errors.errorString{s:\"EOF\"},&errors.errorString{s:\"io:_read/write_on_closed_pipe\"}) (0.00s)\n[All builds/build]   |     --- PASS: TestErrorIs/ErrorIs(<nil>,&errors.errorString{s:\"EOF\"}) (0.00s)\n[All builds/build]   |     --- PASS: TestErrorIs/ErrorIs(&errors.errorString{s:\"EOF\"},<nil>) (0.00s)\n[All builds/build]   |     --- PASS: TestErrorIs/ErrorIs(<nil>,<nil>) (0.00s)\n[All builds/build]   | === RUN   TestNotErrorIs\n[All builds/build]   | === RUN   TestNotErrorIs/NotErrorIs(&errors.errorString{s:\"EOF\"},&errors.errorString{s:\"EOF\"})\n[All builds/build]   | === RUN   TestNotErrorIs/NotErrorIs(&fmt.wrapError{msg:\"wrap:_EOF\",_err:(*errors.errorString)(0xc0002180f0)},&errors.errorString{s:\"EOF\"})\n[All builds/build]   | === RUN   TestNotErrorIs/NotErrorIs(&errors.errorString{s:\"EOF\"},&errors.errorString{s:\"io:_read/write_on_closed_pipe\"})\n[All builds/build]   | === RUN   TestNotErrorIs/NotErrorIs(<nil>,&errors.errorString{s:\"EOF\"})\n[All builds/build]   | === RUN   TestNotErrorIs/NotErrorIs(&errors.errorString{s:\"EOF\"},<nil>)\n[All builds/build]   | === RUN   TestNotErrorIs/NotErrorIs(<nil>,<nil>)\n[All builds/build]   | --- PASS: TestNotErrorIs (0.00s)\n[All builds/build]   |     --- PASS: TestNotErrorIs/NotErrorIs(&errors.errorString{s:\"EOF\"},&errors.errorString{s:\"EOF\"}) (0.00s)\n[All builds/build]   |     --- PASS: TestNotErrorIs/NotErrorIs(&fmt.wrapError{msg:\"wrap:_EOF\",_err:(*errors.errorString)(0xc0002180f0)},&errors.errorString{s:\"EOF\"}) (0.00s)\n[All builds/build]   |     --- PASS: TestNotErrorIs/NotErrorIs(&errors.errorString{s:\"EOF\"},&errors.errorString{s:\"io:_read/write_on_closed_pipe\"}) (0.00s)\n[All builds/build]   |     --- PASS: TestNotErrorIs/NotErrorIs(<nil>,&errors.errorString{s:\"EOF\"}) (0.00s)\n[All builds/build]   |     --- PASS: TestNotErrorIs/NotErrorIs(&errors.errorString{s:\"EOF\"},<nil>) (0.00s)\n[All builds/build]   |     --- PASS: TestNotErrorIs/NotErrorIs(<nil>,<nil>) (0.00s)\n[All builds/build]   | === RUN   TestErrorAs\n[All builds/build]   | === RUN   TestErrorAs/ErrorAs(&fmt.wrapError{msg:\"wrap:_fail\",_err:(*assert.customError)(0xa3a7c0)},(*assert.customError)(nil))\n[All builds/build]   | === RUN   TestErrorAs/ErrorAs(&errors.errorString{s:\"EOF\"},(*assert.customError)(nil))\n[All builds/build]   | === RUN   TestErrorAs/ErrorAs(<nil>,(*assert.customError)(nil))\n[All builds/build]   | --- PASS: TestErrorAs (0.00s)\n[All builds/build]   |     --- PASS: TestErrorAs/ErrorAs(&fmt.wrapError{msg:\"wrap:_fail\",_err:(*assert.customError)(0xa3a7c0)},(*assert.customError)(nil)) (0.00s)\n[All builds/build]   |     --- PASS: TestErrorAs/ErrorAs(&errors.errorString{s:\"EOF\"},(*assert.customError)(nil)) (0.00s)\n[All builds/build]   |     --- PASS: TestErrorAs/ErrorAs(<nil>,(*assert.customError)(nil)) (0.00s)\n[All builds/build]   | === RUN   TestIsNil\n[All builds/build]   | --- PASS: TestIsNil (0.00s)\n[All builds/build]   | === RUN   TestImplementsWrapper\n[All builds/build]   | --- PASS: TestImplementsWrapper (0.00s)\n[All builds/build]   | === RUN   TestIsTypeWrapper\n[All builds/build]   | --- PASS: TestIsTypeWrapper (0.00s)\n[All builds/build]   | === RUN   TestEqualWrapper\n[All builds/build]   | --- PASS: TestEqualWrapper (0.00s)\n[All builds/build]   | === RUN   TestEqualValuesWrapper\n[All builds/build]   | --- PASS: TestEqualValuesWrapper (0.00s)\n[All builds/build]   | === RUN   TestNotNilWrapper\n[All builds/build]   | --- PASS: TestNotNilWrapper (0.00s)\n[All builds/build]   | === RUN   TestNilWrapper\n[All builds/build]   | --- PASS: TestNilWrapper (0.00s)\n[All builds/build]   | === RUN   TestTrueWrapper\n[All builds/build]   | --- PASS: TestTrueWrapper (0.00s)\n[All builds/build]   | === RUN   TestFalseWrapper\n[All builds/build]   | --- PASS: TestFalseWrapper (0.00s)\n[All builds/build]   | === RUN   TestExactlyWrapper\n[All builds/build]   | --- PASS: TestExactlyWrapper (0.00s)\n[All builds/build]   | === RUN   TestNotEqualWrapper\n[All builds/build]   | --- PASS: TestNotEqualWrapper (0.00s)\n[All builds/build]   | === RUN   TestNotEqualValuesWrapper\n[All builds/build]   | --- PASS: TestNotEqualValuesWrapper (0.00s)\n[All builds/build]   | === RUN   TestContainsWrapper\n[All builds/build]   | --- PASS: TestContainsWrapper (0.00s)\n[All builds/build]   | === RUN   TestNotContainsWrapper\n[All builds/build]   | --- PASS: TestNotContainsWrapper (0.00s)\n[All builds/build]   | === RUN   TestConditionWrapper\n[All builds/build]   | --- PASS: TestConditionWrapper (0.00s)\n[All builds/build]   | === RUN   TestDidPanicWrapper\n[All builds/build]   | --- PASS: TestDidPanicWrapper (0.00s)\n[All builds/build]   | === RUN   TestPanicsWrapper\n[All builds/build]   | --- PASS: TestPanicsWrapper (0.00s)\n[All builds/build]   | === RUN   TestNotPanicsWrapper\n[All builds/build]   | --- PASS: TestNotPanicsWrapper (0.00s)\n[All builds/build]   | === RUN   TestNoErrorWrapper\n[All builds/build]   | --- PASS: TestNoErrorWrapper (0.00s)\n[All builds/build]   | === RUN   TestErrorWrapper\n[All builds/build]   | --- PASS: TestErrorWrapper (0.00s)\n[All builds/build]   | === RUN   TestErrorContainsWrapper\n[All builds/build]   | --- PASS: TestErrorContainsWrapper (0.00s)\n[All builds/build]   | === RUN   TestEqualErrorWrapper\n[All builds/build]   | --- PASS: TestEqualErrorWrapper (0.00s)\n[All builds/build]   | === RUN   TestEmptyWrapper\n[All builds/build]   | --- PASS: TestEmptyWrapper (0.00s)\n[All builds/build]   | === RUN   TestNotEmptyWrapper\n[All builds/build]   | --- PASS: TestNotEmptyWrapper (0.00s)\n[All builds/build]   | === RUN   TestLenWrapper\n[All builds/build]   | --- PASS: TestLenWrapper (0.00s)\n[All builds/build]   | === RUN   TestWithinDurationWrapper\n[All builds/build]   | --- PASS: TestWithinDurationWrapper (0.00s)\n[All builds/build]   | === RUN   TestInDeltaWrapper\n[All builds/build]   | --- PASS: TestInDeltaWrapper (0.00s)\n[All builds/build]   | === RUN   TestInEpsilonWrapper\n[All builds/build]   | --- PASS: TestInEpsilonWrapper (0.00s)\n[All builds/build]   | === RUN   TestRegexpWrapper\n[All builds/build]   | --- PASS: TestRegexpWrapper (0.00s)\n[All builds/build]   | === RUN   TestZeroWrapper\n[All builds/build]   | --- PASS: TestZeroWrapper (0.00s)\n[All builds/build]   | === RUN   TestNotZeroWrapper\n[All builds/build]   | --- PASS: TestNotZeroWrapper (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_EqualSONString\n[All builds/build]   | --- PASS: TestJSONEqWrapper_EqualSONString (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_EquivalentButNotEqual\n[All builds/build]   | --- PASS: TestJSONEqWrapper_EquivalentButNotEqual (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_HashOfArraysAndHashes\n[All builds/build]   | --- PASS: TestJSONEqWrapper_HashOfArraysAndHashes (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_Array\n[All builds/build]   | --- PASS: TestJSONEqWrapper_Array (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_HashAndArrayNotEquivalent\n[All builds/build]   | --- PASS: TestJSONEqWrapper_HashAndArrayNotEquivalent (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_HashesNotEquivalent\n[All builds/build]   | --- PASS: TestJSONEqWrapper_HashesNotEquivalent (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_ActualIsNotJSON\n[All builds/build]   | --- PASS: TestJSONEqWrapper_ActualIsNotJSON (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_ExpectedIsNotJSON\n[All builds/build]   | --- PASS: TestJSONEqWrapper_ExpectedIsNotJSON (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_ExpectedAndActualNotJSON\n[All builds/build]   | --- PASS: TestJSONEqWrapper_ExpectedAndActualNotJSON (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_ArraysOfDifferentOrder\n[All builds/build]   | --- PASS: TestJSONEqWrapper_ArraysOfDifferentOrder (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_EqualYAMLString\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_EqualYAMLString (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_EquivalentButNotEqual\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_EquivalentButNotEqual (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_HashOfArraysAndHashes\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_HashOfArraysAndHashes (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_Array\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_Array (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_HashAndArrayNotEquivalent\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_HashAndArrayNotEquivalent (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_HashesNotEquivalent\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_HashesNotEquivalent (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_ActualIsSimpleString\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_ActualIsSimpleString (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_ExpectedIsSimpleString\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_ExpectedIsSimpleString (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_ExpectedAndActualSimpleString\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_ExpectedAndActualSimpleString (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_ArraysOfDifferentOrder\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_ArraysOfDifferentOrder (0.00s)\n[All builds/build]   | === RUN   TestHTTPSuccess\n[All builds/build]   |     http_assertions_test.go:31: \n[All builds/build]   |         \tError Trace:\t\n[All builds/build]   |         \tError:      \tShould be false\n[All builds/build]   |         \tTest:       \tTestHTTPSuccess\n[All builds/build]   | --- FAIL: TestHTTPSuccess (0.00s)\n[All builds/build]   | === RUN   TestHTTPRedirect\n[All builds/build]   |     http_assertions_test.go:55: \n[All builds/build]   |         \tError Trace:\t\n[All builds/build]   |         \tError:      \tShould be false\n[All builds/build]   |         \tTest:       \tTestHTTPRedirect\n[All builds/build]   | --- FAIL: TestHTTPRedirect (0.00s)\n[All builds/build]   | === RUN   TestHTTPError\n[All builds/build]   |     http_assertions_test.go:79: \n[All builds/build]   |         \tError Trace:\t\n[All builds/build]   |         \tError:      \tShould be false\n[All builds/build]   |         \tTest:       \tTestHTTPError\n[All builds/build]   | --- FAIL: TestHTTPError (0.00s)\n[All builds/build]   | === RUN   TestHTTPStatusCode\n[All builds/build]   |     http_assertions_test.go:103: \n[All builds/build]   |         \tError Trace:\t\n[All builds/build]   |         \tError:      \tShould be false\n[All builds/build]   |         \tTest:       \tTestHTTPStatusCode\n[All builds/build]   | --- FAIL: TestHTTPStatusCode (0.00s)\n[All builds/build]   | === RUN   TestHTTPStatusesWrapper\n[All builds/build]   | --- PASS: TestHTTPStatusesWrapper (0.00s)\n[All builds/build]   | === RUN   TestHTTPRequestWithNoParams\n[All builds/build]   | --- PASS: TestHTTPRequestWithNoParams (0.00s)\n[All builds/build]   | === RUN   TestHTTPRequestWithParams\n[All builds/build]   | --- PASS: TestHTTPRequestWithParams (0.00s)\n[All builds/build]   | === RUN   TestHttpBody\n[All builds/build]   | --- PASS: TestHttpBody (0.00s)\n[All builds/build]   | === RUN   TestHttpBodyWrappers\n[All builds/build]   | --- PASS: TestHttpBodyWrappers (0.00s)\n[All builds/build]   | === NAME  \n[All builds/build]   |     testing.go:1446: race detected during execution of test\n[All builds/build]   | === CONT  TestDiffRace\n[All builds/build]   | --- PASS: TestDiffRace (0.01s)\n[All builds/build]   | FAIL\n[All builds/build]   | FAIL\tgithub.com/stretchr/testify/assert\t0.844s\n[All builds/build]   | === RUN   Test_Mock_TestData\n[All builds/build]   | --- PASS: Test_Mock_TestData (0.00s)\n[All builds/build]   | === RUN   Test_Mock_On\n[All builds/build]   | --- PASS: Test_Mock_On (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Chained_On\n[All builds/build]   | --- PASS: Test_Mock_Chained_On (0.00s)\n[All builds/build]   | === RUN   Test_Mock_On_WithArgs\n[All builds/build]   | --- PASS: Test_Mock_On_WithArgs (0.00s)\n[All builds/build]   | === RUN   Test_Mock_On_WithFuncArg\n[All builds/build]   | --- PASS: Test_Mock_On_WithFuncArg (0.00s)\n[All builds/build]   | === RUN   Test_Mock_On_WithIntArgMatcher\n[All builds/build]   | --- PASS: Test_Mock_On_WithIntArgMatcher (0.00s)\n[All builds/build]   | === RUN   Test_Mock_On_WithArgMatcherThatPanics\n[All builds/build]   | --- PASS: Test_Mock_On_WithArgMatcherThatPanics (0.00s)\n[All builds/build]   | === RUN   TestMock_WithTest\n[All builds/build]   | --- PASS: TestMock_WithTest (0.00s)\n[All builds/build]   | === RUN   Test_Mock_On_WithPtrArgMatcher\n[All builds/build]   | --- PASS: Test_Mock_On_WithPtrArgMatcher (0.00s)\n[All builds/build]   | === RUN   Test_Mock_On_WithFuncArgMatcher\n[All builds/build]   | --- PASS: Test_Mock_On_WithFuncArgMatcher (0.00s)\n[All builds/build]   | === RUN   Test_Mock_On_WithInterfaceArgMatcher\n[All builds/build]   | --- PASS: Test_Mock_On_WithInterfaceArgMatcher (0.00s)\n[All builds/build]   | === RUN   Test_Mock_On_WithChannelArgMatcher\n[All builds/build]   | --- PASS: Test_Mock_On_WithChannelArgMatcher (0.00s)\n[All builds/build]   | === RUN   Test_Mock_On_WithMapArgMatcher\n[All builds/build]   | --- PASS: Test_Mock_On_WithMapArgMatcher (0.00s)\n[All builds/build]   | === RUN   Test_Mock_On_WithSliceArgMatcher\n[All builds/build]   | --- PASS: Test_Mock_On_WithSliceArgMatcher (0.00s)\n[All builds/build]   | === RUN   Test_Mock_On_WithVariadicFunc\n[All builds/build]   | --- PASS: Test_Mock_On_WithVariadicFunc (0.00s)\n[All builds/build]   | === RUN   Test_Mock_On_WithMixedVariadicFunc\n[All builds/build]   | --- PASS: Test_Mock_On_WithMixedVariadicFunc (0.00s)\n[All builds/build]   | === RUN   Test_Mock_On_WithVariadicFuncWithInterface\n[All builds/build]   | --- PASS: Test_Mock_On_WithVariadicFuncWithInterface (0.00s)\n[All builds/build]   | === RUN   Test_Mock_On_WithVariadicFuncWithEmptyInterfaceArray\n[All builds/build]   | --- PASS: Test_Mock_On_WithVariadicFuncWithEmptyInterfaceArray (0.00s)\n[All builds/build]   | === RUN   Test_Mock_On_WithFuncPanics\n[All builds/build]   | --- PASS: Test_Mock_On_WithFuncPanics (0.00s)\n[All builds/build]   | === RUN   Test_Mock_On_WithFuncTypeArg\n[All builds/build]   | --- PASS: Test_Mock_On_WithFuncTypeArg (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Unset\n[All builds/build]   | --- PASS: Test_Mock_Unset (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Chained_UnsetOnlyUnsetsLastCall\n[All builds/build]   | --- PASS: Test_Mock_Chained_UnsetOnlyUnsetsLastCall (0.00s)\n[All builds/build]   | === RUN   Test_Mock_UnsetIfAlreadyUnsetFails\n[All builds/build]   | --- PASS: Test_Mock_UnsetIfAlreadyUnsetFails (0.00s)\n[All builds/build]   | === RUN   Test_Mock_UnsetByOnMethodSpec\n[All builds/build]   | --- PASS: Test_Mock_UnsetByOnMethodSpec (0.00s)\n[All builds/build]   | === RUN   Test_Mock_UnsetByOnMethodSpecAmongOthers\n[All builds/build]   | --- PASS: Test_Mock_UnsetByOnMethodSpecAmongOthers (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Unset_WithFuncPanics\n[All builds/build]   | --- PASS: Test_Mock_Unset_WithFuncPanics (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Return\n[All builds/build]   | --- PASS: Test_Mock_Return (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Panic\n[All builds/build]   | --- PASS: Test_Mock_Panic (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Return_WaitUntil\n[All builds/build]   | --- PASS: Test_Mock_Return_WaitUntil (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Return_After\n[All builds/build]   | --- PASS: Test_Mock_Return_After (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Return_Run\n[All builds/build]   | --- PASS: Test_Mock_Return_Run (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Return_Run_Out_Of_Order\n[All builds/build]   | --- PASS: Test_Mock_Return_Run_Out_Of_Order (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Return_Once\n[All builds/build]   | --- PASS: Test_Mock_Return_Once (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Return_Twice\n[All builds/build]   | --- PASS: Test_Mock_Return_Twice (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Return_Times\n[All builds/build]   | --- PASS: Test_Mock_Return_Times (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Return_Nothing\n[All builds/build]   | --- PASS: Test_Mock_Return_Nothing (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Return_NotBefore_In_Order\n[All builds/build]   | --- PASS: Test_Mock_Return_NotBefore_In_Order (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Return_NotBefore_Out_Of_Order\n[All builds/build]   | --- PASS: Test_Mock_Return_NotBefore_Out_Of_Order (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Return_NotBefore_Not_Enough_Times\n[All builds/build]   | --- PASS: Test_Mock_Return_NotBefore_Not_Enough_Times (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Return_NotBefore_Different_Mock_In_Order\n[All builds/build]   | --- PASS: Test_Mock_Return_NotBefore_Different_Mock_In_Order (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Return_NotBefore_Different_Mock_Out_Of_Order\n[All builds/build]   | --- PASS: Test_Mock_Return_NotBefore_Different_Mock_Out_Of_Order (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Return_NotBefore_In_Order_With_Non_Dependant\n[All builds/build]   | --- PASS: Test_Mock_Return_NotBefore_In_Order_With_Non_Dependant (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Return_NotBefore_Orphan_Call\n[All builds/build]   | --- PASS: Test_Mock_Return_NotBefore_Orphan_Call (0.00s)\n[All builds/build]   | === RUN   Test_Mock_findExpectedCall\n[All builds/build]   | --- PASS: Test_Mock_findExpectedCall (0.00s)\n[All builds/build]   | === RUN   Test_Mock_findExpectedCall_For_Unknown_Method\n[All builds/build]   | --- PASS: Test_Mock_findExpectedCall_For_Unknown_Method (0.00s)\n[All builds/build]   | === RUN   Test_Mock_findExpectedCall_Respects_Repeatability\n[All builds/build]   | --- PASS: Test_Mock_findExpectedCall_Respects_Repeatability (0.00s)\n[All builds/build]   | === RUN   Test_callString\n[All builds/build]   | --- PASS: Test_callString (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Called\n[All builds/build]   | --- PASS: Test_Mock_Called (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Called_blocks\n[All builds/build]   | --- PASS: Test_Mock_Called_blocks (0.01s)\n[All builds/build]   | === RUN   Test_Mock_Called_For_Bounded_Repeatability\n[All builds/build]   | --- PASS: Test_Mock_Called_For_Bounded_Repeatability (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Called_For_SetTime_Expectation\n[All builds/build]   | --- PASS: Test_Mock_Called_For_SetTime_Expectation (0.00s)\n[All builds/build]   | === RUN   Test_Mock_Called_Unexpected\n[All builds/build]   | --- PASS: Test_Mock_Called_Unexpected (0.00s)\n[All builds/build]   | === RUN   Test_AssertExpectationsForObjects_Helper\n[All builds/build]   |     mock_test.go:1321: Deprecated mock.AssertExpectationsForObjects(myMock.Mock) use mock.AssertExpectationsForObjects(myMock)\n[All builds/build]   |     mock_test.go:1321: PASS:\tTest_AssertExpectationsForObjects_Helper(int)\n[All builds/build]   |     mock_test.go:1321: Deprecated mock.AssertExpectationsForObjects(myMock.Mock) use mock.AssertExpectationsForObjects(myMock)\n[All builds/build]   |     mock_test.go:1321: PASS:\tTest_AssertExpectationsForObjects_Helper(int)\n[All builds/build]   |     mock_test.go:1321: Deprecated mock.AssertExpectationsForObjects(myMock.Mock) use mock.AssertExpectationsForObjects(myMock)\n[All builds/build]   |     mock_test.go:1321: PASS:\tTest_AssertExpectationsForObjects_Helper(int)\n[All builds/build]   |     mock_test.go:1321: Deprecated mock.AssertExpectationsForObjects(myMock.Mock) use mock.AssertExpectationsForObjects(myMock)\n[All builds/build]   |     mock_test.go:1322: PASS:\tTest_AssertExpectationsForObjects_Helper(int)\n[All builds/build]   |     mock_test.go:1322: PASS:\tTest_AssertExpectationsForObjects_Helper(int)\n[All builds/build]   |     mock_test.go:1322: PASS:\tTest_AssertExpectationsForObjects_Helper(int)\n[All builds/build]   | --- PASS: Test_AssertExpectationsForObjects_Helper (0.00s)\n[All builds/build]   | === RUN   Test_AssertExpectationsForObjects_Helper_Failed\n[All builds/build]   | --- PASS: Test_AssertExpectationsForObjects_Helper_Failed (0.00s)\n[All builds/build]   | === RUN   Test_Mock_AssertExpectations\n[All builds/build]   | --- PASS: Test_Mock_AssertExpectations (0.00s)\n[All builds/build]   | === RUN   Test_Mock_AssertExpectations_Placeholder_NoArgs\n[All builds/build]   | --- PASS: Test_Mock_AssertExpectations_Placeholder_NoArgs (0.00s)\n[All builds/build]   | === RUN   Test_Mock_AssertExpectations_Placeholder\n[All builds/build]   | --- PASS: Test_Mock_AssertExpectations_Placeholder (0.00s)\n[All builds/build]   | === RUN   Test_Mock_AssertExpectations_With_Pointers\n[All builds/build]   | --- PASS: Test_Mock_AssertExpectations_With_Pointers (0.01s)\n[All builds/build]   | === RUN   Test_Mock_AssertExpectationsCustomType\n[All builds/build]   | --- PASS: Test_Mock_AssertExpectationsCustomType (0.00s)\n[All builds/build]   | === RUN   Test_Mock_AssertExpectationsFunctionalOptionsType\n[All builds/build]   | --- PASS: Test_Mock_AssertExpectationsFunctionalOptionsType (0.00s)\n[All builds/build]   | === RUN   Test_Mock_AssertExpectationsFunctionalOptionsType_Empty\n[All builds/build]   | --- PASS: Test_Mock_AssertExpectationsFunctionalOptionsType_Empty (0.00s)\n[All builds/build]   | === RUN   Test_Mock_AssertExpectations_With_Repeatability\n[All builds/build]   | --- PASS: Test_Mock_AssertExpectations_With_Repeatability (0.00s)\n[All builds/build]   | === RUN   Test_Mock_TwoCallsWithDifferentArguments\n[All builds/build]   | --- PASS: Test_Mock_TwoCallsWithDifferentArguments (0.00s)\n[All builds/build]   | === RUN   Test_Mock_AssertNumberOfCalls\n[All builds/build]   | --- PASS: Test_Mock_AssertNumberOfCalls (0.00s)\n[All builds/build]   | === RUN   Test_Mock_AssertCalled\n[All builds/build]   | --- PASS: Test_Mock_AssertCalled (0.00s)\n[All builds/build]   | === RUN   Test_Mock_AssertCalled_WithAnythingOfTypeArgument\n[All builds/build]   | --- PASS: Test_Mock_AssertCalled_WithAnythingOfTypeArgument (0.00s)\n[All builds/build]   | === RUN   Test_Mock_AssertCalled_WithArguments\n[All builds/build]   | --- PASS: Test_Mock_AssertCalled_WithArguments (0.00s)\n[All builds/build]   | === RUN   Test_Mock_AssertCalled_WithArguments_With_Repeatability\n[All builds/build]   | --- PASS: Test_Mock_AssertCalled_WithArguments_With_Repeatability (0.00s)\n[All builds/build]   | === RUN   Test_Mock_AssertNotCalled\n[All builds/build]   | --- PASS: Test_Mock_AssertNotCalled (0.00s)\n[All builds/build]   | === RUN   Test_Mock_IsMethodCallable\n[All builds/build]   | --- PASS: Test_Mock_IsMethodCallable (0.00s)\n[All builds/build]   | === RUN   TestIsArgsEqual\n[All builds/build]   | --- PASS: TestIsArgsEqual (0.00s)\n[All builds/build]   | === RUN   Test_Mock_AssertOptional\n[All builds/build]   | --- PASS: Test_Mock_AssertOptional (0.00s)\n[All builds/build]   | === RUN   Test_Arguments_Get\n[All builds/build]   | --- PASS: Test_Arguments_Get (0.00s)\n[All builds/build]   | === RUN   Test_Arguments_Is\n[All builds/build]   | --- PASS: Test_Arguments_Is (0.00s)\n[All builds/build]   | === RUN   Test_Arguments_Diff\n[All builds/build]   | --- PASS: Test_Arguments_Diff (0.00s)\n[All builds/build]   | === RUN   Test_Arguments_Diff_DifferentNumberOfArgs\n[All builds/build]   | --- PASS: Test_Arguments_Diff_DifferentNumberOfArgs (0.00s)\n[All builds/build]   | === RUN   Test_Arguments_Diff_WithAnythingArgument\n[All builds/build]   | --- PASS: Test_Arguments_Diff_WithAnythingArgument (0.00s)\n[All builds/build]   | === RUN   Test_Arguments_Diff_WithAnythingArgument_InActualToo\n[All builds/build]   | --- PASS: Test_Arguments_Diff_WithAnythingArgument_InActualToo (0.00s)\n[All builds/build]   | === RUN   Test_Arguments_Diff_WithAnythingOfTypeArgument\n[All builds/build]   | --- PASS: Test_Arguments_Diff_WithAnythingOfTypeArgument (0.00s)\n[All builds/build]   | === RUN   Test_Arguments_Diff_WithAnythingOfTypeArgument_Failing\n[All builds/build]   | --- PASS: Test_Arguments_Diff_WithAnythingOfTypeArgument_Failing (0.00s)\n[All builds/build]   | === RUN   Test_Arguments_Diff_WithIsTypeArgument\n[All builds/build]   | --- PASS: Test_Arguments_Diff_WithIsTypeArgument (0.00s)\n[All builds/build]   | === RUN   Test_Arguments_Diff_WithIsTypeArgument_Failing\n[All builds/build]   | --- PASS: Test_Arguments_Diff_WithIsTypeArgument_Failing (0.00s)\n[All builds/build]   | === RUN   Test_Arguments_Diff_WithArgMatcher\n[All builds/build]   | --- PASS: Test_Arguments_Diff_WithArgMatcher (0.00s)\n[All builds/build]   | === RUN   Test_Arguments_Assert\n[All builds/build]   | --- PASS: Test_Arguments_Assert (0.00s)\n[All builds/build]   | === RUN   Test_Arguments_String_Representation\n[All builds/build]   | --- PASS: Test_Arguments_String_Representation (0.00s)\n[All builds/build]   | === RUN   Test_Arguments_String\n[All builds/build]   | --- PASS: Test_Arguments_String (0.00s)\n[All builds/build]   | === RUN   Test_Arguments_Error\n[All builds/build]   | --- PASS: Test_Arguments_Error (0.00s)\n[All builds/build]   | === RUN   Test_Arguments_Error_Nil\n[All builds/build]   | --- PASS: Test_Arguments_Error_Nil (0.00s)\n[All builds/build]   | === RUN   Test_Arguments_Int\n[All builds/build]   | --- PASS: Test_Arguments_Int (0.00s)\n[All builds/build]   | === RUN   Test_Arguments_Bool\n[All builds/build]   | --- PASS: Test_Arguments_Bool (0.00s)\n[All builds/build]   | === RUN   Test_WaitUntil_Parallel\n[All builds/build]   | --- PASS: Test_WaitUntil_Parallel (0.00s)\n[All builds/build]   | === RUN   Test_MockMethodCalled\n[All builds/build]   |     mock_test.go:1872: PASS:\tfoo(string)\n[All builds/build]   | --- PASS: Test_MockMethodCalled (0.00s)\n[All builds/build]   | === RUN   Test_MockMethodCalled_Panic\n[All builds/build]   |     mock_test.go:1880: PASS:\tfoo(string)\n[All builds/build]   | --- PASS: Test_MockMethodCalled_Panic (0.00s)\n[All builds/build]   | === RUN   Test_MockReturnAndCalledConcurrent\n[All builds/build]   | --- PASS: Test_MockReturnAndCalledConcurrent (0.14s)\n[All builds/build]   | === RUN   TestLoggingAssertExpectations\n[All builds/build]   |     mock_test.go:1924: FAIL:\tGetTime(int)\n[All builds/build]   |         \t\tat: [/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/mock/mock_test.go:1936]\n[All builds/build]   |     mock_test.go:1924: Expectations didn't match for Mock: *mock.timer\n[All builds/build]   | --- PASS: TestLoggingAssertExpectations (0.00s)\n[All builds/build]   | === RUN   TestAfterTotalWaitTimeWhileExecution\n[All builds/build]   | --- PASS: TestAfterTotalWaitTimeWhileExecution (0.01s)\n[All builds/build]   | === RUN   TestArgumentMatcherToPrintMismatch\n[All builds/build]   | --- PASS: TestArgumentMatcherToPrintMismatch (0.00s)\n[All builds/build]   | === RUN   TestArgumentMatcherToPrintMismatchWithReferenceType\n[All builds/build]   | --- PASS: TestArgumentMatcherToPrintMismatchWithReferenceType (0.00s)\n[All builds/build]   | === RUN   TestClosestCallMismatchedArgumentInformationShowsTheClosest\n[All builds/build]   | --- PASS: TestClosestCallMismatchedArgumentInformationShowsTheClosest (0.00s)\n[All builds/build]   | === RUN   TestClosestCallFavorsFirstMock\n[All builds/build]   | --- PASS: TestClosestCallFavorsFirstMock (0.00s)\n[All builds/build]   | === RUN   TestClosestCallUsesRepeatabilityToFindClosest\n[All builds/build]   | --- PASS: TestClosestCallUsesRepeatabilityToFindClosest (0.00s)\n[All builds/build]   | === RUN   TestClosestCallMismatchedArgumentValueInformation\n[All builds/build]   | --- PASS: TestClosestCallMismatchedArgumentValueInformation (0.00s)\n[All builds/build]   | === RUN   Test_isBetterMatchThanReturnsFalseIfCandidateCallIsNil\n[All builds/build]   | --- PASS: Test_isBetterMatchThanReturnsFalseIfCandidateCallIsNil (0.00s)\n[All builds/build]   | === RUN   Test_isBetterMatchThanReturnsTrueIfOtherCandidateCallIsNil\n[All builds/build]   | --- PASS: Test_isBetterMatchThanReturnsTrueIfOtherCandidateCallIsNil (0.00s)\n[All builds/build]   | === RUN   Test_isBetterMatchThanReturnsFalseIfDiffCountIsGreaterThanOther\n[All builds/build]   | --- PASS: Test_isBetterMatchThanReturnsFalseIfDiffCountIsGreaterThanOther (0.00s)\n[All builds/build]   | === RUN   Test_isBetterMatchThanReturnsTrueIfDiffCountIsLessThanOther\n[All builds/build]   | --- PASS: Test_isBetterMatchThanReturnsTrueIfDiffCountIsLessThanOther (0.00s)\n[All builds/build]   | === RUN   Test_isBetterMatchThanReturnsTrueIfRepeatabilityIsGreaterThanOther\n[All builds/build]   | --- PASS: Test_isBetterMatchThanReturnsTrueIfRepeatabilityIsGreaterThanOther (0.00s)\n[All builds/build]   | === RUN   Test_isBetterMatchThanReturnsFalseIfRepeatabilityIsLessThanOrEqualToOther\n[All builds/build]   | --- PASS: Test_isBetterMatchThanReturnsFalseIfRepeatabilityIsLessThanOrEqualToOther (0.00s)\n[All builds/build]   | === RUN   TestConcurrentArgumentRead\n[All builds/build]   |     mock_test.go:2125: PASS:\tUse(*mock.mockCaller)\n[All builds/build]   |     mock_test.go:2125: PASS:\tCall()\n[All builds/build]   | --- PASS: TestConcurrentArgumentRead (0.00s)\n[All builds/build]   | PASS\n[All builds/build]   | ok  \tgithub.com/stretchr/testify/mock\t0.304s\n[All builds/build]   | === RUN   TestImplementsWrapper\n[All builds/build]   | --- PASS: TestImplementsWrapper (0.00s)\n[All builds/build]   | === RUN   TestIsTypeWrapper\n[All builds/build]   | --- PASS: TestIsTypeWrapper (0.00s)\n[All builds/build]   | === RUN   TestEqualWrapper\n[All builds/build]   | --- PASS: TestEqualWrapper (0.00s)\n[All builds/build]   | === RUN   TestNotEqualWrapper\n[All builds/build]   | --- PASS: TestNotEqualWrapper (0.00s)\n[All builds/build]   | === RUN   TestExactlyWrapper\n[All builds/build]   | --- PASS: TestExactlyWrapper (0.00s)\n[All builds/build]   | === RUN   TestNotNilWrapper\n[All builds/build]   | --- PASS: TestNotNilWrapper (0.00s)\n[All builds/build]   | === RUN   TestNilWrapper\n[All builds/build]   | --- PASS: TestNilWrapper (0.00s)\n[All builds/build]   | === RUN   TestTrueWrapper\n[All builds/build]   | --- PASS: TestTrueWrapper (0.00s)\n[All builds/build]   | === RUN   TestFalseWrapper\n[All builds/build]   | --- PASS: TestFalseWrapper (0.00s)\n[All builds/build]   | === RUN   TestContainsWrapper\n[All builds/build]   | --- PASS: TestContainsWrapper (0.00s)\n[All builds/build]   | === RUN   TestNotContainsWrapper\n[All builds/build]   | --- PASS: TestNotContainsWrapper (0.00s)\n[All builds/build]   | === RUN   TestPanicsWrapper\n[All builds/build]   | --- PASS: TestPanicsWrapper (0.00s)\n[All builds/build]   | === RUN   TestNotPanicsWrapper\n[All builds/build]   | --- PASS: TestNotPanicsWrapper (0.00s)\n[All builds/build]   | === RUN   TestNoErrorWrapper\n[All builds/build]   | --- PASS: TestNoErrorWrapper (0.00s)\n[All builds/build]   | === RUN   TestErrorWrapper\n[All builds/build]   | --- PASS: TestErrorWrapper (0.00s)\n[All builds/build]   | === RUN   TestErrorContainsWrapper\n[All builds/build]   | --- PASS: TestErrorContainsWrapper (0.00s)\n[All builds/build]   | === RUN   TestEqualErrorWrapper\n[All builds/build]   | --- PASS: TestEqualErrorWrapper (0.00s)\n[All builds/build]   | === RUN   TestEmptyWrapper\n[All builds/build]   | --- PASS: TestEmptyWrapper (0.00s)\n[All builds/build]   | === RUN   TestNotEmptyWrapper\n[All builds/build]   | --- PASS: TestNotEmptyWrapper (0.00s)\n[All builds/build]   | === RUN   TestWithinDurationWrapper\n[All builds/build]   | --- PASS: TestWithinDurationWrapper (0.00s)\n[All builds/build]   | === RUN   TestInDeltaWrapper\n[All builds/build]   | --- PASS: TestInDeltaWrapper (0.00s)\n[All builds/build]   | === RUN   TestZeroWrapper\n[All builds/build]   | --- PASS: TestZeroWrapper (0.00s)\n[All builds/build]   | === RUN   TestNotZeroWrapper\n[All builds/build]   | --- PASS: TestNotZeroWrapper (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_EqualSONString\n[All builds/build]   | --- PASS: TestJSONEqWrapper_EqualSONString (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_EquivalentButNotEqual\n[All builds/build]   | --- PASS: TestJSONEqWrapper_EquivalentButNotEqual (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_HashOfArraysAndHashes\n[All builds/build]   | --- PASS: TestJSONEqWrapper_HashOfArraysAndHashes (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_Array\n[All builds/build]   | --- PASS: TestJSONEqWrapper_Array (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_HashAndArrayNotEquivalent\n[All builds/build]   | --- PASS: TestJSONEqWrapper_HashAndArrayNotEquivalent (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_HashesNotEquivalent\n[All builds/build]   | --- PASS: TestJSONEqWrapper_HashesNotEquivalent (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_ActualIsNotJSON\n[All builds/build]   | --- PASS: TestJSONEqWrapper_ActualIsNotJSON (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_ExpectedIsNotJSON\n[All builds/build]   | --- PASS: TestJSONEqWrapper_ExpectedIsNotJSON (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_ExpectedAndActualNotJSON\n[All builds/build]   | --- PASS: TestJSONEqWrapper_ExpectedAndActualNotJSON (0.00s)\n[All builds/build]   | === RUN   TestJSONEqWrapper_ArraysOfDifferentOrder\n[All builds/build]   | --- PASS: TestJSONEqWrapper_ArraysOfDifferentOrder (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_EqualYAMLString\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_EqualYAMLString (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_EquivalentButNotEqual\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_EquivalentButNotEqual (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_HashOfArraysAndHashes\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_HashOfArraysAndHashes (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_Array\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_Array (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_HashAndArrayNotEquivalent\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_HashAndArrayNotEquivalent (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_HashesNotEquivalent\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_HashesNotEquivalent (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_ActualIsSimpleString\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_ActualIsSimpleString (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_ExpectedIsSimpleString\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_ExpectedIsSimpleString (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_ExpectedAndActualSimpleString\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_ExpectedAndActualSimpleString (0.00s)\n[All builds/build]   | === RUN   TestYAMLEqWrapper_ArraysOfDifferentOrder\n[All builds/build]   | --- PASS: TestYAMLEqWrapper_ArraysOfDifferentOrder (0.00s)\n[All builds/build]   | === RUN   TestImplements\n[All builds/build]   | --- PASS: TestImplements (0.00s)\n[All builds/build]   | === RUN   TestIsType\n[All builds/build]   | --- PASS: TestIsType (0.00s)\n[All builds/build]   | === RUN   TestEqual\n[All builds/build]   | --- PASS: TestEqual (0.00s)\n[All builds/build]   | === RUN   TestNotEqual\n[All builds/build]   | --- PASS: TestNotEqual (0.00s)\n[All builds/build]   | === RUN   TestExactly\n[All builds/build]   | --- PASS: TestExactly (0.00s)\n[All builds/build]   | === RUN   TestNotNil\n[All builds/build]   | --- PASS: TestNotNil (0.00s)\n[All builds/build]   | === RUN   TestNil\n[All builds/build]   | --- PASS: TestNil (0.00s)\n[All builds/build]   | === RUN   TestTrue\n[All builds/build]   | --- PASS: TestTrue (0.00s)\n[All builds/build]   | === RUN   TestFalse\n[All builds/build]   | --- PASS: TestFalse (0.00s)\n[All builds/build]   | === RUN   TestContains\n[All builds/build]   | --- PASS: TestContains (0.00s)\n[All builds/build]   | === RUN   TestNotContains\n[All builds/build]   | --- PASS: TestNotContains (0.00s)\n[All builds/build]   | === RUN   TestPanics\n[All builds/build]   | --- PASS: TestPanics (0.00s)\n[All builds/build]   | === RUN   TestNotPanics\n[All builds/build]   | --- PASS: TestNotPanics (0.00s)\n[All builds/build]   | === RUN   TestNoError\n[All builds/build]   | --- PASS: TestNoError (0.00s)\n[All builds/build]   | === RUN   TestError\n[All builds/build]   | --- PASS: TestError (0.00s)\n[All builds/build]   | === RUN   TestErrorContains\n[All builds/build]   | --- PASS: TestErrorContains (0.00s)\n[All builds/build]   | === RUN   TestEqualError\n[All builds/build]   | --- PASS: TestEqualError (0.00s)\n[All builds/build]   | === RUN   TestEmpty\n[All builds/build]   | --- PASS: TestEmpty (0.00s)\n[All builds/build]   | === RUN   TestNotEmpty\n[All builds/build]   | --- PASS: TestNotEmpty (0.00s)\n[All builds/build]   | === RUN   TestWithinDuration\n[All builds/build]   | --- PASS: TestWithinDuration (0.00s)\n[All builds/build]   | === RUN   TestInDelta\n[All builds/build]   | --- PASS: TestInDelta (0.00s)\n[All builds/build]   | === RUN   TestZero\n[All builds/build]   | --- PASS: TestZero (0.00s)\n[All builds/build]   | === RUN   TestNotZero\n[All builds/build]   | --- PASS: TestNotZero (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_EqualSONString\n[All builds/build]   | --- PASS: TestJSONEq_EqualSONString (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_EquivalentButNotEqual\n[All builds/build]   | --- PASS: TestJSONEq_EquivalentButNotEqual (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_HashOfArraysAndHashes\n[All builds/build]   | --- PASS: TestJSONEq_HashOfArraysAndHashes (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_Array\n[All builds/build]   | --- PASS: TestJSONEq_Array (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_HashAndArrayNotEquivalent\n[All builds/build]   | --- PASS: TestJSONEq_HashAndArrayNotEquivalent (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_HashesNotEquivalent\n[All builds/build]   | --- PASS: TestJSONEq_HashesNotEquivalent (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_ActualIsNotJSON\n[All builds/build]   | --- PASS: TestJSONEq_ActualIsNotJSON (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_ExpectedIsNotJSON\n[All builds/build]   | --- PASS: TestJSONEq_ExpectedIsNotJSON (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_ExpectedAndActualNotJSON\n[All builds/build]   | --- PASS: TestJSONEq_ExpectedAndActualNotJSON (0.00s)\n[All builds/build]   | === RUN   TestJSONEq_ArraysOfDifferentOrder\n[All builds/build]   | --- PASS: TestJSONEq_ArraysOfDifferentOrder (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_EqualYAMLString\n[All builds/build]   | --- PASS: TestYAMLEq_EqualYAMLString (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_EquivalentButNotEqual\n[All builds/build]   | --- PASS: TestYAMLEq_EquivalentButNotEqual (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_HashOfArraysAndHashes\n[All builds/build]   | --- PASS: TestYAMLEq_HashOfArraysAndHashes (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_Array\n[All builds/build]   | --- PASS: TestYAMLEq_Array (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_HashAndArrayNotEquivalent\n[All builds/build]   | --- PASS: TestYAMLEq_HashAndArrayNotEquivalent (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_HashesNotEquivalent\n[All builds/build]   | --- PASS: TestYAMLEq_HashesNotEquivalent (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_ActualIsSimpleString\n[All builds/build]   | --- PASS: TestYAMLEq_ActualIsSimpleString (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_ExpectedIsSimpleString\n[All builds/build]   | --- PASS: TestYAMLEq_ExpectedIsSimpleString (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_ExpectedAndActualSimpleString\n[All builds/build]   | --- PASS: TestYAMLEq_ExpectedAndActualSimpleString (0.00s)\n[All builds/build]   | === RUN   TestYAMLEq_ArraysOfDifferentOrder\n[All builds/build]   | --- PASS: TestYAMLEq_ArraysOfDifferentOrder (0.00s)\n[All builds/build]   | === RUN   TestComparisonAssertionFunc\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/implements\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/isType\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/equal\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/equalValues\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/exactly\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/notEqual\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/NotEqualValues\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/notContains\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/subset\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/notSubset\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/elementsMatch\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/regexp\n[All builds/build]   | === RUN   TestComparisonAssertionFunc/notRegexp\n[All builds/build]   | --- PASS: TestComparisonAssertionFunc (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/implements (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/isType (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/equal (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/equalValues (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/exactly (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/notEqual (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/NotEqualValues (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/notContains (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/subset (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/notSubset (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/elementsMatch (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/regexp (0.00s)\n[All builds/build]   |     --- PASS: TestComparisonAssertionFunc/notRegexp (0.00s)\n[All builds/build]   | === RUN   TestValueAssertionFunc\n[All builds/build]   | === RUN   TestValueAssertionFunc/notNil\n[All builds/build]   | === RUN   TestValueAssertionFunc/nil\n[All builds/build]   | === RUN   TestValueAssertionFunc/empty\n[All builds/build]   | === RUN   TestValueAssertionFunc/notEmpty\n[All builds/build]   | === RUN   TestValueAssertionFunc/zero\n[All builds/build]   | === RUN   TestValueAssertionFunc/notZero\n[All builds/build]   | --- PASS: TestValueAssertionFunc (0.00s)\n[All builds/build]   |     --- PASS: TestValueAssertionFunc/notNil (0.00s)\n[All builds/build]   |     --- PASS: TestValueAssertionFunc/nil (0.00s)\n[All builds/build]   |     --- PASS: TestValueAssertionFunc/empty (0.00s)\n[All builds/build]   |     --- PASS: TestValueAssertionFunc/notEmpty (0.00s)\n[All builds/build]   |     --- PASS: TestValueAssertionFunc/zero (0.00s)\n[All builds/build]   |     --- PASS: TestValueAssertionFunc/notZero (0.00s)\n[All builds/build]   | === RUN   TestBoolAssertionFunc\n[All builds/build]   | === RUN   TestBoolAssertionFunc/true\n[All builds/build]   | === RUN   TestBoolAssertionFunc/false\n[All builds/build]   | --- PASS: TestBoolAssertionFunc (0.00s)\n[All builds/build]   |     --- PASS: TestBoolAssertionFunc/true (0.00s)\n[All builds/build]   |     --- PASS: TestBoolAssertionFunc/false (0.00s)\n[All builds/build]   | === RUN   TestErrorAssertionFunc\n[All builds/build]   | === RUN   TestErrorAssertionFunc/noError\n[All builds/build]   | === RUN   TestErrorAssertionFunc/error\n[All builds/build]   | --- PASS: TestErrorAssertionFunc (0.00s)\n[All builds/build]   |     --- PASS: TestErrorAssertionFunc/noError (0.00s)\n[All builds/build]   |     --- PASS: TestErrorAssertionFunc/error (0.00s)\n[All builds/build]   | PASS\n[All builds/build]   | ok  \tgithub.com/stretchr/testify/require\t0.090s\n[All builds/build]   | === RUN   TestPassedReturnsTrueWhenAllTestsPass\n[All builds/build]   | --- PASS: TestPassedReturnsTrueWhenAllTestsPass (0.00s)\n[All builds/build]   | === RUN   TestPassedReturnsFalseWhenSomeTestFails\n[All builds/build]   | --- PASS: TestPassedReturnsFalseWhenSomeTestFails (0.00s)\n[All builds/build]   | === RUN   TestSuiteRequireTwice\n[All builds/build]   | === RUN   TestSuiteRequireTwice\n[All builds/build]   | === RUN   TestSuiteRequireTwice/TestRequireOne\n[All builds/build]   |     suite_test.go:42: \n[All builds/build]   |         \tError Trace:\t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite_test.go:42\n[All builds/build]   |         \tError:      \tNot equal: \n[All builds/build]   |         \t            \texpected: 1\n[All builds/build]   |         \t            \tactual  : 2\n[All builds/build]   |         \tTest:       \tTestSuiteRequireTwice/TestRequireOne\n[All builds/build]   | === RUN   TestSuiteRequireTwice/TestRequireTwo\n[All builds/build]   |     suite_test.go:47: \n[All builds/build]   |         \tError Trace:\t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite_test.go:47\n[All builds/build]   |         \tError:      \tNot equal: \n[All builds/build]   |         \t            \texpected: 1\n[All builds/build]   |         \t            \tactual  : 2\n[All builds/build]   |         \tTest:       \tTestSuiteRequireTwice/TestRequireTwo\n[All builds/build]   | --- FAIL: TestSuiteRequireTwice (0.01s)\n[All builds/build]   |     --- FAIL: TestSuiteRequireTwice/TestRequireOne (0.00s)\n[All builds/build]   |     --- FAIL: TestSuiteRequireTwice/TestRequireTwo (0.00s)\n[All builds/build]   | --- PASS: TestSuiteRequireTwice (0.01s)\n[All builds/build]   | === RUN   TestSuiteRecoverPanic\n[All builds/build]   | === RUN   TestPanicInSetupSuite\n[All builds/build]   |     suite.go:87: test panicked: oops in setup suite\n[All builds/build]   |         goroutine 42 [running]:\n[All builds/build]   |         runtime/debug.Stack()\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/runtime/debug/stack.go:24 +0x72\n[All builds/build]   |         github.com/stretchr/testify/suite.failOnPanic(0xc000342ea0, {0xa2fae0, 0xb51f08})\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:87 +0x45\n[All builds/build]   |         github.com/stretchr/testify/suite.recoverAndFailOnPanic(0xc000283d40?)\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:82 +0x3f\n[All builds/build]   |         panic({0xa2fae0, 0xb51f08})\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/runtime/panic.go:890 +0x263\n[All builds/build]   |         github.com/stretchr/testify/suite.(*panickingSuite).SetupSuite(0xc0004a0820)\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite_test.go:63 +0x65\n[All builds/build]   |         github.com/stretchr/testify/suite.Run(0xc000342ea0, {0xb54fb0?, 0xc0004a0820})\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:154 +0x5d8\n[All builds/build]   |         github.com/stretchr/testify/suite.TestSuiteRecoverPanic.func1(0x0?)\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite_test.go:108 +0xa9\n[All builds/build]   |         testing.tRunner(0xc000342ea0, 0xadd538)\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1576 +0x217\n[All builds/build]   |         created by testing.(*T).Run\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1629 +0x806\n[All builds/build]   | --- FAIL: TestPanicInSetupSuite (0.02s)\n[All builds/build]   | === RUN   TestPanicInSetupTest\n[All builds/build]   | === RUN   TestPanicInSetupTest/Test\n[All builds/build]   |     suite.go:87: test panicked: oops in setup test\n[All builds/build]   |         goroutine 21 [running]:\n[All builds/build]   |         runtime/debug.Stack()\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/runtime/debug/stack.go:24 +0x72\n[All builds/build]   |         github.com/stretchr/testify/suite.failOnPanic(0xc000202d00, {0xa2fae0, 0xb51f18})\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:87 +0x45\n[All builds/build]   |         github.com/stretchr/testify/suite.Run.func1.1()\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:183 +0x34c\n[All builds/build]   |         panic({0xa2fae0, 0xb51f18})\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/runtime/panic.go:890 +0x263\n[All builds/build]   |         github.com/stretchr/testify/suite.(*panickingSuite).SetupTest(0xc0004a11d0)\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite_test.go:69 +0x65\n[All builds/build]   |         github.com/stretchr/testify/suite.Run.func1(0xc000202d00)\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:187 +0x253\n[All builds/build]   |         testing.tRunner(0xc000202d00, 0xc000176000)\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1576 +0x217\n[All builds/build]   |         created by testing.(*T).Run\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1629 +0x806\n[All builds/build]   | --- FAIL: TestPanicInSetupTest (0.02s)\n[All builds/build]   |     --- FAIL: TestPanicInSetupTest/Test (0.00s)\n[All builds/build]   | === RUN   TestPanicInBeforeTest\n[All builds/build]   | === RUN   TestPanicInBeforeTest/Test\n[All builds/build]   |     suite.go:87: test panicked: oops in before test\n[All builds/build]   |         goroutine 162 [running]:\n[All builds/build]   |         runtime/debug.Stack()\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/runtime/debug/stack.go:24 +0x72\n[All builds/build]   |         github.com/stretchr/testify/suite.failOnPanic(0xc000202d00, {0xa2fae0, 0xb51f28})\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:87 +0x45\n[All builds/build]   |         github.com/stretchr/testify/suite.Run.func1.1()\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:183 +0x34c\n[All builds/build]   |         panic({0xa2fae0, 0xb51f28})\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/runtime/panic.go:890 +0x263\n[All builds/build]   |         github.com/stretchr/testify/suite.(*panickingSuite).BeforeTest(0xc0005be500, {0xb54fb0?, 0xc0005be500?}, {0x91282d?, 0x0?})\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite_test.go:75 +0x65\n[All builds/build]   |         github.com/stretchr/testify/suite.Run.func1(0xc000202d00)\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:190 +0x2f9\n[All builds/build]   |         testing.tRunner(0xc000202d00, 0xc000176090)\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1576 +0x217\n[All builds/build]   |         created by testing.(*T).Run\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1629 +0x806\n[All builds/build]   | --- FAIL: TestPanicInBeforeTest (0.04s)\n[All builds/build]   |     --- FAIL: TestPanicInBeforeTest/Test (0.00s)\n[All builds/build]   | === RUN   TestPanicInTest\n[All builds/build]   | === RUN   TestPanicInTest/Test\n[All builds/build]   |     suite.go:87: test panicked: oops in test\n[All builds/build]   |         goroutine 164 [running]:\n[All builds/build]   |         runtime/debug.Stack()\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/runtime/debug/stack.go:24 +0x72\n[All builds/build]   |         github.com/stretchr/testify/suite.failOnPanic(0xc000203520, {0xa2fae0, 0xb51f38})\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:87 +0x45\n[All builds/build]   |         github.com/stretchr/testify/suite.Run.func1.1()\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:183 +0x34c\n[All builds/build]   |         panic({0xa2fae0, 0xb51f38})\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/runtime/panic.go:890 +0x263\n[All builds/build]   |         github.com/stretchr/testify/suite.(*panickingSuite).Test(0xc0004a0280)\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite_test.go:81 +0x65\n[All builds/build]   |         reflect.Value.call({0xc0004a6a80?, 0xc00021e9d0?, 0x13?}, {0xaa7eaf, 0x4}, {0xc0002a5db8, 0x1, 0x1?})\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/reflect/value.go:586 +0x13aa\n[All builds/build]   |         reflect.Value.Call({0xc0004a6a80?, 0xc00021e9d0?, 0xc0004a0280?}, {0xc000173db8, 0x1, 0x1})\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/reflect/value.go:370 +0xc8\n[All builds/build]   |         github.com/stretchr/testify/suite.Run.func1(0xc000203520)\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:197 +0x70e\n[All builds/build]   |         testing.tRunner(0xc000203520, 0xc000176000)\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1576 +0x217\n[All builds/build]   |         created by testing.(*T).Run\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1629 +0x806\n[All builds/build]   | --- FAIL: TestPanicInTest (0.01s)\n[All builds/build]   |     --- FAIL: TestPanicInTest/Test (0.00s)\n[All builds/build]   | === RUN   TestPanicInAfterTest\n[All builds/build]   | === RUN   TestPanicInAfterTest/Test\n[All builds/build]   |     suite.go:87: test panicked: oops in after test\n[All builds/build]   |         goroutine 166 [running]:\n[All builds/build]   |         runtime/debug.Stack()\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/runtime/debug/stack.go:24 +0x72\n[All builds/build]   |         github.com/stretchr/testify/suite.failOnPanic(0xc000202d00, {0xa2fae0, 0xb51de8})\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:87 +0x45\n[All builds/build]   |         github.com/stretchr/testify/suite.recoverAndFailOnPanic(0xc0002031e0?)\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:82 +0x3f\n[All builds/build]   |         panic({0xa2fae0, 0xb51de8})\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/runtime/panic.go:890 +0x263\n[All builds/build]   |         github.com/stretchr/testify/suite.(*panickingSuite).AfterTest(0xc000296b40, {0xb54fb0?, 0xc000296b40?}, {0x0?, 0x0?})\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite_test.go:87 +0x65\n[All builds/build]   |         github.com/stretchr/testify/suite.Run.func1.1()\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:175 +0x2f6\n[All builds/build]   |         github.com/stretchr/testify/suite.Run.func1(0xc000202d00)\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:198 +0x713\n[All builds/build]   |         testing.tRunner(0xc000202d00, 0xc000326000)\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1576 +0x217\n[All builds/build]   |         created by testing.(*T).Run\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1629 +0x806\n[All builds/build]   | --- FAIL: TestPanicInAfterTest (0.01s)\n[All builds/build]   |     --- FAIL: TestPanicInAfterTest/Test (0.00s)\n[All builds/build]   | === RUN   TestPanicInTearDownTest\n[All builds/build]   | === RUN   TestPanicInTearDownTest/Test\n[All builds/build]   |     suite.go:87: test panicked: oops in tear down test\n[All builds/build]   |         goroutine 167 [running]:\n[All builds/build]   |         runtime/debug.Stack()\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/runtime/debug/stack.go:24 +0x72\n[All builds/build]   |         github.com/stretchr/testify/suite.failOnPanic(0xc000202d00, {0xa2fae0, 0xb51df8})\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:87 +0x45\n[All builds/build]   |         github.com/stretchr/testify/suite.recoverAndFailOnPanic(0xc0002031e0?)\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:82 +0x3f\n[All builds/build]   |         panic({0xa2fae0, 0xb51df8})\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/runtime/panic.go:890 +0x263\n[All builds/build]   |         github.com/stretchr/testify/suite.(*panickingSuite).TearDownTest(0xc0003ca000)\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite_test.go:93 +0x65\n[All builds/build]   |         github.com/stretchr/testify/suite.Run.func1.1()\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:179 +0x31a\n[All builds/build]   |         github.com/stretchr/testify/suite.Run.func1(0xc000202d00)\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:198 +0x713\n[All builds/build]   |         testing.tRunner(0xc000202d00, 0xc0003de000)\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1576 +0x217\n[All builds/build]   |         created by testing.(*T).Run\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1629 +0x806\n[All builds/build]   | --- FAIL: TestPanicInTearDownTest (0.01s)\n[All builds/build]   |     --- FAIL: TestPanicInTearDownTest/Test (0.00s)\n[All builds/build]   | === RUN   TestPanicInTearDownSuite\n[All builds/build]   | === RUN   TestPanicInTearDownSuite/Test\n[All builds/build]   | === NAME  TestPanicInTearDownSuite\n[All builds/build]   |     suite.go:87: test panicked: oops in tear down suite\n[All builds/build]   |         goroutine 168 [running]:\n[All builds/build]   |         runtime/debug.Stack()\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/runtime/debug/stack.go:24 +0x72\n[All builds/build]   |         github.com/stretchr/testify/suite.failOnPanic(0xc000203040, {0xa2fae0, 0xb51e08})\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:87 +0x45\n[All builds/build]   |         github.com/stretchr/testify/suite.recoverAndFailOnPanic(0xc0001d2680?)\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:82 +0x3f\n[All builds/build]   |         panic({0xa2fae0, 0xb51e08})\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/runtime/panic.go:890 +0x263\n[All builds/build]   |         github.com/stretchr/testify/suite.(*panickingSuite).TearDownSuite(0xc0002967d0)\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite_test.go:99 +0x65\n[All builds/build]   |         github.com/stretchr/testify/suite.Run.func2()\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:205 +0x8e\n[All builds/build]   |         github.com/stretchr/testify/suite.Run(0xc000203040, {0xb54fb0?, 0xc0002967d0})\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:216 +0x9b8\n[All builds/build]   |         github.com/stretchr/testify/suite.TestSuiteRecoverPanic.func7(0x0?)\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite_test.go:132 +0xa9\n[All builds/build]   |         testing.tRunner(0xc000203040, 0xadd568)\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1576 +0x217\n[All builds/build]   |         created by testing.(*T).Run\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1629 +0x806\n[All builds/build]   | --- FAIL: TestPanicInTearDownSuite (0.01s)\n[All builds/build]   |     --- PASS: TestPanicInTearDownSuite/Test (0.00s)\n[All builds/build]   | --- PASS: TestSuiteRecoverPanic (0.13s)\n[All builds/build]   | === RUN   TestRunSuite\n[All builds/build]   | === RUN   TestRunSuite/TestOne\n[All builds/build]   | === RUN   TestRunSuite/TestSkip\n[All builds/build]   |     suite_test.go:229: \n[All builds/build]   | === RUN   TestRunSuite/TestSubtest\n[All builds/build]   | === RUN   TestRunSuite/TestSubtest/first\n[All builds/build]   | === RUN   TestRunSuite/TestSubtest/second\n[All builds/build]   | === RUN   TestRunSuite/TestTwo\n[All builds/build]   | === NAME  TestRunSuite\n[All builds/build]   |     suite_test.go:279: \n[All builds/build]   | --- SKIP: TestRunSuite (0.02s)\n[All builds/build]   |     --- PASS: TestRunSuite/TestOne (0.00s)\n[All builds/build]   |     --- SKIP: TestRunSuite/TestSkip (0.00s)\n[All builds/build]   |     --- PASS: TestRunSuite/TestSubtest (0.00s)\n[All builds/build]   |         --- PASS: TestRunSuite/TestSubtest/first (0.00s)\n[All builds/build]   |         --- PASS: TestRunSuite/TestSubtest/second (0.00s)\n[All builds/build]   |     --- PASS: TestRunSuite/TestTwo (0.00s)\n[All builds/build]   | === RUN   TestSkippingSuiteSetup\n[All builds/build]   |     suite.go:229: warning: no tests to run\n[All builds/build]   | --- PASS: TestSkippingSuiteSetup (0.01s)\n[All builds/build]   | === RUN   TestSuiteGetters\n[All builds/build]   | --- PASS: TestSuiteGetters (0.00s)\n[All builds/build]   | === RUN   TestSuiteLogging\n[All builds/build]   | --- PASS: TestSuiteLogging (0.02s)\n[All builds/build]   | === RUN   TestSuiteCallOrder\n[All builds/build]   | === RUN   TestSuiteCallOrder/Test_A\n[All builds/build]   | === RUN   TestSuiteCallOrder/Test_B\n[All builds/build]   | --- PASS: TestSuiteCallOrder (1.27s)\n[All builds/build]   |     --- PASS: TestSuiteCallOrder/Test_A (0.52s)\n[All builds/build]   |     --- PASS: TestSuiteCallOrder/Test_B (0.70s)\n[All builds/build]   | === RUN   TestSuiteWithStats\n[All builds/build]   | === RUN   WithStats\n[All builds/build]   | === RUN   WithStats/TestPanic\n[All builds/build]   |     suite.go:87: test panicked: oops\n[All builds/build]   |         goroutine 200 [running]:\n[All builds/build]   |         runtime/debug.Stack()\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/runtime/debug/stack.go:24 +0x72\n[All builds/build]   |         github.com/stretchr/testify/suite.failOnPanic(0xc0001d2b60, {0xa2fae0, 0xb51eb8})\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:87 +0x45\n[All builds/build]   |         github.com/stretchr/testify/suite.Run.func1.1()\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:183 +0x34c\n[All builds/build]   |         panic({0xa2fae0, 0xb51eb8})\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/runtime/panic.go:890 +0x263\n[All builds/build]   |         github.com/stretchr/testify/suite.(*suiteWithStats).TestPanic(0x0?)\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite_test.go:518 +0x31\n[All builds/build]   |         reflect.Value.call({0xc0004a60c0?, 0xc00021e1e8?, 0x13?}, {0xaa7eaf, 0x4}, {0xc0002abdb8, 0x1, 0x1?})\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/reflect/value.go:586 +0x13aa\n[All builds/build]   |         reflect.Value.Call({0xc0004a60c0?, 0xc00021e1e8?, 0xa0ea4c?}, {0xc000175db8, 0x1, 0x1})\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/reflect/value.go:370 +0xc8\n[All builds/build]   |         github.com/stretchr/testify/suite.Run.func1(0xc0001d2b60)\n[All builds/build]   |         \t/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/stretchr-testify/suite/suite.go:197 +0x70e\n[All builds/build]   |         testing.tRunner(0xc0001d2b60, 0xc00015c000)\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1576 +0x217\n[All builds/build]   |         created by testing.(*T).Run\n[All builds/build]   |         \t/opt/hostedtoolcache/go/1.20.4/x64/src/testing/testing.go:1629 +0x806\n[All builds/build]   | === RUN   WithStats/TestSomething\n[All builds/build]   | --- FAIL: WithStats (0.02s)\n[All builds/build]   |     --- FAIL: WithStats/TestPanic (0.00s)\n[All builds/build]   |     --- PASS: WithStats/TestSomething (0.00s)\n[All builds/build]   | --- PASS: TestSuiteWithStats (0.02s)\n[All builds/build]   | === RUN   TestFailfastSuite\n[All builds/build]   | === RUN   TestFailfastSuite\n[All builds/build]   | === RUN   TestFailfastSuite/Test_A_Fails\n[All builds/build]   |     suite_test.go:613: Test A meant to fail\n[All builds/build]   | === RUN   TestFailfastSuite/Test_B_Passes\n[All builds/build]   | --- FAIL: TestFailfastSuite (0.01s)\n[All builds/build]   |     --- FAIL: TestFailfastSuite/Test_A_Fails (0.00s)\n[All builds/build]   |     --- PASS: TestFailfastSuite/Test_B_Passes (0.00s)\n[All builds/build]   | --- PASS: TestFailfastSuite (0.01s)\n[All builds/build]   | === RUN   TestFailfastSuiteFailFastOn\n[All builds/build]   |     suite_test.go:588: Running go test -v -race -run TestFailfastSuite -failfast\n[All builds/build]   |     suite_test.go:590: === RUN   TestFailfastSuite\n[All builds/build]   |         === RUN   TestFailfastSuite\n[All builds/build]   |         === RUN   TestFailfastSuite/Test_A_Fails\n[All builds/build]   |             suite_test.go:613: Test A meant to fail\n[All builds/build]   |         --- FAIL: TestFailfastSuite (0.02s)\n[All builds/build]   |             --- FAIL: TestFailfastSuite/Test_A_Fails (0.00s)\n[All builds/build]   |         --- PASS: TestFailfastSuite (0.02s)\n[All builds/build]   |         PASS\n[All builds/build]   |         ok  \tgithub.com/stretchr/testify/suite\t0.129s\n[All builds/build]   |         \n[All builds/build]   | --- PASS: TestFailfastSuiteFailFastOn (2.58s)\n[All builds/build]   | PASS\n[All builds/build]   | ok  \tgithub.com/stretchr/testify/suite\t4.172s\n[All builds/build]   | FAIL\n[All builds/build]   \u274c  Failure - Main go test -v -race ./...\n[All builds/build] exitcode '1': failure\n[All builds/build] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'build' failed\n"
}