{
    "repository": "GoogleCloudPlatform/golang-samples",
    "clone_url": "https://github.com/GoogleCloudPlatform/golang-samples.git",
    "timestamp": "2023-05-30T11:16:26.212176Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Go/Build     ] \ud83d\ude80  Start image=crawlergpt:latest\n[Go/Lint      ] \ud83d\ude80  Start image=crawlergpt:latest\n[Go/Vet       ] \ud83d\ude80  Start image=crawlergpt:latest\n[Go/Root tests] \ud83d\ude80  Start image=crawlergpt:latest\n[Go/Root tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go/Lint      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go/Vet       ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go/Build     ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go/Root tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/Vet       ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/Root tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/Vet       ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/Build     ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/Build     ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/Lint      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/Lint      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/Vet       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/GoogleCloudPlatform-golang-samples] user=0 workdir=\n[Go/Root tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/GoogleCloudPlatform-golang-samples] user=0 workdir=\n[Go/Vet       ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[Go/Vet       ] \u2b50 Run Main Setup Go\n[Go/Root tests]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[Go/Vet       ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[Go/Root tests] \u2b50 Run Main Setup Go\n[Go/Vet       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[Go/Root tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[Go/Root tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[Go/Root tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[Go/Vet       ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[Go/Lint      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/GoogleCloudPlatform-golang-samples] user=0 workdir=\n[Go/Vet       ]   | Setup go stable version spec ^1.19\n[Go/Vet       ]   \ud83d\udcac  ::debug::isExplicit: \n[Go/Vet       ]   \ud83d\udcac  ::debug::explicit? false\n[Go/Vet       ]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Go/Vet       ]   \ud83d\udcac  ::debug::explicit? true\n[Go/Vet       ]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Go/Vet       ]   \ud83d\udcac  ::debug::explicit? true\n[Go/Vet       ]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Go/Vet       ]   \ud83d\udcac  ::debug::explicit? true\n[Go/Vet       ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Go/Vet       ]   \ud83d\udcac  ::debug::match not found\n[Go/Vet       ]   | Attempting to download ^1.19...\n[Go/Vet       ]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Go/Vet       ]   \ud83d\udcac  ::debug::Error: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v2/dist/index.js:5294:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Go/Vet       ]   | Falling back to download directly from Go\n[Go/Vet       ]   \ud83d\udcac  ::debug::check 1.20.4 satisfies ^1.19\n[Go/Vet       ]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Go/Vet       ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Go/Vet       ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Go/Vet       ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Go/Vet       ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Go/Vet       ]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Go/Vet       ]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Go/Vet       ]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Go/Vet       ]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Go/Vet       ]   \ud83d\udcac  ::debug::matched go1.20.4\n[Go/Vet       ]   | Install from dist\n[Go/Vet       ]   | Acquiring go1.20.4 from https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Go/Vet       ]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Go/Vet       ]   \ud83d\udcac  ::debug::Destination /tmp/52aca85e-b38e-4465-9555-5e02af0058a6\n[Go/Root tests]   | Setup go stable version spec ^1.19\n[Go/Root tests]   \ud83d\udcac  ::debug::isExplicit: \n[Go/Root tests]   \ud83d\udcac  ::debug::explicit? false\n[Go/Root tests]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Go/Root tests]   \ud83d\udcac  ::debug::explicit? true\n[Go/Root tests]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Go/Root tests]   \ud83d\udcac  ::debug::explicit? true\n[Go/Root tests]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Go/Root tests]   \ud83d\udcac  ::debug::explicit? true\n[Go/Root tests]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Go/Root tests]   \ud83d\udcac  ::debug::match not found\n[Go/Root tests]   | Attempting to download ^1.19...\n[Go/Root tests]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Go/Root tests]   \ud83d\udcac  ::debug::Error: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v2/dist/index.js:5294:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Go/Root tests]   | Falling back to download directly from Go\n[Go/Root tests]   \ud83d\udcac  ::debug::check 1.20.4 satisfies ^1.19\n[Go/Root tests]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Go/Root tests]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Go/Root tests]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Go/Root tests]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Go/Root tests]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Go/Root tests]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Go/Root tests]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Go/Root tests]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Go/Root tests]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Go/Root tests]   \ud83d\udcac  ::debug::matched go1.20.4\n[Go/Root tests]   | Install from dist\n[Go/Root tests]   | Acquiring go1.20.4 from https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Go/Root tests]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Go/Root tests]   \ud83d\udcac  ::debug::Destination /tmp/5aefa630-0435-4e90-a276-d77924be64d8\n[Go/Lint      ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[Go/Vet       ]   \ud83d\udcac  ::debug::download complete\n[Go/Vet       ]   | Extracting Go...\n[Go/Vet       ]   \ud83d\udcac  ::debug::Checking tar --version\n[Go/Vet       ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Go/Vet       ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/fdcbee52-e7c2-441c-85e0-61267780d082 -f /tmp/52aca85e-b38e-4465-9555-5e02af0058a6\n[Go/Lint      ] \u2b50 Run Main Setup Go\n[Go/Vet       ]   | Successfully extracted go to /tmp/fdcbee52-e7c2-441c-85e0-61267780d082\n[Go/Vet       ]   | Adding to the cache ...\n[Go/Vet       ]   \ud83d\udcac  ::debug::Caching tool go 1.20.4 x64\n[Go/Vet       ]   \ud83d\udcac  ::debug::source dir: /tmp/fdcbee52-e7c2-441c-85e0-61267780d082/go\n[Go/Vet       ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.4/x64\n[Go/Lint      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[Go/Lint      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[Go/Root tests]   \ud83d\udcac  ::debug::download complete\n[Go/Root tests]   | Extracting Go...\n[Go/Root tests]   \ud83d\udcac  ::debug::Checking tar --version\n[Go/Root tests]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Go/Root tests]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/c8ee9fe8-4bc8-4be6-a028-831d5db4dbb1 -f /tmp/5aefa630-0435-4e90-a276-d77924be64d8\n[Go/Root tests]   | Successfully extracted go to /tmp/c8ee9fe8-4bc8-4be6-a028-831d5db4dbb1\n[Go/Root tests]   | Adding to the cache ...\n[Go/Root tests]   \ud83d\udcac  ::debug::Caching tool go 1.20.4 x64\n[Go/Root tests]   \ud83d\udcac  ::debug::source dir: /tmp/c8ee9fe8-4bc8-4be6-a028-831d5db4dbb1/go\n[Go/Root tests]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.4/x64\n[Go/Vet       ]   \ud83d\udcac  ::debug::finished caching tool\n[Go/Vet       ]   | Successfully cached go to /opt/hostedtoolcache/go/1.20.4/x64\n[Go/Vet       ]   | Added go to the path\n[Go/Vet       ]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.20.4/x64/bin/go:\n[Go/Vet       ]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Go/Vet       ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Go/Vet       ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Go/Vet       ]   \ud83d\udcac  ::debug::add bin true\n[Go/Vet       ]   | Successfully setup go version ^1.19\n[Go/Vet       ]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[Go/Vet       ]   | go version go1.20.4 linux/amd64\n[Go/Vet       ]   | \n[Go/Vet       ]   \u2753  ::group::go env\n[Go/Vet       ]   | GO111MODULE=\"\"\n[Go/Vet       ]   | GOARCH=\"amd64\"\n[Go/Vet       ]   | GOBIN=\"\"\n[Go/Vet       ]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Go/Vet       ]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Go/Vet       ]   | GOEXE=\"\"\n[Go/Vet       ]   | GOEXPERIMENT=\"\"\n[Go/Vet       ]   | GOFLAGS=\"\"\n[Go/Vet       ]   | GOHOSTARCH=\"amd64\"\n[Go/Vet       ]   | GOHOSTOS=\"linux\"\n[Go/Vet       ]   | GOINSECURE=\"\"\n[Go/Vet       ]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Go/Vet       ]   | GONOPROXY=\"\"\n[Go/Vet       ]   | GONOSUMDB=\"\"\n[Go/Vet       ]   | GOOS=\"linux\"\n[Go/Vet       ]   | GOPATH=\"/home/runneradmin/go\"\n[Go/Vet       ]   | GOPRIVATE=\"\"\n[Go/Vet       ]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Go/Vet       ]   | GOROOT=\"/opt/hostedtoolcache/go/1.20.4/x64\"\n[Go/Vet       ]   | GOSUMDB=\"sum.golang.org\"\n[Go/Vet       ]   | GOTMPDIR=\"\"\n[Go/Vet       ]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.20.4/x64/pkg/tool/linux_amd64\"\n[Go/Vet       ]   | GOVCS=\"\"\n[Go/Vet       ]   | GOVERSION=\"go1.20.4\"\n[Go/Vet       ]   | GCCGO=\"gccgo\"\n[Go/Vet       ]   | GOAMD64=\"v1\"\n[Go/Vet       ]   | AR=\"ar\"\n[Go/Vet       ]   | CC=\"gcc\"\n[Go/Vet       ]   | CXX=\"g++\"\n[Go/Vet       ]   | CGO_ENABLED=\"1\"\n[Go/Vet       ]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/GoogleCloudPlatform-golang-samples/go.mod\"\n[Go/Vet       ]   | GOWORK=\"\"\n[Go/Vet       ]   | CGO_CFLAGS=\"-O2 -g\"\n[Go/Vet       ]   | CGO_CPPFLAGS=\"\"\n[Go/Vet       ]   | CGO_CXXFLAGS=\"-O2 -g\"\n[Go/Vet       ]   | CGO_FFLAGS=\"-O2 -g\"\n[Go/Vet       ]   | CGO_LDFLAGS=\"-O2 -g\"\n[Go/Vet       ]   | PKG_CONFIG=\"pkg-config\"\n[Go/Vet       ]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build1210349491=/tmp/go-build -gno-record-gcc-switches\"\n[Go/Vet       ]   | \n[Go/Vet       ]   \u2753  ::endgroup::\n[Go/Vet       ]   \u2705  Success - Main Setup Go\n[Go/Vet       ]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.20.4/x64\n[Go/Vet       ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.20.4/x64/bin\n[Go/Vet       ]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Go/Vet       ] \u2b50 Run Main Checkout code\n[Go/Vet       ]   \u2705  Success - Main Checkout code\n[Go/Vet       ] \u2b50 Run Main go vet\n[Go/Vet       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Go/Root tests]   \ud83d\udcac  ::debug::finished caching tool\n[Go/Root tests]   | Successfully cached go to /opt/hostedtoolcache/go/1.20.4/x64\n[Go/Root tests]   | Added go to the path\n[Go/Root tests]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.20.4/x64/bin/go:\n[Go/Root tests]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Go/Root tests]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Go/Root tests]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Go/Root tests]   \ud83d\udcac  ::debug::add bin true\n[Go/Root tests]   | Successfully setup go version ^1.19\n[Go/Root tests]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[Go/Root tests]   | go version go1.20.4 linux/amd64\n[Go/Root tests]   | \n[Go/Root tests]   \u2753  ::group::go env\n[Go/Root tests]   | GO111MODULE=\"\"\n[Go/Root tests]   | GOARCH=\"amd64\"\n[Go/Root tests]   | GOBIN=\"\"\n[Go/Root tests]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Go/Root tests]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Go/Root tests]   | GOEXE=\"\"\n[Go/Root tests]   | GOEXPERIMENT=\"\"\n[Go/Root tests]   | GOFLAGS=\"\"\n[Go/Root tests]   | GOHOSTARCH=\"amd64\"\n[Go/Root tests]   | GOHOSTOS=\"linux\"\n[Go/Root tests]   | GOINSECURE=\"\"\n[Go/Root tests]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Go/Root tests]   | GONOPROXY=\"\"\n[Go/Root tests]   | GONOSUMDB=\"\"\n[Go/Root tests]   | GOOS=\"linux\"\n[Go/Root tests]   | GOPATH=\"/home/runneradmin/go\"\n[Go/Root tests]   | GOPRIVATE=\"\"\n[Go/Root tests]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Go/Root tests]   | GOROOT=\"/opt/hostedtoolcache/go/1.20.4/x64\"\n[Go/Root tests]   | GOSUMDB=\"sum.golang.org\"\n[Go/Root tests]   | GOTMPDIR=\"\"\n[Go/Root tests]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.20.4/x64/pkg/tool/linux_amd64\"\n[Go/Root tests]   | GOVCS=\"\"\n[Go/Root tests]   | GOVERSION=\"go1.20.4\"\n[Go/Root tests]   | GCCGO=\"gccgo\"\n[Go/Root tests]   | GOAMD64=\"v1\"\n[Go/Root tests]   | AR=\"ar\"\n[Go/Root tests]   | CC=\"gcc\"\n[Go/Root tests]   | CXX=\"g++\"\n[Go/Root tests]   | CGO_ENABLED=\"1\"\n[Go/Root tests]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/GoogleCloudPlatform-golang-samples/go.mod\"\n[Go/Root tests]   | GOWORK=\"\"\n[Go/Root tests]   | CGO_CFLAGS=\"-O2 -g\"\n[Go/Root tests]   | CGO_CPPFLAGS=\"\"\n[Go/Root tests]   | CGO_CXXFLAGS=\"-O2 -g\"\n[Go/Root tests]   | CGO_FFLAGS=\"-O2 -g\"\n[Go/Root tests]   | CGO_LDFLAGS=\"-O2 -g\"\n[Go/Root tests]   | PKG_CONFIG=\"pkg-config\"\n[Go/Root tests]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build988183167=/tmp/go-build -gno-record-gcc-switches\"\n[Go/Root tests]   | \n[Go/Root tests]   \u2753  ::endgroup::\n[Go/Root tests]   \u2705  Success - Main Setup Go\n[Go/Root tests]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.20.4/x64\n[Go/Root tests]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.20.4/x64/bin\n[Go/Root tests]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Go/Root tests] \u2b50 Run Main Check code\n[Go/Root tests]   \u2705  Success - Main Check code\n[Go/Root tests] \u2b50 Run Main go test -v\n[Go/Root tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Go/Lint      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[Go/Vet       ]   | go: downloading github.com/GoogleCloudPlatform/golang-samples v0.0.0-20230522201558-cba0742a460f\n[Go/Root tests]   | go: downloading github.com/bmatcuk/doublestar/v2 v2.0.4\n[Go/Root tests]   | go: downloading github.com/h2non/filetype v1.1.3\n[Go/Vet       ]   | go: downloading cloud.google.com/go/videointelligence v1.10.1\n[Go/Vet       ]   | go: downloading github.com/google/uuid v1.3.0\n[Go/Vet       ]   | go: downloading cloud.google.com/go/storage v1.30.1\n[Go/Vet       ]   | go: downloading google.golang.org/api v0.122.0\n[Go/Vet       ]   | go: downloading github.com/golang/protobuf v1.5.3\n[Go/Vet       ]   | go: downloading cloud.google.com/go v0.110.0\n[Go/Vet       ]   | go: downloading google.golang.org/protobuf v1.30.0\n[Go/Vet       ]   | go: downloading google.golang.org/grpc v1.55.0\n[Go/Vet       ]   | go: downloading google.golang.org/genproto v0.0.0-20230410155749-daa745c078e1\n[Go/Vet       ]   | go: downloading cloud.google.com/go/longrunning v0.4.1\n[Go/Vet       ]   | go: downloading github.com/googleapis/gax-go/v2 v2.8.0\n[Go/Vet       ]   | go: downloading golang.org/x/oauth2 v0.8.0\n[Go/Vet       ]   | go: downloading cloud.google.com/go/compute/metadata v0.2.3\n[Go/Vet       ]   | go: downloading go.opencensus.io v0.24.0\n[Go/Vet       ]   | go: downloading golang.org/x/xerrors v0.0.0-20220907171357-04be3eba64a2\n[Go/Vet       ]   | go: downloading cloud.google.com/go/iam v0.13.0\n[Go/Vet       ]   | go: downloading cloud.google.com/go/compute v1.19.3\n[Go/Vet       ]   | go: downloading github.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da\n[Go/Vet       ]   | go: downloading golang.org/x/net v0.10.0\n[Go/Vet       ]   | go: downloading golang.org/x/sys v0.8.0\n[Go/Vet       ]   | go: downloading golang.org/x/text v0.9.0\n[Go/Vet       ]   | go: downloading github.com/googleapis/enterprise-certificate-proxy v0.2.3\n[Go/Vet       ]   | go: downloading github.com/google/go-cmp v0.5.9\n[Go/Vet       ]   | go: downloading github.com/google/s2a-go v0.1.3\n[Go/Vet       ]   | go: downloading golang.org/x/crypto v0.7.0\n[Go/Vet       ]   | go: downloading google.golang.org/appengine v1.6.7\n[Go/Root tests]   | === RUN   TestBadFiles\n[Go/Root tests]   | --- PASS: TestBadFiles (0.03s)\n[Go/Root tests]   | === RUN   TestRegionTags\n[Go/Root tests]   | --- PASS: TestRegionTags (24.60s)\n[Go/Root tests]   | PASS\n[Go/Root tests]   | ok  \tgithub.com/GoogleCloudPlatform/golang-samples\t24.750s\n[Go/Root tests]   \u2705  Success - Main go test -v\n[Go/Lint      ]   | Setup go stable version spec ^1.19\n[Go/Lint      ]   \ud83d\udcac  ::debug::isExplicit: \n[Go/Lint      ]   \ud83d\udcac  ::debug::explicit? false\n[Go/Lint      ]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Go/Lint      ]   \ud83d\udcac  ::debug::explicit? true\n[Go/Lint      ]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Go/Lint      ]   \ud83d\udcac  ::debug::explicit? true\n[Go/Lint      ]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Go/Lint      ]   \ud83d\udcac  ::debug::explicit? true\n[Go/Lint      ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Go/Lint      ]   \ud83d\udcac  ::debug::match not found\n[Go/Lint      ]   | Attempting to download ^1.19...\n[Go/Lint      ]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Go/Lint      ]   \ud83d\udcac  ::debug::Error: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v2/dist/index.js:5294:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Go/Lint      ]   | Falling back to download directly from Go\n[Go/Vet       ]   | go: downloading golang.org/x/exp v0.0.0-20230522175609-2e198f4a06a1\n[Go/Vet       ]   | go: downloading cloud.google.com/go/spanner v1.46.0\n[Go/Vet       ]   | go: downloading contrib.go.opencensus.io/exporter/stackdriver v0.13.5\n[Go/Lint      ]   \ud83d\udcac  ::debug::check 1.20.4 satisfies ^1.19\n[Go/Lint      ]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Go/Lint      ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Go/Lint      ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Go/Lint      ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Go/Lint      ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Go/Lint      ]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Go/Lint      ]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Go/Lint      ]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Go/Lint      ]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Go/Lint      ]   \ud83d\udcac  ::debug::matched go1.20.4\n[Go/Lint      ]   | Install from dist\n[Go/Lint      ]   | Acquiring go1.20.4 from https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Go/Lint      ]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Go/Lint      ]   \ud83d\udcac  ::debug::Destination /tmp/09391543-1f25-4d84-8d5e-ba25144a22d8\n[Go/Vet       ]   | go: downloading cloud.google.com/go/monitoring v1.14.0\n[Go/Vet       ]   | go: downloading github.com/census-instrumentation/opencensus-proto v0.4.1\n[Go/Vet       ]   | go: downloading cloud.google.com/go/container v1.15.0\n[Go/Vet       ]   | go: downloading golang.org/x/sync v0.2.0\n[Go/Vet       ]   | go: downloading cloud.google.com/go/trace v1.9.0\n[Go/Vet       ]   | go: downloading github.com/aws/aws-sdk-go v1.23.20\n[Go/Vet       ]   | go: downloading github.com/envoyproxy/go-control-plane v0.11.0\n[Go/Vet       ]   | go: downloading github.com/cncf/udpa/go v0.0.0-20220112060539-c52dc94e7fbe\n[Go/Vet       ]   | go: downloading github.com/cncf/xds/go v0.0.0-20230310173818-32f1caf87195\n[Go/Vet       ]   | go: downloading github.com/cespare/xxhash/v2 v2.2.0\n[Go/Vet       ]   | go: downloading github.com/envoyproxy/protoc-gen-validate v0.10.0\n[Go/Root tests] \ud83c\udfc1  Job succeeded\n[Go/Vet       ]   | go: downloading github.com/jmespath/go-jmespath v0.0.0-20180206201540-c2b33e8439af\n[Go/Lint      ]   \ud83d\udcac  ::debug::download complete\n[Go/Lint      ]   | Extracting Go...\n[Go/Lint      ]   \ud83d\udcac  ::debug::Checking tar --version\n[Go/Lint      ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Go/Lint      ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/4dfe4b90-f32a-4069-9eda-ba564a829e03 -f /tmp/09391543-1f25-4d84-8d5e-ba25144a22d8\n[Go/Lint      ]   | Successfully extracted go to /tmp/4dfe4b90-f32a-4069-9eda-ba564a829e03\n[Go/Lint      ]   | Adding to the cache ...\n[Go/Lint      ]   \ud83d\udcac  ::debug::Caching tool go 1.20.4 x64\n[Go/Lint      ]   \ud83d\udcac  ::debug::source dir: /tmp/4dfe4b90-f32a-4069-9eda-ba564a829e03/go\n[Go/Lint      ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.4/x64\n[Go/Vet       ]   | go: downloading github.com/GoogleCloudPlatform/golang-samples v0.0.0-20230524170316-441287c416a6\n[Go/Vet       ]   | go: downloading cloud.google.com/go/firestore v1.10.0\n[Go/Vet       ]   | go: downloading google.golang.org/api v0.123.0\n[Go/Vet       ]   | go: downloading cloud.google.com/go v0.110.2\n[Go/Vet       ]   | go: downloading cloud.google.com/go/longrunning v0.4.2\n[Go/Vet       ]   | go: downloading golang.org/x/time v0.3.0\n[Go/Lint      ]   \u274c  Failure - Main Setup Go\n[Go/Vet       ]   | go: downloading github.com/gofrs/uuid v3.4.0+incompatible\n[Go/Vet       ]   | go: downloading cloud.google.com/go/datastore v1.11.0\n[Go/Vet       ]   | go: downloading github.com/gorilla/mux v1.8.0\n[Go/Vet       ]   | go: downloading cloud.google.com/go/errorreporting v0.3.0\n[Go/Vet       ]   | go: downloading github.com/gorilla/handlers v1.5.1\n[Go/Vet       ]   | go: downloading cloud.google.com/go/compute v1.19.0\n[Go/Vet       ]   | go: downloading github.com/felixge/httpsnoop v1.0.1\n[Go/Vet       ]   | go: downloading github.com/golang-jwt/jwt v3.2.2+incompatible\n[Go/Vet       ]   | go: downloading cloud.google.com/go/compute v1.14.0\n[Go/Vet       ]   | go: downloading github.com/gorilla/sessions v1.2.1\n[Go/Vet       ]   | go: downloading github.com/GoogleCloudPlatform/firestore-gorilla-sessions v0.1.0\n[Go/Vet       ]   | go: downloading github.com/gorilla/securecookie v1.1.1\n[Go/Vet       ]   | go: downloading github.com/go-sql-driver/mysql v1.7.1\n[Go/Vet       ]   | go: downloading cloud.google.com/go/pubsub v1.30.1\n[Go/Vet       ]   | go: downloading cloud.google.com/go/translate v1.7.1\n[Go/Vet       ]   | go: downloading go.opentelemetry.io/otel/sdk v1.15.1\n[Go/Vet       ]   | go: downloading go.opentelemetry.io/contrib/detectors/gcp v1.16.1\n[Go/Vet       ]   | go: downloading github.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/trace v1.13.1\n[Go/Vet       ]   | go: downloading go.opentelemetry.io/otel v1.15.1\n[Go/Vet       ]   | go: downloading github.com/golang/protobuf v1.5.2\n[Go/Vet       ]   | go: downloading cloud.google.com/go/trace v1.8.0\n[Go/Vet       ]   | go: downloading go.uber.org/multierr v1.8.0\n[Go/Vet       ]   | go: downloading google.golang.org/api v0.108.0\n[Go/Vet       ]   | go: downloading github.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping v0.37.1\n[Go/Vet       ]   | go: downloading go.opentelemetry.io/otel/trace v1.15.1\n[Go/Vet       ]   | go: downloading google.golang.org/genproto v0.0.0-20230125152338-dcaf20b6aeaa\n[Go/Vet       ]   | go: downloading golang.org/x/oauth2 v0.0.0-20221014153046-6fdb5e3db783\n[Go/Vet       ]   | go: downloading google.golang.org/grpc v1.51.0\n[Go/Vet       ]   | go: downloading github.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp v1.13.1\n[Go/Vet       ]   | go: downloading go.uber.org/atomic v1.10.0\n[Go/Vet       ]   | go: downloading google.golang.org/protobuf v1.28.1\n[Go/Vet       ]   | go: downloading github.com/googleapis/gax-go/v2 v2.7.0\n[Go/Vet       ]   | go: downloading golang.org/x/net v0.8.0\n[Go/Vet       ]   | go: downloading github.com/go-logr/logr v1.2.4\n[Go/Vet       ]   | go: downloading github.com/go-logr/stdr v1.2.2\n[Go/Vet       ]   | go: downloading golang.org/x/sys v0.7.0\n[Go/Vet       ]   | go: downloading golang.org/x/text v0.8.0\n[Go/Vet       ]   | go: downloading github.com/googleapis/enterprise-certificate-proxy v0.2.1\n[Go/Vet       ]   | go: downloading cloud.google.com/go/secretmanager v1.10.1\n[Go/Vet       ]   | go: downloading cloud.google.com/go/texttospeech v1.6.2\n[Go/Vet       ]   | go: downloading cloud.google.com/go/kms v1.10.2\n[Go/Vet       ]   | go: downloading github.com/lestrrat-go/jwx/v2 v2.0.9\n[Go/Vet       ]   | go: downloading github.com/google/tink/go v1.7.0\n[Go/Vet       ]   | go: downloading github.com/lestrrat-go/option v1.0.1\n[Go/Vet       ]   | go: downloading github.com/lestrrat-go/httprc v1.0.4\n[Go/Vet       ]   | go: downloading github.com/lestrrat-go/iter v1.0.2\n[Go/Vet       ]   | go: downloading github.com/lestrrat-go/blackmagic v1.0.1\n[Go/Vet       ]   | go: downloading github.com/lestrrat-go/httpcc v1.0.1\n[Go/Vet       ]   | go: downloading github.com/linkedin/goavro/v2 v2.12.0\n[Go/Vet       ]   | go: downloading cloud.google.com/go/bigquery v1.51.2\n[Go/Vet       ]   | go: downloading github.com/golang/snappy v0.0.4\n[Go/Vet       ]   | go: downloading github.com/apache/arrow/go/v12 v12.0.0\n[Go/Vet       ]   | go: downloading github.com/google/flatbuffers v2.0.8+incompatible\n[Go/Vet       ]   | go: downloading github.com/goccy/go-json v0.9.11\n[Go/Vet       ]   | go: downloading github.com/zeebo/xxh3 v1.0.2\n[Go/Vet       ]   | go: downloading github.com/pierrec/lz4/v4 v4.1.15\n[Go/Vet       ]   | go: downloading github.com/apache/thrift v0.16.0\n[Go/Vet       ]   | go: downloading github.com/klauspost/compress v1.15.9\n[Go/Vet       ]   | go: downloading github.com/andybalholm/brotli v1.0.4\n[Go/Vet       ]   | go: downloading github.com/klauspost/cpuid/v2 v2.0.9\n[Go/Lint      ] Error response from daemon: Could not find the file /var/run/act/workflow/pathcmd.txt in container 10a6ffc95330b002f345702ff2a113c80a2ef3db1e7e576c15b85207196dd1e1\n[Go/Lint      ] failed to remove container: Error response from daemon: No such container: 10a6ffc95330b002f345702ff2a113c80a2ef3db1e7e576c15b85207196dd1e1\n[Go/Lint      ] \ud83c\udfc1  Job failed\n[Go/Vet       ]   | go: downloading google.golang.org/grpc v1.54.0\n[Go/Vet       ]   | go: downloading golang.org/x/oauth2 v0.7.0\n[Go/Vet       ]   | go: downloading golang.org/x/net v0.9.0\n[Go/Vet       ]   | go: downloading github.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e\n[Go/Vet       ]   | go: downloading golang.org/x/crypto v0.1.0\n[Go/Vet       ]   | go: downloading cloud.google.com/go/logging v1.7.0\n[Go/Vet       ]   | go: downloading github.com/apache/arrow/go/v10 v10.0.1\n[Go/Vet       ]   | go: downloading github.com/googleapis/gax-go/v2 v2.9.0\n[Go/Vet       ]   | go: downloading github.com/gofrs/uuid v4.4.0+incompatible\n[Go/Vet       ]   | go: downloading github.com/gorilla/websocket v1.5.0\n[Go/Vet       ]   | go: downloading google.golang.org/api v0.114.0\n[Go/Vet       ]   | go: downloading github.com/googleapis/gax-go/v2 v2.7.1\n[Go/Vet       ]   | go: downloading google.golang.org/grpc v1.53.0\n[Go/Vet       ]   | go: downloading google.golang.org/genproto v0.0.0-20230320184635-7606e756e683\n[Go/Vet       ]   | go: downloading google.golang.org/protobuf v1.29.1\n[Go/Vet       ]   | go: downloading golang.org/x/sys v0.6.0\n[Go/Vet       ]   | go: downloading golang.org/x/oauth2 v0.6.0\n[Go/Vet       ]   | go: downloading cloud.google.com/go/compute v1.18.0\n[Go/Vet       ]   | go: downloading github.com/golang/protobuf v1.3.1\n[Go/Vet       ]   | go: downloading github.com/gomodule/redigo v1.8.9\n[Go/Vet       ]   | go: downloading golang.org/x/net v0.7.0\n[Go/Vet       ]   | go: downloading golang.org/x/sync v0.1.0\n[Go/Vet       ]   | go: downloading google.golang.org/api v0.118.0\n[Go/Vet       ]   | go: downloading github.com/google/s2a-go v0.1.0\n[Go/Vet       ]   | go: downloading cloud.google.com/go/iam v0.12.0\n[Go/Vet       ]   | go: downloading github.com/gomodule/redigo v2.0.0+incompatible\n[Go/Vet       ]   \u274c  Failure - Main go vet\n[Go/Vet       ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/37ab3babcce74aaaa360af08f2ba953a3cc344a2a72179b40959b1861ff82fb6/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Go/Vet       ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}