{
    "repository": "go-logfmt/logfmt",
    "clone_url": "https://github.com/go-logfmt/logfmt.git",
    "timestamp": "2023-05-30T11:10:39.782214Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Build and Test/test] \ud83d\ude80  Start image=crawlergpt:latest\n[Build and Test/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build and Test/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and Test/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and Test/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/go-logfmt-logfmt] user=0 workdir=\n[Build and Test/test]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v3\n[Build and Test/test]   \u2601  git clone 'https://github.com/shogo82148/actions-goveralls' # ref=v1\n[Build and Test/test] \ud83e\uddea  Matrix: map[go-version:1.16.x os:ubuntu-latest]\n[Build and Test/test] \u2b50 Run Main Install Go\n[Build and Test/test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v3/ dst=/var/run/act/actions/actions-setup-go@v3/\n[Build and Test/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v3/] user=0 workdir=\n[Build and Test/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/setup/index.js] user= workdir=\n[Build and Test/test]   | Setup go version spec 1.16.x\n[Build and Test/test]   \ud83d\udcac  ::debug::isExplicit: \n[Build and Test/test]   \ud83d\udcac  ::debug::explicit? false\n[Build and Test/test]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Build and Test/test]   \ud83d\udcac  ::debug::explicit? true\n[Build and Test/test]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Build and Test/test]   \ud83d\udcac  ::debug::explicit? true\n[Build and Test/test]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Build and Test/test]   \ud83d\udcac  ::debug::explicit? true\n[Build and Test/test]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Build and Test/test]   \ud83d\udcac  ::debug::matched: 1.16.7\n[Build and Test/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.16.7/x64\n[Build and Test/test]   \ud83d\udcac  ::debug::Found tool in cache go 1.16.7 x64\n[Build and Test/test]   | Found in cache @ /opt/hostedtoolcache/go/1.16.7/x64\n[Build and Test/test]   | Added go to the path\n[Build and Test/test]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.16.7/x64/bin/go:\n[Build and Test/test]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Build and Test/test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Build and Test/test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Build and Test/test]   \ud83d\udcac  ::debug::add bin true\n[Build and Test/test]   | Successfully set up Go version 1.16.x\n[Build and Test/test]   \u2753 add-matcher /run/act/actions/actions-setup-go@v3/matchers.json\n[Build and Test/test]   | go version go1.16.7 linux/amd64\n[Build and Test/test]   | \n[Build and Test/test]   \u2753  ::group::go env\n[Build and Test/test]   | GO111MODULE=\"\"\n[Build and Test/test]   | GOARCH=\"amd64\"\n[Build and Test/test]   | GOBIN=\"\"\n[Build and Test/test]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Build and Test/test]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Build and Test/test]   | GOEXE=\"\"\n[Build and Test/test]   | GOFLAGS=\"\"\n[Build and Test/test]   | GOHOSTARCH=\"amd64\"\n[Build and Test/test]   | GOHOSTOS=\"linux\"\n[Build and Test/test]   | GOINSECURE=\"\"\n[Build and Test/test]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Build and Test/test]   | GONOPROXY=\"\"\n[Build and Test/test]   | GONOSUMDB=\"\"\n[Build and Test/test]   | GOOS=\"linux\"\n[Build and Test/test]   | GOPATH=\"/home/runneradmin/go\"\n[Build and Test/test]   | GOPRIVATE=\"\"\n[Build and Test/test]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Build and Test/test]   | GOROOT=\"/opt/hostedtoolcache/go/1.16.7/x64\"\n[Build and Test/test]   | GOSUMDB=\"sum.golang.org\"\n[Build and Test/test]   | GOTMPDIR=\"\"\n[Build and Test/test]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.16.7/x64/pkg/tool/linux_amd64\"\n[Build and Test/test]   | GOVCS=\"\"\n[Build and Test/test]   | GOVERSION=\"go1.16.7\"\n[Build and Test/test]   | GCCGO=\"gccgo\"\n[Build and Test/test]   | AR=\"ar\"\n[Build and Test/test]   | CC=\"gcc\"\n[Build and Test/test]   | CXX=\"g++\"\n[Build and Test/test]   | CGO_ENABLED=\"1\"\n[Build and Test/test]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/go-logfmt-logfmt/go.mod\"\n[Build and Test/test]   | CGO_CFLAGS=\"-g -O2\"\n[Build and Test/test]   | CGO_CPPFLAGS=\"\"\n[Build and Test/test]   | CGO_CXXFLAGS=\"-g -O2\"\n[Build and Test/test]   | CGO_FFLAGS=\"-g -O2\"\n[Build and Test/test]   | CGO_LDFLAGS=\"-g -O2\"\n[Build and Test/test]   | PKG_CONFIG=\"pkg-config\"\n[Build and Test/test]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build3729897803=/tmp/go-build -gno-record-gcc-switches\"\n[Build and Test/test]   | \n[Build and Test/test]   \u2753  ::endgroup::\n[Build and Test/test]   \u2705  Success - Main Install Go\n[Build and Test/test]   \u2699  ::set-output:: go-version=1.16.7\n[Build and Test/test]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.16.7/x64/bin\n[Build and Test/test]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Build and Test/test] \u2b50 Run Main Checkout code\n[Build and Test/test]   \u2705  Success - Main Checkout code\n[Build and Test/test] \u2b50 Run Main Test\n[Build and Test/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Build and Test/test]   | ok  \tgithub.com/go-logfmt/logfmt\t0.021s\n[Build and Test/test]   \u2705  Success - Main Test\n[Build and Test/test] \u2b50 Run Main Test coverage\n[Build and Test/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Build and Test/test]   | ok  \tgithub.com/go-logfmt/logfmt\t0.037s\tcoverage: 84.5% of statements\n[Build and Test/test]   \u2705  Success - Main Test coverage\n[Build and Test/test] \u2b50 Run Main Send coverage\n[Build and Test/test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/shogo82148-actions-goveralls@v1/ dst=/var/run/act/actions/shogo82148-actions-goveralls@v1/\n[Build and Test/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/shogo82148-actions-goveralls@v1/] user=0 workdir=\n[Build and Test/test]   | OCI runtime exec failed: exec failed: unable to start container process: error executing setns process: exit status 1: unknown\r\n[Build and Test/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/shogo82148-actions-goveralls@v1/lib/main.js] user= workdir=\n[Build and Test/test]   \u274c  Failure - Main Send coverage\n[Build and Test/test] Error response from daemon: Could not find the file /var/run/act/workflow/pathcmd.txt in container fb459473abbab7921171a8d04c5dd0279f402f890245f4c9c1515a779353db3e\n[Build and Test/test] failed to remove container: Error response from daemon: No such container: fb459473abbab7921171a8d04c5dd0279f402f890245f4c9c1515a779353db3e\n[Build and Test/test] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'test' failed\n"
}