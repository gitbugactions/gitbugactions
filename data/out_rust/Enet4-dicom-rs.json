{
    "repository": "Enet4/dicom-rs",
    "clone_url": "https://github.com/Enet4/dicom-rs.git",
    "timestamp": "2023-05-30T09:12:07.240224Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[continuous integration/Clippy         ] \ud83d\ude80  Start image=crawlergpt:latest\n[continuous integration/Check (Windows)] \ud83d\ude80  Start image=crawlergpt:latest\n[continuous integration/Test (default) ] \ud83d\ude80  Start image=crawlergpt:latest\n[continuous integration/Check (Windows)]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[continuous integration/Test (default) ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[continuous integration/Clippy         ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[continuous integration/Test (default) ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[continuous integration/Clippy         ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[continuous integration/Check (Windows)]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[continuous integration/Test (default) ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[continuous integration/Check (Windows)]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[continuous integration/Clippy         ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[continuous integration/Clippy         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/Enet4-dicom-rs] user=0 workdir=\n[continuous integration/Check (Windows)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/Enet4-dicom-rs] user=0 workdir=\n[continuous integration/Test (default) ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/Enet4-dicom-rs] user=0 workdir=\n[continuous integration/Check (Windows)]   \u2601  git clone 'https://github.com/actions-rust-lang/setup-rust-toolchain' # ref=v1\n[continuous integration/Test (default) ]   \u2601  git clone 'https://github.com/actions-rust-lang/setup-rust-toolchain' # ref=v1\n[continuous integration/Clippy         ]   \u2601  git clone 'https://github.com/actions-rust-lang/setup-rust-toolchain' # ref=v1\n[continuous integration/Check (Windows)] \u2b50 Run Pre actions-rust-lang/setup-rust-toolchain@v1\n[continuous integration/Test (default) ] \u2b50 Run Pre actions-rust-lang/setup-rust-toolchain@v1\n[continuous integration/Clippy         ] \u2b50 Run Pre actions-rust-lang/setup-rust-toolchain@v1\n[continuous integration/Check (Windows)]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[continuous integration/Clippy         ]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[continuous integration/Test (default) ]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[continuous integration/Check (Windows)]   \u2705  Success - Pre actions-rust-lang/setup-rust-toolchain@v1\n[continuous integration/Clippy         ]   \u2705  Success - Pre actions-rust-lang/setup-rust-toolchain@v1\n[continuous integration/Test (default) ]   \u2705  Success - Pre actions-rust-lang/setup-rust-toolchain@v1\n[continuous integration/Check (Windows)] \u2b50 Run Main actions/checkout@v3\n[continuous integration/Test (default) ] \ud83e\uddea  Matrix: map[rust:stable]\n[continuous integration/Check (Windows)]   \u2705  Success - Main actions/checkout@v3\n[continuous integration/Test (default) ] \u2b50 Run Main actions/checkout@v3\n[continuous integration/Clippy         ] \u2b50 Run Main actions/checkout@v3\n[continuous integration/Test (default) ]   \u2705  Success - Main actions/checkout@v3\n[continuous integration/Clippy         ]   \u2705  Success - Main actions/checkout@v3\n[continuous integration/Check (Windows)] \u2b50 Run Main actions-rust-lang/setup-rust-toolchain@v1\n[continuous integration/Check (Windows)]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rust-lang-setup-rust-toolchain@v1/ dst=/var/run/act/actions/actions-rust-lang-setup-rust-toolchain@v1/\n[continuous integration/Test (default) ] \u2b50 Run Main actions-rust-lang/setup-rust-toolchain@v1\n[continuous integration/Clippy         ] \u2b50 Run Main actions-rust-lang/setup-rust-toolchain@v1\n[continuous integration/Check (Windows)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rust-lang-setup-rust-toolchain@v1/] user=0 workdir=\n[continuous integration/Clippy         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rust-lang-setup-rust-toolchain@v1/ dst=/var/run/act/actions/actions-rust-lang-setup-rust-toolchain@v1/\n[continuous integration/Test (default) ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rust-lang-setup-rust-toolchain@v1/ dst=/var/run/act/actions/actions-rust-lang-setup-rust-toolchain@v1/\n[continuous integration/Clippy         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rust-lang-setup-rust-toolchain@v1/] user=0 workdir=\n[continuous integration/Test (default) ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rust-lang-setup-rust-toolchain@v1/] user=0 workdir=\n[continuous integration/Clippy         ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[continuous integration/Check (Windows)] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[continuous integration/Test (default) ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[continuous integration/Check (Windows)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[continuous integration/Clippy         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[continuous integration/Check (Windows)]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[continuous integration/Clippy         ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[continuous integration/Clippy         ]   \u2699  ::set-output:: components= --component clippy\n[continuous integration/Clippy         ]   \u2699  ::set-output:: downgrade=\n[continuous integration/Clippy         ]   \u2699  ::set-output:: targets=\n[continuous integration/Check (Windows)]   \u2699  ::set-output:: targets=\n[continuous integration/Check (Windows)]   \u2699  ::set-output:: components=\n[continuous integration/Check (Windows)]   \u2699  ::set-output:: downgrade=\n[continuous integration/Test (default) ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[continuous integration/Check (Windows)] \u2b50 Run Main Setting Environment Variables\n[continuous integration/Clippy         ] \u2b50 Run Main Setting Environment Variables\n[continuous integration/Check (Windows)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[continuous integration/Clippy         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[continuous integration/Check (Windows)]   \u2705  Success - Main Setting Environment Variables\n[continuous integration/Clippy         ]   \u2705  Success - Main Setting Environment Variables\n[continuous integration/Test (default) ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[continuous integration/Check (Windows)]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[continuous integration/Check (Windows)]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[continuous integration/Check (Windows)]   \u2699  ::set-env:: CARGO_PROFILE_DEV_DEBUG=0\n[continuous integration/Check (Windows)]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[continuous integration/Check (Windows)]   \u2699  ::set-env:: RUST_BACKTRACE=short\n[continuous integration/Check (Windows)]   \u2699  ::set-env:: RUSTFLAGS=-D warnings\n[continuous integration/Check (Windows)]   \u2699  ::set-env:: CARGO_UNSTABLE_SPARSE_REGISTRY=true\n[continuous integration/Clippy         ]   \u2699  ::set-env:: CARGO_PROFILE_DEV_DEBUG=0\n[continuous integration/Clippy         ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[continuous integration/Clippy         ]   \u2699  ::set-env:: RUST_BACKTRACE=short\n[continuous integration/Clippy         ]   \u2699  ::set-env:: RUSTFLAGS=-D warnings\n[continuous integration/Clippy         ]   \u2699  ::set-env:: CARGO_UNSTABLE_SPARSE_REGISTRY=true\n[continuous integration/Clippy         ]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[continuous integration/Clippy         ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[continuous integration/Test (default) ]   \u2699  ::set-output:: targets=\n[continuous integration/Test (default) ]   \u2699  ::set-output:: components=\n[continuous integration/Test (default) ]   \u2699  ::set-output:: downgrade=\n[continuous integration/Check (Windows)] \u2b50 Run Main Install Rust Problem Matcher\n[continuous integration/Clippy         ] \u2b50 Run Main Install Rust Problem Matcher\n[continuous integration/Test (default) ] \u2b50 Run Main Setting Environment Variables\n[continuous integration/Check (Windows)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[continuous integration/Test (default) ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[continuous integration/Clippy         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[continuous integration/Check (Windows)]   \u2753 add-matcher /var/run/act/actions/actions-rust-lang-setup-rust-toolchain@v1/rust.json\n[continuous integration/Check (Windows)]   \u2705  Success - Main Install Rust Problem Matcher\n[continuous integration/Clippy         ]   \u2753 add-matcher /var/run/act/actions/actions-rust-lang-setup-rust-toolchain@v1/rust.json\n[continuous integration/Clippy         ]   \u2705  Success - Main Install Rust Problem Matcher\n[continuous integration/Test (default) ]   \u2705  Success - Main Setting Environment Variables\n[continuous integration/Test (default) ]   \u2699  ::set-env:: CARGO_PROFILE_DEV_DEBUG=0\n[continuous integration/Test (default) ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[continuous integration/Test (default) ]   \u2699  ::set-env:: RUST_BACKTRACE=short\n[continuous integration/Test (default) ]   \u2699  ::set-env:: RUSTFLAGS=-D warnings\n[continuous integration/Test (default) ]   \u2699  ::set-env:: CARGO_UNSTABLE_SPARSE_REGISTRY=true\n[continuous integration/Test (default) ]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[continuous integration/Test (default) ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[continuous integration/Check (Windows)] \u2b50 Run Main Install rustup, if needed\n[continuous integration/Test (default) ] \u2b50 Run Main Install Rust Problem Matcher\n[continuous integration/Clippy         ] \u2b50 Run Main Install rustup, if needed\n[continuous integration/Check (Windows)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[continuous integration/Test (default) ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[continuous integration/Clippy         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[continuous integration/Test (default) ]   \u2753 add-matcher /var/run/act/actions/actions-rust-lang-setup-rust-toolchain@v1/rust.json\n[continuous integration/Test (default) ]   \u2705  Success - Main Install Rust Problem Matcher\n[continuous integration/Check (Windows)]   | info: downloading installer\n[continuous integration/Clippy         ]   | info: downloading installer\n[continuous integration/Check (Windows)]   | info: profile set to 'default'\n[continuous integration/Check (Windows)]   | info: default host triple is x86_64-unknown-linux-gnu\n[continuous integration/Check (Windows)]   | info: skipping toolchain installation\n[continuous integration/Check (Windows)]   | \n[continuous integration/Check (Windows)]   | \n[continuous integration/Check (Windows)]   | Rust is installed now. Great!\n[continuous integration/Check (Windows)]   | \n[continuous integration/Check (Windows)]   | To get started you may need to restart your current shell.\n[continuous integration/Check (Windows)]   | This would reload your PATH environment variable to include\n[continuous integration/Check (Windows)]   | Cargo's bin directory ($HOME/.cargo/bin).\n[continuous integration/Check (Windows)]   | \n[continuous integration/Check (Windows)]   | To configure your current shell, run:\n[continuous integration/Check (Windows)]   | source \"$HOME/.cargo/env\"\n[continuous integration/Check (Windows)]   \u2705  Success - Main Install rustup, if needed\n[continuous integration/Clippy         ]   | \n[continuous integration/Clippy         ]   | \n[continuous integration/Clippy         ]   | Rust is installed now. Great!\n[continuous integration/Clippy         ]   | \n[continuous integration/Clippy         ]   | To get started you may need to restart your current shell.\n[continuous integration/Clippy         ]   | This would reload your PATH environment variable to include\n[continuous integration/Clippy         ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[continuous integration/Clippy         ]   | \n[continuous integration/Clippy         ]   | To configure your current shell, run:\n[continuous integration/Clippy         ]   | source \"$HOME/.cargo/env\"\n[continuous integration/Clippy         ]   | info: profile set to 'default'\n[continuous integration/Clippy         ]   | info: default host triple is x86_64-unknown-linux-gnu\n[continuous integration/Clippy         ]   | info: skipping toolchain installation\n[continuous integration/Clippy         ]   \u2705  Success - Main Install rustup, if needed\n[continuous integration/Clippy         ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[continuous integration/Check (Windows)]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[continuous integration/Test (default) ] \u2b50 Run Main Install rustup, if needed\n[continuous integration/Check (Windows)] \u2b50 Run Main rustup toolchain install stable\n[continuous integration/Clippy         ] \u2b50 Run Main rustup toolchain install stable\n[continuous integration/Test (default) ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[continuous integration/Check (Windows)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-5.sh] user= workdir=\n[continuous integration/Clippy         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-5.sh] user= workdir=\n[continuous integration/Check (Windows)]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[continuous integration/Clippy         ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[continuous integration/Test (default) ]   | info: downloading installer\n[continuous integration/Clippy         ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[continuous integration/Clippy         ]   | info: downloading component 'cargo'\n[continuous integration/Check (Windows)]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[continuous integration/Check (Windows)]   | info: downloading component 'cargo'\n[continuous integration/Clippy         ]   | info: downloading component 'clippy'\n[continuous integration/Check (Windows)]   | info: downloading component 'rust-std'\n[continuous integration/Clippy         ]   | info: downloading component 'rust-std'\n[continuous integration/Test (default) ]   | info: profile set to 'default'\n[continuous integration/Test (default) ]   | info: default host triple is x86_64-unknown-linux-gnu\n[continuous integration/Test (default) ]   | info: skipping toolchain installation\n[continuous integration/Test (default) ]   | \n[continuous integration/Test (default) ]   | \n[continuous integration/Test (default) ]   | Rust is installed now. Great!\n[continuous integration/Test (default) ]   | \n[continuous integration/Test (default) ]   | To get started you may need to restart your current shell.\n[continuous integration/Test (default) ]   | This would reload your PATH environment variable to include\n[continuous integration/Test (default) ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[continuous integration/Test (default) ]   | \n[continuous integration/Test (default) ]   | To configure your current shell, run:\n[continuous integration/Test (default) ]   | source \"$HOME/.cargo/env\"\n[continuous integration/Test (default) ]   \u2705  Success - Main Install rustup, if needed\n[continuous integration/Test (default) ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[continuous integration/Test (default) ] \u2b50 Run Main rustup toolchain install stable\n[continuous integration/Check (Windows)]   | info: downloading component 'rustc'\n[continuous integration/Test (default) ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-5.sh] user= workdir=\n[continuous integration/Clippy         ]   | info: downloading component 'rustc'\n[continuous integration/Clippy         ]   | info: installing component 'cargo'\n[continuous integration/Check (Windows)]   | info: installing component 'cargo'\n[continuous integration/Clippy         ]   | info: installing component 'clippy'\n[continuous integration/Check (Windows)]   | info: installing component 'rust-std'\n[continuous integration/Clippy         ]   | info: installing component 'rust-std'\n[continuous integration/Clippy         ]   | info: installing component 'rustc'\n[continuous integration/Check (Windows)]   | info: installing component 'rustc'\n[continuous integration/Clippy         ]   | \n[continuous integration/Clippy         ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[continuous integration/Clippy         ]   | \n[continuous integration/Clippy         ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[continuous integration/Clippy         ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[continuous integration/Clippy         ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[continuous integration/Clippy         ]   | \n[continuous integration/Clippy         ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[continuous integration/Clippy         ]   | \n[continuous integration/Clippy         ]   \u2705  Success - Main rustup toolchain install stable\n[continuous integration/Check (Windows)]   | \n[continuous integration/Check (Windows)]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[continuous integration/Check (Windows)]   | \n[continuous integration/Check (Windows)]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[continuous integration/Check (Windows)]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[continuous integration/Check (Windows)]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[continuous integration/Check (Windows)]   | \n[continuous integration/Check (Windows)]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[continuous integration/Check (Windows)]   | \n[continuous integration/Check (Windows)]   \u2705  Success - Main rustup toolchain install stable\n[continuous integration/Clippy         ] \u2b50 Run Main Print installed versions\n[continuous integration/Clippy         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-versions.sh] user= workdir=\n[continuous integration/Check (Windows)] \u2b50 Run Main Print installed versions\n[continuous integration/Check (Windows)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-versions.sh] user= workdir=\n[continuous integration/Test (default) ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[continuous integration/Test (default) ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[continuous integration/Test (default) ]   | info: downloading component 'cargo'\n[continuous integration/Test (default) ]   | info: downloading component 'rust-std'\n[continuous integration/Test (default) ]   | info: downloading component 'rustc'\n[continuous integration/Test (default) ]   | info: installing component 'cargo'\n[continuous integration/Test (default) ]   | info: installing component 'rust-std'\n[continuous integration/Test (default) ]   | info: installing component 'rustc'\n[continuous integration/Check (Windows)]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[continuous integration/Check (Windows)]   | binary: rustc\n[continuous integration/Check (Windows)]   | commit-hash: 84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc\n[continuous integration/Check (Windows)]   | commit-date: 2023-04-16\n[continuous integration/Check (Windows)]   | host: x86_64-unknown-linux-gnu\n[continuous integration/Check (Windows)]   | release: 1.69.0\n[continuous integration/Check (Windows)]   | LLVM version: 15.0.7\n[continuous integration/Clippy         ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[continuous integration/Clippy         ]   | binary: rustc\n[continuous integration/Clippy         ]   | commit-hash: 84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc\n[continuous integration/Clippy         ]   | commit-date: 2023-04-16\n[continuous integration/Clippy         ]   | host: x86_64-unknown-linux-gnu\n[continuous integration/Clippy         ]   | release: 1.69.0\n[continuous integration/Clippy         ]   | LLVM version: 15.0.7\n[continuous integration/Test (default) ]   | \n[continuous integration/Check (Windows)]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[continuous integration/Check (Windows)]   | release: 1.69.0\n[continuous integration/Check (Windows)]   | commit-hash: 6e9a83356b70586d4b77613a6b33f9ea067b9cdf\n[continuous integration/Check (Windows)]   | commit-date: 2023-04-12\n[continuous integration/Check (Windows)]   | host: x86_64-unknown-linux-gnu\n[continuous integration/Check (Windows)]   | libgit2: 1.5.0 (sys:0.16.0 vendored)\n[continuous integration/Check (Windows)]   | libcurl: 7.86.0-DEV (sys:0.4.59+curl-7.86.0 vendored ssl:OpenSSL/1.1.1q)\n[continuous integration/Check (Windows)]   | os: Ubuntu 20.04 (focal) [64-bit]\n[continuous integration/Clippy         ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[continuous integration/Clippy         ]   | release: 1.69.0\n[continuous integration/Clippy         ]   | commit-hash: 6e9a83356b70586d4b77613a6b33f9ea067b9cdf\n[continuous integration/Clippy         ]   | commit-date: 2023-04-12\n[continuous integration/Clippy         ]   | host: x86_64-unknown-linux-gnu\n[continuous integration/Clippy         ]   | libgit2: 1.5.0 (sys:0.16.0 vendored)\n[continuous integration/Clippy         ]   | libcurl: 7.86.0-DEV (sys:0.4.59+curl-7.86.0 vendored ssl:OpenSSL/1.1.1q)\n[continuous integration/Clippy         ]   | os: Ubuntu 20.04 (focal) [64-bit]\n[continuous integration/Check (Windows)]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[continuous integration/Clippy         ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[continuous integration/Test (default) ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[continuous integration/Test (default) ]   | \n[continuous integration/Test (default) ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[continuous integration/Check (Windows)]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[continuous integration/Clippy         ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[continuous integration/Test (default) ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[continuous integration/Test (default) ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[continuous integration/Test (default) ]   | \n[continuous integration/Check (Windows)]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[continuous integration/Check (Windows)]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[continuous integration/Clippy         ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[continuous integration/Clippy         ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[continuous integration/Test (default) ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[continuous integration/Test (default) ]   | \n[continuous integration/Test (default) ]   \u2705  Success - Main rustup toolchain install stable\n[continuous integration/Check (Windows)]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[continuous integration/Clippy         ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[continuous integration/Clippy         ]   \u2705  Success - Main Print installed versions\n[continuous integration/Check (Windows)]   \u2705  Success - Main Print installed versions\n[continuous integration/Check (Windows)]   \u2699  ::set-output:: rustc-version=rustc 1.69.0 (84c898d65 2023-04-16)\n[continuous integration/Check (Windows)]   \u2699  ::set-output:: cargo-version=cargo 1.69.0 (6e9a83356 2023-04-12)\n[continuous integration/Check (Windows)]   \u2699  ::set-output:: rustup-version=rustup 1.26.0 (5af9b9484 2023-04-05)\n[continuous integration/Check (Windows)]   \u2699  ::set-output:: cachekey=2023041684c8\n[continuous integration/Clippy         ]   \u2699  ::set-output:: rustc-version=rustc 1.69.0 (84c898d65 2023-04-16)\n[continuous integration/Clippy         ]   \u2699  ::set-output:: cargo-version=cargo 1.69.0 (6e9a83356 2023-04-12)\n[continuous integration/Clippy         ]   \u2699  ::set-output:: rustup-version=rustup 1.26.0 (5af9b9484 2023-04-05)\n[continuous integration/Clippy         ]   \u2699  ::set-output:: cachekey=2023041684c8\n[continuous integration/Test (default) ] \u2b50 Run Main Print installed versions\n[continuous integration/Clippy         ] \u2b50 Run Main Downgrade registry access protocol when needed\n[continuous integration/Check (Windows)] \u2b50 Run Main Downgrade registry access protocol when needed\n[continuous integration/Check (Windows)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[continuous integration/Test (default) ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-versions.sh] user= workdir=\n[continuous integration/Clippy         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[continuous integration/Check (Windows)]   \u2705  Success - Main Downgrade registry access protocol when needed\n[continuous integration/Test (default) ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[continuous integration/Test (default) ]   | binary: rustc\n[continuous integration/Test (default) ]   | commit-hash: 84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc\n[continuous integration/Test (default) ]   | commit-date: 2023-04-16\n[continuous integration/Test (default) ]   | host: x86_64-unknown-linux-gnu\n[continuous integration/Test (default) ]   | release: 1.69.0\n[continuous integration/Test (default) ]   | LLVM version: 15.0.7\n[continuous integration/Clippy         ]   \u2705  Success - Main Downgrade registry access protocol when needed\n[continuous integration/Test (default) ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[continuous integration/Test (default) ]   | release: 1.69.0\n[continuous integration/Test (default) ]   | commit-hash: 6e9a83356b70586d4b77613a6b33f9ea067b9cdf\n[continuous integration/Test (default) ]   | commit-date: 2023-04-12\n[continuous integration/Test (default) ]   | host: x86_64-unknown-linux-gnu\n[continuous integration/Test (default) ]   | libgit2: 1.5.0 (sys:0.16.0 vendored)\n[continuous integration/Test (default) ]   | libcurl: 7.86.0-DEV (sys:0.4.59+curl-7.86.0 vendored ssl:OpenSSL/1.1.1q)\n[continuous integration/Test (default) ]   | os: Ubuntu 20.04 (focal) [64-bit]\n[continuous integration/Test (default) ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[continuous integration/Test (default) ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[continuous integration/Test (default) ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[continuous integration/Test (default) ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[continuous integration/Test (default) ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[continuous integration/Test (default) ]   \u2705  Success - Main Print installed versions\n[continuous integration/Test (default) ]   \u2699  ::set-output:: cargo-version=cargo 1.69.0 (6e9a83356 2023-04-12)\n[continuous integration/Test (default) ]   \u2699  ::set-output:: rustup-version=rustup 1.26.0 (5af9b9484 2023-04-05)\n[continuous integration/Test (default) ]   \u2699  ::set-output:: cachekey=2023041684c8\n[continuous integration/Test (default) ]   \u2699  ::set-output:: rustc-version=rustc 1.69.0 (84c898d65 2023-04-16)\n[continuous integration/Check (Windows)] \u2b50 Run Main Setup Rust Caching\n[continuous integration/Clippy         ] \u2b50 Run Main Setup Rust Caching\n[continuous integration/Test (default) ] \u2b50 Run Main Downgrade registry access protocol when needed\n[continuous integration/Clippy         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/Swatinem-rust-cache@v2/ dst=/var/run/act/actions/Swatinem-rust-cache@v2/\n[continuous integration/Check (Windows)]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/Swatinem-rust-cache@v2/ dst=/var/run/act/actions/Swatinem-rust-cache@v2/\n[continuous integration/Check (Windows)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/Swatinem-rust-cache@v2/] user=0 workdir=\n[continuous integration/Clippy         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/Swatinem-rust-cache@v2/] user=0 workdir=\n[continuous integration/Test (default) ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[continuous integration/Test (default) ]   \u2705  Success - Main Downgrade registry access protocol when needed\n[continuous integration/Clippy         ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/Swatinem-rust-cache@v2/dist/restore/index.js] user= workdir=\n[continuous integration/Check (Windows)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/Swatinem-rust-cache@v2/dist/restore/index.js] user= workdir=\n[continuous integration/Test (default) ] \u2b50 Run Main Setup Rust Caching\n[continuous integration/Test (default) ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/Swatinem-rust-cache@v2/ dst=/var/run/act/actions/Swatinem-rust-cache@v2/\n[continuous integration/Test (default) ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/Swatinem-rust-cache@v2/] user=0 workdir=\n[continuous integration/Clippy         ]   \u274c  Failure - Main Setup Rust Caching\n[continuous integration/Check (Windows)]   \u274c  Failure - Main Setup Rust Caching\n[continuous integration/Test (default) ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/images/crawlergpt:latest/json\": context canceled\n[continuous integration/Clippy         ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/f5fd0e773d8fcd82382d40cca1857e164dccdd00cb4a9998af9a6e6f3c5527f7/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n",
    "actions_stderr": "panic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x48 pc=0xa13542]\n\ngoroutine 305 [running]:\ngithub.com/nektos/act/pkg/container.(*containerReference).extractFromImageEnv.func1({0xd3dd88, 0xc000523140})\n\t/home/runner/work/act/act/pkg/container/docker_run.go:468 +0x1e2\ngithub.com/nektos/act/pkg/common.Executor.IfNot.func1({0xd3dd88, 0xc000523140})\n\t/home/runner/work/act/act/pkg/common/executor.go:159 +0x56\ngithub.com/nektos/act/pkg/runner.(*RunContext).ApplyExtraPath(0xc000cb6200, {0xd3dd88, 0xc000523140}, 0xc0005c8128)\n\t/home/runner/work/act/act/pkg/runner/run_context.go:305 +0x12b\ngithub.com/nektos/act/pkg/runner.runActionImpl.func1({0xd3dd88, 0xc000523140})\n\t/home/runner/work/act/act/pkg/runner/action.go:159 +0x71d\ngithub.com/nektos/act/pkg/runner.(*stepActionRemote).main.func1({0xd3dd88, 0xc000523140})\n\t/home/runner/work/act/act/pkg/runner/step_action_remote.go:127 +0x3cf\ngithub.com/nektos/act/pkg/runner.runStepExecutor.func1({0xd3dd88, 0xc000523140})\n\t/home/runner/work/act/act/pkg/runner/step.go:137 +0xd39\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xd3dd88, 0xc000523140})\n\t/home/runner/work/act/act/pkg/common/executor.go:141 +0x15b\ngithub.com/nektos/act/pkg/runner.(*RunContext).newCompositeCommandExecutor.func1({0xd3dd88?, 0xc000522ea0?})\n\t/home/runner/work/act/act/pkg/runner/action_composite.go:212 +0x26f\ngithub.com/nektos/act/pkg/runner.(*RunContext).compositeExecutor.func1({0xd3dd88?, 0xc0007193e0?})\n\t/home/runner/work/act/act/pkg/runner/action_composite.go:157 +0xb2\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xd3dd88, 0xc0007193e0})\n\t/home/runner/work/act/act/pkg/common/executor.go:141 +0x15b\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xd3dd88, 0xc0007193e0})\n\t/home/runner/work/act/act/pkg/common/executor.go:129 +0x34\ngithub.com/nektos/act/pkg/runner.(*RunContext).compositeExecutor.func3({0xd3dd88, 0xc000719380})\n\t/home/runner/work/act/act/pkg/runner/action_composite.go:185 +0x70\ngithub.com/nektos/act/pkg/runner.execAsComposite.func1({0xd3dd88, 0xc0003e0810})\n\t/home/runner/work/act/act/pkg/runner/action_composite.go:95 +0xef\ngithub.com/nektos/act/pkg/runner.runActionImpl.func1({0xd3dd88, 0xc0003e0810})\n\t/home/runner/work/act/act/pkg/runner/action.go:173 +0x85f\ngithub.com/nektos/act/pkg/runner.(*stepActionRemote).main.func1({0xd3dd88, 0xc0003e0810})\n\t/home/runner/work/act/act/pkg/runner/step_action_remote.go:127 +0x3cf\ngithub.com/nektos/act/pkg/runner.runStepExecutor.func1({0xd3dd88, 0xc0003e0810})\n\t/home/runner/work/act/act/pkg/runner/step.go:137 +0xd39\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xd3dd88, 0xc0003e0810})\n\t/home/runner/work/act/act/pkg/common/executor.go:141 +0x15b\ngithub.com/nektos/act/pkg/runner.newJobExecutor.func4({0xd3dd88, 0xc0003e0810})\n\t/home/runner/work/act/act/pkg/runner/job_executor.go:77 +0x5a\ngithub.com/nektos/act/pkg/runner.useStepLogger.func1({0xd3dd88, 0xc000718d80})\n\t/home/runner/work/act/act/pkg/runner/job_executor.go:191 +0x39e\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xd3dd88, 0xc000718d80})\n\t/home/runner/work/act/act/pkg/common/executor.go:141 +0x15b\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xd3dd88, 0xc000718d80})\n\t/home/runner/work/act/act/pkg/common/executor.go:129 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xd3dd88, 0xc000718d80})\n\t/home/runner/work/act/act/pkg/common/executor.go:129 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xd3dd88, 0xc000718d80})\n\t/home/runner/work/act/act/pkg/common/executor.go:129 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Finally.func1({0xd3dd88, 0xc000718d80})\n\t/home/runner/work/act/act/pkg/common/executor.go:175 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Finally.func1({0xd3dd88, 0xc000718d80})\n\t/home/runner/work/act/act/pkg/common/executor.go:175 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Finally.func1({0xd3dd88, 0xc000718d80})\n\t/home/runner/work/act/act/pkg/common/executor.go:175 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xd3dd88, 0xc000718d80})\n\t/home/runner/work/act/act/pkg/common/executor.go:141 +0x15b\ngithub.com/nektos/act/pkg/runner.(*RunContext).Executor.func1({0xd3dd88, 0xc000718d80})\n\t/home/runner/work/act/act/pkg/runner/run_context.go:442 +0x58\ngithub.com/nektos/act/pkg/runner.(*runnerImpl).NewPlanExecutor.func1.1({0xd3dd88, 0xc000719470})\n\t/home/runner/work/act/act/pkg/runner/runner.go:145 +0x193\ngithub.com/nektos/act/pkg/common.NewParallelExecutor.func1.1(0x0?, 0x0?)\n\t/home/runner/work/act/act/pkg/common/executor.go:100 +0x5c\ncreated by github.com/nektos/act/pkg/common.NewParallelExecutor.func1\n\t/home/runner/work/act/act/pkg/common/executor.go:98 +0x89\n"
}