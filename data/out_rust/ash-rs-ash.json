{
    "repository": "ash-rs/ash",
    "clone_url": "https://github.com/ash-rs/ash.git",
    "timestamp": "2023-05-30T09:08:54.426939Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/Check ash-window MSRV (1.64.0)] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Generated                     ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Rustfmt                       ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Build-test docs               ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Clippy                        ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Check ash MSRV (1.60.0)       ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Test Suite                    ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Check                         ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Check ash-window MSRV (1.64.0)]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Rustfmt                       ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Test Suite                    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Clippy                        ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Check ash MSRV (1.60.0)       ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Check                         ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Build-test docs               ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Generated                     ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Check ash-window MSRV (1.64.0)]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Clippy                        ] failed to remove container: Error response from daemon: removal of container 82f38a396a78e92c6a86b8730004f051e94791a9f70a782eccd847a08517c267 is already in progress\n[CI/Generated                     ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Build-test docs               ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check                         ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test Suite                    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check ash MSRV (1.60.0)       ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Build-test docs               ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check ash MSRV (1.60.0)       ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check ash-window MSRV (1.64.0)]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test Suite                    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Generated                     ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check                         ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rustfmt                       ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rustfmt                       ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test Suite                    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:0 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/ash-rs-ash] user=0 workdir=\n[CI/Build-test docs               ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/ash-rs-ash] user=0 workdir=\n[CI/Generated                     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/ash-rs-ash] user=0 workdir=\n[CI/Check ash MSRV (1.60.0)       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/ash-rs-ash] user=0 workdir=\n[CI/Check ash-window MSRV (1.64.0)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/ash-rs-ash] user=0 workdir=\n[CI/Rustfmt                       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/ash-rs-ash] user=0 workdir=\n[CI/Check ash MSRV (1.60.0)       ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=1.60.0\n[CI/Check ash-window MSRV (1.64.0)]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=1.64.0\n[CI/Rustfmt                       ] \u2b50 Run Main actions/checkout@v1\n[CI/Generated                     ] \u2b50 Run Main actions/checkout@v1\n[CI/Build-test docs               ] \u2b50 Run Main actions/checkout@v2\n[CI/Check ash MSRV (1.60.0)       ] \u2b50 Run Pre dtolnay/rust-toolchain@1.60.0\n[CI/Check ash-window MSRV (1.64.0)] \u2b50 Run Pre dtolnay/rust-toolchain@1.64.0\n[CI/Generated                     ]   \u2705  Success - Main actions/checkout@v1\n[CI/Build-test docs               ]   \u2705  Success - Main actions/checkout@v2\n[CI/Check ash MSRV (1.60.0)       ]   \u2705  Success - Pre dtolnay/rust-toolchain@1.60.0\n[CI/Check ash-window MSRV (1.64.0)]   \u2705  Success - Pre dtolnay/rust-toolchain@1.64.0\n[CI/Check ash-window MSRV (1.64.0)] \u2b50 Run Main actions/checkout@v1\n[CI/Check ash MSRV (1.60.0)       ] \u2b50 Run Main actions/checkout@v1\n[CI/Check ash-window MSRV (1.64.0)]   \u2705  Success - Main actions/checkout@v1\n[CI/Generated                     ] \u2b50 Run Main Run generator\n[CI/Build-test docs               ] \u2b50 Run Main Document all crates\n[CI/Check ash MSRV (1.60.0)       ]   \u2705  Success - Main actions/checkout@v1\n[CI/Build-test docs               ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[CI/Generated                     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[CI/Check ash-window MSRV (1.64.0)] \u2b50 Run Main dtolnay/rust-toolchain@1.64.0\n[CI/Check ash MSRV (1.60.0)       ] \u2b50 Run Main dtolnay/rust-toolchain@1.60.0\n[CI/Check ash-window MSRV (1.64.0)]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@1.64.0/ dst=/var/run/act/actions/dtolnay-rust-toolchain@1.64.0/\n[CI/Check ash MSRV (1.60.0)       ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@1.60.0/ dst=/var/run/act/actions/dtolnay-rust-toolchain@1.60.0/\n[CI/Check ash-window MSRV (1.64.0)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@1.64.0/] user=0 workdir=\n[CI/Check ash MSRV (1.60.0)       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@1.60.0/] user=0 workdir=\n[CI/Build-test docs               ]   | /var/run/act/workflow/1: line 2: cargo: command not found\n[CI/Build-test docs               ]   \u274c  Failure - Main Document all crates\n[CI/Rustfmt                       ]   \u2705  Success - Main actions/checkout@v1\n[CI/Rustfmt                       ] Error response from daemon: No such container: eb02068342e8ab37e9585e272b410c62a53aebdcfa63f6c8eb8701c33af2a378\n[CI/Generated                     ]   | /var/run/act/workflow/1: line 2: cargo: command not found\n[CI/Generated                     ]   \u274c  Failure - Main Run generator\n[CI/Rustfmt                       ] \u2b50 Run Main cargo fmt --all -- --check\n[CI/Check ash-window MSRV (1.64.0)] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Check ash MSRV (1.60.0)       ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Rustfmt                       ]   \u274c  Failure - Main cargo fmt --all -- --check\n[CI/Rustfmt                       ] Error response from daemon: No such container: eb02068342e8ab37e9585e272b410c62a53aebdcfa63f6c8eb8701c33af2a378\n[CI/Rustfmt                       ] failed to remove container: Error response from daemon: No such container: eb02068342e8ab37e9585e272b410c62a53aebdcfa63f6c8eb8701c33af2a378\n[CI/Rustfmt                       ] \ud83c\udfc1  Job failed\n[CI/Check ash MSRV (1.60.0)       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Generated                     ] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[CI/Build-test docs               ] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[CI/Check ash-window MSRV (1.64.0)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Check ash MSRV (1.60.0)       ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Check ash-window MSRV (1.64.0)]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Check ash MSRV (1.60.0)       ]   \u2699  ::set-output:: toolchain=1.60.0\n[CI/Check ash-window MSRV (1.64.0)]   \u2699  ::set-output:: toolchain=1.64.0\n[CI/Check ash MSRV (1.60.0)       ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Check ash-window MSRV (1.64.0)] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Check ash MSRV (1.60.0)       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Check ash MSRV (1.60.0)       ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Check ash-window MSRV (1.64.0)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Check ash-window MSRV (1.64.0)]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Check ash-window MSRV (1.64.0)]   \u2699  ::set-output:: targets=\n[CI/Check ash-window MSRV (1.64.0)]   \u2699  ::set-output:: components=\n[CI/Check ash-window MSRV (1.64.0)]   \u2699  ::set-output:: downgrade=\n[CI/Check ash MSRV (1.60.0)       ]   \u2699  ::set-output:: downgrade=\n[CI/Check ash MSRV (1.60.0)       ]   \u2699  ::set-output:: targets=\n[CI/Check ash MSRV (1.60.0)       ]   \u2699  ::set-output:: components=\n[CI/Check ash-window MSRV (1.64.0)] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Check ash MSRV (1.60.0)       ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Check ash MSRV (1.60.0)       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Build-test docs               ] \ud83c\udfc1  Job failed\n[CI/Generated                     ] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/06fd94496152de2eae34fc41f2e29cd7aa08abb3f1601c0e95b7442abb565aff?force=1&v=1\": context deadline exceeded\n[CI/Generated                     ] \ud83c\udfc1  Job failed\n[CI/Check ash MSRV (1.60.0)       ]   | info: downloading installer\n[CI/Check ash MSRV (1.60.0)       ]   | info: profile set to 'default'\n[CI/Check ash MSRV (1.60.0)       ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Check ash MSRV (1.60.0)       ]   | info: skipping toolchain installation\n[CI/Check ash MSRV (1.60.0)       ]   | \n[CI/Check ash MSRV (1.60.0)       ]   | \n[CI/Check ash MSRV (1.60.0)       ]   | Rust is installed now. Great!\n[CI/Check ash MSRV (1.60.0)       ]   | \n[CI/Check ash MSRV (1.60.0)       ]   | To get started you may need to restart your current shell.\n[CI/Check ash MSRV (1.60.0)       ]   | This would reload your PATH environment variable to include\n[CI/Check ash MSRV (1.60.0)       ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Check ash MSRV (1.60.0)       ]   | \n[CI/Check ash MSRV (1.60.0)       ]   | To configure your current shell, run:\n[CI/Check ash MSRV (1.60.0)       ]   | source \"$HOME/.cargo/env\"\n[CI/Check ash MSRV (1.60.0)       ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Check ash MSRV (1.60.0)       ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Check ash MSRV (1.60.0)       ] \u2b50 Run Main rustup toolchain install 1.60.0\n[CI/Check ash MSRV (1.60.0)       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/Check ash MSRV (1.60.0)       ]   | info: syncing channel updates for '1.60.0-x86_64-unknown-linux-gnu'\n[CI/Check ash MSRV (1.60.0)       ]   | info: latest update on 2022-04-07, rust version 1.60.0 (7737e0b5c 2022-04-04)\n[CI/Check ash MSRV (1.60.0)       ]   | info: downloading component 'cargo'\n[CI/Check ash MSRV (1.60.0)       ]   | info: downloading component 'rust-std'\n[CI/Check ash MSRV (1.60.0)       ]   | info: downloading component 'rustc'\n[CI/Check ash MSRV (1.60.0)       ]   | info: installing component 'cargo'\n[CI/Check ash MSRV (1.60.0)       ]   | info: installing component 'rust-std'\n[CI/Check ash MSRV (1.60.0)       ]   | info: installing component 'rustc'\n[CI/Check ash MSRV (1.60.0)       ]   | \n[CI/Check ash MSRV (1.60.0)       ]   |   1.60.0-x86_64-unknown-linux-gnu installed - rustc 1.60.0 (7737e0b5c 2022-04-04)\n[CI/Check ash MSRV (1.60.0)       ]   | \n[CI/Check ash MSRV (1.60.0)       ]   | info: default toolchain set to '1.60.0-x86_64-unknown-linux-gnu'\n[CI/Check ash MSRV (1.60.0)       ]   \u2705  Success - Main rustup toolchain install 1.60.0\n[CI/Check ash MSRV (1.60.0)       ] \u2b50 Run Main rustup default 1.60.0\n[CI/Check ash MSRV (1.60.0)       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/Check ash MSRV (1.60.0)       ]   | info: using existing install for '1.60.0-x86_64-unknown-linux-gnu'\n[CI/Check ash MSRV (1.60.0)       ]   | \n[CI/Check ash MSRV (1.60.0)       ]   | info: default toolchain set to '1.60.0-x86_64-unknown-linux-gnu'\n[CI/Check ash MSRV (1.60.0)       ]   |   1.60.0-x86_64-unknown-linux-gnu unchanged - rustc 1.60.0 (7737e0b5c 2022-04-04)\n[CI/Check ash MSRV (1.60.0)       ]   | \n[CI/Check ash MSRV (1.60.0)       ]   \u2705  Success - Main rustup default 1.60.0\n[CI/Check ash MSRV (1.60.0)       ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +1.60.0 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +1.60.0 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Check ash MSRV (1.60.0)       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/Check ash MSRV (1.60.0)       ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +1.60.0 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +1.60.0 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Check ash MSRV (1.60.0)       ]   \u2699  ::set-output:: cachekey=202204047737\n[CI/Check ash MSRV (1.60.0)       ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Check ash MSRV (1.60.0)       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/Check ash MSRV (1.60.0)       ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Check ash-window MSRV (1.64.0)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Check ash-window MSRV (1.64.0)]   | info: downloading installer\n[CI/Check ash MSRV (1.60.0)       ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/Check ash-window MSRV (1.64.0)]   | info: profile set to 'default'\n[CI/Check ash-window MSRV (1.64.0)]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Check ash-window MSRV (1.64.0)]   | info: skipping toolchain installation\n[CI/Check ash-window MSRV (1.64.0)]   | \n[CI/Check ash-window MSRV (1.64.0)]   | \n[CI/Check ash-window MSRV (1.64.0)]   | Rust is installed now. Great!\n[CI/Check ash-window MSRV (1.64.0)]   | \n[CI/Check ash-window MSRV (1.64.0)]   | To get started you may need to restart your current shell.\n[CI/Check ash-window MSRV (1.64.0)]   | This would reload your PATH environment variable to include\n[CI/Check ash-window MSRV (1.64.0)]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Check ash-window MSRV (1.64.0)]   | \n[CI/Check ash-window MSRV (1.64.0)]   | To configure your current shell, run:\n[CI/Check ash-window MSRV (1.64.0)]   | source \"$HOME/.cargo/env\"\n[CI/Check ash-window MSRV (1.64.0)]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Check ash MSRV (1.60.0)       ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Check ash-window MSRV (1.64.0)]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Check ash-window MSRV (1.64.0)] \u2b50 Run Main rustup toolchain install 1.64.0\n[CI/Check ash MSRV (1.60.0)       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[CI/Check ash-window MSRV (1.64.0)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/Check ash-window MSRV (1.64.0)]   | info: syncing channel updates for '1.64.0-x86_64-unknown-linux-gnu'\n[CI/Check ash-window MSRV (1.64.0)]   | info: latest update on 2022-09-22, rust version 1.64.0 (a55dd71d5 2022-09-19)\n[CI/Check ash-window MSRV (1.64.0)]   | info: downloading component 'cargo'\n[CI/Check ash-window MSRV (1.64.0)]   | info: downloading component 'rust-std'\n[CI/Check ash MSRV (1.60.0)       ]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Check ash-window MSRV (1.64.0)]   | info: downloading component 'rustc'\n[CI/Check ash-window MSRV (1.64.0)]   | info: installing component 'cargo'\n[CI/Check ash-window MSRV (1.64.0)]   | info: installing component 'rust-std'\n[CI/Check ash MSRV (1.60.0)       ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[CI/Check ash-window MSRV (1.64.0)]   | info: installing component 'rustc'\n[CI/Check ash-window MSRV (1.64.0)]   | \n[CI/Check ash-window MSRV (1.64.0)]   |   1.64.0-x86_64-unknown-linux-gnu installed - rustc 1.64.0 (a55dd71d5 2022-09-19)\n[CI/Check ash-window MSRV (1.64.0)]   | \n[CI/Check ash-window MSRV (1.64.0)]   | info: default toolchain set to '1.64.0-x86_64-unknown-linux-gnu'\n[CI/Check ash-window MSRV (1.64.0)]   \u2705  Success - Main rustup toolchain install 1.64.0\n[CI/Check ash MSRV (1.60.0)       ] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +1.60.0 --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[CI/Check ash MSRV (1.60.0)       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[CI/Check ash-window MSRV (1.64.0)] \u2b50 Run Main rustup default 1.64.0\n[CI/Check ash-window MSRV (1.64.0)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/Check ash-window MSRV (1.64.0)]   | info: using existing install for '1.64.0-x86_64-unknown-linux-gnu'\n[CI/Check ash-window MSRV (1.64.0)]   | info: default toolchain set to '1.64.0-x86_64-unknown-linux-gnu'\n[CI/Check ash-window MSRV (1.64.0)]   | \n[CI/Check ash-window MSRV (1.64.0)]   |   1.64.0-x86_64-unknown-linux-gnu unchanged - rustc 1.64.0 (a55dd71d5 2022-09-19)\n[CI/Check ash-window MSRV (1.64.0)]   | \n[CI/Check ash-window MSRV (1.64.0)]   \u2705  Success - Main rustup default 1.64.0\n[CI/Check ash MSRV (1.60.0)       ]   \u2705  Success - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +1.60.0 --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[CI/Check ash MSRV (1.60.0)       ]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[CI/Check ash-window MSRV (1.64.0)] \u2b50 Run Main : create cachekey\nDATE=$(rustc +1.64.0 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +1.64.0 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Check ash MSRV (1.60.0)       ] \u2b50 Run Main rustc +1.60.0 --version --verbose\n[CI/Check ash MSRV (1.60.0)       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-9.sh] user= workdir=\n[CI/Check ash-window MSRV (1.64.0)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/Check ash MSRV (1.60.0)       ]   | rustc 1.60.0 (7737e0b5c 2022-04-04)\n[CI/Check ash MSRV (1.60.0)       ]   | binary: rustc\n[CI/Check ash MSRV (1.60.0)       ]   | commit-hash: 7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c\n[CI/Check ash MSRV (1.60.0)       ]   | commit-date: 2022-04-04\n[CI/Check ash MSRV (1.60.0)       ]   | host: x86_64-unknown-linux-gnu\n[CI/Check ash MSRV (1.60.0)       ]   | release: 1.60.0\n[CI/Check ash MSRV (1.60.0)       ]   | LLVM version: 14.0.0\n[CI/Check ash MSRV (1.60.0)       ]   \u2705  Success - Main rustc +1.60.0 --version --verbose\n[CI/Check ash-window MSRV (1.64.0)]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +1.64.0 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +1.64.0 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Check ash-window MSRV (1.64.0)]   \u2699  ::set-output:: cachekey=20220919a55d\n[CI/Check ash MSRV (1.60.0)       ]   \u2699  ::set-output:: cachekey=202204047737\n[CI/Check ash MSRV (1.60.0)       ]   \u2699  ::set-output:: name=1.60.0\n[CI/Check ash MSRV (1.60.0)       ]   \u2705  Success - Main dtolnay/rust-toolchain@1.60.0\n[CI/Check ash-window MSRV (1.64.0)] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Check ash-window MSRV (1.64.0)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/Check ash-window MSRV (1.64.0)]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Check ash MSRV (1.60.0)       ] \u2b50 Run Main cargo check -p ash -p ash-rewrite --all-features\n[CI/Check ash-window MSRV (1.64.0)]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/Check ash MSRV (1.60.0)       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/Check ash-window MSRV (1.64.0)] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Check ash MSRV (1.60.0)       ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Updating\u001b[0m crates.io index\n[CI/Check ash-window MSRV (1.64.0)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[CI/Check ash MSRV (1.60.0)       ]   \u274c  Failure - Main cargo check -p ash -p ash-rewrite --all-features\n[CI/Check ash-window MSRV (1.64.0)]   \u274c  Failure - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Check ash-window MSRV (1.64.0)] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/0ef3d65e16a9a4294e434c820a6161ec6e84ffc7629554d61fecb29b3d080dc1/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Check ash MSRV (1.60.0)       ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/d78da30c841f92c9b241514839b7323f2295039847e880335c6dfc6f3ecca12a/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Check ash-window MSRV (1.64.0)]   \u2699  ::set-output:: cachekey=20220919a55d\n[CI/Check ash-window MSRV (1.64.0)]   \u2699  ::set-output:: name=1.64.0\n[CI/Check ash-window MSRV (1.64.0)]   \u274c  Failure - Main dtolnay/rust-toolchain@1.64.0\n[CI/Check ash-window MSRV (1.64.0)] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/0ef3d65e16a9a4294e434c820a6161ec6e84ffc7629554d61fecb29b3d080dc1/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Check ash MSRV (1.60.0)       ] \u2b50 Run Post dtolnay/rust-toolchain@1.60.0\n[CI/Check ash-window MSRV (1.64.0)] \u2b50 Run Post dtolnay/rust-toolchain@1.64.0\n[CI/Check ash MSRV (1.60.0)       ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@1.60.0/ dst=/var/run/act/actions/dtolnay-rust-toolchain@1.60.0/\n[CI/Check ash-window MSRV (1.64.0)]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@1.64.0/ dst=/var/run/act/actions/dtolnay-rust-toolchain@1.64.0/\n[CI/Check ash MSRV (1.60.0)       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@1.60.0/] user=0 workdir=\n[CI/Check ash-window MSRV (1.64.0)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@1.64.0/] user=0 workdir=\n[CI/Check ash MSRV (1.60.0)       ]   \u2705  Success - Post dtolnay/rust-toolchain@1.60.0\n[CI/Check ash-window MSRV (1.64.0)]   \u2705  Success - Post dtolnay/rust-toolchain@1.64.0\n[CI/Check ash MSRV (1.60.0)       ] \ud83c\udfc1  Job succeeded\n[CI/Check ash-window MSRV (1.64.0)]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[CI/Check ash-window MSRV (1.64.0)] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}