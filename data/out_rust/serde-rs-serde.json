{
    "repository": "serde-rs/serde",
    "clone_url": "https://github.com/serde-rs/serde.git",
    "timestamp": "2023-05-30T08:25:28.040038Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/Rust 1.56.0         ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Rust 1.36.0         ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Rust nightly        ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Test suite (windows)] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Clippy              ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Rust stable         ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Rust 1.19.0         ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Miri                ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Outdated            ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Test suite          ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Rust 1.27.0         ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Rust 1.56.0         ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Test suite (windows)]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Rust 1.56.0         ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test suite (windows)]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Clippy              ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Rust nightly        ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Miri                ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Outdated            ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Rust 1.19.0         ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Rust 1.27.0         ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Rust 1.36.0         ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Rust stable         ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Test suite          ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Rust 1.36.0         ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Miri                ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Outdated            ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test suite          ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust 1.19.0         ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust stable         ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust nightly        ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust 1.27.0         ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test suite (windows)]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test suite          ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust stable         ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Outdated            ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust 1.27.0         ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust 1.56.0         ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust 1.36.0         ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Miri                ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust 1.19.0         ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust nightly        ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Clippy              ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust 1.36.0         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/serde-rs-serde] user=0 workdir=\n[CI/Clippy              ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust 1.36.0         ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=1.36.0\n[CI/Test suite (windows)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/serde-rs-serde] user=0 workdir=\n[CI/Test suite          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/serde-rs-serde] user=0 workdir=\n[CI/Test suite (windows)]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=nightly\n[CI/Test suite          ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=nightly\n[CI/Rust stable         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/serde-rs-serde] user=0 workdir=\n[CI/Rust nightly        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/serde-rs-serde] user=0 workdir=\n[CI/Outdated            ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/serde-rs-serde] user=0 workdir=\n[CI/Rust 1.56.0         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/serde-rs-serde] user=0 workdir=\n[CI/Miri                ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/serde-rs-serde] user=0 workdir=\n[CI/Rust 1.36.0         ] \u2b50 Run Pre dtolnay/rust-toolchain@1.36.0\n[CI/Rust stable         ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=master\n[CI/Rust 1.27.0         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/serde-rs-serde] user=0 workdir=\n[CI/Outdated            ]   \u2601  git clone 'https://github.com/dtolnay/install' # ref=cargo-outdated\n[CI/Rust nightly        ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=nightly\n[CI/Rust 1.36.0         ]   \u2705  Success - Pre dtolnay/rust-toolchain@1.36.0\n[CI/Rust 1.56.0         ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=1.56.0\n[CI/Miri                ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=miri\n[CI/Rust 1.27.0         ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=master\n[CI/Test suite (windows)] \u2b50 Run Pre dtolnay/rust-toolchain@nightly\n[CI/Test suite (windows)]   \u2705  Success - Pre dtolnay/rust-toolchain@nightly\n[CI/Test suite          ] \u2b50 Run Pre dtolnay/rust-toolchain@nightly\n[CI/Rust 1.36.0         ] \u2b50 Run Main actions/checkout@v3\n[CI/Rust 1.36.0         ]   \u2705  Success - Main actions/checkout@v3\n[CI/Test suite          ]   \u2705  Success - Pre dtolnay/rust-toolchain@nightly\n[CI/Rust stable         ] \u2b50 Run Pre dtolnay/rust-toolchain@master\n[CI/Test suite (windows)] \u2b50 Run Main actions/checkout@v3\n[CI/Rust stable         ]   \u2705  Success - Pre dtolnay/rust-toolchain@master\n[CI/Outdated            ] \u2b50 Run Pre dtolnay/install@cargo-outdated\n[CI/Test suite (windows)]   \u2705  Success - Main actions/checkout@v3\n[CI/Rust 1.36.0         ] \u2b50 Run Main dtolnay/rust-toolchain@1.36.0\n[CI/Rust nightly        ] \u2b50 Run Pre dtolnay/rust-toolchain@nightly\n[CI/Outdated            ]   \u2705  Success - Pre dtolnay/install@cargo-outdated\n[CI/Test suite          ] \u2b50 Run Main actions/checkout@v3\n[CI/Rust 1.36.0         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@1.36.0/ dst=/var/run/act/actions/dtolnay-rust-toolchain@1.36.0/\n[CI/Rust 1.36.0         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@1.36.0/] user=0 workdir=\n[CI/Test suite          ]   \u2705  Success - Main actions/checkout@v3\n[CI/Rust nightly        ]   \u2705  Success - Pre dtolnay/rust-toolchain@nightly\n[CI/Rust stable         ] \ud83e\uddea  Matrix: map[rust:stable]\n[CI/Rust 1.56.0         ] \u2b50 Run Pre dtolnay/rust-toolchain@1.56.0\n[CI/Test suite (windows)] \u2b50 Run Main dtolnay/rust-toolchain@nightly\n[CI/Rust stable         ] \u2b50 Run Main actions/checkout@v3\n[CI/Rust stable         ]   \u2705  Success - Main actions/checkout@v3\n[CI/Test suite (windows)]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[CI/Rust 1.56.0         ]   \u2705  Success - Pre dtolnay/rust-toolchain@1.56.0\n[CI/Test suite (windows)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@nightly/] user=0 workdir=\n[CI/Outdated            ] \u2b50 Run Main actions/checkout@v3\n[CI/Rust nightly        ] \ud83e\uddea  Matrix: map[os:ubuntu]\n[CI/Rust nightly        ] \u2b50 Run Main actions/checkout@v3\n[CI/Test suite          ] \u2b50 Run Main dtolnay/rust-toolchain@nightly\n[CI/Outdated            ]   \u2705  Success - Main actions/checkout@v3\n[CI/Rust nightly        ]   \u2705  Success - Main actions/checkout@v3\n[CI/Test suite          ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[CI/Rust 1.56.0         ] \u2b50 Run Main actions/checkout@v3\n[CI/Rust stable         ] \u2b50 Run Main dtolnay/rust-toolchain@master\n[CI/Rust 1.56.0         ]   \u2705  Success - Main actions/checkout@v3\n[CI/Rust stable         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[CI/Test suite          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@nightly/] user=0 workdir=\n[CI/Rust stable         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[CI/Outdated            ] \u2b50 Run Main dtolnay/install@cargo-outdated\n[CI/Rust nightly        ] \u2b50 Run Main dtolnay/rust-toolchain@nightly\n[CI/Outdated            ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-install@cargo-outdated/ dst=/var/run/act/actions/dtolnay-install@cargo-outdated/\n[CI/Rust nightly        ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[CI/Rust 1.56.0         ] \u2b50 Run Main dtolnay/rust-toolchain@1.56.0\n[CI/Outdated            ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-install@cargo-outdated/] user=0 workdir=\n[CI/Rust 1.56.0         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@1.56.0/ dst=/var/run/act/actions/dtolnay-rust-toolchain@1.56.0/\n[CI/Rust nightly        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@nightly/] user=0 workdir=\n[CI/Miri                ] \u2b50 Run Pre dtolnay/rust-toolchain@miri\n[CI/Rust 1.56.0         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@1.56.0/] user=0 workdir=\n[CI/Miri                ]   \u2601  git clone 'https://github.com/dtolnay/install' # ref=xargo\n[CI/Rust 1.27.0         ] \u2b50 Run Pre dtolnay/rust-toolchain@master\n[CI/Rust 1.27.0         ]   \u2705  Success - Pre dtolnay/rust-toolchain@master\n[CI/Rust 1.27.0         ] \ud83e\uddea  Matrix: map[rust:1.27.0]\n[CI/Rust 1.27.0         ] \u2b50 Run Main actions/checkout@v3\n[CI/Rust 1.27.0         ]   \u2705  Success - Main actions/checkout@v3\n[CI/Miri                ] \u2b50 Run Pre dtolnay/install@xargo\n[CI/Miri                ]   \u2705  Success - Pre dtolnay/install@xargo\n[CI/Rust 1.27.0         ] \u2b50 Run Main dtolnay/rust-toolchain@master\n[CI/Rust 1.27.0         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[CI/Miri                ]   \u2705  Success - Pre dtolnay/rust-toolchain@miri\n[CI/Rust 1.27.0         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[CI/Miri                ] \u2b50 Run Main actions/checkout@v3\n[CI/Miri                ]   \u2705  Success - Main actions/checkout@v3\n[CI/Miri                ] \u2b50 Run Main dtolnay/rust-toolchain@miri\n[CI/Miri                ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@miri/ dst=/var/run/act/actions/dtolnay-rust-toolchain@miri/\n[CI/Miri                ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@miri/] user=0 workdir=\n[CI/Outdated            ]   | OCI runtime exec failed: exec failed: unable to start container process: error executing setns process: exit status 1: unknown\r\n[CI/Rust 1.19.0         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/serde-rs-serde] user=0 workdir=\n[CI/Rust stable         ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Test suite          ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Rust nightly        ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Outdated            ] \u2b50 Run Main Determine cargo bin directory\n[CI/Miri                ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Rust 1.27.0         ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Rust 1.56.0         ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Test suite (windows)] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Rust 1.36.0         ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Rust 1.19.0         ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=master\n[CI/Test suite          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Rust nightly        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Rust stable         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Outdated            ]   \u274c  Failure - Main Determine cargo bin directory\n[CI/Outdated            ] Error response from daemon: No such container: 45b6ec04d844532495141e8b5973d0c282c9e8ffe654260a9d6fe18506b3ee87\n[CI/Rust 1.19.0         ] \u2b50 Run Pre dtolnay/rust-toolchain@master\n[CI/Test suite (windows)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Miri                ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Rust 1.27.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Rust 1.36.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Rust 1.56.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Rust 1.19.0         ]   \u2705  Success - Pre dtolnay/rust-toolchain@master\n[CI/Test suite          ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Rust stable         ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Rust nightly        ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Outdated            ]   \u274c  Failure - Main dtolnay/install@cargo-outdated\n[CI/Outdated            ] Error response from daemon: No such container: 45b6ec04d844532495141e8b5973d0c282c9e8ffe654260a9d6fe18506b3ee87\n[CI/Test suite          ]   \u2699  ::set-output:: toolchain=nightly\n[CI/Rust stable         ]   \u2699  ::set-output:: toolchain=stable\n[CI/Rust 1.19.0         ] \ud83e\uddea  Matrix: map[rust:1.19.0]\n[CI/Rust nightly        ]   \u2699  ::set-output:: toolchain=nightly\n[CI/Outdated            ] \u2b50 Run Post dtolnay/install@cargo-outdated\n[CI/Outdated            ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-install@cargo-outdated/ dst=/var/run/act/actions/dtolnay-install@cargo-outdated/\n[CI/Outdated            ]   \u274c  Failure - Post dtolnay/install@cargo-outdated\n[CI/Outdated            ] failed to remove container: Error response from daemon: No such container: 45b6ec04d844532495141e8b5973d0c282c9e8ffe654260a9d6fe18506b3ee87\n[CI/Outdated            ] \ud83c\udfc1  Job failed\n[CI/Rust 1.19.0         ] \u2b50 Run Main actions/checkout@v3\n[CI/Rust 1.19.0         ]   \u2705  Success - Main actions/checkout@v3\n[CI/Rust nightly        ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Rust stable         ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Test suite          ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Test suite          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Rust nightly        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Rust stable         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Rust 1.19.0         ] \u2b50 Run Main dtolnay/rust-toolchain@master\n[CI/Rust 1.19.0         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[CI/Rust 1.19.0         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[CI/Rust 1.27.0         ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Rust nightly        ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Test suite (windows)]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Rust stable         ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Test suite          ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Rust 1.56.0         ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Rust 1.36.0         ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Miri                ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Rust 1.19.0         ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Test suite (windows)]   \u2699  ::set-output:: toolchain=nightly\n[CI/Rust 1.27.0         ]   \u2699  ::set-output:: toolchain=1.27.0\n[CI/Miri                ]   \u2699  ::set-output:: toolchain=nightly\n[CI/Rust 1.36.0         ]   \u2699  ::set-output:: toolchain=1.36.0\n[CI/Rust 1.56.0         ]   \u2699  ::set-output:: toolchain=1.56.0\n[CI/Rust nightly        ]   \u2699  ::set-output:: targets=\n[CI/Rust nightly        ]   \u2699  ::set-output:: components=\n[CI/Rust nightly        ]   \u2699  ::set-output:: downgrade=\n[CI/Rust stable         ]   \u2699  ::set-output:: downgrade=\n[CI/Rust stable         ]   \u2699  ::set-output:: targets=\n[CI/Rust stable         ]   \u2699  ::set-output:: components=\n[CI/Test suite          ]   \u2699  ::set-output:: targets=\n[CI/Test suite          ]   \u2699  ::set-output:: components=\n[CI/Test suite          ]   \u2699  ::set-output:: downgrade=\n[CI/Rust 1.19.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Rust 1.19.0         ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Test suite (windows)] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Rust 1.36.0         ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Rust 1.56.0         ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Rust 1.27.0         ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Miri                ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade= --allow-downgrade\" >> $GITHUB_OUTPUT\n[CI/Test suite          ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Rust stable         ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Rust nightly        ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Rust 1.19.0         ]   \u2699  ::set-output:: toolchain=1.19.0\n[CI/Test suite (windows)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Rust 1.36.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Rust 1.36.0         ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Test suite (windows)]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Rust 1.19.0         ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Rust 1.56.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Rust 1.27.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Miri                ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Rust stable         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Rust nightly        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Rust 1.27.0         ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Rust 1.56.0         ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Miri                ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade= --allow-downgrade\" >> $GITHUB_OUTPUT\n[CI/Test suite          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Test suite (windows)]   \u2699  ::set-output:: targets=\n[CI/Test suite (windows)]   \u2699  ::set-output:: components=\n[CI/Test suite (windows)]   \u2699  ::set-output:: downgrade=\n[CI/Rust 1.36.0         ]   \u2699  ::set-output:: targets=\n[CI/Rust 1.36.0         ]   \u2699  ::set-output:: components=\n[CI/Rust 1.36.0         ]   \u2699  ::set-output:: downgrade=\n[CI/Rust 1.19.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Test suite          ]   | info: downloading installer\n[CI/Rust 1.19.0         ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Rust 1.27.0         ]   \u2699  ::set-output:: targets=\n[CI/Rust 1.27.0         ]   \u2699  ::set-output:: components=\n[CI/Rust 1.27.0         ]   \u2699  ::set-output:: downgrade=\n[CI/Miri                ]   \u2699  ::set-output:: targets=\n[CI/Miri                ]   \u2699  ::set-output:: components= --component miri --component rust-src\n[CI/Miri                ]   \u2699  ::set-output:: downgrade= --allow-downgrade\n[CI/Rust 1.56.0         ]   \u2699  ::set-output:: targets=\n[CI/Rust 1.56.0         ]   \u2699  ::set-output:: components=\n[CI/Rust 1.56.0         ]   \u2699  ::set-output:: downgrade=\n[CI/Rust stable         ]   | info: downloading installer\n[CI/Rust nightly        ]   | info: downloading installer\n[CI/Test suite          ]   | info: profile set to 'default'\n[CI/Test suite          ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Test suite          ]   | info: skipping toolchain installation\n[CI/Test suite          ]   | \n[CI/Test suite          ]   | \n[CI/Test suite          ]   | Rust is installed now. Great!\n[CI/Test suite          ]   | \n[CI/Test suite          ]   | To get started you may need to restart your current shell.\n[CI/Test suite          ]   | This would reload your PATH environment variable to include\n[CI/Test suite          ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Test suite          ]   | \n[CI/Test suite          ]   | To configure your current shell, run:\n[CI/Test suite          ]   | source \"$HOME/.cargo/env\"\n[CI/Test suite          ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Test suite (windows)] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Rust stable         ]   | \n[CI/Rust stable         ]   | info: profile set to 'default'\n[CI/Rust stable         ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Rust stable         ]   | info: skipping toolchain installation\n[CI/Rust stable         ]   | \n[CI/Rust stable         ]   | Rust is installed now. Great!\n[CI/Rust stable         ]   | \n[CI/Rust stable         ]   | To get started you may need to restart your current shell.\n[CI/Rust stable         ]   | This would reload your PATH environment variable to include\n[CI/Rust stable         ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Rust stable         ]   | \n[CI/Rust stable         ]   | To configure your current shell, run:\n[CI/Rust stable         ]   | source \"$HOME/.cargo/env\"\n[CI/Rust stable         ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Rust nightly        ]   | \n[CI/Rust nightly        ]   | \n[CI/Rust nightly        ]   | Rust is installed now. Great!\n[CI/Rust nightly        ]   | \n[CI/Rust nightly        ]   | To get started you may need to restart your current shell.\n[CI/Rust nightly        ]   | This would reload your PATH environment variable to include\n[CI/Rust nightly        ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Rust nightly        ]   | \n[CI/Rust nightly        ]   | To configure your current shell, run:\n[CI/Rust nightly        ]   | source \"$HOME/.cargo/env\"\n[CI/Rust nightly        ]   | info: profile set to 'default'\n[CI/Rust nightly        ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Rust nightly        ]   | info: skipping toolchain installation\n[CI/Rust nightly        ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Rust 1.36.0         ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Rust 1.27.0         ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Rust 1.56.0         ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Miri                ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Rust 1.19.0         ]   \u2699  ::set-output:: components=\n[CI/Rust 1.19.0         ]   \u2699  ::set-output:: downgrade=\n[CI/Rust 1.19.0         ]   \u2699  ::set-output:: targets=\n[CI/Rust 1.19.0         ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Rust nightly        ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Rust stable         ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Test suite (windows)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Test suite          ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Rust 1.36.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Miri                ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Rust 1.27.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Rust 1.56.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Rust stable         ] \u2b50 Run Main rustup toolchain install stable\n[CI/Rust nightly        ] \u2b50 Run Main rustup toolchain install nightly\n[CI/Test suite          ] \u2b50 Run Main rustup toolchain install nightly\n[CI/Rust 1.19.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Rust stable         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/Rust nightly        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/Test suite          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/Rust 1.19.0         ]   | info: downloading installer\n[CI/Test suite (windows)]   | info: downloading installer\n[CI/Rust 1.56.0         ]   | info: downloading installer\n[CI/Rust 1.36.0         ]   | info: downloading installer\n[CI/Miri                ]   | info: downloading installer\n[CI/Rust 1.27.0         ]   | info: downloading installer\n[CI/Rust nightly        ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Test suite          ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Rust 1.36.0         ]   | info: profile set to 'default'\n[CI/Rust 1.36.0         ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Rust 1.36.0         ]   | info: skipping toolchain installation\n[CI/Rust 1.36.0         ]   | \n[CI/Rust 1.36.0         ]   | \n[CI/Rust 1.36.0         ]   | Rust is installed now. Great!\n[CI/Rust 1.36.0         ]   | \n[CI/Rust 1.36.0         ]   | To get started you may need to restart your current shell.\n[CI/Rust 1.36.0         ]   | This would reload your PATH environment variable to include\n[CI/Rust 1.36.0         ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Rust 1.36.0         ]   | \n[CI/Rust 1.36.0         ]   | To configure your current shell, run:\n[CI/Rust 1.36.0         ]   | source \"$HOME/.cargo/env\"\n[CI/Rust 1.36.0         ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Rust stable         ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/Rust 1.27.0         ]   | info: profile set to 'default'\n[CI/Rust 1.27.0         ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Rust 1.27.0         ]   | info: skipping toolchain installation\n[CI/Rust 1.27.0         ]   | \n[CI/Rust 1.27.0         ]   | \n[CI/Rust 1.27.0         ]   | Rust is installed now. Great!\n[CI/Rust 1.27.0         ]   | \n[CI/Rust 1.27.0         ]   | To get started you may need to restart your current shell.\n[CI/Rust 1.27.0         ]   | This would reload your PATH environment variable to include\n[CI/Rust 1.27.0         ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Rust 1.27.0         ]   | \n[CI/Rust 1.27.0         ]   | To configure your current shell, run:\n[CI/Rust 1.27.0         ]   | source \"$HOME/.cargo/env\"\n[CI/Rust 1.27.0         ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Rust 1.56.0         ]   | info: profile set to 'default'\n[CI/Rust 1.56.0         ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Rust 1.56.0         ]   | info: skipping toolchain installation\n[CI/Rust 1.56.0         ]   | \n[CI/Miri                ]   | \n[CI/Miri                ]   | \n[CI/Miri                ]   | Rust is installed now. Great!\n[CI/Miri                ]   | \n[CI/Miri                ]   | To get started you may need to restart your current shell.\n[CI/Miri                ]   | This would reload your PATH environment variable to include\n[CI/Miri                ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Miri                ]   | \n[CI/Miri                ]   | To configure your current shell, run:\n[CI/Miri                ]   | source \"$HOME/.cargo/env\"\n[CI/Miri                ]   | info: profile set to 'default'\n[CI/Miri                ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Miri                ]   | info: skipping toolchain installation\n[CI/Rust 1.56.0         ]   | \n[CI/Rust 1.56.0         ]   | Rust is installed now. Great!\n[CI/Rust 1.56.0         ]   | \n[CI/Rust 1.56.0         ]   | To get started you may need to restart your current shell.\n[CI/Rust 1.56.0         ]   | This would reload your PATH environment variable to include\n[CI/Rust 1.56.0         ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Rust 1.56.0         ]   | \n[CI/Rust 1.56.0         ]   | To configure your current shell, run:\n[CI/Rust 1.56.0         ]   | source \"$HOME/.cargo/env\"\n[CI/Miri                ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Rust 1.56.0         ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Rust stable         ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/Rust stable         ]   | info: downloading component 'cargo'\n[CI/Rust stable         ]   | info: downloading component 'rust-std'\n[CI/Test suite          ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Test suite          ]   | info: downloading component 'cargo'\n[CI/Rust 1.19.0         ]   | info: profile set to 'default'\n[CI/Rust 1.19.0         ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Rust 1.19.0         ]   | info: skipping toolchain installation\n[CI/Rust 1.19.0         ]   | \n[CI/Rust 1.19.0         ]   | \n[CI/Rust 1.19.0         ]   | Rust is installed now. Great!\n[CI/Rust 1.19.0         ]   | \n[CI/Rust 1.19.0         ]   | To get started you may need to restart your current shell.\n[CI/Rust 1.19.0         ]   | This would reload your PATH environment variable to include\n[CI/Rust 1.19.0         ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Rust 1.19.0         ]   | \n[CI/Rust 1.19.0         ]   | To configure your current shell, run:\n[CI/Rust 1.19.0         ]   | source \"$HOME/.cargo/env\"\n[CI/Rust 1.19.0         ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Test suite (windows)]   | info: profile set to 'default'\n[CI/Test suite (windows)]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Test suite (windows)]   | info: skipping toolchain installation\n[CI/Test suite (windows)]   | \n[CI/Test suite (windows)]   | \n[CI/Test suite (windows)]   | Rust is installed now. Great!\n[CI/Test suite (windows)]   | \n[CI/Test suite (windows)]   | To get started you may need to restart your current shell.\n[CI/Test suite (windows)]   | This would reload your PATH environment variable to include\n[CI/Test suite (windows)]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Test suite (windows)]   | \n[CI/Test suite (windows)]   | To configure your current shell, run:\n[CI/Test suite (windows)]   | source \"$HOME/.cargo/env\"\n[CI/Test suite (windows)]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Test suite          ]   | info: downloading component 'rust-std'\n[CI/Test suite          ]   | info: downloading component 'rustc'\n[CI/Rust stable         ]   | info: downloading component 'rustc'\n[CI/Test suite          ]   | info: installing component 'cargo'\n[CI/Rust stable         ]   | info: installing component 'cargo'\n[CI/Test suite          ]   | info: installing component 'rust-std'\n[CI/Rust 1.56.0         ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Miri                ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Rust 1.36.0         ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Rust 1.27.0         ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Rust 1.19.0         ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Rust stable         ]   | info: installing component 'rust-std'\n[CI/Test suite (windows)]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Rust 1.19.0         ] \u2b50 Run Main rustup toolchain install 1.19.0\n[CI/Miri                ] \u2b50 Run Main rustup toolchain install nightly\n[CI/Rust 1.27.0         ] \u2b50 Run Main rustup toolchain install 1.27.0\n[CI/Rust 1.56.0         ] \u2b50 Run Main rustup toolchain install 1.56.0\n[CI/Rust 1.36.0         ] \u2b50 Run Main rustup toolchain install 1.36.0\n[CI/Test suite (windows)] \u2b50 Run Main rustup toolchain install nightly\n[CI/Test suite          ]   | info: installing component 'rustc'\n[CI/Rust 1.19.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/Miri                ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/Rust 1.56.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/Rust 1.36.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/Rust 1.27.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/Rust stable         ]   | info: installing component 'rustc'\n[CI/Test suite (windows)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/Rust nightly        ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Rust nightly        ]   | info: downloading component 'cargo'\n[CI/Rust nightly        ]   | info: downloading component 'rust-std'\n[CI/Rust nightly        ]   | info: downloading component 'rustc'\n[CI/Test suite          ]   | \n[CI/Test suite          ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Test suite          ]   | \n[CI/Test suite          ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Test suite          ]   \u2705  Success - Main rustup toolchain install nightly\n[CI/Rust nightly        ]   | info: installing component 'cargo'\n[CI/Test suite          ] \u2b50 Run Main rustup default nightly\n[CI/Rust nightly        ]   | info: installing component 'rust-std'\n[CI/Rust stable         ]   | \n[CI/Rust stable         ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Rust stable         ]   | \n[CI/Test suite          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/Rust stable         ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Rust stable         ]   \u2705  Success - Main rustup toolchain install stable\n[CI/Rust stable         ] \u2b50 Run Main rustup default stable\n[CI/Rust stable         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/Rust nightly        ]   | info: installing component 'rustc'\n[CI/Rust nightly        ]   | \n[CI/Rust nightly        ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Rust nightly        ]   | \n[CI/Rust nightly        ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Rust nightly        ]   \u2705  Success - Main rustup toolchain install nightly\n[CI/Rust nightly        ] \u2b50 Run Main rustup default nightly\n[CI/Rust nightly        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/Miri                ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Miri                ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Miri                ]   | info: downloading component 'cargo'\n[CI/Rust stable         ]   | \n[CI/Rust stable         ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/Rust stable         ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Test suite          ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Test suite          ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Test suite          ]   | \n[CI/Rust stable         ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Rust stable         ]   | \n[CI/Rust stable         ]   \u2705  Success - Main rustup default stable\n[CI/Miri                ]   | info: downloading component 'miri'\n[CI/Test suite          ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Test suite          ]   | \n[CI/Test suite          ]   \u2705  Success - Main rustup default nightly\n[CI/Miri                ]   | info: downloading component 'rust-src'\n[CI/Rust 1.36.0         ]   | info: syncing channel updates for '1.36.0-x86_64-unknown-linux-gnu'\n[CI/Miri                ]   | info: downloading component 'rust-std'\n[CI/Test suite (windows)]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Rust 1.56.0         ]   | info: syncing channel updates for '1.56.0-x86_64-unknown-linux-gnu'\n[CI/Rust 1.19.0         ]   | info: syncing channel updates for '1.19.0-x86_64-unknown-linux-gnu'\n[CI/Test suite (windows)]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Test suite (windows)]   | info: downloading component 'cargo'\n[CI/Miri                ]   | info: downloading component 'rustc'\n[CI/Rust 1.27.0         ]   | info: syncing channel updates for '1.27.0-x86_64-unknown-linux-gnu'\n[CI/Test suite (windows)]   | info: downloading component 'rust-std'\n[CI/Rust nightly        ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Rust nightly        ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Rust nightly        ]   | \n[CI/Rust nightly        ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Rust nightly        ]   | \n[CI/Rust nightly        ]   \u2705  Success - Main rustup default nightly\n[CI/Test suite (windows)]   | info: downloading component 'rustc'\n[CI/Rust 1.19.0         ]   | info: latest update on 2017-07-20, rust version 1.19.0 (0ade33941 2017-07-17)\n[CI/Rust 1.19.0         ]   | info: downloading component 'cargo'\n[CI/Rust 1.27.0         ]   | info: latest update on 2018-06-21, rust version 1.27.0 (3eda71b00 2018-06-19)\n[CI/Rust 1.27.0         ]   | info: downloading component 'cargo'\n[CI/Test suite (windows)]   | info: installing component 'cargo'\n[CI/Miri                ]   | info: installing component 'cargo'\n[CI/Test suite (windows)]   | info: installing component 'rust-std'\n[CI/Rust 1.27.0         ]   | info: downloading component 'rust-docs'\n[CI/Rust 1.19.0         ]   | info: downloading component 'rust-docs'\n[CI/Miri                ]   | info: installing component 'miri'\n[CI/Miri                ]   | info: installing component 'rust-src'\n[CI/Rust 1.36.0         ]   | info: latest update on 2019-07-04, rust version 1.36.0 (a53f9df32 2019-07-03)\n[CI/Rust 1.36.0         ]   | info: downloading component 'cargo'\n[CI/Rust 1.19.0         ]   | info: downloading component 'rust-std'\n[CI/Rust 1.27.0         ]   | info: downloading component 'rust-std'\n[CI/Miri                ]   | info: installing component 'rust-std'\n[CI/Rust 1.36.0         ]   | info: downloading component 'rust-std'\n[CI/Test suite (windows)]   | info: installing component 'rustc'\n[CI/Rust 1.56.0         ]   | info: latest update on 2021-10-21, rust version 1.56.0 (09c42c458 2021-10-18)\n[CI/Rust 1.56.0         ]   | info: downloading component 'cargo'\n[CI/Rust 1.56.0         ]   | info: downloading component 'rust-std'\n[CI/Miri                ]   | info: installing component 'rustc'\n[CI/Rust 1.27.0         ]   | info: downloading component 'rustc'\n[CI/Rust 1.36.0         ]   | info: downloading component 'rustc'\n[CI/Rust 1.56.0         ]   | info: downloading component 'rustc'\n[CI/Test suite (windows)]   | \n[CI/Test suite (windows)]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Test suite (windows)]   | \n[CI/Test suite (windows)]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Test suite (windows)]   \u2705  Success - Main rustup toolchain install nightly\n[CI/Rust stable         ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Rust nightly        ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Test suite          ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Miri                ]   | \n[CI/Miri                ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Miri                ]   | \n[CI/Miri                ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Miri                ]   \u2705  Success - Main rustup toolchain install nightly\n[CI/Rust 1.19.0         ]   | info: downloading component 'rustc'\n[CI/Rust 1.27.0         ]   | info: installing component 'cargo'\n[CI/Rust 1.36.0         ]   | info: installing component 'cargo'\n[CI/Rust 1.27.0         ]   | info: installing component 'rust-docs'\n[CI/Rust 1.36.0         ]   | info: installing component 'rust-std'\n[CI/Rust nightly        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/Test suite          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/Rust stable         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/Rust 1.19.0         ]   | info: installing component 'cargo'\n[CI/Rust 1.56.0         ]   | info: installing component 'cargo'\n[CI/Rust 1.27.0         ]   | info: installing component 'rust-std'\n[CI/Test suite (windows)] \u2b50 Run Main rustup default nightly\n[CI/Rust 1.19.0         ]   | info: installing component 'rust-docs'\n[CI/Rust 1.56.0         ]   | info: installing component 'rust-std'\n[CI/Miri                ] \u2b50 Run Main rustup default nightly\n[CI/Rust 1.19.0         ]   | info: installing component 'rust-std'\n[CI/Rust 1.36.0         ]   | info: installing component 'rustc'\n[CI/Test suite (windows)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/Rust 1.56.0         ]   | info: installing component 'rustc'\n[CI/Rust 1.27.0         ]   | info: installing component 'rustc'\n[CI/Miri                ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/Rust 1.19.0         ]   | info: installing component 'rustc'\n[CI/Rust 1.36.0         ]   | \n[CI/Rust 1.36.0         ]   |   1.36.0-x86_64-unknown-linux-gnu installed - rustc 1.36.0 (a53f9df32 2019-07-03)\n[CI/Rust 1.36.0         ]   | \n[CI/Rust 1.36.0         ]   | info: default toolchain set to '1.36.0-x86_64-unknown-linux-gnu'\n[CI/Rust 1.56.0         ]   | \n[CI/Rust 1.36.0         ]   \u2705  Success - Main rustup toolchain install 1.36.0\n[CI/Rust 1.56.0         ]   |   1.56.0-x86_64-unknown-linux-gnu installed - rustc 1.56.0 (09c42c458 2021-10-18)\n[CI/Rust 1.56.0         ]   | \n[CI/Rust 1.56.0         ]   | info: default toolchain set to '1.56.0-x86_64-unknown-linux-gnu'\n[CI/Rust 1.56.0         ]   \u2705  Success - Main rustup toolchain install 1.56.0\n[CI/Rust 1.27.0         ]   | \n[CI/Rust 1.27.0         ]   |   1.27.0-x86_64-unknown-linux-gnu installed - rustc 1.27.0 (3eda71b00 2018-06-19)\n[CI/Rust 1.27.0         ]   | \n[CI/Rust 1.27.0         ]   | info: default toolchain set to '1.27.0-x86_64-unknown-linux-gnu'\n[CI/Rust 1.27.0         ]   \u2705  Success - Main rustup toolchain install 1.27.0\n[CI/Rust 1.56.0         ] \u2b50 Run Main rustup default 1.56.0\n[CI/Rust 1.36.0         ] \u2b50 Run Main rustup default 1.36.0\n[CI/Rust 1.19.0         ]   | \n[CI/Rust 1.19.0         ]   |   1.19.0-x86_64-unknown-linux-gnu installed - rustc 1.19.0 (0ade33941 2017-07-17)\n[CI/Rust 1.19.0         ]   | \n[CI/Rust 1.19.0         ]   | info: default toolchain set to '1.19.0-x86_64-unknown-linux-gnu'\n[CI/Rust 1.19.0         ]   \u2705  Success - Main rustup toolchain install 1.19.0\n[CI/Rust 1.27.0         ] \u2b50 Run Main rustup default 1.27.0\n[CI/Rust 1.36.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/Rust 1.56.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/Rust 1.27.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/Rust 1.19.0         ] \u2b50 Run Main rustup default 1.19.0\n[CI/Rust 1.19.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/Miri                ]   | \n[CI/Miri                ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Miri                ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Test suite (windows)]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Rust 1.56.0         ]   | info: using existing install for '1.56.0-x86_64-unknown-linux-gnu'\n[CI/Test suite (windows)]   | \n[CI/Test suite (windows)]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Miri                ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Miri                ]   | \n[CI/Rust 1.56.0         ]   | \n[CI/Rust 1.56.0         ]   | info: default toolchain set to '1.56.0-x86_64-unknown-linux-gnu'\n[CI/Miri                ]   \u2705  Success - Main rustup default nightly\n[CI/Test suite (windows)]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Test suite (windows)]   | \n[CI/Rust nightly        ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Test suite (windows)]   \u2705  Success - Main rustup default nightly\n[CI/Rust 1.56.0         ]   |   1.56.0-x86_64-unknown-linux-gnu unchanged - rustc 1.56.0 (09c42c458 2021-10-18)\n[CI/Rust 1.56.0         ]   | \n[CI/Rust 1.56.0         ]   \u2705  Success - Main rustup default 1.56.0\n[CI/Rust 1.36.0         ]   | info: using existing install for '1.36.0-x86_64-unknown-linux-gnu'\n[CI/Rust 1.36.0         ]   | info: default toolchain set to '1.36.0-x86_64-unknown-linux-gnu'\n[CI/Rust 1.36.0         ]   | \n[CI/Rust 1.36.0         ]   |   1.36.0-x86_64-unknown-linux-gnu unchanged - rustc 1.36.0 (a53f9df32 2019-07-03)\n[CI/Rust 1.36.0         ]   | \n[CI/Rust 1.36.0         ]   \u2705  Success - Main rustup default 1.36.0\n[CI/Test suite          ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Rust stable         ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Rust 1.19.0         ]   | info: using existing install for '1.19.0-x86_64-unknown-linux-gnu'\n[CI/Rust 1.27.0         ]   | info: using existing install for '1.27.0-x86_64-unknown-linux-gnu'\n[CI/Rust 1.19.0         ]   | info: default toolchain set to '1.19.0-x86_64-unknown-linux-gnu'\n[CI/Rust 1.19.0         ]   | \n[CI/Rust 1.27.0         ]   | \n[CI/Rust 1.27.0         ]   | info: default toolchain set to '1.27.0-x86_64-unknown-linux-gnu'\n[CI/Rust 1.27.0         ]   |   1.27.0-x86_64-unknown-linux-gnu unchanged - rustc 1.27.0 (3eda71b00 2018-06-19)\n[CI/Rust 1.27.0         ]   | \n[CI/Rust 1.27.0         ]   \u2705  Success - Main rustup default 1.27.0\n[CI/Rust 1.19.0         ]   |   1.19.0-x86_64-unknown-linux-gnu unchanged - rustc 1.19.0 (0ade33941 2017-07-17)\n[CI/Rust 1.19.0         ]   | \n[CI/Rust 1.19.0         ]   \u2705  Success - Main rustup default 1.19.0\n[CI/Rust stable         ]   \u2699  ::set-output:: cachekey=2023041684c8\n[CI/Rust nightly        ]   \u2699  ::set-output:: cachekey=202305294985\n[CI/Test suite          ]   \u2699  ::set-output:: cachekey=202305294985\n[CI/Test suite          ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Rust 1.19.0         ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +1.19.0 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +1.19.0 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Rust nightly        ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Rust 1.27.0         ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +1.27.0 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +1.27.0 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Rust 1.56.0         ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +1.56.0 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +1.56.0 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Test suite (windows)] \u2b50 Run Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Rust 1.36.0         ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +1.36.0 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +1.36.0 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Miri                ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Rust stable         ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Test suite          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/Rust nightly        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/Test suite (windows)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/Rust 1.36.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/Rust 1.19.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/Miri                ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/Rust 1.27.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/Rust 1.56.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/Rust nightly        ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Test suite          ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Rust 1.56.0         ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +1.56.0 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +1.56.0 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Miri                ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Test suite          ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/Rust nightly        ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/Rust 1.27.0         ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +1.27.0 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +1.27.0 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Rust 1.36.0         ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +1.36.0 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +1.36.0 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Rust 1.19.0         ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +1.19.0 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +1.19.0 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Test suite (windows)]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Rust stable         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/Rust stable         ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Rust stable         ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/Rust 1.36.0         ]   \u2699  ::set-output:: cachekey=20190703a53f\n[CI/Miri                ]   \u2699  ::set-output:: cachekey=202305294985\n[CI/Rust 1.56.0         ]   \u2699  ::set-output:: cachekey=2021101809c4\n[CI/Rust 1.27.0         ]   \u2699  ::set-output:: cachekey=201806193eda\n[CI/Rust 1.19.0         ]   \u2699  ::set-output:: cachekey=201707170ade\n[CI/Test suite (windows)]   \u2699  ::set-output:: cachekey=202305294985\n[CI/Rust nightly        ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Test suite          ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Rust 1.19.0         ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Miri                ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Rust 1.36.0         ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Rust stable         ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Rust 1.56.0         ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Test suite (windows)] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Rust 1.27.0         ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Rust nightly        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[CI/Miri                ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/Rust 1.19.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/Rust 1.36.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/Rust 1.27.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/Rust stable         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[CI/Test suite (windows)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/Rust 1.56.0         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/Rust 1.56.0         ]   \u274c  Failure - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Rust 1.56.0         ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/f29f5c20504a77e3f0fdf5ee9e79b16024d0994c1ead440ea896e97451116df9/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Test suite (windows)]   \u274c  Failure - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Test suite (windows)] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/3f7f108942e827df505ec1f5ca0fd3babedecfc95299844fef78693868cb68b1/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Rust stable         ]   \u274c  Failure - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Rust stable         ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/977d5ec2b7f41d49a846fce648845a6a8c2714540be3eaaf07adf3c7a071aeb0/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Rust 1.36.0         ]   \u274c  Failure - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Rust 1.36.0         ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/c08489814069a64d698eca341606d9e8d7a82f97ceaab7fcf6e4cb395721b59b/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Rust nightly        ]   \u274c  Failure - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Miri                ]   \u274c  Failure - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Rust 1.19.0         ]   \u274c  Failure - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Test suite          ]   \u274c  Failure - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Rust 1.27.0         ]   \u274c  Failure - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Rust nightly        ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/023f13a268a77154e140710b588dda18d46582cc45d915a831aaf75c00b5c95e/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Rust 1.19.0         ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/28df9e247e9f52992244c35bf72b0dfbe11e232ab4526b53a7a30486978a7ff9/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Rust 1.27.0         ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/f712ca167acc7d71b365f6148487c08c46afc0ea1b73d7117cd441f1451bc58b/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Miri                ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/83376dc285ebecd757996a92decf2661cf392e1caeab42c0386f97d4e4675354/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Test suite          ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/0c47b6277d3345ffe448930f5c468ab8e877a5e70884e254dda64456e30cd78e/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Test suite (windows)]   \u2699  ::set-output:: cachekey=202305294985\n[CI/Test suite (windows)]   \u2699  ::set-output:: name=nightly\n[CI/Test suite (windows)]   \u274c  Failure - Main dtolnay/rust-toolchain@nightly\n[CI/Test suite (windows)] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/3f7f108942e827df505ec1f5ca0fd3babedecfc95299844fef78693868cb68b1/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Rust stable         ]   \u2699  ::set-output:: cachekey=2023041684c8\n[CI/Rust stable         ]   \u2699  ::set-output:: name=stable\n[CI/Rust stable         ]   \u274c  Failure - Main dtolnay/rust-toolchain@master\n[CI/Rust 1.56.0         ]   \u2699  ::set-output:: cachekey=2021101809c4\n[CI/Rust stable         ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/977d5ec2b7f41d49a846fce648845a6a8c2714540be3eaaf07adf3c7a071aeb0/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Rust 1.56.0         ]   \u2699  ::set-output:: name=1.56.0\n[CI/Rust 1.56.0         ]   \u274c  Failure - Main dtolnay/rust-toolchain@1.56.0\n[CI/Rust 1.56.0         ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/f29f5c20504a77e3f0fdf5ee9e79b16024d0994c1ead440ea896e97451116df9/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Test suite          ]   \u2699  ::set-output:: cachekey=202305294985\n[CI/Test suite          ]   \u2699  ::set-output:: name=nightly\n[CI/Test suite          ]   \u274c  Failure - Main dtolnay/rust-toolchain@nightly\n[CI/Test suite          ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/0c47b6277d3345ffe448930f5c468ab8e877a5e70884e254dda64456e30cd78e/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Rust 1.27.0         ]   \u2699  ::set-output:: cachekey=201806193eda\n[CI/Rust 1.36.0         ]   \u2699  ::set-output:: cachekey=20190703a53f\n[CI/Rust 1.27.0         ]   \u2699  ::set-output:: name=1.27.0\n[CI/Rust 1.27.0         ]   \u274c  Failure - Main dtolnay/rust-toolchain@master\n[CI/Rust 1.36.0         ]   \u2699  ::set-output:: name=1.36.0\n[CI/Rust 1.36.0         ]   \u274c  Failure - Main dtolnay/rust-toolchain@1.36.0\n[CI/Rust 1.27.0         ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/f712ca167acc7d71b365f6148487c08c46afc0ea1b73d7117cd441f1451bc58b/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Rust 1.36.0         ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/c08489814069a64d698eca341606d9e8d7a82f97ceaab7fcf6e4cb395721b59b/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Miri                ]   \u2699  ::set-output:: cachekey=202305294985\n[CI/Miri                ]   \u2699  ::set-output:: name=nightly\n[CI/Miri                ]   \u274c  Failure - Main dtolnay/rust-toolchain@miri\n[CI/Rust nightly        ]   \u2699  ::set-output:: cachekey=202305294985\n[CI/Rust nightly        ]   \u2699  ::set-output:: name=nightly\n[CI/Rust nightly        ]   \u274c  Failure - Main dtolnay/rust-toolchain@nightly\n[CI/Miri                ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/83376dc285ebecd757996a92decf2661cf392e1caeab42c0386f97d4e4675354/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Rust 1.19.0         ]   \u2699  ::set-output:: cachekey=201707170ade\n[CI/Rust 1.19.0         ]   \u2699  ::set-output:: name=1.19.0\n[CI/Rust 1.19.0         ]   \u274c  Failure - Main dtolnay/rust-toolchain@master\n[CI/Rust nightly        ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/023f13a268a77154e140710b588dda18d46582cc45d915a831aaf75c00b5c95e/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Rust 1.19.0         ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/28df9e247e9f52992244c35bf72b0dfbe11e232ab4526b53a7a30486978a7ff9/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Rust stable         ] \u2b50 Run Post dtolnay/rust-toolchain@master\n[CI/Test suite (windows)] \u2b50 Run Post dtolnay/rust-toolchain@nightly\n[CI/Rust 1.56.0         ] \u2b50 Run Post dtolnay/rust-toolchain@1.56.0\n[CI/Rust nightly        ] \u2b50 Run Post dtolnay/rust-toolchain@nightly\n[CI/Rust 1.36.0         ] \u2b50 Run Post dtolnay/rust-toolchain@1.36.0\n[CI/Miri                ] \u2b50 Run Post dtolnay/rust-toolchain@miri\n[CI/Test suite          ] \u2b50 Run Post dtolnay/rust-toolchain@nightly\n[CI/Rust 1.27.0         ] \u2b50 Run Post dtolnay/rust-toolchain@master\n[CI/Rust 1.19.0         ] \u2b50 Run Post dtolnay/rust-toolchain@master\n[CI/Test suite (windows)]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[CI/Rust 1.56.0         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@1.56.0/ dst=/var/run/act/actions/dtolnay-rust-toolchain@1.56.0/\n[CI/Rust 1.27.0         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[CI/Rust nightly        ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[CI/Rust 1.19.0         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[CI/Rust 1.36.0         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@1.36.0/ dst=/var/run/act/actions/dtolnay-rust-toolchain@1.36.0/\n[CI/Miri                ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@miri/ dst=/var/run/act/actions/dtolnay-rust-toolchain@miri/\n[CI/Rust stable         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[CI/Rust 1.19.0         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[CI/Rust stable         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[CI/Rust 1.27.0         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[CI/Rust nightly        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@nightly/] user=0 workdir=\n[CI/Rust 1.56.0         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@1.56.0/] user=0 workdir=\n[CI/Test suite (windows)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@nightly/] user=0 workdir=\n[CI/Miri                ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@miri/] user=0 workdir=\n[CI/Rust 1.36.0         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@1.36.0/] user=0 workdir=\n[CI/Rust stable         ]   \u2705  Success - Post dtolnay/rust-toolchain@master\n[CI/Test suite (windows)]   \u2705  Success - Post dtolnay/rust-toolchain@nightly\n[CI/Miri                ]   \u2705  Success - Post dtolnay/rust-toolchain@miri\n[CI/Rust 1.19.0         ]   \u2705  Success - Post dtolnay/rust-toolchain@master\n[CI/Rust 1.36.0         ]   \u2705  Success - Post dtolnay/rust-toolchain@1.36.0\n[CI/Rust 1.27.0         ]   \u2705  Success - Post dtolnay/rust-toolchain@master\n[CI/Rust nightly        ]   \u2705  Success - Post dtolnay/rust-toolchain@nightly\n[CI/Rust 1.56.0         ]   \u2705  Success - Post dtolnay/rust-toolchain@1.56.0\n[CI/Rust 1.19.0         ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/Test suite (windows)]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/Rust stable         ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[CI/Miri                ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/Rust 1.56.0         ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/Rust nightly        ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[CI/Rust 1.36.0         ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/Rust 1.27.0         ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/Rust 1.56.0         ] \ud83c\udfc1  Job succeeded\n[CI/Rust nightly        ] \ud83c\udfc1  Job succeeded\n[CI/Rust 1.27.0         ] \ud83c\udfc1  Job succeeded\n[CI/Rust 1.19.0         ] \ud83c\udfc1  Job succeeded\n[CI/Rust 1.36.0         ] \ud83c\udfc1  Job succeeded\n[CI/Rust stable         ] \ud83c\udfc1  Job succeeded\n[CI/Miri                ] \ud83c\udfc1  Job succeeded\n[CI/Test suite (windows)] \ud83c\udfc1  Job succeeded\n[CI/Test suite          ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[CI/Test suite          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@nightly/] user=0 workdir=\n[CI/Test suite          ]   \u2705  Success - Post dtolnay/rust-toolchain@nightly\n[CI/Test suite          ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}