{
    "repository": "prisma/tiberius",
    "clone_url": "https://github.com/prisma/tiberius.git",
    "timestamp": "2023-05-30T09:27:21.715181Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Cargo tests/cargo-test-macos  ] \ud83d\ude80  Start image=crawlergpt:latest\n[Cargo tests/clippy            ] \ud83d\ude80  Start image=crawlergpt:latest\n[Cargo tests/cargo-test-linux  ] \ud83d\ude80  Start image=crawlergpt:latest\n[Cargo tests/format            ] \ud83d\ude80  Start image=crawlergpt:latest\n[Cargo tests/cargo-test-windows] \ud83d\ude80  Start image=crawlergpt:latest\n[Cargo tests/clippy            ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Cargo tests/cargo-test-macos  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Cargo tests/cargo-test-linux  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Cargo tests/format            ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Cargo tests/clippy            ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Cargo tests/cargo-test-macos  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Cargo tests/format            ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Cargo tests/cargo-test-linux  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Cargo tests/clippy            ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Cargo tests/cargo-test-macos  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Cargo tests/cargo-test-linux  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Cargo tests/format            ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Cargo tests/clippy            ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/prisma-tiberius] user=0 workdir=\n[Cargo tests/cargo-test-linux  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/prisma-tiberius] user=0 workdir=\n[Cargo tests/format            ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/prisma-tiberius] user=0 workdir=\n[Cargo tests/cargo-test-macos  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/prisma-tiberius] user=0 workdir=\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/prisma-tiberius] user=0 workdir=\n[Cargo tests/cargo-test-windows]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Cargo tests/format            ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Cargo tests/cargo-test-macos  ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Cargo tests/clippy            ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Cargo tests/cargo-test-linux  ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Cargo tests/cargo-test-windows]   \u2601  git clone 'https://github.com/potatoqualitee/psmodulecache' # ref=v1\n[Cargo tests/format            ]   \u2601  git clone 'https://github.com/mbrobbel/rustfmt-check' # ref=master\n[Cargo tests/cargo-test-macos  ] Unable to checkout 16499b5e05bf2e26879000db0c1d13f7e13fa3af: EOF\n[Cargo tests/clippy            ]   \u2601  git clone 'https://github.com/actions-rs/clippy-check' # ref=v1\n[Cargo tests/clippy            ] \u2b50 Run Main actions/checkout@v1\n[Cargo tests/cargo-test-linux  ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[Cargo tests/clippy            ]   \u2705  Success - Main actions/checkout@v1\n[Cargo tests/cargo-test-windows] \u2b50 Run Pre Set required PowerShell modules\n[Cargo tests/cargo-test-windows]   \u2705  Success - Pre Set required PowerShell modules\n[Cargo tests/clippy            ] \u2b50 Run Main actions-rs/toolchain@v1\n[Cargo tests/clippy            ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Cargo tests/clippy            ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Cargo tests/cargo-test-windows]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[Cargo tests/format            ] \u2b50 Run Main actions/checkout@v2\n[Cargo tests/format            ]   \u2705  Success - Main actions/checkout@v2\n[Cargo tests/cargo-test-linux  ] \ud83e\uddea  Matrix: map[database:2017 features:--features=all]\n[Cargo tests/cargo-test-linux  ] \u2b50 Run Main actions/checkout@v2\n[Cargo tests/cargo-test-linux  ]   \u2705  Success - Main actions/checkout@v2\n[Cargo tests/format            ] \u2b50 Run Main actions-rs/toolchain@v1\n[Cargo tests/cargo-test-windows]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[Cargo tests/format            ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Cargo tests/format            ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Cargo tests/cargo-test-linux  ] \u2b50 Run Main actions-rs/toolchain@v1\n[Cargo tests/cargo-test-windows]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[Cargo tests/cargo-test-linux  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Cargo tests/cargo-test-linux  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Cargo tests/cargo-test-windows] \ud83e\uddea  Matrix: map[database:2019 features:--features=all]\n[Cargo tests/cargo-test-windows] \u2b50 Run Main actions/checkout@v2\n[Cargo tests/cargo-test-windows]   \u2705  Success - Main actions/checkout@v2\n[Cargo tests/cargo-test-windows] \u2b50 Run Main actions-rs/toolchain@v1\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Cargo tests/cargo-test-macos  ] \ud83c\udfc1  Job succeeded\n[Cargo tests/clippy            ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Cargo tests/format            ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Cargo tests/cargo-test-linux  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Cargo tests/clippy            ]   \ud83d\udcac  ::debug::using toolchain from rust-toolchain file: stable\n[Cargo tests/clippy            ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Cargo tests/clippy            ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Cargo tests/clippy            ]   \ud83d\udcac  ::debug::Destination /tmp/0aa1c0fd-c84c-4b60-bb20-e0a5a7a2c17a\n[Cargo tests/clippy            ]   \ud83d\udcac  ::debug::download complete\n[Cargo tests/clippy            ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/0aa1c0fd-c84c-4b60-bb20-e0a5a7a2c17a\n[Cargo tests/clippy            ]   | [command]/tmp/0aa1c0fd-c84c-4b60-bb20-e0a5a7a2c17a --default-toolchain none -y\n[Cargo tests/clippy            ]   | info: downloading installer\n[Cargo tests/format            ]   \ud83d\udcac  ::debug::using toolchain from rust-toolchain file: stable\n[Cargo tests/format            ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Cargo tests/format            ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Cargo tests/format            ]   \ud83d\udcac  ::debug::Destination /tmp/e00ab1f3-e357-4774-a754-eb64e87a4429\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::using toolchain from rust-toolchain file: stable\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::Destination /tmp/7e328391-0877-426d-9b6e-16bf841643b6\n[Cargo tests/cargo-test-linux  ]   \ud83d\udcac  ::debug::using toolchain from rust-toolchain file: stable\n[Cargo tests/cargo-test-linux  ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Cargo tests/cargo-test-linux  ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Cargo tests/cargo-test-linux  ]   \ud83d\udcac  ::debug::Destination /tmp/c8e72aec-5a77-4a5b-aad0-008dbef8acb5\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::download complete\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/7e328391-0877-426d-9b6e-16bf841643b6\n[Cargo tests/cargo-test-windows]   | [command]/tmp/7e328391-0877-426d-9b6e-16bf841643b6 --default-toolchain none -y\n[Cargo tests/cargo-test-linux  ]   \ud83d\udcac  ::debug::download complete\n[Cargo tests/cargo-test-linux  ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/c8e72aec-5a77-4a5b-aad0-008dbef8acb5\n[Cargo tests/cargo-test-linux  ]   | [command]/tmp/c8e72aec-5a77-4a5b-aad0-008dbef8acb5 --default-toolchain none -y\n[Cargo tests/cargo-test-windows]   | info: downloading installer\n[Cargo tests/cargo-test-linux  ]   | info: downloading installer\n[Cargo tests/cargo-test-windows]   | info: profile set to 'default'\n[Cargo tests/cargo-test-windows]   | info: default host triple is x86_64-unknown-linux-gnu\n[Cargo tests/cargo-test-windows]   | info: skipping toolchain installation\n[Cargo tests/cargo-test-windows]   | \n[Cargo tests/cargo-test-windows]   | \n[Cargo tests/cargo-test-windows]   | Rust is installed now. Great!\n[Cargo tests/cargo-test-windows]   | \n[Cargo tests/cargo-test-windows]   | To get started you may need to restart your current shell.\n[Cargo tests/cargo-test-windows]   | This would reload your PATH environment variable to include\n[Cargo tests/cargo-test-windows]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Cargo tests/cargo-test-windows]   | \n[Cargo tests/cargo-test-windows]   | To configure your current shell, run:\n[Cargo tests/cargo-test-windows]   | source \"$HOME/.cargo/env\"\n[Cargo tests/cargo-test-windows]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Cargo tests/cargo-test-linux  ]   | info: profile set to 'default'\n[Cargo tests/cargo-test-linux  ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Cargo tests/cargo-test-linux  ]   | info: skipping toolchain installation\n[Cargo tests/cargo-test-linux  ]   | \n[Cargo tests/cargo-test-linux  ]   | \n[Cargo tests/cargo-test-linux  ]   | Rust is installed now. Great!\n[Cargo tests/cargo-test-linux  ]   | \n[Cargo tests/cargo-test-linux  ]   | To get started you may need to restart your current shell.\n[Cargo tests/cargo-test-linux  ]   | This would reload your PATH environment variable to include\n[Cargo tests/cargo-test-linux  ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Cargo tests/cargo-test-linux  ]   | \n[Cargo tests/cargo-test-linux  ]   | To configure your current shell, run:\n[Cargo tests/cargo-test-linux  ]   | source \"$HOME/.cargo/env\"\n[Cargo tests/cargo-test-windows]   | Default host: x86_64-unknown-linux-gnu\n[Cargo tests/cargo-test-windows]   | rustup home:  /home/runneradmin/.rustup\n[Cargo tests/cargo-test-windows]   | \n[Cargo tests/cargo-test-windows]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Cargo tests/cargo-test-linux  ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Cargo tests/cargo-test-linux  ]   | Default host: x86_64-unknown-linux-gnu\n[Cargo tests/cargo-test-linux  ]   | rustup home:  /home/runneradmin/.rustup\n[Cargo tests/cargo-test-linux  ]   | \n[Cargo tests/cargo-test-linux  ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Cargo tests/clippy            ]   | info: profile set to 'default'\n[Cargo tests/clippy            ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Cargo tests/clippy            ]   | info: skipping toolchain installation\n[Cargo tests/clippy            ]   | \n[Cargo tests/clippy            ]   | \n[Cargo tests/clippy            ]   | Rust is installed now. Great!\n[Cargo tests/clippy            ]   | \n[Cargo tests/clippy            ]   | To get started you may need to restart your current shell.\n[Cargo tests/clippy            ]   | This would reload your PATH environment variable to include\n[Cargo tests/clippy            ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Cargo tests/clippy            ]   | \n[Cargo tests/clippy            ]   | To configure your current shell, run:\n[Cargo tests/clippy            ]   | source \"$HOME/.cargo/env\"\n[Cargo tests/clippy            ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Cargo tests/clippy            ]   | Default host: x86_64-unknown-linux-gnu\n[Cargo tests/clippy            ]   | rustup home:  /home/runneradmin/.rustup\n[Cargo tests/clippy            ]   | \n[Cargo tests/clippy            ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Cargo tests/cargo-test-windows]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/cargo-test-windows]   | info: downloading component 'cargo'\n[Cargo tests/cargo-test-linux  ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/cargo-test-linux  ]   | info: downloading component 'cargo'\n[Cargo tests/cargo-test-windows]   | info: downloading component 'clippy'\n[Cargo tests/cargo-test-windows]   | info: downloading component 'rust-docs'\n[Cargo tests/cargo-test-linux  ]   | info: downloading component 'clippy'\n[Cargo tests/cargo-test-linux  ]   | info: downloading component 'rust-docs'\n[Cargo tests/cargo-test-windows]   | info: downloading component 'rust-std'\n[Cargo tests/cargo-test-linux  ]   | info: downloading component 'rust-std'\n[Cargo tests/cargo-test-windows]   | info: downloading component 'rustc'\n[Cargo tests/format            ]   \ud83d\udcac  ::debug::download complete\n[Cargo tests/format            ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/e00ab1f3-e357-4774-a754-eb64e87a4429\n[Cargo tests/format            ]   | [command]/tmp/e00ab1f3-e357-4774-a754-eb64e87a4429 --default-toolchain none -y\n[Cargo tests/format            ]   | info: downloading installer\n[Cargo tests/cargo-test-linux  ]   | info: downloading component 'rustc'\n[Cargo tests/format            ]   | info: profile set to 'default'\n[Cargo tests/format            ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Cargo tests/format            ]   | info: skipping toolchain installation\n[Cargo tests/format            ]   | \n[Cargo tests/format            ]   | \n[Cargo tests/format            ]   | Rust is installed now. Great!\n[Cargo tests/format            ]   | \n[Cargo tests/format            ]   | To get started you may need to restart your current shell.\n[Cargo tests/format            ]   | This would reload your PATH environment variable to include\n[Cargo tests/format            ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Cargo tests/format            ]   | \n[Cargo tests/format            ]   | To configure your current shell, run:\n[Cargo tests/format            ]   | source \"$HOME/.cargo/env\"\n[Cargo tests/format            ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Cargo tests/format            ]   | Default host: x86_64-unknown-linux-gnu\n[Cargo tests/format            ]   | rustup home:  /home/runneradmin/.rustup\n[Cargo tests/format            ]   | \n[Cargo tests/format            ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Cargo tests/format            ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/format            ]   | info: downloading component 'cargo'\n[Cargo tests/cargo-test-windows]   | info: downloading component 'rustfmt'\n[Cargo tests/format            ]   | info: downloading component 'clippy'\n[Cargo tests/cargo-test-windows]   | info: installing component 'cargo'\n[Cargo tests/format            ]   | info: downloading component 'rust-docs'\n[Cargo tests/format            ]   | info: downloading component 'rust-std'\n[Cargo tests/cargo-test-linux  ]   | info: downloading component 'rustfmt'\n[Cargo tests/cargo-test-linux  ]   | info: installing component 'cargo'\n[Cargo tests/cargo-test-windows]   | info: installing component 'clippy'\n[Cargo tests/format            ]   | info: downloading component 'rustc'\n[Cargo tests/cargo-test-windows]   | info: installing component 'rust-docs'\n[Cargo tests/cargo-test-linux  ]   | info: installing component 'clippy'\n[Cargo tests/cargo-test-linux  ]   | info: installing component 'rust-docs'\n[Cargo tests/format            ]   | info: downloading component 'rustfmt'\n[Cargo tests/format            ]   | info: installing component 'cargo'\n[Cargo tests/clippy            ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/clippy            ]   | info: downloading component 'cargo'\n[Cargo tests/cargo-test-windows]   | info: installing component 'rust-std'\n[Cargo tests/clippy            ]   | info: downloading component 'clippy'\n[Cargo tests/format            ]   | info: installing component 'clippy'\n[Cargo tests/clippy            ]   | info: downloading component 'rust-docs'\n[Cargo tests/cargo-test-linux  ]   | info: installing component 'rust-std'\n[Cargo tests/format            ]   | info: installing component 'rust-docs'\n[Cargo tests/clippy            ]   | info: downloading component 'rust-std'\n[Cargo tests/clippy            ]   | info: downloading component 'rustc'\n[Cargo tests/cargo-test-windows]   | info: installing component 'rustc'\n[Cargo tests/format            ]   | info: installing component 'rust-std'\n[Cargo tests/cargo-test-linux  ]   | info: installing component 'rustc'\n[Cargo tests/clippy            ]   | info: downloading component 'rustfmt'\n[Cargo tests/clippy            ]   | info: installing component 'cargo'\n[Cargo tests/clippy            ]   | info: installing component 'clippy'\n[Cargo tests/clippy            ]   | info: installing component 'rust-docs'\n[Cargo tests/format            ]   | info: installing component 'rustc'\n[Cargo tests/cargo-test-windows]   | info: installing component 'rustfmt'\n[Cargo tests/cargo-test-windows]   | stable-x86_64-unknown-linux-gnu (overridden by '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/prisma-tiberius/rust-toolchain')\n[Cargo tests/cargo-test-windows]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/cargo-test-windows]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[Cargo tests/cargo-test-windows]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Cargo tests/clippy            ]   | info: installing component 'rust-std'\n[Cargo tests/cargo-test-windows]   | \n[Cargo tests/cargo-test-windows]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/cargo-test-windows]   | \n[Cargo tests/cargo-test-windows]   | info: checking for self-update\n[Cargo tests/cargo-test-windows]   \u2753  ::group::Gathering installed versions\n[Cargo tests/cargo-test-windows]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Cargo tests/cargo-test-windows]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/cargo-test-windows]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/cargo-test-windows]   \u2699  ::set-output:: rustc_hash=84c898d65\n[Cargo tests/cargo-test-windows]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Cargo tests/cargo-test-windows]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[Cargo tests/cargo-test-windows]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[Cargo tests/cargo-test-windows]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Cargo tests/cargo-test-windows]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Cargo tests/cargo-test-windows]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Cargo tests/cargo-test-windows]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Cargo tests/cargo-test-windows]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Cargo tests/cargo-test-windows]   \u2753  ::endgroup::\n[Cargo tests/cargo-test-windows]   \u2705  Success - Main actions-rs/toolchain@v1\n[Cargo tests/cargo-test-linux  ]   | info: installing component 'rustfmt'\n[Cargo tests/cargo-test-linux  ]   | stable-x86_64-unknown-linux-gnu (overridden by '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/prisma-tiberius/rust-toolchain')\n[Cargo tests/cargo-test-linux  ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/cargo-test-linux  ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[Cargo tests/cargo-test-windows]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Cargo tests/cargo-test-linux  ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Cargo tests/cargo-test-linux  ]   | \n[Cargo tests/cargo-test-windows] \u2b50 Run Main Set required PowerShell modules\n[Cargo tests/cargo-test-linux  ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/cargo-test-linux  ]   | \n[Cargo tests/cargo-test-linux  ]   | info: checking for self-update\n[Cargo tests/cargo-test-linux  ]   \u2753  ::group::Gathering installed versions\n[Cargo tests/cargo-test-linux  ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Cargo tests/cargo-test-linux  ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/cargo-test-linux  ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/cargo-test-linux  ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[Cargo tests/cargo-test-linux  ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Cargo tests/cargo-test-linux  ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[Cargo tests/cargo-test-linux  ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[Cargo tests/cargo-test-linux  ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Cargo tests/cargo-test-linux  ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Cargo tests/cargo-test-linux  ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/potatoqualitee-psmodulecache@v1/ dst=/var/run/act/actions/potatoqualitee-psmodulecache@v1/\n[Cargo tests/cargo-test-linux  ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Cargo tests/cargo-test-linux  ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Cargo tests/cargo-test-linux  ]   \u2753  ::endgroup::\n[Cargo tests/cargo-test-linux  ]   \u2705  Success - Main actions-rs/toolchain@v1\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/potatoqualitee-psmodulecache@v1/] user=0 workdir=\n[Cargo tests/cargo-test-linux  ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Cargo tests/cargo-test-linux  ] \u2b50 Run Main actions/cache@v2\n[Cargo tests/cargo-test-linux  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[Cargo tests/format            ]   | info: installing component 'rustfmt'\n[Cargo tests/cargo-test-linux  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[Cargo tests/clippy            ]   | info: installing component 'rustc'\n[Cargo tests/format            ]   | stable-x86_64-unknown-linux-gnu (overridden by '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/prisma-tiberius/rust-toolchain')\n[Cargo tests/format            ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/format            ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Cargo tests/format            ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Cargo tests/format            ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Cargo tests/format            ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Cargo tests/format            ]   | Installed rustup 1.26.0 support components\n[Cargo tests/format            ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable --component rustfmt\n[Cargo tests/format            ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Cargo tests/format            ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/format            ]   | info: component 'rustfmt' for target 'x86_64-unknown-linux-gnu' is up to date\n[Cargo tests/format            ]   | \n[Cargo tests/format            ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/format            ]   | \n[Cargo tests/format            ]   | info: checking for self-update\n[Cargo tests/format            ]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[Cargo tests/format            ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Cargo tests/format            ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/prisma-tiberius' set to 'stable-x86_64-unknown-linux-gnu'\n[Cargo tests/format            ]   | \n[Cargo tests/format            ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/format            ]   | \n[Cargo tests/format            ]   \u2753  ::group::Gathering installed versions\n[Cargo tests/format            ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Cargo tests/format            ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/format            ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/format            ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[Cargo tests/format            ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Cargo tests/format            ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[Cargo tests/format            ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[Cargo tests/format            ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Cargo tests/format            ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Cargo tests/format            ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Cargo tests/format            ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Cargo tests/format            ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Cargo tests/format            ]   \u2753  ::endgroup::\n[Cargo tests/format            ]   \u2705  Success - Main actions-rs/toolchain@v1\n[Cargo tests/format            ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Cargo tests/format            ] \u2b50 Run Main mbrobbel/rustfmt-check@master\n[Cargo tests/format            ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/mbrobbel-rustfmt-check@master/ dst=/var/run/act/actions/mbrobbel-rustfmt-check@master/\n[Cargo tests/format            ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/mbrobbel-rustfmt-check@master/] user=0 workdir=\n[Cargo tests/clippy            ]   | info: installing component 'rustfmt'\n[Cargo tests/clippy            ]   | stable-x86_64-unknown-linux-gnu (overridden by '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/prisma-tiberius/rust-toolchain')\n[Cargo tests/clippy            ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/clippy            ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Cargo tests/clippy            ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Cargo tests/clippy            ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Cargo tests/clippy            ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Cargo tests/clippy            ]   | Installed rustup 1.26.0 support components\n[Cargo tests/clippy            ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable --component clippy\n[Cargo tests/clippy            ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Cargo tests/clippy            ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/clippy            ]   | info: component 'clippy' for target 'x86_64-unknown-linux-gnu' is up to date\n[Cargo tests/clippy            ]   | \n[Cargo tests/clippy            ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/clippy            ]   | \n[Cargo tests/clippy            ]   | info: checking for self-update\n[Cargo tests/clippy            ]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[Cargo tests/clippy            ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Cargo tests/clippy            ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/prisma-tiberius' set to 'stable-x86_64-unknown-linux-gnu'\n[Cargo tests/clippy            ]   | \n[Cargo tests/clippy            ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/clippy            ]   | \n[Cargo tests/clippy            ]   \u2753  ::group::Gathering installed versions\n[Cargo tests/clippy            ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Cargo tests/clippy            ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/clippy            ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[Cargo tests/clippy            ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[Cargo tests/clippy            ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Cargo tests/clippy            ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[Cargo tests/clippy            ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[Cargo tests/clippy            ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Cargo tests/clippy            ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Cargo tests/clippy            ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Cargo tests/clippy            ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Cargo tests/clippy            ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Cargo tests/clippy            ]   \u2753  ::endgroup::\n[Cargo tests/clippy            ]   \u2705  Success - Main actions-rs/toolchain@v1\n[Cargo tests/clippy            ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Cargo tests/clippy            ] \u2b50 Run Main Install dependencies\n[Cargo tests/clippy            ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Cargo tests/cargo-test-linux  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[Cargo tests/format            ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/mbrobbel-rustfmt-check@master/dist/index.js] user= workdir=\n[Cargo tests/clippy            ]   | \n[Cargo tests/clippy            ]   | WARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n[Cargo tests/clippy            ]   | \n[Cargo tests/cargo-test-linux  ]   \ud83d\udcac  ::debug::Resolved Keys:\n[Cargo tests/cargo-test-linux  ]   \ud83d\udcac  ::debug::[\"Linux-cargo---features=all\"]\n[Cargo tests/cargo-test-linux  ]   \ud83d\udcac  ::debug::Checking zstd --version\n[Cargo tests/cargo-test-linux  ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[Cargo tests/cargo-test-linux  ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Cargo tests/format            ]   \u2757  ::error::Input required and not supplied: token\n[Cargo tests/format            ]   \u274c  Failure - Main mbrobbel/rustfmt-check@master\n[Cargo tests/cargo-test-windows] \u2b50 Run Main echo Gathering information for modules SqlServer.\n[Cargo tests/clippy            ]   | Reading package lists...\n[Cargo tests/clippy            ]   | Building dependency tree...\n[Cargo tests/clippy            ]   | Reading state information...\n[Cargo tests/clippy            ]   | libkrb5-dev is already the newest version (1.17-6ubuntu4.1).\n[Cargo tests/clippy            ]   | openssl is already the newest version (1.1.1f-1ubuntu2.8).\n[Cargo tests/clippy            ]   | openssl set to manually installed.\n[Cargo tests/clippy            ]   | 0 upgraded, 0 newly installed, 0 to remove and 20 not upgraded.\n[Cargo tests/clippy            ]   \u2705  Success - Main Install dependencies\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/psmodulecache-composite-intro.sh] user= workdir=\n[Cargo tests/format            ] exitcode '1': failure\n[Cargo tests/cargo-test-linux  ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Cargo tests/cargo-test-windows]   | Gathering information for modules SqlServer.\n[Cargo tests/cargo-test-windows]   \u2705  Success - Main echo Gathering information for modules SqlServer.\n[Cargo tests/clippy            ] \u2b50 Run Main actions-rs/clippy-check@v1\n[Cargo tests/clippy            ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-clippy-check@v1/ dst=/var/run/act/actions/actions-rs-clippy-check@v1/\n[Cargo tests/clippy            ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-clippy-check@v1/] user=0 workdir=\n[Cargo tests/clippy            ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-clippy-check@v1/dist/index.js] user= workdir=\n[Cargo tests/clippy            ]   \u2757  ::error::Input required and not supplied: token\n[Cargo tests/clippy            ]   \u274c  Failure - Main actions-rs/clippy-check@v1\n[Cargo tests/cargo-test-windows] \u2b50 Run Main Write-Output \"::set-output name=needed::$(/var/run/act/actions/potatoqualitee-psmodulecache@v1/main.ps1 -Type Needed -Module SqlServer)\"\nWrite-Output \"::set-output name=keygen::$(/var/run/act/actions/potatoqualitee-psmodulecache@v1/main.ps1 -Type KeyGen -Module SqlServer)\"\nWrite-Output \"::set-output name=modulepath::$(/var/run/act/actions/potatoqualitee-psmodulecache@v1/main.ps1 -Type ModulePath -Module SqlServer)\"\n[Cargo tests/cargo-test-linux  ]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[Cargo tests/cargo-test-linux  ]   \u2705  Success - Main actions/cache@v2\n[Cargo tests/cargo-test-linux  ]   \u2699  ::set-output:: cache-hit=false\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker exec cmd=[pwsh -command . /var/run/act/workflow/psmodulecache-composite-psoutput.ps1] user= workdir=\n[Cargo tests/clippy            ] exitcode '1': failure\n[Cargo tests/cargo-test-linux  ] \u2b50 Run Main Start SQL Server 2017\n[Cargo tests/clippy            ] \ud83c\udfc1  Job failed\n[Cargo tests/cargo-test-linux  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Cargo tests/format            ] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/f223277fe6f253a9282d73198cdceec3d05350dd327feaae3b250d61badfba5c?force=1&v=1\": context deadline exceeded\n[Cargo tests/format            ] \ud83c\udfc1  Job failed\n[Cargo tests/cargo-test-linux  ]   | [1027] Failed to execute script docker-compose\n[Cargo tests/cargo-test-linux  ]   | Traceback (most recent call last):\n[Cargo tests/cargo-test-linux  ]   |   File \"urllib3/connectionpool.py\", line 677, in urlopen\n[Cargo tests/cargo-test-linux  ]   |   File \"urllib3/connectionpool.py\", line 392, in _make_request\n[Cargo tests/cargo-test-linux  ]   |   File \"http/client.py\", line 1277, in request\n[Cargo tests/cargo-test-linux  ]   |   File \"http/client.py\", line 1323, in _send_request\n[Cargo tests/cargo-test-linux  ]   |   File \"http/client.py\", line 1272, in endheaders\n[Cargo tests/cargo-test-linux  ]   |   File \"http/client.py\", line 1032, in _send_output\n[Cargo tests/cargo-test-linux  ]   |   File \"http/client.py\", line 972, in send\n[Cargo tests/cargo-test-linux  ]   |   File \"docker/transport/unixconn.py\", line 43, in connect\n[Cargo tests/cargo-test-linux  ]   | PermissionError: [Errno 13] Permission denied\n[Cargo tests/cargo-test-linux  ]   | \n[Cargo tests/cargo-test-linux  ]   | During handling of the above exception, another exception occurred:\n[Cargo tests/cargo-test-linux  ]   | \n[Cargo tests/cargo-test-linux  ]   | Traceback (most recent call last):\n[Cargo tests/cargo-test-linux  ]   |   File \"requests/adapters.py\", line 449, in send\n[Cargo tests/cargo-test-linux  ]   |   File \"urllib3/connectionpool.py\", line 727, in urlopen\n[Cargo tests/cargo-test-linux  ]   |   File \"urllib3/util/retry.py\", line 410, in increment\n[Cargo tests/cargo-test-linux  ]   |   File \"urllib3/packages/six.py\", line 734, in reraise\n[Cargo tests/cargo-test-linux  ]   |   File \"urllib3/connectionpool.py\", line 677, in urlopen\n[Cargo tests/cargo-test-linux  ]   |   File \"urllib3/connectionpool.py\", line 392, in _make_request\n[Cargo tests/cargo-test-linux  ]   |   File \"http/client.py\", line 1277, in request\n[Cargo tests/cargo-test-linux  ]   |   File \"http/client.py\", line 1323, in _send_request\n[Cargo tests/cargo-test-linux  ]   |   File \"http/client.py\", line 1272, in endheaders\n[Cargo tests/cargo-test-linux  ]   |   File \"http/client.py\", line 1032, in _send_output\n[Cargo tests/cargo-test-linux  ]   |   File \"http/client.py\", line 972, in send\n[Cargo tests/cargo-test-linux  ]   |   File \"docker/transport/unixconn.py\", line 43, in connect\n[Cargo tests/cargo-test-linux  ]   | urllib3.exceptions.ProtocolError: ('Connection aborted.', PermissionError(13, 'Permission denied'))\n[Cargo tests/cargo-test-linux  ]   | \n[Cargo tests/cargo-test-linux  ]   | During handling of the above exception, another exception occurred:\n[Cargo tests/cargo-test-linux  ]   | \n[Cargo tests/cargo-test-linux  ]   | Traceback (most recent call last):\n[Cargo tests/cargo-test-linux  ]   |   File \"docker/api/client.py\", line 214, in _retrieve_server_version\n[Cargo tests/cargo-test-linux  ]   |   File \"docker/api/daemon.py\", line 181, in version\n[Cargo tests/cargo-test-linux  ]   |   File \"docker/utils/decorators.py\", line 46, in inner\n[Cargo tests/cargo-test-linux  ]   |   File \"docker/api/client.py\", line 237, in _get\n[Cargo tests/cargo-test-linux  ]   |   File \"requests/sessions.py\", line 543, in get\n[Cargo tests/cargo-test-linux  ]   |   File \"requests/sessions.py\", line 530, in request\n[Cargo tests/cargo-test-linux  ]   |   File \"requests/sessions.py\", line 643, in send\n[Cargo tests/cargo-test-linux  ]   |   File \"requests/adapters.py\", line 498, in send\n[Cargo tests/cargo-test-linux  ]   | requests.exceptions.ConnectionError: ('Connection aborted.', PermissionError(13, 'Permission denied'))\n[Cargo tests/cargo-test-linux  ]   | \n[Cargo tests/cargo-test-linux  ]   | During handling of the above exception, another exception occurred:\n[Cargo tests/cargo-test-linux  ]   | \n[Cargo tests/cargo-test-linux  ]   | Traceback (most recent call last):\n[Cargo tests/cargo-test-linux  ]   |   File \"docker-compose\", line 3, in <module>\n[Cargo tests/cargo-test-linux  ]   |   File \"compose/cli/main.py\", line 81, in main\n[Cargo tests/cargo-test-linux  ]   |   File \"compose/cli/main.py\", line 200, in perform_command\n[Cargo tests/cargo-test-linux  ]   |   File \"compose/cli/command.py\", line 70, in project_from_options\n[Cargo tests/cargo-test-linux  ]   |   File \"compose/cli/command.py\", line 153, in get_project\n[Cargo tests/cargo-test-linux  ]   |   File \"compose/cli/docker_client.py\", line 43, in get_client\n[Cargo tests/cargo-test-linux  ]   |   File \"compose/cli/docker_client.py\", line 170, in docker_client\n[Cargo tests/cargo-test-linux  ]   |   File \"docker/api/client.py\", line 197, in __init__\n[Cargo tests/cargo-test-linux  ]   |   File \"docker/api/client.py\", line 222, in _retrieve_server_version\n[Cargo tests/cargo-test-linux  ]   | docker.errors.DockerException: Error while fetching server API version: ('Connection aborted.', PermissionError(13, 'Permission denied'))\n[Cargo tests/cargo-test-linux  ]   \u274c  Failure - Main Start SQL Server 2017\n[Cargo tests/cargo-test-windows]   \u2699  ::set-output:: needed=SqlServer\n[Cargo tests/cargo-test-windows]   \u2699  ::set-output:: keygen=Unix-SqlServer\n[Cargo tests/cargo-test-windows]   \u2699  ::set-output:: modulepath=/home/runner/.local/share/powershell/Modules/\n[Cargo tests/cargo-test-windows]   \u2705  Success - Main Write-Output \"::set-output name=needed::$(/var/run/act/actions/potatoqualitee-psmodulecache@v1/main.ps1 -Type Needed -Module SqlServer)\"\nWrite-Output \"::set-output name=keygen::$(/var/run/act/actions/potatoqualitee-psmodulecache@v1/main.ps1 -Type KeyGen -Module SqlServer)\"\nWrite-Output \"::set-output name=modulepath::$(/var/run/act/actions/potatoqualitee-psmodulecache@v1/main.ps1 -Type ModulePath -Module SqlServer)\"\n[Cargo tests/cargo-test-linux  ] exitcode '255': failure\n[Cargo tests/cargo-test-windows]   \u2699  ::set-output:: modulepath=/home/runner/.local/share/powershell/Modules/\n[Cargo tests/cargo-test-windows]   \u2699  ::set-output:: modules-to-cache=SqlServer\n[Cargo tests/cargo-test-windows]   \u2699  ::set-output:: needed=SqlServer\n[Cargo tests/cargo-test-windows]   \u2699  ::set-output:: keygen=Unix-SqlServer\n[Cargo tests/cargo-test-windows]   \u2705  Success - Main Set required PowerShell modules\n[Cargo tests/cargo-test-windows] \u2b50 Run Main Setup PowerShell module cache\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[Cargo tests/cargo-test-linux  ] \ud83c\udfc1  Job failed\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::Resolved Keys:\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::[\"Unix-SqlServer\"]\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::Checking zstd --version\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Cargo tests/cargo-test-windows]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[Cargo tests/cargo-test-windows]   \u2705  Success - Main Setup PowerShell module cache\n[Cargo tests/cargo-test-windows]   \u2699  ::set-output:: cache-hit=false\n[Cargo tests/cargo-test-windows] \u2b50 Run Main Setup Chocolatey download cache\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::Resolved Keys:\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::[\"chocolatey-install\"]\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::Checking zstd --version\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Cargo tests/cargo-test-windows]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[Cargo tests/cargo-test-windows]   \u2705  Success - Main Setup Chocolatey download cache\n[Cargo tests/cargo-test-windows]   \u2699  ::set-output:: cache-hit=false\n[Cargo tests/cargo-test-windows] \u2b50 Run Main Setup Cargo build cache\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::Resolved Keys:\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::[\"Linux-cargo\"]\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::Checking zstd --version\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Cargo tests/cargo-test-windows]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Cargo tests/cargo-test-windows]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[Cargo tests/cargo-test-windows]   \u2705  Success - Main Setup Cargo build cache\n[Cargo tests/cargo-test-windows]   \u2699  ::set-output:: cache-hit=false\n[Cargo tests/cargo-test-windows] \u2b50 Run Main Install required PowerShell modules\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker exec cmd=[powershell -command . /var/run/act/workflow/6.ps1] user= workdir=\n[Cargo tests/cargo-test-windows]   | OCI runtime exec failed: exec failed: unable to start container process: exec: \"powershell\": executable file not found in $PATH: unknown\r\n[Cargo tests/cargo-test-windows]   \u274c  Failure - Main Install required PowerShell modules\n[Cargo tests/cargo-test-windows] exitcode '126': failure\n[Cargo tests/cargo-test-windows] \u2b50 Run Post Set required PowerShell modules\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/potatoqualitee-psmodulecache@v1/ dst=/var/run/act/actions/potatoqualitee-psmodulecache@v1/\n[Cargo tests/cargo-test-windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/potatoqualitee-psmodulecache@v1/] user=0 workdir=\n[Cargo tests/cargo-test-windows]   \u2705  Success - Post Set required PowerShell modules\n[Cargo tests/cargo-test-windows] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: context canceled\n"
}