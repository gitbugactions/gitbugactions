{
    "repository": "plausiblelabs/lens-rs",
    "clone_url": "https://github.com/plausiblelabs/lens-rs.git",
    "timestamp": "2023-05-30T09:10:12.245063Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Build/Test on Rust stable] \ud83d\ude80  Start image=crawlergpt:latest\n[Build/Test on Rust stable]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build/Test on Rust stable]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/Test on Rust stable]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/Test on Rust stable]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/plausiblelabs-lens-rs] user=0 workdir=\n[Build/Test on Rust stable]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Build/Test on Rust stable]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Build/Test on Rust stable]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Build/Test on Rust stable]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Build/Test on Rust stable]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Build/Test on Rust stable] \ud83e\uddea  Matrix: map[rust:stable]\n[Build/Test on Rust stable] \u2b50 Run Main Checkout\n[Build/Test on Rust stable]   \u2705  Success - Main Checkout\n[Build/Test on Rust stable] \u2b50 Run Main Install Rust Toolchain\n[Build/Test on Rust stable]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Build/Test on Rust stable]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Build/Test on Rust stable]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Build/Test on Rust stable]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[Build/Test on Rust stable]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Build/Test on Rust stable]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Build/Test on Rust stable]   \ud83d\udcac  ::debug::Destination /tmp/d3dd010b-1e08-469c-8ef0-c82444829d10\n[Build/Test on Rust stable]   \ud83d\udcac  ::debug::download complete\n[Build/Test on Rust stable]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/d3dd010b-1e08-469c-8ef0-c82444829d10\n[Build/Test on Rust stable]   | [command]/tmp/d3dd010b-1e08-469c-8ef0-c82444829d10 --default-toolchain none -y\n[Build/Test on Rust stable]   | info: downloading installer\n[Build/Test on Rust stable]   | info: profile set to 'default'\n[Build/Test on Rust stable]   | info: default host triple is x86_64-unknown-linux-gnu\n[Build/Test on Rust stable]   | info: skipping toolchain installation\n[Build/Test on Rust stable]   | \n[Build/Test on Rust stable]   | \n[Build/Test on Rust stable]   | Rust is installed now. Great!\n[Build/Test on Rust stable]   | \n[Build/Test on Rust stable]   | To get started you may need to restart your current shell.\n[Build/Test on Rust stable]   | This would reload your PATH environment variable to include\n[Build/Test on Rust stable]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Build/Test on Rust stable]   | \n[Build/Test on Rust stable]   | To configure your current shell, run:\n[Build/Test on Rust stable]   | source \"$HOME/.cargo/env\"\n[Build/Test on Rust stable]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Build/Test on Rust stable]   | Default host: x86_64-unknown-linux-gnu\n[Build/Test on Rust stable]   | rustup home:  /home/runneradmin/.rustup\n[Build/Test on Rust stable]   | \n[Build/Test on Rust stable]   | no active toolchain\n[Build/Test on Rust stable]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Build/Test on Rust stable]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Build/Test on Rust stable]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Build/Test on Rust stable]   | Installed rustup 1.26.0 support profiles\n[Build/Test on Rust stable]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Build/Test on Rust stable]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Build/Test on Rust stable]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Build/Test on Rust stable]   | Installed rustup 1.26.0 support components\n[Build/Test on Rust stable]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Build/Test on Rust stable]   | info: profile set to 'minimal'\n[Build/Test on Rust stable]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable --component rustfmt --component clippy\n[Build/Test on Rust stable]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Build/Test on Rust stable]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Build/Test on Rust stable]   | info: downloading component 'cargo'\n[Build/Test on Rust stable]   | info: downloading component 'clippy'\n[Build/Test on Rust stable]   | info: downloading component 'rust-std'\n[Build/Test on Rust stable]   | info: downloading component 'rustc'\n[Build/Test on Rust stable]   | info: downloading component 'rustfmt'\n[Build/Test on Rust stable]   | info: installing component 'cargo'\n[Build/Test on Rust stable]   | info: installing component 'clippy'\n[Build/Test on Rust stable]   | info: installing component 'rust-std'\n[Build/Test on Rust stable]   | info: installing component 'rustc'\n[Build/Test on Rust stable]   | info: installing component 'rustfmt'\n[Build/Test on Rust stable]   | \n[Build/Test on Rust stable]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Build/Test on Rust stable]   | \n[Build/Test on Rust stable]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Build/Test on Rust stable]   | info: checking for self-update\n[Build/Test on Rust stable]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[Build/Test on Rust stable]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Build/Test on Rust stable]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/plausiblelabs-lens-rs' set to 'stable-x86_64-unknown-linux-gnu'\n[Build/Test on Rust stable]   | \n[Build/Test on Rust stable]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Build/Test on Rust stable]   | \n[Build/Test on Rust stable]   \u2753  ::group::Gathering installed versions\n[Build/Test on Rust stable]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Build/Test on Rust stable]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Build/Test on Rust stable]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[Build/Test on Rust stable]   \u2699  ::set-output:: rustc_hash=84c898d65\n[Build/Test on Rust stable]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Build/Test on Rust stable]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[Build/Test on Rust stable]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[Build/Test on Rust stable]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Build/Test on Rust stable]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Build/Test on Rust stable]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Build/Test on Rust stable]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Build/Test on Rust stable]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Build/Test on Rust stable]   \u2753  ::endgroup::\n[Build/Test on Rust stable]   \u2705  Success - Main Install Rust Toolchain\n[Build/Test on Rust stable]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Build/Test on Rust stable] \u2b50 Run Main Build\n[Build/Test on Rust stable]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[Build/Test on Rust stable]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[Build/Test on Rust stable]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[Build/Test on Rust stable]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[Build/Test on Rust stable]   | [command]/home/runneradmin/.cargo/bin/cargo build\n[Build/Test on Rust stable]   |     Updating crates.io index\n[Build/Test on Rust stable]   |  Downloading crates ...\n[Build/Test on Rust stable]   |   Downloaded quote v1.0.28\n[Build/Test on Rust stable]   |   Downloaded syn v1.0.109\n[Build/Test on Rust stable]   |   Downloaded unicode-ident v1.0.9\n[Build/Test on Rust stable]   |   Downloaded proc-macro2 v1.0.59\n[Build/Test on Rust stable]   |   Downloaded proc-macro-hack v0.5.20+deprecated\n[Build/Test on Rust stable]   |    Compiling proc-macro2 v1.0.59\n[Build/Test on Rust stable]   |    Compiling quote v1.0.28\n[Build/Test on Rust stable]   |    Compiling unicode-ident v1.0.9\n[Build/Test on Rust stable]   |    Compiling syn v1.0.109\n[Build/Test on Rust stable]   |    Compiling proc-macro-hack v0.5.20+deprecated\n[Build/Test on Rust stable]   |    Compiling pl-lens-macros v1.0.1 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/plausiblelabs-lens-rs/lens-macros)\n[Build/Test on Rust stable]   |    Compiling pl-lens-derive v1.0.1 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/plausiblelabs-lens-rs/lens-derive)\n[Build/Test on Rust stable]   |    Compiling pl-lens v1.0.1 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/plausiblelabs-lens-rs)\n[Build/Test on Rust stable]   |     Finished dev [unoptimized + debuginfo] target(s) in 2m 05s\n[Build/Test on Rust stable]   \u2705  Success - Main Build\n[Build/Test on Rust stable] \u2b50 Run Main Check Format\n[Build/Test on Rust stable]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[Build/Test on Rust stable]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[Build/Test on Rust stable]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[Build/Test on Rust stable]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[Build/Test on Rust stable]   | [command]/home/runneradmin/.cargo/bin/cargo fmt --all -- --check\n[Build/Test on Rust stable]   \u2705  Success - Main Check Format\n[Build/Test on Rust stable] \u2b50 Run Main Lint\n[Build/Test on Rust stable]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[Build/Test on Rust stable]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[Build/Test on Rust stable]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[Build/Test on Rust stable]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[Build/Test on Rust stable]   | [command]/home/runneradmin/.cargo/bin/cargo clippy --all --all-targets --all-features -- -D warnings\n[Build/Test on Rust stable]   |     Checking unicode-ident v1.0.9\n[Build/Test on Rust stable]   |    Compiling pl-lens-macros v1.0.1 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/plausiblelabs-lens-rs/lens-macros)\n[Build/Test on Rust stable]   |    Compiling pl-lens-derive v1.0.1 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/plausiblelabs-lens-rs/lens-derive)\n[Build/Test on Rust stable]   | error: this expression creates a reference which is immediately dereferenced by the compiler\n[Build/Test on Rust stable]   |   --> lens-macros/src/lib.rs:24:34\n[Build/Test on Rust stable]   |    |\n[Build/Test on Rust stable]   | 24 |         match extract_lens_parts(&field_access) {\n[Build/Test on Rust stable]   |    |                                  ^^^^^^^^^^^^^ help: change this to: `field_access`\n[Build/Test on Rust stable]   |    |\n[Build/Test on Rust stable]   |    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n[Build/Test on Rust stable]   |    = note: `-D clippy::needless-borrow` implied by `-D warnings`\n[Build/Test on Rust stable]   | \n[Build/Test on Rust stable]   | error: this expression creates a reference which is immediately dereferenced by the compiler\n[Build/Test on Rust stable]   |    --> lens-macros/src/lib.rs:106:32\n[Build/Test on Rust stable]   |     |\n[Build/Test on Rust stable]   | 106 |             extract_lens_parts(&base_field_access)\n[Build/Test on Rust stable]   |     |                                ^^^^^^^^^^^^^^^^^^ help: change this to: `base_field_access`\n[Build/Test on Rust stable]   |     |\n[Build/Test on Rust stable]   |     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n[Build/Test on Rust stable]   | \n[Build/Test on Rust stable]   |     Checking proc-macro2 v1.0.59\n[Build/Test on Rust stable]   | error: could not compile `pl-lens-macros` due to 2 previous errors\n[Build/Test on Rust stable]   | warning: build failed, waiting for other jobs to finish...\n[Build/Test on Rust stable]   \u2757  ::error::The process '/home/runneradmin/.cargo/bin/cargo' failed with exit code 101\n[Build/Test on Rust stable]   \u274c  Failure - Main Lint\n[Build/Test on Rust stable] exitcode '1': failure\n[Build/Test on Rust stable] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Test on Rust ${{ matrix.rust }}' failed\n"
}