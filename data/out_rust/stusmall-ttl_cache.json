{
    "repository": "stusmall/ttl_cache",
    "clone_url": "https://github.com/stusmall/ttl_cache.git",
    "timestamp": "2023-05-30T09:13:16.738745Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[build/Format and Clippy] \ud83d\ude80  Start image=crawlergpt:latest\n[build/Test             ] \ud83d\ude80  Start image=crawlergpt:latest\n[build/Test             ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[build/Format and Clippy]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[build/Test             ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[build/Format and Clippy]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[build/Test             ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[build/Format and Clippy]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[build/Test             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stusmall-ttl_cache] user=0 workdir=\n[build/Test             ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[build/Test             ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[build/Test             ] \ud83e\uddea  Matrix: map[platform:ubuntu-latest]\n[build/Test             ] \u2b50 Run Main Checkout sources\n[build/Test             ]   \u2705  Success - Main Checkout sources\n[build/Test             ] \u2b50 Run Main Install Rust stable toolchain\n[build/Test             ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[build/Test             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[build/Test             ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[build/Format and Clippy]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stusmall-ttl_cache] user=0 workdir=\n[build/Test             ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[build/Test             ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[build/Test             ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[build/Test             ]   \ud83d\udcac  ::debug::Destination /tmp/78742800-e4ef-4622-be1f-dc3fb500f067\n[build/Test             ]   \ud83d\udcac  ::debug::download complete\n[build/Test             ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/78742800-e4ef-4622-be1f-dc3fb500f067\n[build/Test             ]   | [command]/tmp/78742800-e4ef-4622-be1f-dc3fb500f067 --default-toolchain none -y\n[build/Test             ]   | info: downloading installer\n[build/Test             ]   | info: profile set to 'default'\n[build/Test             ]   | info: default host triple is x86_64-unknown-linux-gnu\n[build/Test             ]   | info: skipping toolchain installation\n[build/Test             ]   | \n[build/Test             ]   | \n[build/Test             ]   | Rust is installed now. Great!\n[build/Test             ]   | \n[build/Test             ]   | To get started you may need to restart your current shell.\n[build/Test             ]   | This would reload your PATH environment variable to include\n[build/Test             ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[build/Test             ]   | \n[build/Test             ]   | To configure your current shell, run:\n[build/Test             ]   | source \"$HOME/.cargo/env\"\n[build/Test             ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[build/Test             ]   | Default host: x86_64-unknown-linux-gnu\n[build/Test             ]   | rustup home:  /home/runneradmin/.rustup\n[build/Test             ]   | \n[build/Test             ]   | no active toolchain\n[build/Test             ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[build/Test             ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[build/Test             ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[build/Test             ]   | Installed rustup 1.26.0 support profiles\n[build/Test             ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[build/Test             ]   | info: profile set to 'minimal'\n[build/Test             ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[build/Test             ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[build/Test             ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[build/Test             ]   | info: downloading component 'cargo'\n[build/Test             ]   | info: downloading component 'rust-std'\n[build/Test             ]   | info: downloading component 'rustc'\n[build/Format and Clippy]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[build/Format and Clippy] Unable to checkout 16499b5e05bf2e26879000db0c1d13f7e13fa3af: EOF\n[build/Test             ]   | info: installing component 'cargo'\n[build/Test             ]   | info: installing component 'rust-std'\n[build/Test             ]   | info: installing component 'rustc'\n[build/Test             ]   | \n[build/Test             ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[build/Test             ]   | \n[build/Test             ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[build/Test             ]   | info: checking for self-update\n[build/Test             ]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[build/Test             ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[build/Test             ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stusmall-ttl_cache' set to 'stable-x86_64-unknown-linux-gnu'\n[build/Test             ]   | \n[build/Test             ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[build/Test             ]   | \n[build/Test             ]   \u2753  ::group::Gathering installed versions\n[build/Test             ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[build/Test             ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[build/Test             ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[build/Test             ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[build/Test             ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[build/Test             ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[build/Test             ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[build/Test             ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[build/Test             ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[build/Test             ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[build/Test             ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[build/Test             ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[build/Test             ]   \u2753  ::endgroup::\n[build/Test             ]   \u2705  Success - Main Install Rust stable toolchain\n[build/Test             ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[build/Test             ] \u2b50 Run Main Run cargo test\n[build/Test             ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[build/Test             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[build/Format and Clippy] \ud83c\udfc1  Job succeeded\n[build/Test             ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[build/Test             ]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[build/Test             ]   | [command]/home/runneradmin/.cargo/bin/cargo test\n[build/Test             ]   |     Updating crates.io index\n[build/Test             ]   |  Downloading crates ...\n[build/Test             ]   |   Downloaded linked-hash-map v0.5.6\n[build/Test             ]   |    Compiling linked-hash-map v0.5.6\n[build/Test             ]   |    Compiling ttl_cache v0.5.1 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stusmall-ttl_cache)\n[build/Test             ]   |     Finished test [unoptimized + debuginfo] target(s) in 2m 48s\n[build/Test             ]   |      Running unittests src/lib.rs (target/debug/deps/ttl_cache-7e01cc05f3b6720a)\n[build/Test             ]   | \n[build/Test             ]   | running 0 tests\n[build/Test             ]   | \n[build/Test             ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[build/Test             ]   | \n[build/Test             ]   |      Running tests/test.rs (target/debug/deps/test-727527fdc6560c20)\n[build/Test             ]   | \n[build/Test             ]   | running 13 tests\n[build/Test             ]   | test test_change_capacity ... ok\n[build/Test             ]   | test test_clear ... ok\n[build/Test             ]   | test test_contains_key ... ok\n[build/Test             ]   | test test_get_mut_change ... ok\n[build/Test             ]   | test test_iter ... ok\n[build/Test             ]   | test test_pop ... ok\n[build/Test             ]   | test test_put_and_get ... ok\n[build/Test             ]   | test test_put_and_get_mut ... ok\n[build/Test             ]   | test test_put_update ... ok\n[build/Test             ]   | test test_remove ... ok\n[build/Test             ]   | test test_expire_value ... ok\n[build/Test             ]   | test test ... ok\n[build/Test             ]   | test test_iter_w_expired ... ok\n[build/Test             ]   | \n[build/Test             ]   | test result: ok. 13 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.20s\n[build/Test             ]   | \n[build/Test             ]   |    Doc-tests ttl_cache\n[build/Test             ]   | \n[build/Test             ]   | running 12 tests\n[build/Test             ]   | test src/lib.rs - TtlCache<K,V,S>::capacity (line 337) ... ok\n[build/Test             ]   | test src/lib.rs - VacantEntry<'a,K,V,S>::key (line 87) ... ok\n[build/Test             ]   | test src/lib.rs - TtlCache<K,V,S>::insert (line 202) ... ok\n[build/Test             ]   | test src/lib.rs - TtlCache<K,V>::new (line 142) ... ok\n[build/Test             ]   | test src/lib.rs - TtlCache<K,V,S>::get (line 227) ... ok\n[build/Test             ]   | test src/lib.rs - OccupiedEntry<'a,K,V,S>::key (line 47) ... ok\n[build/Test             ]   | test src/lib.rs - TtlCache<K,V,S>::contains_key (line 180) ... ok\n[build/Test             ]   | test src/lib.rs - TtlCache<K,V,S>::get_mut (line 268) ... ok\n[build/Test             ]   | test src/lib.rs - TtlCache<K,V,S>::iter_mut (line 438) ... ok\n[build/Test             ]   | test src/lib.rs - TtlCache<K,V,S>::remove (line 311) ... ok\n[build/Test             ]   | test src/lib.rs - TtlCache<K,V,S>::set_capacity (line 353) ... ok\n[build/Test             ]   | test src/lib.rs - TtlCache<K,V,S>::iter (line 413) ... ok\n[build/Test             ]   | \n[build/Test             ]   | test result: ok. 12 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.51s\n[build/Test             ]   | \n[build/Test             ]   \u2705  Success - Main Run cargo test\n[build/Test             ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: EOF\n"
}