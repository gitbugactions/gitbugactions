{
    "repository": "shepmaster/twox-hash",
    "clone_url": "https://github.com/shepmaster/twox-hash.git",
    "timestamp": "2023-05-30T08:42:05.507020Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Continuous integration/library            ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/compatibility-tests] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/big_endian         ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/no-std             ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/compatibility-tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/no-std             ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/big_endian         ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/library            ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/no-std             ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/compatibility-tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/library            ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/big_endian         ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/big_endian         ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/no-std             ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/compatibility-tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/library            ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/big_endian         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/shepmaster-twox-hash] user=0 workdir=\n[Continuous integration/library            ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/shepmaster-twox-hash] user=0 workdir=\n[Continuous integration/no-std             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/shepmaster-twox-hash] user=0 workdir=\n[Continuous integration/compatibility-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/shepmaster-twox-hash] user=0 workdir=\n[Continuous integration/no-std             ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous integration/library            ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous integration/compatibility-tests]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous integration/big_endian         ]   \u2601  git clone 'https://github.com/docker/setup-qemu-action' # ref=v1\n[Continuous integration/no-std             ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous integration/library            ] Unable to checkout 16499b5e05bf2e26879000db0c1d13f7e13fa3af: EOF\n[Continuous integration/compatibility-tests]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous integration/big_endian         ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous integration/compatibility-tests] \ud83e\uddea  Matrix: map[test:digest_0_8]\n[Continuous integration/no-std             ] \u2b50 Run Main actions/checkout@v2\n[Continuous integration/compatibility-tests] \u2b50 Run Main actions/checkout@v2\n[Continuous integration/big_endian         ] \u2b50 Run Main Checkout code\n[Continuous integration/no-std             ]   \u2705  Success - Main actions/checkout@v2\n[Continuous integration/compatibility-tests]   \u2705  Success - Main actions/checkout@v2\n[Continuous integration/big_endian         ]   \u2705  Success - Main Checkout code\n[Continuous integration/compatibility-tests] \u2b50 Run Main actions-rs/toolchain@v1\n[Continuous integration/no-std             ] \u2b50 Run Main actions-rs/toolchain@v1\n[Continuous integration/big_endian         ] \u2b50 Run Main Set up QEMU\n[Continuous integration/no-std             ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous integration/compatibility-tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous integration/big_endian         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/docker-setup-qemu-action@v1/ dst=/var/run/act/actions/docker-setup-qemu-action@v1/\n[Continuous integration/big_endian         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/docker-setup-qemu-action@v1/] user=0 workdir=\n[Continuous integration/no-std             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous integration/compatibility-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous integration/no-std             ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous integration/library            ] \ud83c\udfc1  Job succeeded\n[Continuous integration/big_endian         ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/docker-setup-qemu-action@v1/dist/index.js] user= workdir=\n[Continuous integration/compatibility-tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous integration/compatibility-tests]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[Continuous integration/compatibility-tests]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous integration/compatibility-tests]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous integration/compatibility-tests]   \ud83d\udcac  ::debug::Destination /tmp/841fd694-fb63-4726-8089-f36034409e22\n[Continuous integration/big_endian         ]   \u2753  ::group::Docker info\n[Continuous integration/big_endian         ]   | [command]/usr/bin/docker version\n[Continuous integration/no-std             ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[Continuous integration/no-std             ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous integration/no-std             ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous integration/no-std             ]   \ud83d\udcac  ::debug::Destination /tmp/ec69dee1-dd10-449f-9875-ce9774314aa5\n[Continuous integration/big_endian         ]   | Client:\n[Continuous integration/big_endian         ]   |  Version:           20.10.8+azure\n[Continuous integration/big_endian         ]   |  API version:       1.41\n[Continuous integration/big_endian         ]   |  Go version:        go1.16.7\n[Continuous integration/big_endian         ]   |  Git commit:        3967b7d28e15a020e4ee344283128ead633b3e0c\n[Continuous integration/big_endian         ]   |  Built:             Thu Jul 29 13:55:47 2021\n[Continuous integration/big_endian         ]   |  OS/Arch:           linux/amd64\n[Continuous integration/big_endian         ]   |  Context:           default\n[Continuous integration/big_endian         ]   |  Experimental:      true\n[Continuous integration/big_endian         ]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/version\": dial unix /var/run/docker.sock: connect: permission denied\n[Continuous integration/big_endian         ]   \u2757  ::error::The process '/usr/bin/docker' failed with exit code 1\n[Continuous integration/big_endian         ]   \u274c  Failure - Main Set up QEMU\n[Continuous integration/compatibility-tests]   \ud83d\udcac  ::debug::download complete\n[Continuous integration/compatibility-tests]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/841fd694-fb63-4726-8089-f36034409e22\n[Continuous integration/compatibility-tests]   | [command]/tmp/841fd694-fb63-4726-8089-f36034409e22 --default-toolchain none -y\n[Continuous integration/compatibility-tests]   | info: downloading installer\n[Continuous integration/no-std             ]   \ud83d\udcac  ::debug::download complete\n[Continuous integration/no-std             ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/ec69dee1-dd10-449f-9875-ce9774314aa5\n[Continuous integration/no-std             ]   | [command]/tmp/ec69dee1-dd10-449f-9875-ce9774314aa5 --default-toolchain none -y\n[Continuous integration/no-std             ]   | info: downloading installer\n[Continuous integration/no-std             ]   | info: profile set to 'default'\n[Continuous integration/no-std             ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous integration/no-std             ]   | info: skipping toolchain installation\n[Continuous integration/no-std             ]   | \n[Continuous integration/no-std             ]   | \n[Continuous integration/no-std             ]   | Rust is installed now. Great!\n[Continuous integration/no-std             ]   | \n[Continuous integration/no-std             ]   | To get started you may need to restart your current shell.\n[Continuous integration/no-std             ]   | This would reload your PATH environment variable to include\n[Continuous integration/no-std             ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous integration/no-std             ]   | \n[Continuous integration/no-std             ]   | To configure your current shell, run:\n[Continuous integration/no-std             ]   | source \"$HOME/.cargo/env\"\n[Continuous integration/no-std             ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous integration/no-std             ]   | Default host: x86_64-unknown-linux-gnu\n[Continuous integration/no-std             ]   | rustup home:  /home/runneradmin/.rustup\n[Continuous integration/no-std             ]   | \n[Continuous integration/no-std             ]   | no active toolchain\n[Continuous integration/no-std             ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/no-std             ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/no-std             ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/no-std             ]   | Installed rustup 1.26.0 support profiles\n[Continuous integration/no-std             ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous integration/no-std             ]   | info: profile set to 'minimal'\n[Continuous integration/no-std             ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[Continuous integration/no-std             ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/compatibility-tests]   | info: profile set to 'default'\n[Continuous integration/compatibility-tests]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous integration/compatibility-tests]   | info: skipping toolchain installation\n[Continuous integration/compatibility-tests]   | \n[Continuous integration/compatibility-tests]   | \n[Continuous integration/compatibility-tests]   | Rust is installed now. Great!\n[Continuous integration/compatibility-tests]   | \n[Continuous integration/compatibility-tests]   | To get started you may need to restart your current shell.\n[Continuous integration/compatibility-tests]   | This would reload your PATH environment variable to include\n[Continuous integration/compatibility-tests]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous integration/compatibility-tests]   | \n[Continuous integration/compatibility-tests]   | To configure your current shell, run:\n[Continuous integration/compatibility-tests]   | source \"$HOME/.cargo/env\"\n[Continuous integration/compatibility-tests]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous integration/compatibility-tests]   | Default host: x86_64-unknown-linux-gnu\n[Continuous integration/compatibility-tests]   | rustup home:  /home/runneradmin/.rustup\n[Continuous integration/compatibility-tests]   | \n[Continuous integration/compatibility-tests]   | no active toolchain\n[Continuous integration/big_endian         ] exitcode '1': failure\n[Continuous integration/compatibility-tests]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/compatibility-tests]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/compatibility-tests]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/compatibility-tests]   | Installed rustup 1.26.0 support profiles\n[Continuous integration/compatibility-tests]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous integration/compatibility-tests]   | info: profile set to 'minimal'\n[Continuous integration/compatibility-tests]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[Continuous integration/compatibility-tests]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/no-std             ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/no-std             ]   | info: downloading component 'cargo'\n[Continuous integration/compatibility-tests]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/compatibility-tests]   | info: downloading component 'cargo'\n[Continuous integration/compatibility-tests]   | info: downloading component 'rust-std'\n[Continuous integration/no-std             ]   | info: downloading component 'rust-std'\n[Continuous integration/big_endian         ] \ud83c\udfc1  Job failed\n[Continuous integration/compatibility-tests]   | info: downloading component 'rustc'\n[Continuous integration/no-std             ]   | info: downloading component 'rustc'\n[Continuous integration/compatibility-tests]   | info: installing component 'cargo'\n[Continuous integration/compatibility-tests]   | info: installing component 'rust-std'\n[Continuous integration/compatibility-tests]   | info: installing component 'rustc'\n[Continuous integration/no-std             ]   | info: installing component 'cargo'\n[Continuous integration/no-std             ]   | info: installing component 'rust-std'\n[Continuous integration/no-std             ]   | info: installing component 'rustc'\n[Continuous integration/compatibility-tests]   | \n[Continuous integration/compatibility-tests]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/compatibility-tests]   | \n[Continuous integration/compatibility-tests]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/compatibility-tests]   | info: checking for self-update\n[Continuous integration/compatibility-tests]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[Continuous integration/compatibility-tests]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/compatibility-tests]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/shepmaster-twox-hash' set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/compatibility-tests]   | \n[Continuous integration/compatibility-tests]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/compatibility-tests]   | \n[Continuous integration/compatibility-tests]   \u2753  ::group::Gathering installed versions\n[Continuous integration/compatibility-tests]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous integration/compatibility-tests]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/compatibility-tests]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/compatibility-tests]   \u2699  ::set-output:: rustc_hash=84c898d65\n[Continuous integration/compatibility-tests]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous integration/compatibility-tests]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[Continuous integration/compatibility-tests]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[Continuous integration/compatibility-tests]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/compatibility-tests]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/compatibility-tests]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/compatibility-tests]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Continuous integration/compatibility-tests]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/compatibility-tests]   \u2753  ::endgroup::\n[Continuous integration/compatibility-tests]   \u2705  Success - Main actions-rs/toolchain@v1\n[Continuous integration/compatibility-tests]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous integration/compatibility-tests] \u2b50 Run Main actions-rs/cargo@v1\n[Continuous integration/compatibility-tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[Continuous integration/compatibility-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[Continuous integration/no-std             ]   | \n[Continuous integration/no-std             ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/no-std             ]   | \n[Continuous integration/no-std             ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/no-std             ]   | info: checking for self-update\n[Continuous integration/no-std             ]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[Continuous integration/no-std             ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/no-std             ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/shepmaster-twox-hash' set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous integration/no-std             ]   | \n[Continuous integration/no-std             ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/no-std             ]   | \n[Continuous integration/no-std             ]   | [command]/home/runneradmin/.cargo/bin/rustup target add --toolchain stable thumbv6m-none-eabi\n[Continuous integration/no-std             ]   | info: downloading component 'rust-std' for 'thumbv6m-none-eabi'\n[Continuous integration/no-std             ]   | info: installing component 'rust-std' for 'thumbv6m-none-eabi'\n[Continuous integration/no-std             ]   \u2753  ::group::Gathering installed versions\n[Continuous integration/no-std             ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous integration/no-std             ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/no-std             ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[Continuous integration/no-std             ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[Continuous integration/no-std             ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous integration/no-std             ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[Continuous integration/no-std             ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[Continuous integration/no-std             ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/no-std             ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/no-std             ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/no-std             ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Continuous integration/no-std             ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/no-std             ]   \u2753  ::endgroup::\n[Continuous integration/no-std             ]   \u2705  Success - Main actions-rs/toolchain@v1\n[Continuous integration/no-std             ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous integration/no-std             ] \u2b50 Run Main actions-rs/cargo@v1\n[Continuous integration/no-std             ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[Continuous integration/no-std             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[Continuous integration/compatibility-tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[Continuous integration/compatibility-tests]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[Continuous integration/no-std             ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[Continuous integration/compatibility-tests]   | [command]/home/runneradmin/.cargo/bin/cargo test --manifest-path compatibility-tests/digest_0_8/Cargo.toml\n[Continuous integration/compatibility-tests]   |     Updating crates.io index\n[Continuous integration/no-std             ]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[Continuous integration/no-std             ]   | [command]/home/runneradmin/.cargo/bin/cargo build --no-default-features --target thumbv6m-none-eabi --lib\n[Continuous integration/no-std             ]   |     Updating crates.io index\n[Continuous integration/no-std             ]   |  Downloading crates ...\n[Continuous integration/compatibility-tests]   |  Downloading crates ...\n[Continuous integration/compatibility-tests]   |   Downloaded rand v0.8.5\n[Continuous integration/compatibility-tests]   |   Downloaded typenum v1.16.0\n[Continuous integration/compatibility-tests]   |   Downloaded digest v0.8.1\n[Continuous integration/compatibility-tests]   |   Downloaded rand_core v0.6.4\n[Continuous integration/compatibility-tests]   |   Downloaded static_assertions v1.1.0\n[Continuous integration/compatibility-tests]   |   Downloaded ppv-lite86 v0.2.17\n[Continuous integration/compatibility-tests]   |   Downloaded libc v0.2.144\n[Continuous integration/compatibility-tests]   |   Downloaded getrandom v0.2.9\n[Continuous integration/compatibility-tests]   |   Downloaded cfg-if v1.0.0\n[Continuous integration/compatibility-tests]   |   Downloaded generic-array v0.12.4\n[Continuous integration/compatibility-tests]   |   Downloaded rand_chacha v0.3.1\n[Continuous integration/compatibility-tests]   |    Compiling libc v0.2.144\n[Continuous integration/compatibility-tests]   |    Compiling typenum v1.16.0\n[Continuous integration/compatibility-tests]   |    Compiling cfg-if v1.0.0\n[Continuous integration/compatibility-tests]   |    Compiling ppv-lite86 v0.2.17\n[Continuous integration/compatibility-tests]   |    Compiling static_assertions v1.1.0\n[Continuous integration/no-std             ]   |   Downloaded cfg-if v1.0.0\n[Continuous integration/no-std             ]   |   Downloaded static_assertions v1.1.0\n[Continuous integration/no-std             ]   |    Compiling cfg-if v1.0.0\n[Continuous integration/no-std             ]   |    Compiling static_assertions v1.1.0\n[Continuous integration/no-std             ]   |    Compiling twox-hash v1.6.3 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/shepmaster-twox-hash)\n[Continuous integration/no-std             ]   |     Finished dev [unoptimized + debuginfo] target(s) in 2m 31s\n[Continuous integration/no-std             ]   \u2705  Success - Main actions-rs/cargo@v1\n[Continuous integration/compatibility-tests]   |    Compiling getrandom v0.2.9\n[Continuous integration/compatibility-tests]   |    Compiling generic-array v0.12.4\n[Continuous integration/compatibility-tests]   |    Compiling rand_core v0.6.4\n[Continuous integration/compatibility-tests]   |    Compiling digest v0.8.1\n[Continuous integration/compatibility-tests]   |    Compiling rand_chacha v0.3.1\n[Continuous integration/no-std             ] \ud83c\udfc1  Job succeeded\n[Continuous integration/compatibility-tests]   |    Compiling rand v0.8.5\n[Continuous integration/compatibility-tests]   |    Compiling twox-hash v1.6.3 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/shepmaster-twox-hash)\n[Continuous integration/compatibility-tests]   |    Compiling digest_0_8 v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/shepmaster-twox-hash/compatibility-tests/digest_0_8)\n[Continuous integration/compatibility-tests]   |     Finished test [unoptimized + debuginfo] target(s) in 2m 36s\n[Continuous integration/compatibility-tests]   |      Running unittests src/lib.rs (compatibility-tests/digest_0_8/target/debug/deps/digest_0_8-437ce1de0808dfae)\n[Continuous integration/compatibility-tests]   | \n[Continuous integration/compatibility-tests]   | running 15 tests\n[Continuous integration/compatibility-tests]   | test hash_of_multiple_bytes_matches_c_implementation_32 ... ok\n[Continuous integration/compatibility-tests]   | test hash_of_multiple_bytes_matches_c_implementation_64 ... ok\n[Continuous integration/compatibility-tests]   | test hash_of_multiple_chunks_matches_c_implementation_32 ... ok\n[Continuous integration/compatibility-tests]   | test hash_of_multiple_chunks_matches_c_implementation_64 ... ok\n[Continuous integration/compatibility-tests]   | test hash_of_nothing_matches_c_implementation_32 ... ok\n[Continuous integration/compatibility-tests]   | test hash_of_nothing_matches_c_implementation_64 ... ok\n[Continuous integration/compatibility-tests]   | test hash_of_single_byte_matches_c_implementation_32 ... ok\n[Continuous integration/compatibility-tests]   | test hash_of_single_byte_matches_c_implementation_64 ... ok\n[Continuous integration/compatibility-tests]   | test hash_with_different_seed_and_multiple_chunks_matches_c_implementation_32 ... ok\n[Continuous integration/compatibility-tests]   | test hash_with_different_seed_and_multiple_chunks_matches_c_implementation_64 ... ok\n[Continuous integration/compatibility-tests]   | test hash_with_different_seed_matches_c_implementation_32 ... ok\n[Continuous integration/compatibility-tests]   | test hash_with_different_seed_matches_c_implementation_64 ... ok\n[Continuous integration/compatibility-tests]   | test ingesting_byte_by_byte_is_equivalent_to_large_chunks_32 ... ok\n[Continuous integration/compatibility-tests]   | test it_implements_digest ... ok\n[Continuous integration/compatibility-tests]   | test ingesting_byte_by_byte_is_equivalent_to_large_chunks_64 ... ok\n[Continuous integration/compatibility-tests]   | \n[Continuous integration/compatibility-tests]   | test result: ok. 15 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Continuous integration/compatibility-tests]   | \n[Continuous integration/compatibility-tests]   |    Doc-tests digest_0_8\n[Continuous integration/compatibility-tests]   | \n[Continuous integration/compatibility-tests]   | running 0 tests\n[Continuous integration/compatibility-tests]   | \n[Continuous integration/compatibility-tests]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Continuous integration/compatibility-tests]   | \n[Continuous integration/compatibility-tests]   \u2705  Success - Main actions-rs/cargo@v1\n[Continuous integration/compatibility-tests] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: EOF\n"
}