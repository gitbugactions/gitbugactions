{
    "repository": "bluss/arrayvec",
    "clone_url": "https://github.com/bluss/arrayvec.git",
    "timestamp": "2023-05-30T08:42:02.638154Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Continuous integration/miri ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/tests] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/miri ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/miri ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/miri ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec] user=0 workdir=\n[Continuous integration/miri ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec] user=0 workdir=\n[Continuous integration/tests]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous integration/tests] \ud83e\uddea  Matrix: map[experimental:false features:serde rust:1.51.0]\n[Continuous integration/miri ] \u2b50 Run Main actions/checkout@v2\n[Continuous integration/tests] \u2b50 Run Main actions/checkout@v2\n[Continuous integration/tests]   \u2705  Success - Main actions/checkout@v2\n[Continuous integration/miri ]   \u2705  Success - Main actions/checkout@v2\n[Continuous integration/tests] \u2b50 Run Main actions-rs/toolchain@v1\n[Continuous integration/miri ] \u2b50 Run Main Install Miri\n[Continuous integration/tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous integration/miri ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Continuous integration/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous integration/tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous integration/miri ]   | /var/run/act/workflow/1: line 2: rustup: command not found\n[Continuous integration/miri ]   \u274c  Failure - Main Install Miri\n[Continuous integration/tests]   \ud83d\udcac  ::debug::using toolchain from input: 1.51.0\n[Continuous integration/tests]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous integration/tests]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous integration/tests]   \ud83d\udcac  ::debug::Destination /tmp/9510e625-a1ab-47a6-b9bd-5db5c0e13cf8\n[Continuous integration/miri ] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Continuous integration/tests]   \ud83d\udcac  ::debug::download complete\n[Continuous integration/tests]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/9510e625-a1ab-47a6-b9bd-5db5c0e13cf8\n[Continuous integration/tests]   | [command]/tmp/9510e625-a1ab-47a6-b9bd-5db5c0e13cf8 --default-toolchain none -y\n[Continuous integration/tests]   | info: downloading installer\n[Continuous integration/miri ] \ud83c\udfc1  Job failed\n[Continuous integration/tests]   | info: profile set to 'default'\n[Continuous integration/tests]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous integration/tests]   | info: skipping toolchain installation\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | \n[Continuous integration/tests]   | Rust is installed now. Great!\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | To get started you may need to restart your current shell.\n[Continuous integration/tests]   | This would reload your PATH environment variable to include\n[Continuous integration/tests]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | To configure your current shell, run:\n[Continuous integration/tests]   | source \"$HOME/.cargo/env\"\n[Continuous integration/tests]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous integration/tests]   | Default host: x86_64-unknown-linux-gnu\n[Continuous integration/tests]   | rustup home:  /home/runneradmin/.rustup\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | no active toolchain\n[Continuous integration/tests]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/tests]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/tests]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/tests]   | Installed rustup 1.26.0 support profiles\n[Continuous integration/tests]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous integration/tests]   | info: profile set to 'minimal'\n[Continuous integration/tests]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install 1.51.0\n[Continuous integration/tests]   | info: syncing channel updates for '1.51.0-x86_64-unknown-linux-gnu'\n[Continuous integration/tests]   | info: latest update on 2021-03-25, rust version 1.51.0 (2fd73fabe 2021-03-23)\n[Continuous integration/tests]   | info: downloading component 'cargo'\n[Continuous integration/tests]   | info: downloading component 'rust-std'\n[Continuous integration/tests]   | info: downloading component 'rustc'\n[Continuous integration/tests]   | info: installing component 'cargo'\n[Continuous integration/tests]   | info: installing component 'rust-std'\n[Continuous integration/tests]   | info: installing component 'rustc'\n[Continuous integration/tests]   | \n[Continuous integration/tests]   |   1.51.0-x86_64-unknown-linux-gnu installed - rustc 1.51.0 (2fd73fabe 2021-03-23)\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | info: default toolchain set to '1.51.0-x86_64-unknown-linux-gnu'\n[Continuous integration/tests]   | info: checking for self-update\n[Continuous integration/tests]   | [command]/home/runneradmin/.cargo/bin/rustup override set 1.51.0\n[Continuous integration/tests]   | info: using existing install for '1.51.0-x86_64-unknown-linux-gnu'\n[Continuous integration/tests]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec' set to '1.51.0-x86_64-unknown-linux-gnu'\n[Continuous integration/tests]   | \n[Continuous integration/tests]   |   1.51.0-x86_64-unknown-linux-gnu unchanged - rustc 1.51.0 (2fd73fabe 2021-03-23)\n[Continuous integration/tests]   | \n[Continuous integration/tests]   \u2753  ::group::Gathering installed versions\n[Continuous integration/tests]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous integration/tests]   | rustc 1.51.0 (2fd73fabe 2021-03-23)\n[Continuous integration/tests]   \u2699  ::set-output:: rustc=1.51.0 (2fd73fabe 2021-03-23)\n[Continuous integration/tests]   \u2699  ::set-output:: rustc_hash=2fd73fabe\n[Continuous integration/tests]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous integration/tests]   | cargo 1.51.0 (43b129a20 2021-03-16)\n[Continuous integration/tests]   \u2699  ::set-output:: cargo=1.51.0 (43b129a20 2021-03-16)\n[Continuous integration/tests]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/tests]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/tests]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/tests]   | info: The currently active `rustc` version is `rustc 1.51.0 (2fd73fabe 2021-03-23)`\n[Continuous integration/tests]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/tests]   \u2753  ::endgroup::\n[Continuous integration/tests]   \u2705  Success - Main actions-rs/toolchain@v1\n[Continuous integration/tests]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous integration/tests] \u2b50 Run Main Tests\n[Continuous integration/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Updating\u001b[0m crates.io index\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m Downloading\u001b[0m crates ...\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serde v1.0.163\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde v1.0.163\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name build_script_build /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.163/build.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' -C metadata=c676acad55a63d47 -C extra-filename=-c676acad55a63d47 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/build/serde-c676acad55a63d47 -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps --cap-lints allow`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/build/serde-c676acad55a63d47/build-script-build`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name serde /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.163/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' -C metadata=852c64d0d8f987cf -C extra-filename=-852c64d0d8f987cf --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps --cap-lints allow --cfg no_serde_derive --cfg no_target_has_atomic --cfg no_core_cstr`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m arrayvec v0.7.2 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec)\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name arrayvec --edition=2018 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"default\"' --cfg 'feature=\"serde\"' --cfg 'feature=\"std\"' -C metadata=d55248c07e9602e3 -C extra-filename=-d55248c07e9602e3 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libserde-852c64d0d8f987cf.rmeta`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m dev [unoptimized + debuginfo] target(s) in 2m 35s\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Checking\u001b[0m serde v1.0.163\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name serde /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.163/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' -C metadata=2bc83e7dd10b7131 -C extra-filename=-2bc83e7dd10b7131 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps --cap-lints allow --cfg no_serde_derive --cfg no_target_has_atomic --cfg no_core_cstr`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m Documenting\u001b[0m arrayvec v0.7.2 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec)\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustdoc --edition=2018 --crate-type lib --crate-name arrayvec src/lib.rs -o /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/doc --cfg 'feature=\"default\"' --cfg 'feature=\"serde\"' --cfg 'feature=\"std\"' --error-format=json --json=diagnostic-rendered-ansi -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libserde-2bc83e7dd10b7131.rmeta --crate-version 0.7.2`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m dev [unoptimized + debuginfo] target(s) in 3.88s\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m Downloading\u001b[0m crates ...\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m matches v0.1.10\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serde_test v1.0.163\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m bencher v0.1.5\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde_test v1.0.163\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m bencher v0.1.5\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m matches v0.1.10\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name build_script_build /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_test-1.0.163/build.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 -C metadata=4cc85bd7fba1ef76 -C extra-filename=-4cc85bd7fba1ef76 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/build/serde_test-4cc85bd7fba1ef76 -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps --cap-lints allow`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m       Fresh\u001b[0m serde v1.0.163\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name bencher /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=29dd3e32fdb14189 -C extra-filename=-29dd3e32fdb14189 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps --cap-lints allow`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name matches /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/matches-0.1.10/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=599cceb77e572358 -C extra-filename=-599cceb77e572358 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps --cap-lints allow`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/build/serde_test-4cc85bd7fba1ef76/build-script-build`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name serde_test /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_test-1.0.163/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=dee685ced1383e15 -C extra-filename=-dee685ced1383e15 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libserde-852c64d0d8f987cf.rmeta --cap-lints allow`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m arrayvec v0.7.2 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec)\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name arrayvec --edition=2018 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --test --cfg 'feature=\"default\"' --cfg 'feature=\"serde\"' --cfg 'feature=\"std\"' -C metadata=9b02ddb2c2df2970 -C extra-filename=-9b02ddb2c2df2970 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps --extern bencher=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libbencher-29dd3e32fdb14189.rlib --extern matches=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libmatches-599cceb77e572358.rlib --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libserde-852c64d0d8f987cf.rlib --extern serde_test=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libserde_test-dee685ced1383e15.rlib`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name serde --edition=2018 tests/serde.rs --error-format=json --json=diagnostic-rendered-ansi --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --test --cfg 'feature=\"default\"' --cfg 'feature=\"serde\"' --cfg 'feature=\"std\"' -C metadata=8b796341f455edeb -C extra-filename=-8b796341f455edeb --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps --extern arrayvec=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libarrayvec-d55248c07e9602e3.rlib --extern bencher=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libbencher-29dd3e32fdb14189.rlib --extern matches=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libmatches-599cceb77e572358.rlib --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libserde-852c64d0d8f987cf.rlib --extern serde_test=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libserde_test-dee685ced1383e15.rlib`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name tests --edition=2018 tests/tests.rs --error-format=json --json=diagnostic-rendered-ansi --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --test --cfg 'feature=\"default\"' --cfg 'feature=\"serde\"' --cfg 'feature=\"std\"' -C metadata=f12084f32e715875 -C extra-filename=-f12084f32e715875 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps --extern arrayvec=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libarrayvec-d55248c07e9602e3.rlib --extern bencher=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libbencher-29dd3e32fdb14189.rlib --extern matches=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libmatches-599cceb77e572358.rlib --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libserde-852c64d0d8f987cf.rlib --extern serde_test=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libserde_test-dee685ced1383e15.rlib`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m test [unoptimized + debuginfo] target(s) in 5.35s\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/arrayvec-9b02ddb2c2df2970`\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | running 2 tests\n[Continuous integration/tests]   | test char::test_encode_utf8_oob ... ok\n[Continuous integration/tests]   | test char::test_encode_utf8 ... ok\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.65s\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/serde-8b796341f455edeb`\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | running 6 tests\n[Continuous integration/tests]   | test array_string::test_de_too_large ... ok\n[Continuous integration/tests]   | test array_string::test_ser_de ... ok\n[Continuous integration/tests]   | test array_string::test_ser_de_empty ... ok\n[Continuous integration/tests]   | test array_vec::test_ser_de_empty ... ok\n[Continuous integration/tests]   | test array_vec::test_de_too_large ... ok\n[Continuous integration/tests]   | test array_vec::test_ser_de ... ok\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/tests-f12084f32e715875`\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | running 49 tests\n[Continuous integration/tests]   | test allow_max_capacity_arrayvec_type ... ok\n[Continuous integration/tests]   | test array_clone_from ... ok\n[Continuous integration/tests]   | test test_arraystring_const_constructible ... ok\n[Continuous integration/tests]   | test deny_max_capacity_arrayvec_value_const ... ok\n[Continuous integration/tests]   | test test_arraystring_zero_filled_has_some_sanity_checks ... ok\n[Continuous integration/tests]   | test test_arrayvec_const_constructible ... ok\n[Continuous integration/tests]   | test test_capacity_left ... ok\n[Continuous integration/tests]   | test test_default ... ok\n[Continuous integration/tests]   | test deny_max_capacity_arrayvec_value ... ok\n[Continuous integration/tests]   | test test_drain_oob ... ok\n[Continuous integration/tests]   | test test_drain_range_inclusive ... ok\n[Continuous integration/tests]   | test test_drain_range_inclusive_oob ... ok\n[Continuous integration/tests]   | test test_drain ... ok\n[Continuous integration/tests]   | test test_drop_in_insert ... ok\n[Continuous integration/tests]   | test test_drop_panic ... ok\n[Continuous integration/tests]   | test test_drop_panic_into_iter ... ok\n[Continuous integration/tests]   | test test_extend ... ok\n[Continuous integration/tests]   | test test_extend_capacity_panic_1 ... ok\n[Continuous integration/tests]   | test test_compact_size ... ok\n[Continuous integration/tests]   | test test_extend_from_slice ... ok\n[Continuous integration/tests]   | test test_extend_zst ... ok\n[Continuous integration/tests]   | test test_insert ... ok\n[Continuous integration/tests]   | test test_insert_at_length ... ok\n[Continuous integration/tests]   | test test_drop ... ok\n[Continuous integration/tests]   | test test_insert_out_of_bounds ... ok\n[Continuous integration/tests]   | test test_into_inner_2 ... ok\n[Continuous integration/tests]   | test test_drop_panics ... ok\n[Continuous integration/tests]   | test test_into_inner_1 ... ok\n[Continuous integration/tests]   | test test_into_inner_3 ... ok\n[Continuous integration/tests]   | test test_is_send_sync ... ok\n[Continuous integration/tests]   | test test_iter ... ok\n[Continuous integration/tests]   | test test_still_works_with_option_arrayvec ... ok\n[Continuous integration/tests]   | test test_retain ... ok\n[Continuous integration/tests]   | test test_extend_capacity_panic_2 ... ok\n[Continuous integration/tests]   | test test_extend_from_slice_error ... ok\n[Continuous integration/tests]   | test test_simple ... ok\n[Continuous integration/tests]   | test test_pop_at ... ok\n[Continuous integration/tests]   | test test_string ... ok\n[Continuous integration/tests]   | test test_string_from_bytes ... ok\n[Continuous integration/tests]   | test test_string_parse_from_str ... ok\n[Continuous integration/tests]   | test test_string_clone ... ok\n[Continuous integration/tests]   | test test_string_push ... ok\n[Continuous integration/tests]   | test test_string_from ... ok\n[Continuous integration/tests]   | test test_try_from_argument ... ok\n[Continuous integration/tests]   | test test_try_from_slice_error ... ok\n[Continuous integration/tests]   | test test_sizes ... ok\n[Continuous integration/tests]   | test test_take ... ok\n[Continuous integration/tests]   | test test_write ... ok\n[Continuous integration/tests]   | test test_u16_index ... ok\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | test result: ok. 49 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Doc-tests\u001b[0m arrayvec\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustdoc --edition=2018 --crate-type lib --test /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/src/lib.rs --crate-name arrayvec -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps --extern arrayvec=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libarrayvec-d55248c07e9602e3.rlib --extern bencher=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libbencher-29dd3e32fdb14189.rlib --extern matches=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libmatches-599cceb77e572358.rlib --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libserde-852c64d0d8f987cf.rlib --extern serde_test=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/debug/deps/libserde_test-dee685ced1383e15.rlib -C embed-bitcode=no --cfg 'feature=\"default\"' --cfg 'feature=\"serde\"' --cfg 'feature=\"std\"'`\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | running 42 tests\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::is_full (line 167) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::capacity (line 156) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::try_extend_from_slice (line 552) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::pop (line 299) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::is_full (line 140) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::swap_remove (line 360) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::push (line 194) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::from_byte_string (line 115) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::new (line 54) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::pop (line 338) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::from (line 97) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::new_const (line 73) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::zero_filled (line 135) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::len (line 105) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::try_insert (line 297) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::drain (line 596) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::&'a ArrayVec<T, CAP> (line 799) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::push_unchecked (line 215) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::try_push_str (line 267) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::push_str (line 246) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::try_push (line 187) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP> (line 772) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::truncate (line 239) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::remove (line 410) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::swap_pop (line 385) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::remaining_capacity (line 152) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::new_const (line 93) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::retain (line 456) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::truncate (line 329) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::take (line 677) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::capacity (line 129) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::is_empty (line 117) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::push (line 167) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP> (line 747) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::try_push (line 215) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP> (line 835) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::pop_at (line 431) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::&'a mut ArrayVec<T, CAP> (line 816) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::remove (line 359) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::remaining_capacity (line 179) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::insert (line 273) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::new (line 71) ... ok\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | test result: ok. 42 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.31s\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde v1.0.163\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde_test v1.0.163\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m matches v0.1.10\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m bencher v0.1.5\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name build_script_build /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.163/build.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 -C debug-assertions=off --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' -C metadata=59dc87f29d95c8f8 -C extra-filename=-59dc87f29d95c8f8 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/build/serde-59dc87f29d95c8f8 -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps --cap-lints allow`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name matches /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/matches-0.1.10/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C debuginfo=2 -C metadata=47b3315a896d8908 -C extra-filename=-47b3315a896d8908 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps --cap-lints allow`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name build_script_build /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_test-1.0.163/build.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 -C debug-assertions=off -C metadata=830840d9b431aa4b -C extra-filename=-830840d9b431aa4b --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/build/serde_test-830840d9b431aa4b -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps --cap-lints allow`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name bencher /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C debuginfo=2 -C metadata=a75b71f6beb6ca8e -C extra-filename=-a75b71f6beb6ca8e --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps --cap-lints allow`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/build/serde_test-830840d9b431aa4b/build-script-build`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/build/serde-59dc87f29d95c8f8/build-script-build`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name serde /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.163/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' -C metadata=53519289f7f5494a -C extra-filename=-53519289f7f5494a --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps --cap-lints allow --cfg no_serde_derive --cfg no_target_has_atomic --cfg no_core_cstr`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m arrayvec v0.7.2 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec)\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name serde_test /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_test-1.0.163/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C debuginfo=2 -C metadata=0808d32381d563ee -C extra-filename=-0808d32381d563ee --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libserde-53519289f7f5494a.rmeta --cap-lints allow`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name arrayvec --edition=2018 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"default\"' --cfg 'feature=\"serde\"' --cfg 'feature=\"std\"' -C metadata=4269aa2f3e67eb75 -C extra-filename=-4269aa2f3e67eb75 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libserde-53519289f7f5494a.rmeta`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name tests --edition=2018 tests/tests.rs --error-format=json --json=diagnostic-rendered-ansi --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C debuginfo=2 --test --cfg 'feature=\"default\"' --cfg 'feature=\"serde\"' --cfg 'feature=\"std\"' -C metadata=84ebb4432dbb771a -C extra-filename=-84ebb4432dbb771a --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps --extern arrayvec=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libarrayvec-4269aa2f3e67eb75.rlib --extern bencher=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libbencher-a75b71f6beb6ca8e.rlib --extern matches=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libmatches-47b3315a896d8908.rlib --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libserde-53519289f7f5494a.rlib --extern serde_test=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libserde_test-0808d32381d563ee.rlib`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name serde --edition=2018 tests/serde.rs --error-format=json --json=diagnostic-rendered-ansi --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C debuginfo=2 --test --cfg 'feature=\"default\"' --cfg 'feature=\"serde\"' --cfg 'feature=\"std\"' -C metadata=19e60b044ca2a55d -C extra-filename=-19e60b044ca2a55d --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps --extern arrayvec=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libarrayvec-4269aa2f3e67eb75.rlib --extern bencher=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libbencher-a75b71f6beb6ca8e.rlib --extern matches=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libmatches-47b3315a896d8908.rlib --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libserde-53519289f7f5494a.rlib --extern serde_test=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libserde_test-0808d32381d563ee.rlib`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name arrayvec --edition=2018 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C debuginfo=2 --test --cfg 'feature=\"default\"' --cfg 'feature=\"serde\"' --cfg 'feature=\"std\"' -C metadata=9bb449e6a5420d30 -C extra-filename=-9bb449e6a5420d30 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps --extern bencher=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libbencher-a75b71f6beb6ca8e.rlib --extern matches=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libmatches-47b3315a896d8908.rlib --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libserde-53519289f7f5494a.rlib --extern serde_test=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libserde_test-0808d32381d563ee.rlib`\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m release [optimized + debuginfo] target(s) in 10.34s\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/arrayvec-9bb449e6a5420d30`\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | running 2 tests\n[Continuous integration/tests]   | test char::test_encode_utf8_oob ... ok\n[Continuous integration/tests]   | test char::test_encode_utf8 ... ok\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.04s\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/serde-19e60b044ca2a55d`\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | running 6 tests\n[Continuous integration/tests]   | test array_string::test_de_too_large ... ok\n[Continuous integration/tests]   | test array_string::test_ser_de ... ok\n[Continuous integration/tests]   | test array_string::test_ser_de_empty ... ok\n[Continuous integration/tests]   | test array_vec::test_ser_de ... ok\n[Continuous integration/tests]   | test array_vec::test_ser_de_empty ... ok\n[Continuous integration/tests]   | test array_vec::test_de_too_large ... ok\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/tests-84ebb4432dbb771a`\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | running 49 tests\n[Continuous integration/tests]   | test array_clone_from ... ok\n[Continuous integration/tests]   | test allow_max_capacity_arrayvec_type ... ok\n[Continuous integration/tests]   | test deny_max_capacity_arrayvec_value ... ok\n[Continuous integration/tests]   | test deny_max_capacity_arrayvec_value_const ... ok\n[Continuous integration/tests]   | test test_arraystring_const_constructible ... ok\n[Continuous integration/tests]   | test test_arraystring_zero_filled_has_some_sanity_checks ... ok\n[Continuous integration/tests]   | test test_arrayvec_const_constructible ... ok\n[Continuous integration/tests]   | test test_compact_size ... ok\n[Continuous integration/tests]   | test test_capacity_left ... ok\n[Continuous integration/tests]   | test test_drain ... ok\n[Continuous integration/tests]   | test test_drain_oob ... ok\n[Continuous integration/tests]   | test test_drain_range_inclusive ... ok\n[Continuous integration/tests]   | test test_drop ... ok\n[Continuous integration/tests]   | test test_drain_range_inclusive_oob ... ok\n[Continuous integration/tests]   | test test_drop_in_insert ... ok\n[Continuous integration/tests]   | test test_default ... ok\n[Continuous integration/tests]   | test test_drop_panic ... ok\n[Continuous integration/tests]   | test test_drop_panic_into_iter ... ok\n[Continuous integration/tests]   | test test_drop_panics ... ok\n[Continuous integration/tests]   | test test_extend ... ok\n[Continuous integration/tests]   | test test_extend_capacity_panic_1 ... ok\n[Continuous integration/tests]   | test test_extend_capacity_panic_2 ... ok\n[Continuous integration/tests]   | test test_extend_from_slice ... ok\n[Continuous integration/tests]   | test test_extend_from_slice_error ... ok\n[Continuous integration/tests]   | test test_extend_zst ... ok\n[Continuous integration/tests]   | test test_into_inner_1 ... ok\n[Continuous integration/tests]   | test test_insert_out_of_bounds ... ok\n[Continuous integration/tests]   | test test_into_inner_2 ... ok\n[Continuous integration/tests]   | test test_into_inner_3 ... ok\n[Continuous integration/tests]   | test test_insert_at_length ... ok\n[Continuous integration/tests]   | test test_is_send_sync ... ok\n[Continuous integration/tests]   | test test_iter ... ok\n[Continuous integration/tests]   | test test_pop_at ... ok\n[Continuous integration/tests]   | test test_retain ... ok\n[Continuous integration/tests]   | test test_simple ... ok\n[Continuous integration/tests]   | test test_still_works_with_option_arrayvec ... ok\n[Continuous integration/tests]   | test test_string ... ok\n[Continuous integration/tests]   | test test_string_clone ... ok\n[Continuous integration/tests]   | test test_insert ... ok\n[Continuous integration/tests]   | test test_string_from ... ok\n[Continuous integration/tests]   | test test_sizes ... ok\n[Continuous integration/tests]   | test test_string_from_bytes ... ok\n[Continuous integration/tests]   | test test_string_parse_from_str ... ok\n[Continuous integration/tests]   | test test_take ... ok\n[Continuous integration/tests]   | test test_try_from_argument ... ok\n[Continuous integration/tests]   | test test_try_from_slice_error ... ok\n[Continuous integration/tests]   | test test_u16_index ... ok\n[Continuous integration/tests]   | test test_write ... ok\n[Continuous integration/tests]   | test test_string_push ... ok\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | test result: ok. 49 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Doc-tests\u001b[0m arrayvec\n[Continuous integration/tests]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustdoc --edition=2018 --crate-type lib --test /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/src/lib.rs --crate-name arrayvec -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps --extern arrayvec=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libarrayvec-4269aa2f3e67eb75.rlib --extern bencher=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libbencher-a75b71f6beb6ca8e.rlib --extern matches=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libmatches-47b3315a896d8908.rlib --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libserde-53519289f7f5494a.rlib --extern serde_test=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-arrayvec/target/release/deps/libserde_test-0808d32381d563ee.rlib -C embed-bitcode=no --cfg 'feature=\"default\"' --cfg 'feature=\"serde\"' --cfg 'feature=\"std\"'`\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | running 42 tests\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::from (line 97) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::len (line 105) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::from_byte_string (line 115) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::new_const (line 93) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::is_empty (line 117) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::zero_filled (line 135) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP> (line 835) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::new_const (line 73) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::capacity (line 129) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP> (line 747) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::capacity (line 156) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::remaining_capacity (line 152) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::is_full (line 167) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::new (line 54) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::push_str (line 246) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::try_push (line 187) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::retain (line 456) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::&'a ArrayVec<T, CAP> (line 799) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::pop (line 338) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::try_insert (line 297) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::new (line 71) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::is_full (line 140) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::try_push_str (line 267) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::drain (line 596) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::take (line 677) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::remove (line 410) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP> (line 772) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::push (line 167) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::swap_pop (line 385) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::try_push (line 215) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::pop_at (line 431) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::remaining_capacity (line 179) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::push (line 194) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::truncate (line 239) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::insert (line 273) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::remove (line 359) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::swap_remove (line 360) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::truncate (line 329) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::push_unchecked (line 215) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::ArrayVec<T, CAP>::try_extend_from_slice (line 552) ... ok\n[Continuous integration/tests]   | test src/arrayvec.rs - arrayvec::&'a mut ArrayVec<T, CAP> (line 816) ... ok\n[Continuous integration/tests]   | test src/array_string.rs - array_string::ArrayString<CAP>::pop (line 299) ... ok\n[Continuous integration/tests]   | \n[Continuous integration/tests]   | test result: ok. 42 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.98s\n[Continuous integration/tests]   | \n[Continuous integration/tests]   \u2705  Success - Main Tests\n[Continuous integration/tests] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: Job 'miri' failed\n"
}