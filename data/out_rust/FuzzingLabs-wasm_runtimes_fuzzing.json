{
    "repository": "FuzzingLabs/wasm_runtimes_fuzzing",
    "clone_url": "https://github.com/FuzzingLabs/wasm_runtimes_fuzzing.git",
    "timestamp": "2023-05-30T09:28:16.466860Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/test benchmark   ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/test exec_all    ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Building docker  ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/test afl         ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/test honggfuzz   ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/test libfuzzer   ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Building warf cli] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Check Rust fmt   ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Check Rust fmt   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Building docker  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/test benchmark   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Building warf cli]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/test afl         ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/test libfuzzer   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/test honggfuzz   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/test exec_all    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/test honggfuzz   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check Rust fmt   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Building warf cli]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/test benchmark   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/test afl         ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/test exec_all    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Building docker  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/test libfuzzer   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/test afl         ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/test libfuzzer   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/test exec_all    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/test honggfuzz   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/test benchmark   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Building docker  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Building warf cli]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check Rust fmt   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/test honggfuzz   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing] user=0 workdir=\n[CI/Building warf cli]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing] user=0 workdir=\n[CI/test afl         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing] user=0 workdir=\n[CI/test libfuzzer   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing] user=0 workdir=\n[CI/test benchmark   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing] user=0 workdir=\n[CI/Check Rust fmt   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing] user=0 workdir=\n[CI/Building docker  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing] user=0 workdir=\n[CI/test exec_all    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing] user=0 workdir=\n[CI/test afl         ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/test honggfuzz   ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/Building warf cli]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/test exec_all    ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/Building docker  ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/test benchmark   ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/test libfuzzer   ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/Check Rust fmt   ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/test afl         ] \u2b50 Run Main actions/checkout@v2\n[CI/test honggfuzz   ] \u2b50 Run Main actions/checkout@v2\n[CI/test afl         ]   \u2705  Success - Main actions/checkout@v2\n[CI/Building warf cli] \u2b50 Run Main actions/checkout@v2\n[CI/test honggfuzz   ]   \u2705  Success - Main actions/checkout@v2\n[CI/Building warf cli]   \u2705  Success - Main actions/checkout@v2\n[CI/test exec_all    ] \u2b50 Run Main actions/checkout@v2\n[CI/Building docker  ] \u2b50 Run Main actions/checkout@v2\n[CI/test exec_all    ]   \u2705  Success - Main actions/checkout@v2\n[CI/Building docker  ]   \u2705  Success - Main actions/checkout@v2\n[CI/test afl         ] \u2b50 Run Main Install latest nightly\n[CI/test honggfuzz   ] \u2b50 Run Main Install latest nightly\n[CI/Building warf cli] \u2b50 Run Main Install latest nightly\n[CI/test honggfuzz   ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/test afl         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/test afl         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/test honggfuzz   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/Building warf cli]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/test benchmark   ] \u2b50 Run Main actions/checkout@v2\n[CI/test exec_all    ] \u2b50 Run Main Install latest nightly\n[CI/Building docker  ] \u2b50 Run Main Install latest nightly\n[CI/test libfuzzer   ] \u2b50 Run Main actions/checkout@v2\n[CI/Building warf cli]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/test benchmark   ]   \u2705  Success - Main actions/checkout@v2\n[CI/Check Rust fmt   ] \u2b50 Run Main actions/checkout@v2\n[CI/test exec_all    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/Building docker  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/Check Rust fmt   ]   \u2705  Success - Main actions/checkout@v2\n[CI/test libfuzzer   ]   \u2705  Success - Main actions/checkout@v2\n[CI/Building docker  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/test exec_all    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/test benchmark   ] \u2b50 Run Main Install latest nightly\n[CI/test libfuzzer   ] \u2b50 Run Main Install latest nightly\n[CI/Check Rust fmt   ] \u2b50 Run Main Install latest nightly\n[CI/test benchmark   ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/test libfuzzer   ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/Check Rust fmt   ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/test benchmark   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/test libfuzzer   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/Check Rust fmt   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/Building docker  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/test afl         ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/test honggfuzz   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/test exec_all    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/Check Rust fmt   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/test benchmark   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/Building warf cli]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/test libfuzzer   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/Building docker  ]   \ud83d\udcac  ::debug::using toolchain from input: nightly\n[CI/Building docker  ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/Building docker  ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/Building docker  ]   \ud83d\udcac  ::debug::Destination /tmp/fe036db3-3b62-4998-87ab-705b711f94d6\n[CI/Building docker  ]   \ud83d\udcac  ::debug::download complete\n[CI/Building docker  ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/fe036db3-3b62-4998-87ab-705b711f94d6\n[CI/Building docker  ]   | [command]/tmp/fe036db3-3b62-4998-87ab-705b711f94d6 --default-toolchain none -y\n[CI/Building docker  ]   | info: downloading installer\n[CI/Building docker  ]   | info: profile set to 'default'\n[CI/Building docker  ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Building docker  ]   | info: skipping toolchain installation\n[CI/Building docker  ]   | \n[CI/Building docker  ]   | \n[CI/Building docker  ]   | Rust is installed now. Great!\n[CI/Building docker  ]   | \n[CI/Building docker  ]   | To get started you may need to restart your current shell.\n[CI/Building docker  ]   | This would reload your PATH environment variable to include\n[CI/Building docker  ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Building docker  ]   | \n[CI/Building docker  ]   | To configure your current shell, run:\n[CI/Building docker  ]   | source \"$HOME/.cargo/env\"\n[CI/Building docker  ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/Building docker  ]   | Default host: x86_64-unknown-linux-gnu\n[CI/Building docker  ]   | rustup home:  /home/runneradmin/.rustup\n[CI/Building docker  ]   | \n[CI/Building docker  ]   | no active toolchain\n[CI/Building docker  ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install nightly\n[CI/Building docker  ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Building docker  ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Building docker  ]   | info: downloading component 'cargo'\n[CI/Building docker  ]   | info: downloading component 'clippy'\n[CI/Building docker  ]   | info: downloading component 'rust-docs'\n[CI/test afl         ]   \ud83d\udcac  ::debug::using toolchain from input: nightly\n[CI/Building warf cli]   \ud83d\udcac  ::debug::using toolchain from input: nightly\n[CI/test afl         ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/test afl         ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/test afl         ]   \ud83d\udcac  ::debug::Destination /tmp/fc19f17c-21ab-4446-9bca-4d3f48c5bbf0\n[CI/Building warf cli]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/Building warf cli]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/Building warf cli]   \ud83d\udcac  ::debug::Destination /tmp/651ba0ad-afcf-4c6a-8803-f6a44c53edb6\n[CI/Check Rust fmt   ]   \ud83d\udcac  ::debug::using toolchain from input: nightly\n[CI/test afl         ]   \ud83d\udcac  ::debug::download complete\n[CI/test afl         ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/fc19f17c-21ab-4446-9bca-4d3f48c5bbf0\n[CI/test afl         ]   | [command]/tmp/fc19f17c-21ab-4446-9bca-4d3f48c5bbf0 --default-toolchain none -y\n[CI/Building warf cli]   \ud83d\udcac  ::debug::download complete\n[CI/Building warf cli]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/651ba0ad-afcf-4c6a-8803-f6a44c53edb6\n[CI/Building warf cli]   | [command]/tmp/651ba0ad-afcf-4c6a-8803-f6a44c53edb6 --default-toolchain none -y\n[CI/Check Rust fmt   ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/Check Rust fmt   ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/Check Rust fmt   ]   \ud83d\udcac  ::debug::Destination /tmp/24894944-f5e7-48d2-8758-949a6eca1537\n[CI/test exec_all    ]   \ud83d\udcac  ::debug::using toolchain from input: nightly\n[CI/test exec_all    ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/test exec_all    ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/test exec_all    ]   \ud83d\udcac  ::debug::Destination /tmp/a0a31bb5-3082-4ab6-894a-14419d429214\n[CI/test afl         ]   | info: downloading installer\n[CI/Building warf cli]   | info: downloading installer\n[CI/Building docker  ]   | info: downloading component 'rust-std'\n[CI/Check Rust fmt   ]   \ud83d\udcac  ::debug::download complete\n[CI/Check Rust fmt   ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/24894944-f5e7-48d2-8758-949a6eca1537\n[CI/Check Rust fmt   ]   | [command]/tmp/24894944-f5e7-48d2-8758-949a6eca1537 --default-toolchain none -y\n[CI/test honggfuzz   ]   \ud83d\udcac  ::debug::using toolchain from input: nightly\n[CI/test honggfuzz   ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/test honggfuzz   ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/test honggfuzz   ]   \ud83d\udcac  ::debug::Destination /tmp/654b2fb9-0ef3-4a57-8545-184411be7039\n[CI/test libfuzzer   ]   \ud83d\udcac  ::debug::using toolchain from input: nightly\n[CI/Check Rust fmt   ]   | info: downloading installer\n[CI/test libfuzzer   ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/test libfuzzer   ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/test libfuzzer   ]   \ud83d\udcac  ::debug::Destination /tmp/61d2609a-de29-4281-98f1-e45b052d69b5\n[CI/test benchmark   ]   \ud83d\udcac  ::debug::using toolchain from input: nightly\n[CI/test benchmark   ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/test benchmark   ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/test benchmark   ]   \ud83d\udcac  ::debug::Destination /tmp/46922055-aea2-4e85-ba12-7b8ca2a210fe\n[CI/test benchmark   ]   \ud83d\udcac  ::debug::download complete\n[CI/test benchmark   ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/46922055-aea2-4e85-ba12-7b8ca2a210fe\n[CI/test benchmark   ]   | [command]/tmp/46922055-aea2-4e85-ba12-7b8ca2a210fe --default-toolchain none -y\n[CI/test benchmark   ]   | info: downloading installer\n[CI/test honggfuzz   ]   \ud83d\udcac  ::debug::download complete\n[CI/test honggfuzz   ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/654b2fb9-0ef3-4a57-8545-184411be7039\n[CI/test honggfuzz   ]   | [command]/tmp/654b2fb9-0ef3-4a57-8545-184411be7039 --default-toolchain none -y\n[CI/test honggfuzz   ]   | info: downloading installer\n[CI/Building docker  ]   | info: downloading component 'rustc'\n[CI/Building warf cli]   | info: profile set to 'default'\n[CI/Building warf cli]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Building warf cli]   | info: skipping toolchain installation\n[CI/Building warf cli]   | \n[CI/Building warf cli]   | \n[CI/Building warf cli]   | Rust is installed now. Great!\n[CI/Building warf cli]   | \n[CI/Building warf cli]   | To get started you may need to restart your current shell.\n[CI/Building warf cli]   | This would reload your PATH environment variable to include\n[CI/Building warf cli]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Building warf cli]   | \n[CI/Building warf cli]   | To configure your current shell, run:\n[CI/Building warf cli]   | source \"$HOME/.cargo/env\"\n[CI/Building warf cli]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/Building warf cli]   | Default host: x86_64-unknown-linux-gnu\n[CI/Building warf cli]   | rustup home:  /home/runneradmin/.rustup\n[CI/Building warf cli]   | \n[CI/Building warf cli]   | no active toolchain\n[CI/Building warf cli]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install nightly\n[CI/Building warf cli]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/test afl         ]   | info: profile set to 'default'\n[CI/test afl         ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/test afl         ]   | info: skipping toolchain installation\n[CI/test afl         ]   | \n[CI/test afl         ]   | \n[CI/test afl         ]   | Rust is installed now. Great!\n[CI/test afl         ]   | \n[CI/test afl         ]   | To get started you may need to restart your current shell.\n[CI/test afl         ]   | This would reload your PATH environment variable to include\n[CI/test afl         ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/test afl         ]   | \n[CI/test afl         ]   | To configure your current shell, run:\n[CI/test afl         ]   | source \"$HOME/.cargo/env\"\n[CI/test afl         ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/test afl         ]   | Default host: x86_64-unknown-linux-gnu\n[CI/test afl         ]   | rustup home:  /home/runneradmin/.rustup\n[CI/test afl         ]   | \n[CI/test afl         ]   | no active toolchain\n[CI/test afl         ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install nightly\n[CI/test afl         ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/test honggfuzz   ]   | info: profile set to 'default'\n[CI/test honggfuzz   ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/test honggfuzz   ]   | info: skipping toolchain installation\n[CI/test honggfuzz   ]   | \n[CI/test honggfuzz   ]   | \n[CI/test honggfuzz   ]   | Rust is installed now. Great!\n[CI/test honggfuzz   ]   | \n[CI/test honggfuzz   ]   | To get started you may need to restart your current shell.\n[CI/test honggfuzz   ]   | This would reload your PATH environment variable to include\n[CI/test honggfuzz   ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/test honggfuzz   ]   | \n[CI/test honggfuzz   ]   | To configure your current shell, run:\n[CI/test honggfuzz   ]   | source \"$HOME/.cargo/env\"\n[CI/test honggfuzz   ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/test honggfuzz   ]   | Default host: x86_64-unknown-linux-gnu\n[CI/test honggfuzz   ]   | rustup home:  /home/runneradmin/.rustup\n[CI/test honggfuzz   ]   | \n[CI/test honggfuzz   ]   | no active toolchain\n[CI/test honggfuzz   ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install nightly\n[CI/test honggfuzz   ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/test exec_all    ]   \ud83d\udcac  ::debug::download complete\n[CI/test exec_all    ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/a0a31bb5-3082-4ab6-894a-14419d429214\n[CI/test exec_all    ]   | [command]/tmp/a0a31bb5-3082-4ab6-894a-14419d429214 --default-toolchain none -y\n[CI/test exec_all    ]   | info: downloading installer\n[CI/test libfuzzer   ]   \ud83d\udcac  ::debug::download complete\n[CI/test libfuzzer   ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/61d2609a-de29-4281-98f1-e45b052d69b5\n[CI/test libfuzzer   ]   | [command]/tmp/61d2609a-de29-4281-98f1-e45b052d69b5 --default-toolchain none -y\n[CI/test afl         ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test afl         ]   | info: downloading component 'cargo'\n[CI/test libfuzzer   ]   | info: downloading installer\n[CI/test afl         ]   | info: downloading component 'clippy'\n[CI/test afl         ]   | info: downloading component 'rust-docs'\n[CI/test honggfuzz   ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test honggfuzz   ]   | info: downloading component 'cargo'\n[CI/Building warf cli]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Building warf cli]   | info: downloading component 'cargo'\n[CI/test honggfuzz   ]   | info: downloading component 'clippy'\n[CI/test afl         ]   | info: downloading component 'rust-std'\n[CI/test honggfuzz   ]   | info: downloading component 'rust-docs'\n[CI/test honggfuzz   ]   | info: downloading component 'rust-std'\n[CI/test exec_all    ]   | info: profile set to 'default'\n[CI/test exec_all    ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/test exec_all    ]   | info: skipping toolchain installation\n[CI/test exec_all    ]   | \n[CI/test exec_all    ]   | \n[CI/test exec_all    ]   | Rust is installed now. Great!\n[CI/test exec_all    ]   | \n[CI/test exec_all    ]   | To get started you may need to restart your current shell.\n[CI/test exec_all    ]   | This would reload your PATH environment variable to include\n[CI/test exec_all    ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/test exec_all    ]   | \n[CI/test exec_all    ]   | To configure your current shell, run:\n[CI/test exec_all    ]   | source \"$HOME/.cargo/env\"\n[CI/test benchmark   ]   | info: profile set to 'default'\n[CI/test benchmark   ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/test benchmark   ]   | info: skipping toolchain installation\n[CI/test benchmark   ]   | \n[CI/test benchmark   ]   | \n[CI/test benchmark   ]   | Rust is installed now. Great!\n[CI/test benchmark   ]   | \n[CI/test benchmark   ]   | To get started you may need to restart your current shell.\n[CI/test benchmark   ]   | This would reload your PATH environment variable to include\n[CI/test benchmark   ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/test benchmark   ]   | \n[CI/test benchmark   ]   | To configure your current shell, run:\n[CI/test benchmark   ]   | source \"$HOME/.cargo/env\"\n[CI/test exec_all    ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/test benchmark   ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/test exec_all    ]   | Default host: x86_64-unknown-linux-gnu\n[CI/test exec_all    ]   | rustup home:  /home/runneradmin/.rustup\n[CI/test exec_all    ]   | \n[CI/test exec_all    ]   | no active toolchain\n[CI/test exec_all    ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install nightly\n[CI/test benchmark   ]   | Default host: x86_64-unknown-linux-gnu\n[CI/test benchmark   ]   | rustup home:  /home/runneradmin/.rustup\n[CI/test benchmark   ]   | \n[CI/test benchmark   ]   | no active toolchain\n[CI/test exec_all    ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/test benchmark   ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install nightly\n[CI/test benchmark   ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/test benchmark   ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test benchmark   ]   | info: downloading component 'cargo'\n[CI/test benchmark   ]   | info: downloading component 'clippy'\n[CI/test afl         ]   | info: downloading component 'rustc'\n[CI/test benchmark   ]   | info: downloading component 'rust-docs'\n[CI/test exec_all    ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test exec_all    ]   | info: downloading component 'cargo'\n[CI/test benchmark   ]   | info: downloading component 'rust-std'\n[CI/Building warf cli]   | info: downloading component 'clippy'\n[CI/test libfuzzer   ]   | info: profile set to 'default'\n[CI/test libfuzzer   ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/test libfuzzer   ]   | info: skipping toolchain installation\n[CI/test libfuzzer   ]   | \n[CI/test libfuzzer   ]   | \n[CI/test libfuzzer   ]   | Rust is installed now. Great!\n[CI/test libfuzzer   ]   | \n[CI/test libfuzzer   ]   | To get started you may need to restart your current shell.\n[CI/test libfuzzer   ]   | This would reload your PATH environment variable to include\n[CI/test libfuzzer   ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/test libfuzzer   ]   | \n[CI/test libfuzzer   ]   | To configure your current shell, run:\n[CI/test libfuzzer   ]   | source \"$HOME/.cargo/env\"\n[CI/test libfuzzer   ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/test libfuzzer   ]   | Default host: x86_64-unknown-linux-gnu\n[CI/test libfuzzer   ]   | rustup home:  /home/runneradmin/.rustup\n[CI/test libfuzzer   ]   | \n[CI/test libfuzzer   ]   | no active toolchain\n[CI/test libfuzzer   ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install nightly\n[CI/test libfuzzer   ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/test benchmark   ]   | info: downloading component 'rustc'\n[CI/test exec_all    ]   | info: downloading component 'clippy'\n[CI/Building warf cli]   | info: downloading component 'rust-docs'\n[CI/test honggfuzz   ]   | info: downloading component 'rustc'\n[CI/test libfuzzer   ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test libfuzzer   ]   | info: downloading component 'cargo'\n[CI/test exec_all    ]   | info: downloading component 'rust-docs'\n[CI/test afl         ]   | info: downloading component 'rustfmt'\n[CI/test afl         ]   | info: installing component 'cargo'\n[CI/Check Rust fmt   ]   | info: profile set to 'default'\n[CI/Check Rust fmt   ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Check Rust fmt   ]   | info: skipping toolchain installation\n[CI/Check Rust fmt   ]   | \n[CI/Check Rust fmt   ]   | \n[CI/Check Rust fmt   ]   | Rust is installed now. Great!\n[CI/Check Rust fmt   ]   | \n[CI/Check Rust fmt   ]   | To get started you may need to restart your current shell.\n[CI/Check Rust fmt   ]   | This would reload your PATH environment variable to include\n[CI/Check Rust fmt   ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Check Rust fmt   ]   | \n[CI/Check Rust fmt   ]   | To configure your current shell, run:\n[CI/Check Rust fmt   ]   | source \"$HOME/.cargo/env\"\n[CI/test libfuzzer   ]   | info: downloading component 'clippy'\n[CI/Check Rust fmt   ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/Check Rust fmt   ]   | Default host: x86_64-unknown-linux-gnu\n[CI/Check Rust fmt   ]   | rustup home:  /home/runneradmin/.rustup\n[CI/Check Rust fmt   ]   | \n[CI/Check Rust fmt   ]   | no active toolchain\n[CI/Check Rust fmt   ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Check Rust fmt   ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Check Rust fmt   ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Check Rust fmt   ]   | Installed rustup 1.26.0 support components\n[CI/Check Rust fmt   ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install nightly --component rustfmt --allow-downgrade\n[CI/Check Rust fmt   ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/test afl         ]   | info: installing component 'clippy'\n[CI/Check Rust fmt   ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Check Rust fmt   ]   | info: downloading component 'cargo'\n[CI/test libfuzzer   ]   | info: downloading component 'rust-docs'\n[CI/test afl         ]   | info: installing component 'rust-docs'\n[CI/Building warf cli]   | info: downloading component 'rust-std'\n[CI/test honggfuzz   ]   | info: downloading component 'rustfmt'\n[CI/test honggfuzz   ]   | info: installing component 'cargo'\n[CI/test exec_all    ]   | info: downloading component 'rust-std'\n[CI/Check Rust fmt   ]   | info: downloading component 'clippy'\n[CI/test afl         ]   | info: installing component 'rust-std'\n[CI/test honggfuzz   ]   | info: installing component 'clippy'\n[CI/Check Rust fmt   ]   | info: downloading component 'rust-docs'\n[CI/test honggfuzz   ]   | info: installing component 'rust-docs'\n[CI/test exec_all    ]   | info: downloading component 'rustc'\n[CI/test libfuzzer   ]   | info: downloading component 'rust-std'\n[CI/Check Rust fmt   ]   | info: downloading component 'rust-std'\n[CI/Building docker  ]   | info: downloading component 'rustfmt'\n[CI/Building docker  ]   | info: installing component 'cargo'\n[CI/Building warf cli]   | info: downloading component 'rustc'\n[CI/Building docker  ]   | info: installing component 'clippy'\n[CI/Check Rust fmt   ]   | info: downloading component 'rustc'\n[CI/test benchmark   ]   | info: downloading component 'rustfmt'\n[CI/Building docker  ]   | info: installing component 'rust-docs'\n[CI/test afl         ]   | info: installing component 'rustc'\n[CI/test honggfuzz   ]   | info: installing component 'rust-std'\n[CI/test benchmark   ]   | info: installing component 'cargo'\n[CI/test exec_all    ]   | info: downloading component 'rustfmt'\n[CI/test exec_all    ]   | info: installing component 'cargo'\n[CI/test libfuzzer   ]   | info: downloading component 'rustc'\n[CI/Building warf cli]   | info: downloading component 'rustfmt'\n[CI/test benchmark   ]   | info: installing component 'clippy'\n[CI/Building warf cli]   | info: installing component 'cargo'\n[CI/Check Rust fmt   ]   | info: downloading component 'rustfmt'\n[CI/test exec_all    ]   | info: installing component 'clippy'\n[CI/Check Rust fmt   ]   | info: installing component 'cargo'\n[CI/test benchmark   ]   | info: installing component 'rust-docs'\n[CI/test exec_all    ]   | info: installing component 'rust-docs'\n[CI/test libfuzzer   ]   | info: downloading component 'rustfmt'\n[CI/Building warf cli]   | info: installing component 'clippy'\n[CI/Check Rust fmt   ]   | info: installing component 'clippy'\n[CI/test libfuzzer   ]   | info: installing component 'cargo'\n[CI/test honggfuzz   ]   | info: installing component 'rustc'\n[CI/Check Rust fmt   ]   | info: installing component 'rust-docs'\n[CI/Building warf cli]   | info: installing component 'rust-docs'\n[CI/test libfuzzer   ]   | info: installing component 'clippy'\n[CI/test libfuzzer   ]   | info: installing component 'rust-docs'\n[CI/test afl         ]   | info: installing component 'rustfmt'\n[CI/test afl         ]   | \n[CI/test afl         ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test afl         ]   | \n[CI/test afl         ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/test afl         ]   | info: checking for self-update\n[CI/test afl         ]   | [command]/home/runneradmin/.cargo/bin/rustup override set nightly\n[CI/test afl         ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[CI/test afl         ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing' set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/test afl         ]   | \n[CI/test afl         ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test afl         ]   | \n[CI/test afl         ]   \u2753  ::group::Gathering installed versions\n[CI/test afl         ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/test afl         ]   | rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test afl         ]   \u2699  ::set-output:: rustc=1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test afl         ]   \u2699  ::set-output:: rustc_hash=498553fc0\n[CI/test afl         ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/test afl         ]   | cargo 1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/test afl         ]   \u2699  ::set-output:: cargo=1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/test afl         ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/test afl         ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/test afl         ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/test afl         ]   | info: The currently active `rustc` version is `rustc 1.72.0-nightly (498553fc0 2023-05-29)`\n[CI/test afl         ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/test afl         ]   \u2753  ::endgroup::\n[CI/test afl         ]   \u2705  Success - Main Install latest nightly\n[CI/test afl         ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/test afl         ] \u2b50 Run Main Install afl dependencies\n[CI/test afl         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/test honggfuzz   ]   | info: installing component 'rustfmt'\n[CI/test honggfuzz   ]   | \n[CI/test honggfuzz   ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test honggfuzz   ]   | \n[CI/test honggfuzz   ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/test honggfuzz   ]   | info: checking for self-update\n[CI/test honggfuzz   ]   | [command]/home/runneradmin/.cargo/bin/rustup override set nightly\n[CI/test honggfuzz   ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[CI/test honggfuzz   ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing' set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/test honggfuzz   ]   | \n[CI/test honggfuzz   ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test honggfuzz   ]   | \n[CI/test honggfuzz   ]   \u2753  ::group::Gathering installed versions\n[CI/test honggfuzz   ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/test honggfuzz   ]   | rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test honggfuzz   ]   \u2699  ::set-output:: rustc=1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test honggfuzz   ]   \u2699  ::set-output:: rustc_hash=498553fc0\n[CI/test honggfuzz   ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/test honggfuzz   ]   | cargo 1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/test honggfuzz   ]   \u2699  ::set-output:: cargo=1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/test honggfuzz   ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/test honggfuzz   ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/test honggfuzz   ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/test honggfuzz   ]   | info: The currently active `rustc` version is `rustc 1.72.0-nightly (498553fc0 2023-05-29)`\n[CI/test honggfuzz   ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/test honggfuzz   ]   \u2753  ::endgroup::\n[CI/test honggfuzz   ]   \u2705  Success - Main Install latest nightly\n[CI/test honggfuzz   ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/test honggfuzz   ] \u2b50 Run Main Install honggfuzz dependencies\n[CI/test honggfuzz   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/Building docker  ]   | info: installing component 'rust-std'\n[CI/Building docker  ]   | info: installing component 'rustc'\n[CI/test benchmark   ]   | info: installing component 'rust-std'\n[CI/test exec_all    ]   | info: installing component 'rust-std'\n[CI/Building warf cli]   | info: installing component 'rust-std'\n[CI/Check Rust fmt   ]   | info: installing component 'rust-std'\n[CI/test libfuzzer   ]   | info: installing component 'rust-std'\n[CI/test benchmark   ]   | info: installing component 'rustc'\n[CI/Check Rust fmt   ]   | info: installing component 'rustc'\n[CI/test libfuzzer   ]   | info: installing component 'rustc'\n[CI/Building warf cli]   | info: installing component 'rustc'\n[CI/test exec_all    ]   | info: installing component 'rustc'\n[CI/Building docker  ]   | info: installing component 'rustfmt'\n[CI/Building docker  ]   | \n[CI/Building docker  ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Building docker  ]   | \n[CI/Building docker  ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Building docker  ]   | info: checking for self-update\n[CI/Building docker  ]   | [command]/home/runneradmin/.cargo/bin/rustup override set nightly\n[CI/Building docker  ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Building docker  ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing' set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Building docker  ]   | \n[CI/Building docker  ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Building docker  ]   | \n[CI/Building docker  ]   \u2753  ::group::Gathering installed versions\n[CI/Building docker  ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/Building docker  ]   | rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Building docker  ]   \u2699  ::set-output:: rustc=1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Building docker  ]   \u2699  ::set-output:: rustc_hash=498553fc0\n[CI/Building docker  ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/Building docker  ]   | cargo 1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/Building docker  ]   \u2699  ::set-output:: cargo=1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/Building docker  ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Building docker  ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Building docker  ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Building docker  ]   | info: The currently active `rustc` version is `rustc 1.72.0-nightly (498553fc0 2023-05-29)`\n[CI/Building docker  ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/Building docker  ]   \u2753  ::endgroup::\n[CI/Building docker  ]   \u2705  Success - Main Install latest nightly\n[CI/Building docker  ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Building docker  ] \u2b50 Run Main Build Docker\n[CI/test benchmark   ]   | info: installing component 'rustfmt'\n[CI/Building docker  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/Check Rust fmt   ]   | info: installing component 'rustfmt'\n[CI/test benchmark   ]   | \n[CI/test benchmark   ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test benchmark   ]   | \n[CI/test benchmark   ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/test benchmark   ]   | info: checking for self-update\n[CI/test benchmark   ]   | [command]/home/runneradmin/.cargo/bin/rustup override set nightly\n[CI/test benchmark   ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[CI/test benchmark   ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing' set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/test benchmark   ]   | \n[CI/test benchmark   ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test benchmark   ]   | \n[CI/test benchmark   ]   \u2753  ::group::Gathering installed versions\n[CI/test benchmark   ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/test benchmark   ]   | rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test benchmark   ]   \u2699  ::set-output:: rustc=1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test benchmark   ]   \u2699  ::set-output:: rustc_hash=498553fc0\n[CI/test benchmark   ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/test benchmark   ]   | cargo 1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/test benchmark   ]   \u2699  ::set-output:: cargo=1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/test benchmark   ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/test benchmark   ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/test benchmark   ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/test benchmark   ]   | info: The currently active `rustc` version is `rustc 1.72.0-nightly (498553fc0 2023-05-29)`\n[CI/test benchmark   ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/test benchmark   ]   \u2753  ::endgroup::\n[CI/Check Rust fmt   ]   | \n[CI/test benchmark   ]   \u2705  Success - Main Install latest nightly\n[CI/test libfuzzer   ]   | info: installing component 'rustfmt'\n[CI/Check Rust fmt   ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Check Rust fmt   ]   | \n[CI/Check Rust fmt   ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Check Rust fmt   ]   | info: checking for self-update\n[CI/Check Rust fmt   ]   | [command]/home/runneradmin/.cargo/bin/rustup override set nightly\n[CI/Check Rust fmt   ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Check Rust fmt   ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing' set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Check Rust fmt   ]   | \n[CI/Check Rust fmt   ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Check Rust fmt   ]   | \n[CI/Check Rust fmt   ]   \u2753  ::group::Gathering installed versions\n[CI/Check Rust fmt   ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/Check Rust fmt   ]   | rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Check Rust fmt   ]   \u2699  ::set-output:: rustc=1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Check Rust fmt   ]   \u2699  ::set-output:: rustc_hash=498553fc0\n[CI/Check Rust fmt   ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/Check Rust fmt   ]   | cargo 1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/Check Rust fmt   ]   \u2699  ::set-output:: cargo=1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/Check Rust fmt   ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Check Rust fmt   ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Check Rust fmt   ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/test exec_all    ]   | info: installing component 'rustfmt'\n[CI/Check Rust fmt   ]   | info: The currently active `rustc` version is `rustc 1.72.0-nightly (498553fc0 2023-05-29)`\n[CI/Check Rust fmt   ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/Check Rust fmt   ]   \u2753  ::endgroup::\n[CI/Check Rust fmt   ]   \u2705  Success - Main Install latest nightly\n[CI/test libfuzzer   ]   | \n[CI/test libfuzzer   ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test libfuzzer   ]   | \n[CI/test libfuzzer   ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/test libfuzzer   ]   | info: checking for self-update\n[CI/test libfuzzer   ]   | [command]/home/runneradmin/.cargo/bin/rustup override set nightly\n[CI/test libfuzzer   ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[CI/test libfuzzer   ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing' set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/test libfuzzer   ]   | \n[CI/test libfuzzer   ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test libfuzzer   ]   | \n[CI/test libfuzzer   ]   \u2753  ::group::Gathering installed versions\n[CI/test libfuzzer   ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/test benchmark   ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/test libfuzzer   ]   | rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test libfuzzer   ]   \u2699  ::set-output:: rustc=1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test libfuzzer   ]   \u2699  ::set-output:: rustc_hash=498553fc0\n[CI/test libfuzzer   ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/test benchmark   ] \u2b50 Run Main Test benchmark\n[CI/test libfuzzer   ]   | cargo 1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/test libfuzzer   ]   \u2699  ::set-output:: cargo=1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/test libfuzzer   ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/test libfuzzer   ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/test libfuzzer   ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/test libfuzzer   ]   | info: The currently active `rustc` version is `rustc 1.72.0-nightly (498553fc0 2023-05-29)`\n[CI/test libfuzzer   ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/test libfuzzer   ]   \u2753  ::endgroup::\n[CI/test libfuzzer   ]   \u2705  Success - Main Install latest nightly\n[CI/test exec_all    ]   | \n[CI/Building warf cli]   | info: installing component 'rustfmt'\n[CI/Check Rust fmt   ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/test exec_all    ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test exec_all    ]   | \n[CI/test exec_all    ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/test exec_all    ]   | info: checking for self-update\n[CI/test exec_all    ]   | [command]/home/runneradmin/.cargo/bin/rustup override set nightly\n[CI/test exec_all    ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[CI/test exec_all    ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing' set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/test exec_all    ]   | \n[CI/Check Rust fmt   ] \u2b50 Run Main Run cargo fmt\n[CI/test exec_all    ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test exec_all    ]   | \n[CI/test exec_all    ]   \u2753  ::group::Gathering installed versions\n[CI/test exec_all    ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/test exec_all    ]   | rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test exec_all    ]   \u2699  ::set-output:: rustc=1.72.0-nightly (498553fc0 2023-05-29)\n[CI/test exec_all    ]   \u2699  ::set-output:: rustc_hash=498553fc0\n[CI/test exec_all    ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/test benchmark   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/test exec_all    ]   | cargo 1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/test exec_all    ]   \u2699  ::set-output:: cargo=1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/test exec_all    ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/test exec_all    ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/test exec_all    ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/test exec_all    ]   | info: The currently active `rustc` version is `rustc 1.72.0-nightly (498553fc0 2023-05-29)`\n[CI/test exec_all    ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/test exec_all    ]   \u2753  ::endgroup::\n[CI/test exec_all    ]   \u2705  Success - Main Install latest nightly\n[CI/test libfuzzer   ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Check Rust fmt   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/Building warf cli]   | \n[CI/Building warf cli]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Building warf cli]   | \n[CI/Building warf cli]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Building warf cli]   | info: checking for self-update\n[CI/Building warf cli]   | [command]/home/runneradmin/.cargo/bin/rustup override set nightly\n[CI/test libfuzzer   ] \u2b50 Run Main Install cargo-fuzz\n[CI/Building warf cli]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Building warf cli]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing' set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Building warf cli]   | \n[CI/Building warf cli]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Building warf cli]   | \n[CI/Building warf cli]   \u2753  ::group::Gathering installed versions\n[CI/Building warf cli]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/Building warf cli]   | rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Building warf cli]   \u2699  ::set-output:: rustc=1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Building warf cli]   \u2699  ::set-output:: rustc_hash=498553fc0\n[CI/Building warf cli]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/Building warf cli]   | cargo 1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/Building warf cli]   \u2699  ::set-output:: cargo=1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/Building warf cli]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Building warf cli]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Building warf cli]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Building warf cli]   | info: The currently active `rustc` version is `rustc 1.72.0-nightly (498553fc0 2023-05-29)`\n[CI/Building warf cli]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/Building warf cli]   \u2753  ::endgroup::\n[CI/Building warf cli]   \u2705  Success - Main Install latest nightly\n[CI/test exec_all    ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/test libfuzzer   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/test exec_all    ] \u2b50 Run Main Test exec_all\n[CI/Building warf cli]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/test exec_all    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/Building warf cli] \u2b50 Run Main Build\n[CI/Building warf cli]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/Check Rust fmt   ]   | cargo fmt --all -- --check\n[CI/test benchmark   ]   | cargo +nightly build --release --out-dir=. -Z unstable-options\n[CI/Building docker  ]   | DOCKER_BUILDKIT=1 docker build . -t warf \n[CI/test exec_all    ]   | cargo +nightly build --release --out-dir=. -Z unstable-options\n[CI/test libfuzzer   ]   |     Updating crates.io index\n[CI/Building docker  ]   | failed to dial gRPC: cannot connect to the Docker daemon. Is 'docker daemon' running on this host?: dial unix /var/run/docker.sock: connect: permission denied\n[CI/Building warf cli]   | cargo +nightly build --release --out-dir=. -Z unstable-options\n[CI/Building docker  ]   | make: *** [Makefile:36: docker] Error 1\n[CI/Building docker  ]   \u274c  Failure - Main Build Docker\n[CI/test benchmark   ]   |     Updating crates.io index\n[CI/test exec_all    ]   |     Updating crates.io index\n[CI/Building warf cli]   |     Updating crates.io index\n[CI/test libfuzzer   ]   |  Downloading crates ...\n[CI/Check Rust fmt   ]   \u2705  Success - Main Run cargo fmt\n[CI/test afl         ]   | Hit:1 http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu focal InRelease\n[CI/test afl         ]   | Get:2 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]\n[CI/test honggfuzz   ]   | Hit:1 http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu focal InRelease\n[CI/test honggfuzz   ]   | Get:2 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]\n[CI/test honggfuzz   ]   | Get:3 https://dl.hhvm.com/ubuntu focal InRelease [3137 B]\n[CI/test honggfuzz   ]   | Get:4 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ InRelease [3622 B]\n[CI/test afl         ]   | Get:3 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ InRelease [3622 B]\n[CI/test afl         ]   | Get:4 http://dl.google.com/linux/chrome/deb stable InRelease [1825 B]\n[CI/test honggfuzz   ]   | Get:5 https://packages.microsoft.com/ubuntu/20.04/prod focal InRelease [3611 B]\n[CI/test honggfuzz   ]   | Hit:6 http://archive.ubuntu.com/ubuntu focal InRelease\n[CI/test honggfuzz   ]   | Get:7 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]\n[CI/test honggfuzz   ]   | Get:8 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]\n[CI/test libfuzzer   ]   |   Downloaded cargo-fuzz v0.11.2\n[CI/test libfuzzer   ]   |   Installing cargo-fuzz v0.11.2\n[CI/test libfuzzer   ]   |     Updating crates.io index\n[CI/test honggfuzz   ]   | Get:9 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [739 kB]\n[CI/test afl         ]   | Get:5 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [2726 kB]\n[CI/test honggfuzz   ]   | Get:10 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [2726 kB]\n[CI/test honggfuzz   ]   | Get:11 https://dl.hhvm.com/ubuntu focal/main amd64 Packages [1880 B]\n[CI/Building docker  ] exitcode '2': failure\n[CI/test afl         ]   | Get:6 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ Packages [77.6 kB]\n[CI/test honggfuzz   ]   | Get:12 http://security.ubuntu.com/ubuntu focal-security/multiverse i386 Packages [8141 B]\n[CI/test honggfuzz   ]   | Get:13 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [739 kB]\n[CI/test honggfuzz   ]   | Get:14 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [2270 kB]\n[CI/test honggfuzz   ]   | Get:15 http://security.ubuntu.com/ubuntu focal-security/restricted i386 Packages [36.9 kB]\n[CI/test honggfuzz   ]   | Get:16 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [28.5 kB]\n[CI/test honggfuzz   ]   | Get:17 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [1052 kB]\n[CI/test honggfuzz   ]   | Get:18 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ Packages [77.6 kB]\n[CI/test afl         ]   | Err:4 http://dl.google.com/linux/chrome/deb stable InRelease\n[CI/test afl         ]   |   The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[CI/test exec_all    ]   |  Downloading crates ...\n[CI/test honggfuzz   ]   | Get:19 https://packages.microsoft.com/ubuntu/20.04/prod focal/main all Packages [2521 B]\n[CI/test honggfuzz   ]   | Get:20 https://packages.microsoft.com/ubuntu/20.04/prod focal/main amd64 Packages [201 kB]\n[CI/test libfuzzer   ]   |  Downloading crates ...\n[CI/test honggfuzz   ]   | Get:21 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1346 kB]\n[CI/test honggfuzz   ]   | Get:22 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [31.2 kB]\n[CI/test afl         ]   | Get:7 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [2270 kB]\n[CI/test honggfuzz   ]   | Get:23 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [2412 kB]\n[CI/test honggfuzz   ]   | Get:24 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [3204 kB]\n[CI/test honggfuzz   ]   | Get:25 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [28.6 kB]\n[CI/test honggfuzz   ]   | Get:26 http://archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [55.2 kB]\n[CI/test exec_all    ]   |   Downloaded strsim v0.10.0\n[CI/test exec_all    ]   |   Downloaded strsim v0.8.0\n[CI/test exec_all    ]   |   Downloaded textwrap v0.11.0\n[CI/test exec_all    ]   |   Downloaded synstructure v0.12.6\n[CI/test exec_all    ]   |   Downloaded rustc-demangle v0.1.23\n[CI/test exec_all    ]   |   Downloaded atty v0.2.14\n[CI/test libfuzzer   ]   |   Downloaded anstream v0.3.2\n[CI/test libfuzzer   ]   |   Downloaded cfg-if v1.0.0\n[CI/test exec_all    ]   |   Downloaded adler v1.0.2\n[CI/test libfuzzer   ]   |   Downloaded anstyle-query v1.0.0\n[CI/test libfuzzer   ]   |   Downloaded bitflags v1.3.2\n[CI/test libfuzzer   ]   |   Downloaded anstyle-parse v0.2.0\n[CI/test libfuzzer   ]   |   Downloaded clap v4.3.0\n[CI/test honggfuzz   ]   | Get:27 http://dl.google.com/linux/chrome/deb stable InRelease [1825 B]\n[CI/test libfuzzer   ]   |   Downloaded serde v1.0.163\n[CI/test libfuzzer   ]   |   Downloaded quote v1.0.28\n[CI/test libfuzzer   ]   |   Downloaded proc-macro2 v1.0.59\n[CI/test libfuzzer   ]   |   Downloaded toml v0.5.11\n[CI/test libfuzzer   ]   |   Downloaded utf8parse v0.2.1\n[CI/test libfuzzer   ]   |   Downloaded strsim v0.10.0\n[CI/test libfuzzer   ]   |   Downloaded once_cell v1.17.2\n[CI/test libfuzzer   ]   |   Downloaded io-lifetimes v1.0.11\n[CI/test libfuzzer   ]   |   Downloaded semver v1.0.17\n[CI/test libfuzzer   ]   |   Downloaded unicode-ident v1.0.9\n[CI/test libfuzzer   ]   |   Downloaded rustc_version v0.4.0\n[CI/test libfuzzer   ]   |   Downloaded is-terminal v0.4.7\n[CI/test libfuzzer   ]   |   Downloaded rustix v0.37.19\n[CI/test libfuzzer   ]   |   Downloaded libc v0.2.144\n[CI/Building warf cli]   |  Downloading crates ...\n[CI/test honggfuzz   ]   | Err:27 http://dl.google.com/linux/chrome/deb stable InRelease\n[CI/test honggfuzz   ]   |   The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[CI/test libfuzzer   ]   |   Downloaded heck v0.4.1\n[CI/test libfuzzer   ]   |   Downloaded fastrand v1.9.0\n[CI/test libfuzzer   ]   |   Downloaded current_platform v0.2.0\n[CI/test libfuzzer   ]   |   Downloaded colorchoice v1.0.0\n[CI/test libfuzzer   ]   |   Downloaded clap_lex v0.5.0\n[CI/test libfuzzer   ]   |   Downloaded clap_derive v4.3.0\n[CI/test libfuzzer   ]   |   Downloaded anstyle v1.0.0\n[CI/test libfuzzer   ]   |   Downloaded tempfile v3.5.0\n[CI/test libfuzzer   ]   |   Downloaded syn v2.0.18\n[CI/test libfuzzer   ]   |   Downloaded linux-raw-sys v0.3.8\n[CI/test exec_all    ]   |   Downloaded failure_derive v0.1.8\n[CI/test libfuzzer   ]   |   Downloaded clap_builder v4.3.0\n[CI/test exec_all    ]   |   Downloaded strum v0.18.0\n[CI/test libfuzzer   ]   |   Downloaded anyhow v1.0.71\n[CI/test exec_all    ]   |   Downloaded unicode-width v0.1.10\n[CI/test exec_all    ]   |   Downloaded vec_map v0.8.2\n[CI/test exec_all    ]   |   Downloaded quote v0.6.13\n[CI/test exec_all    ]   |   Downloaded cfg-if v1.0.0\n[CI/test exec_all    ]   |   Downloaded bitflags v1.3.2\n[CI/test exec_all    ]   |   Downloaded strum_macros v0.18.0\n[CI/test exec_all    ]   |   Downloaded unicode-xid v0.2.4\n[CI/test exec_all    ]   |   Downloaded unicode-ident v1.0.9\n[CI/test libfuzzer   ]   |    Compiling libc v0.2.144\n[CI/test libfuzzer   ]   |    Compiling io-lifetimes v1.0.11\n[CI/test libfuzzer   ]   |    Compiling rustix v0.37.19\n[CI/test libfuzzer   ]   |    Compiling proc-macro2 v1.0.59\n[CI/test libfuzzer   ]   |    Compiling linux-raw-sys v0.3.8\n[CI/test libfuzzer   ]   |    Compiling bitflags v1.3.2\n[CI/test libfuzzer   ]   |    Compiling unicode-ident v1.0.9\n[CI/test libfuzzer   ]   |    Compiling quote v1.0.28\n[CI/test libfuzzer   ]   |    Compiling utf8parse v0.2.1\n[CI/test libfuzzer   ]   |    Compiling serde v1.0.163\n[CI/test exec_all    ]   |   Downloaded unicode-xid v0.1.0\n[CI/test exec_all    ]   |   Downloaded structopt v0.2.18\n[CI/test libfuzzer   ]   |    Compiling semver v1.0.17\n[CI/test libfuzzer   ]   |    Compiling anstyle v1.0.0\n[CI/test exec_all    ]   |   Downloaded heck v0.3.3\n[CI/test libfuzzer   ]   |    Compiling colorchoice v1.0.0\n[CI/test exec_all    ]   |   Downloaded structopt-derive v0.2.18\n[CI/test exec_all    ]   |   Downloaded failure v0.1.8\n[CI/test libfuzzer   ]   |    Compiling anstyle-query v1.0.0\n[CI/test libfuzzer   ]   |    Compiling anyhow v1.0.71\n[CI/test libfuzzer   ]   |    Compiling current_platform v0.2.0\n[CI/test libfuzzer   ]   |    Compiling strsim v0.10.0\n[CI/test libfuzzer   ]   |    Compiling heck v0.4.1\n[CI/test libfuzzer   ]   |    Compiling clap_lex v0.5.0\n[CI/test libfuzzer   ]   |    Compiling cfg-if v1.0.0\n[CI/test libfuzzer   ]   |    Compiling fastrand v1.9.0\n[CI/test libfuzzer   ]   |    Compiling once_cell v1.17.2\n[CI/test exec_all    ]   |   Downloaded quote v1.0.28\n[CI/test exec_all    ]   |   Downloaded proc-macro2 v0.4.30\n[CI/test exec_all    ]   |   Downloaded fs_extra v1.3.0\n[CI/test exec_all    ]   |   Downloaded addr2line v0.19.0\n[CI/test exec_all    ]   |   Downloaded proc-macro2 v1.0.59\n[CI/test exec_all    ]   |   Downloaded ansi_term v0.12.1\n[CI/test exec_all    ]   |   Downloaded backtrace v0.3.67\n[CI/test afl         ]   | Hit:8 http://archive.ubuntu.com/ubuntu focal InRelease\n[CI/test afl         ]   | Get:9 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]\n[CI/test afl         ]   | Get:10 https://dl.hhvm.com/ubuntu focal InRelease [3137 B]\n[CI/test exec_all    ]   |   Downloaded miniz_oxide v0.6.2\n[CI/test exec_all    ]   |   Downloaded memchr v2.5.0\n[CI/test afl         ]   | Get:11 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]\n[CI/test exec_all    ]   |   Downloaded cc v1.0.79\n[CI/test benchmark   ]   |  Downloading crates ...\n[CI/test libfuzzer   ]   |    Compiling anstyle-parse v0.2.0\n[CI/test exec_all    ]   |   Downloaded unicode-segmentation v1.10.1\n[CI/test exec_all    ]   |   Downloaded syn v0.15.44\n[CI/test exec_all    ]   |   Downloaded aho-corasick v1.0.1\n[CI/test afl         ]   | Get:12 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [1052 kB]\n[CI/test exec_all    ]   |   Downloaded syn v1.0.109\n[CI/test exec_all    ]   |   Downloaded clap v2.34.0\n[CI/test afl         ]   | Hit:13 https://adoptopenjdk.jfrog.io/adoptopenjdk/deb focal InRelease\n[CI/test exec_all    ]   |   Downloaded regex v1.8.3\n[CI/test exec_all    ]   |   Downloaded object v0.30.3\n[CI/test afl         ]   | Get:14 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [28.5 kB]\n[CI/test exec_all    ]   |   Downloaded regex-syntax v0.7.2\n[CI/test exec_all    ]   |   Downloaded gimli v0.27.2\n[CI/test exec_all    ]   |   Downloaded libc v0.2.144\n[CI/test afl         ]   | Get:15 http://security.ubuntu.com/ubuntu focal-security/multiverse i386 Packages [8141 B]\n[CI/test afl         ]   | Get:16 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [739 kB]\n[CI/test benchmark   ]   |   Downloaded rustc-demangle v0.1.23\n[CI/test benchmark   ]   |   Downloaded strsim v0.10.0\n[CI/test exec_all    ]   |    Compiling proc-macro2 v1.0.59\n[CI/test benchmark   ]   |   Downloaded atty v0.2.14\n[CI/test exec_all    ]   |    Compiling unicode-ident v1.0.9\n[CI/test benchmark   ]   |   Downloaded synstructure v0.12.6\n[CI/test benchmark   ]   |   Downloaded fs_extra v1.3.0\n[CI/test exec_all    ]   |    Compiling quote v1.0.28\n[CI/test benchmark   ]   |   Downloaded vec_map v0.8.2\n[CI/test benchmark   ]   |   Downloaded unicode-ident v1.0.9\n[CI/test benchmark   ]   |   Downloaded backtrace v0.3.67\n[CI/test exec_all    ]   |    Compiling libc v0.2.144\n[CI/test exec_all    ]   |    Compiling memchr v2.5.0\n[CI/test exec_all    ]   |    Compiling syn v1.0.109\n[CI/test benchmark   ]   |   Downloaded quote v0.6.13\n[CI/Building warf cli]   |   Downloaded strsim v0.8.0\n[CI/test benchmark   ]   |   Downloaded unicode-segmentation v1.10.1\n[CI/Building warf cli]   |   Downloaded structopt-derive v0.2.18\n[CI/test exec_all    ]   |    Compiling proc-macro2 v0.4.30\n[CI/Building warf cli]   |   Downloaded strum_macros v0.18.0\n[CI/test benchmark   ]   |   Downloaded syn v0.15.44\n[CI/Building warf cli]   |   Downloaded strum v0.18.0\n[CI/Building warf cli]   |   Downloaded miniz_oxide v0.6.2\n[CI/Building warf cli]   |   Downloaded regex v1.8.3\n[CI/test exec_all    ]   |    Compiling unicode-xid v0.1.0\n[CI/test exec_all    ]   |    Compiling unicode-segmentation v1.10.1\n[CI/test exec_all    ]   |    Compiling cc v1.0.79\n[CI/test exec_all    ]   |    Compiling syn v0.15.44\n[CI/test exec_all    ]   |    Compiling adler v1.0.2\n[CI/test exec_all    ]   |    Compiling failure_derive v0.1.8\n[CI/test exec_all    ]   |    Compiling unicode-width v0.1.10\n[CI/test exec_all    ]   |    Compiling gimli v0.27.2\n[CI/test exec_all    ]   |    Compiling unicode-xid v0.2.4\n[CI/test exec_all    ]   |    Compiling rustc-demangle v0.1.23\n[CI/test exec_all    ]   |    Compiling vec_map v0.8.2\n[CI/test exec_all    ]   |    Compiling cfg-if v1.0.0\n[CI/test exec_all    ]   |    Compiling ansi_term v0.12.1\n[CI/test exec_all    ]   |    Compiling strsim v0.8.0\n[CI/test exec_all    ]   |    Compiling bitflags v1.3.2\n[CI/test exec_all    ]   |    Compiling regex-syntax v0.7.2\n[CI/test exec_all    ]   |    Compiling strsim v0.10.0\n[CI/test exec_all    ]   |    Compiling strum v0.18.0\n[CI/test exec_all    ]   |    Compiling fs_extra v1.3.0\n[CI/test benchmark   ]   |   Downloaded proc-macro2 v1.0.59\n[CI/Building warf cli]   |   Downloaded syn v0.15.44\n[CI/Building warf cli]   |   Downloaded vec_map v0.8.2\n[CI/Building warf cli]   |   Downloaded textwrap v0.11.0\n[CI/Building warf cli]   |   Downloaded unicode-xid v0.1.0\n[CI/test benchmark   ]   |   Downloaded proc-macro2 v0.4.30\n[CI/test benchmark   ]   |   Downloaded memchr v2.5.0\n[CI/test benchmark   ]   |   Downloaded clap v2.34.0\n[CI/test benchmark   ]   |   Downloaded regex v1.8.3\n[CI/Building warf cli]   |   Downloaded unicode-ident v1.0.9\n[CI/test benchmark   ]   |   Downloaded syn v1.0.109\n[CI/Building warf cli]   |   Downloaded fs_extra v1.3.0\n[CI/Building warf cli]   |   Downloaded memchr v2.5.0\n[CI/Building warf cli]   |   Downloaded unicode-segmentation v1.10.1\n[CI/test benchmark   ]   |   Downloaded regex-syntax v0.7.2\n[CI/Building warf cli]   |   Downloaded cc v1.0.79\n[CI/Building warf cli]   |   Downloaded aho-corasick v1.0.1\n[CI/test honggfuzz   ]   | Hit:28 https://adoptopenjdk.jfrog.io/adoptopenjdk/deb focal InRelease\n[CI/Building warf cli]   |   Downloaded backtrace v0.3.67\n[CI/test benchmark   ]   |   Downloaded object v0.30.3\n[CI/Building warf cli]   |   Downloaded failure v0.1.8\n[CI/test libfuzzer   ]   |    Compiling rustc_version v0.4.0\n[CI/Building warf cli]   |   Downloaded ansi_term v0.12.1\n[CI/Building warf cli]   |   Downloaded syn v1.0.109\n[CI/test exec_all    ]   |    Compiling miniz_oxide v0.6.2\n[CI/test exec_all    ]   |    Compiling textwrap v0.11.0\n[CI/test afl         ]   | Get:17 https://dl.hhvm.com/ubuntu focal/main amd64 Packages [1880 B]\n[CI/test benchmark   ]   |   Downloaded aho-corasick v1.0.1\n[CI/test benchmark   ]   |   Downloaded unicode-xid v0.2.4\n[CI/Building warf cli]   |   Downloaded regex-syntax v0.7.2\n[CI/test benchmark   ]   |   Downloaded unicode-xid v0.1.0\n[CI/test benchmark   ]   |   Downloaded unicode-width v0.1.10\n[CI/test benchmark   ]   |   Downloaded textwrap v0.11.0\n[CI/test benchmark   ]   |   Downloaded libc v0.2.144\n[CI/Building warf cli]   |   Downloaded object v0.30.3\n[CI/test afl         ]   | Get:18 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [739 kB]\n[CI/Building warf cli]   |   Downloaded proc-macro2 v1.0.59\n[CI/Building warf cli]   |   Downloaded proc-macro2 v0.4.30\n[CI/Building warf cli]   |   Downloaded unicode-width v0.1.10\n[CI/Building warf cli]   |   Downloaded quote v1.0.28\n[CI/Building warf cli]   |   Downloaded heck v0.3.3\n[CI/Building warf cli]   |   Downloaded libc v0.2.144\n[CI/test benchmark   ]   |   Downloaded gimli v0.27.2\n[CI/test benchmark   ]   |   Downloaded strum_macros v0.18.0\n[CI/test benchmark   ]   |   Downloaded structopt-derive v0.2.18\n[CI/test benchmark   ]   |   Downloaded strsim v0.8.0\n[CI/test benchmark   ]   |   Downloaded miniz_oxide v0.6.2\n[CI/test benchmark   ]   |   Downloaded heck v0.3.3\n[CI/test benchmark   ]   |   Downloaded failure_derive v0.1.8\n[CI/test benchmark   ]   |   Downloaded cc v1.0.79\n[CI/test benchmark   ]   |   Downloaded failure v0.1.8\n[CI/Building warf cli]   |   Downloaded gimli v0.27.2\n[CI/test benchmark   ]   |   Downloaded cfg-if v1.0.0\n[CI/test benchmark   ]   |   Downloaded addr2line v0.19.0\n[CI/test benchmark   ]   |   Downloaded strum v0.18.0\n[CI/test benchmark   ]   |   Downloaded structopt v0.2.18\n[CI/test benchmark   ]   |   Downloaded quote v1.0.28\n[CI/test benchmark   ]   |   Downloaded bitflags v1.3.2\n[CI/Building warf cli]   |   Downloaded cfg-if v1.0.0\n[CI/Building warf cli]   |   Downloaded bitflags v1.3.2\n[CI/test benchmark   ]   |   Downloaded ansi_term v0.12.1\n[CI/test benchmark   ]   |   Downloaded adler v1.0.2\n[CI/Building warf cli]   |   Downloaded atty v0.2.14\n[CI/Building warf cli]   |   Downloaded clap v2.34.0\n[CI/test benchmark   ]   |     Blocking waiting for file lock on build directory\n[CI/Building warf cli]   |   Downloaded unicode-xid v0.2.4\n[CI/test afl         ]   | Get:19 http://security.ubuntu.com/ubuntu focal-security/restricted i386 Packages [36.9 kB]\n[CI/Building warf cli]   |   Downloaded synstructure v0.12.6\n[CI/Building warf cli]   |   Downloaded adler v1.0.2\n[CI/Building warf cli]   |   Downloaded addr2line v0.19.0\n[CI/Building warf cli]   |   Downloaded structopt v0.2.18\n[CI/Building warf cli]   |   Downloaded rustc-demangle v0.1.23\n[CI/Building warf cli]   |   Downloaded quote v0.6.13\n[CI/Building warf cli]   |   Downloaded failure_derive v0.1.8\n[CI/Building warf cli]   |   Downloaded strsim v0.10.0\n[CI/Building warf cli]   |     Blocking waiting for file lock on build directory\n[CI/test exec_all    ]   |    Compiling heck v0.3.3\n[CI/test libfuzzer   ]   |    Compiling syn v2.0.18\n[CI/test afl         ]   | Get:20 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [3204 kB]\n[CI/test honggfuzz   ]   | Fetched 15.3 MB in 8s (1924 kB/s)\n[CI/test afl         ]   | Get:21 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1346 kB]\n[CI/test afl         ]   | Get:22 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [31.2 kB]\n[CI/test afl         ]   | Get:23 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [2412 kB]\n[CI/test afl         ]   | Get:24 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [28.6 kB]\n[CI/test afl         ]   | Get:25 http://archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [55.2 kB]\n[CI/test exec_all    ]   |    Compiling backtrace v0.3.67\n[CI/test exec_all    ]   |    Compiling object v0.30.3\n[CI/test exec_all    ]   |    Compiling aho-corasick v1.0.1\n[CI/test exec_all    ]   |    Compiling quote v0.6.13\n[CI/test exec_all    ]   |    Compiling atty v0.2.14\n[CI/test exec_all    ]   |    Compiling clap v2.34.0\n[CI/test honggfuzz   ]   | Reading package lists...\n[CI/test honggfuzz   ]   | W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: http://dl.google.com/linux/chrome/deb stable InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[CI/test honggfuzz   ]   | W: Failed to fetch http://dl.google.com/linux/chrome/deb/dists/stable/InRelease  The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[CI/test honggfuzz   ]   | W: Some index files failed to download. They have been ignored, or old ones used instead.\n[CI/test honggfuzz   ]   | \n[CI/test honggfuzz   ]   | WARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n[CI/test honggfuzz   ]   | \n[CI/test exec_all    ]   |    Compiling regex v1.8.3\n[CI/test afl         ]   | Get:26 https://packages.microsoft.com/ubuntu/20.04/prod focal InRelease [3611 B]\n[CI/test exec_all    ]   |    Compiling addr2line v0.19.0\n[CI/test honggfuzz   ]   | Reading package lists...\n[CI/test libfuzzer   ]   |    Compiling toml v0.5.11\n[CI/test afl         ]   | Get:27 https://packages.microsoft.com/ubuntu/20.04/prod focal/main amd64 Packages [201 kB]\n[CI/test honggfuzz   ]   | Building dependency tree...\n[CI/test honggfuzz   ]   | Reading state information...\n[CI/test afl         ]   | Get:28 https://packages.microsoft.com/ubuntu/20.04/prod focal/main all Packages [2521 B]\n[CI/test exec_all    ]   |    Compiling structopt-derive v0.2.18\n[CI/test libfuzzer   ]   |    Compiling is-terminal v0.4.7\n[CI/test libfuzzer   ]   |    Compiling tempfile v3.5.0\n[CI/test afl         ]   | Fetched 15.3 MB in 11s (1354 kB/s)\n[CI/test libfuzzer   ]   |    Compiling anstream v0.3.2\n[CI/test exec_all    ]   |    Compiling synstructure v0.12.6\n[CI/test libfuzzer   ]   |    Compiling clap_builder v4.3.0\n[CI/test honggfuzz   ]   | build-essential is already the newest version (12.8ubuntu1.1).\n[CI/test honggfuzz   ]   | The following additional packages will be installed:\n[CI/test honggfuzz   ]   |   binutils binutils-common binutils-x86-64-linux-gnu libbinutils\n[CI/test honggfuzz   ]   |   libblocksruntime0 libctf-nobfd0 libctf0 libunwind8\n[CI/test honggfuzz   ]   | Suggested packages:\n[CI/test honggfuzz   ]   |   binutils-doc\n[CI/test honggfuzz   ]   | The following NEW packages will be installed:\n[CI/test honggfuzz   ]   |   binutils-dev libblocksruntime-dev libblocksruntime0 libunwind-dev\n[CI/test honggfuzz   ]   | The following packages will be upgraded:\n[CI/test honggfuzz   ]   |   binutils binutils-common binutils-x86-64-linux-gnu libbinutils libctf-nobfd0\n[CI/test honggfuzz   ]   |   libctf0 libunwind8\n[CI/test libfuzzer   ]   |    Compiling clap_derive v4.3.0\n[CI/test honggfuzz   ]   | 7 upgraded, 4 newly installed, 0 to remove and 381 not upgraded.\n[CI/test honggfuzz   ]   | Need to get 6566 kB of archives.\n[CI/test honggfuzz   ]   | After this operation, 34.3 MB of additional disk space will be used.\n[CI/test honggfuzz   ]   | Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libctf0 amd64 2.34-6ubuntu1.5 [46.6 kB]\n[CI/test honggfuzz   ]   | Get:2 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 binutils-x86-64-linux-gnu amd64 2.34-6ubuntu1.5 [1613 kB]\n[CI/test honggfuzz   ]   | Get:3 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libbinutils amd64 2.34-6ubuntu1.5 [475 kB]\n[CI/test honggfuzz   ]   | Get:4 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 binutils amd64 2.34-6ubuntu1.5 [3372 B]\n[CI/test honggfuzz   ]   | Get:5 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 binutils-common amd64 2.34-6ubuntu1.5 [207 kB]\n[CI/test exec_all    ]   |    Compiling strum_macros v0.18.0\n[CI/test honggfuzz   ]   | Get:6 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libctf-nobfd0 amd64 2.34-6ubuntu1.5 [47.4 kB]\n[CI/test honggfuzz   ]   | Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libunwind8 amd64 1.2.1-9ubuntu0.1 [47.7 kB]\n[CI/test honggfuzz   ]   | Get:8 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libunwind-dev amd64 1.2.1-9ubuntu0.1 [472 kB]\n[CI/test honggfuzz   ]   | Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 binutils-dev amd64 2.34-6ubuntu1.5 [3640 kB]\n[CI/test honggfuzz   ]   | Get:10 http://archive.ubuntu.com/ubuntu focal/universe amd64 libblocksruntime0 amd64 0.4.1-1.1 [6412 B]\n[CI/test honggfuzz   ]   | Get:11 http://archive.ubuntu.com/ubuntu focal/universe amd64 libblocksruntime-dev amd64 0.4.1-1.1 [6806 B]\n[CI/test exec_all    ]   |    Compiling structopt v0.2.18\n[CI/test afl         ]   | Reading package lists...\n[CI/test afl         ]   | W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: http://dl.google.com/linux/chrome/deb stable InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[CI/test afl         ]   | W: Failed to fetch http://dl.google.com/linux/chrome/deb/dists/stable/InRelease  The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[CI/test afl         ]   | W: Some index files failed to download. They have been ignored, or old ones used instead.\n[CI/test afl         ]   | \n[CI/test afl         ]   | WARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n[CI/test afl         ]   | \n[CI/test exec_all    ]   |    Compiling failure v0.1.8\n[CI/test honggfuzz   ]   | Fetched 6566 kB in 0s (13.9 MB/s)\n[CI/test afl         ]   | Reading package lists...\n[CI/test afl         ]   | Building dependency tree...\n[CI/test afl         ]   | Reading state information...\n[CI/test honggfuzz   ]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[CI/test honggfuzz   ]   | Preparing to unpack .../00-libctf0_2.34-6ubuntu1.5_amd64.deb ...\r\n[CI/test honggfuzz   ]   | Unpacking libctf0:amd64 (2.34-6ubuntu1.5) over (2.34-6ubuntu1.1) ...\r\n[CI/test libfuzzer   ]   |    Compiling clap v4.3.0\n[CI/test honggfuzz   ]   | Preparing to unpack .../01-binutils-x86-64-linux-gnu_2.34-6ubuntu1.5_amd64.deb ...\r\n[CI/test afl         ]   | automake is already the newest version (1:1.16.1-4ubuntu6).\n[CI/test afl         ]   | bison is already the newest version (2:3.5.1+dfsg-1).\n[CI/test afl         ]   | python3 is already the newest version (3.8.2-0ubuntu2).\n[CI/test afl         ]   | build-essential is already the newest version (12.8ubuntu1.1).\n[CI/test afl         ]   | libglib2.0-dev is already the newest version (2.64.6-1~ubuntu20.04.4).\n[CI/test afl         ]   | The following additional packages will be installed:\n[CI/test afl         ]   |   cmake-data libjsoncpp1 libpixman-1-0 librhash0 llvm-runtime\n[CI/test afl         ]   |   python-pkg-resources\n[CI/test afl         ]   | Suggested packages:\n[CI/test afl         ]   |   cmake-doc ninja-build python-setuptools-doc\n[CI/test honggfuzz   ]   | Unpacking binutils-x86-64-linux-gnu (2.34-6ubuntu1.5) over (2.34-6ubuntu1.1) ...\r\n[CI/test afl         ]   | The following NEW packages will be installed:\n[CI/test afl         ]   |   clang cmake cmake-data libjsoncpp1 librhash0 libtool-bin llvm llvm-runtime\n[CI/test afl         ]   |   python-pkg-resources python-setuptools\n[CI/test afl         ]   | The following packages will be upgraded:\n[CI/test afl         ]   |   libpixman-1-0 libpixman-1-dev\n[CI/test exec_all    ]   |    Compiling warf v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf)\n[CI/test afl         ]   | 2 upgraded, 10 newly installed, 0 to remove and 386 not upgraded.\n[CI/test afl         ]   | Need to get 6490 kB of archives.\n[CI/test afl         ]   | After this operation, 30.9 MB of additional disk space will be used.\n[CI/test afl         ]   | Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 clang amd64 1:10.0-50~exp1 [3276 B]\n[CI/test afl         ]   | Get:2 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 cmake-data all 3.16.3-1ubuntu1.20.04.1 [1613 kB]\n[CI/test honggfuzz   ]   | Preparing to unpack .../02-libbinutils_2.34-6ubuntu1.5_amd64.deb ...\r\n[CI/test honggfuzz   ]   | Unpacking libbinutils:amd64 (2.34-6ubuntu1.5) over (2.34-6ubuntu1.1) ...\r\n[CI/test afl         ]   | Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 libjsoncpp1 amd64 1.7.4-3.1ubuntu2 [75.6 kB]\n[CI/test afl         ]   | Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 librhash0 amd64 1.3.9-1 [113 kB]\n[CI/test afl         ]   | Get:5 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 cmake amd64 3.16.3-1ubuntu1.20.04.1 [3668 kB]\n[CI/test afl         ]   | Get:6 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libpixman-1-dev amd64 0.38.4-0ubuntu2.1 [243 kB]\n[CI/test afl         ]   | Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libpixman-1-0 amd64 0.38.4-0ubuntu2.1 [227 kB]\n[CI/test afl         ]   | Get:8 http://archive.ubuntu.com/ubuntu focal/main amd64 libtool-bin amd64 2.4.6-14 [80.1 kB]\n[CI/test afl         ]   | Get:9 http://archive.ubuntu.com/ubuntu focal/universe amd64 llvm-runtime amd64 1:10.0-50~exp1 [2916 B]\n[CI/test afl         ]   | Get:10 http://archive.ubuntu.com/ubuntu focal/universe amd64 llvm amd64 1:10.0-50~exp1 [3880 B]\n[CI/test afl         ]   | Get:11 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 python-pkg-resources all 44.0.0-2ubuntu0.1 [130 kB]\n[CI/test honggfuzz   ]   | Preparing to unpack .../03-binutils_2.34-6ubuntu1.5_amd64.deb ...\r\n[CI/test honggfuzz   ]   | Unpacking binutils (2.34-6ubuntu1.5) over (2.34-6ubuntu1.1) ...\r\n[CI/test afl         ]   | Get:12 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 python-setuptools all 44.0.0-2ubuntu0.1 [330 kB]\n[CI/test honggfuzz   ]   | Preparing to unpack .../04-binutils-common_2.34-6ubuntu1.5_amd64.deb ...\r\n[CI/test honggfuzz   ]   | Unpacking binutils-common:amd64 (2.34-6ubuntu1.5) over (2.34-6ubuntu1.1) ...\r\n[CI/test exec_all    ]   |     Finished release [optimized] target(s) in 16.59s\n[CI/test honggfuzz   ]   | Preparing to unpack .../05-libctf-nobfd0_2.34-6ubuntu1.5_amd64.deb ...\r\n[CI/test honggfuzz   ]   | Unpacking libctf-nobfd0:amd64 (2.34-6ubuntu1.5) over (2.34-6ubuntu1.1) ...\r\n[CI/test benchmark   ]   |     Finished release [optimized] target(s) in 16.62s\n[CI/test exec_all    ]   | ./warf execute-all workspace/corpora/wasm/fib.wasm\n[CI/Building warf cli]   |     Finished release [optimized] target(s) in 16.54s\n[CI/test benchmark   ]   | ./warf benchmark-all workspace/corpora/wasm/fib.wasm\n[CI/Building warf cli]   \u2705  Success - Main Build\n[CI/test benchmark   ]   |     Updating crates.io index\n[CI/test exec_all    ]   |     Updating crates.io index\n[CI/test honggfuzz   ]   | Preparing to unpack .../06-libunwind8_1.2.1-9ubuntu0.1_amd64.deb ...\r\n[CI/test exec_all    ]   |     Updating git repository `https://github.com/Veykril/wasm3-rs`\n[CI/test benchmark   ]   |     Updating git repository `https://github.com/Veykril/wasm3-rs`\n[CI/test honggfuzz   ]   | Unpacking libunwind8:amd64 (1.2.1-9ubuntu0.1) over (1.2.1-9build1) ...\r\n[CI/test honggfuzz   ]   | Selecting previously unselected package libunwind-dev:amd64.\r\n[CI/test honggfuzz   ]   | Preparing to unpack .../07-libunwind-dev_1.2.1-9ubuntu0.1_amd64.deb ...\r\n[CI/test honggfuzz   ]   | Unpacking libunwind-dev:amd64 (1.2.1-9ubuntu0.1) ...\r\n[CI/test libfuzzer   ]   |    Compiling cargo-fuzz v0.11.2\n[CI/test honggfuzz   ]   | Selecting previously unselected package binutils-dev.\r\n[CI/test honggfuzz   ]   | Preparing to unpack .../08-binutils-dev_2.34-6ubuntu1.5_amd64.deb ...\r\n[CI/test honggfuzz   ]   | Unpacking binutils-dev (2.34-6ubuntu1.5) ...\r\n[CI/test exec_all    ]   |     Updating git submodule `https://github.com/wasm3/wasm3`\n[CI/test honggfuzz   ]   | Selecting previously unselected package libblocksruntime0.\r\n[CI/test honggfuzz   ]   | Preparing to unpack .../09-libblocksruntime0_0.4.1-1.1_amd64.deb ...\r\n[CI/test honggfuzz   ]   | Unpacking libblocksruntime0 (0.4.1-1.1) ...\r\n[CI/test afl         ]   | Fetched 6490 kB in 2s (3011 kB/s)\n[CI/test afl         ]   | Selecting previously unselected package clang.\r\n[CI/test afl         ]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[CI/test afl         ]   | Preparing to unpack .../00-clang_1%3a10.0-50~exp1_amd64.deb ...\r\n[CI/test honggfuzz   ]   | Selecting previously unselected package libblocksruntime-dev.\r\n[CI/test afl         ]   | Unpacking clang (1:10.0-50~exp1) ...\r\n[CI/test honggfuzz   ]   | Preparing to unpack .../10-libblocksruntime-dev_0.4.1-1.1_amd64.deb ...\r\n[CI/test honggfuzz   ]   | Unpacking libblocksruntime-dev (0.4.1-1.1) ...\r\n[CI/test benchmark   ]   |     Updating git submodule `https://github.com/wasm3/wasm3`\n[CI/test afl         ]   | Selecting previously unselected package cmake-data.\r\n[CI/test afl         ]   | Preparing to unpack .../01-cmake-data_3.16.3-1ubuntu1.20.04.1_all.deb ...\r\n[CI/test afl         ]   | Unpacking cmake-data (3.16.3-1ubuntu1.20.04.1) ...\r\n[CI/test honggfuzz   ]   | Setting up binutils-common:amd64 (2.34-6ubuntu1.5) ...\r\n[CI/test honggfuzz   ]   | Setting up libctf-nobfd0:amd64 (2.34-6ubuntu1.5) ...\r\n[CI/test honggfuzz   ]   | Setting up libunwind8:amd64 (1.2.1-9ubuntu0.1) ...\r\n[CI/test honggfuzz   ]   | Setting up libblocksruntime0 (0.4.1-1.1) ...\r\n[CI/test honggfuzz   ]   | Setting up libblocksruntime-dev (0.4.1-1.1) ...\r\n[CI/test honggfuzz   ]   | Setting up libbinutils:amd64 (2.34-6ubuntu1.5) ...\r\n[CI/test honggfuzz   ]   | Setting up libctf0:amd64 (2.34-6ubuntu1.5) ...\r\n[CI/test honggfuzz   ]   | Setting up libunwind-dev:amd64 (1.2.1-9ubuntu0.1) ...\r\n[CI/test honggfuzz   ]   | Setting up binutils-x86-64-linux-gnu (2.34-6ubuntu1.5) ...\r\n[CI/test honggfuzz   ]   | Setting up binutils (2.34-6ubuntu1.5) ...\r\n[CI/test honggfuzz   ]   | Setting up binutils-dev (2.34-6ubuntu1.5) ...\r\n[CI/test honggfuzz   ]   | Processing triggers for libc-bin (2.31-0ubuntu9.2) ...\r\n[CI/test libfuzzer   ]   |     Finished release [optimized] target(s) in 20.41s\n[CI/test libfuzzer   ]   |   Installing /home/runneradmin/.cargo/bin/cargo-fuzz\n[CI/test libfuzzer   ]   |    Installed package `cargo-fuzz v0.11.2` (executable `cargo-fuzz`)\n[CI/test libfuzzer   ]   \u2705  Success - Main Install cargo-fuzz\n[CI/test afl         ]   | Selecting previously unselected package libjsoncpp1:amd64.\r\n[CI/test honggfuzz   ]   \u2705  Success - Main Install honggfuzz dependencies\n[CI/test afl         ]   | Preparing to unpack .../02-libjsoncpp1_1.7.4-3.1ubuntu2_amd64.deb ...\r\n[CI/test afl         ]   | Unpacking libjsoncpp1:amd64 (1.7.4-3.1ubuntu2) ...\r\n[CI/test afl         ]   | Selecting previously unselected package librhash0:amd64.\r\n[CI/test afl         ]   | Preparing to unpack .../03-librhash0_1.3.9-1_amd64.deb ...\r\n[CI/test afl         ]   | Unpacking librhash0:amd64 (1.3.9-1) ...\r\n[CI/test libfuzzer   ] \u2b50 Run Main Test libfuzzer\n[CI/test honggfuzz   ] \u2b50 Run Main Install honggfuzz\n[CI/test benchmark   ]   | error: failed to select a version for `clang-sys`.\n[CI/test benchmark   ]   |     ... required by package `bindgen v0.59.0`\n[CI/test benchmark   ]   |     ... which satisfies dependency `bindgen = \"^0.59\"` of package `wasm3-sys v0.1.2 (https://github.com/Veykril/wasm3-rs#b4e35835)`\n[CI/test benchmark   ]   |     ... which satisfies git dependency `ffi` of package `wasm3 v0.2.0 (https://github.com/Veykril/wasm3-rs#b4e35835)`\n[CI/test benchmark   ]   |     ... which satisfies git dependency `wasm3` of package `fuzz-targets v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/targets)`\n[CI/test benchmark   ]   |     ... which satisfies path dependency `fuzz-targets` of package `fuzz-targets-exec-all v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/execute_all)`\n[CI/test benchmark   ]   | versions that meet the requirements `^1` are: 1.6.1, 1.6.0, 1.4.0, 1.3.3, 1.3.2, 1.3.1, 1.3.0, 1.2.2, 1.2.1, 1.2.0, 1.1.1, 1.1.0, 1.0.3, 1.0.2, 1.0.1, 1.0.0\n[CI/test benchmark   ]   | \n[CI/test benchmark   ]   | the package `clang-sys` links to the native library `clang`, but it conflicts with a previous package which links to `clang` as well:\n[CI/test benchmark   ]   | package `clang-sys v0.29.3`\n[CI/test benchmark   ]   |     ... which satisfies dependency `clang-sys = \"^0.29\"` of package `bindgen v0.54.0`\n[CI/test benchmark   ]   |     ... which satisfies dependency `bindgen = \"^0.54.0\"` of package `fizzy v0.6.0-dev`\n[CI/test benchmark   ]   |     ... which satisfies dependency `fizzy = \"^0.6.0-dev\"` of package `fuzz-targets v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/targets)`\n[CI/test benchmark   ]   |     ... which satisfies path dependency `fuzz-targets` of package `fuzz-targets-exec-all v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/execute_all)`\n[CI/test benchmark   ]   | Only one package in the dependency graph may specify the same links value. This helps ensure that only one copy of a native library is linked in the final binary. Try to adjust your dependencies so that only one package uses the links ='clang-sys' value. For more information, see https://doc.rust-lang.org/cargo/reference/resolver.html#links.\n[CI/test benchmark   ]   | \n[CI/test benchmark   ]   | failed to select a version for `clang-sys` which could resolve this conflict\n[CI/test benchmark   ]   | [WARF] Fuzzer quit\n[CI/test benchmark   ]   | make: *** [Makefile:89: test-bench] Error 1\n[CI/test benchmark   ]   \u274c  Failure - Main Test benchmark\n[CI/test afl         ]   | Selecting previously unselected package cmake.\r\n[CI/test afl         ]   | Preparing to unpack .../04-cmake_3.16.3-1ubuntu1.20.04.1_amd64.deb ...\r\n[CI/test afl         ]   | Unpacking cmake (3.16.3-1ubuntu1.20.04.1) ...\r\n[CI/test libfuzzer   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/test exec_all    ]   | error: failed to select a version for `clang-sys`.\n[CI/test exec_all    ]   |     ... required by package `bindgen v0.59.0`\n[CI/test exec_all    ]   |     ... which satisfies dependency `bindgen = \"^0.59\"` of package `wasm3-sys v0.1.2 (https://github.com/Veykril/wasm3-rs#b4e35835)`\n[CI/test exec_all    ]   |     ... which satisfies git dependency `ffi` of package `wasm3 v0.2.0 (https://github.com/Veykril/wasm3-rs#b4e35835)`\n[CI/test exec_all    ]   |     ... which satisfies git dependency `wasm3` of package `fuzz-targets v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/targets)`\n[CI/test exec_all    ]   |     ... which satisfies path dependency `fuzz-targets` of package `fuzz-targets-exec-all v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/execute_all)`\n[CI/test exec_all    ]   | versions that meet the requirements `^1` are: 1.6.1, 1.6.0, 1.4.0, 1.3.3, 1.3.2, 1.3.1, 1.3.0, 1.2.2, 1.2.1, 1.2.0, 1.1.1, 1.1.0, 1.0.3, 1.0.2, 1.0.1, 1.0.0\n[CI/test exec_all    ]   | \n[CI/test exec_all    ]   | the package `clang-sys` links to the native library `clang`, but it conflicts with a previous package which links to `clang` as well:\n[CI/test exec_all    ]   | package `clang-sys v0.29.3`\n[CI/test exec_all    ]   |     ... which satisfies dependency `clang-sys = \"^0.29\"` of package `bindgen v0.54.0`\n[CI/test exec_all    ]   |     ... which satisfies dependency `bindgen = \"^0.54.0\"` of package `fizzy v0.6.0-dev`\n[CI/test exec_all    ]   |     ... which satisfies dependency `fizzy = \"^0.6.0-dev\"` of package `fuzz-targets v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/targets)`\n[CI/test exec_all    ]   |     ... which satisfies path dependency `fuzz-targets` of package `fuzz-targets-exec-all v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/execute_all)`\n[CI/test exec_all    ]   | Only one package in the dependency graph may specify the same links value. This helps ensure that only one copy of a native library is linked in the final binary. Try to adjust your dependencies so that only one package uses the links ='clang-sys' value. For more information, see https://doc.rust-lang.org/cargo/reference/resolver.html#links.\n[CI/test exec_all    ]   | \n[CI/test exec_all    ]   | failed to select a version for `clang-sys` which could resolve this conflict\n[CI/test exec_all    ]   | [WARF] Fuzzer quit\n[CI/test exec_all    ]   | make: *** [Makefile:85: test] Error 1\n[CI/test exec_all    ]   \u274c  Failure - Main Test exec_all\n[CI/test honggfuzz   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/test benchmark   ] exitcode '2': failure\n[CI/test exec_all    ] exitcode '2': failure\n[CI/test afl         ]   | Preparing to unpack .../05-libpixman-1-dev_0.38.4-0ubuntu2.1_amd64.deb ...\r\n[CI/test afl         ]   | Unpacking libpixman-1-dev:amd64 (0.38.4-0ubuntu2.1) over (0.38.4-0ubuntu1) ...\r\n[CI/test afl         ]   | Preparing to unpack .../06-libpixman-1-0_0.38.4-0ubuntu2.1_amd64.deb ...\r\n[CI/test afl         ]   | Unpacking libpixman-1-0:amd64 (0.38.4-0ubuntu2.1) over (0.38.4-0ubuntu1) ...\r\n[CI/test afl         ]   | Selecting previously unselected package libtool-bin.\r\n[CI/test afl         ]   | Preparing to unpack .../07-libtool-bin_2.4.6-14_amd64.deb ...\r\n[CI/test afl         ]   | Unpacking libtool-bin (2.4.6-14) ...\r\n[CI/test afl         ]   | Selecting previously unselected package llvm-runtime.\r\n[CI/test afl         ]   | Preparing to unpack .../08-llvm-runtime_1%3a10.0-50~exp1_amd64.deb ...\r\n[CI/test afl         ]   | Unpacking llvm-runtime (1:10.0-50~exp1) ...\r\n[CI/test afl         ]   | Selecting previously unselected package llvm.\r\n[CI/test afl         ]   | Preparing to unpack .../09-llvm_1%3a10.0-50~exp1_amd64.deb ...\r\n[CI/test afl         ]   | Unpacking llvm (1:10.0-50~exp1) ...\r\n[CI/test afl         ]   | Selecting previously unselected package python-pkg-resources.\r\n[CI/test afl         ]   | Preparing to unpack .../10-python-pkg-resources_44.0.0-2ubuntu0.1_all.deb ...\r\n[CI/test afl         ]   | Unpacking python-pkg-resources (44.0.0-2ubuntu0.1) ...\r\n[CI/test afl         ]   | Selecting previously unselected package python-setuptools.\r\n[CI/test afl         ]   | Preparing to unpack .../11-python-setuptools_44.0.0-2ubuntu0.1_all.deb ...\r\n[CI/test afl         ]   | Unpacking python-setuptools (44.0.0-2ubuntu0.1) ...\r\n[CI/test afl         ]   | Setting up libpixman-1-0:amd64 (0.38.4-0ubuntu2.1) ...\r\n[CI/test afl         ]   | Setting up libtool-bin (2.4.6-14) ...\r\n[CI/test afl         ]   | Setting up libpixman-1-dev:amd64 (0.38.4-0ubuntu2.1) ...\r\n[CI/test afl         ]   | Setting up python-pkg-resources (44.0.0-2ubuntu0.1) ...\r\n[CI/test afl         ]   | Setting up clang (1:10.0-50~exp1) ...\r\n[CI/test afl         ]   | Setting up llvm-runtime (1:10.0-50~exp1) ...\r\n[CI/test afl         ]   | Setting up python-setuptools (44.0.0-2ubuntu0.1) ...\r\n[CI/test afl         ]   | Setting up llvm (1:10.0-50~exp1) ...\r\n[CI/test afl         ]   | Setting up librhash0:amd64 (1.3.9-1) ...\r\n[CI/test afl         ]   | Setting up cmake-data (3.16.3-1ubuntu1.20.04.1) ...\r\n[CI/test afl         ]   | Setting up libjsoncpp1:amd64 (1.7.4-3.1ubuntu2) ...\r\n[CI/test afl         ]   | Setting up cmake (3.16.3-1ubuntu1.20.04.1) ...\r\n[CI/test afl         ]   | Processing triggers for libc-bin (2.31-0ubuntu9.2) ...\r\n[CI/test afl         ]   \u2705  Success - Main Install afl dependencies\n[CI/test afl         ] \u2b50 Run Main Install afl\n[CI/test afl         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/test libfuzzer   ]   | cargo +nightly build --release --out-dir=. -Z unstable-options\n[CI/test honggfuzz   ]   |     Updating crates.io index\n[CI/test libfuzzer   ]   |     Updating crates.io index\n[CI/test afl         ]   |     Updating crates.io index\n[CI/test honggfuzz   ]   |  Downloading crates ...\n[CI/test afl         ]   |  Downloading crates ...\n[CI/test honggfuzz   ]   |   Downloaded honggfuzz v0.5.55\n[CI/test afl         ]   |   Downloaded afl v0.13.0\n[CI/test libfuzzer   ]   |  Downloading crates ...\n[CI/test libfuzzer   ]   |   Downloaded strum_macros v0.18.0\n[CI/test libfuzzer   ]   |   Downloaded vec_map v0.8.2\n[CI/test afl         ]   |   Installing afl v0.13.0\n[CI/test libfuzzer   ]   |   Downloaded unicode-xid v0.2.4\n[CI/test libfuzzer   ]   |   Downloaded textwrap v0.11.0\n[CI/test libfuzzer   ]   |   Downloaded addr2line v0.19.0\n[CI/test libfuzzer   ]   |   Downloaded miniz_oxide v0.6.2\n[CI/test libfuzzer   ]   |   Downloaded memchr v2.5.0\n[CI/test libfuzzer   ]   |   Downloaded unicode-segmentation v1.10.1\n[CI/test libfuzzer   ]   |   Downloaded clap v2.34.0\n[CI/test libfuzzer   ]   |   Downloaded backtrace v0.3.67\n[CI/test afl         ]   |     Updating crates.io index\n[CI/test honggfuzz   ]   |   Installing honggfuzz v0.5.55\n[CI/test libfuzzer   ]   |   Downloaded failure v0.1.8\n[CI/test libfuzzer   ]   |   Downloaded syn v0.15.44\n[CI/test libfuzzer   ]   |   Downloaded aho-corasick v1.0.1\n[CI/test honggfuzz   ]   |     Updating crates.io index\n[CI/test libfuzzer   ]   |   Downloaded syn v1.0.109\n[CI/test libfuzzer   ]   |   Downloaded regex v1.8.3\n[CI/test libfuzzer   ]   |   Downloaded regex-syntax v0.7.2\n[CI/test libfuzzer   ]   |   Downloaded gimli v0.27.2\n[CI/test honggfuzz   ]   |  Downloading crates ...\n[CI/test libfuzzer   ]   |   Downloaded object v0.30.3\n[CI/test libfuzzer   ]   |   Downloaded synstructure v0.12.6\n[CI/test libfuzzer   ]   |   Downloaded proc-macro2 v0.4.30\n[CI/test libfuzzer   ]   |   Downloaded fs_extra v1.3.0\n[CI/test libfuzzer   ]   |   Downloaded heck v0.3.3\n[CI/test libfuzzer   ]   |   Downloaded ansi_term v0.12.1\n[CI/test libfuzzer   ]   |   Downloaded adler v1.0.2\n[CI/test libfuzzer   ]   |   Downloaded unicode-xid v0.1.0\n[CI/test libfuzzer   ]   |   Downloaded unicode-width v0.1.10\n[CI/test libfuzzer   ]   |   Downloaded structopt-derive v0.2.18\n[CI/test libfuzzer   ]   |   Downloaded structopt v0.2.18\n[CI/test libfuzzer   ]   |   Downloaded rustc-demangle v0.1.23\n[CI/test libfuzzer   ]   |   Downloaded quote v0.6.13\n[CI/test libfuzzer   ]   |   Downloaded failure_derive v0.1.8\n[CI/test libfuzzer   ]   |   Downloaded atty v0.2.14\n[CI/test libfuzzer   ]   |   Downloaded strum v0.18.0\n[CI/test libfuzzer   ]   |   Downloaded strsim v0.8.0\n[CI/test libfuzzer   ]   |   Downloaded cc v1.0.79\n[CI/test libfuzzer   ]   |     Finished release [optimized] target(s) in 2.67s\n[CI/test honggfuzz   ]   |   Downloaded rustc_version v0.4.0\n[CI/test honggfuzz   ]   |   Downloaded semver v1.0.17\n[CI/test honggfuzz   ]   |   Downloaded arbitrary v1.3.0\n[CI/test libfuzzer   ]   | ./warf target wasmparser_parser -t 2 -s 1234 --fuzzer libfuzzer\n[CI/test honggfuzz   ]   |    Compiling semver v1.0.17\n[CI/test honggfuzz   ]   |    Compiling honggfuzz v0.5.55\n[CI/test honggfuzz   ]   |    Compiling arbitrary v1.3.0\n[CI/test afl         ]   |  Downloading crates ...\n[CI/test afl         ]   |   Downloaded fastrand v1.9.0\n[CI/test afl         ]   |   Downloaded clap_lex v0.5.0\n[CI/test afl         ]   |   Downloaded xdg v2.5.0\n[CI/test afl         ]   |   Downloaded tempfile v3.5.0\n[CI/test afl         ]   |   Downloaded rustc_version v0.4.0\n[CI/test afl         ]   |   Downloaded io-lifetimes v1.0.11\n[CI/test afl         ]   |   Downloaded clap v4.3.0\n[CI/test afl         ]   |   Downloaded clap_builder v4.3.0\n[CI/test afl         ]   |   Downloaded bitflags v1.3.2\n[CI/test afl         ]   |   Downloaded anstream v0.3.2\n[CI/test afl         ]   |   Downloaded rustix v0.37.19\n[CI/test afl         ]   |   Downloaded semver v1.0.17\n[CI/test afl         ]   |   Downloaded once_cell v1.17.2\n[CI/test afl         ]   |   Downloaded fs_extra v1.3.0\n[CI/test afl         ]   |   Downloaded colorchoice v1.0.0\n[CI/test afl         ]   |   Downloaded cfg-if v1.0.0\n[CI/test afl         ]   |   Downloaded anstyle-query v1.0.0\n[CI/test afl         ]   |   Downloaded anstyle v1.0.0\n[CI/test afl         ]   |   Downloaded linux-raw-sys v0.3.8\n[CI/test afl         ]   |   Downloaded home v0.5.5\n[CI/test afl         ]   |   Downloaded libc v0.2.144\n[CI/test afl         ]   |   Downloaded utf8parse v0.2.1\n[CI/test afl         ]   |   Downloaded strsim v0.10.0\n[CI/test afl         ]   |   Downloaded is-terminal v0.4.7\n[CI/test afl         ]   |   Downloaded anstyle-parse v0.2.0\n[CI/test honggfuzz   ]   |    Compiling rustc_version v0.4.0\n[CI/test afl         ]   |    Compiling libc v0.2.144\n[CI/test afl         ]   |    Compiling semver v1.0.17\n[CI/test afl         ]   |    Compiling io-lifetimes v1.0.11\n[CI/test afl         ]   |    Compiling rustix v0.37.19\n[CI/test afl         ]   |    Compiling bitflags v1.3.2\n[CI/test afl         ]   |    Compiling linux-raw-sys v0.3.8\n[CI/test afl         ]   |    Compiling utf8parse v0.2.1\n[CI/test afl         ]   |    Compiling anstyle v1.0.0\n[CI/test afl         ]   |    Compiling fastrand v1.9.0\n[CI/test afl         ]   |    Compiling colorchoice v1.0.0\n[CI/test afl         ]   |    Compiling home v0.5.5\n[CI/test afl         ]   |    Compiling anstyle-query v1.0.0\n[CI/test afl         ]   |    Compiling cfg-if v1.0.0\n[CI/test afl         ]   |    Compiling clap_lex v0.5.0\n[CI/test afl         ]   |    Compiling fs_extra v1.3.0\n[CI/test afl         ]   |    Compiling once_cell v1.17.2\n[CI/test afl         ]   |    Compiling strsim v0.10.0\n[CI/test afl         ]   |    Compiling xdg v2.5.0\n[CI/test afl         ]   |    Compiling anstyle-parse v0.2.0\n[CI/Building docker  ] \ud83c\udfc1  Job failed\n[CI/Check Rust fmt   ] \ud83c\udfc1  Job succeeded\n[CI/test afl         ]   |    Compiling rustc_version v0.4.0\n[CI/Building warf cli] \ud83c\udfc1  Job succeeded\n[CI/test exec_all    ] \ud83c\udfc1  Job failed\n[CI/test benchmark   ] \ud83c\udfc1  Job failed\n[CI/test honggfuzz   ]   |     Finished release [optimized] target(s) in 6.02s\n[CI/test honggfuzz   ]   |   Installing /home/runneradmin/.cargo/bin/cargo-hfuzz\n[CI/test honggfuzz   ]   |   Installing /home/runneradmin/.cargo/bin/cargo-honggfuzz\n[CI/test honggfuzz   ]   |    Installed package `honggfuzz v0.5.55` (executables `cargo-hfuzz`, `cargo-honggfuzz`)\n[CI/test honggfuzz   ]   \u2705  Success - Main Install honggfuzz\n[CI/test afl         ]   |    Compiling is-terminal v0.4.7\n[CI/test afl         ]   |    Compiling anstream v0.3.2\n[CI/test libfuzzer   ]   |     Updating crates.io index\n[CI/test afl         ]   |    Compiling clap_builder v4.3.0\n[CI/test libfuzzer   ]   |     Updating git repository `https://github.com/Veykril/wasm3-rs`\n[CI/test honggfuzz   ] \u2b50 Run Main Test honggfuzz\n[CI/test afl         ]   |    Compiling tempfile v3.5.0\n[CI/test afl         ]   |    Compiling afl v0.13.0\n[CI/test libfuzzer   ]   |     Updating git submodule `https://github.com/wasm3/wasm3`\n[CI/test honggfuzz   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[CI/test afl         ]   |    Compiling clap v4.3.0\n[CI/test libfuzzer   ]   | error: failed to select a version for `clang-sys`.\n[CI/test libfuzzer   ]   |     ... required by package `bindgen v0.59.0`\n[CI/test libfuzzer   ]   |     ... which satisfies dependency `bindgen = \"^0.59\"` of package `wasm3-sys v0.1.2 (https://github.com/Veykril/wasm3-rs#b4e35835)`\n[CI/test libfuzzer   ]   |     ... which satisfies git dependency `ffi` of package `wasm3 v0.2.0 (https://github.com/Veykril/wasm3-rs#b4e35835)`\n[CI/test libfuzzer   ]   |     ... which satisfies git dependency `wasm3` of package `fuzz-targets v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/targets)`\n[CI/test libfuzzer   ]   |     ... which satisfies path dependency `fuzz-targets` of package `fuzz-targets-libfuzzer v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/libfuzzer/fuzz)`\n[CI/test libfuzzer   ]   | versions that meet the requirements `^1` are: 1.6.1, 1.6.0, 1.4.0, 1.3.3, 1.3.2, 1.3.1, 1.3.0, 1.2.2, 1.2.1, 1.2.0, 1.1.1, 1.1.0, 1.0.3, 1.0.2, 1.0.1, 1.0.0\n[CI/test libfuzzer   ]   | \n[CI/test libfuzzer   ]   | the package `clang-sys` links to the native library `clang`, but it conflicts with a previous package which links to `clang` as well:\n[CI/test libfuzzer   ]   | package `clang-sys v0.29.3`\n[CI/test libfuzzer   ]   |     ... which satisfies dependency `clang-sys = \"^0.29\"` of package `bindgen v0.54.0`\n[CI/test libfuzzer   ]   |     ... which satisfies dependency `bindgen = \"^0.54.0\"` of package `fizzy v0.6.0-dev`\n[CI/test libfuzzer   ]   |     ... which satisfies dependency `fizzy = \"^0.6.0-dev\"` of package `fuzz-targets v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/targets)`\n[CI/test libfuzzer   ]   |     ... which satisfies path dependency `fuzz-targets` of package `fuzz-targets-libfuzzer v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/libfuzzer/fuzz)`\n[CI/test libfuzzer   ]   | Only one package in the dependency graph may specify the same links value. This helps ensure that only one copy of a native library is linked in the final binary. Try to adjust your dependencies so that only one package uses the links ='clang-sys' value. For more information, see https://doc.rust-lang.org/cargo/reference/resolver.html#links.\n[CI/test libfuzzer   ]   | \n[CI/test libfuzzer   ]   | failed to select a version for `clang-sys` which could resolve this conflict\n[CI/test libfuzzer   ]   | Error: failed to build fuzz script: ASAN_OPTIONS=\"detect_odr_violation=0\" RUSTFLAGS=\"-Cpasses=sancov-module -Cllvm-args=-sanitizer-coverage-level=4 -Cllvm-args=-sanitizer-coverage-inline-8bit-counters -Cllvm-args=-sanitizer-coverage-pc-table -Cllvm-args=-sanitizer-coverage-trace-compares --cfg fuzzing -Clink-dead-code -Zsanitizer=address -Cllvm-args=-sanitizer-coverage-stack-depth -Cdebug-assertions -C codegen-units=1  \" \"cargo\" \"build\" \"--manifest-path\" \"/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/libfuzzer/fuzz/Cargo.toml\" \"--target\" \"x86_64-unknown-linux-gnu\" \"--release\" \"--bin\" \"wasmparser_parser\"\n[CI/test libfuzzer   ]   | [WARF] Fuzzer quit\n[CI/test libfuzzer   ]   | make: *** [Makefile:98: test-libfuzzer] Error 1\n[CI/test libfuzzer   ]   \u274c  Failure - Main Test libfuzzer\n[CI/test honggfuzz   ]   | cargo +nightly build --release --out-dir=. -Z unstable-options\n[CI/test honggfuzz   ]   |     Updating crates.io index\n[CI/test honggfuzz   ]   |  Downloading crates ...\n[CI/test libfuzzer   ] exitcode '2': failure\n[CI/test honggfuzz   ]   |   Downloaded adler v1.0.2\n[CI/test honggfuzz   ]   |   Downloaded miniz_oxide v0.6.2\n[CI/test honggfuzz   ]   |   Downloaded memchr v2.5.0\n[CI/test honggfuzz   ]   |   Downloaded strum v0.18.0\n[CI/test honggfuzz   ]   |   Downloaded atty v0.2.14\n[CI/test honggfuzz   ]   |   Downloaded strum_macros v0.18.0\n[CI/test honggfuzz   ]   |   Downloaded failure_derive v0.1.8\n[CI/test honggfuzz   ]   |   Downloaded cfg-if v1.0.0\n[CI/test honggfuzz   ]   |   Downloaded quote v0.6.13\n[CI/test honggfuzz   ]   |   Downloaded strsim v0.10.0\n[CI/test honggfuzz   ]   |   Downloaded synstructure v0.12.6\n[CI/test honggfuzz   ]   |   Downloaded vec_map v0.8.2\n[CI/test honggfuzz   ]   |   Downloaded unicode-xid v0.2.4\n[CI/test honggfuzz   ]   |   Downloaded unicode-width v0.1.10\n[CI/test honggfuzz   ]   |   Downloaded unicode-xid v0.1.0\n[CI/test honggfuzz   ]   |   Downloaded heck v0.3.3\n[CI/test honggfuzz   ]   |   Downloaded structopt v0.2.18\n[CI/test honggfuzz   ]   |   Downloaded rustc-demangle v0.1.23\n[CI/test honggfuzz   ]   |   Downloaded proc-macro2 v1.0.59\n[CI/test honggfuzz   ]   |   Downloaded proc-macro2 v0.4.30\n[CI/test honggfuzz   ]   |   Downloaded fs_extra v1.3.0\n[CI/test honggfuzz   ]   |   Downloaded failure v0.1.8\n[CI/test honggfuzz   ]   |   Downloaded ansi_term v0.12.1\n[CI/test honggfuzz   ]   |   Downloaded quote v1.0.28\n[CI/test honggfuzz   ]   |   Downloaded cc v1.0.79\n[CI/test honggfuzz   ]   |   Downloaded unicode-ident v1.0.9\n[CI/test honggfuzz   ]   |   Downloaded addr2line v0.19.0\n[CI/test honggfuzz   ]   |   Downloaded backtrace v0.3.67\n[CI/test honggfuzz   ]   |   Downloaded bitflags v1.3.2\n[CI/test honggfuzz   ]   |   Downloaded textwrap v0.11.0\n[CI/test honggfuzz   ]   |   Downloaded unicode-segmentation v1.10.1\n[CI/test honggfuzz   ]   |   Downloaded structopt-derive v0.2.18\n[CI/test honggfuzz   ]   |   Downloaded strsim v0.8.0\n[CI/test honggfuzz   ]   |   Downloaded object v0.30.3\n[CI/test honggfuzz   ]   |   Downloaded syn v0.15.44\n[CI/test honggfuzz   ]   |   Downloaded aho-corasick v1.0.1\n[CI/test honggfuzz   ]   |   Downloaded clap v2.34.0\n[CI/test honggfuzz   ]   |   Downloaded regex v1.8.3\n[CI/test honggfuzz   ]   |   Downloaded syn v1.0.109\n[CI/test honggfuzz   ]   |   Downloaded regex-syntax v0.7.2\n[CI/test honggfuzz   ]   |   Downloaded libc v0.2.144\n[CI/test honggfuzz   ]   |   Downloaded gimli v0.27.2\n[CI/test honggfuzz   ]   |     Finished release [optimized] target(s) in 2.98s\n[CI/test honggfuzz   ]   | ./warf target wasmparser_parser -t 2 -s 1234 --fuzzer honggfuzz\n[CI/test honggfuzz   ]   | [WARF] Honggfuzz: wasmparser_parser created\n[CI/test honggfuzz   ]   | [WARF] Honggfuzz: seed not supported\n[CI/test honggfuzz   ]   | /usr/bin/ld.gold\n[CI/test honggfuzz   ]   |     Updating crates.io index\n[CI/test honggfuzz   ]   |     Updating git repository `https://github.com/Veykril/wasm3-rs`\n[CI/test honggfuzz   ]   |     Updating git submodule `https://github.com/wasm3/wasm3`\n[CI/test honggfuzz   ]   | error: failed to select a version for `clang-sys`.\n[CI/test honggfuzz   ]   |     ... required by package `bindgen v0.59.0`\n[CI/test honggfuzz   ]   |     ... which satisfies dependency `bindgen = \"^0.59\"` of package `wasm3-sys v0.1.2 (https://github.com/Veykril/wasm3-rs#b4e35835)`\n[CI/test honggfuzz   ]   |     ... which satisfies git dependency `ffi` of package `wasm3 v0.2.0 (https://github.com/Veykril/wasm3-rs#b4e35835)`\n[CI/test honggfuzz   ]   |     ... which satisfies git dependency `wasm3` of package `fuzz-targets v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/targets)`\n[CI/test honggfuzz   ]   |     ... which satisfies path dependency `fuzz-targets` of package `fuzz-targets-honggfuzz v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/hfuzz)`\n[CI/test honggfuzz   ]   | versions that meet the requirements `^1` are: 1.6.1, 1.6.0, 1.4.0, 1.3.3, 1.3.2, 1.3.1, 1.3.0, 1.2.2, 1.2.1, 1.2.0, 1.1.1, 1.1.0, 1.0.3, 1.0.2, 1.0.1, 1.0.0\n[CI/test honggfuzz   ]   | \n[CI/test honggfuzz   ]   | the package `clang-sys` links to the native library `clang`, but it conflicts with a previous package which links to `clang` as well:\n[CI/test honggfuzz   ]   | package `clang-sys v0.29.3`\n[CI/test honggfuzz   ]   |     ... which satisfies dependency `clang-sys = \"^0.29\"` of package `bindgen v0.54.0`\n[CI/test honggfuzz   ]   |     ... which satisfies dependency `bindgen = \"^0.54.0\"` of package `fizzy v0.6.0-dev`\n[CI/test honggfuzz   ]   |     ... which satisfies dependency `fizzy = \"^0.6.0-dev\"` of package `fuzz-targets v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/targets)`\n[CI/test honggfuzz   ]   |     ... which satisfies path dependency `fuzz-targets` of package `fuzz-targets-honggfuzz v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/hfuzz)`\n[CI/test honggfuzz   ]   | Only one package in the dependency graph may specify the same links value. This helps ensure that only one copy of a native library is linked in the final binary. Try to adjust your dependencies so that only one package uses the links ='clang-sys' value. For more information, see https://doc.rust-lang.org/cargo/reference/resolver.html#links.\n[CI/test honggfuzz   ]   | \n[CI/test honggfuzz   ]   | failed to select a version for `clang-sys` which could resolve this conflict\n[CI/test honggfuzz   ]   | [WARF] Fuzzer quit\n[CI/test honggfuzz   ]   | make: *** [Makefile:102: test-honggfuzz] Error 1\n[CI/test honggfuzz   ]   \u274c  Failure - Main Test honggfuzz\n[CI/test honggfuzz   ] exitcode '2': failure\n[CI/test afl         ]   |     Finished release [optimized] target(s) in 49.69s\n[CI/test afl         ]   |   Installing /home/runneradmin/.cargo/bin/cargo-afl\n[CI/test afl         ]   |    Installed package `afl v0.13.0` (executable `cargo-afl`)\n[CI/test afl         ]   \u2705  Success - Main Install afl\n[CI/test afl         ] \u2b50 Run Main Test afl\n[CI/test afl         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[CI/test afl         ]   | cargo +nightly build --release --out-dir=. -Z unstable-options\n[CI/test afl         ]   |     Updating crates.io index\n[CI/test afl         ]   |  Downloading crates ...\n[CI/test afl         ]   |   Downloaded aho-corasick v1.0.1\n[CI/test afl         ]   |   Downloaded cc v1.0.79\n[CI/test afl         ]   |   Downloaded memchr v2.5.0\n[CI/test afl         ]   |   Downloaded regex v1.8.3\n[CI/test afl         ]   |   Downloaded unicode-ident v1.0.9\n[CI/test afl         ]   |   Downloaded unicode-xid v0.1.0\n[CI/test afl         ]   |   Downloaded syn v0.15.44\n[CI/test afl         ]   |   Downloaded vec_map v0.8.2\n[CI/test afl         ]   |   Downloaded object v0.30.3\n[CI/test afl         ]   |   Downloaded gimli v0.27.2\n[CI/test afl         ]   |   Downloaded adler v1.0.2\n[CI/test afl         ]   |   Downloaded unicode-xid v0.2.4\n[CI/test afl         ]   |   Downloaded unicode-width v0.1.10\n[CI/test afl         ]   |   Downloaded unicode-segmentation v1.10.1\n[CI/test afl         ]   |   Downloaded synstructure v0.12.6\n[CI/test afl         ]   |   Downloaded strsim v0.8.0\n[CI/test afl         ]   |   Downloaded rustc-demangle v0.1.23\n[CI/test afl         ]   |   Downloaded miniz_oxide v0.6.2\n[CI/test afl         ]   |   Downloaded clap v2.34.0\n[CI/test afl         ]   |   Downloaded backtrace v0.3.67\n[CI/test afl         ]   |   Downloaded addr2line v0.19.0\n[CI/test afl         ]   |   Downloaded textwrap v0.11.0\n[CI/test afl         ]   |   Downloaded strum_macros v0.18.0\n[CI/test afl         ]   |   Downloaded strum v0.18.0\n[CI/test afl         ]   |   Downloaded structopt-derive v0.2.18\n[CI/test afl         ]   |   Downloaded quote v0.6.13\n[CI/test afl         ]   |   Downloaded proc-macro2 v0.4.30\n[CI/test afl         ]   |   Downloaded heck v0.3.3\n[CI/test afl         ]   |   Downloaded failure_derive v0.1.8\n[CI/test afl         ]   |   Downloaded failure v0.1.8\n[CI/test afl         ]   |   Downloaded syn v1.0.109\n[CI/test afl         ]   |   Downloaded regex-syntax v0.7.2\n[CI/test afl         ]   |   Downloaded quote v1.0.28\n[CI/test afl         ]   |   Downloaded proc-macro2 v1.0.59\n[CI/test afl         ]   |   Downloaded ansi_term v0.12.1\n[CI/test afl         ]   |   Downloaded atty v0.2.14\n[CI/test afl         ]   |   Downloaded structopt v0.2.18\n[CI/test afl         ]   |     Finished release [optimized] target(s) in 1.62s\n[CI/test afl         ]   | AFL_SKIP_CPUFREQ=1 \\\n[CI/test afl         ]   | AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1 \\\n[CI/test afl         ]   | ./warf target wasmparser_parser -t 2 -s 1234 --fuzzer afl\n[CI/test afl         ]   |     Updating crates.io index\n[CI/test afl         ]   |     Updating git repository `https://github.com/Veykril/wasm3-rs`\n[CI/test libfuzzer   ] \ud83c\udfc1  Job failed\n[CI/test honggfuzz   ] \ud83c\udfc1  Job failed\n[CI/test afl         ]   |     Updating git submodule `https://github.com/wasm3/wasm3`\n[CI/test afl         ]   | error: failed to select a version for `clang-sys`.\n[CI/test afl         ]   |     ... required by package `bindgen v0.59.0`\n[CI/test afl         ]   |     ... which satisfies dependency `bindgen = \"^0.59\"` of package `wasm3-sys v0.1.2 (https://github.com/Veykril/wasm3-rs#b4e35835)`\n[CI/test afl         ]   |     ... which satisfies git dependency `ffi` of package `wasm3 v0.2.0 (https://github.com/Veykril/wasm3-rs#b4e35835)`\n[CI/test afl         ]   |     ... which satisfies git dependency `wasm3` of package `fuzz-targets v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/targets)`\n[CI/test afl         ]   |     ... which satisfies path dependency `fuzz-targets` of package `fuzz-targets-afl v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/afl)`\n[CI/test afl         ]   | versions that meet the requirements `^1` are: 1.6.1, 1.6.0, 1.4.0, 1.3.3, 1.3.2, 1.3.1, 1.3.0, 1.2.2, 1.2.1, 1.2.0, 1.1.1, 1.1.0, 1.0.3, 1.0.2, 1.0.1, 1.0.0\n[CI/test afl         ]   | \n[CI/test afl         ]   | the package `clang-sys` links to the native library `clang`, but it conflicts with a previous package which links to `clang` as well:\n[CI/test afl         ]   | package `clang-sys v0.29.3`\n[CI/test afl         ]   |     ... which satisfies dependency `clang-sys = \"^0.29\"` of package `bindgen v0.54.0`\n[CI/test afl         ]   |     ... which satisfies dependency `bindgen = \"^0.54.0\"` of package `fizzy v0.6.0-dev`\n[CI/test afl         ]   |     ... which satisfies dependency `fizzy = \"^0.6.0-dev\"` of package `fuzz-targets v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/targets)`\n[CI/test afl         ]   |     ... which satisfies path dependency `fuzz-targets` of package `fuzz-targets-afl v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/FuzzingLabs-wasm_runtimes_fuzzing/warf/workspace/afl)`\n[CI/test afl         ]   | Only one package in the dependency graph may specify the same links value. This helps ensure that only one copy of a native library is linked in the final binary. Try to adjust your dependencies so that only one package uses the links ='clang-sys' value. For more information, see https://doc.rust-lang.org/cargo/reference/resolver.html#links.\n[CI/test afl         ]   | \n[CI/test afl         ]   | failed to select a version for `clang-sys` which could resolve this conflict\n[CI/test afl         ]   | [WARF] Fuzzer quit\n[CI/test afl         ]   | make: *** [Makefile:106: test-afl] Error 1\n[CI/test afl         ]   \u274c  Failure - Main Test afl\n[CI/test afl         ] exitcode '2': failure\n[CI/test afl         ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'test afl' failed\n"
}