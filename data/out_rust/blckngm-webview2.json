{
    "repository": "blckngm/webview2",
    "clone_url": "https://github.com/blckngm/webview2.git",
    "timestamp": "2023-05-30T09:28:07.418963Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Continuous Integration/Check Generated Code (make sure they are up to date)] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous Integration/Clippy                                              ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous Integration/Test (Minimal versions)                             ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous Integration/Rustfmt                                             ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous Integration/Test                                                ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous Integration/Clippy                                              ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous Integration/Test                                                ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous Integration/Rustfmt                                             ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous Integration/Test (Minimal versions)                             ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous Integration/Rustfmt                                             ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/Test (Minimal versions)                             ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/Clippy                                              ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/Test                                                ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/Test (Minimal versions)                             ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/Test                                                ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/Rustfmt                                             ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/Clippy                                              ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/Clippy                                              ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/blckngm-webview2] user=0 workdir=\n[Continuous Integration/Rustfmt                                             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/blckngm-webview2] user=0 workdir=\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/blckngm-webview2] user=0 workdir=\n[Continuous Integration/Test (Minimal versions)                             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/blckngm-webview2] user=0 workdir=\n[Continuous Integration/Test                                                ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/blckngm-webview2] user=0 workdir=\n[Continuous Integration/Test                                                ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous Integration/Rustfmt                                             ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous Integration/Clippy                                              ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous Integration/Test (Minimal versions)                             ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous Integration/Test                                                ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous Integration/Rustfmt                                             ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous Integration/Clippy                                              ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous Integration/Check Generated Code (make sure they are up to date)] \u2b50 Run Main actions/checkout@v2\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \u2705  Success - Main actions/checkout@v2\n[Continuous Integration/Test (Minimal versions)                             ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous Integration/Test                                                ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous Integration/Rustfmt                                             ] \u2b50 Run Main actions/checkout@v2\n[Continuous Integration/Clippy                                              ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous Integration/Rustfmt                                             ]   \u2705  Success - Main actions/checkout@v2\n[Continuous Integration/Check Generated Code (make sure they are up to date)] \u2b50 Run Main actions-rs/toolchain@v1\n[Continuous Integration/Test (Minimal versions)                             ] \ud83e\uddea  Matrix: map[toolchain:nightly-x86_64-pc-windows-msvc]\n[Continuous Integration/Test (Minimal versions)                             ] \u2b50 Run Main actions/checkout@v2\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous Integration/Test (Minimal versions)                             ]   \u2705  Success - Main actions/checkout@v2\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous Integration/Test                                                ] \ud83e\uddea  Matrix: map[arch:x86_64 env:msvc version:stable]\n[Continuous Integration/Test                                                ] \u2b50 Run Main actions/checkout@v2\n[Continuous Integration/Rustfmt                                             ] \u2b50 Run Main actions-rs/toolchain@v1\n[Continuous Integration/Test                                                ]   \u2705  Success - Main actions/checkout@v2\n[Continuous Integration/Clippy                                              ] \u2b50 Run Main actions/checkout@v2\n[Continuous Integration/Rustfmt                                             ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous Integration/Clippy                                              ]   \u2705  Success - Main actions/checkout@v2\n[Continuous Integration/Test (Minimal versions)                             ] \u2b50 Run Main actions-rs/toolchain@v1\n[Continuous Integration/Rustfmt                                             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous Integration/Test                                                ] \u2b50 Run Main actions-rs/toolchain@v1\n[Continuous Integration/Test (Minimal versions)                             ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous Integration/Test                                                ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous Integration/Test (Minimal versions)                             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous Integration/Test                                                ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous Integration/Clippy                                              ] \u2b50 Run Main actions-rs/toolchain@v1\n[Continuous Integration/Clippy                                              ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous Integration/Clippy                                              ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous Integration/Test                                                ]   | OCI runtime exec failed: exec failed: unable to start container process: error executing setns process: exit status 1: unknown\r\n[Continuous Integration/Test                                                ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous Integration/Rustfmt                                             ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous Integration/Clippy                                              ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous Integration/Test (Minimal versions)                             ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous Integration/Test                                                ]   \u274c  Failure - Main actions-rs/toolchain@v1\n[Continuous Integration/Test                                                ] Error response from daemon: Could not find the file /var/run/act/workflow/pathcmd.txt in container 4635c6cf9f201b9dfb5c3c9495ab60870d16f7cffb4f64235780d7200e02106c\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \ud83d\udcac  ::debug::using toolchain from input: 1.51.0\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \ud83d\udcac  ::debug::Destination /tmp/b2c9a97b-d963-41e0-9bda-874b46c1a614\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \ud83d\udcac  ::debug::download complete\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/b2c9a97b-d963-41e0-9bda-874b46c1a614\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | [command]/tmp/b2c9a97b-d963-41e0-9bda-874b46c1a614 --default-toolchain none -y\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: downloading installer\n[Continuous Integration/Rustfmt                                             ]   \ud83d\udcac  ::debug::using toolchain from input: 1.51.0\n[Continuous Integration/Rustfmt                                             ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous Integration/Rustfmt                                             ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous Integration/Rustfmt                                             ]   \ud83d\udcac  ::debug::Destination /tmp/987b82d8-4d74-46e6-a83a-aba2deea972c\n[Continuous Integration/Test (Minimal versions)                             ]   \ud83d\udcac  ::debug::using toolchain from input: nightly-x86_64-pc-windows-msvc\n[Continuous Integration/Test (Minimal versions)                             ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous Integration/Test (Minimal versions)                             ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous Integration/Test (Minimal versions)                             ]   \ud83d\udcac  ::debug::Destination /tmp/2e275d30-9de8-48e5-bae3-876b4cae8873\n[Continuous Integration/Clippy                                              ]   \ud83d\udcac  ::debug::using toolchain from input: 1.51.0\n[Continuous Integration/Clippy                                              ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous Integration/Clippy                                              ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous Integration/Clippy                                              ]   \ud83d\udcac  ::debug::Destination /tmp/9af4a73d-e956-4b42-8fa9-21ef35dbf781\n[Continuous Integration/Clippy                                              ]   \ud83d\udcac  ::debug::download complete\n[Continuous Integration/Clippy                                              ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/9af4a73d-e956-4b42-8fa9-21ef35dbf781\n[Continuous Integration/Clippy                                              ]   | [command]/tmp/9af4a73d-e956-4b42-8fa9-21ef35dbf781 --default-toolchain none -y\n[Continuous Integration/Clippy                                              ]   | info: downloading installer\n[Continuous Integration/Test                                                ] failed to remove container: Error response from daemon: No such container: 4635c6cf9f201b9dfb5c3c9495ab60870d16f7cffb4f64235780d7200e02106c\n[Continuous Integration/Test                                                ] \ud83c\udfc1  Job failed\n[Continuous Integration/Clippy                                              ]   | info: profile set to 'default'\n[Continuous Integration/Clippy                                              ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous Integration/Clippy                                              ]   | info: skipping toolchain installation\n[Continuous Integration/Clippy                                              ]   | \n[Continuous Integration/Clippy                                              ]   | \n[Continuous Integration/Clippy                                              ]   | Rust is installed now. Great!\n[Continuous Integration/Clippy                                              ]   | \n[Continuous Integration/Clippy                                              ]   | To get started you may need to restart your current shell.\n[Continuous Integration/Clippy                                              ]   | This would reload your PATH environment variable to include\n[Continuous Integration/Clippy                                              ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous Integration/Clippy                                              ]   | \n[Continuous Integration/Clippy                                              ]   | To configure your current shell, run:\n[Continuous Integration/Clippy                                              ]   | source \"$HOME/.cargo/env\"\n[Continuous Integration/Clippy                                              ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous Integration/Clippy                                              ]   | Default host: x86_64-unknown-linux-gnu\n[Continuous Integration/Clippy                                              ]   | rustup home:  /home/runneradmin/.rustup\n[Continuous Integration/Clippy                                              ]   | \n[Continuous Integration/Clippy                                              ]   | no active toolchain\n[Continuous Integration/Clippy                                              ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/Clippy                                              ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/Clippy                                              ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/Clippy                                              ]   | Installed rustup 1.26.0 support profiles\n[Continuous Integration/Clippy                                              ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous Integration/Clippy                                              ]   | info: profile set to 'minimal'\n[Continuous Integration/Clippy                                              ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install 1.51.0\n[Continuous Integration/Clippy                                              ]   | info: syncing channel updates for '1.51.0-x86_64-unknown-linux-gnu'\n[Continuous Integration/Rustfmt                                             ]   \ud83d\udcac  ::debug::download complete\n[Continuous Integration/Rustfmt                                             ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/987b82d8-4d74-46e6-a83a-aba2deea972c\n[Continuous Integration/Rustfmt                                             ]   | [command]/tmp/987b82d8-4d74-46e6-a83a-aba2deea972c --default-toolchain none -y\n[Continuous Integration/Rustfmt                                             ]   | info: downloading installer\n[Continuous Integration/Clippy                                              ]   | info: latest update on 2021-03-25, rust version 1.51.0 (2fd73fabe 2021-03-23)\n[Continuous Integration/Clippy                                              ]   | info: downloading component 'cargo'\n[Continuous Integration/Clippy                                              ]   | info: downloading component 'rust-std'\n[Continuous Integration/Clippy                                              ]   | info: downloading component 'rustc'\n[Continuous Integration/Clippy                                              ]   | info: installing component 'cargo'\n[Continuous Integration/Test (Minimal versions)                             ]   \ud83d\udcac  ::debug::download complete\n[Continuous Integration/Test (Minimal versions)                             ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/2e275d30-9de8-48e5-bae3-876b4cae8873\n[Continuous Integration/Test (Minimal versions)                             ]   | [command]/tmp/2e275d30-9de8-48e5-bae3-876b4cae8873 --default-toolchain none -y\n[Continuous Integration/Test (Minimal versions)                             ]   | info: downloading installer\n[Continuous Integration/Clippy                                              ]   | info: installing component 'rust-std'\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: profile set to 'default'\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: skipping toolchain installation\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | \n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | \n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | Rust is installed now. Great!\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | \n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | To get started you may need to restart your current shell.\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | This would reload your PATH environment variable to include\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | \n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | To configure your current shell, run:\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | source \"$HOME/.cargo/env\"\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | Default host: x86_64-unknown-linux-gnu\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | rustup home:  /home/runneradmin/.rustup\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | \n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | no active toolchain\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | Installed rustup 1.26.0 support profiles\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: profile set to 'minimal'\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install 1.51.0\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: syncing channel updates for '1.51.0-x86_64-unknown-linux-gnu'\n[Continuous Integration/Test (Minimal versions)                             ]   | info: profile set to 'default'\n[Continuous Integration/Test (Minimal versions)                             ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous Integration/Test (Minimal versions)                             ]   | info: skipping toolchain installation\n[Continuous Integration/Test (Minimal versions)                             ]   | \n[Continuous Integration/Test (Minimal versions)                             ]   | \n[Continuous Integration/Test (Minimal versions)                             ]   | Rust is installed now. Great!\n[Continuous Integration/Test (Minimal versions)                             ]   | \n[Continuous Integration/Test (Minimal versions)                             ]   | To get started you may need to restart your current shell.\n[Continuous Integration/Test (Minimal versions)                             ]   | This would reload your PATH environment variable to include\n[Continuous Integration/Test (Minimal versions)                             ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous Integration/Test (Minimal versions)                             ]   | \n[Continuous Integration/Test (Minimal versions)                             ]   | To configure your current shell, run:\n[Continuous Integration/Test (Minimal versions)                             ]   | source \"$HOME/.cargo/env\"\n[Continuous Integration/Test (Minimal versions)                             ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous Integration/Test (Minimal versions)                             ]   | Default host: x86_64-unknown-linux-gnu\n[Continuous Integration/Test (Minimal versions)                             ]   | rustup home:  /home/runneradmin/.rustup\n[Continuous Integration/Test (Minimal versions)                             ]   | \n[Continuous Integration/Test (Minimal versions)                             ]   | no active toolchain\n[Continuous Integration/Test (Minimal versions)                             ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/Test (Minimal versions)                             ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/Test (Minimal versions)                             ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/Test (Minimal versions)                             ]   | Installed rustup 1.26.0 support profiles\n[Continuous Integration/Test (Minimal versions)                             ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous Integration/Test (Minimal versions)                             ]   | info: profile set to 'minimal'\n[Continuous Integration/Test (Minimal versions)                             ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install nightly-x86_64-pc-windows-msvc\n[Continuous Integration/Test (Minimal versions)                             ]   | error: DEPRECATED: future versions of rustup will require --force-non-host to install a non-host toolchain as the default.\n[Continuous Integration/Test (Minimal versions)                             ]   | warning: toolchain 'nightly-x86_64-pc-windows-msvc' may not be able to run on this system.\n[Continuous Integration/Test (Minimal versions)                             ]   | warning: If you meant to build software to target that platform, perhaps try `rustup target add x86_64-pc-windows-msvc` instead?\n[Continuous Integration/Test (Minimal versions)                             ]   | info: syncing channel updates for 'nightly-x86_64-pc-windows-msvc'\n[Continuous Integration/Rustfmt                                             ]   | info: profile set to 'default'\n[Continuous Integration/Rustfmt                                             ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous Integration/Rustfmt                                             ]   | info: skipping toolchain installation\n[Continuous Integration/Rustfmt                                             ]   | \n[Continuous Integration/Rustfmt                                             ]   | \n[Continuous Integration/Rustfmt                                             ]   | Rust is installed now. Great!\n[Continuous Integration/Rustfmt                                             ]   | \n[Continuous Integration/Rustfmt                                             ]   | To get started you may need to restart your current shell.\n[Continuous Integration/Rustfmt                                             ]   | This would reload your PATH environment variable to include\n[Continuous Integration/Rustfmt                                             ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous Integration/Rustfmt                                             ]   | \n[Continuous Integration/Rustfmt                                             ]   | To configure your current shell, run:\n[Continuous Integration/Rustfmt                                             ]   | source \"$HOME/.cargo/env\"\n[Continuous Integration/Rustfmt                                             ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous Integration/Rustfmt                                             ]   | Default host: x86_64-unknown-linux-gnu\n[Continuous Integration/Rustfmt                                             ]   | rustup home:  /home/runneradmin/.rustup\n[Continuous Integration/Rustfmt                                             ]   | \n[Continuous Integration/Rustfmt                                             ]   | no active toolchain\n[Continuous Integration/Rustfmt                                             ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/Rustfmt                                             ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/Rustfmt                                             ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/Rustfmt                                             ]   | Installed rustup 1.26.0 support profiles\n[Continuous Integration/Rustfmt                                             ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous Integration/Rustfmt                                             ]   | info: profile set to 'minimal'\n[Continuous Integration/Rustfmt                                             ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install 1.51.0\n[Continuous Integration/Rustfmt                                             ]   | info: syncing channel updates for '1.51.0-x86_64-unknown-linux-gnu'\n[Continuous Integration/Clippy                                              ]   | info: installing component 'rustc'\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: latest update on 2021-03-25, rust version 1.51.0 (2fd73fabe 2021-03-23)\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: downloading component 'cargo'\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: downloading component 'rust-std'\n[Continuous Integration/Rustfmt                                             ]   | info: latest update on 2021-03-25, rust version 1.51.0 (2fd73fabe 2021-03-23)\n[Continuous Integration/Rustfmt                                             ]   | info: downloading component 'cargo'\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: downloading component 'rustc'\n[Continuous Integration/Clippy                                              ]   | \n[Continuous Integration/Clippy                                              ]   |   1.51.0-x86_64-unknown-linux-gnu installed - rustc 1.51.0 (2fd73fabe 2021-03-23)\n[Continuous Integration/Clippy                                              ]   | \n[Continuous Integration/Clippy                                              ]   | info: default toolchain set to '1.51.0-x86_64-unknown-linux-gnu'\n[Continuous Integration/Clippy                                              ]   | info: checking for self-update\n[Continuous Integration/Clippy                                              ]   | [command]/home/runneradmin/.cargo/bin/rustup override set 1.51.0\n[Continuous Integration/Clippy                                              ]   | info: using existing install for '1.51.0-x86_64-unknown-linux-gnu'\n[Continuous Integration/Clippy                                              ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/blckngm-webview2' set to '1.51.0-x86_64-unknown-linux-gnu'\n[Continuous Integration/Clippy                                              ]   | \n[Continuous Integration/Clippy                                              ]   |   1.51.0-x86_64-unknown-linux-gnu unchanged - rustc 1.51.0 (2fd73fabe 2021-03-23)\n[Continuous Integration/Clippy                                              ]   | \n[Continuous Integration/Clippy                                              ]   \u2753  ::group::Gathering installed versions\n[Continuous Integration/Clippy                                              ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous Integration/Clippy                                              ]   | rustc 1.51.0 (2fd73fabe 2021-03-23)\n[Continuous Integration/Clippy                                              ]   \u2699  ::set-output:: rustc=1.51.0 (2fd73fabe 2021-03-23)\n[Continuous Integration/Clippy                                              ]   \u2699  ::set-output:: rustc_hash=2fd73fabe\n[Continuous Integration/Clippy                                              ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous Integration/Clippy                                              ]   | cargo 1.51.0 (43b129a20 2021-03-16)\n[Continuous Integration/Clippy                                              ]   \u2699  ::set-output:: cargo=1.51.0 (43b129a20 2021-03-16)\n[Continuous Integration/Clippy                                              ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/Clippy                                              ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/Clippy                                              ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/Clippy                                              ]   | info: The currently active `rustc` version is `rustc 1.51.0 (2fd73fabe 2021-03-23)`\n[Continuous Integration/Clippy                                              ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/Clippy                                              ]   \u2753  ::endgroup::\n[Continuous Integration/Clippy                                              ]   \u2705  Success - Main actions-rs/toolchain@v1\n[Continuous Integration/Rustfmt                                             ]   | info: downloading component 'rust-std'\n[Continuous Integration/Clippy                                              ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous Integration/Clippy                                              ] \u2b50 Run Main rustup component add clippy\n[Continuous Integration/Test (Minimal versions)                             ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[Continuous Integration/Test (Minimal versions)                             ]   | info: downloading component 'cargo'\n[Continuous Integration/Clippy                                              ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Continuous Integration/Test (Minimal versions)                             ]   | info: downloading component 'rust-std'\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: installing component 'cargo'\n[Continuous Integration/Test (Minimal versions)                             ]   | info: downloading component 'rustc'\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: installing component 'rust-std'\n[Continuous Integration/Rustfmt                                             ]   | info: downloading component 'rustc'\n[Continuous Integration/Test (Minimal versions)                             ]   | info: installing component 'cargo'\n[Continuous Integration/Test (Minimal versions)                             ]   | info: installing component 'rust-std'\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: installing component 'rustc'\n[Continuous Integration/Test (Minimal versions)                             ]   | info: installing component 'rustc'\n[Continuous Integration/Rustfmt                                             ]   | info: installing component 'cargo'\n[Continuous Integration/Rustfmt                                             ]   | info: installing component 'rust-std'\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | \n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   1.51.0-x86_64-unknown-linux-gnu installed - rustc 1.51.0 (2fd73fabe 2021-03-23)\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | \n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: default toolchain set to '1.51.0-x86_64-unknown-linux-gnu'\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: checking for self-update\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | [command]/home/runneradmin/.cargo/bin/rustup override set 1.51.0\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: using existing install for '1.51.0-x86_64-unknown-linux-gnu'\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/blckngm-webview2' set to '1.51.0-x86_64-unknown-linux-gnu'\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | \n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   1.51.0-x86_64-unknown-linux-gnu unchanged - rustc 1.51.0 (2fd73fabe 2021-03-23)\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | \n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \u2753  ::group::Gathering installed versions\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | rustc 1.51.0 (2fd73fabe 2021-03-23)\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \u2699  ::set-output:: rustc=1.51.0 (2fd73fabe 2021-03-23)\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \u2699  ::set-output:: rustc_hash=2fd73fabe\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | cargo 1.51.0 (43b129a20 2021-03-16)\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \u2699  ::set-output:: cargo=1.51.0 (43b129a20 2021-03-16)\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: The currently active `rustc` version is `rustc 1.51.0 (2fd73fabe 2021-03-23)`\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \u2753  ::endgroup::\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \u2705  Success - Main actions-rs/toolchain@v1\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous Integration/Check Generated Code (make sure they are up to date)] \u2b50 Run Main rustup component add rustfmt\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Continuous Integration/Test (Minimal versions)                             ]   | \n[Continuous Integration/Test (Minimal versions)                             ]   |   nightly-x86_64-pc-windows-msvc installed - (rustc does not exist)\n[Continuous Integration/Test (Minimal versions)                             ]   | \n[Continuous Integration/Test (Minimal versions)                             ]   | info: default toolchain set to 'nightly-x86_64-pc-windows-msvc'\n[Continuous Integration/Test (Minimal versions)                             ]   | info: checking for self-update\n[Continuous Integration/Test (Minimal versions)                             ]   | [command]/home/runneradmin/.cargo/bin/rustup override set nightly-x86_64-pc-windows-msvc\n[Continuous Integration/Test (Minimal versions)                             ]   | info: using existing install for 'nightly-x86_64-pc-windows-msvc'\n[Continuous Integration/Test (Minimal versions)                             ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/blckngm-webview2' set to 'nightly-x86_64-pc-windows-msvc'\n[Continuous Integration/Test (Minimal versions)                             ]   | \n[Continuous Integration/Test (Minimal versions)                             ]   |   nightly-x86_64-pc-windows-msvc unchanged - (rustc does not exist)\n[Continuous Integration/Test (Minimal versions)                             ]   | \n[Continuous Integration/Test (Minimal versions)                             ]   \u2753  ::group::Gathering installed versions\n[Continuous Integration/Test (Minimal versions)                             ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous Integration/Rustfmt                                             ]   \u274c  Failure - Main actions-rs/toolchain@v1\n[Continuous Integration/Test (Minimal versions)                             ]   | error: the 'rustc' binary, normally provided by the 'rustc' component, is not applicable to the 'nightly-x86_64-pc-windows-msvc' toolchain\n[Continuous Integration/Test (Minimal versions)                             ]   \u2753  ::endgroup::\n[Continuous Integration/Test (Minimal versions)                             ]   \u2757  ::error::The process '/home/runneradmin/.cargo/bin/rustc' failed with exit code 1\n[Continuous Integration/Test (Minimal versions)                             ]   \u274c  Failure - Main actions-rs/toolchain@v1\n[Continuous Integration/Test (Minimal versions)                             ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous Integration/Test (Minimal versions)                             ] exitcode '1': failure\n[Continuous Integration/Test (Minimal versions)                             ] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/5a4205445ef298fcfdf3261668cfeec199def9144473da50e3370944641aaef8?force=1&v=1\": context deadline exceeded\n[Continuous Integration/Test (Minimal versions)                             ] \ud83c\udfc1  Job failed\n[Continuous Integration/Clippy                                              ]   | OCI runtime exec failed: exec failed: unable to start container process: error executing setns process: exit status 1: unknown\r\n[Continuous Integration/Clippy                                              ]   \u274c  Failure - Main rustup component add clippy\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: downloading component 'rustfmt'\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | info: installing component 'rustfmt'\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \u2705  Success - Main rustup component add rustfmt\n[Continuous Integration/Check Generated Code (make sure they are up to date)] \u2b50 Run Main cargo run < ../Microsoft.Web.WebView2.*/WebView2.idl > ../src/lib.rs && rustfmt ../src/lib.rs\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=webview2-sys/idl2rs\n[Continuous Integration/Rustfmt                                             ] Error response from daemon: Could not find the file /var/run/act/workflow/pathcmd.txt in container fc48b4f006465a90018b2783c5515fa369c7d48db55a6c593062d9c1236385dc\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |     Updating crates.io index\n[Continuous Integration/Rustfmt                                             ] failed to remove container: Error response from daemon: No such container: fc48b4f006465a90018b2783c5515fa369c7d48db55a6c593062d9c1236385dc\n[Continuous Integration/Rustfmt                                             ] \ud83c\udfc1  Job failed\n[Continuous Integration/Clippy                                              ] Error response from daemon: Could not find the file /var/run/act/workflow/pathcmd.txt in container 41c19532c16ac26c4d68582d5e489bd821e61f9f04ddfdc1994211c87ce1f252\n[Continuous Integration/Clippy                                              ] failed to remove container: Error response from daemon: No such container: 41c19532c16ac26c4d68582d5e489bd821e61f9f04ddfdc1994211c87ce1f252\n[Continuous Integration/Clippy                                              ] \ud83c\udfc1  Job failed\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |  Downloading crates ...\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded once_cell v1.17.2\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded unicode-ident v1.0.9\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded sha2 v0.10.6\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded typenum v1.16.0\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded pest_meta v2.6.0\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded pest_generator v2.6.0\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded digest v0.10.7\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded proc-macro2 v1.0.59\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded version_check v0.9.4\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded thiserror-impl v1.0.40\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded pest_derive v2.6.0\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded syn v2.0.18\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded ucd-trie v0.1.5\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded quote v1.0.28\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded generic-array v0.14.7\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded pest v2.6.0\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded thiserror v1.0.40\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded crypto-common v0.1.6\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded cpufeatures v0.2.7\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded cfg-if v1.0.0\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |   Downloaded block-buffer v0.10.4\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |    Compiling proc-macro2 v1.0.59\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |    Compiling quote v1.0.28\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |    Compiling unicode-ident v1.0.9\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |    Compiling thiserror v1.0.40\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |    Compiling ucd-trie v0.1.5\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   |    Compiling once_cell v1.17.2\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | error: edition 2021 is unstable and only available with -Z unstable-options.\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | \n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | error: could not compile `once_cell`\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | \n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | To learn more, run the command again with --verbose.\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | warning: build failed, waiting for other jobs to finish...\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   | error: build failed\n[Continuous Integration/Check Generated Code (make sure they are up to date)]   \u274c  Failure - Main cargo run < ../Microsoft.Web.WebView2.*/WebView2.idl > ../src/lib.rs && rustfmt ../src/lib.rs\n[Continuous Integration/Check Generated Code (make sure they are up to date)] failed to inspect exec: Error response from daemon: No such exec instance: 15efeeddca4eb14328184e3d1ab8f6b5a0ac6b1385884e505ad5a580e8165fad\n[Continuous Integration/Check Generated Code (make sure they are up to date)] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Error occurred running finally: Error occurred running finally: context deadline exceeded (original error: <nil>) (original error: <nil>)\n"
}