{
    "repository": "zombodb/postgres-parser",
    "clone_url": "https://github.com/zombodb/postgres-parser.git",
    "timestamp": "2023-05-30T09:43:54.022576Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[cargo test --all/Test Suite] \ud83d\ude80  Start image=crawlergpt:latest\n[cargo test --all/Test Suite]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[cargo test --all/Test Suite]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[cargo test --all/Test Suite]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[cargo test --all/Test Suite]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/zombodb-postgres-parser] user=0 workdir=\n[cargo test --all/Test Suite]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[cargo test --all/Test Suite]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[cargo test --all/Test Suite] \ud83e\uddea  Matrix: map[os:ubuntu-latest]\n[cargo test --all/Test Suite] \u2b50 Run Main install linux postgres build dependencies\n[cargo test --all/Test Suite]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/0] user= workdir=\n[cargo test --all/Test Suite]   | \n[cargo test --all/Test Suite]   | WARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n[cargo test --all/Test Suite]   | \n[cargo test --all/Test Suite]   | Reading package lists...\n[cargo test --all/Test Suite]   | Building dependency tree...\n[cargo test --all/Test Suite]   | Reading state information...\n[cargo test --all/Test Suite]   | make is already the newest version (4.2.1-1.2).\n[cargo test --all/Test Suite]   | curl is already the newest version (7.68.0-1ubuntu2.6).\n[cargo test --all/Test Suite]   | The following additional packages will be installed:\n[cargo test --all/Test Suite]   |   llvm-runtime\n[cargo test --all/Test Suite]   | The following NEW packages will be installed:\n[cargo test --all/Test Suite]   |   clang llvm llvm-runtime\n[cargo test --all/Test Suite]   | 0 upgraded, 3 newly installed, 0 to remove and 20 not upgraded.\n[cargo test --all/Test Suite]   | Need to get 10.1 kB of archives.\n[cargo test --all/Test Suite]   | After this operation, 152 kB of additional disk space will be used.\n[cargo test --all/Test Suite]   | Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 clang amd64 1:10.0-50~exp1 [3276 B]\n[cargo test --all/Test Suite]   | Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 llvm-runtime amd64 1:10.0-50~exp1 [2916 B]\n[cargo test --all/Test Suite]   | Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 llvm amd64 1:10.0-50~exp1 [3880 B]\n[cargo test --all/Test Suite]   | Fetched 10.1 kB in 1s (19.6 kB/s)\n[cargo test --all/Test Suite]   | Selecting previously unselected package clang.\r\n[cargo test --all/Test Suite]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[cargo test --all/Test Suite]   | Preparing to unpack .../clang_1%3a10.0-50~exp1_amd64.deb ...\r\n[cargo test --all/Test Suite]   | Unpacking clang (1:10.0-50~exp1) ...\r\n[cargo test --all/Test Suite]   | Selecting previously unselected package llvm-runtime.\r\n[cargo test --all/Test Suite]   | Preparing to unpack .../llvm-runtime_1%3a10.0-50~exp1_amd64.deb ...\r\n[cargo test --all/Test Suite]   | Unpacking llvm-runtime (1:10.0-50~exp1) ...\r\n[cargo test --all/Test Suite]   | Selecting previously unselected package llvm.\r\n[cargo test --all/Test Suite]   | Preparing to unpack .../llvm_1%3a10.0-50~exp1_amd64.deb ...\r\n[cargo test --all/Test Suite]   | Unpacking llvm (1:10.0-50~exp1) ...\r\n[cargo test --all/Test Suite]   | Setting up clang (1:10.0-50~exp1) ...\r\n[cargo test --all/Test Suite]   | Setting up llvm-runtime (1:10.0-50~exp1) ...\r\n[cargo test --all/Test Suite]   | Setting up llvm (1:10.0-50~exp1) ...\r\n[cargo test --all/Test Suite]   \u2705  Success - Main install linux postgres build dependencies\n[cargo test --all/Test Suite] \u2b50 Run Main Checkout sources\n[cargo test --all/Test Suite]   \u2705  Success - Main Checkout sources\n[cargo test --all/Test Suite] \u2b50 Run Main Install stable toolchain\n[cargo test --all/Test Suite]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[cargo test --all/Test Suite]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[cargo test --all/Test Suite]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[cargo test --all/Test Suite]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[cargo test --all/Test Suite]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[cargo test --all/Test Suite]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[cargo test --all/Test Suite]   \ud83d\udcac  ::debug::Destination /tmp/4d95c2cf-3b61-413a-902f-7cbbc8d1365e\n[cargo test --all/Test Suite]   \ud83d\udcac  ::debug::download complete\n[cargo test --all/Test Suite]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/4d95c2cf-3b61-413a-902f-7cbbc8d1365e\n[cargo test --all/Test Suite]   | [command]/tmp/4d95c2cf-3b61-413a-902f-7cbbc8d1365e --default-toolchain none -y\n[cargo test --all/Test Suite]   | info: downloading installer\n[cargo test --all/Test Suite]   | info: profile set to 'default'\n[cargo test --all/Test Suite]   | info: default host triple is x86_64-unknown-linux-gnu\n[cargo test --all/Test Suite]   | info: skipping toolchain installation\n[cargo test --all/Test Suite]   | \n[cargo test --all/Test Suite]   | \n[cargo test --all/Test Suite]   | Rust is installed now. Great!\n[cargo test --all/Test Suite]   | \n[cargo test --all/Test Suite]   | To get started you may need to restart your current shell.\n[cargo test --all/Test Suite]   | This would reload your PATH environment variable to include\n[cargo test --all/Test Suite]   | Cargo's bin directory ($HOME/.cargo/bin).\n[cargo test --all/Test Suite]   | \n[cargo test --all/Test Suite]   | To configure your current shell, run:\n[cargo test --all/Test Suite]   | source \"$HOME/.cargo/env\"\n[cargo test --all/Test Suite]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[cargo test --all/Test Suite]   | Default host: x86_64-unknown-linux-gnu\n[cargo test --all/Test Suite]   | rustup home:  /home/runneradmin/.rustup\n[cargo test --all/Test Suite]   | \n[cargo test --all/Test Suite]   | no active toolchain\n[cargo test --all/Test Suite]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[cargo test --all/Test Suite]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[cargo test --all/Test Suite]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[cargo test --all/Test Suite]   | Installed rustup 1.26.0 support profiles\n[cargo test --all/Test Suite]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[cargo test --all/Test Suite]   | info: profile set to 'minimal'\n[cargo test --all/Test Suite]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[cargo test --all/Test Suite]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[cargo test --all/Test Suite]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[cargo test --all/Test Suite]   | info: downloading component 'cargo'\n[cargo test --all/Test Suite]   | info: downloading component 'rust-std'\n[cargo test --all/Test Suite]   | info: downloading component 'rustc'\n[cargo test --all/Test Suite]   | info: installing component 'cargo'\n[cargo test --all/Test Suite]   | info: installing component 'rust-std'\n[cargo test --all/Test Suite]   | info: installing component 'rustc'\n[cargo test --all/Test Suite]   | \n[cargo test --all/Test Suite]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[cargo test --all/Test Suite]   | \n[cargo test --all/Test Suite]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[cargo test --all/Test Suite]   | info: checking for self-update\n[cargo test --all/Test Suite]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[cargo test --all/Test Suite]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[cargo test --all/Test Suite]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/zombodb-postgres-parser' set to 'stable-x86_64-unknown-linux-gnu'\n[cargo test --all/Test Suite]   | \n[cargo test --all/Test Suite]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[cargo test --all/Test Suite]   | \n[cargo test --all/Test Suite]   \u2753  ::group::Gathering installed versions\n[cargo test --all/Test Suite]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[cargo test --all/Test Suite]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[cargo test --all/Test Suite]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[cargo test --all/Test Suite]   \u2699  ::set-output:: rustc_hash=84c898d65\n[cargo test --all/Test Suite]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[cargo test --all/Test Suite]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[cargo test --all/Test Suite]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[cargo test --all/Test Suite]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[cargo test --all/Test Suite]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[cargo test --all/Test Suite]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[cargo test --all/Test Suite]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[cargo test --all/Test Suite]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[cargo test --all/Test Suite]   \u2753  ::endgroup::\n[cargo test --all/Test Suite]   \u2705  Success - Main Install stable toolchain\n[cargo test --all/Test Suite]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[cargo test --all/Test Suite] \u2b50 Run Main Run cargo test\n[cargo test --all/Test Suite]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[cargo test --all/Test Suite]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[cargo test --all/Test Suite]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[cargo test --all/Test Suite]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[cargo test --all/Test Suite]   | [command]/home/runneradmin/.cargo/bin/cargo test --all\n[cargo test --all/Test Suite]   |     Updating crates.io index\n[cargo test --all/Test Suite]   |  Downloading crates ...\n[cargo test --all/Test Suite]   |   Downloaded glob v0.3.0\n[cargo test --all/Test Suite]   |   Downloaded ansi_term v0.11.0\n[cargo test --all/Test Suite]   |   Downloaded quote v1.0.9\n[cargo test --all/Test Suite]   |   Downloaded env_logger v0.8.3\n[cargo test --all/Test Suite]   |   Downloaded bitflags v1.2.1\n[cargo test --all/Test Suite]   |   Downloaded which v3.1.1\n[cargo test --all/Test Suite]   |   Downloaded shlex v0.1.1\n[cargo test --all/Test Suite]   |   Downloaded lazycell v1.3.0\n[cargo test --all/Test Suite]   |   Downloaded strsim v0.8.0\n[cargo test --all/Test Suite]   |   Downloaded unicode-xid v0.2.1\n[cargo test --all/Test Suite]   |   Downloaded vec_map v0.8.2\n[cargo test --all/Test Suite]   |   Downloaded serde v1.0.123\n[cargo test --all/Test Suite]   |   Downloaded regex v1.4.3\n[cargo test --all/Test Suite]   |   Downloaded textwrap v0.11.0\n[cargo test --all/Test Suite]   |   Downloaded num_cpus v1.13.0\n[cargo test --all/Test Suite]   |   Downloaded libloading v0.7.0\n[cargo test --all/Test Suite]   |   Downloaded bindgen v0.57.0\n[cargo test --all/Test Suite]   |   Downloaded version_check v0.9.2\n[cargo test --all/Test Suite]   |   Downloaded rustc-hash v1.1.0\n[cargo test --all/Test Suite]   |   Downloaded serde_json v1.0.62\n[cargo test --all/Test Suite]   |   Downloaded regex-syntax v0.6.22\n[cargo test --all/Test Suite]   |   Downloaded libc v0.2.86\n[cargo test --all/Test Suite]   |   Downloaded clang-sys v1.1.1\n[cargo test --all/Test Suite]   |   Downloaded clap v2.33.3\n[cargo test --all/Test Suite]   |   Downloaded aho-corasick v0.7.15\n[cargo test --all/Test Suite]   |   Downloaded itoa v0.4.7\n[cargo test --all/Test Suite]   |   Downloaded cfg-if v1.0.0\n[cargo test --all/Test Suite]   |   Downloaded atty v0.2.14\n[cargo test --all/Test Suite]   |   Downloaded syn v1.0.60\n[cargo test --all/Test Suite]   |   Downloaded ryu v1.0.5\n[cargo test --all/Test Suite]   |   Downloaded serde_derive v1.0.123\n[cargo test --all/Test Suite]   |   Downloaded unicode-width v0.1.8\n[cargo test --all/Test Suite]   |   Downloaded thread_local v1.1.3\n[cargo test --all/Test Suite]   |   Downloaded termcolor v1.1.2\n[cargo test --all/Test Suite]   |   Downloaded proc-macro2 v1.0.24\n[cargo test --all/Test Suite]   |   Downloaded once_cell v1.5.2\n[cargo test --all/Test Suite]   |   Downloaded memchr v2.3.4\n[cargo test --all/Test Suite]   |   Downloaded log v0.4.14\n[cargo test --all/Test Suite]   |   Downloaded nom v5.1.2\n[cargo test --all/Test Suite]   |   Downloaded humantime v2.1.0\n[cargo test --all/Test Suite]   |   Downloaded cexpr v0.4.0\n[cargo test --all/Test Suite]   |   Downloaded lazy_static v1.4.0\n[cargo test --all/Test Suite]   |   Downloaded peeking_take_while v0.1.2\n[cargo test --all/Test Suite]   |    Compiling libc v0.2.86\n[cargo test --all/Test Suite]   |    Compiling memchr v2.3.4\n[cargo test --all/Test Suite]   |    Compiling proc-macro2 v1.0.24\n[cargo test --all/Test Suite]   |    Compiling unicode-xid v0.2.1\n[cargo test --all/Test Suite]   |    Compiling cfg-if v1.0.0\n[cargo test --all/Test Suite]   |    Compiling syn v1.0.60\n[cargo test --all/Test Suite]   |    Compiling version_check v0.9.2\n[cargo test --all/Test Suite]   |    Compiling glob v0.3.0\n[cargo test --all/Test Suite]   |    Compiling log v0.4.14\n[cargo test --all/Test Suite]   |    Compiling once_cell v1.5.2\n[cargo test --all/Test Suite]   |    Compiling bitflags v1.2.1\n[cargo test --all/Test Suite]   |    Compiling regex-syntax v0.6.22\n[cargo test --all/Test Suite]   |    Compiling unicode-width v0.1.8\n[cargo test --all/Test Suite]   |    Compiling strsim v0.8.0\n[cargo test --all/Test Suite]   |    Compiling bindgen v0.57.0\n[cargo test --all/Test Suite]   |    Compiling humantime v2.1.0\n[cargo test --all/Test Suite]   |    Compiling serde_derive v1.0.123\n[cargo test --all/Test Suite]   |    Compiling termcolor v1.1.2\n[cargo test --all/Test Suite]   |    Compiling ansi_term v0.11.0\n[cargo test --all/Test Suite]   |    Compiling vec_map v0.8.2\n[cargo test --all/Test Suite]   |    Compiling rustc-hash v1.1.0\n[cargo test --all/Test Suite]   |    Compiling lazy_static v1.4.0\n[cargo test --all/Test Suite]   |    Compiling peeking_take_while v0.1.2\n[cargo test --all/Test Suite]   |    Compiling lazycell v1.3.0\n[cargo test --all/Test Suite]   |    Compiling serde v1.0.123\n[cargo test --all/Test Suite]   |    Compiling shlex v0.1.1\n[cargo test --all/Test Suite]   |    Compiling ryu v1.0.5\n[cargo test --all/Test Suite]   |    Compiling serde_json v1.0.62\n[cargo test --all/Test Suite]   |    Compiling itoa v0.4.7\n[cargo test --all/Test Suite]   |    Compiling libloading v0.7.0\n[cargo test --all/Test Suite]   |    Compiling textwrap v0.11.0\n[cargo test --all/Test Suite]   |    Compiling thread_local v1.1.3\n[cargo test --all/Test Suite]   |    Compiling nom v5.1.2\n[cargo test --all/Test Suite]   |    Compiling clang-sys v1.1.1\n[cargo test --all/Test Suite]   |    Compiling aho-corasick v0.7.15\n[cargo test --all/Test Suite]   |    Compiling quote v1.0.9\n[cargo test --all/Test Suite]   |    Compiling atty v0.2.14\n[cargo test --all/Test Suite]   |    Compiling which v3.1.1\n[cargo test --all/Test Suite]   |    Compiling num_cpus v1.13.0\n[cargo test --all/Test Suite]   |    Compiling clap v2.33.3\n[cargo test --all/Test Suite]   |    Compiling regex v1.4.3\n[cargo test --all/Test Suite]   |    Compiling cexpr v0.4.0\n[cargo test --all/Test Suite]   |    Compiling env_logger v0.8.3\n[cargo test --all/Test Suite]   |    Compiling postgres-parser v0.2.3 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/zombodb-postgres-parser)\n[cargo test --all/Test Suite]   \u274c  Failure - Main Run cargo test\n[cargo test --all/Test Suite] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/bc6f1db8f7feb5dd666404e1f14565437d13bc8e8b6d1584da59f15325752d08/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[cargo test --all/Test Suite] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}