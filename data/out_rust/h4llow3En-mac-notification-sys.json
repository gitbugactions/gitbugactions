{
    "repository": "h4llow3En/mac-notification-sys",
    "clone_url": "https://github.com/h4llow3En/mac-notification-sys.git",
    "timestamp": "2023-05-30T09:22:39.218699Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Continuous Integration/Test and Lint (macos)] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous Integration/test rustfmt         ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous Integration/test clang-format    ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous Integration/test rustfmt         ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous Integration/test clang-format    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous Integration/Test and Lint (macos)]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous Integration/test clang-format    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/test rustfmt         ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/Test and Lint (macos)]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/test rustfmt         ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/test clang-format    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/Test and Lint (macos)]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/test clang-format    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/h4llow3En-mac-notification-sys] user=0 workdir=\n[Continuous Integration/Test and Lint (macos)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/h4llow3En-mac-notification-sys] user=0 workdir=\n[Continuous Integration/test rustfmt         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/h4llow3En-mac-notification-sys] user=0 workdir=\n[Continuous Integration/test clang-format    ]   \u2601  git clone 'https://github.com/DoozyX/clang-format-lint-action' # ref=v0.8\n[Continuous Integration/test rustfmt         ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous Integration/Test and Lint (macos)]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous Integration/test clang-format    ] \u2b50 Run Main actions/checkout@v2\n[Continuous Integration/test rustfmt         ] \u2b50 Run Main Checkout sources\n[Continuous Integration/Test and Lint (macos)]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous Integration/Test and Lint (macos)]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous Integration/Test and Lint (macos)]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous Integration/Test and Lint (macos)] \ud83e\uddea  Matrix: map[rust:stable]\n[Continuous Integration/Test and Lint (macos)] \u2b50 Run Main actions/checkout@v2\n[Continuous Integration/test clang-format    ]   \u2705  Success - Main actions/checkout@v2\n[Continuous Integration/test rustfmt         ]   \u2705  Success - Main Checkout sources\n[Continuous Integration/test clang-format    ] \u2b50 Run Main DoozyX/clang-format-lint-action@v0.8\n[Continuous Integration/test rustfmt         ] \u2b50 Run Main Install nightly toolchain with rustfmt available\n[Continuous Integration/test rustfmt         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous Integration/test clang-format    ]   \ud83d\udc33  docker build -t act-doozyx-clang-format-lint-action-v0-8-dockeraction:latest /home/andre-silva/.cache/act/DoozyX-clang-format-lint-action@v0.8/\n[Continuous Integration/test rustfmt         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous Integration/test rustfmt         ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous Integration/test rustfmt         ]   \ud83d\udcac  ::debug::using toolchain from input: nightly\n[Continuous Integration/test rustfmt         ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous Integration/test rustfmt         ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous Integration/test rustfmt         ]   \ud83d\udcac  ::debug::Destination /tmp/ba52761b-a4aa-48c1-aeac-7bf86fc6b22a\n[Continuous Integration/test rustfmt         ]   \ud83d\udcac  ::debug::download complete\n[Continuous Integration/test rustfmt         ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/ba52761b-a4aa-48c1-aeac-7bf86fc6b22a\n[Continuous Integration/test rustfmt         ]   | [command]/tmp/ba52761b-a4aa-48c1-aeac-7bf86fc6b22a --default-toolchain none -y\n[Continuous Integration/test rustfmt         ]   | info: downloading installer\n[Continuous Integration/Test and Lint (macos)]   \u2705  Success - Main actions/checkout@v2\n[Continuous Integration/test rustfmt         ]   | info: profile set to 'default'\n[Continuous Integration/test rustfmt         ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous Integration/test rustfmt         ]   | info: skipping toolchain installation\n[Continuous Integration/test rustfmt         ]   | \n[Continuous Integration/test rustfmt         ]   | \n[Continuous Integration/test rustfmt         ]   | Rust is installed now. Great!\n[Continuous Integration/test rustfmt         ]   | \n[Continuous Integration/test rustfmt         ]   | To get started you may need to restart your current shell.\n[Continuous Integration/test rustfmt         ]   | This would reload your PATH environment variable to include\n[Continuous Integration/test rustfmt         ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous Integration/test rustfmt         ]   | \n[Continuous Integration/test rustfmt         ]   | To configure your current shell, run:\n[Continuous Integration/test rustfmt         ]   | source \"$HOME/.cargo/env\"\n[Continuous Integration/test rustfmt         ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous Integration/test rustfmt         ]   | Default host: x86_64-unknown-linux-gnu\n[Continuous Integration/test rustfmt         ]   | rustup home:  /home/runneradmin/.rustup\n[Continuous Integration/test rustfmt         ]   | \n[Continuous Integration/test rustfmt         ]   | no active toolchain\n[Continuous Integration/test rustfmt         ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/test rustfmt         ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/test rustfmt         ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/test rustfmt         ]   | Installed rustup 1.26.0 support profiles\n[Continuous Integration/test rustfmt         ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/test rustfmt         ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/test rustfmt         ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/test rustfmt         ]   | Installed rustup 1.26.0 support components\n[Continuous Integration/test rustfmt         ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous Integration/test rustfmt         ]   | info: profile set to 'minimal'\n[Continuous Integration/test rustfmt         ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install nightly --component rustfmt --allow-downgrade\n[Continuous Integration/test rustfmt         ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[Continuous Integration/Test and Lint (macos)] \u2b50 Run Main actions-rs/toolchain@v1\n[Continuous Integration/Test and Lint (macos)]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous Integration/test rustfmt         ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[Continuous Integration/test rustfmt         ]   | info: downloading component 'cargo'\n[Continuous Integration/test rustfmt         ]   | info: downloading component 'rust-std'\n[Continuous Integration/Test and Lint (macos)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous Integration/test rustfmt         ]   | info: downloading component 'rustc'\n[Continuous Integration/test rustfmt         ]   | info: downloading component 'rustfmt'\n[Continuous Integration/test rustfmt         ]   | info: installing component 'cargo'\n[Continuous Integration/test rustfmt         ]   | info: installing component 'rust-std'\n[Continuous Integration/test rustfmt         ]   | info: installing component 'rustc'\n[Continuous Integration/test rustfmt         ]   | info: installing component 'rustfmt'\n[Continuous Integration/test rustfmt         ]   | \n[Continuous Integration/test rustfmt         ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[Continuous Integration/test rustfmt         ]   | \n[Continuous Integration/test rustfmt         ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[Continuous Integration/test rustfmt         ]   | info: checking for self-update\n[Continuous Integration/test rustfmt         ]   | [command]/home/runneradmin/.cargo/bin/rustup override set nightly\n[Continuous Integration/test rustfmt         ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[Continuous Integration/test rustfmt         ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/h4llow3En-mac-notification-sys' set to 'nightly-x86_64-unknown-linux-gnu'\n[Continuous Integration/test rustfmt         ]   | \n[Continuous Integration/test rustfmt         ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[Continuous Integration/test rustfmt         ]   | \n[Continuous Integration/test rustfmt         ]   \u2753  ::group::Gathering installed versions\n[Continuous Integration/test rustfmt         ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous Integration/test rustfmt         ]   | rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[Continuous Integration/test rustfmt         ]   \u2699  ::set-output:: rustc=1.72.0-nightly (498553fc0 2023-05-29)\n[Continuous Integration/test rustfmt         ]   \u2699  ::set-output:: rustc_hash=498553fc0\n[Continuous Integration/test rustfmt         ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous Integration/test rustfmt         ]   | cargo 1.72.0-nightly (64fb38c97 2023-05-23)\n[Continuous Integration/test rustfmt         ]   \u2699  ::set-output:: cargo=1.72.0-nightly (64fb38c97 2023-05-23)\n[Continuous Integration/test rustfmt         ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/test rustfmt         ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/test rustfmt         ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/test rustfmt         ]   | info: The currently active `rustc` version is `rustc 1.72.0-nightly (498553fc0 2023-05-29)`\n[Continuous Integration/test rustfmt         ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/test rustfmt         ]   \u2753  ::endgroup::\n[Continuous Integration/test rustfmt         ]   \u2705  Success - Main Install nightly toolchain with rustfmt available\n[Continuous Integration/test rustfmt         ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous Integration/test rustfmt         ] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/67ba0a8b2504badff20a842d7159a22bd3de1b8cff215df7f7d918b0a3edf214?force=1&v=1\": context deadline exceeded\n[Continuous Integration/test rustfmt         ] \ud83c\udfc1  Job succeeded\n[Continuous Integration/Test and Lint (macos)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous Integration/test clang-format    ]   \ud83d\udc33  docker pull image=act-doozyx-clang-format-lint-action-v0-8-dockeraction:latest platform= username= forcePull=false\n[Continuous Integration/test clang-format    ]   \ud83d\udc33  docker create image=act-doozyx-clang-format-lint-action-v0-8-dockeraction:latest platform= entrypoint=[] cmd=[\"--clang-format-executable\" \"/clang-format/clang-format10\" \"-r\" \"--style\" \"file\" \"--extensions\" \"h,m\" \"--exclude\" \"./third_party ./external\" \"./objc\"]\n[Continuous Integration/Test and Lint (macos)]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[Continuous Integration/Test and Lint (macos)]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous Integration/Test and Lint (macos)]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous Integration/Test and Lint (macos)]   \ud83d\udcac  ::debug::Destination /tmp/dfee80fa-8360-4cde-8362-748b7ebd27e0\n[Continuous Integration/Test and Lint (macos)]   \ud83d\udcac  ::debug::download complete\n[Continuous Integration/Test and Lint (macos)]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/dfee80fa-8360-4cde-8362-748b7ebd27e0\n[Continuous Integration/Test and Lint (macos)]   | [command]/tmp/dfee80fa-8360-4cde-8362-748b7ebd27e0 --default-toolchain none -y\n[Continuous Integration/Test and Lint (macos)]   | info: downloading installer\n[Continuous Integration/Test and Lint (macos)]   | info: profile set to 'default'\n[Continuous Integration/Test and Lint (macos)]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous Integration/Test and Lint (macos)]   | info: skipping toolchain installation\n[Continuous Integration/Test and Lint (macos)]   | \n[Continuous Integration/Test and Lint (macos)]   | \n[Continuous Integration/Test and Lint (macos)]   | Rust is installed now. Great!\n[Continuous Integration/Test and Lint (macos)]   | \n[Continuous Integration/Test and Lint (macos)]   | To get started you may need to restart your current shell.\n[Continuous Integration/Test and Lint (macos)]   | This would reload your PATH environment variable to include\n[Continuous Integration/Test and Lint (macos)]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous Integration/Test and Lint (macos)]   | \n[Continuous Integration/Test and Lint (macos)]   | To configure your current shell, run:\n[Continuous Integration/Test and Lint (macos)]   | source \"$HOME/.cargo/env\"\n[Continuous Integration/Test and Lint (macos)]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous Integration/Test and Lint (macos)]   | Default host: x86_64-unknown-linux-gnu\n[Continuous Integration/Test and Lint (macos)]   | rustup home:  /home/runneradmin/.rustup\n[Continuous Integration/Test and Lint (macos)]   | \n[Continuous Integration/Test and Lint (macos)]   | no active toolchain\n[Continuous Integration/Test and Lint (macos)]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/Test and Lint (macos)]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/Test and Lint (macos)]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/Test and Lint (macos)]   | Installed rustup 1.26.0 support profiles\n[Continuous Integration/Test and Lint (macos)]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous Integration/Test and Lint (macos)]   | info: profile set to 'minimal'\n[Continuous Integration/Test and Lint (macos)]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[Continuous Integration/Test and Lint (macos)]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/Test and Lint (macos)]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/Test and Lint (macos)]   | info: downloading component 'cargo'\n[Continuous Integration/Test and Lint (macos)]   | info: downloading component 'rust-std'\n[Continuous Integration/Test and Lint (macos)]   | info: downloading component 'rustc'\n[Continuous Integration/Test and Lint (macos)]   | info: installing component 'cargo'\n[Continuous Integration/Test and Lint (macos)]   | info: installing component 'rust-std'\n[Continuous Integration/Test and Lint (macos)]   | info: installing component 'rustc'\n[Continuous Integration/Test and Lint (macos)]   | \n[Continuous Integration/Test and Lint (macos)]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/Test and Lint (macos)]   | \n[Continuous Integration/Test and Lint (macos)]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/Test and Lint (macos)]   | info: checking for self-update\n[Continuous Integration/Test and Lint (macos)]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[Continuous Integration/Test and Lint (macos)]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/Test and Lint (macos)]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/h4llow3En-mac-notification-sys' set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/Test and Lint (macos)]   | \n[Continuous Integration/Test and Lint (macos)]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/Test and Lint (macos)]   | \n[Continuous Integration/Test and Lint (macos)]   \u2753  ::group::Gathering installed versions\n[Continuous Integration/Test and Lint (macos)]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous Integration/Test and Lint (macos)]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/Test and Lint (macos)]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/Test and Lint (macos)]   \u2699  ::set-output:: rustc_hash=84c898d65\n[Continuous Integration/Test and Lint (macos)]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous Integration/Test and Lint (macos)]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[Continuous Integration/Test and Lint (macos)]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[Continuous Integration/Test and Lint (macos)]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/Test and Lint (macos)]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/Test and Lint (macos)]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/Test and Lint (macos)]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Continuous Integration/Test and Lint (macos)]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/Test and Lint (macos)]   \u2753  ::endgroup::\n[Continuous Integration/Test and Lint (macos)]   \u2705  Success - Main actions-rs/toolchain@v1\n[Continuous Integration/Test and Lint (macos)]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous Integration/Test and Lint (macos)] \u2b50 Run Main rustup component add clippy\n[Continuous Integration/Test and Lint (macos)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Continuous Integration/Test and Lint (macos)]   | info: downloading component 'clippy'\n[Continuous Integration/Test and Lint (macos)]   | info: installing component 'clippy'\n[Continuous Integration/Test and Lint (macos)]   \u2705  Success - Main rustup component add clippy\n[Continuous Integration/test clang-format    ]   \ud83d\udc33  docker run image=act-doozyx-clang-format-lint-action-v0-8-dockeraction:latest platform= entrypoint=[] cmd=[\"--clang-format-executable\" \"/clang-format/clang-format10\" \"-r\" \"--style\" \"file\" \"--extensions\" \"h,m\" \"--exclude\" \"./third_party ./external\" \"./objc\"]\n[Continuous Integration/Test and Lint (macos)] \u2b50 Run Main check\n[Continuous Integration/Test and Lint (macos)]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[Continuous Integration/Test and Lint (macos)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[Continuous Integration/Test and Lint (macos)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[Continuous Integration/Test and Lint (macos)]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[Continuous Integration/Test and Lint (macos)]   | [command]/home/runneradmin/.cargo/bin/cargo check\n[Continuous Integration/Test and Lint (macos)]   |     Updating crates.io index\n[Continuous Integration/test clang-format    ]   | Processing 2 files: ./objc/notify.h, ./objc/notify.m\n[Continuous Integration/test clang-format    ]   \u2705  Success - Main DoozyX/clang-format-lint-action@v0.8\n[Continuous Integration/test clang-format    ] \ud83c\udfc1  Job succeeded\n[Continuous Integration/Test and Lint (macos)]   |  Downloading crates ...\n[Continuous Integration/Test and Lint (macos)]   |   Downloaded dirs-sys-next v0.1.2\n[Continuous Integration/Test and Lint (macos)]   |   Downloaded serde v1.0.163\n[Continuous Integration/Test and Lint (macos)]   |   Downloaded objc v0.2.7\n[Continuous Integration/Test and Lint (macos)]   |   Downloaded dirs-next v2.0.0\n[Continuous Integration/Test and Lint (macos)]   |   Downloaded block v0.1.6\n[Continuous Integration/Test and Lint (macos)]   |   Downloaded objc_id v0.1.1\n[Continuous Integration/Test and Lint (macos)]   |   Downloaded malloc_buf v0.0.6\n[Continuous Integration/Test and Lint (macos)]   |   Downloaded time-core v0.1.1\n[Continuous Integration/Test and Lint (macos)]   |   Downloaded objc-foundation v0.1.1\n[Continuous Integration/Test and Lint (macos)]   |   Downloaded time v0.3.21\n[Continuous Integration/Test and Lint (macos)]   |   Downloaded libc v0.2.144\n[Continuous Integration/Test and Lint (macos)]   |   Downloaded cfg-if v1.0.0\n[Continuous Integration/Test and Lint (macos)]   |   Downloaded cc v1.0.79\n[Continuous Integration/Test and Lint (macos)]   |    Compiling libc v0.2.144\n[Continuous Integration/Test and Lint (macos)]   |    Compiling cc v1.0.79\n[Continuous Integration/Test and Lint (macos)]   |     Checking time-core v0.1.1\n[Continuous Integration/Test and Lint (macos)]   |     Checking cfg-if v1.0.0\n[Continuous Integration/Test and Lint (macos)]   |     Checking block v0.1.6\n[Continuous Integration/Test and Lint (macos)]   |     Checking time v0.3.21\n[Continuous Integration/Test and Lint (macos)]   |    Compiling mac-notification-sys v0.5.6 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/h4llow3En-mac-notification-sys)\n[Continuous Integration/Test and Lint (macos)]   |     Checking malloc_buf v0.0.6\n[Continuous Integration/Test and Lint (macos)]   |     Checking dirs-sys-next v0.1.2\n[Continuous Integration/Test and Lint (macos)]   |     Checking objc v0.2.7\n[Continuous Integration/Test and Lint (macos)]   |     Checking dirs-next v2.0.0\n[Continuous Integration/Test and Lint (macos)]   |     Checking objc_id v0.1.1\n[Continuous Integration/Test and Lint (macos)]   |     Checking objc-foundation v0.1.1\n[Continuous Integration/Test and Lint (macos)]   | error[E0455]: link kind `framework` is only supported on Apple targets\n[Continuous Integration/Test and Lint (macos)]   |   --> /home/runneradmin/.cargo/registry/src/github.com-1ecc6299db9ec823/objc-foundation-0.1.1/src/lib.rs:21:36\n[Continuous Integration/Test and Lint (macos)]   |    |\n[Continuous Integration/Test and Lint (macos)]   | 21 | #[link(name = \"Foundation\", kind = \"framework\")]\n[Continuous Integration/Test and Lint (macos)]   |    |                                    ^^^^^^^^^^^\n[Continuous Integration/Test and Lint (macos)]   | \n[Continuous Integration/Test and Lint (macos)]   | For more information about this error, try `rustc --explain E0455`.\n[Continuous Integration/Test and Lint (macos)]   | error: could not compile `objc-foundation` due to previous error\n[Continuous Integration/Test and Lint (macos)]   \u2757  ::error::The process '/home/runneradmin/.cargo/bin/cargo' failed with exit code 101\n[Continuous Integration/Test and Lint (macos)]   \u274c  Failure - Main check\n[Continuous Integration/Test and Lint (macos)] exitcode '1': failure\n[Continuous Integration/Test and Lint (macos)] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Error occurred running finally: Error occurred running finally: context deadline exceeded (original error: <nil>) (original error: <nil>)\n"
}