{
    "repository": "exercism/rust",
    "clone_url": "https://github.com/exercism/rust.git",
    "timestamp": "2023-05-30T08:26:31.405985Z",
    "clone_success": true,
    "number of actions": 4,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/configlet lint                                ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Ensure conventions are followed               ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Clippy                                        ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Check exercises on nightly (benchmark enabled)] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/shellcheck internal tooling lint              ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/markdown lint                                 ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Check compilation                             ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Check Rust Formatting                         ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Check Rust Formatting                         ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/markdown lint                                 ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Check exercises on nightly (benchmark enabled)]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/configlet lint                                ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Clippy                                        ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Ensure conventions are followed               ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/shellcheck internal tooling lint              ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Check compilation                             ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Check Rust Formatting                         ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check exercises on nightly (benchmark enabled)]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/configlet lint                                ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/markdown lint                                 ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Ensure conventions are followed               ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check compilation                             ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/shellcheck internal tooling lint              ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/configlet lint                                ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check Rust Formatting                         ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check exercises on nightly (benchmark enabled)]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/shellcheck internal tooling lint              ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Ensure conventions are followed               ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/markdown lint                                 ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check compilation                             ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Clippy                                        ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Clippy                                        ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check Rust Formatting                         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/exercism-rust] user=0 workdir=\n[CI/configlet lint                                ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/exercism-rust] user=0 workdir=\n[CI/shellcheck internal tooling lint              ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/exercism-rust] user=0 workdir=\n[CI/markdown lint                                 ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/exercism-rust] user=0 workdir=\n[CI/Check compilation                             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/exercism-rust] user=0 workdir=\n[CI/Check exercises on nightly (benchmark enabled)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/exercism-rust] user=0 workdir=\n[CI/Ensure conventions are followed               ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/exercism-rust] user=0 workdir=\n[CI/Check exercises on nightly (benchmark enabled)]   \u2601  git clone 'https://github.com/actions/checkout' # ref=ac593985615ec2ede58e132d2e21d2b1cbd6127c\n[CI/configlet lint                                ]   \u2601  git clone 'https://github.com/actions/checkout' # ref=ac593985615ec2ede58e132d2e21d2b1cbd6127c\n[CI/Check compilation                             ]   \u2601  git clone 'https://github.com/actions/checkout' # ref=ac593985615ec2ede58e132d2e21d2b1cbd6127c\n[CI/Check Rust Formatting                         ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1.0.7\n[CI/markdown lint                                 ]   \u2601  git clone 'https://github.com/actions/checkout' # ref=ac593985615ec2ede58e132d2e21d2b1cbd6127c\n[CI/shellcheck internal tooling lint              ]   \u2601  git clone 'https://github.com/ludeeus/action-shellcheck' # ref=00cae500b08a931fb5698e11e79bfbd38e612a38\n[CI/Ensure conventions are followed               ] \u2b50 Run Main Checkout code\n[CI/Ensure conventions are followed               ]   \u2705  Success - Main Checkout code\n[CI/Ensure conventions are followed               ] \u2b50 Run Main Ensure tool names are snake cased\n[CI/Ensure conventions are followed               ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[CI/Check exercises on nightly (benchmark enabled)]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1.0.7\n[CI/configlet lint                                ] \u2b50 Run Main Checkout main\n[CI/Check compilation                             ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1.0.7\n[CI/configlet lint                                ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/ dst=/var/run/act/actions/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/\n[CI/configlet lint                                ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/] user=0 workdir=\n[CI/Check Rust Formatting                         ] \u2b50 Run Main Checkout code\n[CI/markdown lint                                 ] \u2b50 Run Main Checkout main\n[CI/Check Rust Formatting                         ]   \u2705  Success - Main Checkout code\n[CI/markdown lint                                 ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/ dst=/var/run/act/actions/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/\n[CI/markdown lint                                 ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/] user=0 workdir=\n[CI/shellcheck internal tooling lint              ] \u2b50 Run Pre Run shellcheck\n[CI/shellcheck internal tooling lint              ]   \u2705  Success - Pre Run shellcheck\n[CI/Check exercises on nightly (benchmark enabled)] \u2b50 Run Main Checkout main\n[CI/Check Rust Formatting                         ] \u2b50 Run Main Setup toolchain\n[CI/Check exercises on nightly (benchmark enabled)]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/ dst=/var/run/act/actions/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/\n[CI/Check Rust Formatting                         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1.0.7/ dst=/var/run/act/actions/actions-rs-toolchain@v1.0.7/\n[CI/Check compilation                             ] \ud83e\uddea  Matrix: map[deny_warnings: rust:stable]\n[CI/Check compilation                             ] \u2b50 Run Main Checkout main\n[CI/Check Rust Formatting                         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1.0.7/] user=0 workdir=\n[CI/Check compilation                             ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/ dst=/var/run/act/actions/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/\n[CI/Check exercises on nightly (benchmark enabled)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/] user=0 workdir=\n[CI/shellcheck internal tooling lint              ] \u2b50 Run Main Checkout\n[CI/shellcheck internal tooling lint              ]   \u2705  Success - Main Checkout\n[CI/Check compilation                             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/] user=0 workdir=\n[CI/shellcheck internal tooling lint              ] \u2b50 Run Main Run shellcheck\n[CI/shellcheck internal tooling lint              ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/ludeeus-action-shellcheck@00cae500b08a931fb5698e11e79bfbd38e612a38/ dst=/var/run/act/actions/ludeeus-action-shellcheck@00cae500b08a931fb5698e11e79bfbd38e612a38/\n[CI/shellcheck internal tooling lint              ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/ludeeus-action-shellcheck@00cae500b08a931fb5698e11e79bfbd38e612a38/] user=0 workdir=\n[CI/configlet lint                                ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/dist/index.js] user= workdir=\n[CI/Ensure conventions are followed               ]   \u2705  Success - Main Ensure tool names are snake cased\n[CI/Check compilation                             ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/dist/index.js] user= workdir=\n[CI/Check Rust Formatting                         ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1.0.7/dist/index.js] user= workdir=\n[CI/Check exercises on nightly (benchmark enabled)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/dist/index.js] user= workdir=\n[CI/markdown lint                                 ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/dist/index.js] user= workdir=\n[CI/shellcheck internal tooling lint              ] \u2b50 Run Main Download shellcheck\n[CI/Check compilation                             ]   \ud83d\udcac  ::debug::GITHUB_WORKSPACE = '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/exercism-rust'\n[CI/Check compilation                             ]   \ud83d\udcac  ::debug::qualified repository = 'exercism/rust'\n[CI/Check compilation                             ]   \ud83d\udcac  ::debug::ref = 'main'\n[CI/markdown lint                                 ]   \ud83d\udcac  ::debug::GITHUB_WORKSPACE = '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/exercism-rust'\n[CI/Check compilation                             ]   \ud83d\udcac  ::debug::commit = 'undefined'\n[CI/Check compilation                             ]   \ud83d\udcac  ::debug::clean = true\n[CI/markdown lint                                 ]   \ud83d\udcac  ::debug::qualified repository = 'exercism/rust'\n[CI/Check compilation                             ]   \ud83d\udcac  ::debug::fetch depth = 1\n[CI/markdown lint                                 ]   \ud83d\udcac  ::debug::ref = 'main'\n[CI/Check compilation                             ]   \ud83d\udcac  ::debug::lfs = false\n[CI/Check compilation                             ]   \ud83d\udcac  ::debug::submodules = false\n[CI/markdown lint                                 ]   \ud83d\udcac  ::debug::commit = 'undefined'\n[CI/Check compilation                             ]   \ud83d\udcac  ::debug::recursive submodules = false\n[CI/markdown lint                                 ]   \ud83d\udcac  ::debug::clean = true\n[CI/markdown lint                                 ]   \ud83d\udcac  ::debug::fetch depth = 1\n[CI/markdown lint                                 ]   \ud83d\udcac  ::debug::lfs = false\n[CI/markdown lint                                 ]   \ud83d\udcac  ::debug::submodules = false\n[CI/markdown lint                                 ]   \ud83d\udcac  ::debug::recursive submodules = false\n[CI/markdown lint                                 ]   \u2757  ::error::Input required and not supplied: token\n[CI/Check compilation                             ]   \u2757  ::error::Input required and not supplied: token\n[CI/markdown lint                                 ]   \u274c  Failure - Main Checkout main\n[CI/Check compilation                             ]   \u274c  Failure - Main Checkout main\n[CI/configlet lint                                ]   \ud83d\udcac  ::debug::GITHUB_WORKSPACE = '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/exercism-rust'\n[CI/configlet lint                                ]   \ud83d\udcac  ::debug::qualified repository = 'exercism/rust'\n[CI/configlet lint                                ]   \ud83d\udcac  ::debug::ref = 'main'\n[CI/configlet lint                                ]   \ud83d\udcac  ::debug::commit = 'undefined'\n[CI/configlet lint                                ]   \ud83d\udcac  ::debug::clean = true\n[CI/configlet lint                                ]   \ud83d\udcac  ::debug::fetch depth = 1\n[CI/configlet lint                                ]   \ud83d\udcac  ::debug::lfs = false\n[CI/configlet lint                                ]   \ud83d\udcac  ::debug::submodules = false\n[CI/configlet lint                                ]   \ud83d\udcac  ::debug::recursive submodules = false\n[CI/configlet lint                                ]   \u2757  ::error::Input required and not supplied: token\n[CI/Check Rust Formatting                         ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[CI/Check exercises on nightly (benchmark enabled)]   \ud83d\udcac  ::debug::GITHUB_WORKSPACE = '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/exercism-rust'\n[CI/Check exercises on nightly (benchmark enabled)]   \ud83d\udcac  ::debug::qualified repository = 'exercism/rust'\n[CI/Check exercises on nightly (benchmark enabled)]   \ud83d\udcac  ::debug::ref = 'main'\n[CI/Check exercises on nightly (benchmark enabled)]   \ud83d\udcac  ::debug::commit = 'undefined'\n[CI/Check exercises on nightly (benchmark enabled)]   \ud83d\udcac  ::debug::clean = true\n[CI/Check exercises on nightly (benchmark enabled)]   \ud83d\udcac  ::debug::fetch depth = 1\n[CI/Check exercises on nightly (benchmark enabled)]   \ud83d\udcac  ::debug::lfs = false\n[CI/Check exercises on nightly (benchmark enabled)]   \ud83d\udcac  ::debug::submodules = false\n[CI/Check exercises on nightly (benchmark enabled)]   \ud83d\udcac  ::debug::recursive submodules = false\n[CI/Check exercises on nightly (benchmark enabled)]   \u2757  ::error::Input required and not supplied: token\n[CI/Check exercises on nightly (benchmark enabled)]   \u274c  Failure - Main Checkout main\n[CI/configlet lint                                ]   \u274c  Failure - Main Checkout main\n[CI/Check Rust Formatting                         ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/Check Rust Formatting                         ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/Check Rust Formatting                         ]   \ud83d\udcac  ::debug::Destination /tmp/289e02a6-ca47-46f8-bd59-549cb94821a7\n[CI/Check Rust Formatting                         ]   \ud83d\udcac  ::debug::download complete\n[CI/Check Rust Formatting                         ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/289e02a6-ca47-46f8-bd59-549cb94821a7\n[CI/Check Rust Formatting                         ]   | [command]/tmp/289e02a6-ca47-46f8-bd59-549cb94821a7 --default-toolchain none -y\n[CI/Check Rust Formatting                         ]   | info: downloading installer\n[CI/Check Rust Formatting                         ]   | info: profile set to 'default'\n[CI/Check Rust Formatting                         ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Check Rust Formatting                         ]   | info: skipping toolchain installation\n[CI/Check Rust Formatting                         ]   | \n[CI/Check Rust Formatting                         ]   | \n[CI/Check Rust Formatting                         ]   | Rust is installed now. Great!\n[CI/Check Rust Formatting                         ]   | \n[CI/Check Rust Formatting                         ]   | To get started you may need to restart your current shell.\n[CI/Check Rust Formatting                         ]   | This would reload your PATH environment variable to include\n[CI/Check Rust Formatting                         ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Check Rust Formatting                         ]   | \n[CI/Check Rust Formatting                         ]   | To configure your current shell, run:\n[CI/Check Rust Formatting                         ]   | source \"$HOME/.cargo/env\"\n[CI/Check Rust Formatting                         ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/Check Rust Formatting                         ]   | Default host: x86_64-unknown-linux-gnu\n[CI/Check Rust Formatting                         ]   | rustup home:  /home/runneradmin/.rustup\n[CI/Check Rust Formatting                         ]   | \n[CI/Check Rust Formatting                         ]   | no active toolchain\n[CI/Check Rust Formatting                         ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[CI/Check Rust Formatting                         ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/Check Rust Formatting                         ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/Check Rust Formatting                         ]   | info: downloading component 'cargo'\n[CI/Check Rust Formatting                         ]   | info: downloading component 'clippy'\n[CI/Check Rust Formatting                         ]   | info: downloading component 'rust-docs'\n[CI/Check Rust Formatting                         ]   | info: downloading component 'rust-std'\n[CI/shellcheck internal tooling lint              ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-0.sh] user= workdir=\n[CI/Check compilation                             ] exitcode '1': failure\n[CI/Check exercises on nightly (benchmark enabled)] exitcode '1': failure\n[CI/markdown lint                                 ] exitcode '1': failure\n[CI/configlet lint                                ] exitcode '1': failure\n[CI/Check Rust Formatting                         ]   | info: downloading component 'rustc'\n[CI/Ensure conventions are followed               ] \u2b50 Run Main Ensure src/lib.rs files exist\n[CI/Check exercises on nightly (benchmark enabled)] \u2b50 Run Post Checkout main\n[CI/markdown lint                                 ] \u2b50 Run Post Checkout main\n[CI/Ensure conventions are followed               ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/configlet lint                                ] \u2b50 Run Post Checkout main\n[CI/markdown lint                                 ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/dist/index.js] user= workdir=\n[CI/configlet lint                                ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/dist/index.js] user= workdir=\n[CI/Check exercises on nightly (benchmark enabled)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/dist/index.js] user= workdir=\n[CI/Check compilation                             ] \u2b50 Run Post Checkout main\n[CI/Check compilation                             ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c/dist/index.js] user= workdir=\n[CI/Check Rust Formatting                         ]   | info: downloading component 'rustfmt'\n[CI/Check Rust Formatting                         ]   | info: installing component 'cargo'\n[CI/Check Rust Formatting                         ]   | info: installing component 'clippy'\n[CI/Check Rust Formatting                         ]   | info: installing component 'rust-docs'\n[CI/Check Rust Formatting                         ]   | info: installing component 'rust-std'\n[CI/shellcheck internal tooling lint              ]   \u2705  Success - Main Download shellcheck\n[CI/Check Rust Formatting                         ]   | info: installing component 'rustc'\n[CI/shellcheck internal tooling lint              ] \u2b50 Run Main Display shellcheck version\n[CI/shellcheck internal tooling lint              ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-1.sh] user= workdir=\n[CI/Check Rust Formatting                         ]   | info: installing component 'rustfmt'\n[CI/Check Rust Formatting                         ]   | \n[CI/Check Rust Formatting                         ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Check Rust Formatting                         ]   | \n[CI/Check Rust Formatting                         ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Check Rust Formatting                         ]   | info: checking for self-update\n[CI/Check Rust Formatting                         ]   | [command]/home/runneradmin/.cargo/bin/rustup default stable\n[CI/Check Rust Formatting                         ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/Check Rust Formatting                         ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Check Rust Formatting                         ]   | \n[CI/Check Rust Formatting                         ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Check Rust Formatting                         ]   | \n[CI/Check Rust Formatting                         ]   \u2753  ::group::Gathering installed versions\n[CI/Check Rust Formatting                         ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/Check Rust Formatting                         ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Check Rust Formatting                         ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[CI/Check Rust Formatting                         ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[CI/Check Rust Formatting                         ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/Check Rust Formatting                         ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[CI/Check Rust Formatting                         ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[CI/Check Rust Formatting                         ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Check Rust Formatting                         ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Check Rust Formatting                         ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Check Rust Formatting                         ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[CI/Check Rust Formatting                         ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/Check Rust Formatting                         ]   \u2753  ::endgroup::\n[CI/Check Rust Formatting                         ]   \u2705  Success - Main Setup toolchain\n[CI/Check Rust Formatting                         ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Check Rust Formatting                         ] \u2b50 Run Main Rust Format Version\n[CI/Check Rust Formatting                         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/Check exercises on nightly (benchmark enabled)]   \u2705  Success - Post Checkout main\n[CI/markdown lint                                 ]   \u2705  Success - Post Checkout main\n[CI/configlet lint                                ]   \u2705  Success - Post Checkout main\n[CI/Check compilation                             ]   \u2705  Success - Post Checkout main\n[CI/shellcheck internal tooling lint              ]   | ShellCheck - shell script analysis tool\n[CI/shellcheck internal tooling lint              ]   | version: 0.9.0\n[CI/shellcheck internal tooling lint              ]   | license: GNU General Public License, version 3\n[CI/shellcheck internal tooling lint              ]   | website: https://www.shellcheck.net\n[CI/shellcheck internal tooling lint              ]   \u2705  Success - Main Display shellcheck version\n[CI/Check Rust Formatting                         ]   | rustfmt 1.5.2-stable (84c898d 2023-04-16)\n[CI/Check Rust Formatting                         ]   \u2705  Success - Main Rust Format Version\n[CI/Ensure conventions are followed               ]   \u2705  Success - Main Ensure src/lib.rs files exist\n[CI/Ensure conventions are followed               ] \u2b50 Run Main Count ignores\n[CI/Check Rust Formatting                         ] \u2b50 Run Main Format\n[CI/shellcheck internal tooling lint              ] \u2b50 Run Main Set options\n[CI/markdown lint                                 ] \ud83c\udfc1  Job failed\n[CI/Check compilation                             ] \ud83c\udfc1  Job failed\n[CI/shellcheck internal tooling lint              ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-options.sh] user= workdir=\n[CI/Check Rust Formatting                         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/Ensure conventions are followed               ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/Check exercises on nightly (benchmark enabled)] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/dbdbb7f199711c616b0dd59270471906bd2ca1da1ed3bea6dc7570b02fb32a46?force=1&v=1\": context deadline exceeded\n[CI/Check exercises on nightly (benchmark enabled)] \ud83c\udfc1  Job failed\n[CI/configlet lint                                ] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/e1925aadabf07a57ab51f2e5f7dd23d210bd29f5d8ceaabece8392f84dcbcf3a?force=1&v=1\": context deadline exceeded\n[CI/configlet lint                                ] \ud83c\udfc1  Job failed\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/shellcheck internal tooling lint              ]   \u2705  Success - Main Set options\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/shellcheck internal tooling lint              ]   \u2699  ::set-output:: options=--format=gcc\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | \"Stub doesn't compile because there is no type specified for _function and _closure arguments. This exercise teaches students about the use of function pointers and closures, therefore specifying the type of arguments for them would reduce learning.\"\n[CI/Check Rust Formatting                         ]   | accumulate's stub is allowed to not compile\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | true\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/shellcheck internal tooling lint              ] \u2b50 Run Main Gather excluded paths\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | true\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/shellcheck internal tooling lint              ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-exclude.sh] user= workdir=\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   | true\n[CI/Ensure conventions are followed               ]   | null\n[CI/Ensure conventions are followed               ]   \u2705  Success - Main Count ignores\n[CI/Check Rust Formatting                         ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Check Rust Formatting                         ]   | \"Stub doesn't compile because there is no to_string() implementation. This exercise is an introduction to derived and self-implemented traits, therefore adding template for a trait would reduce student learning.\"\n[CI/Check Rust Formatting                         ]   | clock's stub is allowed to not compile\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ] \u2b50 Run Main Check UUIDs\n[CI/Check Rust Formatting                         ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[CI/Check Rust Formatting                         ]   | \"Stub doesn't compile because operations like +, - are not found. However, giving stubs to the traits would reduce the student's learning.\"\n[CI/Check Rust Formatting                         ]   | decimal's stub is allowed to not compile\n[CI/Check Rust Formatting                         ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Check Rust Formatting                         ]   | \"Stub does not compile because not every module and struct method were implemented. This exercise is an introduction to modules system and builder pattern, therefore implementing every module in the stub reduces student learning.\"\n[CI/Check Rust Formatting                         ]   | dot-dsl's stub is allowed to not compile\n[CI/Check Rust Formatting                         ]   | \"Stub allowed to not compile because pre_implemented module cannot be resolved by rustfmt in exercism v3 track structure\"\n[CI/Check Rust Formatting                         ]   | doubly-linked-list's stub is allowed to not compile\n[CI/Check Rust Formatting                         ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Check Rust Formatting                         ]   | null\n[CI/Ensure conventions are followed               ]   \u274c  Failure - Main Check UUIDs\n[CI/Ensure conventions are followed               ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/ea38c8f58feb50b75b37b525f4b5020a908f30fb250ea37f6e1a21b383a12000/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Check Rust Formatting                         ]   \u274c  Failure - Main Format\n[CI/Check Rust Formatting                         ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/833c2803e875b7accd94516218ab48beebefec5e0b5c3983625ab571075b8cc8/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/shellcheck internal tooling lint              ]   \u274c  Failure - Main Gather excluded paths\n[CI/shellcheck internal tooling lint              ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/b230ae221bb21c2bd108fd1a4b0fddb4ec1098c4cf45fa15fcf5c268a8b076be/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/shellcheck internal tooling lint              ]   \u2699  ::set-output:: files=\n[CI/shellcheck internal tooling lint              ]   \u2699  ::set-output:: options=--format=gcc\n[CI/shellcheck internal tooling lint              ]   \u274c  Failure - Main Run shellcheck\n[CI/shellcheck internal tooling lint              ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/b230ae221bb21c2bd108fd1a4b0fddb4ec1098c4cf45fa15fcf5c268a8b076be/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/shellcheck internal tooling lint              ] \u2b50 Run Post Run shellcheck\n[CI/shellcheck internal tooling lint              ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/ludeeus-action-shellcheck@00cae500b08a931fb5698e11e79bfbd38e612a38/ dst=/var/run/act/actions/ludeeus-action-shellcheck@00cae500b08a931fb5698e11e79bfbd38e612a38/\n[CI/shellcheck internal tooling lint              ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/ludeeus-action-shellcheck@00cae500b08a931fb5698e11e79bfbd38e612a38/] user=0 workdir=\n[CI/Check Rust Formatting                         ] \ud83c\udfc1  Job succeeded\n[CI/Ensure conventions are followed               ] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/ea38c8f58feb50b75b37b525f4b5020a908f30fb250ea37f6e1a21b383a12000?force=1&v=1\": context deadline exceeded\n[CI/Ensure conventions are followed               ] \ud83c\udfc1  Job succeeded\n[CI/shellcheck internal tooling lint              ]   \u2705  Success - Post Run shellcheck\n[CI/shellcheck internal tooling lint              ]   \u2699  ::set-output:: excludes=! -path *./.git/* ! -path *.go ! -path */mvnw\n[CI/shellcheck internal tooling lint              ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}