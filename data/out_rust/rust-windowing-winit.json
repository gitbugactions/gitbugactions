{
    "repository": "rust-windowing/winit",
    "clone_url": "https://github.com/rust-windowing/winit.git",
    "timestamp": "2023-05-30T08:58:33.865040Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/cargo-deny      ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Check_Formatting] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Tests           ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Tests           ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/cargo-deny      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Check_Formatting]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Check_Formatting]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/cargo-deny      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/cargo-deny      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check_Formatting]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Tests           ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Tests           ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/cargo-deny      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rust-windowing-winit] user=0 workdir=\n[CI/Check_Formatting]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rust-windowing-winit] user=0 workdir=\n[CI/cargo-deny      ]   \u2601  git clone 'https://github.com/EmbarkStudios/cargo-deny-action' # ref=v1\n[CI/Check_Formatting]   \u2601  git clone 'https://github.com/hecrj/setup-rust-action' # ref=v1\n[CI/cargo-deny      ] \ud83e\uddea  Matrix: map[platform:aarch64-apple-ios]\n[CI/cargo-deny      ] \u2b50 Run Main actions/checkout@v3\n[CI/Check_Formatting] \u2b50 Run Main actions/checkout@v3\n[CI/cargo-deny      ]   \u2705  Success - Main actions/checkout@v3\n[CI/Check_Formatting]   \u2705  Success - Main actions/checkout@v3\n[CI/cargo-deny      ] \u2b50 Run Main EmbarkStudios/cargo-deny-action@v1\n[CI/Check_Formatting] \u2b50 Run Main hecrj/setup-rust-action@v1\n[CI/Check_Formatting]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/hecrj-setup-rust-action@v1/ dst=/var/run/act/actions/hecrj-setup-rust-action@v1/\n[CI/Check_Formatting]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/hecrj-setup-rust-action@v1/] user=0 workdir=\n[CI/cargo-deny      ]   \ud83d\udc33  docker build -t act-embarkstudios-cargo-deny-action-v1-dockeraction:latest /home/andre-silva/.cache/act/EmbarkStudios-cargo-deny-action@v1/\n[CI/cargo-deny      ]   \ud83d\udc33  docker pull image=act-embarkstudios-cargo-deny-action-v1-dockeraction:latest platform= username= forcePull=false\n[CI/cargo-deny      ]   \ud83d\udc33  docker create image=act-embarkstudios-cargo-deny-action-v1-dockeraction:latest platform= entrypoint=[] cmd=[\"\" \"\" \"--log-level\" \"error\" \"--all-features --target aarch64-apple-ios\" \"check\" \"\"]\n[CI/Check_Formatting]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/hecrj-setup-rust-action@v1/dist/index.js] user= workdir=\n[CI/cargo-deny      ]   \ud83d\udc33  docker run image=act-embarkstudios-cargo-deny-action-v1-dockeraction:latest platform= entrypoint=[] cmd=[\"\" \"\" \"--log-level\" \"error\" \"--all-features --target aarch64-apple-ios\" \"check\" \"\"]\n[CI/Tests           ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:0 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rust-windowing-winit] user=0 workdir=\n[CI/Check_Formatting]   | (node:33) UnhandledPromiseRejectionWarning: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/Check_Formatting]   |     at Object.<anonymous> (/run/act/actions/hecrj-setup-rust-action@v1/dist/index.js:1:3806)\n[CI/Check_Formatting]   |     at Generator.next (<anonymous>)\n[CI/Check_Formatting]   |     at fulfilled (/run/act/actions/hecrj-setup-rust-action@v1/dist/index.js:1:1155)\n[CI/Check_Formatting]   | (Use `node --trace-warnings ...` to show where the warning was created)\n[CI/Check_Formatting]   | (node:33) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 1)\n[CI/Check_Formatting]   | (node:33) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\n[CI/Check_Formatting]   \u2705  Success - Main hecrj/setup-rust-action@v1\n[CI/Check_Formatting] \u2b50 Run Main Check Formatting\n[CI/Check_Formatting]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/Check_Formatting]   | /var/run/act/workflow/2: line 2: cargo: command not found\n[CI/Check_Formatting]   \u274c  Failure - Main Check Formatting\n[CI/Check_Formatting] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[CI/Check_Formatting] \ud83c\udfc1  Job failed\n[CI/cargo-deny      ]   | advisories ok, bans ok, licenses ok, sources ok\n[CI/cargo-deny      ]   \u2705  Success - Main EmbarkStudios/cargo-deny-action@v1\n[CI/cargo-deny      ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: failed to copy content to container: Error response from daemon: Could not find the file /var/run/act/ in container 0f67ff721ac75075dacb5eb3d648a307980b7f87d78b317d4772da9aa13c3d6c\n"
}