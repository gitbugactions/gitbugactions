{
    "repository": "stepancheg/rust-protobuf",
    "clone_url": "https://github.com/stepancheg/rust-protobuf.git",
    "timestamp": "2023-05-30T08:25:24.530621Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/rustfmt check                    ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/CI self-check                    ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/linux stable (default features)  ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/linux nightly (all features)     ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/mega-linter                      ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/linux beta (default features)    ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Check sync-readme                ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/linux stable (with-bytes)        ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Miri test                        ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/windows stable (default features)] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/CI self-check                    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/linux stable (with-bytes)        ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/linux stable (default features)  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/CI self-check                    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/linux nightly (all features)     ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/linux beta (default features)    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/rustfmt check                    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/mega-linter                      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Miri test                        ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/windows stable (default features)]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Check sync-readme                ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/linux stable (default features)  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/linux stable (with-bytes)        ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/linux beta (default features)    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/linux nightly (all features)     ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Miri test                        ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/rustfmt check                    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check sync-readme                ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/mega-linter                      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/windows stable (default features)]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/linux stable (default features)  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/rustfmt check                    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/linux beta (default features)    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check sync-readme                ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Miri test                        ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/windows stable (default features)]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/CI self-check                    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/linux nightly (all features)     ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/linux stable (with-bytes)        ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/mega-linter                      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/rustfmt check                    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf] user=0 workdir=\n[CI/linux stable (default features)  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf] user=0 workdir=\n[CI/rustfmt check                    ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[CI/linux stable (default features)  ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/linux beta (default features)    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf] user=0 workdir=\n[CI/CI self-check                    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf] user=0 workdir=\n[CI/rustfmt check                    ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/Check sync-readme                ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf] user=0 workdir=\n[CI/linux stable (default features)  ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[CI/linux beta (default features)    ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/CI self-check                    ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/rustfmt check                    ] \u2b50 Run Main Checkout sources\n[CI/linux stable (default features)  ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/rustfmt check                    ]   \u2705  Success - Main Checkout sources\n[CI/linux beta (default features)    ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[CI/CI self-check                    ] \u2b50 Run Main Checkout sources\n[CI/Check sync-readme                ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/Miri test                        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf] user=0 workdir=\n[CI/CI self-check                    ]   \u2705  Success - Main Checkout sources\n[CI/linux beta (default features)    ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/linux stable (default features)  ] \u2b50 Run Main Checkout sources\n[CI/rustfmt check                    ] \u2b50 Run Main Cache protobuf\n[CI/linux stable (default features)  ]   \u2705  Success - Main Checkout sources\n[CI/Check sync-readme                ] \u2b50 Run Main Checkout sources\n[CI/Miri test                        ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/linux beta (default features)    ] \u2b50 Run Main Checkout sources\n[CI/Miri test                        ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/Check sync-readme                ]   \u2705  Success - Main Checkout sources\n[CI/rustfmt check                    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[CI/linux beta (default features)    ]   \u2705  Success - Main Checkout sources\n[CI/Miri test                        ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/CI self-check                    ] \u2b50 Run Main Install toolchain\n[CI/rustfmt check                    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[CI/CI self-check                    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/Miri test                        ] \u2b50 Run Main Checkout sources\n[CI/linux stable (default features)  ] \u2b50 Run Main Install toolchain\n[CI/Miri test                        ]   \u2705  Success - Main Checkout sources\n[CI/Check sync-readme                ] \u2b50 Run Main Install toolchain\n[CI/linux stable (default features)  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/CI self-check                    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/linux beta (default features)    ] \u2b50 Run Main Install toolchain\n[CI/linux stable (default features)  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/Check sync-readme                ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/linux beta (default features)    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/Check sync-readme                ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/Miri test                        ] \u2b50 Run Main Install toolchain\n[CI/linux beta (default features)    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/Miri test                        ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/Miri test                        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/rustfmt check                    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[CI/linux stable (default features)  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/CI self-check                    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/Check sync-readme                ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/Miri test                        ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/linux beta (default features)    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/rustfmt check                    ]   \ud83d\udcac  ::debug::Resolved Keys:\n[CI/rustfmt check                    ]   \ud83d\udcac  ::debug::[\"pb-linux-3.19.4\"]\n[CI/rustfmt check                    ]   \ud83d\udcac  ::debug::Checking zstd --version\n[CI/rustfmt check                    ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[CI/rustfmt check                    ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/windows stable (default features)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf] user=0 workdir=\n[CI/linux stable (default features)  ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[CI/linux stable (default features)  ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/linux stable (default features)  ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/linux stable (default features)  ]   \ud83d\udcac  ::debug::Destination /tmp/f0cdde75-5907-4f0d-a5ad-d9599c8145dc\n[CI/Miri test                        ]   \ud83d\udcac  ::debug::using toolchain from input: nightly\n[CI/Miri test                        ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/Miri test                        ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/Miri test                        ]   \ud83d\udcac  ::debug::Destination /tmp/ed9d5e10-3766-4772-80df-fe0b7a3720c8\n[CI/Check sync-readme                ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[CI/Check sync-readme                ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/Check sync-readme                ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/Check sync-readme                ]   \ud83d\udcac  ::debug::Destination /tmp/800ae9aa-96bc-4940-af6c-5e7823acfd6c\n[CI/linux beta (default features)    ]   \ud83d\udcac  ::debug::using toolchain from input: beta\n[CI/CI self-check                    ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[CI/linux beta (default features)    ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/linux beta (default features)    ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/linux beta (default features)    ]   \ud83d\udcac  ::debug::Destination /tmp/4a4494fc-4236-4e76-b180-9713bb9bf80c\n[CI/CI self-check                    ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/CI self-check                    ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/CI self-check                    ]   \ud83d\udcac  ::debug::Destination /tmp/c7de705a-806f-4121-b610-244c9ab4d6fc\n[CI/Miri test                        ]   \ud83d\udcac  ::debug::download complete\n[CI/Miri test                        ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/ed9d5e10-3766-4772-80df-fe0b7a3720c8\n[CI/Miri test                        ]   | [command]/tmp/ed9d5e10-3766-4772-80df-fe0b7a3720c8 --default-toolchain none -y\n[CI/linux stable (default features)  ]   \ud83d\udcac  ::debug::download complete\n[CI/linux stable (default features)  ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/f0cdde75-5907-4f0d-a5ad-d9599c8145dc\n[CI/linux stable (default features)  ]   | [command]/tmp/f0cdde75-5907-4f0d-a5ad-d9599c8145dc --default-toolchain none -y\n[CI/Miri test                        ]   | info: downloading installer\n[CI/linux stable (default features)  ]   | info: downloading installer\n[CI/Check sync-readme                ]   \ud83d\udcac  ::debug::download complete\n[CI/Check sync-readme                ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/800ae9aa-96bc-4940-af6c-5e7823acfd6c\n[CI/Check sync-readme                ]   | [command]/tmp/800ae9aa-96bc-4940-af6c-5e7823acfd6c --default-toolchain none -y\n[CI/Check sync-readme                ]   | info: downloading installer\n[CI/CI self-check                    ]   \ud83d\udcac  ::debug::download complete\n[CI/CI self-check                    ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/c7de705a-806f-4121-b610-244c9ab4d6fc\n[CI/CI self-check                    ]   | [command]/tmp/c7de705a-806f-4121-b610-244c9ab4d6fc --default-toolchain none -y\n[CI/linux nightly (all features)     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf] user=0 workdir=\n[CI/Miri test                        ]   | info: profile set to 'default'\n[CI/Miri test                        ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Miri test                        ]   | info: skipping toolchain installation\n[CI/Miri test                        ]   | \n[CI/Miri test                        ]   | \n[CI/Miri test                        ]   | Rust is installed now. Great!\n[CI/Miri test                        ]   | \n[CI/Miri test                        ]   | To get started you may need to restart your current shell.\n[CI/Miri test                        ]   | This would reload your PATH environment variable to include\n[CI/Miri test                        ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Miri test                        ]   | \n[CI/Miri test                        ]   | To configure your current shell, run:\n[CI/Miri test                        ]   | source \"$HOME/.cargo/env\"\n[CI/linux beta (default features)    ]   \ud83d\udcac  ::debug::download complete\n[CI/linux beta (default features)    ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/4a4494fc-4236-4e76-b180-9713bb9bf80c\n[CI/linux beta (default features)    ]   | [command]/tmp/4a4494fc-4236-4e76-b180-9713bb9bf80c --default-toolchain none -y\n[CI/CI self-check                    ]   | info: downloading installer\n[CI/Miri test                        ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/Miri test                        ]   | Default host: x86_64-unknown-linux-gnu\n[CI/Miri test                        ]   | rustup home:  /home/runneradmin/.rustup\n[CI/Miri test                        ]   | \n[CI/Miri test                        ]   | no active toolchain\n[CI/Miri test                        ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Miri test                        ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Miri test                        ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Miri test                        ]   | Installed rustup 1.26.0 support profiles\n[CI/Miri test                        ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Miri test                        ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Miri test                        ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/linux beta (default features)    ]   | info: downloading installer\n[CI/Miri test                        ]   | Installed rustup 1.26.0 support components\n[CI/Miri test                        ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[CI/Check sync-readme                ]   | info: profile set to 'default'\n[CI/Check sync-readme                ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Check sync-readme                ]   | info: skipping toolchain installation\n[CI/Check sync-readme                ]   | \n[CI/Check sync-readme                ]   | \n[CI/Check sync-readme                ]   | Rust is installed now. Great!\n[CI/Check sync-readme                ]   | \n[CI/Check sync-readme                ]   | To get started you may need to restart your current shell.\n[CI/Check sync-readme                ]   | This would reload your PATH environment variable to include\n[CI/Check sync-readme                ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Check sync-readme                ]   | \n[CI/Check sync-readme                ]   | To configure your current shell, run:\n[CI/Check sync-readme                ]   | source \"$HOME/.cargo/env\"\n[CI/Miri test                        ]   | info: profile set to 'minimal'\n[CI/Miri test                        ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install nightly --component miri --allow-downgrade\n[CI/Miri test                        ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Check sync-readme                ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/Check sync-readme                ]   | Default host: x86_64-unknown-linux-gnu\n[CI/Check sync-readme                ]   | rustup home:  /home/runneradmin/.rustup\n[CI/Check sync-readme                ]   | \n[CI/Check sync-readme                ]   | no active toolchain\n[CI/Check sync-readme                ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Check sync-readme                ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Check sync-readme                ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Check sync-readme                ]   | Installed rustup 1.26.0 support profiles\n[CI/Check sync-readme                ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[CI/Check sync-readme                ]   | info: profile set to 'minimal'\n[CI/Check sync-readme                ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[CI/Check sync-readme                ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/linux stable (default features)  ]   | info: profile set to 'default'\n[CI/linux stable (default features)  ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/linux stable (default features)  ]   | info: skipping toolchain installation\n[CI/linux stable (default features)  ]   | \n[CI/linux stable (default features)  ]   | \n[CI/linux stable (default features)  ]   | Rust is installed now. Great!\n[CI/linux stable (default features)  ]   | \n[CI/linux stable (default features)  ]   | To get started you may need to restart your current shell.\n[CI/linux stable (default features)  ]   | This would reload your PATH environment variable to include\n[CI/linux stable (default features)  ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/linux stable (default features)  ]   | \n[CI/linux stable (default features)  ]   | To configure your current shell, run:\n[CI/linux stable (default features)  ]   | source \"$HOME/.cargo/env\"\n[CI/linux stable (default features)  ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/linux stable (default features)  ]   | Default host: x86_64-unknown-linux-gnu\n[CI/linux stable (default features)  ]   | rustup home:  /home/runneradmin/.rustup\n[CI/linux stable (default features)  ]   | \n[CI/linux stable (default features)  ]   | no active toolchain\n[CI/Miri test                        ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Miri test                        ]   | info: downloading component 'cargo'\n[CI/linux stable (default features)  ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/linux stable (default features)  ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/linux stable (default features)  ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/linux stable (default features)  ]   | Installed rustup 1.26.0 support profiles\n[CI/linux stable (default features)  ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[CI/linux stable (default features)  ]   | info: profile set to 'minimal'\n[CI/linux stable (default features)  ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[CI/linux stable (default features)  ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/Check sync-readme                ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/Check sync-readme                ]   | info: downloading component 'cargo'\n[CI/linux stable (default features)  ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/linux stable (default features)  ]   | info: downloading component 'cargo'\n[CI/Check sync-readme                ]   | info: downloading component 'rust-std'\n[CI/linux stable (default features)  ]   | info: downloading component 'rust-std'\n[CI/rustfmt check                    ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/linux stable (with-bytes)        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf] user=0 workdir=\n[CI/mega-linter                      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf] user=0 workdir=\n[CI/linux stable (default features)  ]   | info: downloading component 'rustc'\n[CI/Check sync-readme                ]   | info: downloading component 'rustc'\n[CI/linux beta (default features)    ]   | info: profile set to 'default'\n[CI/linux beta (default features)    ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/linux beta (default features)    ]   | info: skipping toolchain installation\n[CI/linux beta (default features)    ]   | \n[CI/linux beta (default features)    ]   | \n[CI/linux beta (default features)    ]   | Rust is installed now. Great!\n[CI/linux beta (default features)    ]   | \n[CI/linux beta (default features)    ]   | To get started you may need to restart your current shell.\n[CI/linux beta (default features)    ]   | This would reload your PATH environment variable to include\n[CI/linux beta (default features)    ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/linux beta (default features)    ]   | \n[CI/linux beta (default features)    ]   | To configure your current shell, run:\n[CI/linux beta (default features)    ]   | source \"$HOME/.cargo/env\"\n[CI/linux beta (default features)    ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/linux beta (default features)    ]   | Default host: x86_64-unknown-linux-gnu\n[CI/linux beta (default features)    ]   | rustup home:  /home/runneradmin/.rustup\n[CI/linux beta (default features)    ]   | \n[CI/linux beta (default features)    ]   | no active toolchain\n[CI/linux beta (default features)    ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/linux beta (default features)    ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/linux beta (default features)    ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/linux beta (default features)    ]   | Installed rustup 1.26.0 support profiles\n[CI/linux beta (default features)    ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[CI/linux beta (default features)    ]   | info: profile set to 'minimal'\n[CI/linux beta (default features)    ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install beta\n[CI/linux beta (default features)    ]   | info: syncing channel updates for 'beta-x86_64-unknown-linux-gnu'\n[CI/Miri test                        ]   | info: downloading component 'miri'\n[CI/linux beta (default features)    ]   | info: latest update on 2023-05-30, rust version 1.71.0-beta.1 (eff24c06d 2023-05-29)\n[CI/linux beta (default features)    ]   | info: downloading component 'cargo'\n[CI/Miri test                        ]   | info: downloading component 'rust-std'\n[CI/linux beta (default features)    ]   | info: downloading component 'rust-std'\n[CI/CI self-check                    ]   | info: profile set to 'default'\n[CI/CI self-check                    ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/CI self-check                    ]   | info: skipping toolchain installation\n[CI/CI self-check                    ]   | \n[CI/CI self-check                    ]   | \n[CI/CI self-check                    ]   | Rust is installed now. Great!\n[CI/CI self-check                    ]   | \n[CI/CI self-check                    ]   | To get started you may need to restart your current shell.\n[CI/CI self-check                    ]   | This would reload your PATH environment variable to include\n[CI/CI self-check                    ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/CI self-check                    ]   | \n[CI/CI self-check                    ]   | To configure your current shell, run:\n[CI/CI self-check                    ]   | source \"$HOME/.cargo/env\"\n[CI/CI self-check                    ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/CI self-check                    ]   | Default host: x86_64-unknown-linux-gnu\n[CI/CI self-check                    ]   | rustup home:  /home/runneradmin/.rustup\n[CI/CI self-check                    ]   | \n[CI/CI self-check                    ]   | no active toolchain\n[CI/CI self-check                    ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/CI self-check                    ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/CI self-check                    ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/CI self-check                    ]   | Installed rustup 1.26.0 support profiles\n[CI/CI self-check                    ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[CI/linux nightly (all features)     ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/windows stable (default features)]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/CI self-check                    ]   | info: profile set to 'minimal'\n[CI/CI self-check                    ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[CI/CI self-check                    ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/linux stable (default features)  ]   | info: installing component 'cargo'\n[CI/linux stable (with-bytes)        ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/CI self-check                    ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/CI self-check                    ]   | info: downloading component 'cargo'\n[CI/mega-linter                      ]   \u2601  git clone 'https://github.com/megalinter/megalinter' # ref=v5\n[CI/linux nightly (all features)     ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[CI/CI self-check                    ]   | info: downloading component 'rust-std'\n[CI/rustfmt check                    ]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[CI/rustfmt check                    ]   \u2705  Success - Main Cache protobuf\n[CI/linux beta (default features)    ]   | info: downloading component 'rustc'\n[CI/linux nightly (all features)     ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/Check sync-readme                ]   | info: installing component 'cargo'\n[CI/Miri test                        ]   | info: downloading component 'rustc'\n[CI/linux stable (default features)  ]   | info: installing component 'rust-std'\n[CI/windows stable (default features)]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[CI/CI self-check                    ]   | info: downloading component 'rustc'\n[CI/linux beta (default features)    ]   | info: installing component 'cargo'\n[CI/Check sync-readme                ]   | info: installing component 'rust-std'\n[CI/linux stable (with-bytes)        ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[CI/rustfmt check                    ]   \u2699  ::set-output:: cache-hit=false\n[CI/Miri test                        ]   | info: installing component 'cargo'\n[CI/CI self-check                    ]   | info: installing component 'cargo'\n[CI/linux beta (default features)    ]   | info: installing component 'rust-std'\n[CI/rustfmt check                    ] \u2b50 Run Main Install protobuf\n[CI/linux stable (default features)  ]   | info: installing component 'rustc'\n[CI/Miri test                        ]   | info: installing component 'miri'\n[CI/Miri test                        ]   | info: installing component 'rust-std'\n[CI/Check sync-readme                ]   | info: installing component 'rustc'\n[CI/CI self-check                    ]   | info: installing component 'rust-std'\n[CI/linux beta (default features)    ]   | info: installing component 'rustc'\n[CI/rustfmt check                    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2.sh] user= workdir=\n[CI/CI self-check                    ]   | info: installing component 'rustc'\n[CI/Miri test                        ]   | info: installing component 'rustc'\n[CI/linux stable (default features)  ]   | \n[CI/linux stable (default features)  ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/linux stable (default features)  ]   | \n[CI/linux stable (default features)  ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/linux stable (default features)  ]   | info: checking for self-update\n[CI/linux stable (default features)  ]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[CI/linux stable (default features)  ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/linux stable (default features)  ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf' set to 'stable-x86_64-unknown-linux-gnu'\n[CI/linux stable (default features)  ]   | \n[CI/linux stable (default features)  ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/linux stable (default features)  ]   | \n[CI/linux stable (default features)  ]   \u2753  ::group::Gathering installed versions\n[CI/linux stable (default features)  ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/linux stable (default features)  ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/linux stable (default features)  ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[CI/linux stable (default features)  ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[CI/linux stable (default features)  ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/linux stable (default features)  ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[CI/linux stable (default features)  ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[CI/linux stable (default features)  ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/linux stable (default features)  ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/linux stable (default features)  ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/linux stable (default features)  ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[CI/linux stable (default features)  ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/linux stable (default features)  ]   \u2753  ::endgroup::\n[CI/linux stable (default features)  ]   \u2705  Success - Main Install toolchain\n[CI/Check sync-readme                ]   | \n[CI/Check sync-readme                ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Check sync-readme                ]   | \n[CI/Check sync-readme                ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Check sync-readme                ]   | info: checking for self-update\n[CI/Check sync-readme                ]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[CI/Check sync-readme                ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/Check sync-readme                ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf' set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Check sync-readme                ]   | \n[CI/Check sync-readme                ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Check sync-readme                ]   | \n[CI/Check sync-readme                ]   \u2753  ::group::Gathering installed versions\n[CI/Check sync-readme                ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/Check sync-readme                ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Check sync-readme                ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[CI/Check sync-readme                ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[CI/Check sync-readme                ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/Check sync-readme                ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[CI/Check sync-readme                ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[CI/Check sync-readme                ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Check sync-readme                ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Check sync-readme                ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/linux beta (default features)    ]   | \n[CI/Check sync-readme                ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[CI/Check sync-readme                ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/Check sync-readme                ]   \u2753  ::endgroup::\n[CI/linux beta (default features)    ]   |   beta-x86_64-unknown-linux-gnu installed - rustc 1.71.0-beta.1 (eff24c06d 2023-05-29)\n[CI/linux beta (default features)    ]   | \n[CI/Check sync-readme                ]   \u2705  Success - Main Install toolchain\n[CI/linux beta (default features)    ]   | info: default toolchain set to 'beta-x86_64-unknown-linux-gnu'\n[CI/linux beta (default features)    ]   | info: checking for self-update\n[CI/linux beta (default features)    ]   | [command]/home/runneradmin/.cargo/bin/rustup override set beta\n[CI/linux beta (default features)    ]   | info: using existing install for 'beta-x86_64-unknown-linux-gnu'\n[CI/linux beta (default features)    ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf' set to 'beta-x86_64-unknown-linux-gnu'\n[CI/linux beta (default features)    ]   | \n[CI/linux beta (default features)    ]   |   beta-x86_64-unknown-linux-gnu unchanged - rustc 1.71.0-beta.1 (eff24c06d 2023-05-29)\n[CI/linux beta (default features)    ]   | \n[CI/linux beta (default features)    ]   \u2753  ::group::Gathering installed versions\n[CI/linux beta (default features)    ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/linux beta (default features)    ]   | rustc 1.71.0-beta.1 (eff24c06d 2023-05-29)\n[CI/linux beta (default features)    ]   \u2699  ::set-output:: rustc=1.71.0-beta.1 (eff24c06d 2023-05-29)\n[CI/linux beta (default features)    ]   \u2699  ::set-output:: rustc_hash=eff24c06d\n[CI/linux beta (default features)    ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/linux beta (default features)    ]   | cargo 1.71.0-beta.1 (64fb38c97 2023-05-23)\n[CI/linux beta (default features)    ]   \u2699  ::set-output:: cargo=1.71.0-beta.1 (64fb38c97 2023-05-23)\n[CI/linux beta (default features)    ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/linux beta (default features)    ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/linux beta (default features)    ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/linux beta (default features)    ]   | info: The currently active `rustc` version is `rustc 1.71.0-beta.1 (eff24c06d 2023-05-29)`\n[CI/linux beta (default features)    ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/linux beta (default features)    ]   \u2753  ::endgroup::\n[CI/linux beta (default features)    ]   \u2705  Success - Main Install toolchain\n[CI/linux stable (default features)  ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/linux stable (default features)  ] \u2b50 Run Main Cache protobuf\n[CI/CI self-check                    ]   | \n[CI/CI self-check                    ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/CI self-check                    ]   | \n[CI/CI self-check                    ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/CI self-check                    ]   | info: checking for self-update\n[CI/linux stable (default features)  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[CI/CI self-check                    ]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[CI/CI self-check                    ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/CI self-check                    ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf' set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Check sync-readme                ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/CI self-check                    ]   | \n[CI/CI self-check                    ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/CI self-check                    ]   | \n[CI/CI self-check                    ]   \u2753  ::group::Gathering installed versions\n[CI/CI self-check                    ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/CI self-check                    ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/CI self-check                    ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[CI/CI self-check                    ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[CI/CI self-check                    ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/CI self-check                    ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[CI/CI self-check                    ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[CI/CI self-check                    ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/CI self-check                    ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/CI self-check                    ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Check sync-readme                ] \u2b50 Run Main install cargo sync-readme\n[CI/CI self-check                    ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[CI/CI self-check                    ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/CI self-check                    ]   \u2753  ::endgroup::\n[CI/linux beta (default features)    ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/CI self-check                    ]   \u2705  Success - Main Install toolchain\n[CI/linux beta (default features)    ] \u2b50 Run Main Cache protobuf\n[CI/linux stable (default features)  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[CI/linux beta (default features)    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[CI/Check sync-readme                ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2.sh] user= workdir=\n[CI/Miri test                        ]   | \n[CI/Miri test                        ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Miri test                        ]   | \n[CI/Miri test                        ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Miri test                        ]   | info: checking for self-update\n[CI/Miri test                        ]   | [command]/home/runneradmin/.cargo/bin/rustup override set nightly\n[CI/Miri test                        ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Miri test                        ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf' set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/CI self-check                    ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/linux beta (default features)    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[CI/Miri test                        ]   | \n[CI/Miri test                        ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Miri test                        ]   | \n[CI/Miri test                        ]   \u2753  ::group::Gathering installed versions\n[CI/Miri test                        ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/CI self-check                    ] \u2b50 Run Main The check\n[CI/Miri test                        ]   | rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Miri test                        ]   \u2699  ::set-output:: rustc=1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Miri test                        ]   \u2699  ::set-output:: rustc_hash=498553fc0\n[CI/Miri test                        ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/Miri test                        ]   | cargo 1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/Miri test                        ]   \u2699  ::set-output:: cargo=1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/Miri test                        ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Miri test                        ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Miri test                        ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Miri test                        ]   | info: The currently active `rustc` version is `rustc 1.72.0-nightly (498553fc0 2023-05-29)`\n[CI/Miri test                        ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/Miri test                        ]   \u2753  ::endgroup::\n[CI/Miri test                        ]   \u2705  Success - Main Install toolchain\n[CI/CI self-check                    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2.sh] user= workdir=\n[CI/Miri test                        ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Miri test                        ] \u2b50 Run Main cargo-miri-setup\n[CI/Miri test                        ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[CI/Miri test                        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[CI/linux stable (default features)  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[CI/Miri test                        ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[CI/rustfmt check                    ]   | + test -n 3.19.4\n[CI/rustfmt check                    ]   | + test -n /var/run/act/workflow/pathcmd.txt\n[CI/rustfmt check                    ]   | + test -n /var/run/act/workflow/envs.txt\n[CI/rustfmt check                    ]   | + path_tr /home/runneradmin/pb/bin\n[CI/rustfmt check                    ]   | + uname\n[CI/rustfmt check                    ]   | + echo /home/runneradmin/pb/bin\n[CI/rustfmt check                    ]   | + echo /home/runneradmin/pb/bin\n[CI/rustfmt check                    ]   | + path_tr /home/runneradmin/pb/lib\n[CI/rustfmt check                    ]   | + uname\n[CI/linux beta (default features)    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[CI/rustfmt check                    ]   | + echo /home/runneradmin/pb/lib\n[CI/rustfmt check                    ]   | + echo LD_LIBRARY_PATH=/home/runneradmin/pb/lib\n[CI/rustfmt check                    ]   | + path_tr /home/runneradmin/pb/lib/pkgconfig\n[CI/rustfmt check                    ]   | + uname\n[CI/Check sync-readme                ]   |     Updating crates.io index\n[CI/rustfmt check                    ]   | + echo /home/runneradmin/pb/lib/pkgconfig\n[CI/rustfmt check                    ]   | + echo PKG_CONFIG_PATH=/home/runneradmin/pb/lib/pkgconfig\n[CI/rustfmt check                    ]   | + path_tr /home/runneradmin/pb\n[CI/rustfmt check                    ]   | + uname\n[CI/rustfmt check                    ]   | + echo /home/runneradmin/pb\n[CI/rustfmt check                    ]   | + echo PROTOBUF_PREFIX=/home/runneradmin/pb\n[CI/rustfmt check                    ]   | + test -e /home/runneradmin/pb/bin/protoc -o -e /home/runneradmin/pb/bin/protoc.exe\n[CI/rustfmt check                    ]   | + test -e /home/runneradmin/pb\n[CI/rustfmt check                    ]   | + cd\n[CI/rustfmt check                    ]   | + rm -rf pb\n[CI/rustfmt check                    ]   | + mkdir pb\n[CI/rustfmt check                    ]   | + uname\n[CI/rustfmt check                    ]   | + basename=protobuf-cpp-3.19.4\n[CI/rustfmt check                    ]   | + curl -sL https://github.com/protocolbuffers/protobuf/releases/download/v3.19.4/protobuf-cpp-3.19.4.tar.gz\n[CI/rustfmt check                    ]   | + tar zx\n[CI/CI self-check                    ]   |     Updating crates.io index\n[CI/rustfmt check                    ]   | + cd protobuf-3.19.4\n[CI/rustfmt check                    ]   | + ./configure --prefix=/home/runneradmin/pb\n[CI/rustfmt check                    ]   | checking whether to enable maintainer-specific portions of Makefiles... yes\n[CI/rustfmt check                    ]   | checking build system type... x86_64-pc-linux-gnu\n[CI/rustfmt check                    ]   | checking host system type... x86_64-pc-linux-gnu\n[CI/rustfmt check                    ]   | checking target system type... x86_64-pc-linux-gnu\n[CI/rustfmt check                    ]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/rustfmt check                    ]   | checking whether build environment is sane... yes\n[CI/rustfmt check                    ]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/rustfmt check                    ]   | checking for gawk... gawk\n[CI/rustfmt check                    ]   | checking whether make sets $(MAKE)... yes\n[CI/linux beta (default features)    ]   \ud83d\udcac  ::debug::Resolved Keys:\n[CI/linux beta (default features)    ]   \ud83d\udcac  ::debug::[\"pb-linux-3.19.4\"]\n[CI/linux beta (default features)    ]   \ud83d\udcac  ::debug::Checking zstd --version\n[CI/linux stable (default features)  ]   \ud83d\udcac  ::debug::Resolved Keys:\n[CI/linux stable (default features)  ]   \ud83d\udcac  ::debug::[\"pb-linux-3.19.4\"]\n[CI/linux stable (default features)  ]   \ud83d\udcac  ::debug::Checking zstd --version\n[CI/rustfmt check                    ]   | checking whether make supports nested variables... yes\n[CI/linux beta (default features)    ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[CI/linux beta (default features)    ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/Miri test                        ]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[CI/linux stable (default features)  ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[CI/Miri test                        ]   | [command]/home/runneradmin/.cargo/bin/cargo miri setup\n[CI/linux stable (default features)  ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/rustfmt check                    ]   | checking whether UID '1012' is supported by ustar format... yes\n[CI/rustfmt check                    ]   | checking whether GID '1000' is supported by ustar format... yes\n[CI/rustfmt check                    ]   | checking how to create a ustar tar archive... gnutar\n[CI/rustfmt check                    ]   | checking whether make supports nested variables... (cached) yes\n[CI/rustfmt check                    ]   | checking for gcc... gcc\n[CI/Miri test                        ]   | Running `\"rustup\" \"component\" \"add\" \"rust-src\"` to install the `rust-src` component for the selected toolchain.\n[CI/Miri test                        ]   | info: downloading component 'rust-src'\n[CI/rustfmt check                    ]   | checking whether the C compiler works... yes\n[CI/rustfmt check                    ]   | checking for C compiler default output file name... a.out\n[CI/rustfmt check                    ]   | checking for suffix of executables... \n[CI/rustfmt check                    ]   | checking whether we are cross compiling... no\n[CI/rustfmt check                    ]   | checking for suffix of object files... o\n[CI/rustfmt check                    ]   | checking whether the compiler supports GNU C... yes\n[CI/rustfmt check                    ]   | checking whether gcc accepts -g... yes\n[CI/rustfmt check                    ]   | checking for gcc option to enable C11 features... none needed\n[CI/Miri test                        ]   | info: installing component 'rust-src'\n[CI/rustfmt check                    ]   | checking whether gcc understands -c and -o together... yes\n[CI/rustfmt check                    ]   | checking whether make supports the include directive... yes (GNU style)\n[CI/rustfmt check                    ]   | checking dependency style of gcc... gcc3\n[CI/rustfmt check                    ]   | checking for g++... g++\n[CI/rustfmt check                    ]   | checking whether the compiler supports GNU C++... yes\n[CI/rustfmt check                    ]   | checking whether g++ accepts -g... yes\n[CI/rustfmt check                    ]   | checking for g++ option to enable C++11 features... none needed\n[CI/rustfmt check                    ]   | checking dependency style of g++... gcc3\n[CI/Miri test                        ]   | Preparing a sysroot for Miri (target: x86_64-unknown-linux-gnu)...\n[CI/rustfmt check                    ]   | checking how to run the C preprocessor... gcc -E\n[CI/rustfmt check                    ]   | checking for gcc... gcc\n[CI/Miri test                        ]   |     Updating crates.io index\n[CI/rustfmt check                    ]   | checking whether the compiler supports GNU C... (cached) yes\n[CI/rustfmt check                    ]   | checking whether gcc accepts -g... yes\n[CI/rustfmt check                    ]   | checking for gcc option to enable C11 features... (cached) none needed\n[CI/rustfmt check                    ]   | checking whether gcc understands -c and -o together... (cached) yes\n[CI/rustfmt check                    ]   | checking dependency style of gcc... (cached) gcc3\n[CI/rustfmt check                    ]   | checking how to run the C preprocessor... gcc -E\n[CI/rustfmt check                    ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/Miri test                        ]   |  Downloading crates ...\n[CI/rustfmt check                    ]   | checking for g++... g++\n[CI/rustfmt check                    ]   | checking whether the compiler supports GNU C++... (cached) yes\n[CI/rustfmt check                    ]   | checking whether g++ accepts -g... yes\n[CI/rustfmt check                    ]   | checking for g++ option to enable C++11 features... (cached) none needed\n[CI/rustfmt check                    ]   | checking dependency style of g++... (cached) gcc3\n[CI/linux beta (default features)    ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/rustfmt check                    ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/linux stable (default features)  ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/rustfmt check                    ]   | checking for stdio.h... yes\n[CI/rustfmt check                    ]   | checking for stdlib.h... yes\n[CI/rustfmt check                    ]   | checking for string.h... yes\n[CI/rustfmt check                    ]   | checking for inttypes.h... yes\n[CI/rustfmt check                    ]   | checking for stdint.h... yes\n[CI/rustfmt check                    ]   | checking for strings.h... yes\n[CI/rustfmt check                    ]   | checking for sys/stat.h... yes\n[CI/rustfmt check                    ]   | checking for sys/types.h... yes\n[CI/rustfmt check                    ]   | checking for unistd.h... yes\n[CI/rustfmt check                    ]   | checking for wchar.h... yes\n[CI/rustfmt check                    ]   | checking for minix/config.h... no\n[CI/rustfmt check                    ]   | checking whether it is safe to define __EXTENSIONS__... yes\n[CI/rustfmt check                    ]   | checking whether _XOPEN_SOURCE should be defined... no\n[CI/rustfmt check                    ]   | checking for ar... ar\n[CI/Miri test                        ]   |   Downloaded memchr v2.5.0\n[CI/Miri test                        ]   |   Downloaded unicode-width v0.1.10\n[CI/rustfmt check                    ]   | checking the archiver (ar) interface... ar\n[CI/Miri test                        ]   |   Downloaded hashbrown v0.13.1\n[CI/rustfmt check                    ]   | checking for gcc... gcc\n[CI/Miri test                        ]   |   Downloaded rustc-demangle v0.1.21\n[CI/Miri test                        ]   |   Downloaded cfg-if v1.0.0\n[CI/Miri test                        ]   |   Downloaded cc v1.0.77\n[CI/Miri test                        ]   |   Downloaded miniz_oxide v0.6.2\n[CI/Miri test                        ]   |   Downloaded getopts v0.2.21\n[CI/Miri test                        ]   |   Downloaded adler v1.0.2\n[CI/Miri test                        ]   |   Downloaded addr2line v0.19.0\n[CI/Miri test                        ]   |   Downloaded object v0.30.1\n[CI/Miri test                        ]   |   Downloaded compiler_builtins v0.1.92\n[CI/Miri test                        ]   |   Downloaded libc v0.2.143\n[CI/Miri test                        ]   |   Downloaded gimli v0.27.2\n[CI/Miri test                        ]   |    Compiling compiler_builtins v0.1.92\n[CI/Miri test                        ]   |     Checking core v0.0.0 (/home/runneradmin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core)\n[CI/Miri test                        ]   |    Compiling libc v0.2.143\n[CI/Miri test                        ]   |    Compiling cc v1.0.77\n[CI/Miri test                        ]   |    Compiling memchr v2.5.0\n[CI/Miri test                        ]   |    Compiling std v0.0.0 (/home/runneradmin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std)\n[CI/rustfmt check                    ]   | checking whether the compiler supports GNU Objective C... no\n[CI/rustfmt check                    ]   | checking whether gcc accepts -g... no\n[CI/rustfmt check                    ]   | checking dependency style of gcc... gcc3\n[CI/rustfmt check                    ]   | checking C++ compiler flags...... use default: -O2  -g -std=c++11 -DNDEBUG\n[CI/Miri test                        ]   |    Compiling unwind v0.0.0 (/home/runneradmin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/unwind)\n[CI/linux beta (default features)    ]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[CI/linux stable (default features)  ]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[CI/linux beta (default features)    ]   \u2705  Success - Main Cache protobuf\n[CI/linux stable (default features)  ]   \u2705  Success - Main Cache protobuf\n[CI/rustfmt check                    ]   | checking for g++ options needed to detect all undeclared functions... none needed\n[CI/rustfmt check                    ]   | checking whether __SUNPRO_CC is declared... no\n[CI/rustfmt check                    ]   | checking how to print strings... printf\n[CI/rustfmt check                    ]   | checking for a sed that does not truncate output... /usr/bin/sed\n[CI/rustfmt check                    ]   | checking for grep that handles long lines and -e... /usr/bin/grep\n[CI/rustfmt check                    ]   | checking for egrep... /usr/bin/grep -E\n[CI/rustfmt check                    ]   | checking for fgrep... /usr/bin/grep -F\n[CI/rustfmt check                    ]   | checking for ld used by gcc... /usr/bin/ld\n[CI/rustfmt check                    ]   | checking if the linker (/usr/bin/ld) is GNU ld... yes\n[CI/rustfmt check                    ]   | checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\n[CI/rustfmt check                    ]   | checking the name lister (/usr/bin/nm -B) interface... BSD nm\n[CI/rustfmt check                    ]   | checking whether ln -s works... yes\n[CI/rustfmt check                    ]   | checking the maximum length of command line arguments... 1572864\n[CI/rustfmt check                    ]   | checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\n[CI/rustfmt check                    ]   | checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\n[CI/rustfmt check                    ]   | checking for /usr/bin/ld option to reload object files... -r\n[CI/rustfmt check                    ]   | checking for objdump... objdump\n[CI/rustfmt check                    ]   | checking how to recognize dependent libraries... pass_all\n[CI/rustfmt check                    ]   | checking for dlltool... no\n[CI/rustfmt check                    ]   | checking how to associate runtime and link libraries... printf %s\\n\n[CI/rustfmt check                    ]   | checking for archiver @FILE support... @\n[CI/rustfmt check                    ]   | checking for strip... strip\n[CI/rustfmt check                    ]   | checking for ranlib... ranlib\n[CI/rustfmt check                    ]   | checking command to parse /usr/bin/nm -B output from gcc object... ok\n[CI/rustfmt check                    ]   | checking for sysroot... no\n[CI/rustfmt check                    ]   | checking for a working dd... /usr/bin/dd\n[CI/rustfmt check                    ]   | checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1\n[CI/linux beta (default features)    ]   \u2699  ::set-output:: cache-hit=false\n[CI/linux stable (default features)  ]   \u2699  ::set-output:: cache-hit=false\n[CI/rustfmt check                    ]   | checking for mt... no\n[CI/rustfmt check                    ]   | checking if : is a manifest tool... no\n[CI/rustfmt check                    ]   | checking for dlfcn.h... yes\n[CI/rustfmt check                    ]   | checking for objdir... .libs\n[CI/rustfmt check                    ]   | checking if gcc supports -fno-rtti -fno-exceptions... no\n[CI/rustfmt check                    ]   | checking for gcc option to produce PIC... -fPIC -DPIC\n[CI/rustfmt check                    ]   | checking if gcc PIC flag -fPIC -DPIC works... yes\n[CI/linux beta (default features)    ] \u2b50 Run Main Install protobuf\n[CI/linux stable (default features)  ] \u2b50 Run Main Install protobuf\n[CI/rustfmt check                    ]   | checking if gcc static flag -static works... yes\n[CI/rustfmt check                    ]   | checking if gcc supports -c -o file.o... yes\n[CI/rustfmt check                    ]   | checking if gcc supports -c -o file.o... (cached) yes\n[CI/rustfmt check                    ]   | checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/rustfmt check                    ]   | checking whether -lc should be explicitly linked in... no\n[CI/rustfmt check                    ]   | checking dynamic linker characteristics... GNU/Linux ld.so\n[CI/rustfmt check                    ]   | checking how to hardcode library paths into programs... immediate\n[CI/rustfmt check                    ]   | checking whether stripping libraries is possible... yes\n[CI/rustfmt check                    ]   | checking if libtool supports shared libraries... yes\n[CI/rustfmt check                    ]   | checking whether to build shared libraries... yes\n[CI/rustfmt check                    ]   | checking whether to build static libraries... yes\n[CI/rustfmt check                    ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/rustfmt check                    ]   | checking for ld used by g++... /usr/bin/ld -m elf_x86_64\n[CI/rustfmt check                    ]   | checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes\n[CI/rustfmt check                    ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/rustfmt check                    ]   | checking for g++ option to produce PIC... -fPIC -DPIC\n[CI/rustfmt check                    ]   | checking if g++ PIC flag -fPIC -DPIC works... yes\n[CI/linux stable (default features)  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[CI/linux beta (default features)    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[CI/rustfmt check                    ]   | checking if g++ static flag -static works... yes\n[CI/rustfmt check                    ]   | checking if g++ supports -c -o file.o... yes\n[CI/rustfmt check                    ]   | checking if g++ supports -c -o file.o... (cached) yes\n[CI/rustfmt check                    ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/rustfmt check                    ]   | checking dynamic linker characteristics... (cached) GNU/Linux ld.so\n[CI/rustfmt check                    ]   | checking how to hardcode library paths into programs... immediate\n[CI/rustfmt check                    ]   | checking whether the linker supports version scripts... yes\n[CI/rustfmt check                    ]   | checking for egrep... (cached) /usr/bin/grep -E\n[CI/rustfmt check                    ]   | checking for fcntl.h... yes\n[CI/rustfmt check                    ]   | checking for inttypes.h... (cached) yes\n[CI/rustfmt check                    ]   | checking for limits.h... yes\n[CI/rustfmt check                    ]   | checking for stdlib.h... (cached) yes\n[CI/rustfmt check                    ]   | checking for unistd.h... (cached) yes\n[CI/rustfmt check                    ]   | checking for working memcmp... yes\n[CI/rustfmt check                    ]   | checking for working strtod... yes\n[CI/rustfmt check                    ]   | checking for ftruncate... yes\n[CI/rustfmt check                    ]   | checking for memset... yes\n[CI/rustfmt check                    ]   | checking for mkdir... yes\n[CI/rustfmt check                    ]   | checking for strchr... yes\n[CI/rustfmt check                    ]   | checking for strerror... yes\n[CI/rustfmt check                    ]   | checking for strtol... yes\n[CI/rustfmt check                    ]   | checking zlib version... ok (1.2.0.4 or later)\n[CI/rustfmt check                    ]   | checking for library containing zlibVersion... -lz\n[CI/rustfmt check                    ]   | checking whether g++ supports C++11 features by default... yes\n[CI/Miri test                        ]   |     Checking rustc-std-workspace-core v1.99.0 (/home/runneradmin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/rustc-std-workspace-core)\n[CI/rustfmt check                    ]   | checking whether -latomic is needed... no\n[CI/rustfmt check                    ]   | checking whether gcc is Clang... no\n[CI/rustfmt check                    ]   | checking whether pthreads work with \"-pthread\" and \"-lpthread\"... yes\n[CI/Miri test                        ]   |     Checking alloc v0.0.0 (/home/runneradmin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc)\n[CI/Miri test                        ]   |     Checking cfg-if v1.0.0\n[CI/Miri test                        ]   |     Checking adler v1.0.2\n[CI/Miri test                        ]   |     Checking rustc-demangle v0.1.21\n[CI/rustfmt check                    ]   | checking for joinable pthread attribute... PTHREAD_CREATE_JOINABLE\n[CI/rustfmt check                    ]   | checking whether more special flags are required for pthreads... no\n[CI/rustfmt check                    ]   | checking for PTHREAD_PRIO_INHERIT... yes\n[CI/rustfmt check                    ]   | checking the location of hash_map... <unordered_map>\n[CI/rustfmt check                    ]   | checking whether -llog is needed... no\n[CI/rustfmt check                    ]   | checking that generated files are newer than configure... done\n[CI/rustfmt check                    ]   | configure: creating ./config.status\n[CI/Miri test                        ]   |     Checking rustc-std-workspace-alloc v1.99.0 (/home/runneradmin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/rustc-std-workspace-alloc)\n[CI/Miri test                        ]   |     Checking panic_abort v0.0.0 (/home/runneradmin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/panic_abort)\n[CI/Miri test                        ]   |     Checking panic_unwind v0.0.0 (/home/runneradmin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/panic_unwind)\n[CI/Miri test                        ]   |     Checking gimli v0.27.2\n[CI/Miri test                        ]   |     Checking miniz_oxide v0.6.2\n[CI/Miri test                        ]   |     Checking hashbrown v0.13.1\n[CI/Miri test                        ]   |     Checking object v0.30.1\n[CI/Miri test                        ]   |     Checking std_detect v0.1.5 (/home/runneradmin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/stdarch/crates/std_detect)\n[CI/rustfmt check                    ]   | config.status: creating Makefile\n[CI/rustfmt check                    ]   | config.status: creating src/Makefile\n[CI/rustfmt check                    ]   | config.status: creating benchmarks/Makefile\n[CI/rustfmt check                    ]   | config.status: creating conformance/Makefile\n[CI/rustfmt check                    ]   | config.status: creating protobuf.pc\n[CI/rustfmt check                    ]   | config.status: creating protobuf-lite.pc\n[CI/rustfmt check                    ]   | config.status: creating config.h\n[CI/rustfmt check                    ]   | config.status: executing depfiles commands\n[CI/Miri test                        ]   |     Checking addr2line v0.19.0\n[CI/rustfmt check                    ]   | config.status: executing libtool commands\n[CI/rustfmt check                    ]   | === configuring in third_party/googletest (/home/runneradmin/protobuf-3.19.4/third_party/googletest)\n[CI/rustfmt check                    ]   | configure: running /bin/bash ./configure --disable-option-checking '--prefix=/home/runneradmin/pb'  --cache-file=/dev/null --srcdir=.\n[CI/rustfmt check                    ]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/rustfmt check                    ]   | checking whether build environment is sane... yes\n[CI/rustfmt check                    ]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/rustfmt check                    ]   | checking for gawk... gawk\n[CI/rustfmt check                    ]   | checking whether make sets $(MAKE)... yes\n[CI/rustfmt check                    ]   | checking whether make supports nested variables... yes\n[CI/Miri test                        ]   |     Checking rustc-std-workspace-std v1.99.0 (/home/runneradmin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/rustc-std-workspace-std)\n[CI/Miri test                        ]   |     Checking proc_macro v0.0.0 (/home/runneradmin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/proc_macro)\n[CI/Miri test                        ]   |     Checking unicode-width v0.1.10\n[CI/Miri test                        ]   |     Checking getopts v0.2.21\n[CI/Miri test                        ]   |     Checking test v0.0.0 (/home/runneradmin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/test)\n[CI/rustfmt check                    ]   | checking that generated files are newer than configure... done\n[CI/rustfmt check                    ]   | configure: creating ./config.status\n[CI/rustfmt check                    ]   | config.status: creating Makefile\n[CI/rustfmt check                    ]   | === configuring in googletest (/home/runneradmin/protobuf-3.19.4/third_party/googletest/googletest)\n[CI/rustfmt check                    ]   | configure: running /bin/bash ./configure --disable-option-checking '--prefix=/home/runneradmin/pb'  --cache-file=/dev/null --srcdir=.\n[CI/Miri test                        ]   |     Checking sysroot v0.0.0 (/home/runneradmin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/sysroot)\n[CI/Miri test                        ]   |     Checking custom-local-sysroot v0.0.0 (/tmp/.tmpIqE1vd)\n[CI/Miri test                        ]   |     Finished release [optimized] target(s) in 30.66s\n[CI/rustfmt check                    ]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/rustfmt check                    ]   | checking whether build environment is sane... yes\n[CI/rustfmt check                    ]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/rustfmt check                    ]   | checking for gawk... gawk\n[CI/rustfmt check                    ]   | checking whether make sets $(MAKE)... yes\n[CI/rustfmt check                    ]   | checking whether make supports nested variables... yes\n[CI/rustfmt check                    ]   | checking for gcc... gcc\n[CI/Miri test                        ]   | A sysroot for Miri is now available in `/home/runneradmin/.cache/miri`.\n[CI/Miri test                        ]   \u2705  Success - Main cargo-miri-setup\n[CI/rustfmt check                    ]   | checking whether the C compiler works... yes\n[CI/rustfmt check                    ]   | checking for C compiler default output file name... a.out\n[CI/rustfmt check                    ]   | checking for suffix of executables... \n[CI/rustfmt check                    ]   | checking whether we are cross compiling... no\n[CI/rustfmt check                    ]   | checking for suffix of object files... o\n[CI/rustfmt check                    ]   | checking whether the compiler supports GNU C... yes\n[CI/rustfmt check                    ]   | checking whether gcc accepts -g... yes\n[CI/rustfmt check                    ]   | checking for gcc option to enable C11 features... none needed\n[CI/rustfmt check                    ]   | checking whether gcc understands -c and -o together... yes\n[CI/rustfmt check                    ]   | checking whether make supports the include directive... yes (GNU style)\n[CI/Miri test                        ] \u2b50 Run Main cargo-miri-test\n[CI/rustfmt check                    ]   | checking dependency style of gcc... gcc3\n[CI/rustfmt check                    ]   | checking for g++... g++\n[CI/rustfmt check                    ]   | checking whether the compiler supports GNU C++... yes\n[CI/Miri test                        ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[CI/rustfmt check                    ]   | checking whether g++ accepts -g... yes\n[CI/rustfmt check                    ]   | checking for g++ option to enable C++11 features... none needed\n[CI/Miri test                        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[CI/rustfmt check                    ]   | checking dependency style of g++... gcc3\n[CI/rustfmt check                    ]   | checking build system type... x86_64-pc-linux-gnu\n[CI/rustfmt check                    ]   | checking host system type... x86_64-pc-linux-gnu\n[CI/rustfmt check                    ]   | checking how to print strings... printf\n[CI/rustfmt check                    ]   | checking for a sed that does not truncate output... /usr/bin/sed\n[CI/rustfmt check                    ]   | checking for grep that handles long lines and -e... /usr/bin/grep\n[CI/rustfmt check                    ]   | checking for egrep... /usr/bin/grep -E\n[CI/rustfmt check                    ]   | checking for fgrep... /usr/bin/grep -F\n[CI/rustfmt check                    ]   | checking for ld used by gcc... /usr/bin/ld\n[CI/rustfmt check                    ]   | checking if the linker (/usr/bin/ld) is GNU ld... yes\n[CI/rustfmt check                    ]   | checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\n[CI/rustfmt check                    ]   | checking the name lister (/usr/bin/nm -B) interface... BSD nm\n[CI/rustfmt check                    ]   | checking whether ln -s works... yes\n[CI/rustfmt check                    ]   | checking the maximum length of command line arguments... 1572864\n[CI/rustfmt check                    ]   | checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\n[CI/rustfmt check                    ]   | checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\n[CI/rustfmt check                    ]   | checking for /usr/bin/ld option to reload object files... -r\n[CI/rustfmt check                    ]   | checking for objdump... objdump\n[CI/rustfmt check                    ]   | checking how to recognize dependent libraries... pass_all\n[CI/rustfmt check                    ]   | checking for dlltool... no\n[CI/rustfmt check                    ]   | checking how to associate runtime and link libraries... printf %s\\n\n[CI/rustfmt check                    ]   | checking for ar... ar\n[CI/rustfmt check                    ]   | checking for archiver @FILE support... @\n[CI/rustfmt check                    ]   | checking for strip... strip\n[CI/rustfmt check                    ]   | checking for ranlib... ranlib\n[CI/rustfmt check                    ]   | checking command to parse /usr/bin/nm -B output from gcc object... ok\n[CI/rustfmt check                    ]   | checking for sysroot... no\n[CI/rustfmt check                    ]   | checking for a working dd... /usr/bin/dd\n[CI/rustfmt check                    ]   | checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1\n[CI/rustfmt check                    ]   | checking for mt... no\n[CI/rustfmt check                    ]   | checking if : is a manifest tool... no\n[CI/rustfmt check                    ]   | checking for stdio.h... yes\n[CI/rustfmt check                    ]   | checking for stdlib.h... yes\n[CI/rustfmt check                    ]   | checking for string.h... yes\n[CI/rustfmt check                    ]   | checking for inttypes.h... yes\n[CI/rustfmt check                    ]   | checking for stdint.h... yes\n[CI/rustfmt check                    ]   | checking for strings.h... yes\n[CI/rustfmt check                    ]   | checking for sys/stat.h... yes\n[CI/rustfmt check                    ]   | checking for sys/types.h... yes\n[CI/rustfmt check                    ]   | checking for unistd.h... yes\n[CI/rustfmt check                    ]   | checking for dlfcn.h... yes\n[CI/rustfmt check                    ]   | checking for objdir... .libs\n[CI/rustfmt check                    ]   | checking if gcc supports -fno-rtti -fno-exceptions... no\n[CI/rustfmt check                    ]   | checking for gcc option to produce PIC... -fPIC -DPIC\n[CI/rustfmt check                    ]   | checking if gcc PIC flag -fPIC -DPIC works... yes\n[CI/rustfmt check                    ]   | checking if gcc static flag -static works... yes\n[CI/rustfmt check                    ]   | checking if gcc supports -c -o file.o... yes\n[CI/rustfmt check                    ]   | checking if gcc supports -c -o file.o... (cached) yes\n[CI/rustfmt check                    ]   | checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/rustfmt check                    ]   | checking whether -lc should be explicitly linked in... no\n[CI/rustfmt check                    ]   | checking dynamic linker characteristics... GNU/Linux ld.so\n[CI/rustfmt check                    ]   | checking how to hardcode library paths into programs... immediate\n[CI/rustfmt check                    ]   | checking whether stripping libraries is possible... yes\n[CI/rustfmt check                    ]   | checking if libtool supports shared libraries... yes\n[CI/rustfmt check                    ]   | checking whether to build shared libraries... yes\n[CI/rustfmt check                    ]   | checking whether to build static libraries... yes\n[CI/rustfmt check                    ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/rustfmt check                    ]   | checking for ld used by g++... /usr/bin/ld -m elf_x86_64\n[CI/rustfmt check                    ]   | checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes\n[CI/rustfmt check                    ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/rustfmt check                    ]   | checking for g++ option to produce PIC... -fPIC -DPIC\n[CI/rustfmt check                    ]   | checking if g++ PIC flag -fPIC -DPIC works... yes\n[CI/rustfmt check                    ]   | checking if g++ static flag -static works... yes\n[CI/rustfmt check                    ]   | checking if g++ supports -c -o file.o... yes\n[CI/rustfmt check                    ]   | checking if g++ supports -c -o file.o... (cached) yes\n[CI/rustfmt check                    ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/rustfmt check                    ]   | checking dynamic linker characteristics... (cached) GNU/Linux ld.so\n[CI/rustfmt check                    ]   | checking how to hardcode library paths into programs... immediate\n[CI/rustfmt check                    ]   | checking for python... /usr/local/bin/python\n[CI/rustfmt check                    ]   | checking for the pthreads library -lpthreads... no\n[CI/rustfmt check                    ]   | checking whether pthreads work without any flags... no\n[CI/rustfmt check                    ]   | checking whether pthreads work with -Kthread... no\n[CI/rustfmt check                    ]   | checking whether pthreads work with -kthread... no\n[CI/rustfmt check                    ]   | checking for the pthreads library -llthread... no\n[CI/rustfmt check                    ]   | checking whether pthreads work with -pthread... yes\n[CI/rustfmt check                    ]   | checking for joinable pthread attribute... PTHREAD_CREATE_JOINABLE\n[CI/rustfmt check                    ]   | checking if more special flags are required for pthreads... no\n[CI/rustfmt check                    ]   | checking whether to check for GCC pthread/shared inconsistencies... yes\n[CI/rustfmt check                    ]   | checking whether -pthread is sufficient with -shared... yes\n[CI/rustfmt check                    ]   | checking that generated files are newer than configure... done\n[CI/rustfmt check                    ]   | configure: creating ./config.status\n[CI/rustfmt check                    ]   | config.status: creating Makefile\n[CI/rustfmt check                    ]   | config.status: creating scripts/gtest-config\n[CI/rustfmt check                    ]   | config.status: creating build-aux/config.h\n[CI/rustfmt check                    ]   | config.status: executing depfiles commands\n[CI/rustfmt check                    ]   | config.status: executing libtool commands\n[CI/rustfmt check                    ]   | === configuring in googlemock (/home/runneradmin/protobuf-3.19.4/third_party/googletest/googlemock)\n[CI/rustfmt check                    ]   | configure: running /bin/bash ./configure --disable-option-checking '--prefix=/home/runneradmin/pb'  --cache-file=/dev/null --srcdir=.\n[CI/rustfmt check                    ]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/rustfmt check                    ]   | checking whether build environment is sane... yes\n[CI/rustfmt check                    ]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/rustfmt check                    ]   | checking for gawk... gawk\n[CI/rustfmt check                    ]   | checking whether make sets $(MAKE)... yes\n[CI/rustfmt check                    ]   | checking whether make supports nested variables... yes\n[CI/rustfmt check                    ]   | checking for gcc... gcc\n[CI/rustfmt check                    ]   | checking whether the C compiler works... yes\n[CI/rustfmt check                    ]   | checking for C compiler default output file name... a.out\n[CI/rustfmt check                    ]   | checking for suffix of executables... \n[CI/rustfmt check                    ]   | checking whether we are cross compiling... no\n[CI/rustfmt check                    ]   | checking for suffix of object files... o\n[CI/rustfmt check                    ]   | checking whether the compiler supports GNU C... yes\n[CI/rustfmt check                    ]   | checking whether gcc accepts -g... yes\n[CI/rustfmt check                    ]   | checking for gcc option to enable C11 features... none needed\n[CI/rustfmt check                    ]   | checking whether gcc understands -c and -o together... yes\n[CI/rustfmt check                    ]   | checking whether make supports the include directive... yes (GNU style)\n[CI/rustfmt check                    ]   | checking dependency style of gcc... gcc3\n[CI/rustfmt check                    ]   | checking for g++... g++\n[CI/rustfmt check                    ]   | checking whether the compiler supports GNU C++... yes\n[CI/rustfmt check                    ]   | checking whether g++ accepts -g... yes\n[CI/rustfmt check                    ]   | checking for g++ option to enable C++11 features... none needed\n[CI/rustfmt check                    ]   | checking dependency style of g++... gcc3\n[CI/rustfmt check                    ]   | checking build system type... x86_64-pc-linux-gnu\n[CI/rustfmt check                    ]   | checking host system type... x86_64-pc-linux-gnu\n[CI/rustfmt check                    ]   | checking how to print strings... printf\n[CI/rustfmt check                    ]   | checking for a sed that does not truncate output... /usr/bin/sed\n[CI/rustfmt check                    ]   | checking for grep that handles long lines and -e... /usr/bin/grep\n[CI/rustfmt check                    ]   | checking for egrep... /usr/bin/grep -E\n[CI/rustfmt check                    ]   | checking for fgrep... /usr/bin/grep -F\n[CI/rustfmt check                    ]   | checking for ld used by gcc... /usr/bin/ld\n[CI/rustfmt check                    ]   | checking if the linker (/usr/bin/ld) is GNU ld... yes\n[CI/rustfmt check                    ]   | checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\n[CI/rustfmt check                    ]   | checking the name lister (/usr/bin/nm -B) interface... BSD nm\n[CI/rustfmt check                    ]   | checking whether ln -s works... yes\n[CI/rustfmt check                    ]   | checking the maximum length of command line arguments... 1572864\n[CI/rustfmt check                    ]   | checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\n[CI/rustfmt check                    ]   | checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\n[CI/rustfmt check                    ]   | checking for /usr/bin/ld option to reload object files... -r\n[CI/rustfmt check                    ]   | checking for objdump... objdump\n[CI/rustfmt check                    ]   | checking how to recognize dependent libraries... pass_all\n[CI/rustfmt check                    ]   | checking for dlltool... no\n[CI/rustfmt check                    ]   | checking how to associate runtime and link libraries... printf %s\\n\n[CI/rustfmt check                    ]   | checking for ar... ar\n[CI/rustfmt check                    ]   | checking for archiver @FILE support... @\n[CI/rustfmt check                    ]   | checking for strip... strip\n[CI/rustfmt check                    ]   | checking for ranlib... ranlib\n[CI/rustfmt check                    ]   | checking command to parse /usr/bin/nm -B output from gcc object... ok\n[CI/rustfmt check                    ]   | checking for sysroot... no\n[CI/rustfmt check                    ]   | checking for a working dd... /usr/bin/dd\n[CI/rustfmt check                    ]   | checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1\n[CI/rustfmt check                    ]   | checking for mt... no\n[CI/rustfmt check                    ]   | checking if : is a manifest tool... no\n[CI/rustfmt check                    ]   | checking for stdio.h... yes\n[CI/rustfmt check                    ]   | checking for stdlib.h... yes\n[CI/rustfmt check                    ]   | checking for string.h... yes\n[CI/rustfmt check                    ]   | checking for inttypes.h... yes\n[CI/rustfmt check                    ]   | checking for stdint.h... yes\n[CI/rustfmt check                    ]   | checking for strings.h... yes\n[CI/rustfmt check                    ]   | checking for sys/stat.h... yes\n[CI/rustfmt check                    ]   | checking for sys/types.h... yes\n[CI/rustfmt check                    ]   | checking for unistd.h... yes\n[CI/rustfmt check                    ]   | checking for dlfcn.h... yes\n[CI/rustfmt check                    ]   | checking for objdir... .libs\n[CI/rustfmt check                    ]   | checking if gcc supports -fno-rtti -fno-exceptions... no\n[CI/rustfmt check                    ]   | checking for gcc option to produce PIC... -fPIC -DPIC\n[CI/rustfmt check                    ]   | checking if gcc PIC flag -fPIC -DPIC works... yes\n[CI/rustfmt check                    ]   | checking if gcc static flag -static works... yes\n[CI/rustfmt check                    ]   | checking if gcc supports -c -o file.o... yes\n[CI/rustfmt check                    ]   | checking if gcc supports -c -o file.o... (cached) yes\n[CI/rustfmt check                    ]   | checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/rustfmt check                    ]   | checking whether -lc should be explicitly linked in... no\n[CI/rustfmt check                    ]   | checking dynamic linker characteristics... GNU/Linux ld.so\n[CI/rustfmt check                    ]   | checking how to hardcode library paths into programs... immediate\n[CI/rustfmt check                    ]   | checking whether stripping libraries is possible... yes\n[CI/rustfmt check                    ]   | checking if libtool supports shared libraries... yes\n[CI/rustfmt check                    ]   | checking whether to build shared libraries... yes\n[CI/rustfmt check                    ]   | checking whether to build static libraries... yes\n[CI/rustfmt check                    ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/rustfmt check                    ]   | checking for ld used by g++... /usr/bin/ld -m elf_x86_64\n[CI/rustfmt check                    ]   | checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes\n[CI/rustfmt check                    ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/rustfmt check                    ]   | checking for g++ option to produce PIC... -fPIC -DPIC\n[CI/rustfmt check                    ]   | checking if g++ PIC flag -fPIC -DPIC works... yes\n[CI/rustfmt check                    ]   | checking if g++ static flag -static works... yes\n[CI/rustfmt check                    ]   | checking if g++ supports -c -o file.o... yes\n[CI/rustfmt check                    ]   | checking if g++ supports -c -o file.o... (cached) yes\n[CI/rustfmt check                    ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/rustfmt check                    ]   | checking dynamic linker characteristics... (cached) GNU/Linux ld.so\n[CI/rustfmt check                    ]   | checking how to hardcode library paths into programs... immediate\n[CI/rustfmt check                    ]   | checking for python... /usr/local/bin/python\n[CI/rustfmt check                    ]   | checking for the pthreads library -lpthreads... no\n[CI/rustfmt check                    ]   | checking whether pthreads work without any flags... no\n[CI/rustfmt check                    ]   | checking whether pthreads work with -Kthread... no\n[CI/rustfmt check                    ]   | checking whether pthreads work with -kthread... no\n[CI/rustfmt check                    ]   | checking for the pthreads library -llthread... no\n[CI/rustfmt check                    ]   | checking whether pthreads work with -pthread... yes\n[CI/rustfmt check                    ]   | checking for joinable pthread attribute... PTHREAD_CREATE_JOINABLE\n[CI/rustfmt check                    ]   | checking if more special flags are required for pthreads... no\n[CI/rustfmt check                    ]   | checking whether to check for GCC pthread/shared inconsistencies... yes\n[CI/rustfmt check                    ]   | checking whether -pthread is sufficient with -shared... yes\n[CI/rustfmt check                    ]   | checking for gtest-config... no\n[CI/rustfmt check                    ]   | checking that generated files are newer than configure... done\n[CI/rustfmt check                    ]   | configure: creating ./config.status\n[CI/rustfmt check                    ]   | config.status: creating Makefile\n[CI/rustfmt check                    ]   | config.status: creating scripts/gmock-config\n[CI/rustfmt check                    ]   | config.status: creating build-aux/config.h\n[CI/rustfmt check                    ]   | config.status: executing depfiles commands\n[CI/rustfmt check                    ]   | config.status: executing libtool commands\n[CI/rustfmt check                    ]   | + make -j2\n[CI/rustfmt check                    ]   | make  all-recursive\n[CI/rustfmt check                    ]   | make[1]: Entering directory '/home/runneradmin/protobuf-3.19.4'\n[CI/rustfmt check                    ]   | Making all in .\n[CI/rustfmt check                    ]   | make[2]: Entering directory '/home/runneradmin/protobuf-3.19.4'\n[CI/rustfmt check                    ]   | make[2]: Leaving directory '/home/runneradmin/protobuf-3.19.4'\n[CI/rustfmt check                    ]   | Making all in src\n[CI/rustfmt check                    ]   | make[2]: Entering directory '/home/runneradmin/protobuf-3.19.4/src'\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/map.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/message_lite.lo\n[CI/rustfmt check                    ]   | In file included from /usr/include/string.h:495,\n[CI/rustfmt check                    ]   |                  from ./google/protobuf/stubs/port.h:39,\n[CI/rustfmt check                    ]   |                  from ./google/protobuf/stubs/common.h:48,\n[CI/rustfmt check                    ]   |                  from ./google/protobuf/message_lite.h:45,\n[CI/rustfmt check                    ]   |                  from google/protobuf/message_lite.cc:36:\n[CI/rustfmt check                    ]   | In function \u2018void* memcpy(void*, const void*, size_t)\u2019,\n[CI/rustfmt check                    ]   |     inlined from \u2018uint8_t* google::protobuf::io::EpsCopyOutputStream::WriteRaw(const void*, int, uint8_t*)\u2019 at ./google/protobuf/io/coded_stream.h:706:16,\n[CI/rustfmt check                    ]   |     inlined from \u2018virtual uint8_t* google::protobuf::internal::ImplicitWeakMessage::_InternalSerialize(uint8_t*, google::protobuf::io::EpsCopyOutputStream*) const\u2019 at ./google/protobuf/implicit_weak_message.h:84:28,\n[CI/rustfmt check                    ]   |     inlined from \u2018bool google::protobuf::MessageLite::SerializePartialToZeroCopyStream(google::protobuf::io::ZeroCopyOutputStream*) const\u2019 at google/protobuf/message_lite.cc:412:30:\n[CI/rustfmt check                    ]   | /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:33: warning: \u2018void* __builtin___memcpy_chk(void*, const void*, long unsigned int, long unsigned int)\u2019 specified size between 18446744071562067968 and 18446744073709551615 exceeds maximum object size 9223372036854775807 [-Wstringop-overflow=]\n[CI/rustfmt check                    ]   |    34 |   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));\n[CI/rustfmt check                    ]   |       |          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/parse_context.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/repeated_field.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/repeated_ptr_field.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/wire_format_lite.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/any.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/any.pb.lo\n[CI/linux beta (default features)    ]   | + test -n 3.19.4\n[CI/linux beta (default features)    ]   | + test -n /var/run/act/workflow/pathcmd.txt\n[CI/linux beta (default features)    ]   | + test -n /var/run/act/workflow/envs.txt\n[CI/linux beta (default features)    ]   | + path_tr /home/runneradmin/pb/bin\n[CI/linux beta (default features)    ]   | + uname\n[CI/linux stable (default features)  ]   | + test -n 3.19.4\n[CI/linux stable (default features)  ]   | + test -n /var/run/act/workflow/pathcmd.txt\n[CI/linux stable (default features)  ]   | + test -n /var/run/act/workflow/envs.txt\n[CI/linux stable (default features)  ]   | + path_tr /home/runneradmin/pb/bin\n[CI/linux stable (default features)  ]   | + uname\n[CI/linux beta (default features)    ]   | + echo /home/runneradmin/pb/bin\n[CI/linux beta (default features)    ]   | + echo /home/runneradmin/pb/bin\n[CI/linux beta (default features)    ]   | + path_tr /home/runneradmin/pb/lib\n[CI/linux beta (default features)    ]   | + uname\n[CI/linux stable (default features)  ]   | + echo /home/runneradmin/pb/bin\n[CI/linux stable (default features)  ]   | + echo /home/runneradmin/pb/bin\n[CI/linux stable (default features)  ]   | + path_tr /home/runneradmin/pb/lib\n[CI/linux stable (default features)  ]   | + uname\n[CI/linux stable (default features)  ]   | + echo /home/runneradmin/pb/lib\n[CI/linux stable (default features)  ]   | + echo LD_LIBRARY_PATH=/home/runneradmin/pb/lib\n[CI/linux stable (default features)  ]   | + path_tr /home/runneradmin/pb/lib/pkgconfig\n[CI/linux stable (default features)  ]   | + uname\n[CI/linux stable (default features)  ]   | + echo /home/runneradmin/pb/lib/pkgconfig\n[CI/linux stable (default features)  ]   | + echo PKG_CONFIG_PATH=/home/runneradmin/pb/lib/pkgconfig\n[CI/linux stable (default features)  ]   | + path_tr /home/runneradmin/pb\n[CI/linux stable (default features)  ]   | + uname\n[CI/linux stable (default features)  ]   | + echo /home/runneradmin/pb\n[CI/linux stable (default features)  ]   | + echo PROTOBUF_PREFIX=/home/runneradmin/pb\n[CI/linux stable (default features)  ]   | + test -e /home/runneradmin/pb/bin/protoc -o -e /home/runneradmin/pb/bin/protoc.exe\n[CI/linux stable (default features)  ]   | + test -e /home/runneradmin/pb\n[CI/linux stable (default features)  ]   | + cd\n[CI/linux stable (default features)  ]   | + rm -rf pb\n[CI/linux stable (default features)  ]   | + mkdir pb\n[CI/linux stable (default features)  ]   | + uname\n[CI/linux beta (default features)    ]   | + echo /home/runneradmin/pb/lib\n[CI/linux beta (default features)    ]   | + echo LD_LIBRARY_PATH=/home/runneradmin/pb/lib\n[CI/linux beta (default features)    ]   | + path_tr /home/runneradmin/pb/lib/pkgconfig\n[CI/linux beta (default features)    ]   | + uname\n[CI/linux stable (default features)  ]   | + basename=protobuf-cpp-3.19.4\n[CI/linux stable (default features)  ]   | + curl -sL https://github.com/protocolbuffers/protobuf/releases/download/v3.19.4/protobuf-cpp-3.19.4.tar.gz\n[CI/linux stable (default features)  ]   | + tar zx\n[CI/linux beta (default features)    ]   | + echo /home/runneradmin/pb/lib/pkgconfig\n[CI/linux beta (default features)    ]   | + echo PKG_CONFIG_PATH=/home/runneradmin/pb/lib/pkgconfig\n[CI/linux beta (default features)    ]   | + path_tr /home/runneradmin/pb\n[CI/linux beta (default features)    ]   | + uname\n[CI/linux beta (default features)    ]   | + echo /home/runneradmin/pb\n[CI/linux beta (default features)    ]   | + echo PROTOBUF_PREFIX=/home/runneradmin/pb\n[CI/linux beta (default features)    ]   | + test -e /home/runneradmin/pb/bin/protoc -o -e /home/runneradmin/pb/bin/protoc.exe\n[CI/linux beta (default features)    ]   | + test -e /home/runneradmin/pb\n[CI/linux beta (default features)    ]   | + cd\n[CI/linux beta (default features)    ]   | + rm -rf pb\n[CI/linux beta (default features)    ]   | + mkdir pb\n[CI/linux beta (default features)    ]   | + uname\n[CI/linux beta (default features)    ]   | + basename=protobuf-cpp-3.19.4\n[CI/linux beta (default features)    ]   | + curl -sL https://github.com/protocolbuffers/protobuf/releases/download/v3.19.4/protobuf-cpp-3.19.4.tar.gz\n[CI/linux beta (default features)    ]   | + tar zx\n[CI/Miri test                        ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/api.pb.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/importer.lo\n[CI/Miri test                        ]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[CI/Miri test                        ]   | [command]/home/runneradmin/.cargo/bin/cargo miri test -p protobuf --lib --all-features\n[CI/Miri test                        ]   | Preparing a sysroot for Miri (target: x86_64-unknown-linux-gnu)... done\n[CI/Miri test                        ]   |     Updating crates.io index\n[CI/linux beta (default features)    ]   | + cd protobuf-3.19.4\n[CI/linux beta (default features)    ]   | + ./configure --prefix=/home/runneradmin/pb\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/parser.lo\n[CI/linux stable (default features)  ]   | + cd protobuf-3.19.4\n[CI/linux stable (default features)  ]   | + ./configure --prefix=/home/runneradmin/pb\n[CI/linux beta (default features)    ]   | checking whether to enable maintainer-specific portions of Makefiles... yes\n[CI/linux stable (default features)  ]   | checking whether to enable maintainer-specific portions of Makefiles... yes\n[CI/linux beta (default features)    ]   | checking build system type... x86_64-pc-linux-gnu\n[CI/linux beta (default features)    ]   | checking host system type... x86_64-pc-linux-gnu\n[CI/linux beta (default features)    ]   | checking target system type... x86_64-pc-linux-gnu\n[CI/Miri test                        ]   |  Downloading crates ...\n[CI/linux beta (default features)    ]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/linux beta (default features)    ]   | checking whether build environment is sane... yes\n[CI/linux stable (default features)  ]   | checking build system type... x86_64-pc-linux-gnu\n[CI/linux stable (default features)  ]   | checking host system type... x86_64-pc-linux-gnu\n[CI/linux stable (default features)  ]   | checking target system type... x86_64-pc-linux-gnu\n[CI/linux beta (default features)    ]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/linux beta (default features)    ]   | checking for gawk... gawk\n[CI/linux stable (default features)  ]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/linux beta (default features)    ]   | checking whether make sets $(MAKE)... yes\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/descriptor.lo\n[CI/linux stable (default features)  ]   | checking whether build environment is sane... yes\n[CI/linux stable (default features)  ]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/linux stable (default features)  ]   | checking for gawk... gawk\n[CI/linux beta (default features)    ]   | checking whether make supports nested variables... yes\n[CI/linux stable (default features)  ]   | checking whether make sets $(MAKE)... yes\n[CI/linux beta (default features)    ]   | checking whether UID '1012' is supported by ustar format... yes\n[CI/linux beta (default features)    ]   | checking whether GID '1000' is supported by ustar format... yes\n[CI/linux stable (default features)  ]   | checking whether make supports nested variables... yes\n[CI/linux stable (default features)  ]   | checking whether UID '1012' is supported by ustar format... yes\n[CI/linux stable (default features)  ]   | checking whether GID '1000' is supported by ustar format... yes\n[CI/linux beta (default features)    ]   | checking how to create a ustar tar archive... gnutar\n[CI/linux beta (default features)    ]   | checking whether make supports nested variables... (cached) yes\n[CI/linux beta (default features)    ]   | checking for gcc... gcc\n[CI/linux stable (default features)  ]   | checking how to create a ustar tar archive... gnutar\n[CI/linux stable (default features)  ]   | checking whether make supports nested variables... (cached) yes\n[CI/linux stable (default features)  ]   | checking for gcc... gcc\n[CI/linux beta (default features)    ]   | checking whether the C compiler works... yes\n[CI/linux beta (default features)    ]   | checking for C compiler default output file name... a.out\n[CI/linux stable (default features)  ]   | checking whether the C compiler works... yes\n[CI/linux stable (default features)  ]   | checking for C compiler default output file name... a.out\n[CI/linux stable (default features)  ]   | checking for suffix of executables... \n[CI/linux beta (default features)    ]   | checking for suffix of executables... \n[CI/linux stable (default features)  ]   | checking whether we are cross compiling... no\n[CI/linux beta (default features)    ]   | checking whether we are cross compiling... no\n[CI/linux stable (default features)  ]   | checking for suffix of object files... o\n[CI/linux beta (default features)    ]   | checking for suffix of object files... o\n[CI/Miri test                        ]   |   Downloaded bytes v1.4.0\n[CI/Miri test                        ]   |   Downloaded thiserror-impl v1.0.40\n[CI/Miri test                        ]   |   Downloaded proc-macro2 v1.0.59\n[CI/Miri test                        ]   |   Downloaded unicode-ident v1.0.9\n[CI/Miri test                        ]   |   Downloaded thiserror v1.0.40\n[CI/Miri test                        ]   |   Downloaded syn v2.0.18\n[CI/Miri test                        ]   |   Downloaded quote v1.0.28\n[CI/Miri test                        ]   |   Downloaded once_cell v1.17.2\n[CI/linux stable (default features)  ]   | checking whether the compiler supports GNU C... yes\n[CI/linux beta (default features)    ]   | checking whether the compiler supports GNU C... yes\n[CI/Miri test                        ]   |    Compiling proc-macro2 v1.0.59\n[CI/Miri test                        ]   |    Compiling quote v1.0.28\n[CI/Miri test                        ]   |    Compiling unicode-ident v1.0.9\n[CI/Miri test                        ]   |    Compiling thiserror v1.0.40\n[CI/Miri test                        ]   |    Compiling protobuf v4.0.0-alpha.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf/protobuf)\n[CI/Miri test                        ]   |    Compiling bytes v1.4.0\n[CI/Miri test                        ]   |    Compiling once_cell v1.17.2\n[CI/linux beta (default features)    ]   | checking whether gcc accepts -g... yes\n[CI/linux stable (default features)  ]   | checking whether gcc accepts -g... yes\n[CI/linux stable (default features)  ]   | checking for gcc option to enable C11 features... none needed\n[CI/linux beta (default features)    ]   | checking for gcc option to enable C11 features... none needed\n[CI/linux beta (default features)    ]   | checking whether gcc understands -c and -o together... yes\n[CI/linux beta (default features)    ]   | checking whether make supports the include directive... yes (GNU style)\n[CI/linux stable (default features)  ]   | checking whether gcc understands -c and -o together... yes\n[CI/linux stable (default features)  ]   | checking whether make supports the include directive... yes (GNU style)\n[CI/linux beta (default features)    ]   | checking dependency style of gcc... gcc3\n[CI/linux beta (default features)    ]   | checking for g++... g++\n[CI/linux stable (default features)  ]   | checking dependency style of gcc... gcc3\n[CI/linux stable (default features)  ]   | checking for g++... g++\n[CI/linux stable (default features)  ]   | checking whether the compiler supports GNU C++... yes\n[CI/linux beta (default features)    ]   | checking whether the compiler supports GNU C++... yes\n[CI/linux stable (default features)  ]   | checking whether g++ accepts -g... yes\n[CI/linux beta (default features)    ]   | checking whether g++ accepts -g... yes\n[CI/Miri test                        ]   |    Compiling syn v2.0.18\n[CI/linux beta (default features)    ]   | checking for g++ option to enable C++11 features... none needed\n[CI/linux stable (default features)  ]   | checking for g++ option to enable C++11 features... none needed\n[CI/linux beta (default features)    ]   | checking dependency style of g++... gcc3\n[CI/linux stable (default features)  ]   | checking dependency style of g++... gcc3\n[CI/linux beta (default features)    ]   | checking how to run the C preprocessor... gcc -E\n[CI/linux stable (default features)  ]   | checking how to run the C preprocessor... gcc -E\n[CI/linux beta (default features)    ]   | checking for gcc... gcc\n[CI/linux stable (default features)  ]   | checking for gcc... gcc\n[CI/linux beta (default features)    ]   | checking whether the compiler supports GNU C... (cached) yes\n[CI/linux stable (default features)  ]   | checking whether the compiler supports GNU C... (cached) yes\n[CI/linux beta (default features)    ]   | checking whether gcc accepts -g... yes\n[CI/linux beta (default features)    ]   | checking for gcc option to enable C11 features... (cached) none needed\n[CI/linux beta (default features)    ]   | checking whether gcc understands -c and -o together... (cached) yes\n[CI/linux beta (default features)    ]   | checking dependency style of gcc... (cached) gcc3\n[CI/linux stable (default features)  ]   | checking whether gcc accepts -g... yes\n[CI/linux stable (default features)  ]   | checking for gcc option to enable C11 features... (cached) none needed\n[CI/linux stable (default features)  ]   | checking whether gcc understands -c and -o together... (cached) yes\n[CI/linux stable (default features)  ]   | checking dependency style of gcc... (cached) gcc3\n[CI/linux beta (default features)    ]   | checking how to run the C preprocessor... gcc -E\n[CI/linux stable (default features)  ]   | checking how to run the C preprocessor... gcc -E\n[CI/linux beta (default features)    ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/linux stable (default features)  ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/linux beta (default features)    ]   | checking for g++... g++\n[CI/linux beta (default features)    ]   | checking whether the compiler supports GNU C++... (cached) yes\n[CI/linux stable (default features)  ]   | checking for g++... g++\n[CI/linux beta (default features)    ]   | checking whether g++ accepts -g... yes\n[CI/linux beta (default features)    ]   | checking for g++ option to enable C++11 features... (cached) none needed\n[CI/linux beta (default features)    ]   | checking dependency style of g++... (cached) gcc3\n[CI/linux stable (default features)  ]   | checking whether the compiler supports GNU C++... (cached) yes\n[CI/linux beta (default features)    ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/linux stable (default features)  ]   | checking whether g++ accepts -g... yes\n[CI/linux stable (default features)  ]   | checking for g++ option to enable C++11 features... (cached) none needed\n[CI/linux stable (default features)  ]   | checking dependency style of g++... (cached) gcc3\n[CI/linux stable (default features)  ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/linux beta (default features)    ]   | checking for stdio.h... yes\n[CI/linux beta (default features)    ]   | checking for stdlib.h... yes\n[CI/linux stable (default features)  ]   | checking for stdio.h... yes\n[CI/linux beta (default features)    ]   | checking for string.h... yes\n[CI/linux stable (default features)  ]   | checking for stdlib.h... yes\n[CI/linux beta (default features)    ]   | checking for inttypes.h... yes\n[CI/linux stable (default features)  ]   | checking for string.h... yes\n[CI/linux beta (default features)    ]   | checking for stdint.h... yes\n[CI/linux stable (default features)  ]   | checking for inttypes.h... yes\n[CI/linux beta (default features)    ]   | checking for strings.h... yes\n[CI/linux stable (default features)  ]   | checking for stdint.h... yes\n[CI/Miri test                        ]   |    Compiling thiserror-impl v1.0.40\n[CI/linux beta (default features)    ]   | checking for sys/stat.h... yes\n[CI/linux stable (default features)  ]   | checking for strings.h... yes\n[CI/linux stable (default features)  ]   | checking for sys/stat.h... yes\n[CI/linux beta (default features)    ]   | checking for sys/types.h... yes\n[CI/linux stable (default features)  ]   | checking for sys/types.h... yes\n[CI/linux beta (default features)    ]   | checking for unistd.h... yes\n[CI/linux stable (default features)  ]   | checking for unistd.h... yes\n[CI/linux beta (default features)    ]   | checking for wchar.h... yes\n[CI/linux stable (default features)  ]   | checking for wchar.h... yes\n[CI/linux beta (default features)    ]   | checking for minix/config.h... no\n[CI/linux stable (default features)  ]   | checking for minix/config.h... no\n[CI/linux beta (default features)    ]   | checking whether it is safe to define __EXTENSIONS__... yes\n[CI/linux beta (default features)    ]   | checking whether _XOPEN_SOURCE should be defined... no\n[CI/linux beta (default features)    ]   | checking for ar... ar\n[CI/linux stable (default features)  ]   | checking whether it is safe to define __EXTENSIONS__... yes\n[CI/linux stable (default features)  ]   | checking whether _XOPEN_SOURCE should be defined... no\n[CI/linux beta (default features)    ]   | checking the archiver (ar) interface... ar\n[CI/linux beta (default features)    ]   | checking for gcc... gcc\n[CI/linux stable (default features)  ]   | checking for ar... ar\n[CI/linux stable (default features)  ]   | checking the archiver (ar) interface... ar\n[CI/linux stable (default features)  ]   | checking for gcc... gcc\n[CI/linux beta (default features)    ]   | checking whether the compiler supports GNU Objective C... no\n[CI/linux stable (default features)  ]   | checking whether the compiler supports GNU Objective C... no\n[CI/linux beta (default features)    ]   | checking whether gcc accepts -g... no\n[CI/linux beta (default features)    ]   | checking dependency style of gcc... gcc3\n[CI/linux beta (default features)    ]   | checking C++ compiler flags...... use default: -O2  -g -std=c++11 -DNDEBUG\n[CI/linux stable (default features)  ]   | checking whether gcc accepts -g... no\n[CI/linux stable (default features)  ]   | checking dependency style of gcc... gcc3\n[CI/linux stable (default features)  ]   | checking C++ compiler flags...... use default: -O2  -g -std=c++11 -DNDEBUG\n[CI/linux beta (default features)    ]   | checking for g++ options needed to detect all undeclared functions... none needed\n[CI/linux stable (default features)  ]   | checking for g++ options needed to detect all undeclared functions... none needed\n[CI/linux beta (default features)    ]   | checking whether __SUNPRO_CC is declared... no\n[CI/linux beta (default features)    ]   | checking how to print strings... printf\n[CI/linux beta (default features)    ]   | checking for a sed that does not truncate output... /usr/bin/sed\n[CI/linux beta (default features)    ]   | checking for grep that handles long lines and -e... /usr/bin/grep\n[CI/linux beta (default features)    ]   | checking for egrep... /usr/bin/grep -E\n[CI/linux beta (default features)    ]   | checking for fgrep... /usr/bin/grep -F\n[CI/linux beta (default features)    ]   | checking for ld used by gcc... /usr/bin/ld\n[CI/linux beta (default features)    ]   | checking if the linker (/usr/bin/ld) is GNU ld... yes\n[CI/linux beta (default features)    ]   | checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\n[CI/linux stable (default features)  ]   | checking whether __SUNPRO_CC is declared... no\n[CI/Miri test                        ]   |    Compiling protobuf-support v4.0.0-alpha.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf/protobuf-support)\n[CI/linux beta (default features)    ]   | checking the name lister (/usr/bin/nm -B) interface... BSD nm\n[CI/linux beta (default features)    ]   | checking whether ln -s works... yes\n[CI/linux stable (default features)  ]   | checking how to print strings... printf\n[CI/linux beta (default features)    ]   | checking the maximum length of command line arguments... 1572864\n[CI/linux beta (default features)    ]   | checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\n[CI/linux beta (default features)    ]   | checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\n[CI/linux beta (default features)    ]   | checking for /usr/bin/ld option to reload object files... -r\n[CI/linux stable (default features)  ]   | checking for a sed that does not truncate output... /usr/bin/sed\n[CI/linux beta (default features)    ]   | checking for objdump... objdump\n[CI/linux beta (default features)    ]   | checking how to recognize dependent libraries... pass_all\n[CI/linux beta (default features)    ]   | checking for dlltool... no\n[CI/linux beta (default features)    ]   | checking how to associate runtime and link libraries... printf %s\\n\n[CI/linux stable (default features)  ]   | checking for grep that handles long lines and -e... /usr/bin/grep\n[CI/linux stable (default features)  ]   | checking for egrep... /usr/bin/grep -E\n[CI/linux stable (default features)  ]   | checking for fgrep... /usr/bin/grep -F\n[CI/linux stable (default features)  ]   | checking for ld used by gcc... /usr/bin/ld\n[CI/linux stable (default features)  ]   | checking if the linker (/usr/bin/ld) is GNU ld... yes\n[CI/linux stable (default features)  ]   | checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\n[CI/linux beta (default features)    ]   | checking for archiver @FILE support... @\n[CI/linux beta (default features)    ]   | checking for strip... strip\n[CI/linux beta (default features)    ]   | checking for ranlib... ranlib\n[CI/linux stable (default features)  ]   | checking the name lister (/usr/bin/nm -B) interface... BSD nm\n[CI/linux stable (default features)  ]   | checking whether ln -s works... yes\n[CI/linux stable (default features)  ]   | checking the maximum length of command line arguments... 1572864\n[CI/linux stable (default features)  ]   | checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\n[CI/linux stable (default features)  ]   | checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\n[CI/linux stable (default features)  ]   | checking for /usr/bin/ld option to reload object files... -r\n[CI/linux stable (default features)  ]   | checking for objdump... objdump\n[CI/linux stable (default features)  ]   | checking how to recognize dependent libraries... pass_all\n[CI/linux stable (default features)  ]   | checking for dlltool... no\n[CI/linux stable (default features)  ]   | checking how to associate runtime and link libraries... printf %s\\n\n[CI/linux stable (default features)  ]   | checking for archiver @FILE support... @\n[CI/linux stable (default features)  ]   | checking for strip... strip\n[CI/linux stable (default features)  ]   | checking for ranlib... ranlib\n[CI/linux beta (default features)    ]   | checking command to parse /usr/bin/nm -B output from gcc object... ok\n[CI/linux beta (default features)    ]   | checking for sysroot... no\n[CI/linux beta (default features)    ]   | checking for a working dd... /usr/bin/dd\n[CI/linux beta (default features)    ]   | checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1\n[CI/Miri test                        ]   |     Finished test [unoptimized + debuginfo] target(s) in 12.33s\n[CI/linux beta (default features)    ]   | checking for mt... no\n[CI/Miri test                        ]   |      Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/protobuf-5f00baa8af6e2e88)\n[CI/Miri test                        ]   | WARNING: `-Zmiri-tag-raw-pointers` has no effect; it is enabled by default\n[CI/linux beta (default features)    ]   | checking if : is a manifest tool... no\n[CI/linux stable (default features)  ]   | checking command to parse /usr/bin/nm -B output from gcc object... ok\n[CI/linux stable (default features)  ]   | checking for sysroot... no\n[CI/linux stable (default features)  ]   | checking for a working dd... /usr/bin/dd\n[CI/linux stable (default features)  ]   | checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1\n[CI/Miri test                        ]   | warning: unused import: `std::collections::HashMap`\n[CI/Miri test                        ]   |    --> protobuf/src/reflect/field/mod.rs:566:9\n[CI/Miri test                        ]   |     |\n[CI/Miri test                        ]   | 566 |     use std::collections::HashMap;\n[CI/Miri test                        ]   |     |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n[CI/Miri test                        ]   |     |\n[CI/Miri test                        ]   |     = note: `#[warn(unused_imports)]` on by default\n[CI/Miri test                        ]   | \n[CI/Miri test                        ]   | warning: unused import: `crate::reflect::ReflectValueBox`\n[CI/Miri test                        ]   |    --> protobuf/src/reflect/field/mod.rs:569:9\n[CI/Miri test                        ]   |     |\n[CI/Miri test                        ]   | 569 |     use crate::reflect::ReflectValueBox;\n[CI/Miri test                        ]   |     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[CI/Miri test                        ]   | \n[CI/Miri test                        ]   | warning: unused import: `crate::well_known_types::struct_::Struct`\n[CI/Miri test                        ]   |    --> protobuf/src/reflect/field/mod.rs:570:9\n[CI/Miri test                        ]   |     |\n[CI/Miri test                        ]   | 570 |     use crate::well_known_types::struct_::Struct;\n[CI/Miri test                        ]   |     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[CI/Miri test                        ]   | \n[CI/Miri test                        ]   | warning: unused import: `crate::well_known_types::struct_::Value`\n[CI/Miri test                        ]   |    --> protobuf/src/reflect/field/mod.rs:571:9\n[CI/Miri test                        ]   |     |\n[CI/Miri test                        ]   | 571 |     use crate::well_known_types::struct_::Value;\n[CI/Miri test                        ]   |     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[CI/Miri test                        ]   | \n[CI/linux beta (default features)    ]   | checking for dlfcn.h... yes\n[CI/linux stable (default features)  ]   | checking for mt... no\n[CI/linux beta (default features)    ]   | checking for objdir... .libs\n[CI/linux stable (default features)  ]   | checking if : is a manifest tool... no\n[CI/linux stable (default features)  ]   | checking for dlfcn.h... yes\n[CI/linux stable (default features)  ]   | checking for objdir... .libs\n[CI/linux beta (default features)    ]   | checking if gcc supports -fno-rtti -fno-exceptions... no\n[CI/linux beta (default features)    ]   | checking for gcc option to produce PIC... -fPIC -DPIC\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/descriptor.pb.lo\n[CI/linux beta (default features)    ]   | checking if gcc PIC flag -fPIC -DPIC works... yes\n[CI/linux stable (default features)  ]   | checking if gcc supports -fno-rtti -fno-exceptions... no\n[CI/linux stable (default features)  ]   | checking for gcc option to produce PIC... -fPIC -DPIC\n[CI/linux beta (default features)    ]   | checking if gcc static flag -static works... yes\n[CI/linux stable (default features)  ]   | checking if gcc PIC flag -fPIC -DPIC works... yes\n[CI/linux beta (default features)    ]   | checking if gcc supports -c -o file.o... yes\n[CI/linux beta (default features)    ]   | checking if gcc supports -c -o file.o... (cached) yes\n[CI/linux beta (default features)    ]   | checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux stable (default features)  ]   | checking if gcc static flag -static works... yes\n[CI/linux beta (default features)    ]   | checking whether -lc should be explicitly linked in... no\n[CI/linux stable (default features)  ]   | checking if gcc supports -c -o file.o... yes\n[CI/linux stable (default features)  ]   | checking if gcc supports -c -o file.o... (cached) yes\n[CI/linux stable (default features)  ]   | checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux beta (default features)    ]   | checking dynamic linker characteristics... GNU/Linux ld.so\n[CI/linux beta (default features)    ]   | checking how to hardcode library paths into programs... immediate\n[CI/linux beta (default features)    ]   | checking whether stripping libraries is possible... yes\n[CI/linux beta (default features)    ]   | checking if libtool supports shared libraries... yes\n[CI/linux beta (default features)    ]   | checking whether to build shared libraries... yes\n[CI/linux beta (default features)    ]   | checking whether to build static libraries... yes\n[CI/linux beta (default features)    ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/linux stable (default features)  ]   | checking whether -lc should be explicitly linked in... no\n[CI/linux stable (default features)  ]   | checking dynamic linker characteristics... GNU/Linux ld.so\n[CI/linux stable (default features)  ]   | checking how to hardcode library paths into programs... immediate\n[CI/linux stable (default features)  ]   | checking whether stripping libraries is possible... yes\n[CI/linux stable (default features)  ]   | checking if libtool supports shared libraries... yes\n[CI/linux stable (default features)  ]   | checking whether to build shared libraries... yes\n[CI/linux stable (default features)  ]   | checking whether to build static libraries... yes\n[CI/linux beta (default features)    ]   | checking for ld used by g++... /usr/bin/ld -m elf_x86_64\n[CI/linux stable (default features)  ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/linux beta (default features)    ]   | checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes\n[CI/linux beta (default features)    ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux beta (default features)    ]   | checking for g++ option to produce PIC... -fPIC -DPIC\n[CI/linux stable (default features)  ]   | checking for ld used by g++... /usr/bin/ld -m elf_x86_64\n[CI/linux stable (default features)  ]   | checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes\n[CI/linux stable (default features)  ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux beta (default features)    ]   | checking if g++ PIC flag -fPIC -DPIC works... yes\n[CI/linux stable (default features)  ]   | checking for g++ option to produce PIC... -fPIC -DPIC\n[CI/linux beta (default features)    ]   | checking if g++ static flag -static works... yes\n[CI/linux stable (default features)  ]   | checking if g++ PIC flag -fPIC -DPIC works... yes\n[CI/linux beta (default features)    ]   | checking if g++ supports -c -o file.o... yes\n[CI/linux beta (default features)    ]   | checking if g++ supports -c -o file.o... (cached) yes\n[CI/linux beta (default features)    ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux beta (default features)    ]   | checking dynamic linker characteristics... (cached) GNU/Linux ld.so\n[CI/linux beta (default features)    ]   | checking how to hardcode library paths into programs... immediate\n[CI/linux stable (default features)  ]   | checking if g++ static flag -static works... yes\n[CI/linux beta (default features)    ]   | checking whether the linker supports version scripts... yes\n[CI/linux beta (default features)    ]   | checking for egrep... (cached) /usr/bin/grep -E\n[CI/linux stable (default features)  ]   | checking if g++ supports -c -o file.o... yes\n[CI/linux stable (default features)  ]   | checking if g++ supports -c -o file.o... (cached) yes\n[CI/linux stable (default features)  ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux stable (default features)  ]   | checking dynamic linker characteristics... (cached) GNU/Linux ld.so\n[CI/linux stable (default features)  ]   | checking how to hardcode library paths into programs... immediate\n[CI/linux beta (default features)    ]   | checking for fcntl.h... yes\n[CI/linux beta (default features)    ]   | checking for inttypes.h... (cached) yes\n[CI/linux stable (default features)  ]   | checking whether the linker supports version scripts... yes\n[CI/linux stable (default features)  ]   | checking for egrep... (cached) /usr/bin/grep -E\n[CI/linux beta (default features)    ]   | checking for limits.h... yes\n[CI/linux beta (default features)    ]   | checking for stdlib.h... (cached) yes\n[CI/linux beta (default features)    ]   | checking for unistd.h... (cached) yes\n[CI/linux stable (default features)  ]   | checking for fcntl.h... yes\n[CI/linux stable (default features)  ]   | checking for inttypes.h... (cached) yes\n[CI/linux beta (default features)    ]   | checking for working memcmp... yes\n[CI/linux stable (default features)  ]   | checking for limits.h... yes\n[CI/linux stable (default features)  ]   | checking for stdlib.h... (cached) yes\n[CI/linux stable (default features)  ]   | checking for unistd.h... (cached) yes\n[CI/linux beta (default features)    ]   | checking for working strtod... yes\n[CI/linux stable (default features)  ]   | checking for working memcmp... yes\n[CI/linux beta (default features)    ]   | checking for ftruncate... yes\n[CI/linux stable (default features)  ]   | checking for working strtod... yes\n[CI/linux beta (default features)    ]   | checking for memset... yes\n[CI/linux stable (default features)  ]   | checking for ftruncate... yes\n[CI/linux beta (default features)    ]   | checking for mkdir... yes\n[CI/linux stable (default features)  ]   | checking for memset... yes\n[CI/linux stable (default features)  ]   | checking for mkdir... yes\n[CI/linux beta (default features)    ]   | checking for strchr... yes\n[CI/linux beta (default features)    ]   | checking for strerror... yes\n[CI/linux stable (default features)  ]   | checking for strchr... yes\n[CI/linux stable (default features)  ]   | checking for strerror... yes\n[CI/linux beta (default features)    ]   | checking for strtol... yes\n[CI/linux stable (default features)  ]   | checking for strtol... yes\n[CI/linux beta (default features)    ]   | checking zlib version... ok (1.2.0.4 or later)\n[CI/linux stable (default features)  ]   | checking zlib version... ok (1.2.0.4 or later)\n[CI/linux beta (default features)    ]   | checking for library containing zlibVersion... -lz\n[CI/linux stable (default features)  ]   | checking for library containing zlibVersion... -lz\n[CI/linux beta (default features)    ]   | checking whether g++ supports C++11 features by default... yes\n[CI/linux stable (default features)  ]   | checking whether g++ supports C++11 features by default... yes\n[CI/linux stable (default features)  ]   | checking whether -latomic is needed... no\n[CI/linux stable (default features)  ]   | checking whether gcc is Clang... no\n[CI/linux beta (default features)    ]   | checking whether -latomic is needed... no\n[CI/linux beta (default features)    ]   | checking whether gcc is Clang... no\n[CI/linux stable (default features)  ]   | checking whether pthreads work with \"-pthread\" and \"-lpthread\"... yes\n[CI/linux beta (default features)    ]   | checking whether pthreads work with \"-pthread\" and \"-lpthread\"... yes\n[CI/linux stable (default features)  ]   | checking for joinable pthread attribute... PTHREAD_CREATE_JOINABLE\n[CI/linux stable (default features)  ]   | checking whether more special flags are required for pthreads... no\n[CI/linux beta (default features)    ]   | checking for joinable pthread attribute... PTHREAD_CREATE_JOINABLE\n[CI/linux beta (default features)    ]   | checking whether more special flags are required for pthreads... no\n[CI/linux stable (default features)  ]   | checking for PTHREAD_PRIO_INHERIT... yes\n[CI/linux beta (default features)    ]   | checking for PTHREAD_PRIO_INHERIT... yes\n[CI/linux stable (default features)  ]   | checking the location of hash_map... <unordered_map>\n[CI/linux stable (default features)  ]   | checking whether -llog is needed... no\n[CI/linux beta (default features)    ]   | checking the location of hash_map... <unordered_map>\n[CI/linux beta (default features)    ]   | checking whether -llog is needed... no\n[CI/linux stable (default features)  ]   | checking that generated files are newer than configure... done\n[CI/linux stable (default features)  ]   | configure: creating ./config.status\n[CI/linux beta (default features)    ]   | checking that generated files are newer than configure... done\n[CI/linux beta (default features)    ]   | configure: creating ./config.status\n[CI/Miri test                        ]   | \n[CI/Miri test                        ]   | running 59 tests\n[CI/Miri test                        ]   | test chars::test::test_display_and_debug ... ignored\n[CI/Miri test                        ]   | test coded_input_stream::buf_read_iter::test::eof_at_limit ... ok\n[CI/Miri test                        ]   | test coded_input_stream::buf_read_iter::test_bytes::read_exact_bytes_from_bytes ... ignored\n[CI/Miri test                        ]   | test coded_input_stream::buf_read_iter::test_bytes::read_exact_bytes_from_slice ... ignored\n[CI/Miri test                        ]   | test coded_input_stream::test::test_input_stream_io_bufread ... ok\n[CI/Miri test                        ]   | test coded_input_stream::test::test_input_stream_io_read ... ok\n[CI/Miri test                        ]   | test coded_input_stream::test::test_input_stream_limits ... ok\n[CI/Miri test                        ]   | test coded_input_stream::test::test_input_stream_read_double ... ok\n[CI/linux beta (default features)    ]   | config.status: creating Makefile\n[CI/linux stable (default features)  ]   | config.status: creating Makefile\n[CI/linux beta (default features)    ]   | config.status: creating src/Makefile\n[CI/linux stable (default features)  ]   | config.status: creating src/Makefile\n[CI/Miri test                        ]   | test coded_input_stream::test::test_input_stream_read_float ... ok\n[CI/linux beta (default features)    ]   | config.status: creating benchmarks/Makefile\n[CI/linux stable (default features)  ]   | config.status: creating benchmarks/Makefile\n[CI/linux beta (default features)    ]   | config.status: creating conformance/Makefile\n[CI/linux stable (default features)  ]   | config.status: creating conformance/Makefile\n[CI/linux beta (default features)    ]   | config.status: creating protobuf.pc\n[CI/linux stable (default features)  ]   | config.status: creating protobuf.pc\n[CI/linux beta (default features)    ]   | config.status: creating protobuf-lite.pc\n[CI/linux stable (default features)  ]   | config.status: creating protobuf-lite.pc\n[CI/linux beta (default features)    ]   | config.status: creating config.h\n[CI/Miri test                        ]   | test coded_input_stream::test::test_input_stream_read_int32 ... ok\n[CI/linux stable (default features)  ]   | config.status: creating config.h\n[CI/linux beta (default features)    ]   | config.status: executing depfiles commands\n[CI/linux stable (default features)  ]   | config.status: executing depfiles commands\n[CI/Miri test                        ]   | test coded_input_stream::test::test_input_stream_read_raw_byte ... ok\n[CI/Miri test                        ]   | test coded_input_stream::test::test_input_stream_read_raw_bytes ... ok\n[CI/Miri test                        ]   | test coded_input_stream::test::test_input_stream_read_raw_bytes_into_huge ... ignored\n[CI/Miri test                        ]   | test coded_input_stream::test::test_input_stream_read_raw_varint ... ok\n[CI/Miri test                        ]   | test coded_input_stream::test::test_input_stream_read_raw_varint_out_of_range ... ok\n[CI/Miri test                        ]   | test coded_input_stream::test::test_input_stream_read_raw_varint_pos ... ok\n[CI/Miri test                        ]   | test coded_input_stream::test::test_input_stream_read_raw_varint_too_long ... ok\n[CI/Miri test                        ]   | test coded_input_stream::test::test_input_stream_read_raw_varint_unexpected_eof ... ok\n[CI/Miri test                        ]   | test coded_input_stream::test::test_input_stream_skip_raw_bytes ... ok\n[CI/Miri test                        ]   | test coded_input_stream::test::test_skip_group ... ok\n[CI/Miri test                        ]   | test coded_output_stream::test::flush_for_vec_does_not_allocate_more ... ok\n[CI/Miri test                        ]   | test coded_output_stream::test::test_output_stream_io_write ... ok\n[CI/Miri test                        ]   | test coded_output_stream::test::test_output_stream_write_double_no_tag ... ok\n[CI/Miri test                        ]   | test coded_output_stream::test::test_output_stream_write_float_no_tag ... ok\n[CI/Miri test                        ]   | test coded_output_stream::test::test_output_stream_write_int32_no_tag ... ok\n[CI/linux stable (default features)  ]   | config.status: executing libtool commands\n[CI/linux stable (default features)  ]   | === configuring in third_party/googletest (/home/runneradmin/protobuf-3.19.4/third_party/googletest)\n[CI/linux stable (default features)  ]   | configure: running /bin/bash ./configure --disable-option-checking '--prefix=/home/runneradmin/pb'  --cache-file=/dev/null --srcdir=.\n[CI/linux beta (default features)    ]   | config.status: executing libtool commands\n[CI/linux beta (default features)    ]   | === configuring in third_party/googletest (/home/runneradmin/protobuf-3.19.4/third_party/googletest)\n[CI/linux beta (default features)    ]   | configure: running /bin/bash ./configure --disable-option-checking '--prefix=/home/runneradmin/pb'  --cache-file=/dev/null --srcdir=.\n[CI/linux stable (default features)  ]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/linux stable (default features)  ]   | checking whether build environment is sane... yes\n[CI/linux stable (default features)  ]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/linux stable (default features)  ]   | checking for gawk... gawk\n[CI/linux stable (default features)  ]   | checking whether make sets $(MAKE)... yes\n[CI/linux stable (default features)  ]   | checking whether make supports nested variables... yes\n[CI/linux beta (default features)    ]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/linux beta (default features)    ]   | checking whether build environment is sane... yes\n[CI/linux beta (default features)    ]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/linux beta (default features)    ]   | checking for gawk... gawk\n[CI/linux beta (default features)    ]   | checking whether make sets $(MAKE)... yes\n[CI/linux beta (default features)    ]   | checking whether make supports nested variables... yes\n[CI/Miri test                        ]   | test coded_output_stream::test::test_output_stream_write_int64_no_tag ... ok\n[CI/Miri test                        ]   | test coded_output_stream::test::test_output_stream_write_raw_byte ... ok\n[CI/Miri test                        ]   | test coded_output_stream::test::test_output_stream_write_raw_bytes ... ignored\n[CI/Miri test                        ]   | test coded_output_stream::test::test_output_stream_write_raw_little_endian32 ... ok\n[CI/linux stable (default features)  ]   | checking that generated files are newer than configure... done\n[CI/linux stable (default features)  ]   | configure: creating ./config.status\n[CI/linux beta (default features)    ]   | checking that generated files are newer than configure... done\n[CI/linux beta (default features)    ]   | configure: creating ./config.status\n[CI/linux stable (default features)  ]   | config.status: creating Makefile\n[CI/linux stable (default features)  ]   | === configuring in googletest (/home/runneradmin/protobuf-3.19.4/third_party/googletest/googletest)\n[CI/linux stable (default features)  ]   | configure: running /bin/bash ./configure --disable-option-checking '--prefix=/home/runneradmin/pb'  --cache-file=/dev/null --srcdir=.\n[CI/linux beta (default features)    ]   | config.status: creating Makefile\n[CI/linux beta (default features)    ]   | === configuring in googletest (/home/runneradmin/protobuf-3.19.4/third_party/googletest/googletest)\n[CI/linux beta (default features)    ]   | configure: running /bin/bash ./configure --disable-option-checking '--prefix=/home/runneradmin/pb'  --cache-file=/dev/null --srcdir=.\n[CI/Miri test                        ]   | test coded_output_stream::test::test_output_stream_write_raw_little_endian64 ... ok\n[CI/linux stable (default features)  ]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/linux stable (default features)  ]   | checking whether build environment is sane... yes\n[CI/linux stable (default features)  ]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/linux stable (default features)  ]   | checking for gawk... gawk\n[CI/linux stable (default features)  ]   | checking whether make sets $(MAKE)... yes\n[CI/linux stable (default features)  ]   | checking whether make supports nested variables... yes\n[CI/linux stable (default features)  ]   | checking for gcc... gcc\n[CI/linux beta (default features)    ]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/linux beta (default features)    ]   | checking whether build environment is sane... yes\n[CI/linux beta (default features)    ]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/linux beta (default features)    ]   | checking for gawk... gawk\n[CI/linux beta (default features)    ]   | checking whether make sets $(MAKE)... yes\n[CI/linux beta (default features)    ]   | checking whether make supports nested variables... yes\n[CI/linux beta (default features)    ]   | checking for gcc... gcc\n[CI/linux stable (default features)  ]   | checking whether the C compiler works... yes\n[CI/linux stable (default features)  ]   | checking for C compiler default output file name... a.out\n[CI/linux stable (default features)  ]   | checking for suffix of executables... \n[CI/linux beta (default features)    ]   | checking whether the C compiler works... yes\n[CI/linux beta (default features)    ]   | checking for C compiler default output file name... a.out\n[CI/linux stable (default features)  ]   | checking whether we are cross compiling... no\n[CI/linux stable (default features)  ]   | checking for suffix of object files... o\n[CI/linux beta (default features)    ]   | checking for suffix of executables... \n[CI/linux stable (default features)  ]   | checking whether the compiler supports GNU C... yes\n[CI/linux stable (default features)  ]   | checking whether gcc accepts -g... yes\n[CI/linux beta (default features)    ]   | checking whether we are cross compiling... no\n[CI/Miri test                        ]   | test coded_output_stream::test::test_output_stream_write_raw_varint32 ... ok\n[CI/linux stable (default features)  ]   | checking for gcc option to enable C11 features... none needed\n[CI/linux beta (default features)    ]   | checking for suffix of object files... o\n[CI/linux beta (default features)    ]   | checking whether the compiler supports GNU C... yes\n[CI/linux stable (default features)  ]   | checking whether gcc understands -c and -o together... yes\n[CI/linux beta (default features)    ]   | checking whether gcc accepts -g... yes\n[CI/linux stable (default features)  ]   | checking whether make supports the include directive... yes (GNU style)\n[CI/linux beta (default features)    ]   | checking for gcc option to enable C11 features... none needed\n[CI/linux stable (default features)  ]   | checking dependency style of gcc... gcc3\n[CI/linux stable (default features)  ]   | checking for g++... g++\n[CI/linux beta (default features)    ]   | checking whether gcc understands -c and -o together... yes\n[CI/linux stable (default features)  ]   | checking whether the compiler supports GNU C++... yes\n[CI/linux beta (default features)    ]   | checking whether make supports the include directive... yes (GNU style)\n[CI/linux stable (default features)  ]   | checking whether g++ accepts -g... yes\n[CI/linux beta (default features)    ]   | checking dependency style of gcc... gcc3\n[CI/linux beta (default features)    ]   | checking for g++... g++\n[CI/linux stable (default features)  ]   | checking for g++ option to enable C++11 features... none needed\n[CI/linux beta (default features)    ]   | checking whether the compiler supports GNU C++... yes\n[CI/linux beta (default features)    ]   | checking whether g++ accepts -g... yes\n[CI/linux stable (default features)  ]   | checking dependency style of g++... gcc3\n[CI/linux stable (default features)  ]   | checking build system type... x86_64-pc-linux-gnu\n[CI/linux stable (default features)  ]   | checking host system type... x86_64-pc-linux-gnu\n[CI/linux beta (default features)    ]   | checking for g++ option to enable C++11 features... none needed\n[CI/linux stable (default features)  ]   | checking how to print strings... printf\n[CI/linux stable (default features)  ]   | checking for a sed that does not truncate output... /usr/bin/sed\n[CI/Miri test                        ]   | test coded_output_stream::test::test_output_stream_write_raw_varint64 ... ok\n[CI/linux stable (default features)  ]   | checking for grep that handles long lines and -e... /usr/bin/grep\n[CI/linux stable (default features)  ]   | checking for egrep... /usr/bin/grep -E\n[CI/linux stable (default features)  ]   | checking for fgrep... /usr/bin/grep -F\n[CI/linux beta (default features)    ]   | checking dependency style of g++... gcc3\n[CI/linux stable (default features)  ]   | checking for ld used by gcc... /usr/bin/ld\n[CI/linux stable (default features)  ]   | checking if the linker (/usr/bin/ld) is GNU ld... yes\n[CI/linux stable (default features)  ]   | checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\n[CI/linux stable (default features)  ]   | checking the name lister (/usr/bin/nm -B) interface... BSD nm\n[CI/linux stable (default features)  ]   | checking whether ln -s works... yes\n[CI/linux stable (default features)  ]   | checking the maximum length of command line arguments... 1572864\n[CI/linux stable (default features)  ]   | checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\n[CI/linux stable (default features)  ]   | checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\n[CI/linux stable (default features)  ]   | checking for /usr/bin/ld option to reload object files... -r\n[CI/linux stable (default features)  ]   | checking for objdump... objdump\n[CI/linux stable (default features)  ]   | checking how to recognize dependent libraries... pass_all\n[CI/linux stable (default features)  ]   | checking for dlltool... no\n[CI/linux stable (default features)  ]   | checking how to associate runtime and link libraries... printf %s\\n\n[CI/linux stable (default features)  ]   | checking for ar... ar\n[CI/linux beta (default features)    ]   | checking build system type... x86_64-pc-linux-gnu\n[CI/linux beta (default features)    ]   | checking host system type... x86_64-pc-linux-gnu\n[CI/Miri test                        ]   | test coded_output_stream::test::test_output_stream_write_tag ... ok\n[CI/linux stable (default features)  ]   | checking for archiver @FILE support... @\n[CI/linux stable (default features)  ]   | checking for strip... strip\n[CI/linux beta (default features)    ]   | checking how to print strings... printf\n[CI/linux stable (default features)  ]   | checking for ranlib... ranlib\n[CI/linux beta (default features)    ]   | checking for a sed that does not truncate output... /usr/bin/sed\n[CI/linux beta (default features)    ]   | checking for grep that handles long lines and -e... /usr/bin/grep\n[CI/linux beta (default features)    ]   | checking for egrep... /usr/bin/grep -E\n[CI/linux beta (default features)    ]   | checking for fgrep... /usr/bin/grep -F\n[CI/linux beta (default features)    ]   | checking for ld used by gcc... /usr/bin/ld\n[CI/linux beta (default features)    ]   | checking if the linker (/usr/bin/ld) is GNU ld... yes\n[CI/Miri test                        ]   | test coded_output_stream::test::total_bytes_written_to_bytes ... ok\n[CI/linux beta (default features)    ]   | checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\n[CI/linux beta (default features)    ]   | checking the name lister (/usr/bin/nm -B) interface... BSD nm\n[CI/linux beta (default features)    ]   | checking whether ln -s works... yes\n[CI/linux beta (default features)    ]   | checking the maximum length of command line arguments... 1572864\n[CI/linux beta (default features)    ]   | checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\n[CI/linux beta (default features)    ]   | checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\n[CI/linux beta (default features)    ]   | checking for /usr/bin/ld option to reload object files... -r\n[CI/linux beta (default features)    ]   | checking for objdump... objdump\n[CI/linux beta (default features)    ]   | checking how to recognize dependent libraries... pass_all\n[CI/linux beta (default features)    ]   | checking for dlltool... no\n[CI/linux beta (default features)    ]   | checking how to associate runtime and link libraries... printf %s\\n\n[CI/linux beta (default features)    ]   | checking for ar... ar\n[CI/linux stable (default features)  ]   | checking command to parse /usr/bin/nm -B output from gcc object... ok\n[CI/linux stable (default features)  ]   | checking for sysroot... no\n[CI/linux beta (default features)    ]   | checking for archiver @FILE support... @\n[CI/linux stable (default features)  ]   | checking for a working dd... /usr/bin/dd\n[CI/linux beta (default features)    ]   | checking for strip... strip\n[CI/linux beta (default features)    ]   | checking for ranlib... ranlib\n[CI/linux stable (default features)  ]   | checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1\n[CI/Miri test                        ]   | test coded_output_stream::test::total_bytes_written_to_vec ... ok\n[CI/linux stable (default features)  ]   | checking for mt... no\n[CI/linux stable (default features)  ]   | checking if : is a manifest tool... no\n[CI/linux stable (default features)  ]   | checking for stdio.h... yes\n[CI/Miri test                        ]   | test error::test::error_size ... ok\n[CI/linux stable (default features)  ]   | checking for stdlib.h... yes\n[CI/linux beta (default features)    ]   | checking command to parse /usr/bin/nm -B output from gcc object... ok\n[CI/linux beta (default features)    ]   | checking for sysroot... no\n[CI/linux beta (default features)    ]   | checking for a working dd... /usr/bin/dd\n[CI/linux beta (default features)    ]   | checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1\n[CI/linux beta (default features)    ]   | checking for mt... no\n[CI/linux stable (default features)  ]   | checking for string.h... yes\n[CI/linux beta (default features)    ]   | checking if : is a manifest tool... no\n[CI/Miri test                        ]   | test hex::test::test_decode_hex ... ok\n[CI/linux beta (default features)    ]   | checking for stdio.h... yes\n[CI/linux stable (default features)  ]   | checking for inttypes.h... yes\n[CI/linux beta (default features)    ]   | checking for stdlib.h... yes\n[CI/linux stable (default features)  ]   | checking for stdint.h... yes\n[CI/Miri test                        ]   | test hex::test::test_encode_hex ... ok\n[CI/linux beta (default features)    ]   | checking for string.h... yes\n[CI/linux stable (default features)  ]   | checking for strings.h... yes\n[CI/linux beta (default features)    ]   | checking for inttypes.h... yes\n[CI/linux stable (default features)  ]   | checking for sys/stat.h... yes\n[CI/Miri test                        ]   | test message_dyn::test::downcast_box ... ok\n[CI/linux beta (default features)    ]   | checking for stdint.h... yes\n[CI/linux stable (default features)  ]   | checking for sys/types.h... yes\n[CI/linux beta (default features)    ]   | checking for strings.h... yes\n[CI/linux stable (default features)  ]   | checking for unistd.h... yes\n[CI/Miri test                        ]   | test message_dyn::test::downcast_mut ... ok\n[CI/linux beta (default features)    ]   | checking for sys/stat.h... yes\n[CI/linux stable (default features)  ]   | checking for dlfcn.h... yes\n[CI/linux stable (default features)  ]   | checking for objdir... .libs\n[CI/linux beta (default features)    ]   | checking for sys/types.h... yes\n[CI/Miri test                        ]   | test message_dyn::test::downcast_ref ... ok\n[CI/linux beta (default features)    ]   | checking for unistd.h... yes\n[CI/Miri test                        ]   | test reflect::enums::test::enclosing_message ... ignored\n[CI/linux stable (default features)  ]   | checking if gcc supports -fno-rtti -fno-exceptions... no\n[CI/linux stable (default features)  ]   | checking for gcc option to produce PIC... -fPIC -DPIC\n[CI/linux beta (default features)    ]   | checking for dlfcn.h... yes\n[CI/linux beta (default features)    ]   | checking for objdir... .libs\n[CI/Miri test                        ]   | test reflect::enums::test::to_string ... ignored\n[CI/linux stable (default features)  ]   | checking if gcc PIC flag -fPIC -DPIC works... yes\n[CI/Miri test                        ]   | test reflect::field::test::display ... ignored\n[CI/Miri test                        ]   | test reflect::file::test::eq ... ignored\n[CI/Miri test                        ]   | test reflect::message::test::enclosing_message ... ignored\n[CI/linux stable (default features)  ]   | checking if gcc static flag -static works... yes\n[CI/linux beta (default features)    ]   | checking if gcc supports -fno-rtti -fno-exceptions... no\n[CI/linux beta (default features)    ]   | checking for gcc option to produce PIC... -fPIC -DPIC\n[CI/Miri test                        ]   | test reflect::message::test::nested_enums ... ignored\n[CI/linux beta (default features)    ]   | checking if gcc PIC flag -fPIC -DPIC works... yes\n[CI/linux stable (default features)  ]   | checking if gcc supports -c -o file.o... yes\n[CI/linux stable (default features)  ]   | checking if gcc supports -c -o file.o... (cached) yes\n[CI/Miri test                        ]   | test reflect::message::test::nested_messages ... ignored\n[CI/linux stable (default features)  ]   | checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux stable (default features)  ]   | checking whether -lc should be explicitly linked in... no\n[CI/Miri test                        ]   | test reflect::name::test_protobuf_name_starts_with_package ... ok\n[CI/linux beta (default features)    ]   | checking if gcc static flag -static works... yes\n[CI/linux stable (default features)  ]   | checking dynamic linker characteristics... GNU/Linux ld.so\n[CI/linux stable (default features)  ]   | checking how to hardcode library paths into programs... immediate\n[CI/linux stable (default features)  ]   | checking whether stripping libraries is possible... yes\n[CI/linux stable (default features)  ]   | checking if libtool supports shared libraries... yes\n[CI/linux stable (default features)  ]   | checking whether to build shared libraries... yes\n[CI/linux stable (default features)  ]   | checking whether to build static libraries... yes\n[CI/linux beta (default features)    ]   | checking if gcc supports -c -o file.o... yes\n[CI/linux beta (default features)    ]   | checking if gcc supports -c -o file.o... (cached) yes\n[CI/linux beta (default features)    ]   | checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/Miri test                        ]   | test reflect::value::value_box::test::reflect_value_box_downcast_primitive ... ok\n[CI/linux stable (default features)  ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/linux beta (default features)    ]   | checking whether -lc should be explicitly linked in... no\n[CI/Miri test                        ]   | test reflect::value::value_box::test::reflect_value_box_downcast_string ... ok\n[CI/linux beta (default features)    ]   | checking dynamic linker characteristics... GNU/Linux ld.so\n[CI/linux beta (default features)    ]   | checking how to hardcode library paths into programs... immediate\n[CI/linux beta (default features)    ]   | checking whether stripping libraries is possible... yes\n[CI/linux beta (default features)    ]   | checking if libtool supports shared libraries... yes\n[CI/linux beta (default features)    ]   | checking whether to build shared libraries... yes\n[CI/linux beta (default features)    ]   | checking whether to build static libraries... yes\n[CI/linux beta (default features)    ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/linux stable (default features)  ]   | checking for ld used by g++... /usr/bin/ld -m elf_x86_64\n[CI/linux stable (default features)  ]   | checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes\n[CI/linux stable (default features)  ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/Miri test                        ]   | test unknown::test::unknown_fields_hash ... ok\n[CI/linux stable (default features)  ]   | checking for g++ option to produce PIC... -fPIC -DPIC\n[CI/linux beta (default features)    ]   | checking for ld used by g++... /usr/bin/ld -m elf_x86_64\n[CI/linux beta (default features)    ]   | checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes\n[CI/linux beta (default features)    ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux stable (default features)  ]   | checking if g++ PIC flag -fPIC -DPIC works... yes\n[CI/linux beta (default features)    ]   | checking for g++ option to produce PIC... -fPIC -DPIC\n[CI/linux stable (default features)  ]   | checking if g++ static flag -static works... yes\n[CI/Miri test                        ]   | test unknown::test::unknown_fields_iteration_order_deterministic ... ok\n[CI/linux beta (default features)    ]   | checking if g++ PIC flag -fPIC -DPIC works... yes\n[CI/linux stable (default features)  ]   | checking if g++ supports -c -o file.o... yes\n[CI/linux stable (default features)  ]   | checking if g++ supports -c -o file.o... (cached) yes\n[CI/linux stable (default features)  ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux stable (default features)  ]   | checking dynamic linker characteristics... (cached) GNU/Linux ld.so\n[CI/linux stable (default features)  ]   | checking how to hardcode library paths into programs... immediate\n[CI/linux stable (default features)  ]   | checking for python... /usr/local/bin/python\n[CI/Miri test                        ]   | test varint::decode::tests::test_decode_varint32 ... ok\n[CI/linux stable (default features)  ]   | checking for the pthreads library -lpthreads... no\n[CI/linux beta (default features)    ]   | checking if g++ static flag -static works... yes\n[CI/linux beta (default features)    ]   | checking if g++ supports -c -o file.o... yes\n[CI/linux beta (default features)    ]   | checking if g++ supports -c -o file.o... (cached) yes\n[CI/linux beta (default features)    ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux beta (default features)    ]   | checking dynamic linker characteristics... (cached) GNU/Linux ld.so\n[CI/linux beta (default features)    ]   | checking how to hardcode library paths into programs... immediate\n[CI/linux beta (default features)    ]   | checking for python... /usr/local/bin/python\n[CI/linux stable (default features)  ]   | checking whether pthreads work without any flags... no\n[CI/Miri test                        ]   | test varint::decode::tests::test_decode_varint64 ... ok\n[CI/linux stable (default features)  ]   | checking whether pthreads work with -Kthread... no\n[CI/linux stable (default features)  ]   | checking whether pthreads work with -kthread... no\n[CI/linux beta (default features)    ]   | checking for the pthreads library -lpthreads... no\n[CI/linux stable (default features)  ]   | checking for the pthreads library -llthread... no\n[CI/linux beta (default features)    ]   | checking whether pthreads work without any flags... no\n[CI/linux beta (default features)    ]   | checking whether pthreads work with -Kthread... no\n[CI/linux stable (default features)  ]   | checking whether pthreads work with -pthread... yes\n[CI/linux beta (default features)    ]   | checking whether pthreads work with -kthread... no\n[CI/linux stable (default features)  ]   | checking for joinable pthread attribute... PTHREAD_CREATE_JOINABLE\n[CI/linux stable (default features)  ]   | checking if more special flags are required for pthreads... no\n[CI/linux beta (default features)    ]   | checking for the pthreads library -llthread... no\n[CI/linux stable (default features)  ]   | checking whether to check for GCC pthread/shared inconsistencies... yes\n[CI/linux beta (default features)    ]   | checking whether pthreads work with -pthread... yes\n[CI/linux stable (default features)  ]   | checking whether -pthread is sufficient with -shared... yes\n[CI/linux beta (default features)    ]   | checking for joinable pthread attribute... PTHREAD_CREATE_JOINABLE\n[CI/linux beta (default features)    ]   | checking if more special flags are required for pthreads... no\n[CI/linux stable (default features)  ]   | checking that generated files are newer than configure... done\n[CI/linux stable (default features)  ]   | configure: creating ./config.status\n[CI/linux beta (default features)    ]   | checking whether to check for GCC pthread/shared inconsistencies... yes\n[CI/Miri test                        ]   | test varint::encode::test::test_encoded_varint64_len ... ok\n[CI/linux beta (default features)    ]   | checking whether -pthread is sufficient with -shared... yes\n[CI/linux beta (default features)    ]   | checking that generated files are newer than configure... done\n[CI/linux beta (default features)    ]   | configure: creating ./config.status\n[CI/Miri test                        ]   | test well_known_types_util::duration::test::to_from_duration ... ok\n[CI/Miri test                        ]   | test well_known_types_util::timestamp::test::to_from_system_time ... ok\n[CI/Miri test                        ]   | test zigzag::test::test_zig_zag ... ok\n[CI/Miri test                        ]   | \n[CI/Miri test                        ]   | test result: ok. 47 passed; 0 failed; 12 ignored; 0 measured; 0 filtered out\n[CI/Miri test                        ]   | \n[CI/Miri test                        ]   \u2705  Success - Main cargo-miri-test\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/descriptor_database.lo\n[CI/linux stable (default features)  ]   | config.status: creating Makefile\n[CI/linux stable (default features)  ]   | config.status: creating scripts/gtest-config\n[CI/linux stable (default features)  ]   | config.status: creating build-aux/config.h\n[CI/linux stable (default features)  ]   | config.status: executing depfiles commands\n[CI/linux beta (default features)    ]   | config.status: creating Makefile\n[CI/linux beta (default features)    ]   | config.status: creating scripts/gtest-config\n[CI/linux beta (default features)    ]   | config.status: creating build-aux/config.h\n[CI/linux beta (default features)    ]   | config.status: executing depfiles commands\n[CI/linux stable (default features)  ]   | config.status: executing libtool commands\n[CI/linux stable (default features)  ]   | === configuring in googlemock (/home/runneradmin/protobuf-3.19.4/third_party/googletest/googlemock)\n[CI/linux stable (default features)  ]   | configure: running /bin/bash ./configure --disable-option-checking '--prefix=/home/runneradmin/pb'  --cache-file=/dev/null --srcdir=.\n[CI/linux beta (default features)    ]   | config.status: executing libtool commands\n[CI/linux beta (default features)    ]   | === configuring in googlemock (/home/runneradmin/protobuf-3.19.4/third_party/googletest/googlemock)\n[CI/linux beta (default features)    ]   | configure: running /bin/bash ./configure --disable-option-checking '--prefix=/home/runneradmin/pb'  --cache-file=/dev/null --srcdir=.\n[CI/linux stable (default features)  ]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/linux stable (default features)  ]   | checking whether build environment is sane... yes\n[CI/linux stable (default features)  ]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/linux stable (default features)  ]   | checking for gawk... gawk\n[CI/linux stable (default features)  ]   | checking whether make sets $(MAKE)... yes\n[CI/linux stable (default features)  ]   | checking whether make supports nested variables... yes\n[CI/linux stable (default features)  ]   | checking for gcc... gcc\n[CI/linux beta (default features)    ]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/linux beta (default features)    ]   | checking whether build environment is sane... yes\n[CI/linux beta (default features)    ]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/linux beta (default features)    ]   | checking for gawk... gawk\n[CI/linux beta (default features)    ]   | checking whether make sets $(MAKE)... yes\n[CI/linux beta (default features)    ]   | checking whether make supports nested variables... yes\n[CI/linux beta (default features)    ]   | checking for gcc... gcc\n[CI/linux stable (default features)  ]   | checking whether the C compiler works... yes\n[CI/linux stable (default features)  ]   | checking for C compiler default output file name... a.out\n[CI/linux stable (default features)  ]   | checking for suffix of executables... \n[CI/linux beta (default features)    ]   | checking whether the C compiler works... yes\n[CI/linux beta (default features)    ]   | checking for C compiler default output file name... a.out\n[CI/linux stable (default features)  ]   | checking whether we are cross compiling... no\n[CI/linux beta (default features)    ]   | checking for suffix of executables... \n[CI/Miri test                        ] \ud83c\udfc1  Job succeeded\n[CI/linux stable (default features)  ]   | checking for suffix of object files... o\n[CI/linux stable (default features)  ]   | checking whether the compiler supports GNU C... yes\n[CI/linux beta (default features)    ]   | checking whether we are cross compiling... no\n[CI/linux stable (default features)  ]   | checking whether gcc accepts -g... yes\n[CI/linux beta (default features)    ]   | checking for suffix of object files... o\n[CI/linux stable (default features)  ]   | checking for gcc option to enable C11 features... none needed\n[CI/linux beta (default features)    ]   | checking whether the compiler supports GNU C... yes\n[CI/linux beta (default features)    ]   | checking whether gcc accepts -g... yes\n[CI/linux stable (default features)  ]   | checking whether gcc understands -c and -o together... yes\n[CI/linux stable (default features)  ]   | checking whether make supports the include directive... yes (GNU style)\n[CI/linux beta (default features)    ]   | checking for gcc option to enable C11 features... none needed\n[CI/linux beta (default features)    ]   | checking whether gcc understands -c and -o together... yes\n[CI/linux stable (default features)  ]   | checking dependency style of gcc... gcc3\n[CI/linux stable (default features)  ]   | checking for g++... g++\n[CI/linux beta (default features)    ]   | checking whether make supports the include directive... yes (GNU style)\n[CI/linux beta (default features)    ]   | checking dependency style of gcc... gcc3\n[CI/linux beta (default features)    ]   | checking for g++... g++\n[CI/linux stable (default features)  ]   | checking whether the compiler supports GNU C++... yes\n[CI/linux stable (default features)  ]   | checking whether g++ accepts -g... yes\n[CI/linux beta (default features)    ]   | checking whether the compiler supports GNU C++... yes\n[CI/linux beta (default features)    ]   | checking whether g++ accepts -g... yes\n[CI/linux stable (default features)  ]   | checking for g++ option to enable C++11 features... none needed\n[CI/linux beta (default features)    ]   | checking for g++ option to enable C++11 features... none needed\n[CI/linux stable (default features)  ]   | checking dependency style of g++... gcc3\n[CI/linux beta (default features)    ]   | checking dependency style of g++... gcc3\n[CI/linux stable (default features)  ]   | checking build system type... x86_64-pc-linux-gnu\n[CI/linux stable (default features)  ]   | checking host system type... x86_64-pc-linux-gnu\n[CI/linux stable (default features)  ]   | checking how to print strings... printf\n[CI/linux stable (default features)  ]   | checking for a sed that does not truncate output... /usr/bin/sed\n[CI/linux stable (default features)  ]   | checking for grep that handles long lines and -e... /usr/bin/grep\n[CI/linux stable (default features)  ]   | checking for egrep... /usr/bin/grep -E\n[CI/linux beta (default features)    ]   | checking build system type... x86_64-pc-linux-gnu\n[CI/linux beta (default features)    ]   | checking host system type... x86_64-pc-linux-gnu\n[CI/linux stable (default features)  ]   | checking for fgrep... /usr/bin/grep -F\n[CI/linux stable (default features)  ]   | checking for ld used by gcc... /usr/bin/ld\n[CI/linux stable (default features)  ]   | checking if the linker (/usr/bin/ld) is GNU ld... yes\n[CI/linux stable (default features)  ]   | checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\n[CI/linux beta (default features)    ]   | checking how to print strings... printf\n[CI/linux beta (default features)    ]   | checking for a sed that does not truncate output... /usr/bin/sed\n[CI/linux beta (default features)    ]   | checking for grep that handles long lines and -e... /usr/bin/grep\n[CI/linux stable (default features)  ]   | checking the name lister (/usr/bin/nm -B) interface... BSD nm\n[CI/linux stable (default features)  ]   | checking whether ln -s works... yes\n[CI/linux beta (default features)    ]   | checking for egrep... /usr/bin/grep -E\n[CI/linux beta (default features)    ]   | checking for fgrep... /usr/bin/grep -F\n[CI/linux stable (default features)  ]   | checking the maximum length of command line arguments... 1572864\n[CI/linux stable (default features)  ]   | checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\n[CI/linux stable (default features)  ]   | checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\n[CI/linux beta (default features)    ]   | checking for ld used by gcc... /usr/bin/ld\n[CI/linux stable (default features)  ]   | checking for /usr/bin/ld option to reload object files... -r\n[CI/linux stable (default features)  ]   | checking for objdump... objdump\n[CI/linux stable (default features)  ]   | checking how to recognize dependent libraries... pass_all\n[CI/linux stable (default features)  ]   | checking for dlltool... no\n[CI/linux stable (default features)  ]   | checking how to associate runtime and link libraries... printf %s\\n\n[CI/linux beta (default features)    ]   | checking if the linker (/usr/bin/ld) is GNU ld... yes\n[CI/linux stable (default features)  ]   | checking for ar... ar\n[CI/linux beta (default features)    ]   | checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\n[CI/linux beta (default features)    ]   | checking the name lister (/usr/bin/nm -B) interface... BSD nm\n[CI/linux beta (default features)    ]   | checking whether ln -s works... yes\n[CI/linux beta (default features)    ]   | checking the maximum length of command line arguments... 1572864\n[CI/linux beta (default features)    ]   | checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\n[CI/linux beta (default features)    ]   | checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\n[CI/linux beta (default features)    ]   | checking for /usr/bin/ld option to reload object files... -r\n[CI/linux beta (default features)    ]   | checking for objdump... objdump\n[CI/linux beta (default features)    ]   | checking how to recognize dependent libraries... pass_all\n[CI/linux beta (default features)    ]   | checking for dlltool... no\n[CI/linux beta (default features)    ]   | checking how to associate runtime and link libraries... printf %s\\n\n[CI/linux beta (default features)    ]   | checking for ar... ar\n[CI/linux stable (default features)  ]   | checking for archiver @FILE support... @\n[CI/linux stable (default features)  ]   | checking for strip... strip\n[CI/linux stable (default features)  ]   | checking for ranlib... ranlib\n[CI/linux beta (default features)    ]   | checking for archiver @FILE support... @\n[CI/linux beta (default features)    ]   | checking for strip... strip\n[CI/linux beta (default features)    ]   | checking for ranlib... ranlib\n[CI/linux stable (default features)  ]   | checking command to parse /usr/bin/nm -B output from gcc object... ok\n[CI/linux stable (default features)  ]   | checking for sysroot... no\n[CI/linux stable (default features)  ]   | checking for a working dd... /usr/bin/dd\n[CI/linux stable (default features)  ]   | checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1\n[CI/linux beta (default features)    ]   | checking command to parse /usr/bin/nm -B output from gcc object... ok\n[CI/linux stable (default features)  ]   | checking for mt... no\n[CI/linux beta (default features)    ]   | checking for sysroot... no\n[CI/linux stable (default features)  ]   | checking if : is a manifest tool... no\n[CI/linux beta (default features)    ]   | checking for a working dd... /usr/bin/dd\n[CI/linux beta (default features)    ]   | checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1\n[CI/linux beta (default features)    ]   | checking for mt... no\n[CI/linux stable (default features)  ]   | checking for stdio.h... yes\n[CI/linux beta (default features)    ]   | checking if : is a manifest tool... no\n[CI/linux beta (default features)    ]   | checking for stdio.h... yes\n[CI/linux stable (default features)  ]   | checking for stdlib.h... yes\n[CI/linux beta (default features)    ]   | checking for stdlib.h... yes\n[CI/linux stable (default features)  ]   | checking for string.h... yes\n[CI/linux beta (default features)    ]   | checking for string.h... yes\n[CI/linux stable (default features)  ]   | checking for inttypes.h... yes\n[CI/linux beta (default features)    ]   | checking for inttypes.h... yes\n[CI/linux stable (default features)  ]   | checking for stdint.h... yes\n[CI/linux beta (default features)    ]   | checking for stdint.h... yes\n[CI/linux stable (default features)  ]   | checking for strings.h... yes\n[CI/linux beta (default features)    ]   | checking for strings.h... yes\n[CI/linux stable (default features)  ]   | checking for sys/stat.h... yes\n[CI/linux beta (default features)    ]   | checking for sys/stat.h... yes\n[CI/linux stable (default features)  ]   | checking for sys/types.h... yes\n[CI/linux beta (default features)    ]   | checking for sys/types.h... yes\n[CI/linux stable (default features)  ]   | checking for unistd.h... yes\n[CI/linux beta (default features)    ]   | checking for unistd.h... yes\n[CI/linux stable (default features)  ]   | checking for dlfcn.h... yes\n[CI/linux stable (default features)  ]   | checking for objdir... .libs\n[CI/linux beta (default features)    ]   | checking for dlfcn.h... yes\n[CI/linux beta (default features)    ]   | checking for objdir... .libs\n[CI/linux stable (default features)  ]   | checking if gcc supports -fno-rtti -fno-exceptions... no\n[CI/linux stable (default features)  ]   | checking for gcc option to produce PIC... -fPIC -DPIC\n[CI/linux beta (default features)    ]   | checking if gcc supports -fno-rtti -fno-exceptions... no\n[CI/linux beta (default features)    ]   | checking for gcc option to produce PIC... -fPIC -DPIC\n[CI/linux stable (default features)  ]   | checking if gcc PIC flag -fPIC -DPIC works... yes\n[CI/linux beta (default features)    ]   | checking if gcc PIC flag -fPIC -DPIC works... yes\n[CI/linux stable (default features)  ]   | checking if gcc static flag -static works... yes\n[CI/linux beta (default features)    ]   | checking if gcc static flag -static works... yes\n[CI/linux stable (default features)  ]   | checking if gcc supports -c -o file.o... yes\n[CI/linux stable (default features)  ]   | checking if gcc supports -c -o file.o... (cached) yes\n[CI/linux stable (default features)  ]   | checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux beta (default features)    ]   | checking if gcc supports -c -o file.o... yes\n[CI/linux beta (default features)    ]   | checking if gcc supports -c -o file.o... (cached) yes\n[CI/linux beta (default features)    ]   | checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux stable (default features)  ]   | checking whether -lc should be explicitly linked in... no\n[CI/linux beta (default features)    ]   | checking whether -lc should be explicitly linked in... no\n[CI/linux stable (default features)  ]   | checking dynamic linker characteristics... GNU/Linux ld.so\n[CI/linux stable (default features)  ]   | checking how to hardcode library paths into programs... immediate\n[CI/linux stable (default features)  ]   | checking whether stripping libraries is possible... yes\n[CI/linux stable (default features)  ]   | checking if libtool supports shared libraries... yes\n[CI/linux stable (default features)  ]   | checking whether to build shared libraries... yes\n[CI/linux stable (default features)  ]   | checking whether to build static libraries... yes\n[CI/linux beta (default features)    ]   | checking dynamic linker characteristics... GNU/Linux ld.so\n[CI/linux beta (default features)    ]   | checking how to hardcode library paths into programs... immediate\n[CI/linux beta (default features)    ]   | checking whether stripping libraries is possible... yes\n[CI/linux beta (default features)    ]   | checking if libtool supports shared libraries... yes\n[CI/linux beta (default features)    ]   | checking whether to build shared libraries... yes\n[CI/linux beta (default features)    ]   | checking whether to build static libraries... yes\n[CI/linux stable (default features)  ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/linux beta (default features)    ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/linux stable (default features)  ]   | checking for ld used by g++... /usr/bin/ld -m elf_x86_64\n[CI/linux stable (default features)  ]   | checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes\n[CI/linux stable (default features)  ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux beta (default features)    ]   | checking for ld used by g++... /usr/bin/ld -m elf_x86_64\n[CI/linux beta (default features)    ]   | checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes\n[CI/linux beta (default features)    ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux stable (default features)  ]   | checking for g++ option to produce PIC... -fPIC -DPIC\n[CI/linux beta (default features)    ]   | checking for g++ option to produce PIC... -fPIC -DPIC\n[CI/linux stable (default features)  ]   | checking if g++ PIC flag -fPIC -DPIC works... yes\n[CI/linux beta (default features)    ]   | checking if g++ PIC flag -fPIC -DPIC works... yes\n[CI/linux stable (default features)  ]   | checking if g++ static flag -static works... yes\n[CI/linux beta (default features)    ]   | checking if g++ static flag -static works... yes\n[CI/linux stable (default features)  ]   | checking if g++ supports -c -o file.o... yes\n[CI/linux stable (default features)  ]   | checking if g++ supports -c -o file.o... (cached) yes\n[CI/linux stable (default features)  ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux stable (default features)  ]   | checking dynamic linker characteristics... (cached) GNU/Linux ld.so\n[CI/linux stable (default features)  ]   | checking how to hardcode library paths into programs... immediate\n[CI/linux stable (default features)  ]   | checking for python... /usr/local/bin/python\n[CI/linux beta (default features)    ]   | checking if g++ supports -c -o file.o... yes\n[CI/linux beta (default features)    ]   | checking if g++ supports -c -o file.o... (cached) yes\n[CI/linux beta (default features)    ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux beta (default features)    ]   | checking dynamic linker characteristics... (cached) GNU/Linux ld.so\n[CI/linux beta (default features)    ]   | checking how to hardcode library paths into programs... immediate\n[CI/linux beta (default features)    ]   | checking for python... /usr/local/bin/python\n[CI/linux stable (default features)  ]   | checking for the pthreads library -lpthreads... no\n[CI/linux beta (default features)    ]   | checking for the pthreads library -lpthreads... no\n[CI/linux stable (default features)  ]   | checking whether pthreads work without any flags... no\n[CI/linux stable (default features)  ]   | checking whether pthreads work with -Kthread... no\n[CI/linux beta (default features)    ]   | checking whether pthreads work without any flags... no\n[CI/linux stable (default features)  ]   | checking whether pthreads work with -kthread... no\n[CI/linux beta (default features)    ]   | checking whether pthreads work with -Kthread... no\n[CI/linux beta (default features)    ]   | checking whether pthreads work with -kthread... no\n[CI/linux stable (default features)  ]   | checking for the pthreads library -llthread... no\n[CI/linux beta (default features)    ]   | checking for the pthreads library -llthread... no\n[CI/linux stable (default features)  ]   | checking whether pthreads work with -pthread... yes\n[CI/linux beta (default features)    ]   | checking whether pthreads work with -pthread... yes\n[CI/linux stable (default features)  ]   | checking for joinable pthread attribute... PTHREAD_CREATE_JOINABLE\n[CI/linux stable (default features)  ]   | checking if more special flags are required for pthreads... no\n[CI/linux beta (default features)    ]   | checking for joinable pthread attribute... PTHREAD_CREATE_JOINABLE\n[CI/linux beta (default features)    ]   | checking if more special flags are required for pthreads... no\n[CI/linux stable (default features)  ]   | checking whether to check for GCC pthread/shared inconsistencies... yes\n[CI/linux beta (default features)    ]   | checking whether to check for GCC pthread/shared inconsistencies... yes\n[CI/linux stable (default features)  ]   | checking whether -pthread is sufficient with -shared... yes\n[CI/linux stable (default features)  ]   | checking for gtest-config... no\n[CI/linux stable (default features)  ]   | checking that generated files are newer than configure... done\n[CI/linux stable (default features)  ]   | configure: creating ./config.status\n[CI/linux beta (default features)    ]   | checking whether -pthread is sufficient with -shared... yes\n[CI/linux beta (default features)    ]   | checking for gtest-config... no\n[CI/linux beta (default features)    ]   | checking that generated files are newer than configure... done\n[CI/linux beta (default features)    ]   | configure: creating ./config.status\n[CI/linux stable (default features)  ]   | config.status: creating Makefile\n[CI/linux stable (default features)  ]   | config.status: creating scripts/gmock-config\n[CI/linux stable (default features)  ]   | config.status: creating build-aux/config.h\n[CI/linux beta (default features)    ]   | config.status: creating Makefile\n[CI/linux stable (default features)  ]   | config.status: executing depfiles commands\n[CI/linux beta (default features)    ]   | config.status: creating scripts/gmock-config\n[CI/linux beta (default features)    ]   | config.status: creating build-aux/config.h\n[CI/linux beta (default features)    ]   | config.status: executing depfiles commands\n[CI/linux stable (default features)  ]   | config.status: executing libtool commands\n[CI/linux beta (default features)    ]   | config.status: executing libtool commands\n[CI/linux stable (default features)  ]   | + make -j2\n[CI/linux stable (default features)  ]   | make  all-recursive\n[CI/linux stable (default features)  ]   | make[1]: Entering directory '/home/runneradmin/protobuf-3.19.4'\n[CI/linux stable (default features)  ]   | Making all in .\n[CI/linux stable (default features)  ]   | make[2]: Entering directory '/home/runneradmin/protobuf-3.19.4'\n[CI/linux stable (default features)  ]   | make[2]: Leaving directory '/home/runneradmin/protobuf-3.19.4'\n[CI/linux stable (default features)  ]   | Making all in src\n[CI/linux beta (default features)    ]   | + make -j2\n[CI/linux beta (default features)    ]   | make  all-recursive\n[CI/linux stable (default features)  ]   | make[2]: Entering directory '/home/runneradmin/protobuf-3.19.4/src'\n[CI/linux beta (default features)    ]   | make[1]: Entering directory '/home/runneradmin/protobuf-3.19.4'\n[CI/linux beta (default features)    ]   | Making all in .\n[CI/linux beta (default features)    ]   | make[2]: Entering directory '/home/runneradmin/protobuf-3.19.4'\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/map.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/message_lite.lo\n[CI/linux beta (default features)    ]   | make[2]: Leaving directory '/home/runneradmin/protobuf-3.19.4'\n[CI/linux beta (default features)    ]   | Making all in src\n[CI/linux beta (default features)    ]   | make[2]: Entering directory '/home/runneradmin/protobuf-3.19.4/src'\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/map.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/message_lite.lo\n[CI/linux beta (default features)    ]   | In file included from /usr/include/string.h:495,\n[CI/linux beta (default features)    ]   |                  from ./google/protobuf/stubs/port.h:39,\n[CI/linux beta (default features)    ]   |                  from ./google/protobuf/stubs/common.h:48,\n[CI/linux beta (default features)    ]   |                  from ./google/protobuf/message_lite.h:45,\n[CI/linux beta (default features)    ]   |                  from google/protobuf/message_lite.cc:36:\n[CI/linux beta (default features)    ]   | In function \u2018void* memcpy(void*, const void*, size_t)\u2019,\n[CI/linux beta (default features)    ]   |     inlined from \u2018uint8_t* google::protobuf::io::EpsCopyOutputStream::WriteRaw(const void*, int, uint8_t*)\u2019 at ./google/protobuf/io/coded_stream.h:706:16,\n[CI/linux beta (default features)    ]   |     inlined from \u2018virtual uint8_t* google::protobuf::internal::ImplicitWeakMessage::_InternalSerialize(uint8_t*, google::protobuf::io::EpsCopyOutputStream*) const\u2019 at ./google/protobuf/implicit_weak_message.h:84:28,\n[CI/linux beta (default features)    ]   |     inlined from \u2018bool google::protobuf::MessageLite::SerializePartialToZeroCopyStream(google::protobuf::io::ZeroCopyOutputStream*) const\u2019 at google/protobuf/message_lite.cc:412:30:\n[CI/linux beta (default features)    ]   | /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:33: warning: \u2018void* __builtin___memcpy_chk(void*, const void*, long unsigned int, long unsigned int)\u2019 specified size between 18446744071562067968 and 18446744073709551615 exceeds maximum object size 9223372036854775807 [-Wstringop-overflow=]\n[CI/linux beta (default features)    ]   |    34 |   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));\n[CI/linux beta (default features)    ]   |       |          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[CI/linux stable (default features)  ]   | In file included from /usr/include/string.h:495,\n[CI/linux stable (default features)  ]   |                  from ./google/protobuf/stubs/port.h:39,\n[CI/linux stable (default features)  ]   |                  from ./google/protobuf/stubs/common.h:48,\n[CI/linux stable (default features)  ]   |                  from ./google/protobuf/message_lite.h:45,\n[CI/linux stable (default features)  ]   |                  from google/protobuf/message_lite.cc:36:\n[CI/linux stable (default features)  ]   | In function \u2018void* memcpy(void*, const void*, size_t)\u2019,\n[CI/linux stable (default features)  ]   |     inlined from \u2018uint8_t* google::protobuf::io::EpsCopyOutputStream::WriteRaw(const void*, int, uint8_t*)\u2019 at ./google/protobuf/io/coded_stream.h:706:16,\n[CI/linux stable (default features)  ]   |     inlined from \u2018virtual uint8_t* google::protobuf::internal::ImplicitWeakMessage::_InternalSerialize(uint8_t*, google::protobuf::io::EpsCopyOutputStream*) const\u2019 at ./google/protobuf/implicit_weak_message.h:84:28,\n[CI/linux stable (default features)  ]   |     inlined from \u2018bool google::protobuf::MessageLite::SerializePartialToZeroCopyStream(google::protobuf::io::ZeroCopyOutputStream*) const\u2019 at google/protobuf/message_lite.cc:412:30:\n[CI/linux stable (default features)  ]   | /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:33: warning: \u2018void* __builtin___memcpy_chk(void*, const void*, long unsigned int, long unsigned int)\u2019 specified size between 18446744071562067968 and 18446744073709551615 exceeds maximum object size 9223372036854775807 [-Wstringop-overflow=]\n[CI/linux stable (default features)  ]   |    34 |   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));\n[CI/linux stable (default features)  ]   |       |          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/parse_context.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/parse_context.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/repeated_field.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/repeated_field.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/duration.pb.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/repeated_ptr_field.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/repeated_ptr_field.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/dynamic_message.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/wire_format_lite.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/empty.pb.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/wire_format_lite.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/any.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/any.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/extension_set_heavy.lo\n[CI/mega-linter                      ] \u2b50 Run Main Checkout sources\n[CI/mega-linter                      ]   \u2705  Success - Main Checkout sources\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/any.pb.lo\n[CI/linux nightly (all features)     ] \u2b50 Run Main Checkout sources\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/any.pb.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/field_mask.pb.lo\n[CI/linux nightly (all features)     ]   \u2705  Success - Main Checkout sources\n[CI/mega-linter                      ] \u2b50 Run Main mega-linter\n[CI/windows stable (default features)] \u2b50 Run Main Checkout sources\n[CI/windows stable (default features)]   \u2705  Success - Main Checkout sources\n[CI/linux nightly (all features)     ] \u2b50 Run Main Install toolchain\n[CI/mega-linter                      ]   \ud83d\udc33  docker pull image=megalinter/megalinter:v5 platform= username= forcePull=false\n[CI/linux stable (with-bytes)        ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/linux nightly (all features)     ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/api.pb.lo\n[CI/linux nightly (all features)     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/linux stable (with-bytes)        ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/windows stable (default features)] \u2b50 Run Main Install toolchain\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/api.pb.lo\n[CI/windows stable (default features)]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/windows stable (default features)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/linux stable (with-bytes)        ] \u2b50 Run Main Checkout sources\n[CI/linux stable (with-bytes)        ]   \u2705  Success - Main Checkout sources\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/generated_message_bases.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/importer.lo\n[CI/linux stable (with-bytes)        ] \u2b50 Run Main Install toolchain\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/importer.lo\n[CI/linux stable (with-bytes)        ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/linux stable (with-bytes)        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/generated_message_reflection.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/generated_message_table_driven.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/parser.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/parser.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/descriptor.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/descriptor.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/generated_message_tctable_full.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/io/gzip_stream.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/descriptor.pb.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/descriptor.pb.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/io/printer.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/io/tokenizer.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/map_field.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/message.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/reflection_ops.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/service.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/source_context.pb.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/descriptor_database.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/struct.pb.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/stubs/substitute.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/descriptor_database.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/text_format.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/timestamp.pb.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/duration.pb.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/dynamic_message.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/duration.pb.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/type.pb.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/empty.pb.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/dynamic_message.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/empty.pb.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/extension_set_heavy.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/field_mask.pb.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/extension_set_heavy.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/unknown_field_set.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/json_util.lo\n[CI/CI self-check                    ]   |    Compiling ci-gen v0.0.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf/ci-gen)\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/field_mask.pb.lo\n[CI/CI self-check                    ]   |     Finished dev [unoptimized + debuginfo] target(s) in 2m 51s\n[CI/CI self-check                    ]   |      Running `target/debug/ci-gen --check`\n[CI/CI self-check                    ]   | The file is correct\n[CI/CI self-check                    ]   \u2705  Success - Main The check\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/generated_message_bases.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/generated_message_reflection.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/message_differencer.lo\n[CI/CI self-check                    ] \ud83c\udfc1  Job succeeded\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/time_util.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/generated_message_bases.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/generated_message_reflection.lo\n[CI/Check sync-readme                ]   |  Downloading crates ...\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/generated_message_table_driven.lo\n[CI/Check sync-readme                ]   |   Downloaded cargo-sync-readme v1.1.0\n[CI/Check sync-readme                ]   |   Installing cargo-sync-readme v1.1.0\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/generated_message_table_driven.lo\n[CI/Check sync-readme                ]   |  Downloading crates ...\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/type_resolver_util.lo\n[CI/Check sync-readme                ]   |   Downloaded structopt v0.3.26\n[CI/Check sync-readme                ]   |   Downloaded vec_map v0.8.2\n[CI/Check sync-readme                ]   |   Downloaded ansi_term v0.12.1\n[CI/Check sync-readme                ]   |   Downloaded textwrap v0.11.0\n[CI/Check sync-readme                ]   |   Downloaded structopt-derive v0.4.18\n[CI/Check sync-readme                ]   |   Downloaded strsim v0.8.0\n[CI/Check sync-readme                ]   |   Downloaded pulldown-cmark v0.8.0\n[CI/Check sync-readme                ]   |   Downloaded proc-macro-error-attr v1.0.4\n[CI/Check sync-readme                ]   |   Downloaded memchr v2.5.0\n[CI/Check sync-readme                ]   |   Downloaded unicode-segmentation v1.10.1\n[CI/Check sync-readme                ]   |   Downloaded lazy_static v1.4.0\n[CI/Check sync-readme                ]   |   Downloaded version_check v0.9.4\n[CI/Check sync-readme                ]   |   Downloaded unicode-ident v1.0.9\n[CI/Check sync-readme                ]   |   Downloaded toml v0.5.11\n[CI/Check sync-readme                ]   |   Downloaded unicode-width v0.1.10\n[CI/Check sync-readme                ]   |   Downloaded serde v1.0.163\n[CI/Check sync-readme                ]   |   Downloaded unicase v2.6.0\n[CI/Check sync-readme                ]   |   Downloaded quote v1.0.28\n[CI/Check sync-readme                ]   |   Downloaded proc-macro2 v1.0.59\n[CI/Check sync-readme                ]   |   Downloaded syn v1.0.109\n[CI/Check sync-readme                ]   |   Downloaded regex v1.8.3\n[CI/Check sync-readme                ]   |   Downloaded regex-syntax v0.7.2\n[CI/Check sync-readme                ]   |   Downloaded libc v0.2.144\n[CI/Check sync-readme                ]   |   Downloaded atty v0.2.14\n[CI/Check sync-readme                ]   |   Downloaded proc-macro-error v1.0.4\n[CI/Check sync-readme                ]   |   Downloaded heck v0.3.3\n[CI/Check sync-readme                ]   |   Downloaded clap v2.34.0\n[CI/Check sync-readme                ]   |   Downloaded bitflags v1.3.2\n[CI/Check sync-readme                ]   |   Downloaded getopts v0.2.21\n[CI/Check sync-readme                ]   |   Downloaded aho-corasick v1.0.1\n[CI/Check sync-readme                ]   |    Compiling proc-macro2 v1.0.59\n[CI/Check sync-readme                ]   |    Compiling version_check v0.9.4\n[CI/Check sync-readme                ]   |    Compiling quote v1.0.28\n[CI/Check sync-readme                ]   |    Compiling unicode-ident v1.0.9\n[CI/Check sync-readme                ]   |    Compiling syn v1.0.109\n[CI/Check sync-readme                ]   |    Compiling libc v0.2.144\n[CI/Check sync-readme                ]   |    Compiling memchr v2.5.0\n[CI/Check sync-readme                ]   |    Compiling unicode-width v0.1.10\n[CI/Check sync-readme                ]   |    Compiling serde v1.0.163\n[CI/Check sync-readme                ]   |    Compiling bitflags v1.3.2\n[CI/Check sync-readme                ]   |    Compiling unicode-segmentation v1.10.1\n[CI/Check sync-readme                ]   |    Compiling vec_map v0.8.2\n[CI/Check sync-readme                ]   |    Compiling ansi_term v0.12.1\n[CI/Check sync-readme                ]   |    Compiling strsim v0.8.0\n[CI/Check sync-readme                ]   |    Compiling pulldown-cmark v0.8.0\n[CI/Check sync-readme                ]   |    Compiling lazy_static v1.4.0\n[CI/Check sync-readme                ]   |    Compiling regex-syntax v0.7.2\n[CI/Check sync-readme                ]   |    Compiling textwrap v0.11.0\n[CI/Check sync-readme                ]   |    Compiling getopts v0.2.21\n[CI/Check sync-readme                ]   |    Compiling proc-macro-error-attr v1.0.4\n[CI/Check sync-readme                ]   |    Compiling proc-macro-error v1.0.4\n[CI/Check sync-readme                ]   |    Compiling unicase v2.6.0\n[CI/Check sync-readme                ]   |    Compiling heck v0.3.3\n[CI/Check sync-readme                ]   |    Compiling aho-corasick v1.0.1\n[CI/Check sync-readme                ]   |    Compiling atty v0.2.14\n[CI/Check sync-readme                ]   |    Compiling clap v2.34.0\n[CI/Check sync-readme                ]   |    Compiling regex v1.8.3\n[CI/Check sync-readme                ]   |    Compiling toml v0.5.11\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/wire_format.lo\n[CI/Check sync-readme                ]   |    Compiling structopt-derive v0.4.18\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/generated_message_tctable_full.lo\n[CI/Check sync-readme                ]   |    Compiling structopt v0.3.26\n[CI/Check sync-readme                ]   |    Compiling cargo-sync-readme v1.1.0\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/generated_message_tctable_full.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/io/gzip_stream.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/io/gzip_stream.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/wrappers.pb.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/io/printer.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/io/printer.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/io/tokenizer.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/io/tokenizer.lo\n[CI/Check sync-readme                ]   |     Finished release [optimized] target(s) in 3m 08s\n[CI/Check sync-readme                ]   |   Installing /home/runneradmin/.cargo/bin/cargo-sync-readme\n[CI/Check sync-readme                ]   |    Installed package `cargo-sync-readme v1.1.0` (executable `cargo-sync-readme`)\n[CI/Check sync-readme                ]   \u2705  Success - Main install cargo sync-readme\n[CI/Check sync-readme                ] \u2b50 Run Main sync-readme protobuf\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/map_field.lo\n[CI/Check sync-readme                ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/map_field.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/message.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/code_generator.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/message.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/command_line_interface.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/plugin.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/reflection_ops.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/reflection_ops.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/service.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/service.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/source_context.pb.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/plugin.pb.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/source_context.pb.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/struct.pb.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/struct.pb.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/stubs/substitute.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/stubs/substitute.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/text_format.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/text_format.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/subprocess.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/zip_writer.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/main.o\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/any_lite.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/arena.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/timestamp.pb.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/timestamp.pb.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/arenastring.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/extension_set.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/type.pb.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/generated_enum_util.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/type.pb.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/generated_message_table_driven_lite.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/unknown_field_set.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/unknown_field_set.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/generated_message_tctable_lite.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/json_util.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/json_util.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/message_differencer.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/message_differencer.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/generated_message_util.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/time_util.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/time_util.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/implicit_weak_message.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/inlined_string_field.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/type_resolver_util.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/type_resolver_util.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/io/coded_stream.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/io/io_win32.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/io/strtod.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/io/zero_copy_stream.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/io/zero_copy_stream_impl.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/wire_format.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/io/zero_copy_stream_impl_lite.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/wire_format.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/stubs/bytestream.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/wrappers.pb.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/wrappers.pb.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/stubs/common.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/stubs/int128.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/stubs/status.lo\n[CI/mega-linter                      ]   \ud83d\udc33  docker create image=megalinter/megalinter:v5 platform= entrypoint=[] cmd=[\"-v\" \"/var/run/docker.sock:/var/run/docker.sock:rw\"]\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/stubs/statusor.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/stubs/stringpiece.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/stubs/stringprintf.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/code_generator.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/code_generator.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/stubs/structurally_valid.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/stubs/strutil.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/command_line_interface.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/stubs/time.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/command_line_interface.lo\n[CI/linux nightly (all features)     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/mega-linter                      ]   \ud83d\udc33  docker run image=megalinter/megalinter:v5 platform= entrypoint=[] cmd=[\"-v\" \"/var/run/docker.sock:/var/run/docker.sock:rw\"]\n[CI/Check sync-readme                ]   \u2705  Success - Main sync-readme protobuf\n[CI/windows stable (default features)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/linux stable (with-bytes)        ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/delimited_message_util.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/plugin.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/plugin.lo\n[CI/linux nightly (all features)     ]   \ud83d\udcac  ::debug::using toolchain from input: nightly\n[CI/linux nightly (all features)     ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/linux nightly (all features)     ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/linux nightly (all features)     ]   \ud83d\udcac  ::debug::Destination /tmp/53becc2a-e812-469e-a94a-3d3605a57006\n[CI/linux nightly (all features)     ]   \ud83d\udcac  ::debug::download complete\n[CI/linux nightly (all features)     ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/53becc2a-e812-469e-a94a-3d3605a57006\n[CI/linux nightly (all features)     ]   | [command]/tmp/53becc2a-e812-469e-a94a-3d3605a57006 --default-toolchain none -y\n[CI/linux nightly (all features)     ]   | info: downloading installer\n[CI/windows stable (default features)]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[CI/windows stable (default features)]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/windows stable (default features)]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/windows stable (default features)]   \ud83d\udcac  ::debug::Destination /tmp/a01108c9-97d1-4e04-95c7-1cd9ab90a167\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/field_comparator.lo\n[CI/linux stable (with-bytes)        ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[CI/linux stable (with-bytes)        ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/linux stable (with-bytes)        ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/linux stable (with-bytes)        ]   \ud83d\udcac  ::debug::Destination /tmp/31402681-c64f-4caa-afb4-c65240f2f801\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/field_mask_util.lo\n[CI/linux nightly (all features)     ]   | info: profile set to 'default'\n[CI/linux nightly (all features)     ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/linux nightly (all features)     ]   | info: skipping toolchain installation\n[CI/linux nightly (all features)     ]   | \n[CI/linux nightly (all features)     ]   | \n[CI/linux nightly (all features)     ]   | Rust is installed now. Great!\n[CI/linux nightly (all features)     ]   | \n[CI/linux nightly (all features)     ]   | To get started you may need to restart your current shell.\n[CI/linux nightly (all features)     ]   | This would reload your PATH environment variable to include\n[CI/linux nightly (all features)     ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/linux nightly (all features)     ]   | \n[CI/linux nightly (all features)     ]   | To configure your current shell, run:\n[CI/linux nightly (all features)     ]   | source \"$HOME/.cargo/env\"\n[CI/linux nightly (all features)     ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/linux nightly (all features)     ]   | Default host: x86_64-unknown-linux-gnu\n[CI/linux nightly (all features)     ]   | rustup home:  /home/runneradmin/.rustup\n[CI/linux nightly (all features)     ]   | \n[CI/linux nightly (all features)     ]   | no active toolchain\n[CI/linux nightly (all features)     ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/linux nightly (all features)     ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/linux nightly (all features)     ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/linux nightly (all features)     ]   | Installed rustup 1.26.0 support profiles\n[CI/linux nightly (all features)     ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[CI/linux nightly (all features)     ]   | info: profile set to 'minimal'\n[CI/linux nightly (all features)     ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install nightly\n[CI/linux nightly (all features)     ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/linux nightly (all features)     ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/linux nightly (all features)     ]   | info: downloading component 'cargo'\n[CI/linux stable (with-bytes)        ]   \ud83d\udcac  ::debug::download complete\n[CI/linux stable (with-bytes)        ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/31402681-c64f-4caa-afb4-c65240f2f801\n[CI/linux stable (with-bytes)        ]   | [command]/tmp/31402681-c64f-4caa-afb4-c65240f2f801 --default-toolchain none -y\n[CI/linux stable (with-bytes)        ]   | info: downloading installer\n[CI/linux nightly (all features)     ]   | info: downloading component 'rust-std'\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/plugin.pb.lo\n[CI/linux stable (with-bytes)        ]   | info: profile set to 'default'\n[CI/linux stable (with-bytes)        ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/linux stable (with-bytes)        ]   | info: skipping toolchain installation\n[CI/linux stable (with-bytes)        ]   | \n[CI/linux stable (with-bytes)        ]   | \n[CI/linux stable (with-bytes)        ]   | Rust is installed now. Great!\n[CI/linux stable (with-bytes)        ]   | \n[CI/linux stable (with-bytes)        ]   | To get started you may need to restart your current shell.\n[CI/linux stable (with-bytes)        ]   | This would reload your PATH environment variable to include\n[CI/linux stable (with-bytes)        ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/linux stable (with-bytes)        ]   | \n[CI/linux stable (with-bytes)        ]   | To configure your current shell, run:\n[CI/linux stable (with-bytes)        ]   | source \"$HOME/.cargo/env\"\n[CI/linux stable (with-bytes)        ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/linux stable (with-bytes)        ]   | Default host: x86_64-unknown-linux-gnu\n[CI/linux stable (with-bytes)        ]   | rustup home:  /home/runneradmin/.rustup\n[CI/linux stable (with-bytes)        ]   | \n[CI/linux stable (with-bytes)        ]   | no active toolchain\n[CI/linux stable (with-bytes)        ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/linux stable (with-bytes)        ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/linux stable (with-bytes)        ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/linux stable (with-bytes)        ]   | Installed rustup 1.26.0 support profiles\n[CI/linux stable (with-bytes)        ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[CI/linux stable (with-bytes)        ]   | info: profile set to 'minimal'\n[CI/linux stable (with-bytes)        ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[CI/linux stable (with-bytes)        ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/linux stable (with-bytes)        ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/linux stable (with-bytes)        ]   | info: downloading component 'cargo'\n[CI/linux stable (with-bytes)        ]   | info: downloading component 'rust-std'\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/plugin.pb.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/internal/datapiece.lo\n[CI/linux stable (with-bytes)        ]   | info: downloading component 'rustc'\n[CI/windows stable (default features)]   \ud83d\udcac  ::debug::download complete\n[CI/windows stable (default features)]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/a01108c9-97d1-4e04-95c7-1cd9ab90a167\n[CI/windows stable (default features)]   | [command]/tmp/a01108c9-97d1-4e04-95c7-1cd9ab90a167 --default-toolchain none -y\n[CI/windows stable (default features)]   | info: downloading installer\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/internal/default_value_objectwriter.lo\n[CI/linux nightly (all features)     ]   | info: downloading component 'rustc'\n[CI/windows stable (default features)]   | info: profile set to 'default'\n[CI/windows stable (default features)]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/windows stable (default features)]   | info: skipping toolchain installation\n[CI/windows stable (default features)]   | \n[CI/windows stable (default features)]   | \n[CI/windows stable (default features)]   | Rust is installed now. Great!\n[CI/windows stable (default features)]   | \n[CI/windows stable (default features)]   | To get started you may need to restart your current shell.\n[CI/windows stable (default features)]   | This would reload your PATH environment variable to include\n[CI/windows stable (default features)]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/windows stable (default features)]   | \n[CI/windows stable (default features)]   | To configure your current shell, run:\n[CI/windows stable (default features)]   | source \"$HOME/.cargo/env\"\n[CI/windows stable (default features)]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/windows stable (default features)]   | Default host: x86_64-unknown-linux-gnu\n[CI/windows stable (default features)]   | rustup home:  /home/runneradmin/.rustup\n[CI/windows stable (default features)]   | \n[CI/windows stable (default features)]   | no active toolchain\n[CI/windows stable (default features)]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/windows stable (default features)]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/windows stable (default features)]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/windows stable (default features)]   | Installed rustup 1.26.0 support profiles\n[CI/windows stable (default features)]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[CI/windows stable (default features)]   | info: profile set to 'minimal'\n[CI/windows stable (default features)]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[CI/windows stable (default features)]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/windows stable (default features)]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/windows stable (default features)]   | info: downloading component 'cargo'\n[CI/linux stable (with-bytes)        ]   | info: installing component 'cargo'\n[CI/windows stable (default features)]   | info: downloading component 'rust-std'\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/subprocess.lo\n[CI/linux stable (with-bytes)        ]   | info: installing component 'rust-std'\n[CI/windows stable (default features)]   | info: downloading component 'rustc'\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/subprocess.lo\n[CI/linux nightly (all features)     ]   | info: installing component 'cargo'\n[CI/windows stable (default features)]   | info: installing component 'cargo'\n[CI/Check sync-readme                ] \u2b50 Run Main sync-readme protobuf-codegen\n[CI/linux nightly (all features)     ]   | info: installing component 'rust-std'\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/zip_writer.lo\n[CI/linux stable (with-bytes)        ]   | info: installing component 'rustc'\n[CI/windows stable (default features)]   | info: installing component 'rust-std'\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/internal/error_listener.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/zip_writer.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/main.o\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/internal/field_mask_utility.lo\n[CI/linux nightly (all features)     ]   | info: installing component 'rustc'\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/any_lite.lo\n[CI/mega-linter                      ]   | Setting git safe.directory GITHUB_WORKSPACE: /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf ...\n[CI/mega-linter                      ]   | error: could not lock config file //.gitconfig: Permission denied\n[CI/mega-linter                      ]   | Setting git safe.directory to /tmp/lint ...\n[CI/mega-linter                      ]   | error: could not lock config file //.gitconfig: Permission denied\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/internal/json_escaping.lo\n[CI/mega-linter                      ]   | [config] Environment variables only (no config file found in /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf)\n[CI/mega-linter                      ]   | \u001b[33m#######################################################################\u001b[0m\n[CI/mega-linter                      ]   | \u001b[33mMEGA-LINTER HAS A NEW V6 VERSION at https://github.com/oxsecurity/megalinter .\n[CI/mega-linter                      ]   | Please upgrade your configuration by running the following command at the root of your repository (requires node.js): \n[CI/mega-linter                      ]   | \u001b[32mnpx mega-linter-runner --upgrade\u001b[0m\u001b[0m\n[CI/mega-linter                      ]   | \u001b[33m#######################################################################\u001b[0m\n[CI/mega-linter                      ]   | ----------------------------------------------------------------------------------------------------\n[CI/mega-linter                      ]   | -------------------------------------------- MegaLinter --------------------------------------------\n[CI/mega-linter                      ]   | ----------------------------------------------------------------------------------------------------\n[CI/mega-linter                      ]   |  - Image Creation Date: 2022-07-10T08:29:57Z\n[CI/mega-linter                      ]   |  - Image Revision: 7b2c5402f\n[CI/mega-linter                      ]   |  - Image Version: v5\n[CI/mega-linter                      ]   | ----------------------------------------------------------------------------------------------------\n[CI/mega-linter                      ]   | The MegaLinter documentation can be found at:\n[CI/mega-linter                      ]   |  - https://megalinter.github.io\n[CI/mega-linter                      ]   | ----------------------------------------------------------------------------------------------------\n[CI/mega-linter                      ]   | GITHUB_REPOSITORY: stepancheg/rust-protobuf\n[CI/mega-linter                      ]   | GITHUB_REF: refs/heads/master\n[CI/mega-linter                      ]   | GITHUB_RUN_ID: 1\n[CI/mega-linter                      ]   | \n[CI/mega-linter                      ]   | \n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/main.o\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/arena.lo\n[CI/windows stable (default features)]   | info: installing component 'rustc'\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/any_lite.lo\n[CI/mega-linter                      ]   | [Activation] JAVASCRIPT_ES has been set inactive, as none of these files has been found: ['.eslintrc.json', '.eslintrc.yml', '.eslintrc.yaml', '.eslintrc.js', '.eslintrc.cjs', 'package.json:eslintConfig']\n[CI/mega-linter                      ]   | [Activation] JSX_ESLINT has been set inactive, as none of these files has been found: ['.eslintrc.json', '.eslintrc.yml', '.eslintrc.yaml', '.eslintrc.js', '.eslintrc.cjs', 'package.json:eslintConfig']\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/arena.lo\n[CI/mega-linter                      ]   | [Activation] SQL_SQLFLUFF has been set inactive, as none of these files has been found: ['.sqlfluff']\n[CI/mega-linter                      ]   | [Activation] SWIFT_SWIFTLINT has been set inactive, as none of these files has been found: ['.swiftlint.yml']\n[CI/mega-linter                      ]   | [Activation] TSX_ESLINT has been set inactive, as none of these files has been found: ['.eslintrc.json', '.eslintrc.yml', '.eslintrc.yaml', '.eslintrc.js', '.eslintrc.cjs', 'package.json:eslintConfig']\n[CI/mega-linter                      ]   | [Activation] TYPESCRIPT_ES has been set inactive, as none of these files has been found: ['.eslintrc.json', '.eslintrc.yml', '.eslintrc.yaml', '.eslintrc.js', '.eslintrc.cjs', 'package.json:eslintConfig']\n[CI/mega-linter                      ]   | RST_RSTFMT has been temporary disabled in MegaLinter, please use a previous MegaLinter version or wait for the next one !\n[CI/mega-linter                      ]   | Skipped linters: ANSIBLE_ANSIBLE_LINT, COPYPASTE_JSCPD, JAVASCRIPT_ES, JAVASCRIPT_PRETTIER, JSX_ESLINT, KUBERNETES_KUBECONFORM, KUBERNETES_KUBEVAL, MARKDOWN_REMARK_LINT, PROTOBUF_PROTOLINT, RST_RSTFMT, RUST_CLIPPY, SALESFORCE_SFDX_SCANNER_APEX, SALESFORCE_SFDX_SCANNER_AURA, SALESFORCE_SFDX_SCANNER_LWC, SPELL_CSPELL, SPELL_MISSPELL, SQL_SQLFLUFF, SWIFT_SWIFTLINT, TSX_ESLINT, TYPESCRIPT_ES, TYPESCRIPT_PRETTIER\n[CI/mega-linter                      ]   | To receive reports as email, please set variable EMAIL_REPORTER_EMAIL\n[CI/mega-linter                      ]   | \n[CI/mega-linter                      ]   | ..........................................................................................----------\n[CI/mega-linter                      ]   | ......................-:./-:::-.............................................................--------\n[CI/mega-linter                      ]   | ...................---:--:-::-:+/-........................................................----------\n[CI/mega-linter                      ]   | ................../-....-----..---/:.....................................................-----------\n[CI/mega-linter                      ]   | .................-:.....---.......-//.................________________..................------------\n[CI/mega-linter                      ]   | ................-....-:++-://+/....-/-.............../                \\.................-----------\n[CI/mega-linter                      ]   | ................-..-+so//::://://.../:............../     Je suis      \\...............------------\n[CI/mega-linter                      ]   | ................-.-+hyhs:-:+ohy+/-..-/.............<    le lama NUL :) |...............-------------\n[CI/mega-linter                      ]   | ...............:/.-:oso+::-oyys/::..-o-.............\\_________________/.............-.-------------\n[CI/mega-linter                      ]   | ..............-ooo+:++s+yy+/ss/:-/..:o/............................................-..--------------\n[CI/mega-linter                      ]   | ..............-+oo///:::oyo:--/:....-+/............................................-.---------------\n[CI/mega-linter                      ]   | .............../ys+:::+oyyy+........-/y-...................---::-/++/-/:-..........-----------------\n[CI/mega-linter                      ]   | .............../ssyy++sso+/:---:/-..--s-................--:o+---.:/+/:::-+///:-.-.------------------\n[CI/mega-linter                      ]   | ...............-sososhhhyyso+/---.....+/...........-://+++/::-.....----::::::ss+--------------------\n[CI/mega-linter                      ]   | ...............:+s+//+/+///:-....--::.-s-......-:/+o+/-.-----------------------:++:-----------------\n[CI/mega-linter                      ]   | ...............:s+ydy++////::/::/+::/-.s/..:/oo+/:...--------------------..------:+:---------------:\n[CI/mega-linter                      ]   | ...............:y-+ysysss++oo+/:sdo:-..sho+++/-..-.../-./:------------------:::::::+:--------------:\n[CI/mega-linter                      ]   | ...............-s-:/:/++++///:/::o/--../y+-......-..--..o:--------+/:-:::--:-:::::-:o--------------:\n[CI/mega-linter                      ]   | ...............-s--+oo/+//////:/:::-...-y+o++:-....-+sso+sss+:---:///:+::::+y/:-:---/o-------------:\n[CI/mega-linter                      ]   | ...............++-::+s/+://////:::-.....+s:--://-...-syys--::y-.--::::::/:::hy::----ss-------------:\n[CI/mega-linter                      ]   | ...........--..s:--:-----::////::-......//.-:--//:-...:+y:..-+-.--/-:+://:::sh/o+-:oyy-------------:\n[CI/mega-linter                      ]   | ....----..-.---+-.-----:-::///:--.....-/:o:/::++o+:.....:o-.......--:o/+o/::oo+omo:y+h--------------\n[CI/mega-linter                      ]   | -...--::://:o+++/.-:-::::///:::--.-::/:-//-/::+/:+/....../-.-:-----:-:o+o//:s:/ymsosys----:---------\n[CI/mega-linter                      ]   | --.....--:::/:-+s-/so+o+::::::::-::::-:/:..-:::so/-+--.------/+:----:-+y//:+y++ysoy+h://:-----------\n[CI/mega-linter                      ]   | ------.----:::/:+/:+soossssoso++/+o//+:------::/y/::---------/+/:---:-:s::/yo+oy+osoh+oo/:::-------:\n[CI/mega-linter                      ]   | ------------:+s::/-:osssosysso++/+/---------/::/y/:----------o/::--:-:/y+/oso+o+ssoyh++s+----------:\n[CI/mega-linter                      ]   | ----:::/+:---//--/:-/+oo++oo/+/::::--------////:/:----------:s::::-/-:/yy++y+sysosyy+/////::------::\n[CI/mega-linter                      ]   | --------::--------o/-:/o+//o:::::////:----:s:/h/////:-::--+/++::::////odoysyshsoshs+++/+///:------::\n[CI/mega-linter                      ]   | ------------------:+//::////////+///------oo:os+///:://::/o:+/://++o++shohoyyo+/+++++/+////:-----:::\n[CI/mega-linter                      ]   | -------------:-----/o++++++o++//:::::---:+/+:://///:-//://++o:/oso+oshhso+/////++///++++/::------:::\n[CI/mega-linter                      ]   | :----------------:/++s+/:/+/:::::::---/s++//://///::-///+/sdossyyys+++///////+hs+/+/+/+/::-------:::\n[CI/mega-linter                      ]   | +--------:---::-:+++++++:---:--:/:/+oshsoo:///////////soo+yo/////+////++//////syssssso/----------:::\n[CI/mega-linter                      ]   | -------------++//+/++//++++++so/+ossssso+:/+yo+oohhsyyo+++o++++++//+++ho+/////////:::::----------:::\n[CI/mega-linter                      ]   | ------------/+o+/////+//+/+ssyyhhyshmhdyhhhssyyoo+////++/+///+o/+///://///:::--------------------:::\n[CI/mega-linter                      ]   | ---------------/+///+++++++++//+/+hho+o/+o+////::::::---------:::-:::::::::-----------//--------::::\n[CI/mega-linter                      ]   | ------------------If you do not want to see me, define PRINT_ALPACA: false  ------------------------\n[CI/mega-linter                      ]   | ----------------------------------------------------------------------------------------------------\n[CI/mega-linter                      ]   | \n[CI/mega-linter                      ]   |     \n[CI/mega-linter                      ]   | Listing updated files in [/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf] using git diff.\n[CI/mega-linter                      ]   | Modified files:\n[CI/mega-linter                      ]   | \n[CI/mega-linter                      ]   | - File extensions: , *, .R, .RMD, .Rmd, .bash, .c, .c++, .cc, .cdxml, .clj, .cljc, .cljs, .coffee, .cpp, .cs, .css, .cu, .cuh, .cxx, .dart, .dash, .edn, .env, .feature, .go, .gradle, .graphql, .groovy, .gvy, .h, .h++, .hcl, .hh, .hpp, .htm, .html, .hxx, .java, .js, .json, .json5, .jsonc, .ksh, .kt, .kts, .lua, .md, .nf, .p6, .php, .pl, .pl6, .pm, .pm6, .pp, .ps1, .ps1xml, .psd1, .psm1, .psrc, .pssc, .py, .r, .raku, .rakumod, .rakutest, .rb, .rst, .saas, .scala, .scss, .sh, .smk, .sql, .t, .tex, .tf, .ts, .vb, .xml, .yaml, .yml\n[CI/mega-linter                      ]   | - File names (regex): Dockerfile, Jenkinsfile, Snakefile\n[CI/mega-linter                      ]   | - Excluding .gitignored files [316]: /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf/Cargo.lock, /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf/target/.rustc_info.json, /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf/target/debug/.cargo-lock, /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf/target/debug/.fingerprint/ci-gen-1b1bd4b21e20490d/bin-ci-gen, /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf/target/debug/.fingerprint/ci-gen-1b1bd4b21e20490d/bin-ci-gen.json, /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf/target/debug/.fingerprint/ci-gen-1b1bd4b21e20490d/dep-bin-ci-gen, /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf/target/debug/.fingerprint/ci-gen-1b1bd4b21e20490d/invoked.timestamp, /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf/target/debug/ci-gen, /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf/target/debug/ci-gen.d, /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf/target/debug/deps/ci_gen-1b1bd4b21e20490d,...(full list in DEBUG)\n[CI/mega-linter                      ]   | Kept [0] files on [0] found files\n[CI/mega-linter                      ]   | \n[CI/mega-linter                      ]   | +----MATCHING LINTERS------+----------+----------------+------------+\n[CI/mega-linter                      ]   | | Descriptor  | Linter     | Criteria | Matching files | Format/Fix |\n[CI/mega-linter                      ]   | +-------------+------------+----------+----------------+------------+\n[CI/mega-linter                      ]   | | CREDENTIALS | secretlint |          | project        | no         |\n[CI/mega-linter                      ]   | | GIT         | git_diff   |          | project        | no         |\n[CI/mega-linter                      ]   | +-------------+------------+----------+----------------+------------+\n[CI/mega-linter                      ]   | \n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/internal/json_objectwriter.lo\n[CI/Check sync-readme                ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4.sh] user= workdir=\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/arenastring.lo\n[CI/linux stable (with-bytes)        ]   | \n[CI/linux stable (with-bytes)        ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/linux stable (with-bytes)        ]   | \n[CI/linux stable (with-bytes)        ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/linux stable (with-bytes)        ]   | info: checking for self-update\n[CI/linux stable (with-bytes)        ]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[CI/linux stable (with-bytes)        ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/linux stable (with-bytes)        ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf' set to 'stable-x86_64-unknown-linux-gnu'\n[CI/linux stable (with-bytes)        ]   | \n[CI/linux stable (with-bytes)        ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/linux stable (with-bytes)        ]   | \n[CI/linux stable (with-bytes)        ]   \u2753  ::group::Gathering installed versions\n[CI/linux stable (with-bytes)        ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/linux stable (with-bytes)        ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/linux stable (with-bytes)        ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[CI/linux stable (with-bytes)        ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[CI/linux stable (with-bytes)        ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/linux stable (with-bytes)        ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[CI/linux stable (with-bytes)        ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[CI/linux stable (with-bytes)        ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/extension_set.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/internal/json_stream_parser.lo\n[CI/linux stable (with-bytes)        ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/linux stable (with-bytes)        ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/arenastring.lo\n[CI/linux stable (with-bytes)        ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[CI/mega-linter                      ]   | \n[CI/mega-linter                      ]   | \u001b[1m### Processed [GIT] files\u001b[0m\n[CI/mega-linter                      ]   | - Using [git_diff v2.30.3] https://megalinter.github.io/v5/descriptors/git_git_diff\n[CI/mega-linter                      ]   | - MegaLinter key: [GIT_GIT_DIFF]\n[CI/mega-linter                      ]   | - Rules config: identified by [git_diff]\n[CI/linux stable (with-bytes)        ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/linux stable (with-bytes)        ]   \u2753  ::endgroup::\n[CI/mega-linter                      ]   | \u001b[32m\u2705 Linted [GIT] files with [git_diff] successfully - (0.01s)\u001b[0m\n[CI/linux stable (with-bytes)        ]   \u2705  Success - Main Install toolchain\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/extension_set.lo\n[CI/mega-linter                      ]   | [GitHub Status Reporter] Error posting Status for GITwith git_diff: 401\n[CI/mega-linter                      ]   | GitHub API response: {\"message\":\"Bad credentials\",\"documentation_url\":\"https://docs.github.com/rest\"}\n[CI/mega-linter                      ]   | [Text Reporter] Generated TEXT report: /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf/report/linters_logs/SUCCESS-GIT_GIT_DIFF.log\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/generated_enum_util.lo\n[CI/linux nightly (all features)     ]   | \n[CI/linux nightly (all features)     ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/linux nightly (all features)     ]   | \n[CI/linux nightly (all features)     ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/linux nightly (all features)     ]   | info: checking for self-update\n[CI/linux nightly (all features)     ]   | [command]/home/runneradmin/.cargo/bin/rustup override set nightly\n[CI/linux nightly (all features)     ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[CI/linux nightly (all features)     ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf' set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/linux nightly (all features)     ]   | \n[CI/linux nightly (all features)     ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/linux nightly (all features)     ]   | \n[CI/linux nightly (all features)     ]   \u2753  ::group::Gathering installed versions\n[CI/linux nightly (all features)     ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/linux nightly (all features)     ]   | rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/linux nightly (all features)     ]   \u2699  ::set-output:: rustc=1.72.0-nightly (498553fc0 2023-05-29)\n[CI/linux nightly (all features)     ]   \u2699  ::set-output:: rustc_hash=498553fc0\n[CI/linux nightly (all features)     ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/linux nightly (all features)     ]   | cargo 1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/linux nightly (all features)     ]   \u2699  ::set-output:: cargo=1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/linux nightly (all features)     ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/linux nightly (all features)     ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/linux nightly (all features)     ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/internal/object_writer.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/generated_enum_util.lo\n[CI/linux nightly (all features)     ]   | info: The currently active `rustc` version is `rustc 1.72.0-nightly (498553fc0 2023-05-29)`\n[CI/linux nightly (all features)     ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/linux nightly (all features)     ]   \u2753  ::endgroup::\n[CI/linux nightly (all features)     ]   \u2705  Success - Main Install toolchain\n[CI/windows stable (default features)]   | \n[CI/windows stable (default features)]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/windows stable (default features)]   | \n[CI/windows stable (default features)]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/windows stable (default features)]   | info: checking for self-update\n[CI/windows stable (default features)]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[CI/windows stable (default features)]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/windows stable (default features)]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf' set to 'stable-x86_64-unknown-linux-gnu'\n[CI/windows stable (default features)]   | \n[CI/windows stable (default features)]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/windows stable (default features)]   | \n[CI/windows stable (default features)]   \u2753  ::group::Gathering installed versions\n[CI/windows stable (default features)]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/internal/proto_writer.lo\n[CI/mega-linter                      ]   | \n[CI/mega-linter                      ]   | \u001b[1m### Processed [CREDENTIALS] files\u001b[0m\n[CI/mega-linter                      ]   | - Using [secretlint v4.1.0] https://megalinter.github.io/v5/descriptors/credentials_secretlint\n[CI/mega-linter                      ]   | - MegaLinter key: [CREDENTIALS_SECRETLINT]\n[CI/mega-linter                      ]   | - Rules config: [.secretlintrc.json]\n[CI/mega-linter                      ]   | \u001b[32m\u2705 Linted [CREDENTIALS] files with [secretlint] successfully - (2.87s)\u001b[0m\n[CI/windows stable (default features)]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/windows stable (default features)]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[CI/windows stable (default features)]   \u2699  ::set-output:: rustc_hash=84c898d65\n[CI/windows stable (default features)]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/windows stable (default features)]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[CI/windows stable (default features)]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[CI/windows stable (default features)]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/windows stable (default features)]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/windows stable (default features)]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/mega-linter                      ]   | [GitHub Status Reporter] Error posting Status for CREDENTIALSwith secretlint: 401\n[CI/mega-linter                      ]   | GitHub API response: {\"message\":\"Bad credentials\",\"documentation_url\":\"https://docs.github.com/rest\"}\n[CI/mega-linter                      ]   | [Text Reporter] Generated TEXT report: /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/stepancheg-rust-protobuf/report/linters_logs/SUCCESS-CREDENTIALS_SECRETLINT.log\n[CI/windows stable (default features)]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[CI/windows stable (default features)]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/windows stable (default features)]   \u2753  ::endgroup::\n[CI/windows stable (default features)]   \u2705  Success - Main Install toolchain\n[CI/mega-linter                      ]   | \n[CI/mega-linter                      ]   | +----SUMMARY-----+------------+---------+-------+-------+--------+--------------+\n[CI/mega-linter                      ]   | | Descriptor     | Linter     | Mode    | Files | Fixed | Errors | Elapsed time |\n[CI/mega-linter                      ]   | +----------------+------------+---------+-------+-------+--------+--------------+\n[CI/mega-linter                      ]   | | \u2705 CREDENTIALS | secretlint | project |   n/a |       |      0 |        2.87s |\n[CI/mega-linter                      ]   | | \u2705 GIT         | git_diff   | project |   n/a |       |      0 |        0.01s |\n[CI/mega-linter                      ]   | +----------------+------------+---------+-------+-------+--------+--------------+\n[CI/mega-linter                      ]   | \n[CI/mega-linter                      ]   \u2699  ::set-output:: has_updated_sources=0\n[CI/mega-linter                      ]   | [Updated Sources Reporter] No source file has been formatted or fixed\n[CI/mega-linter                      ]   | \u001b[33m#######################################################################\u001b[0m\n[CI/mega-linter                      ]   | \u001b[33mMEGA-LINTER HAS A NEW V6 VERSION at https://github.com/oxsecurity/megalinter .\n[CI/mega-linter                      ]   | Please upgrade your configuration by running the following command at the root of your repository (requires node.js): \n[CI/mega-linter                      ]   | \u001b[32mnpx mega-linter-runner --upgrade\u001b[0m\u001b[0m\n[CI/mega-linter                      ]   | \u001b[33m#######################################################################\u001b[0m\n[CI/mega-linter                      ]   | \u001b[32m\u2705 Successfully linted all files without errors\u001b[0m\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/generated_message_table_driven_lite.lo\n[CI/linux stable (with-bytes)        ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/generated_message_table_driven_lite.lo\n[CI/linux stable (with-bytes)        ] \u2b50 Run Main Cache protobuf\n[CI/linux stable (with-bytes)        ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/internal/protostream_objectsource.lo\n[CI/linux nightly (all features)     ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/linux nightly (all features)     ] \u2b50 Run Main Cache protobuf\n[CI/linux stable (with-bytes)        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[CI/windows stable (default features)]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/linux nightly (all features)     ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[CI/windows stable (default features)] \u2b50 Run Main Cache protobuf\n[CI/windows stable (default features)]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[CI/linux nightly (all features)     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/generated_message_tctable_lite.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/internal/protostream_objectwriter.lo\n[CI/windows stable (default features)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/generated_message_tctable_lite.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/internal/type_info.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/generated_message_util.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/generated_message_util.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/implicit_weak_message.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/implicit_weak_message.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/inlined_string_field.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/util/internal/utility.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/cpp/cpp_enum.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/inlined_string_field.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/io/coded_stream.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/io/coded_stream.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/io/io_win32.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/io/strtod.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/io/io_win32.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/io/strtod.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/io/zero_copy_stream.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/io/zero_copy_stream_impl.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/cpp/cpp_enum_field.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/io/zero_copy_stream.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/io/zero_copy_stream_impl.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/io/zero_copy_stream_impl_lite.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/stubs/bytestream.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/io/zero_copy_stream_impl_lite.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/stubs/bytestream.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/stubs/common.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/stubs/common.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/stubs/int128.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/cpp/cpp_extension.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/stubs/int128.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/stubs/status.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/stubs/statusor.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/stubs/status.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/stubs/statusor.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/stubs/stringpiece.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/cpp/cpp_field.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/stubs/stringprintf.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/stubs/stringpiece.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/stubs/stringprintf.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/stubs/structurally_valid.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/stubs/strutil.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/stubs/structurally_valid.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/stubs/strutil.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/stubs/time.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/stubs/time.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/cpp/cpp_file.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/delimited_message_util.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/delimited_message_util.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/field_comparator.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/field_mask_util.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/field_comparator.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/field_mask_util.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/cpp/cpp_generator.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/internal/datapiece.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/internal/datapiece.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/internal/default_value_objectwriter.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/internal/default_value_objectwriter.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/cpp/cpp_helpers.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/internal/error_listener.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/internal/error_listener.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/internal/field_mask_utility.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/internal/json_escaping.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/internal/field_mask_utility.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/cpp/cpp_map_field.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/internal/json_escaping.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/internal/json_objectwriter.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/internal/json_objectwriter.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/internal/json_stream_parser.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/internal/json_stream_parser.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/internal/object_writer.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/internal/object_writer.lo\n[CI/windows stable (default features)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[CI/linux stable (with-bytes)        ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[CI/linux nightly (all features)     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[CI/Check sync-readme                ]   \u2705  Success - Main sync-readme protobuf-codegen\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/internal/proto_writer.lo\n[CI/mega-linter                      ]   \u2705  Success - Main mega-linter\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/internal/protostream_objectsource.lo\n[CI/windows stable (default features)]   \ud83d\udcac  ::debug::Resolved Keys:\n[CI/windows stable (default features)]   \ud83d\udcac  ::debug::[\"pb-windows-3.19.4\"]\n[CI/windows stable (default features)]   \ud83d\udcac  ::debug::Checking zstd --version\n[CI/linux stable (with-bytes)        ]   \ud83d\udcac  ::debug::Resolved Keys:\n[CI/linux stable (with-bytes)        ]   \ud83d\udcac  ::debug::[\"pb-linux-3.19.4\"]\n[CI/linux stable (with-bytes)        ]   \ud83d\udcac  ::debug::Checking zstd --version\n[CI/windows stable (default features)]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[CI/windows stable (default features)]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/linux stable (with-bytes)        ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[CI/linux stable (with-bytes)        ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/linux nightly (all features)     ]   \ud83d\udcac  ::debug::Resolved Keys:\n[CI/linux nightly (all features)     ]   \ud83d\udcac  ::debug::[\"pb-linux-3.19.4\"]\n[CI/linux nightly (all features)     ]   \ud83d\udcac  ::debug::Checking zstd --version\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/internal/proto_writer.lo\n[CI/linux nightly (all features)     ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[CI/linux nightly (all features)     ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/cpp/cpp_message.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/internal/protostream_objectsource.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/cpp/cpp_message_field.lo\n[CI/windows stable (default features)]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/linux stable (with-bytes)        ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/linux nightly (all features)     ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/internal/protostream_objectwriter.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/internal/protostream_objectwriter.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/internal/type_info.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/internal/type_info.lo\n[CI/windows stable (default features)]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[CI/linux stable (with-bytes)        ]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[CI/linux stable (with-bytes)        ]   \u2705  Success - Main Cache protobuf\n[CI/windows stable (default features)]   \u2705  Success - Main Cache protobuf\n[CI/linux nightly (all features)     ]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[CI/linux nightly (all features)     ]   \u2705  Success - Main Cache protobuf\n[CI/Check sync-readme                ] \u2b50 Run Main sync-readme protobuf-examples/customize-serde\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/util/internal/utility.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/util/internal/utility.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/cpp/cpp_enum.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/cpp/cpp_padding_optimizer.lo\n[CI/mega-linter                      ] \ud83c\udfc1  Job succeeded\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/cpp/cpp_enum.lo\n[CI/linux stable (with-bytes)        ]   \u2699  ::set-output:: cache-hit=false\n[CI/windows stable (default features)]   \u2699  ::set-output:: cache-hit=false\n[CI/linux nightly (all features)     ]   \u2699  ::set-output:: cache-hit=false\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/cpp/cpp_enum_field.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/cpp/cpp_enum_field.lo\n[CI/linux nightly (all features)     ] \u2b50 Run Main Install protobuf\n[CI/linux stable (with-bytes)        ] \u2b50 Run Main Install protobuf\n[CI/windows stable (default features)] \u2b50 Run Main Install protobuf\n[CI/Check sync-readme                ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5.sh] user= workdir=\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/cpp/cpp_parse_function_generator.lo\n[CI/linux nightly (all features)     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[CI/windows stable (default features)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[CI/linux stable (with-bytes)        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/cpp/cpp_extension.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/cpp/cpp_extension.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/cpp/cpp_field.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/cpp/cpp_field.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/cpp/cpp_primitive_field.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/cpp/cpp_file.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/cpp/cpp_file.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/cpp/cpp_service.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/cpp/cpp_generator.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/cpp/cpp_string_field.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/cpp/cpp_generator.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/cpp/cpp_helpers.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/cpp/cpp_helpers.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/csharp/csharp_doc_comment.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/csharp/csharp_enum.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/csharp/csharp_enum_field.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/cpp/cpp_map_field.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/cpp/cpp_map_field.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/csharp/csharp_field_base.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/csharp/csharp_generator.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/cpp/cpp_message.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/cpp/cpp_message.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/cpp/cpp_message_field.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/csharp/csharp_helpers.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/cpp/cpp_message_field.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/csharp/csharp_map_field.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/csharp/csharp_message.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/csharp/csharp_message_field.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/cpp/cpp_padding_optimizer.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/csharp/csharp_primitive_field.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/cpp/cpp_padding_optimizer.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/csharp/csharp_reflection_class.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/cpp/cpp_parse_function_generator.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/csharp/csharp_repeated_enum_field.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/cpp/cpp_parse_function_generator.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/csharp/csharp_repeated_message_field.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/csharp/csharp_repeated_primitive_field.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/cpp/cpp_primitive_field.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/csharp/csharp_source_generator_base.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/csharp/csharp_wrapper_field.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/cpp/cpp_primitive_field.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_context.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/cpp/cpp_service.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_doc_comment.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/cpp/cpp_string_field.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/cpp/cpp_service.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_enum.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/cpp/cpp_string_field.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_enum_field.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/csharp/csharp_doc_comment.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/csharp/csharp_enum.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/csharp/csharp_doc_comment.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_enum_field_lite.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/csharp/csharp_enum_field.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/csharp/csharp_enum.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/csharp/csharp_enum_field.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_enum_lite.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/csharp/csharp_field_base.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/csharp/csharp_generator.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/csharp/csharp_field_base.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_extension.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/csharp/csharp_generator.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/csharp/csharp_helpers.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_extension_lite.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/csharp/csharp_map_field.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/csharp/csharp_helpers.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_field.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/csharp/csharp_message.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_file.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/csharp/csharp_map_field.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/csharp/csharp_message_field.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/csharp/csharp_message.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_generator.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/csharp/csharp_message_field.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/csharp/csharp_primitive_field.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/csharp/csharp_reflection_class.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/csharp/csharp_primitive_field.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_generator_factory.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_helpers.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/csharp/csharp_repeated_enum_field.lo\n[CI/Check sync-readme                ]   \u2705  Success - Main sync-readme protobuf-examples/customize-serde\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/csharp/csharp_reflection_class.lo\n[CI/windows stable (default features)]   | + test -n 3.19.4\n[CI/windows stable (default features)]   | + test -n /var/run/act/workflow/pathcmd.txt\n[CI/windows stable (default features)]   | + test -n /var/run/act/workflow/envs.txt\n[CI/windows stable (default features)]   | + path_tr /home/runneradmin/pb/bin\n[CI/windows stable (default features)]   | + uname\n[CI/windows stable (default features)]   | + echo /home/runneradmin/pb/bin\n[CI/windows stable (default features)]   | + echo /home/runneradmin/pb/bin\n[CI/windows stable (default features)]   | + path_tr /home/runneradmin/pb/lib\n[CI/windows stable (default features)]   | + uname\n[CI/windows stable (default features)]   | + echo /home/runneradmin/pb/lib\n[CI/windows stable (default features)]   | + echo LD_LIBRARY_PATH=/home/runneradmin/pb/lib\n[CI/windows stable (default features)]   | + path_tr /home/runneradmin/pb/lib/pkgconfig\n[CI/windows stable (default features)]   | + uname\n[CI/windows stable (default features)]   | + echo /home/runneradmin/pb/lib/pkgconfig\n[CI/windows stable (default features)]   | + echo PKG_CONFIG_PATH=/home/runneradmin/pb/lib/pkgconfig\n[CI/windows stable (default features)]   | + path_tr /home/runneradmin/pb\n[CI/windows stable (default features)]   | + uname\n[CI/windows stable (default features)]   | + echo /home/runneradmin/pb\n[CI/windows stable (default features)]   | + echo PROTOBUF_PREFIX=/home/runneradmin/pb\n[CI/windows stable (default features)]   | + test -e /home/runneradmin/pb/bin/protoc -o -e /home/runneradmin/pb/bin/protoc.exe\n[CI/windows stable (default features)]   | + test -e /home/runneradmin/pb\n[CI/windows stable (default features)]   | + cd\n[CI/windows stable (default features)]   | + rm -rf pb\n[CI/linux stable (with-bytes)        ]   | + test -n 3.19.4\n[CI/linux stable (with-bytes)        ]   | + test -n /var/run/act/workflow/pathcmd.txt\n[CI/linux stable (with-bytes)        ]   | + test -n /var/run/act/workflow/envs.txt\n[CI/linux stable (with-bytes)        ]   | + path_tr /home/runneradmin/pb/bin\n[CI/linux stable (with-bytes)        ]   | + uname\n[CI/linux stable (with-bytes)        ]   | + echo /home/runneradmin/pb/bin\n[CI/windows stable (default features)]   | + mkdir pb\n[CI/linux stable (with-bytes)        ]   | + echo /home/runneradmin/pb/bin\n[CI/linux stable (with-bytes)        ]   | + path_tr /home/runneradmin/pb/lib\n[CI/linux stable (with-bytes)        ]   | + uname\n[CI/windows stable (default features)]   | + uname\n[CI/windows stable (default features)]   | + basename=protobuf-cpp-3.19.4\n[CI/linux stable (with-bytes)        ]   | + echo /home/runneradmin/pb/lib\n[CI/linux stable (with-bytes)        ]   | + echo LD_LIBRARY_PATH=/home/runneradmin/pb/lib\n[CI/windows stable (default features)]   | + curl -sL https://github.com/protocolbuffers/protobuf/releases/download/v3.19.4/protobuf-cpp-3.19.4.tar.gz\n[CI/windows stable (default features)]   | + tar zx\n[CI/linux stable (with-bytes)        ]   | + path_tr /home/runneradmin/pb/lib/pkgconfig\n[CI/linux stable (with-bytes)        ]   | + uname\n[CI/linux stable (with-bytes)        ]   | + echo /home/runneradmin/pb/lib/pkgconfig\n[CI/linux stable (with-bytes)        ]   | + echo PKG_CONFIG_PATH=/home/runneradmin/pb/lib/pkgconfig\n[CI/linux stable (with-bytes)        ]   | + path_tr /home/runneradmin/pb\n[CI/linux stable (with-bytes)        ]   | + uname\n[CI/linux stable (with-bytes)        ]   | + echo /home/runneradmin/pb\n[CI/linux stable (with-bytes)        ]   | + echo PROTOBUF_PREFIX=/home/runneradmin/pb\n[CI/linux stable (with-bytes)        ]   | + test -e /home/runneradmin/pb/bin/protoc -o -e /home/runneradmin/pb/bin/protoc.exe\n[CI/linux stable (with-bytes)        ]   | + test -e /home/runneradmin/pb\n[CI/linux stable (with-bytes)        ]   | + cd\n[CI/linux stable (with-bytes)        ]   | + rm -rf pb\n[CI/linux stable (with-bytes)        ]   | + mkdir pb\n[CI/linux stable (with-bytes)        ]   | + uname\n[CI/linux stable (with-bytes)        ]   | + basename=protobuf-cpp-3.19.4\n[CI/linux nightly (all features)     ]   | + test -n 3.19.4\n[CI/linux nightly (all features)     ]   | + test -n /var/run/act/workflow/pathcmd.txt\n[CI/linux nightly (all features)     ]   | + test -n /var/run/act/workflow/envs.txt\n[CI/linux nightly (all features)     ]   | + path_tr /home/runneradmin/pb/bin\n[CI/linux nightly (all features)     ]   | + uname\n[CI/linux stable (with-bytes)        ]   | + curl -sL https://github.com/protocolbuffers/protobuf/releases/download/v3.19.4/protobuf-cpp-3.19.4.tar.gz\n[CI/linux nightly (all features)     ]   | + echo /home/runneradmin/pb/bin\n[CI/linux stable (with-bytes)        ]   | + tar zx\n[CI/linux nightly (all features)     ]   | + echo /home/runneradmin/pb/bin\n[CI/linux nightly (all features)     ]   | + path_tr /home/runneradmin/pb/lib\n[CI/linux nightly (all features)     ]   | + uname\n[CI/linux nightly (all features)     ]   | + echo /home/runneradmin/pb/lib\n[CI/linux nightly (all features)     ]   | + echo LD_LIBRARY_PATH=/home/runneradmin/pb/lib\n[CI/linux nightly (all features)     ]   | + path_tr /home/runneradmin/pb/lib/pkgconfig\n[CI/linux nightly (all features)     ]   | + uname\n[CI/linux nightly (all features)     ]   | + echo /home/runneradmin/pb/lib/pkgconfig\n[CI/linux nightly (all features)     ]   | + echo PKG_CONFIG_PATH=/home/runneradmin/pb/lib/pkgconfig\n[CI/linux nightly (all features)     ]   | + path_tr /home/runneradmin/pb\n[CI/linux nightly (all features)     ]   | + uname\n[CI/linux nightly (all features)     ]   | + echo /home/runneradmin/pb\n[CI/linux nightly (all features)     ]   | + echo PROTOBUF_PREFIX=/home/runneradmin/pb\n[CI/linux nightly (all features)     ]   | + test -e /home/runneradmin/pb/bin/protoc -o -e /home/runneradmin/pb/bin/protoc.exe\n[CI/linux nightly (all features)     ]   | + test -e /home/runneradmin/pb\n[CI/linux nightly (all features)     ]   | + cd\n[CI/linux nightly (all features)     ]   | + rm -rf pb\n[CI/linux nightly (all features)     ]   | + mkdir pb\n[CI/linux nightly (all features)     ]   | + uname\n[CI/linux nightly (all features)     ]   | + basename=protobuf-cpp-3.19.4\n[CI/linux nightly (all features)     ]   | + curl -sL https://github.com/protocolbuffers/protobuf/releases/download/v3.19.4/protobuf-cpp-3.19.4.tar.gz\n[CI/linux nightly (all features)     ]   | + tar zx\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_kotlin_generator.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/csharp/csharp_repeated_message_field.lo\n[CI/linux stable (with-bytes)        ]   | + cd protobuf-3.19.4\n[CI/linux stable (with-bytes)        ]   | + ./configure --prefix=/home/runneradmin/pb\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/csharp/csharp_repeated_primitive_field.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/csharp/csharp_repeated_enum_field.lo\n[CI/linux nightly (all features)     ]   | + cd protobuf-3.19.4\n[CI/linux nightly (all features)     ]   | + ./configure --prefix=/home/runneradmin/pb\n[CI/windows stable (default features)]   | + cd protobuf-3.19.4\n[CI/windows stable (default features)]   | + ./configure --prefix=/home/runneradmin/pb\n[CI/linux stable (with-bytes)        ]   | checking whether to enable maintainer-specific portions of Makefiles... yes\n[CI/linux nightly (all features)     ]   | checking whether to enable maintainer-specific portions of Makefiles... yes\n[CI/linux stable (with-bytes)        ]   | checking build system type... x86_64-pc-linux-gnu\n[CI/linux stable (with-bytes)        ]   | checking host system type... x86_64-pc-linux-gnu\n[CI/linux stable (with-bytes)        ]   | checking target system type... x86_64-pc-linux-gnu\n[CI/linux stable (with-bytes)        ]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/windows stable (default features)]   | checking whether to enable maintainer-specific portions of Makefiles... yes\n[CI/linux stable (with-bytes)        ]   | checking whether build environment is sane... yes\n[CI/linux stable (with-bytes)        ]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/linux stable (with-bytes)        ]   | checking for gawk... gawk\n[CI/linux stable (with-bytes)        ]   | checking whether make sets $(MAKE)... yes\n[CI/linux stable (with-bytes)        ]   | checking whether make supports nested variables... yes\n[CI/linux nightly (all features)     ]   | checking build system type... x86_64-pc-linux-gnu\n[CI/linux nightly (all features)     ]   | checking host system type... x86_64-pc-linux-gnu\n[CI/linux nightly (all features)     ]   | checking target system type... x86_64-pc-linux-gnu\n[CI/linux stable (with-bytes)        ]   | checking whether UID '1012' is supported by ustar format... yes\n[CI/linux stable (with-bytes)        ]   | checking whether GID '1000' is supported by ustar format... yes\n[CI/linux nightly (all features)     ]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/linux nightly (all features)     ]   | checking whether build environment is sane... yes\n[CI/linux stable (with-bytes)        ]   | checking how to create a ustar tar archive... gnutar\n[CI/linux stable (with-bytes)        ]   | checking whether make supports nested variables... (cached) yes\n[CI/linux stable (with-bytes)        ]   | checking for gcc... gcc\n[CI/linux nightly (all features)     ]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/linux nightly (all features)     ]   | checking for gawk... gawk\n[CI/linux nightly (all features)     ]   | checking whether make sets $(MAKE)... yes\n[CI/windows stable (default features)]   | checking build system type... x86_64-pc-linux-gnu\n[CI/windows stable (default features)]   | checking host system type... x86_64-pc-linux-gnu\n[CI/windows stable (default features)]   | checking target system type... x86_64-pc-linux-gnu\n[CI/linux nightly (all features)     ]   | checking whether make supports nested variables... yes\n[CI/linux nightly (all features)     ]   | checking whether UID '1012' is supported by ustar format... yes\n[CI/windows stable (default features)]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/linux nightly (all features)     ]   | checking whether GID '1000' is supported by ustar format... yes\n[CI/windows stable (default features)]   | checking whether build environment is sane... yes\n[CI/windows stable (default features)]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/windows stable (default features)]   | checking for gawk... gawk\n[CI/linux nightly (all features)     ]   | checking how to create a ustar tar archive... gnutar\n[CI/linux nightly (all features)     ]   | checking whether make supports nested variables... (cached) yes\n[CI/linux nightly (all features)     ]   | checking for gcc... gcc\n[CI/windows stable (default features)]   | checking whether make sets $(MAKE)... yes\n[CI/windows stable (default features)]   | checking whether make supports nested variables... yes\n[CI/windows stable (default features)]   | checking whether UID '1012' is supported by ustar format... yes\n[CI/windows stable (default features)]   | checking whether GID '1000' is supported by ustar format... yes\n[CI/linux stable (with-bytes)        ]   | checking whether the C compiler works... yes\n[CI/linux stable (with-bytes)        ]   | checking for C compiler default output file name... a.out\n[CI/windows stable (default features)]   | checking how to create a ustar tar archive... gnutar\n[CI/windows stable (default features)]   | checking whether make supports nested variables... (cached) yes\n[CI/windows stable (default features)]   | checking for gcc... gcc\n[CI/linux stable (with-bytes)        ]   | checking for suffix of executables... \n[CI/linux nightly (all features)     ]   | checking whether the C compiler works... yes\n[CI/linux nightly (all features)     ]   | checking for C compiler default output file name... a.out\n[CI/windows stable (default features)]   | checking whether the C compiler works... yes\n[CI/windows stable (default features)]   | checking for C compiler default output file name... a.out\n[CI/linux stable (with-bytes)        ]   | checking whether we are cross compiling... no\n[CI/linux nightly (all features)     ]   | checking for suffix of executables... \n[CI/linux stable (with-bytes)        ]   | checking for suffix of object files... o\n[CI/windows stable (default features)]   | checking for suffix of executables... \n[CI/linux stable (with-bytes)        ]   | checking whether the compiler supports GNU C... yes\n[CI/windows stable (default features)]   | checking whether we are cross compiling... no\n[CI/linux nightly (all features)     ]   | checking whether we are cross compiling... no\n[CI/linux stable (with-bytes)        ]   | checking whether gcc accepts -g... yes\n[CI/windows stable (default features)]   | checking for suffix of object files... o\n[CI/linux nightly (all features)     ]   | checking for suffix of object files... o\n[CI/linux stable (with-bytes)        ]   | checking for gcc option to enable C11 features... none needed\n[CI/windows stable (default features)]   | checking whether the compiler supports GNU C... yes\n[CI/linux nightly (all features)     ]   | checking whether the compiler supports GNU C... yes\n[CI/linux stable (with-bytes)        ]   | checking whether gcc understands -c and -o together... yes\n[CI/windows stable (default features)]   | checking whether gcc accepts -g... yes\n[CI/linux nightly (all features)     ]   | checking whether gcc accepts -g... yes\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_map_field.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/csharp/csharp_source_generator_base.lo\n[CI/linux stable (with-bytes)        ]   | checking whether make supports the include directive... yes (GNU style)\n[CI/windows stable (default features)]   | checking for gcc option to enable C11 features... none needed\n[CI/linux nightly (all features)     ]   | checking for gcc option to enable C11 features... none needed\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_map_field_lite.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/csharp/csharp_repeated_message_field.lo\n[CI/linux stable (with-bytes)        ]   | checking dependency style of gcc... gcc3\n[CI/linux stable (with-bytes)        ]   | checking for g++... g++\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/csharp/csharp_repeated_primitive_field.lo\n[CI/windows stable (default features)]   | checking whether gcc understands -c and -o together... yes\n[CI/windows stable (default features)]   | checking whether make supports the include directive... yes (GNU style)\n[CI/linux nightly (all features)     ]   | checking whether gcc understands -c and -o together... yes\n[CI/linux nightly (all features)     ]   | checking whether make supports the include directive... yes (GNU style)\n[CI/linux stable (with-bytes)        ]   | checking whether the compiler supports GNU C++... yes\n[CI/windows stable (default features)]   | checking dependency style of gcc... gcc3\n[CI/linux stable (with-bytes)        ]   | checking whether g++ accepts -g... yes\n[CI/windows stable (default features)]   | checking for g++... g++\n[CI/linux nightly (all features)     ]   | checking dependency style of gcc... gcc3\n[CI/linux nightly (all features)     ]   | checking for g++... g++\n[CI/linux stable (with-bytes)        ]   | checking for g++ option to enable C++11 features... none needed\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/csharp/csharp_wrapper_field.lo\n[CI/linux nightly (all features)     ]   | checking whether the compiler supports GNU C++... yes\n[CI/windows stable (default features)]   | checking whether the compiler supports GNU C++... yes\n[CI/windows stable (default features)]   | checking whether g++ accepts -g... yes\n[CI/linux nightly (all features)     ]   | checking whether g++ accepts -g... yes\n[CI/linux stable (with-bytes)        ]   | checking dependency style of g++... gcc3\n[CI/linux stable (with-bytes)        ]   | checking how to run the C preprocessor... gcc -E\n[CI/linux nightly (all features)     ]   | checking for g++ option to enable C++11 features... none needed\n[CI/windows stable (default features)]   | checking for g++ option to enable C++11 features... none needed\n[CI/linux stable (with-bytes)        ]   | checking for gcc... gcc\n[CI/windows stable (default features)]   | checking dependency style of g++... gcc3\n[CI/linux nightly (all features)     ]   | checking dependency style of g++... gcc3\n[CI/linux stable (with-bytes)        ]   | checking whether the compiler supports GNU C... (cached) yes\n[CI/windows stable (default features)]   | checking how to run the C preprocessor... gcc -E\n[CI/linux nightly (all features)     ]   | checking how to run the C preprocessor... gcc -E\n[CI/linux stable (with-bytes)        ]   | checking whether gcc accepts -g... yes\n[CI/linux stable (with-bytes)        ]   | checking for gcc option to enable C11 features... (cached) none needed\n[CI/linux stable (with-bytes)        ]   | checking whether gcc understands -c and -o together... (cached) yes\n[CI/linux stable (with-bytes)        ]   | checking dependency style of gcc... (cached) gcc3\n[CI/linux nightly (all features)     ]   | checking for gcc... gcc\n[CI/windows stable (default features)]   | checking for gcc... gcc\n[CI/linux stable (with-bytes)        ]   | checking how to run the C preprocessor... gcc -E\n[CI/linux nightly (all features)     ]   | checking whether the compiler supports GNU C... (cached) yes\n[CI/windows stable (default features)]   | checking whether the compiler supports GNU C... (cached) yes\n[CI/linux nightly (all features)     ]   | checking whether gcc accepts -g... yes\n[CI/linux nightly (all features)     ]   | checking for gcc option to enable C11 features... (cached) none needed\n[CI/linux nightly (all features)     ]   | checking whether gcc understands -c and -o together... (cached) yes\n[CI/linux nightly (all features)     ]   | checking dependency style of gcc... (cached) gcc3\n[CI/windows stable (default features)]   | checking whether gcc accepts -g... yes\n[CI/windows stable (default features)]   | checking for gcc option to enable C11 features... (cached) none needed\n[CI/windows stable (default features)]   | checking whether gcc understands -c and -o together... (cached) yes\n[CI/windows stable (default features)]   | checking dependency style of gcc... (cached) gcc3\n[CI/linux nightly (all features)     ]   | checking how to run the C preprocessor... gcc -E\n[CI/linux stable (with-bytes)        ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/windows stable (default features)]   | checking how to run the C preprocessor... gcc -E\n[CI/linux stable (with-bytes)        ]   | checking for g++... g++\n[CI/linux nightly (all features)     ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/linux stable (with-bytes)        ]   | checking whether the compiler supports GNU C++... (cached) yes\n[CI/windows stable (default features)]   | checking how to run the C++ preprocessor... g++ -E\n[CI/linux stable (with-bytes)        ]   | checking whether g++ accepts -g... yes\n[CI/linux stable (with-bytes)        ]   | checking for g++ option to enable C++11 features... (cached) none needed\n[CI/linux nightly (all features)     ]   | checking for g++... g++\n[CI/linux stable (with-bytes)        ]   | checking dependency style of g++... (cached) gcc3\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/java/java_context.lo\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/csharp/csharp_source_generator_base.lo\n[CI/windows stable (default features)]   | checking for g++... g++\n[CI/linux stable (with-bytes)        ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/linux nightly (all features)     ]   | checking whether the compiler supports GNU C++... (cached) yes\n[CI/windows stable (default features)]   | checking whether the compiler supports GNU C++... (cached) yes\n[CI/linux nightly (all features)     ]   | checking whether g++ accepts -g... yes\n[CI/linux nightly (all features)     ]   | checking for g++ option to enable C++11 features... (cached) none needed\n[CI/linux nightly (all features)     ]   | checking dependency style of g++... (cached) gcc3\n[CI/windows stable (default features)]   | checking whether g++ accepts -g... yes\n[CI/windows stable (default features)]   | checking for g++ option to enable C++11 features... (cached) none needed\n[CI/windows stable (default features)]   | checking dependency style of g++... (cached) gcc3\n[CI/linux nightly (all features)     ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/windows stable (default features)]   | checking how to run the C++ preprocessor... g++ -E\n[CI/linux stable (with-bytes)        ]   | checking for stdio.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for stdlib.h... yes\n[CI/windows stable (default features)]   | checking for stdio.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for string.h... yes\n[CI/linux nightly (all features)     ]   | checking for stdio.h... yes\n[CI/windows stable (default features)]   | checking for stdlib.h... yes\n[CI/linux nightly (all features)     ]   | checking for stdlib.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for inttypes.h... yes\n[CI/windows stable (default features)]   | checking for string.h... yes\n[CI/linux nightly (all features)     ]   | checking for string.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for stdint.h... yes\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/csharp/csharp_wrapper_field.lo\n[CI/windows stable (default features)]   | checking for inttypes.h... yes\n[CI/linux nightly (all features)     ]   | checking for inttypes.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for strings.h... yes\n[CI/windows stable (default features)]   | checking for stdint.h... yes\n[CI/linux nightly (all features)     ]   | checking for stdint.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for sys/stat.h... yes\n[CI/windows stable (default features)]   | checking for strings.h... yes\n[CI/linux nightly (all features)     ]   | checking for strings.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for sys/types.h... yes\n[CI/linux nightly (all features)     ]   | checking for sys/stat.h... yes\n[CI/windows stable (default features)]   | checking for sys/stat.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for unistd.h... yes\n[CI/linux nightly (all features)     ]   | checking for sys/types.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for wchar.h... yes\n[CI/windows stable (default features)]   | checking for sys/types.h... yes\n[CI/Check sync-readme                ] \u2b50 Run Main sync-readme protobuf-examples/vs-prost\n[CI/linux stable (with-bytes)        ]   | checking for minix/config.h... no\n[CI/linux nightly (all features)     ]   | checking for unistd.h... yes\n[CI/windows stable (default features)]   | checking for unistd.h... yes\n[CI/windows stable (default features)]   | checking for wchar.h... yes\n[CI/linux stable (with-bytes)        ]   | checking whether it is safe to define __EXTENSIONS__... yes\n[CI/linux nightly (all features)     ]   | checking for wchar.h... yes\n[CI/linux stable (with-bytes)        ]   | checking whether _XOPEN_SOURCE should be defined... no\n[CI/linux stable (with-bytes)        ]   | checking for ar... ar\n[CI/linux nightly (all features)     ]   | checking for minix/config.h... no\n[CI/windows stable (default features)]   | checking for minix/config.h... no\n[CI/linux stable (with-bytes)        ]   | checking the archiver (ar) interface... ar\n[CI/linux stable (with-bytes)        ]   | checking for gcc... gcc\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/java/java_doc_comment.lo\n[CI/windows stable (default features)]   | checking whether it is safe to define __EXTENSIONS__... yes\n[CI/linux nightly (all features)     ]   | checking whether it is safe to define __EXTENSIONS__... yes\n[CI/linux stable (with-bytes)        ]   | checking whether the compiler supports GNU Objective C... no\n[CI/windows stable (default features)]   | checking whether _XOPEN_SOURCE should be defined... no\n[CI/windows stable (default features)]   | checking for ar... ar\n[CI/linux nightly (all features)     ]   | checking whether _XOPEN_SOURCE should be defined... no\n[CI/linux nightly (all features)     ]   | checking for ar... ar\n[CI/windows stable (default features)]   | checking the archiver (ar) interface... ar\n[CI/windows stable (default features)]   | checking for gcc... gcc\n[CI/linux nightly (all features)     ]   | checking the archiver (ar) interface... ar\n[CI/linux nightly (all features)     ]   | checking for gcc... gcc\n[CI/linux stable (with-bytes)        ]   | checking whether gcc accepts -g... no\n[CI/linux nightly (all features)     ]   | checking whether the compiler supports GNU Objective C... no\n[CI/windows stable (default features)]   | checking whether the compiler supports GNU Objective C... no\n[CI/linux stable (with-bytes)        ]   | checking dependency style of gcc... gcc3\n[CI/linux stable (with-bytes)        ]   | checking C++ compiler flags...... use default: -O2  -g -std=c++11 -DNDEBUG\n[CI/linux nightly (all features)     ]   | checking whether gcc accepts -g... no\n[CI/linux stable (with-bytes)        ]   | checking for g++ options needed to detect all undeclared functions... none needed\n[CI/windows stable (default features)]   | checking whether gcc accepts -g... no\n[CI/windows stable (default features)]   | checking dependency style of gcc... gcc3\n[CI/windows stable (default features)]   | checking C++ compiler flags...... use default: -O2  -g -std=c++11 -DNDEBUG\n[CI/linux nightly (all features)     ]   | checking dependency style of gcc... gcc3\n[CI/linux nightly (all features)     ]   | checking C++ compiler flags...... use default: -O2  -g -std=c++11 -DNDEBUG\n[CI/linux stable (with-bytes)        ]   | checking whether __SUNPRO_CC is declared... no\n[CI/linux stable (with-bytes)        ]   | checking how to print strings... printf\n[CI/windows stable (default features)]   | checking for g++ options needed to detect all undeclared functions... none needed\n[CI/linux stable (with-bytes)        ]   | checking for a sed that does not truncate output... /usr/bin/sed\n[CI/linux nightly (all features)     ]   | checking for g++ options needed to detect all undeclared functions... none needed\n[CI/linux stable (with-bytes)        ]   | checking for grep that handles long lines and -e... /usr/bin/grep\n[CI/linux stable (with-bytes)        ]   | checking for egrep... /usr/bin/grep -E\n[CI/linux stable (with-bytes)        ]   | checking for fgrep... /usr/bin/grep -F\n[CI/linux stable (with-bytes)        ]   | checking for ld used by gcc... /usr/bin/ld\n[CI/linux stable (with-bytes)        ]   | checking if the linker (/usr/bin/ld) is GNU ld... yes\n[CI/linux stable (with-bytes)        ]   | checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\n[CI/linux nightly (all features)     ]   | checking whether __SUNPRO_CC is declared... no\n[CI/windows stable (default features)]   | checking whether __SUNPRO_CC is declared... no\n[CI/linux nightly (all features)     ]   | checking how to print strings... printf\n[CI/windows stable (default features)]   | checking how to print strings... printf\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/java/java_context.lo\n[CI/linux nightly (all features)     ]   | checking for a sed that does not truncate output... /usr/bin/sed\n[CI/linux stable (with-bytes)        ]   | checking the name lister (/usr/bin/nm -B) interface... BSD nm\n[CI/linux stable (with-bytes)        ]   | checking whether ln -s works... yes\n[CI/windows stable (default features)]   | checking for a sed that does not truncate output... /usr/bin/sed\n[CI/linux nightly (all features)     ]   | checking for grep that handles long lines and -e... /usr/bin/grep\n[CI/linux nightly (all features)     ]   | checking for egrep... /usr/bin/grep -E\n[CI/windows stable (default features)]   | checking for grep that handles long lines and -e... /usr/bin/grep\n[CI/linux stable (with-bytes)        ]   | checking the maximum length of command line arguments... 1572864\n[CI/linux nightly (all features)     ]   | checking for fgrep... /usr/bin/grep -F\n[CI/windows stable (default features)]   | checking for egrep... /usr/bin/grep -E\n[CI/linux stable (with-bytes)        ]   | checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\n[CI/linux stable (with-bytes)        ]   | checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\n[CI/linux stable (with-bytes)        ]   | checking for /usr/bin/ld option to reload object files... -r\n[CI/linux stable (with-bytes)        ]   | checking for objdump... objdump\n[CI/linux stable (with-bytes)        ]   | checking how to recognize dependent libraries... pass_all\n[CI/linux stable (with-bytes)        ]   | checking for dlltool... no\n[CI/linux stable (with-bytes)        ]   | checking how to associate runtime and link libraries... printf %s\\n\n[CI/windows stable (default features)]   | checking for fgrep... /usr/bin/grep -F\n[CI/linux nightly (all features)     ]   | checking for ld used by gcc... /usr/bin/ld\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_message.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_message_builder.lo\n[CI/windows stable (default features)]   | checking for ld used by gcc... /usr/bin/ld\n[CI/windows stable (default features)]   | checking if the linker (/usr/bin/ld) is GNU ld... yes\n[CI/linux nightly (all features)     ]   | checking if the linker (/usr/bin/ld) is GNU ld... yes\n[CI/linux nightly (all features)     ]   | checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\n[CI/windows stable (default features)]   | checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\n[CI/linux stable (with-bytes)        ]   | checking for archiver @FILE support... @\n[CI/linux stable (with-bytes)        ]   | checking for strip... strip\n[CI/linux stable (with-bytes)        ]   | checking for ranlib... ranlib\n[CI/linux nightly (all features)     ]   | checking the name lister (/usr/bin/nm -B) interface... BSD nm\n[CI/linux nightly (all features)     ]   | checking whether ln -s works... yes\n[CI/windows stable (default features)]   | checking the name lister (/usr/bin/nm -B) interface... BSD nm\n[CI/windows stable (default features)]   | checking whether ln -s works... yes\n[CI/linux nightly (all features)     ]   | checking the maximum length of command line arguments... 1572864\n[CI/windows stable (default features)]   | checking the maximum length of command line arguments... 1572864\n[CI/linux nightly (all features)     ]   | checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\n[CI/linux nightly (all features)     ]   | checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\n[CI/linux nightly (all features)     ]   | checking for /usr/bin/ld option to reload object files... -r\n[CI/linux nightly (all features)     ]   | checking for objdump... objdump\n[CI/linux nightly (all features)     ]   | checking how to recognize dependent libraries... pass_all\n[CI/linux nightly (all features)     ]   | checking for dlltool... no\n[CI/linux nightly (all features)     ]   | checking how to associate runtime and link libraries... printf %s\\n\n[CI/windows stable (default features)]   | checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\n[CI/windows stable (default features)]   | checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\n[CI/windows stable (default features)]   | checking for /usr/bin/ld option to reload object files... -r\n[CI/windows stable (default features)]   | checking for objdump... objdump\n[CI/windows stable (default features)]   | checking how to recognize dependent libraries... pass_all\n[CI/windows stable (default features)]   | checking for dlltool... no\n[CI/windows stable (default features)]   | checking how to associate runtime and link libraries... printf %s\\n\n[CI/linux nightly (all features)     ]   | checking for archiver @FILE support... @\n[CI/linux nightly (all features)     ]   | checking for strip... strip\n[CI/linux nightly (all features)     ]   | checking for ranlib... ranlib\n[CI/linux stable (with-bytes)        ]   | checking command to parse /usr/bin/nm -B output from gcc object... ok\n[CI/windows stable (default features)]   | checking for archiver @FILE support... @\n[CI/windows stable (default features)]   | checking for strip... strip\n[CI/windows stable (default features)]   | checking for ranlib... ranlib\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/java/java_doc_comment.lo\n[CI/linux stable (with-bytes)        ]   | checking for sysroot... no\n[CI/linux stable (with-bytes)        ]   | checking for a working dd... /usr/bin/dd\n[CI/linux stable (with-bytes)        ]   | checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1\n[CI/linux stable (with-bytes)        ]   | checking for mt... no\n[CI/linux stable (with-bytes)        ]   | checking if : is a manifest tool... no\n[CI/linux nightly (all features)     ]   | checking command to parse /usr/bin/nm -B output from gcc object... ok\n[CI/linux nightly (all features)     ]   | checking for sysroot... no\n[CI/linux stable (with-bytes)        ]   | checking for dlfcn.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for objdir... .libs\n[CI/linux nightly (all features)     ]   | checking for a working dd... /usr/bin/dd\n[CI/linux nightly (all features)     ]   | checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1\n[CI/windows stable (default features)]   | checking command to parse /usr/bin/nm -B output from gcc object... ok\n[CI/windows stable (default features)]   | checking for sysroot... no\n[CI/windows stable (default features)]   | checking for a working dd... /usr/bin/dd\n[CI/linux nightly (all features)     ]   | checking for mt... no\n[CI/windows stable (default features)]   | checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1\n[CI/linux nightly (all features)     ]   | checking if : is a manifest tool... no\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/java/java_enum.lo\n[CI/windows stable (default features)]   | checking for mt... no\n[CI/windows stable (default features)]   | checking if : is a manifest tool... no\n[CI/linux nightly (all features)     ]   | checking for dlfcn.h... yes\n[CI/linux nightly (all features)     ]   | checking for objdir... .libs\n[CI/linux stable (with-bytes)        ]   | checking if gcc supports -fno-rtti -fno-exceptions... no\n[CI/linux stable (with-bytes)        ]   | checking for gcc option to produce PIC... -fPIC -DPIC\n[CI/windows stable (default features)]   | checking for dlfcn.h... yes\n[CI/windows stable (default features)]   | checking for objdir... .libs\n[CI/linux stable (with-bytes)        ]   | checking if gcc PIC flag -fPIC -DPIC works... yes\n[CI/linux stable (with-bytes)        ]   | checking if gcc static flag -static works... yes\n[CI/linux nightly (all features)     ]   | checking if gcc supports -fno-rtti -fno-exceptions... no\n[CI/linux nightly (all features)     ]   | checking for gcc option to produce PIC... -fPIC -DPIC\n[CI/windows stable (default features)]   | checking if gcc supports -fno-rtti -fno-exceptions... no\n[CI/windows stable (default features)]   | checking for gcc option to produce PIC... -fPIC -DPIC\n[CI/linux nightly (all features)     ]   | checking if gcc PIC flag -fPIC -DPIC works... yes\n[CI/linux stable (with-bytes)        ]   | checking if gcc supports -c -o file.o... yes\n[CI/linux stable (with-bytes)        ]   | checking if gcc supports -c -o file.o... (cached) yes\n[CI/linux stable (with-bytes)        ]   | checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/windows stable (default features)]   | checking if gcc PIC flag -fPIC -DPIC works... yes\n[CI/linux nightly (all features)     ]   | checking if gcc static flag -static works... yes\n[CI/linux stable (with-bytes)        ]   | checking whether -lc should be explicitly linked in... no\n[CI/windows stable (default features)]   | checking if gcc static flag -static works... yes\n[CI/linux nightly (all features)     ]   | checking if gcc supports -c -o file.o... yes\n[CI/linux nightly (all features)     ]   | checking if gcc supports -c -o file.o... (cached) yes\n[CI/linux nightly (all features)     ]   | checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux stable (with-bytes)        ]   | checking dynamic linker characteristics... GNU/Linux ld.so\n[CI/linux stable (with-bytes)        ]   | checking how to hardcode library paths into programs... immediate\n[CI/linux stable (with-bytes)        ]   | checking whether stripping libraries is possible... yes\n[CI/linux stable (with-bytes)        ]   | checking if libtool supports shared libraries... yes\n[CI/linux stable (with-bytes)        ]   | checking whether to build shared libraries... yes\n[CI/linux stable (with-bytes)        ]   | checking whether to build static libraries... yes\n[CI/windows stable (default features)]   | checking if gcc supports -c -o file.o... yes\n[CI/windows stable (default features)]   | checking if gcc supports -c -o file.o... (cached) yes\n[CI/linux stable (with-bytes)        ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/linux nightly (all features)     ]   | checking whether -lc should be explicitly linked in... no\n[CI/windows stable (default features)]   | checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/java/java_enum_field.lo\n[CI/windows stable (default features)]   | checking whether -lc should be explicitly linked in... no\n[CI/linux nightly (all features)     ]   | checking dynamic linker characteristics... GNU/Linux ld.so\n[CI/linux nightly (all features)     ]   | checking how to hardcode library paths into programs... immediate\n[CI/linux nightly (all features)     ]   | checking whether stripping libraries is possible... yes\n[CI/linux nightly (all features)     ]   | checking if libtool supports shared libraries... yes\n[CI/linux nightly (all features)     ]   | checking whether to build shared libraries... yes\n[CI/linux nightly (all features)     ]   | checking whether to build static libraries... yes\n[CI/linux nightly (all features)     ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/windows stable (default features)]   | checking dynamic linker characteristics... GNU/Linux ld.so\n[CI/windows stable (default features)]   | checking how to hardcode library paths into programs... immediate\n[CI/windows stable (default features)]   | checking whether stripping libraries is possible... yes\n[CI/windows stable (default features)]   | checking if libtool supports shared libraries... yes\n[CI/windows stable (default features)]   | checking whether to build shared libraries... yes\n[CI/linux stable (with-bytes)        ]   | checking for ld used by g++... /usr/bin/ld -m elf_x86_64\n[CI/windows stable (default features)]   | checking whether to build static libraries... yes\n[CI/linux stable (with-bytes)        ]   | checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes\n[CI/windows stable (default features)]   | checking how to run the C++ preprocessor... g++ -E\n[CI/linux stable (with-bytes)        ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux nightly (all features)     ]   | checking for ld used by g++... /usr/bin/ld -m elf_x86_64\n[CI/linux nightly (all features)     ]   | checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes\n[CI/linux nightly (all features)     ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux stable (with-bytes)        ]   | checking for g++ option to produce PIC... -fPIC -DPIC\n[CI/windows stable (default features)]   | checking for ld used by g++... /usr/bin/ld -m elf_x86_64\n[CI/Check sync-readme                ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6.sh] user= workdir=\n[CI/windows stable (default features)]   | checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes\n[CI/windows stable (default features)]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux stable (with-bytes)        ]   | checking if g++ PIC flag -fPIC -DPIC works... yes\n[CI/linux nightly (all features)     ]   | checking for g++ option to produce PIC... -fPIC -DPIC\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/java/java_enum.lo\n[CI/linux stable (with-bytes)        ]   | checking if g++ static flag -static works... yes\n[CI/linux nightly (all features)     ]   | checking if g++ PIC flag -fPIC -DPIC works... yes\n[CI/windows stable (default features)]   | checking for g++ option to produce PIC... -fPIC -DPIC\n[CI/linux stable (with-bytes)        ]   | checking if g++ supports -c -o file.o... yes\n[CI/linux stable (with-bytes)        ]   | checking if g++ supports -c -o file.o... (cached) yes\n[CI/linux stable (with-bytes)        ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux stable (with-bytes)        ]   | checking dynamic linker characteristics... (cached) GNU/Linux ld.so\n[CI/linux stable (with-bytes)        ]   | checking how to hardcode library paths into programs... immediate\n[CI/linux nightly (all features)     ]   | checking if g++ static flag -static works... yes\n[CI/windows stable (default features)]   | checking if g++ PIC flag -fPIC -DPIC works... yes\n[CI/linux nightly (all features)     ]   | checking if g++ supports -c -o file.o... yes\n[CI/linux nightly (all features)     ]   | checking if g++ supports -c -o file.o... (cached) yes\n[CI/linux nightly (all features)     ]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux stable (with-bytes)        ]   | checking whether the linker supports version scripts... yes\n[CI/linux stable (with-bytes)        ]   | checking for egrep... (cached) /usr/bin/grep -E\n[CI/linux nightly (all features)     ]   | checking dynamic linker characteristics... (cached) GNU/Linux ld.so\n[CI/linux nightly (all features)     ]   | checking how to hardcode library paths into programs... immediate\n[CI/windows stable (default features)]   | checking if g++ static flag -static works... yes\n[CI/linux stable (with-bytes)        ]   | checking for fcntl.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for inttypes.h... (cached) yes\n[CI/linux nightly (all features)     ]   | checking whether the linker supports version scripts... yes\n[CI/linux nightly (all features)     ]   | checking for egrep... (cached) /usr/bin/grep -E\n[CI/windows stable (default features)]   | checking if g++ supports -c -o file.o... yes\n[CI/windows stable (default features)]   | checking if g++ supports -c -o file.o... (cached) yes\n[CI/windows stable (default features)]   | checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/windows stable (default features)]   | checking dynamic linker characteristics... (cached) GNU/Linux ld.so\n[CI/windows stable (default features)]   | checking how to hardcode library paths into programs... immediate\n[CI/linux stable (with-bytes)        ]   | checking for limits.h... yes\n[CI/linux nightly (all features)     ]   | checking for fcntl.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for stdlib.h... (cached) yes\n[CI/linux nightly (all features)     ]   | checking for inttypes.h... (cached) yes\n[CI/linux stable (with-bytes)        ]   | checking for unistd.h... (cached) yes\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/java/java_enum_field.lo\n[CI/linux nightly (all features)     ]   | checking for limits.h... yes\n[CI/linux nightly (all features)     ]   | checking for stdlib.h... (cached) yes\n[CI/linux nightly (all features)     ]   | checking for unistd.h... (cached) yes\n[CI/windows stable (default features)]   | checking whether the linker supports version scripts... yes\n[CI/windows stable (default features)]   | checking for egrep... (cached) /usr/bin/grep -E\n[CI/linux stable (with-bytes)        ]   | checking for working memcmp... yes\n[CI/windows stable (default features)]   | checking for fcntl.h... yes\n[CI/windows stable (default features)]   | checking for inttypes.h... (cached) yes\n[CI/linux nightly (all features)     ]   | checking for working memcmp... yes\n[CI/windows stable (default features)]   | checking for limits.h... yes\n[CI/windows stable (default features)]   | checking for stdlib.h... (cached) yes\n[CI/windows stable (default features)]   | checking for unistd.h... (cached) yes\n[CI/linux stable (with-bytes)        ]   | checking for working strtod... yes\n[CI/linux nightly (all features)     ]   | checking for working strtod... yes\n[CI/windows stable (default features)]   | checking for working memcmp... yes\n[CI/linux stable (with-bytes)        ]   | checking for ftruncate... yes\n[CI/linux nightly (all features)     ]   | checking for ftruncate... yes\n[CI/windows stable (default features)]   | checking for working strtod... yes\n[CI/linux stable (with-bytes)        ]   | checking for memset... yes\n[CI/windows stable (default features)]   | checking for ftruncate... yes\n[CI/linux nightly (all features)     ]   | checking for memset... yes\n[CI/linux stable (with-bytes)        ]   | checking for mkdir... yes\n[CI/linux nightly (all features)     ]   | checking for mkdir... yes\n[CI/windows stable (default features)]   | checking for memset... yes\n[CI/linux stable (with-bytes)        ]   | checking for strchr... yes\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/java/java_enum_field_lite.lo\n[CI/linux nightly (all features)     ]   | checking for strchr... yes\n[CI/windows stable (default features)]   | checking for mkdir... yes\n[CI/linux stable (with-bytes)        ]   | checking for strerror... yes\n[CI/linux nightly (all features)     ]   | checking for strerror... yes\n[CI/windows stable (default features)]   | checking for strchr... yes\n[CI/linux stable (with-bytes)        ]   | checking for strtol... yes\n[CI/linux stable (with-bytes)        ]   | checking zlib version... ok (1.2.0.4 or later)\n[CI/windows stable (default features)]   | checking for strerror... yes\n[CI/linux nightly (all features)     ]   | checking for strtol... yes\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_message_builder_lite.lo\n[CI/linux nightly (all features)     ]   | checking zlib version... ok (1.2.0.4 or later)\n[CI/windows stable (default features)]   | checking for strtol... yes\n[CI/windows stable (default features)]   | checking zlib version... ok (1.2.0.4 or later)\n[CI/linux stable (with-bytes)        ]   | checking for library containing zlibVersion... -lz\n[CI/linux stable (with-bytes)        ]   | checking whether g++ supports C++11 features by default... yes\n[CI/linux nightly (all features)     ]   | checking for library containing zlibVersion... -lz\n[CI/linux nightly (all features)     ]   | checking whether g++ supports C++11 features by default... yes\n[CI/windows stable (default features)]   | checking for library containing zlibVersion... -lz\n[CI/linux stable (with-bytes)        ]   | checking whether -latomic is needed... no\n[CI/linux stable (with-bytes)        ]   | checking whether gcc is Clang... no\n[CI/windows stable (default features)]   | checking whether g++ supports C++11 features by default... yes\n[CI/linux nightly (all features)     ]   | checking whether -latomic is needed... no\n[CI/linux nightly (all features)     ]   | checking whether gcc is Clang... no\n[CI/linux stable (with-bytes)        ]   | checking whether pthreads work with \"-pthread\" and \"-lpthread\"... yes\n[CI/windows stable (default features)]   | checking whether -latomic is needed... no\n[CI/windows stable (default features)]   | checking whether gcc is Clang... no\n[CI/linux stable (with-bytes)        ]   | checking for joinable pthread attribute... PTHREAD_CREATE_JOINABLE\n[CI/linux stable (with-bytes)        ]   | checking whether more special flags are required for pthreads... no\n[CI/linux nightly (all features)     ]   | checking whether pthreads work with \"-pthread\" and \"-lpthread\"... yes\n[CI/windows stable (default features)]   | checking whether pthreads work with \"-pthread\" and \"-lpthread\"... yes\n[CI/linux nightly (all features)     ]   | checking for joinable pthread attribute... PTHREAD_CREATE_JOINABLE\n[CI/linux nightly (all features)     ]   | checking whether more special flags are required for pthreads... no\n[CI/linux stable (with-bytes)        ]   | checking for PTHREAD_PRIO_INHERIT... yes\n[CI/windows stable (default features)]   | checking for joinable pthread attribute... PTHREAD_CREATE_JOINABLE\n[CI/windows stable (default features)]   | checking whether more special flags are required for pthreads... no\n[CI/linux nightly (all features)     ]   | checking for PTHREAD_PRIO_INHERIT... yes\n[CI/windows stable (default features)]   | checking for PTHREAD_PRIO_INHERIT... yes\n[CI/linux stable (with-bytes)        ]   | checking the location of hash_map... <unordered_map>\n[CI/linux stable (with-bytes)        ]   | checking whether -llog is needed... no\n[CI/linux stable (with-bytes)        ]   | checking that generated files are newer than configure... done\n[CI/linux stable (with-bytes)        ]   | configure: creating ./config.status\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/java/java_enum_lite.lo\n[CI/windows stable (default features)]   | checking the location of hash_map... <unordered_map>\n[CI/windows stable (default features)]   | checking whether -llog is needed... no\n[CI/linux nightly (all features)     ]   | checking the location of hash_map... <unordered_map>\n[CI/linux nightly (all features)     ]   | checking whether -llog is needed... no\n[CI/windows stable (default features)]   | checking that generated files are newer than configure... done\n[CI/windows stable (default features)]   | configure: creating ./config.status\n[CI/linux nightly (all features)     ]   | checking that generated files are newer than configure... done\n[CI/linux nightly (all features)     ]   | configure: creating ./config.status\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/java/java_enum_field_lite.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_message_field.lo\n[CI/linux stable (with-bytes)        ]   | config.status: creating Makefile\n[CI/linux stable (with-bytes)        ]   | config.status: creating src/Makefile\n[CI/linux stable (with-bytes)        ]   | config.status: creating benchmarks/Makefile\n[CI/linux stable (with-bytes)        ]   | config.status: creating conformance/Makefile\n[CI/linux stable (with-bytes)        ]   | config.status: creating protobuf.pc\n[CI/linux stable (with-bytes)        ]   | config.status: creating protobuf-lite.pc\n[CI/linux stable (with-bytes)        ]   | config.status: creating config.h\n[CI/linux stable (with-bytes)        ]   | config.status: executing depfiles commands\n[CI/windows stable (default features)]   | config.status: creating Makefile\n[CI/linux nightly (all features)     ]   | config.status: creating Makefile\n[CI/windows stable (default features)]   | config.status: creating src/Makefile\n[CI/linux nightly (all features)     ]   | config.status: creating src/Makefile\n[CI/windows stable (default features)]   | config.status: creating benchmarks/Makefile\n[CI/linux nightly (all features)     ]   | config.status: creating benchmarks/Makefile\n[CI/windows stable (default features)]   | config.status: creating conformance/Makefile\n[CI/linux nightly (all features)     ]   | config.status: creating conformance/Makefile\n[CI/linux nightly (all features)     ]   | config.status: creating protobuf.pc\n[CI/windows stable (default features)]   | config.status: creating protobuf.pc\n[CI/windows stable (default features)]   | config.status: creating protobuf-lite.pc\n[CI/linux nightly (all features)     ]   | config.status: creating protobuf-lite.pc\n[CI/windows stable (default features)]   | config.status: creating config.h\n[CI/linux nightly (all features)     ]   | config.status: creating config.h\n[CI/windows stable (default features)]   | config.status: executing depfiles commands\n[CI/linux nightly (all features)     ]   | config.status: executing depfiles commands\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/java/java_enum_lite.lo\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_message_field_lite.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/java/java_extension.lo\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/java/java_extension_lite.lo\n[CI/linux stable (with-bytes)        ]   | config.status: executing libtool commands\n[CI/linux stable (with-bytes)        ]   | === configuring in third_party/googletest (/home/runneradmin/protobuf-3.19.4/third_party/googletest)\n[CI/linux stable (with-bytes)        ]   | configure: running /bin/bash ./configure --disable-option-checking '--prefix=/home/runneradmin/pb'  --cache-file=/dev/null --srcdir=.\n[CI/windows stable (default features)]   | config.status: executing libtool commands\n[CI/windows stable (default features)]   | === configuring in third_party/googletest (/home/runneradmin/protobuf-3.19.4/third_party/googletest)\n[CI/windows stable (default features)]   | configure: running /bin/bash ./configure --disable-option-checking '--prefix=/home/runneradmin/pb'  --cache-file=/dev/null --srcdir=.\n[CI/linux stable (with-bytes)        ]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/linux stable (with-bytes)        ]   | checking whether build environment is sane... yes\n[CI/linux stable (with-bytes)        ]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/linux stable (with-bytes)        ]   | checking for gawk... gawk\n[CI/linux stable (with-bytes)        ]   | checking whether make sets $(MAKE)... yes\n[CI/linux nightly (all features)     ]   | config.status: executing libtool commands\n[CI/linux stable (with-bytes)        ]   | checking whether make supports nested variables... yes\n[CI/linux nightly (all features)     ]   | === configuring in third_party/googletest (/home/runneradmin/protobuf-3.19.4/third_party/googletest)\n[CI/linux nightly (all features)     ]   | configure: running /bin/bash ./configure --disable-option-checking '--prefix=/home/runneradmin/pb'  --cache-file=/dev/null --srcdir=.\n[CI/windows stable (default features)]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/windows stable (default features)]   | checking whether build environment is sane... yes\n[CI/windows stable (default features)]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/windows stable (default features)]   | checking for gawk... gawk\n[CI/windows stable (default features)]   | checking whether make sets $(MAKE)... yes\n[CI/windows stable (default features)]   | checking whether make supports nested variables... yes\n[CI/linux nightly (all features)     ]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/linux nightly (all features)     ]   | checking whether build environment is sane... yes\n[CI/linux nightly (all features)     ]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/linux nightly (all features)     ]   | checking for gawk... gawk\n[CI/linux nightly (all features)     ]   | checking whether make sets $(MAKE)... yes\n[CI/linux nightly (all features)     ]   | checking whether make supports nested variables... yes\n[CI/linux stable (with-bytes)        ]   | checking that generated files are newer than configure... done\n[CI/linux stable (with-bytes)        ]   | configure: creating ./config.status\n[CI/windows stable (default features)]   | checking that generated files are newer than configure... done\n[CI/windows stable (default features)]   | configure: creating ./config.status\n[CI/linux stable (with-bytes)        ]   | config.status: creating Makefile\n[CI/linux stable (with-bytes)        ]   | === configuring in googletest (/home/runneradmin/protobuf-3.19.4/third_party/googletest/googletest)\n[CI/linux stable (with-bytes)        ]   | configure: running /bin/bash ./configure --disable-option-checking '--prefix=/home/runneradmin/pb'  --cache-file=/dev/null --srcdir=.\n[CI/linux nightly (all features)     ]   | checking that generated files are newer than configure... done\n[CI/linux nightly (all features)     ]   | configure: creating ./config.status\n[CI/windows stable (default features)]   | config.status: creating Makefile\n[CI/windows stable (default features)]   | === configuring in googletest (/home/runneradmin/protobuf-3.19.4/third_party/googletest/googletest)\n[CI/windows stable (default features)]   | configure: running /bin/bash ./configure --disable-option-checking '--prefix=/home/runneradmin/pb'  --cache-file=/dev/null --srcdir=.\n[CI/linux stable (with-bytes)        ]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/linux stable (with-bytes)        ]   | checking whether build environment is sane... yes\n[CI/linux stable (with-bytes)        ]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/linux stable (with-bytes)        ]   | checking for gawk... gawk\n[CI/linux stable (with-bytes)        ]   | checking whether make sets $(MAKE)... yes\n[CI/linux nightly (all features)     ]   | config.status: creating Makefile\n[CI/linux stable (with-bytes)        ]   | checking whether make supports nested variables... yes\n[CI/linux stable (with-bytes)        ]   | checking for gcc... gcc\n[CI/linux nightly (all features)     ]   | === configuring in googletest (/home/runneradmin/protobuf-3.19.4/third_party/googletest/googletest)\n[CI/linux nightly (all features)     ]   | configure: running /bin/bash ./configure --disable-option-checking '--prefix=/home/runneradmin/pb'  --cache-file=/dev/null --srcdir=.\n[CI/windows stable (default features)]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/windows stable (default features)]   | checking whether build environment is sane... yes\n[CI/windows stable (default features)]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/windows stable (default features)]   | checking for gawk... gawk\n[CI/windows stable (default features)]   | checking whether make sets $(MAKE)... yes\n[CI/windows stable (default features)]   | checking whether make supports nested variables... yes\n[CI/windows stable (default features)]   | checking for gcc... gcc\n[CI/linux stable (with-bytes)        ]   | checking whether the C compiler works... yes\n[CI/linux stable (with-bytes)        ]   | checking for C compiler default output file name... a.out\n[CI/linux nightly (all features)     ]   | checking for a BSD-compatible install... /usr/bin/install -c\n[CI/linux nightly (all features)     ]   | checking whether build environment is sane... yes\n[CI/linux nightly (all features)     ]   | checking for a race-free mkdir -p... /usr/bin/mkdir -p\n[CI/linux nightly (all features)     ]   | checking for gawk... gawk\n[CI/linux nightly (all features)     ]   | checking whether make sets $(MAKE)... yes\n[CI/linux stable (with-bytes)        ]   | checking for suffix of executables... \n[CI/linux nightly (all features)     ]   | checking whether make supports nested variables... yes\n[CI/linux nightly (all features)     ]   | checking for gcc... gcc\n[CI/windows stable (default features)]   | checking whether the C compiler works... yes\n[CI/windows stable (default features)]   | checking for C compiler default output file name... a.out\n[CI/linux stable (with-bytes)        ]   | checking whether we are cross compiling... no\n[CI/windows stable (default features)]   | checking for suffix of executables... \n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/java/java_extension.lo\n[CI/linux stable (with-bytes)        ]   | checking for suffix of object files... o\n[CI/linux nightly (all features)     ]   | checking whether the C compiler works... yes\n[CI/linux nightly (all features)     ]   | checking for C compiler default output file name... a.out\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_message_lite.lo\n[CI/windows stable (default features)]   | checking whether we are cross compiling... no\n[CI/linux stable (with-bytes)        ]   | checking whether the compiler supports GNU C... yes\n[CI/linux nightly (all features)     ]   | checking for suffix of executables... \n[CI/windows stable (default features)]   | checking for suffix of object files... o\n[CI/linux stable (with-bytes)        ]   | checking whether gcc accepts -g... yes\n[CI/windows stable (default features)]   | checking whether the compiler supports GNU C... yes\n[CI/linux stable (with-bytes)        ]   | checking for gcc option to enable C11 features... none needed\n[CI/linux nightly (all features)     ]   | checking whether we are cross compiling... no\n[CI/windows stable (default features)]   | checking whether gcc accepts -g... yes\n[CI/linux nightly (all features)     ]   | checking for suffix of object files... o\n[CI/windows stable (default features)]   | checking for gcc option to enable C11 features... none needed\n[CI/linux stable (with-bytes)        ]   | checking whether gcc understands -c and -o together... yes\n[CI/linux nightly (all features)     ]   | checking whether the compiler supports GNU C... yes\n[CI/linux stable (with-bytes)        ]   | checking whether make supports the include directive... yes (GNU style)\n[CI/linux nightly (all features)     ]   | checking whether gcc accepts -g... yes\n[CI/windows stable (default features)]   | checking whether gcc understands -c and -o together... yes\n[CI/windows stable (default features)]   | checking whether make supports the include directive... yes (GNU style)\n[CI/linux stable (with-bytes)        ]   | checking dependency style of gcc... gcc3\n[CI/linux stable (with-bytes)        ]   | checking for g++... g++\n[CI/linux nightly (all features)     ]   | checking for gcc option to enable C11 features... none needed\n[CI/windows stable (default features)]   | checking dependency style of gcc... gcc3\n[CI/windows stable (default features)]   | checking for g++... g++\n[CI/linux stable (with-bytes)        ]   | checking whether the compiler supports GNU C++... yes\n[CI/linux nightly (all features)     ]   | checking whether gcc understands -c and -o together... yes\n[CI/linux stable (with-bytes)        ]   | checking whether g++ accepts -g... yes\n[CI/linux nightly (all features)     ]   | checking whether make supports the include directive... yes (GNU style)\n[CI/windows stable (default features)]   | checking whether the compiler supports GNU C++... yes\n[CI/windows stable (default features)]   | checking whether g++ accepts -g... yes\n[CI/linux nightly (all features)     ]   | checking dependency style of gcc... gcc3\n[CI/linux nightly (all features)     ]   | checking for g++... g++\n[CI/linux stable (with-bytes)        ]   | checking for g++ option to enable C++11 features... none needed\n[CI/linux nightly (all features)     ]   | checking whether the compiler supports GNU C++... yes\n[CI/linux nightly (all features)     ]   | checking whether g++ accepts -g... yes\n[CI/linux stable (with-bytes)        ]   | checking dependency style of g++... gcc3\n[CI/windows stable (default features)]   | checking for g++ option to enable C++11 features... none needed\n[CI/linux nightly (all features)     ]   | checking for g++ option to enable C++11 features... none needed\n[CI/windows stable (default features)]   | checking dependency style of g++... gcc3\n[CI/linux stable (with-bytes)        ]   | checking build system type... x86_64-pc-linux-gnu\n[CI/linux stable (with-bytes)        ]   | checking host system type... x86_64-pc-linux-gnu\n[CI/linux nightly (all features)     ]   | checking dependency style of g++... gcc3\n[CI/linux stable (with-bytes)        ]   | checking how to print strings... printf\n[CI/windows stable (default features)]   | checking build system type... x86_64-pc-linux-gnu\n[CI/windows stable (default features)]   | checking host system type... x86_64-pc-linux-gnu\n[CI/linux stable (with-bytes)        ]   | checking for a sed that does not truncate output... /usr/bin/sed\n[CI/linux stable (with-bytes)        ]   | checking for grep that handles long lines and -e... /usr/bin/grep\n[CI/linux stable (with-bytes)        ]   | checking for egrep... /usr/bin/grep -E\n[CI/linux stable (with-bytes)        ]   | checking for fgrep... /usr/bin/grep -F\n[CI/linux stable (with-bytes)        ]   | checking for ld used by gcc... /usr/bin/ld\n[CI/linux stable (with-bytes)        ]   | checking if the linker (/usr/bin/ld) is GNU ld... yes\n[CI/linux stable (with-bytes)        ]   | checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\n[CI/linux nightly (all features)     ]   | checking build system type... x86_64-pc-linux-gnu\n[CI/linux nightly (all features)     ]   | checking host system type... x86_64-pc-linux-gnu\n[CI/windows stable (default features)]   | checking how to print strings... printf\n[CI/windows stable (default features)]   | checking for a sed that does not truncate output... /usr/bin/sed\n[CI/windows stable (default features)]   | checking for grep that handles long lines and -e... /usr/bin/grep\n[CI/windows stable (default features)]   | checking for egrep... /usr/bin/grep -E\n[CI/windows stable (default features)]   | checking for fgrep... /usr/bin/grep -F\n[CI/linux stable (with-bytes)        ]   | checking the name lister (/usr/bin/nm -B) interface... BSD nm\n[CI/linux stable (with-bytes)        ]   | checking whether ln -s works... yes\n[CI/linux stable (with-bytes)        ]   | checking the maximum length of command line arguments... 1572864\n[CI/windows stable (default features)]   | checking for ld used by gcc... /usr/bin/ld\n[CI/linux stable (with-bytes)        ]   | checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\n[CI/windows stable (default features)]   | checking if the linker (/usr/bin/ld) is GNU ld... yes\n[CI/linux stable (with-bytes)        ]   | checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\n[CI/linux stable (with-bytes)        ]   | checking for /usr/bin/ld option to reload object files... -r\n[CI/linux stable (with-bytes)        ]   | checking for objdump... objdump\n[CI/linux stable (with-bytes)        ]   | checking how to recognize dependent libraries... pass_all\n[CI/linux stable (with-bytes)        ]   | checking for dlltool... no\n[CI/linux stable (with-bytes)        ]   | checking how to associate runtime and link libraries... printf %s\\n\n[CI/windows stable (default features)]   | checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\n[CI/linux stable (with-bytes)        ]   | checking for ar... ar\n[CI/linux nightly (all features)     ]   | checking how to print strings... printf\n[CI/linux nightly (all features)     ]   | checking for a sed that does not truncate output... /usr/bin/sed\n[CI/linux nightly (all features)     ]   | checking for grep that handles long lines and -e... /usr/bin/grep\n[CI/linux nightly (all features)     ]   | checking for egrep... /usr/bin/grep -E\n[CI/linux nightly (all features)     ]   | checking for fgrep... /usr/bin/grep -F\n[CI/windows stable (default features)]   | checking the name lister (/usr/bin/nm -B) interface... BSD nm\n[CI/windows stable (default features)]   | checking whether ln -s works... yes\n[CI/linux nightly (all features)     ]   | checking for ld used by gcc... /usr/bin/ld\n[CI/linux nightly (all features)     ]   | checking if the linker (/usr/bin/ld) is GNU ld... yes\n[CI/windows stable (default features)]   | checking the maximum length of command line arguments... 1572864\n[CI/linux nightly (all features)     ]   | checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\n[CI/linux stable (with-bytes)        ]   | checking for archiver @FILE support... @\n[CI/windows stable (default features)]   | checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\n[CI/windows stable (default features)]   | checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\n[CI/windows stable (default features)]   | checking for /usr/bin/ld option to reload object files... -r\n[CI/linux stable (with-bytes)        ]   | checking for strip... strip\n[CI/windows stable (default features)]   | checking for objdump... objdump\n[CI/linux stable (with-bytes)        ]   | checking for ranlib... ranlib\n[CI/windows stable (default features)]   | checking how to recognize dependent libraries... pass_all\n[CI/windows stable (default features)]   | checking for dlltool... no\n[CI/windows stable (default features)]   | checking how to associate runtime and link libraries... printf %s\\n\n[CI/windows stable (default features)]   | checking for ar... ar\n[CI/linux nightly (all features)     ]   | checking the name lister (/usr/bin/nm -B) interface... BSD nm\n[CI/linux nightly (all features)     ]   | checking whether ln -s works... yes\n[CI/linux nightly (all features)     ]   | checking the maximum length of command line arguments... 1572864\n[CI/linux nightly (all features)     ]   | checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\n[CI/linux nightly (all features)     ]   | checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\n[CI/linux nightly (all features)     ]   | checking for /usr/bin/ld option to reload object files... -r\n[CI/linux nightly (all features)     ]   | checking for objdump... objdump\n[CI/linux nightly (all features)     ]   | checking how to recognize dependent libraries... pass_all\n[CI/linux nightly (all features)     ]   | checking for dlltool... no\n[CI/linux nightly (all features)     ]   | checking how to associate runtime and link libraries... printf %s\\n\n[CI/linux nightly (all features)     ]   | checking for ar... ar\n[CI/windows stable (default features)]   | checking for archiver @FILE support... @\n[CI/windows stable (default features)]   | checking for strip... strip\n[CI/windows stable (default features)]   | checking for ranlib... ranlib\n[CI/linux stable (with-bytes)        ]   | checking command to parse /usr/bin/nm -B output from gcc object... ok\n[CI/linux nightly (all features)     ]   | checking for archiver @FILE support... @\n[CI/linux nightly (all features)     ]   | checking for strip... strip\n[CI/linux stable (with-bytes)        ]   | checking for sysroot... no\n[CI/linux nightly (all features)     ]   | checking for ranlib... ranlib\n[CI/linux stable (with-bytes)        ]   | checking for a working dd... /usr/bin/dd\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/java/java_field.lo\n[CI/linux stable (with-bytes)        ]   | checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1\n[CI/linux stable (with-bytes)        ]   | checking for mt... no\n[CI/linux beta (default features)    ]   |   CXX      google/protobuf/compiler/java/java_extension_lite.lo\n[CI/linux stable (with-bytes)        ]   | checking if : is a manifest tool... no\n[CI/windows stable (default features)]   | checking command to parse /usr/bin/nm -B output from gcc object... ok\n[CI/windows stable (default features)]   | checking for sysroot... no\n[CI/windows stable (default features)]   | checking for a working dd... /usr/bin/dd\n[CI/linux stable (with-bytes)        ]   | checking for stdio.h... yes\n[CI/windows stable (default features)]   | checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1\n[CI/linux nightly (all features)     ]   | checking command to parse /usr/bin/nm -B output from gcc object... ok\n[CI/linux nightly (all features)     ]   | checking for sysroot... no\n[CI/linux nightly (all features)     ]   | checking for a working dd... /usr/bin/dd\n[CI/windows stable (default features)]   | checking for mt... no\n[CI/linux nightly (all features)     ]   | checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1\n[CI/windows stable (default features)]   | checking if : is a manifest tool... no\n[CI/linux stable (with-bytes)        ]   | checking for stdlib.h... yes\n[CI/linux nightly (all features)     ]   | checking for mt... no\n[CI/linux nightly (all features)     ]   | checking if : is a manifest tool... no\n[CI/windows stable (default features)]   | checking for stdio.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for string.h... yes\n[CI/linux nightly (all features)     ]   | checking for stdio.h... yes\n[CI/windows stable (default features)]   | checking for stdlib.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for inttypes.h... yes\n[CI/rustfmt check                    ]   |   CXX      google/protobuf/compiler/java/java_name_resolver.lo\n[CI/linux nightly (all features)     ]   | checking for stdlib.h... yes\n[CI/windows stable (default features)]   | checking for string.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for stdint.h... yes\n[CI/linux nightly (all features)     ]   | checking for string.h... yes\n[CI/windows stable (default features)]   | checking for inttypes.h... yes\n[CI/windows stable (default features)]   | checking for stdint.h... yes\n[CI/linux nightly (all features)     ]   | checking for inttypes.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for strings.h... yes\n[CI/linux nightly (all features)     ]   | checking for stdint.h... yes\n[CI/windows stable (default features)]   | checking for strings.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for sys/stat.h... yes\n[CI/linux nightly (all features)     ]   | checking for strings.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for sys/types.h... yes\n[CI/windows stable (default features)]   | checking for sys/stat.h... yes\n[CI/linux stable (default features)  ]   |   CXX      google/protobuf/compiler/java/java_file.lo\n[CI/windows stable (default features)]   | checking for sys/types.h... yes\n[CI/linux nightly (all features)     ]   | checking for sys/stat.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for unistd.h... yes\n[CI/linux nightly (all features)     ]   | checking for sys/types.h... yes\n[CI/windows stable (default features)]   | checking for unistd.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for dlfcn.h... yes\n[CI/linux stable (with-bytes)        ]   | checking for objdir... .libs\n[CI/linux nightly (all features)     ]   | checking for unistd.h... yes\n[CI/windows stable (default features)]   | checking for dlfcn.h... yes\n[CI/windows stable (default features)]   | checking for objdir... .libs\n[CI/linux nightly (all features)     ]   | checking for dlfcn.h... yes\n[CI/linux nightly (all features)     ]   | checking for objdir... .libs\n[CI/linux stable (with-bytes)        ]   | checking if gcc supports -fno-rtti -fno-exceptions... no\n[CI/linux stable (with-bytes)        ]   | checking for gcc option to produce PIC... -fPIC -DPIC\n[CI/linux stable (with-bytes)        ]   | checking if gcc PIC flag -fPIC -DPIC works... yes\n[CI/windows stable (default features)]   | checking if gcc supports -fno-rtti -fno-exceptions... no\n[CI/windows stable (default features)]   | checking for gcc option to produce PIC... -fPIC -DPIC\n[CI/windows stable (default features)]   | checking if gcc PIC flag -fPIC -DPIC works... yes\n[CI/linux nightly (all features)     ]   | checking if gcc supports -fno-rtti -fno-exceptions... no\n[CI/linux nightly (all features)     ]   | checking for gcc option to produce PIC... -fPIC -DPIC\n[CI/linux nightly (all features)     ]   | checking if gcc PIC flag -fPIC -DPIC works... yes\n[CI/linux stable (with-bytes)        ]   | checking if gcc static flag -static works... yes\n[CI/linux stable (with-bytes)        ]   | checking if gcc supports -c -o file.o... yes\n[CI/linux stable (with-bytes)        ]   | checking if gcc supports -c -o file.o... (cached) yes\n[CI/linux stable (with-bytes)        ]   | checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/windows stable (default features)]   | checking if gcc static flag -static works... yes\n[CI/windows stable (default features)]   | checking if gcc supports -c -o file.o... yes\n[CI/windows stable (default features)]   | checking if gcc supports -c -o file.o... (cached) yes\n[CI/linux stable (with-bytes)        ]   | checking whether -lc should be explicitly linked in... no\n[CI/linux nightly (all features)     ]   | checking if gcc static flag -static works... yes\n[CI/windows stable (default features)]   | checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux nightly (all features)     ]   | checking if gcc supports -c -o file.o... yes\n[CI/linux nightly (all features)     ]   | checking if gcc supports -c -o file.o... (cached) yes\n[CI/windows stable (default features)]   | checking whether -lc should be explicitly linked in... no\n[CI/linux nightly (all features)     ]   | checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\n[CI/linux stable (with-bytes)        ]   | checking dynamic linker characteristics... GNU/Linux ld.so\n[CI/linux stable (with-bytes)        ]   | checking how to hardcode library paths into programs... immediate\n[CI/linux stable (with-bytes)        ]   | checking whether stripping libraries is possible... yes\n[CI/linux stable (with-bytes)        ]   | checking if libtool supports shared libraries... yes\n[CI/linux stable (with-bytes)        ]   | checking whether to build shared libraries... yes\n[CI/linux stable (with-bytes)        ]   | checking whether to build static libraries... yes\n[CI/linux nightly (all features)     ]   | checking whether -lc should be explicitly linked in... no\n[CI/linux stable (with-bytes)        ]   | checking how to run the C++ preprocessor... g++ -E\n[CI/windows stable (default features)]   | checking dynamic linker characteristics... GNU/Linux ld.so\n[CI/windows stable (default features)]   | checking how to hardcode library paths into programs... immediate\n[CI/windows stable (default features)]   | checking whether stripping libraries is possible... yes\n[CI/windows stable (default features)]   | checking if libtool supports shared libraries... yes\n[CI/windows stable (default features)]   | checking whether to build shared libraries... yes\n[CI/windows stable (default features)]   | checking whether to build static libraries... yes\n[CI/linux nightly (all features)     ]   | checking dynamic linker characteristics... GNU/Linux ld.so\n[CI/linux nightly (all features)     ]   | checking how to hardcode library paths into programs... immediate\n[CI/linux nightly (all features)     ]   | checking whether stripping libraries is possible... yes\n[CI/linux nightly (all features)     ]   | checking if libtool supports shared libraries... yes\n[CI/linux nightly (all features)     ]   | checking whether to build shared libraries... yes\n[CI/linux nightly (all features)     ]   | checking whether to build static libraries... yes\n[CI/windows stable (default features)]   | checking how to run the C++ preprocessor... g++ -E\n[CI/rustfmt check                    ]   \u274c  Failure - Main Install protobuf\n[CI/Check sync-readme                ]   \u274c  Failure - Main sync-readme protobuf-examples/vs-prost\n[CI/linux beta (default features)    ]   \u274c  Failure - Main Install protobuf\n[CI/linux stable (default features)  ]   \u274c  Failure - Main Install protobuf\n[CI/windows stable (default features)]   \u274c  Failure - Main Install protobuf\n[CI/linux stable (with-bytes)        ]   \u274c  Failure - Main Install protobuf\n[CI/Check sync-readme                ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/d314c388dc0b14f46bbcd5e3b046a105cf245a3cd6b536947b56e00d6e99ec54/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/linux beta (default features)    ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/6d956c492593cb9e9ac93456357c044d392d08d1c91cacdf9cfa9a53f8384c99/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/linux nightly (all features)     ]   \u274c  Failure - Main Install protobuf\n[CI/linux stable (with-bytes)        ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/95c9ce712ec1f22e2ee69f4b42575638b092b9f85d8156f00d818bfbe2bc5bf6/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/linux stable (default features)  ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/720355aefbd050bdf6b5610f70a3a18f27f3c1d14976e01e2be723b7663f4008/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/linux nightly (all features)     ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/f32d038ef9d7cc39e1d98f038031535f8e0ef90edb50aff413a3c9f267b68327/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/windows stable (default features)] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/2a55e03e8998742a022050b842dbbebf25fc602b72b7e3e511258ecbf4c1ce57/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/rustfmt check                    ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/03873ee082726995eff89f89509f25630820022f8062e1ea38616550b9f05073/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/linux stable (with-bytes)        ] \ud83c\udfc1  Job succeeded\n[CI/linux nightly (all features)     ] \ud83c\udfc1  Job succeeded\n[CI/linux beta (default features)    ] \ud83c\udfc1  Job succeeded\n[CI/windows stable (default features)] \ud83c\udfc1  Job succeeded\n[CI/linux stable (default features)  ] \ud83c\udfc1  Job succeeded\n[CI/rustfmt check                    ] \ud83c\udfc1  Job succeeded\n[CI/Check sync-readme                ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}