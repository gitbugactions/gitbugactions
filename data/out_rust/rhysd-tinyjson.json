{
    "repository": "rhysd/tinyjson",
    "clone_url": "https://github.com/rhysd/tinyjson.git",
    "timestamp": "2023-05-30T09:08:38.342476Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/clippy and rustfmt] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/unit tests        ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/examples          ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/clippy and rustfmt]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/unit tests        ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/examples          ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/unit tests        ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/examples          ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/clippy and rustfmt]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/unit tests        ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/clippy and rustfmt]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/examples          ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/clippy and rustfmt]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rhysd-tinyjson] user=0 workdir=\n[CI/unit tests        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rhysd-tinyjson] user=0 workdir=\n[CI/examples          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rhysd-tinyjson] user=0 workdir=\n[CI/clippy and rustfmt]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=stable\n[CI/unit tests        ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=stable\n[CI/examples          ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=stable\n[CI/clippy and rustfmt] \u2b50 Run Pre dtolnay/rust-toolchain@stable\n[CI/unit tests        ] \u2b50 Run Pre dtolnay/rust-toolchain@stable\n[CI/examples          ] \u2b50 Run Pre dtolnay/rust-toolchain@stable\n[CI/unit tests        ]   \u2705  Success - Pre dtolnay/rust-toolchain@stable\n[CI/examples          ]   \u2705  Success - Pre dtolnay/rust-toolchain@stable\n[CI/clippy and rustfmt]   \u2705  Success - Pre dtolnay/rust-toolchain@stable\n[CI/unit tests        ] \ud83e\uddea  Matrix: map[os:ubuntu-latest]\n[CI/clippy and rustfmt] \u2b50 Run Main actions/checkout@v3\n[CI/unit tests        ] \u2b50 Run Main actions/checkout@v3\n[CI/examples          ] \u2b50 Run Main actions/checkout@v3\n[CI/unit tests        ]   \u2705  Success - Main actions/checkout@v3\n[CI/clippy and rustfmt]   \u2705  Success - Main actions/checkout@v3\n[CI/examples          ]   \u2705  Success - Main actions/checkout@v3\n[CI/clippy and rustfmt] \u2b50 Run Main dtolnay/rust-toolchain@stable\n[CI/unit tests        ] \u2b50 Run Main dtolnay/rust-toolchain@stable\n[CI/examples          ] \u2b50 Run Main dtolnay/rust-toolchain@stable\n[CI/unit tests        ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[CI/clippy and rustfmt]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[CI/examples          ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[CI/clippy and rustfmt]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[CI/unit tests        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[CI/examples          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[CI/clippy and rustfmt] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/unit tests        ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/examples          ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/clippy and rustfmt]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/examples          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/unit tests        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/unit tests        ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/examples          ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/clippy and rustfmt]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/clippy and rustfmt]   \u2699  ::set-output:: toolchain=stable\n[CI/examples          ]   \u2699  ::set-output:: toolchain=stable\n[CI/unit tests        ]   \u2699  ::set-output:: toolchain=stable\n[CI/clippy and rustfmt] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/examples          ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/unit tests        ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/examples          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/clippy and rustfmt]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/unit tests        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/clippy and rustfmt]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/examples          ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/unit tests        ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/clippy and rustfmt]   \u2699  ::set-output:: targets=\n[CI/clippy and rustfmt]   \u2699  ::set-output:: components= --component rustfmt --component clippy\n[CI/clippy and rustfmt]   \u2699  ::set-output:: downgrade=\n[CI/unit tests        ]   \u2699  ::set-output:: targets=\n[CI/unit tests        ]   \u2699  ::set-output:: components=\n[CI/unit tests        ]   \u2699  ::set-output:: downgrade=\n[CI/examples          ]   \u2699  ::set-output:: downgrade=\n[CI/examples          ]   \u2699  ::set-output:: targets=\n[CI/examples          ]   \u2699  ::set-output:: components=\n[CI/unit tests        ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/clippy and rustfmt] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/examples          ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/unit tests        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/examples          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/clippy and rustfmt]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/unit tests        ]   | info: downloading installer\n[CI/examples          ]   | info: downloading installer\n[CI/clippy and rustfmt]   | info: downloading installer\n[CI/unit tests        ]   | info: profile set to 'default'\n[CI/unit tests        ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/unit tests        ]   | info: skipping toolchain installation\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | \n[CI/unit tests        ]   | Rust is installed now. Great!\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | To get started you may need to restart your current shell.\n[CI/unit tests        ]   | This would reload your PATH environment variable to include\n[CI/unit tests        ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | To configure your current shell, run:\n[CI/unit tests        ]   | source \"$HOME/.cargo/env\"\n[CI/unit tests        ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/examples          ]   | \n[CI/examples          ]   | info: profile set to 'default'\n[CI/examples          ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/examples          ]   | info: skipping toolchain installation\n[CI/examples          ]   | \n[CI/examples          ]   | Rust is installed now. Great!\n[CI/examples          ]   | \n[CI/examples          ]   | To get started you may need to restart your current shell.\n[CI/examples          ]   | This would reload your PATH environment variable to include\n[CI/examples          ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/examples          ]   | \n[CI/examples          ]   | To configure your current shell, run:\n[CI/examples          ]   | source \"$HOME/.cargo/env\"\n[CI/examples          ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/clippy and rustfmt]   | info: profile set to 'default'\n[CI/clippy and rustfmt]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/clippy and rustfmt]   | info: skipping toolchain installation\n[CI/clippy and rustfmt]   | \n[CI/clippy and rustfmt]   | \n[CI/clippy and rustfmt]   | Rust is installed now. Great!\n[CI/clippy and rustfmt]   | \n[CI/clippy and rustfmt]   | To get started you may need to restart your current shell.\n[CI/clippy and rustfmt]   | This would reload your PATH environment variable to include\n[CI/clippy and rustfmt]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/clippy and rustfmt]   | \n[CI/clippy and rustfmt]   | To configure your current shell, run:\n[CI/clippy and rustfmt]   | source \"$HOME/.cargo/env\"\n[CI/clippy and rustfmt]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/unit tests        ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/unit tests        ] \u2b50 Run Main rustup toolchain install stable\n[CI/clippy and rustfmt]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/examples          ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/examples          ] \u2b50 Run Main rustup toolchain install stable\n[CI/clippy and rustfmt] \u2b50 Run Main rustup toolchain install stable\n[CI/unit tests        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/examples          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/clippy and rustfmt]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/examples          ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/unit tests        ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/examples          ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/examples          ]   | info: downloading component 'cargo'\n[CI/examples          ]   | info: downloading component 'rust-std'\n[CI/unit tests        ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/unit tests        ]   | info: downloading component 'cargo'\n[CI/clippy and rustfmt]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/unit tests        ]   | info: downloading component 'rust-std'\n[CI/clippy and rustfmt]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/clippy and rustfmt]   | info: downloading component 'cargo'\n[CI/clippy and rustfmt]   | info: downloading component 'clippy'\n[CI/clippy and rustfmt]   | info: downloading component 'rust-std'\n[CI/unit tests        ]   | info: downloading component 'rustc'\n[CI/examples          ]   | info: downloading component 'rustc'\n[CI/clippy and rustfmt]   | info: downloading component 'rustc'\n[CI/examples          ]   | info: installing component 'cargo'\n[CI/clippy and rustfmt]   | info: downloading component 'rustfmt'\n[CI/clippy and rustfmt]   | info: installing component 'cargo'\n[CI/unit tests        ]   | info: installing component 'cargo'\n[CI/examples          ]   | info: installing component 'rust-std'\n[CI/clippy and rustfmt]   | info: installing component 'clippy'\n[CI/unit tests        ]   | info: installing component 'rust-std'\n[CI/clippy and rustfmt]   | info: installing component 'rust-std'\n[CI/examples          ]   | info: installing component 'rustc'\n[CI/unit tests        ]   | info: installing component 'rustc'\n[CI/clippy and rustfmt]   | info: installing component 'rustc'\n[CI/examples          ]   | \n[CI/examples          ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/examples          ]   | \n[CI/examples          ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/clippy and rustfmt]   | info: installing component 'rustfmt'\n[CI/examples          ]   \u2705  Success - Main rustup toolchain install stable\n[CI/unit tests        ]   | \n[CI/unit tests        ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/unit tests        ]   \u2705  Success - Main rustup toolchain install stable\n[CI/clippy and rustfmt]   | \n[CI/examples          ] \u2b50 Run Main rustup default stable\n[CI/clippy and rustfmt]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/clippy and rustfmt]   | \n[CI/clippy and rustfmt]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/clippy and rustfmt]   \u2705  Success - Main rustup toolchain install stable\n[CI/unit tests        ] \u2b50 Run Main rustup default stable\n[CI/examples          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/clippy and rustfmt] \u2b50 Run Main rustup default stable\n[CI/unit tests        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/clippy and rustfmt]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/examples          ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/unit tests        ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/clippy and rustfmt]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/examples          ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/examples          ]   | \n[CI/clippy and rustfmt]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/clippy and rustfmt]   | \n[CI/unit tests        ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/unit tests        ]   | \n[CI/examples          ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/examples          ]   | \n[CI/examples          ]   \u2705  Success - Main rustup default stable\n[CI/clippy and rustfmt]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/clippy and rustfmt]   | \n[CI/clippy and rustfmt]   \u2705  Success - Main rustup default stable\n[CI/unit tests        ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/unit tests        ]   | \n[CI/unit tests        ]   \u2705  Success - Main rustup default stable\n[CI/clippy and rustfmt] \u2b50 Run Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/examples          ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/unit tests        ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/unit tests        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/clippy and rustfmt]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/examples          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/clippy and rustfmt]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/unit tests        ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/examples          ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/clippy and rustfmt]   \u2699  ::set-output:: cachekey=2023041684c8\n[CI/examples          ]   \u2699  ::set-output:: cachekey=2023041684c8\n[CI/unit tests        ]   \u2699  ::set-output:: cachekey=2023041684c8\n[CI/clippy and rustfmt] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/unit tests        ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/examples          ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/clippy and rustfmt]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/clippy and rustfmt]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/clippy and rustfmt]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/unit tests        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/examples          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/unit tests        ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/examples          ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/examples          ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/unit tests        ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/clippy and rustfmt] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/examples          ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/unit tests        ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/clippy and rustfmt]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[CI/unit tests        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[CI/examples          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[CI/examples          ]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/clippy and rustfmt]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/unit tests        ]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/clippy and rustfmt] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[CI/unit tests        ] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[CI/examples          ] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[CI/unit tests        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[CI/examples          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[CI/clippy and rustfmt]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[CI/unit tests        ]   \u2705  Success - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[CI/clippy and rustfmt]   \u2705  Success - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[CI/examples          ]   \u2705  Success - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[CI/unit tests        ]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[CI/clippy and rustfmt]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[CI/examples          ]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[CI/clippy and rustfmt] \u2b50 Run Main rustc +stable --version --verbose\n[CI/examples          ] \u2b50 Run Main rustc +stable --version --verbose\n[CI/unit tests        ] \u2b50 Run Main rustc +stable --version --verbose\n[CI/unit tests        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-9.sh] user= workdir=\n[CI/clippy and rustfmt]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-9.sh] user= workdir=\n[CI/examples          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-9.sh] user= workdir=\n[CI/unit tests        ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/unit tests        ]   | binary: rustc\n[CI/unit tests        ]   | commit-hash: 84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc\n[CI/unit tests        ]   | commit-date: 2023-04-16\n[CI/unit tests        ]   | host: x86_64-unknown-linux-gnu\n[CI/unit tests        ]   | release: 1.69.0\n[CI/unit tests        ]   | LLVM version: 15.0.7\n[CI/unit tests        ]   \u2705  Success - Main rustc +stable --version --verbose\n[CI/examples          ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/examples          ]   | binary: rustc\n[CI/examples          ]   | commit-hash: 84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc\n[CI/examples          ]   | commit-date: 2023-04-16\n[CI/examples          ]   | host: x86_64-unknown-linux-gnu\n[CI/examples          ]   | release: 1.69.0\n[CI/examples          ]   | LLVM version: 15.0.7\n[CI/examples          ]   \u2705  Success - Main rustc +stable --version --verbose\n[CI/clippy and rustfmt]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/clippy and rustfmt]   | binary: rustc\n[CI/clippy and rustfmt]   | commit-hash: 84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc\n[CI/clippy and rustfmt]   | commit-date: 2023-04-16\n[CI/clippy and rustfmt]   | host: x86_64-unknown-linux-gnu\n[CI/clippy and rustfmt]   | release: 1.69.0\n[CI/clippy and rustfmt]   | LLVM version: 15.0.7\n[CI/clippy and rustfmt]   \u2705  Success - Main rustc +stable --version --verbose\n[CI/unit tests        ]   \u2699  ::set-output:: cachekey=2023041684c8\n[CI/unit tests        ]   \u2699  ::set-output:: name=stable\n[CI/unit tests        ]   \u2705  Success - Main dtolnay/rust-toolchain@stable\n[CI/examples          ]   \u2699  ::set-output:: cachekey=2023041684c8\n[CI/examples          ]   \u2699  ::set-output:: name=stable\n[CI/examples          ]   \u2705  Success - Main dtolnay/rust-toolchain@stable\n[CI/clippy and rustfmt]   \u2699  ::set-output:: cachekey=2023041684c8\n[CI/clippy and rustfmt]   \u2699  ::set-output:: name=stable\n[CI/clippy and rustfmt]   \u2705  Success - Main dtolnay/rust-toolchain@stable\n[CI/unit tests        ] \u2b50 Run Main Run tests\n[CI/clippy and rustfmt] \u2b50 Run Main cargo fmt --all -- --color always --check\n[CI/examples          ] \u2b50 Run Main Run parse example\n[CI/unit tests        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/examples          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/clippy and rustfmt]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Updating\u001b[0m crates.io index\n[CI/clippy and rustfmt]   \u2705  Success - Main cargo fmt --all -- --color always --check\n[CI/examples          ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Updating\u001b[0m crates.io index\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m Downloading\u001b[0m crates ...\n[CI/examples          ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m Downloading\u001b[0m crates ...\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m ciborium-io v0.2.1\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m clap_lex v0.2.4\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m criterion v0.4.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m autocfg v1.1.0\n[CI/examples          ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m walkdir v2.3.3\n[CI/examples          ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m same-file v1.0.6\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m cfg-if v1.0.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m plotters-svg v0.3.3\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m same-file v1.0.6\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m lazy_static v1.4.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m ciborium-ll v0.2.1\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m num_cpus v1.15.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m itoa v1.0.6\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m tinytemplate v1.2.1\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m memoffset v0.8.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m either v1.8.1\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m os_str_bytes v6.5.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m crossbeam-deque v0.8.3\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m plotters-backend v0.3.4\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m quote v1.0.28\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m atty v0.2.14\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m walkdir v2.3.3\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m scopeguard v1.1.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m cast v0.3.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m bitflags v1.3.2\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m oorandom v11.1.3\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m proc-macro2 v1.0.59\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m crossbeam-utils v0.8.15\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m anes v0.1.6\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m num-traits v0.2.15\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serde_derive v1.0.163\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m ryu v1.0.13\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m half v1.8.2\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m crossbeam-epoch v0.9.14\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m textwrap v0.16.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m indexmap v1.9.3\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m criterion-plot v0.5.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m unicode-ident v1.0.9\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serde v1.0.163\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m rayon-core v1.11.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m ciborium v0.2.1\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m crossbeam-channel v0.5.8\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m hashbrown v0.12.3\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m plotters v0.3.4\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m itertools v0.10.5\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serde_json v1.0.96\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m rayon v1.7.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m regex v1.8.3\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m syn v2.0.18\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m clap v3.2.25\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m regex-syntax v0.7.2\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m libc v0.2.144\n[CI/examples          ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m same-file v1.0.6\n[CI/examples          ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m tinyjson v2.5.1 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rhysd-tinyjson)\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[36m    Blocking\u001b[0m waiting for file lock on build directory\n[CI/examples          ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m walkdir v2.3.3\n[CI/examples          ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m dev [unoptimized + debuginfo] target(s) in 6.07s\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m autocfg v1.1.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m proc-macro2 v1.0.59\n[CI/examples          ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `target/debug/examples/parse`\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m unicode-ident v1.0.9\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m quote v1.0.28\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m crossbeam-utils v0.8.15\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m libc v0.2.144\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m cfg-if v1.0.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde v1.0.163\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m scopeguard v1.1.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m either v1.8.1\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde_json v1.0.96\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m rayon-core v1.11.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m ciborium-io v0.2.1\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m hashbrown v0.12.3\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m os_str_bytes v6.5.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m plotters-backend v0.3.4\n[CI/examples          ]   \u2705  Success - Main Run parse example\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m half v1.8.2\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m itoa v1.0.6\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m ryu v1.0.13\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m cast v0.3.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m textwrap v0.16.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m bitflags v1.3.2\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m regex-syntax v0.7.2\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m anes v0.1.6\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m lazy_static v1.4.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m oorandom v11.1.3\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m tinyjson-bench v0.0.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rhysd-tinyjson/bench)\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m tinyjson v2.5.1 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rhysd-tinyjson)\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m itertools v0.10.5\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m clap_lex v0.2.4\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m memoffset v0.8.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m crossbeam-epoch v0.9.14\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m indexmap v1.9.3\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m num-traits v0.2.15\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m plotters-svg v0.3.3\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m ciborium-ll v0.2.1\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m crossbeam-channel v0.5.8\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m clap v3.2.25\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m num_cpus v1.15.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m crossbeam-deque v0.8.3\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m atty v0.2.14\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m regex v1.8.3\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m syn v2.0.18\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m criterion-plot v0.5.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m rayon v1.7.0\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m plotters v0.3.4\n[CI/clippy and rustfmt] \u2b50 Run Main cargo clippy --color always --all -- -D warnings\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde_derive v1.0.163\n[CI/examples          ] \u2b50 Run Main Run minify example\n[CI/clippy and rustfmt]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m ciborium v0.2.1\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m tinytemplate v1.2.1\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m criterion v0.4.0\n[CI/clippy and rustfmt]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Updating\u001b[0m crates.io index\n[CI/clippy and rustfmt]   | \u001b[0m\u001b[0m\u001b[1m\u001b[36m    Blocking\u001b[0m waiting for file lock on build directory\n[CI/examples          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m test [unoptimized + debuginfo] target(s) in 25.75s\n[CI/clippy and rustfmt]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Checking\u001b[0m tinyjson v2.5.1 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rhysd-tinyjson)\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m unittests src/lib.rs (target/debug/deps/tinyjson-6a815e265d407971)\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | running 0 tests\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m tests/generator.rs (target/debug/deps/generator-bc18fe4783d5ca20)\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | running 9 tests\n[CI/unit tests        ]   | test test_array ... ok\n[CI/unit tests        ]   | test test_format_object ... ok\n[CI/unit tests        ]   | test test_format_array ... ok\n[CI/unit tests        ]   | test test_invalid_number ... ok\n[CI/unit tests        ]   | test test_null ... ok\n[CI/unit tests        ]   | test test_number ... ok\n[CI/unit tests        ]   | test test_bool ... ok\n[CI/unit tests        ]   | test test_object ... ok\n[CI/unit tests        ]   | test test_string ... ok\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | test result: ok. 9 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m tests/parser.rs (target/debug/deps/parser-dc5fbae806d17062)\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | running 6 tests\n[CI/unit tests        ]   | test test_number_failure_edge_cases ... ok\n[CI/unit tests        ]   | test test_number_success_edge_cases ... ok\n[CI/unit tests        ]   | test test_parse_str ... ok\n[CI/unit tests        ]   | test test_reference_lifetime ... ok\n[CI/unit tests        ]   | test test_position ... ok\n[CI/unit tests        ]   | test test_utf16_surrogate_pair ... ok\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m tests/query.rs (target/debug/deps/query-102e75a135ffd907)\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | running 11 tests\n[CI/unit tests        ]   | test test_query_create ... ok\n[CI/unit tests        ]   | test test_query_array_index ... ok\n[CI/unit tests        ]   | test test_query_exists ... ok\n[CI/unit tests        ]   | test test_query_mixed ... ok\n[CI/unit tests        ]   | test test_query_mut_array_index ... ok\n[CI/unit tests        ]   | test test_query_mut_object_key ... ok\n[CI/unit tests        ]   | test test_query_find ... ok\n[CI/unit tests        ]   | test test_query_get ... ok\n[CI/unit tests        ]   | test test_query_mut_value_predicate ... ok\n[CI/unit tests        ]   | test test_query_object_key ... ok\n[CI/unit tests        ]   | test test_query_value_predicate ... ok\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | test result: ok. 11 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m tests/testsuites.rs (target/debug/deps/testsuites-a4d85bf1cd79633c)\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | running 7 tests\n[CI/unit tests        ]   | test test_json_org_success ... ok\n[CI/unit tests        ]   | test test_json_org_failure ... ok\n[CI/unit tests        ]   | test test_json_test_suite_transform ... ok\n[CI/unit tests        ]   | test test_json_test_suite_implementation_defined ... ok\n[CI/unit tests        ]   | test test_json_test_suite_success ... ok\n[CI/unit tests        ]   | test test_json_test_suite_failure ... ok\n[CI/unit tests        ]   | test test_json_schema_test_suite ... ok\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | test result: ok. 7 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.20s\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m tests/value.rs (target/debug/deps/value-b964533e63d80e5e)\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | running 15 tests\n[CI/unit tests        ]   | test test_access_to_array_element_with_index ... ok\n[CI/unit tests        ]   | test test_access_with_index_operator ... ok\n[CI/unit tests        ]   | test test_equality_edge_cases ... ok\n[CI/unit tests        ]   | test test_access_not_exist_value - should panic ... ok\n[CI/unit tests        ]   | test test_equality_property ... ok\n[CI/unit tests        ]   | test test_from ... ok\n[CI/unit tests        ]   | test test_get ... ok\n[CI/unit tests        ]   | test test_get_mut ... ok\n[CI/unit tests        ]   | test test_index_mut_array ... ok\n[CI/unit tests        ]   | test test_index_mut_object ... ok\n[CI/unit tests        ]   | test test_is_xxx ... ok\n[CI/unit tests        ]   | test test_not_equal ... ok\n[CI/unit tests        ]   | test test_parse_format ... ok\n[CI/unit tests        ]   | test test_try_into ... ok\n[CI/unit tests        ]   | test test_parse_stringify ... ok\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | test result: ok. 15 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.05s\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m unittests src/lib.rs (target/debug/deps/tinyjson_bench-a9b7c519643e5ce5)\n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Doc-tests\u001b[0m tinyjson\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | running 0 tests\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | \n[CI/unit tests        ]   | running 67 tests\n[CI/clippy and rustfmt]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Checking\u001b[0m tinyjson-bench v0.0.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/rhysd-tinyjson/bench)\n[CI/examples          ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[36m    Blocking\u001b[0m waiting for file lock on build directory\n[CI/clippy and rustfmt]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m dev [unoptimized + debuginfo] target(s) in 5.40s\n[CI/examples          ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m dev [unoptimized + debuginfo] target(s) in 0.29s\n[CI/examples          ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `target/debug/examples/minify`\n[CI/examples          ]   \u2705  Success - Main Run minify example\n[CI/clippy and rustfmt]   \u2705  Success - Main cargo clippy --color always --all -- -D warnings\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 511) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::HashMap<String,JsonValue> (line 860) ... ok\n[CI/unit tests        ]   | test src/parser.rs - parser::JsonParser (line 80) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue::is_number (line 171) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 476) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 411) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 670) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 519) ... ok\n[CI/unit tests        ]   | test src/generator.rs - generator::JsonGenerator (line 35) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::UnexpectedValue (line 684) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 403) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 583) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 467) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 650) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 574) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 12) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 640) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::UnexpectedValue::value (line 700) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue::stringify (line 265) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 629) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue::get (line 123) ... ok\n[CI/unit tests        ]   | test src/query.rs - query::JsonQueryMut<'val>::get (line 245) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::bool (line 784) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue::format_to (line 311) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 390) ... ok\n[CI/unit tests        ]   | test src/generator.rs - generator::stringify (line 297) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue::get_mut (line 139) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::f64 (line 765) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 528) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 726) ... ok\n[CI/unit tests        ]   | test src/query.rs - query::ChildIndex (line 273) ... ok\n[CI/unit tests        ]   | test src/query.rs - query::JsonQueryMut<'val>::find (line 225) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 420) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue::is_string (line 190) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue::query (line 336) ... ok\n[CI/unit tests        ]   | test src/parser.rs - parser::JsonParseError::column (line 41) ... ok\n[CI/unit tests        ]   | test src/query.rs - query::JsonQuery<'val>::find (line 88) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue::is_object (line 242) ... ok\n[CI/unit tests        ]   | test src/generator.rs - generator::JsonGenerator<'indent,W>::indent (line 58) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue::is_bool (line 156) ... ok\n[CI/unit tests        ]   | test src/query.rs - query::JsonQuery<'val>::get (line 117) ... ok\n[CI/unit tests        ]   | test src/generator.rs - generator::format (line 316) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 457) ... ok\n[CI/unit tests        ]   | test src/lib.rs - (line 21) ... ok\n[CI/unit tests        ]   | test src/query.rs - query::JsonQuery (line 12) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 498) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 619) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue::is_array (line 223) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::() (line 822) ... ok\n[CI/unit tests        ]   | test src/query.rs - query::JsonQueryMut (line 145) ... ok\n[CI/unit tests        ]   | test src/query.rs - query::JsonQueryMut<'val>::child (line 178) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue::write_to (line 278) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue::query_mut (line 366) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue::is_null (line 208) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::Vec<JsonValue> (line 841) ... ok\n[CI/unit tests        ]   | test src/query.rs - query::JsonQueryMut<'val>::child_by (line 196) ... ok\n[CI/unit tests        ]   | test src/query.rs - query::JsonQuery<'val>::child_by (line 62) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue::format (line 293) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 660) ... ok\n[CI/unit tests        ]   | test src/parser.rs - parser::JsonParseError::line (line 30) ... ok\n[CI/unit tests        ]   | test src/parser.rs - parser::JsonParseError (line 11) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::JsonValue (line 564) ... ok\n[CI/unit tests        ]   | test src/query.rs - query::JsonQuery<'val>::child (line 47) ... ok\n[CI/unit tests        ]   | test src/generator.rs - generator::JsonGenerator<'indent,W>::generate (line 264) ... ok\n[CI/unit tests        ]   | test src/parser.rs - parser::JsonValue (line 442) ... ok\n[CI/unit tests        ]   | test src/json_value.rs - json_value::String (line 803) ... ok\n[CI/unit tests        ]   | test src/query.rs - query::JsonQuery<'val>::exists (line 102) ... ok\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | test result: ok. 67 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.01s\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Doc-tests\u001b[0m tinyjson-bench\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | running 0 tests\n[CI/unit tests        ]   | \n[CI/unit tests        ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/unit tests        ]   | \n[CI/unit tests        ]   \u2705  Success - Main Run tests\n[CI/clippy and rustfmt] \u2b50 Run Post dtolnay/rust-toolchain@stable\n[CI/examples          ] \u2b50 Run Main Run json_value example\n[CI/unit tests        ] \u2b50 Run Post dtolnay/rust-toolchain@stable\n[CI/unit tests        ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[CI/clippy and rustfmt]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[CI/unit tests        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[CI/clippy and rustfmt]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[CI/examples          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[CI/examples          ]   \u274c  Failure - Main Run json_value example\n[CI/clippy and rustfmt] context canceled\n[CI/clippy and rustfmt] context canceled\n[CI/clippy and rustfmt] context canceled\n[CI/clippy and rustfmt] context canceled\n[CI/clippy and rustfmt] context canceled\n[CI/unit tests        ] context canceled\n[CI/unit tests        ] context canceled\n[CI/unit tests        ] context canceled\n[CI/unit tests        ] context canceled\n[CI/unit tests        ] context canceled\n[CI/unit tests        ] context canceled\n[CI/unit tests        ] context canceled\n[CI/unit tests        ] context canceled\n[CI/unit tests        ] context canceled\n[CI/unit tests        ] context canceled\n[CI/unit tests        ]   \u2705  Success - Post dtolnay/rust-toolchain@stable\n[CI/clippy and rustfmt] context canceled\n[CI/clippy and rustfmt] context canceled\n[CI/clippy and rustfmt] context canceled\n[CI/clippy and rustfmt] context canceled\n[CI/clippy and rustfmt] context canceled\n[CI/clippy and rustfmt]   \u2705  Success - Post dtolnay/rust-toolchain@stable\n[CI/examples          ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/b36948000182bd6a7af74d6f327ac872abe7d37a90c7c061b0c80821dbdd5b3f/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/examples          ] \u2b50 Run Post dtolnay/rust-toolchain@stable\n[CI/examples          ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[CI/examples          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[CI/clippy and rustfmt] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/3eb6aa2588445d7747966e7f6264f437e50f6dac9b63d31c6632056a5ff35334?force=1&v=1\": context deadline exceeded\n[CI/clippy and rustfmt] \ud83c\udfc1  Job failed\n[CI/unit tests        ] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/89c58a98f42576c622baee4939f7387dc22f10ab0d1e2547ee4e43c88aef189f?force=1&v=1\": context deadline exceeded\n[CI/unit tests        ] \ud83c\udfc1  Job failed\n[CI/examples          ]   \u2705  Success - Post dtolnay/rust-toolchain@stable\n[CI/examples          ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}